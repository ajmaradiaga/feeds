<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-RESTful-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - ABAP RESTful Application Programming Model</title>
  <updated>2025-09-23T23:00:07.029340+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP RESTful Application Programming Model/pd-p/7e44126e-7b27-471d-a379-df205a12b1ff" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP RESTful Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106</id>
    <title>SAP BTP Hackathon at SAPHILA 2025: Celebrating the Winners and Innovation in Action</title>
    <updated>2025-08-13T09:12:43.763000+02:00</updated>
    <author>
      <name>winklero</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/426853</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;A few months ago, we shared our excitement about the launch of the first-ever &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-afsug-members/ba-p/14001231" target="_blank"&gt;SAP BTP Hackathon in Africa in joined collaboration of AFSUG and SAP&lt;/A&gt;, highlighting the unique opportunity it offered for AFSUG members to bring their creativity and problem-solving skills to the forefront of the SAP community.&amp;nbsp;Now, with the event behind us, it’s time to reflect on what unfolded and celebrate the teams and ideas that made this inaugural Hackathon truly special.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;From Ideation to Demo Jam: A Journey of Collaboration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;As outlined in the previous blog, the hackathon was more than just a competition, it was a journey. Eighteen teams, representing a broad cross-section of AFSUG members, embarked on an eight-week sprint, supported by SAP BTP experts and coaches. The focus was on building real-world solutions using SAP BTP components like SAP Build, SAP HANA Cloud, SAP Integration Suite and ABAP Cloud amongst other SAP BTP based Services &amp;amp; Solutions.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;After intensive enablement and development sessions, three teams emerged as finalists and were invited to present their solutions live at SAPHILA 2025’s Demo Jam. The energy in the room was palpable as each team showcased how SAP BTP could be harnessed to solve pressing business challenges.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_9-1754393553994.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296559i65EFF3CD8612C2A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_9-1754393553994.png" alt="winklero_9-1754393553994.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;And the Winner Is… PwC South Africa!&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_0-1754393299694.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296543iCE5C674A6617840E/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_0-1754393299694.jpeg" alt="winklero_0-1754393299694.jpeg" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;In a closely contested finale, the SAPHILA audience voted PwC South Africa as the overall winner for their AI-driven legal services platform “Legal Ease”.&amp;nbsp;This solution stood out for its innovative use of AI to simplify legal document processing and understanding, a pain point for many businesses and consumers alike. “Legal Ease” enables users to scan and summarize complex contracts, ask questions in natural language, and receive clear, actionable insights. The platform even supports translation into local languages and integrates with knowledge bases for related services. &lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;What impressed both the jury and the audience was not just the technical sophistication, but the clear business value: “Legal Ease” addresses real frustrations around contract transparency, billing and accessibility, with the potential to transform how legal services are delivered in Africa and beyond.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Honouring the Finalists: Debswana Diamond Company and Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Let’s not forget the other two finalists, who also delivered outstanding solutions:&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Debswana Diamond Company&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;tackled overtime management with an AI-powered assistant that streamlines scheduling, reduces costs and supports employee well-being.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Bell Equipment&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;automated shipment tracking and document processing, helping to prevent stock shortages and improve logistics efficiency.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;SPAN&gt;Both teams demonstrated the breadth of innovation possible with SAP BTP and set a high bar for future Hackathons.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_2-1754393465394.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296552i4ABBA6DEF33DF299/image-size/large?v=v2&amp;amp;px=999" role="button" title="winklero_2-1754393465394.png" alt="winklero_2-1754393465394.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Reflections and What’s Next&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The Hackathon’s main objective was to foster deep collaboration between SAP and its customers, giving local teams a hands-on opportunity to explore and build with SAP BTP.&amp;nbsp;The quality and diversity of solutions, especially the creative use of AI and automation, highlight the immense potential within the African SAP community.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Amanda Gibbs, CEO of AFSUG, summed it up perfectly:&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;“It is inspiring to witness what can be achieved in just eight weeks using SAP BTP;&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;EM&gt;&lt;SPAN&gt;we’ve seen incredible progress and innovation.”&lt;/SPAN&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5" color="#3366FF"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Join the Conversation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Congratulations again to all teams who participated and especially to PwC South Africa for their winning solution! If you were inspired by the SAP BTP Hackathon or have thoughts on how SAP BTP can drive innovation in your organization, I’d love to hear from you in the comments.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#3366FF"&gt;&lt;STRONG&gt;And if you missed out this year,&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;keep an eye out for future SAP BTP Hackathons - this is just the beginning!&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_3-1754393500871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296553iB355DF2E2218111A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_3-1754393500871.png" alt="winklero_3-1754393500871.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_4-1754393507094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296554i19D3E337CCE34F01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_4-1754393507094.png" alt="winklero_4-1754393507094.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_5-1754393513173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296555i1F8DCACD879B51EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_5-1754393513173.png" alt="winklero_5-1754393513173.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="winklero_8-1754393531840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296558iDD76EEFFC71232AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_8-1754393531840.png" alt="winklero_8-1754393531840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="winklero_7-1754393525555.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296557iBED54F1BAA1636EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="winklero_7-1754393525555.png" alt="winklero_7-1754393525555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-btp-hackathon-at-saphila-2025-celebrating-the-winners-and-innovation-in/ba-p/14172106"/>
    <published>2025-08-13T09:12:43.763000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-find-cds-views-in-s-4hana-public-cloud-edition/ba-p/14181383</id>
    <title>How to find CDS views in S/4HANA Public Cloud Edition</title>
    <updated>2025-08-15T06:27:25.148000+02:00</updated>
    <author>
      <name>MikeDoyle</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13892</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1866859110"&gt;TLDR&lt;/H3&gt;&lt;P&gt;With 3-tier S/4HANA Public Cloud Edition you can now connect your ABAP Developer Tools (ADT, in Eclipse) directly to the system.&amp;nbsp; You can browse development objects including CDS views. Creating an ABAP Repository Tree allows you to browse by component and release status, to find released views to use in your extensions&lt;/P&gt;&lt;H3 id="toc-hId-1670345605"&gt;Remind me, what is&amp;nbsp;S/4HANA Public Cloud Edition?&lt;/H3&gt;&lt;P&gt;S/4HANA Public Cloud Edition (or Public CE) is SAP's &lt;A href="https://csrc.nist.gov/glossary/term/software_as_a_service" target="_blank" rel="noopener nofollow noreferrer"&gt;SaaS&lt;/A&gt; ERP. Formerly known as S/4HANA Cloud, and as S/4HANA Public Cloud, this flavour of S/4 emphasises a tight fit to standard business processes.&amp;nbsp; The solution is hosted and managed by SAP. Only clean-core extensions are possible and upgrades happen according to a published schedule&lt;/P&gt;&lt;H3 id="toc-hId-1473832100"&gt;Why does&amp;nbsp;S/4HANA Public Cloud Edition matter?&lt;/H3&gt;&lt;P&gt;Whilst the largest customers tend to draw most of the limelight in the SAP world, there are only so many of them.&amp;nbsp; As you widen your gaze to include progressively smaller and smaller customers their number increases more than proportionately.&amp;nbsp; In other words there are &lt;EM&gt;a lot&lt;/EM&gt; more companies with 10,000 employees that there are with 100,000 employees.&amp;nbsp; There are a &lt;EM&gt;heck of a lot&lt;/EM&gt; more companies with 1000 employees that there are with 10,000. This means that the total market is huge, even if each individual subscription is smaller&lt;/P&gt;&lt;P&gt;Ceteris paribus, these smaller customers are more likely to go for Public CE, because it can be more cost effective for them.&amp;nbsp; Indeed the inability to perform 'dirty' extensions &amp;amp; enhancements, and the inability to stay on a outdated release can be seen as &lt;EM&gt;advantages&lt;/EM&gt; of Public CE.&amp;nbsp; SAP's vision is that over time more and more customers will switch to Public CE, some after 'cleaning up' their legacy enhancements.&amp;nbsp; They hope that, over time, larger and larger customers will sign up&lt;/P&gt;&lt;H3 id="toc-hId-1277318595"&gt;How can&amp;nbsp;we extend S/4HANA Public Cloud Edition?&lt;/H3&gt;&lt;P&gt;Whilst a fit to standard processes is the goal, Public CE &lt;A href="https://learning.sap.com/learning-journeys/practicing-clean-core-extensibility-for-sap-s-4hana-cloud" target="_blank" rel="noopener noreferrer"&gt;can be extended&lt;/A&gt; and enhanced if needed.&amp;nbsp; There might be a small variation to fit a competitive advantage that that particular customer has, their 'special sauce' if you like.&amp;nbsp; Historically these extensions could be categorised as&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;On-stack key-user extensions&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Side-by-side developer-built extensions on BTP&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;To support the latter type we expose data via the SAP-standard &lt;A href="https://api.sap.com/products/SAPS4HANACloud/apis/all" target="_blank" rel="noopener noreferrer"&gt;published APIs&lt;/A&gt;, by creating custom CDS views or by creating custom business objects with a back-end service enabled. Events can also trigger extensions on BTP&lt;/P&gt;&lt;H3 id="toc-hId-1080805090"&gt;Why are&amp;nbsp;&lt;EM&gt;released&lt;/EM&gt; views precious?&lt;/H3&gt;&lt;P&gt;To expose &lt;EM&gt;standard&lt;/EM&gt; data that isn't part of a published API we must (if 2-tier) use the custom CDS view option. We can only use &lt;EM&gt;released&lt;/EM&gt; views as sources, and only a fraction of views are released.&amp;nbsp; Why is that?&amp;nbsp; Well, releasing a view is a big deal for SAP because it represents a promise to keep that view available and up to date.&amp;nbsp; If this wasn't the case our extensions could break every upgrade cycle, as standard views or fields on standard views were removed.&amp;nbsp; This would limit the viability of Public CE altogether&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hence finding released views with the right data is an important part of extension design.&amp;nbsp; Happily, that task is getting easier, with the increased prevalence of the 3-tier landscape with Public CE&lt;/P&gt;&lt;H3 id="toc-hId-884291585"&gt;Why are 3 tiers better than 2?&lt;/H3&gt;&lt;P&gt;When my first customer went live with Public CE in 2019 all setups had Test and Prod environments only.&amp;nbsp; Having a background at big on-prem customers, with their 5 or 6 tier landscapes (e.g. Sandbox / Dev / Test / Pre-Prod / Prod / Training) I found this pretty scary!&lt;/P&gt;&lt;P&gt;Now all new Public CE customers get &lt;A href="https://blog.sap-press.com/the-sap-s4hana-cloud-three-system-landscape" target="_blank" rel="noopener nofollow noreferrer"&gt;3 tiers&lt;/A&gt; ( Dev / Test / Prod ) and existing customers are being migrated.&amp;nbsp; The Dev environment has 2 tenants, for development and for customizing. Under the hood, these represent client 80 and client 100. This facilitates the introduction of a new enhancement technique.&amp;nbsp; Using the embedded ABAP Cloud environment we can use RAP (the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/abap-restful-application-programming-model?version=s4hana_cloud" target="_blank" rel="noopener noreferrer"&gt;ABAP Restful Programming Model&lt;/A&gt;) to build OData services. This gives far greater flexibility that we get &lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('F1866A')/S35" target="_blank" rel="noopener nofollow noreferrer"&gt;building custom CDS views in a Fiori app&lt;/A&gt; (as a 'key-user')&lt;/P&gt;&lt;P&gt;This on-stack extensibility was known for a while as&amp;nbsp;&lt;EM&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/embedded-steampunk-some-more-details-for-abap-developers/ba-p/13532714" target="_blank"&gt;Embedded Steampunk&lt;/A&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Of course, finding&amp;nbsp;&lt;EM&gt;released &lt;/EM&gt;CDS views is still important, because ABAP cloud will only allow us to use released CDS views as data sources. So what's the best way to find them?&lt;/P&gt;&lt;H3 id="toc-hId-687778080"&gt;What's the best way to find released CDS views in a 3-tier Public CE landscape?&lt;/H3&gt;&lt;P&gt;Once you've &lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/6aa39f1ac05441e5a23f484f31e477e7/4b962c243a3342189f8af460cc444883.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;connected&lt;/A&gt; your &lt;A href="https://tools.hana.ondemand.com/#abap" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP Development Tools&lt;/A&gt; to your S/4HANA Public Cloud Edition system (development tenant/client 80) you can browse all of the development objects.&amp;nbsp; This is something that just wasn't possible before, because we were limited to what we could see in various Fiori apps&lt;/P&gt;&lt;P&gt;If you try to browse all of the CDS views, you will likely hit an issue as there are just too many to be rendered.&amp;nbsp; I recommend instead building your own ABAP Repository Tree (via File-&amp;gt;New).&lt;/P&gt;&lt;P&gt;On the first screen (of the repo tree wizard) select Core Data Services&lt;/P&gt;&lt;H3 id="toc-hId-491264575"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 12.24.56 pm.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301259iCB813189376FFE23/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 12.24.56 pm.png" alt="Screenshot 2025-08-15 at 12.24.56 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;On the next screen, in the&amp;nbsp;&lt;EM&gt;Selected Tree Levels,&lt;/EM&gt;&amp;nbsp;remove package from level 3, and replace it with &lt;EM&gt;Application Component&lt;/EM&gt;.&amp;nbsp; Then select drag the &lt;EM&gt;API State&lt;/EM&gt; level over to level 4.&lt;/P&gt;&lt;H3 id="toc-hId-294751070"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 1.10.24 pm.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301263iD8B6EF4DC1120DB7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 1.10.24 pm.png" alt="Screenshot 2025-08-15 at 1.10.24 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;Click Finish. Now, in the tree, you can open &lt;EM&gt;Core Data Services&lt;/EM&gt;, &lt;EM&gt;Data Definitions&lt;/EM&gt; and then the component of your choice.&amp;nbsp; The released views are found under &lt;EM&gt;USE_IN_CLOUD_DEVELOPMENT&lt;/EM&gt;. You can open the individual view to see the definition.&lt;/P&gt;&lt;H3 id="toc-hId-98237565"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 1.15.25 pm.png" style="width: 289px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301264i0E1F277A115AF0B2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 1.15.25 pm.png" alt="Screenshot 2025-08-15 at 1.15.25 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;You can confirm that the view is released by considering the &lt;EM&gt;API State&lt;/EM&gt; tab in the properties, on the bottom right of your Eclipse screen. &lt;EM&gt;C1 Use System Internally&lt;/EM&gt; is the key part.&amp;nbsp; If it is &lt;EM&gt;Released&lt;/EM&gt; you should be able to use this view in a custom CDS view or in RAP development&lt;/P&gt;&lt;H3 id="toc-hId--173507309"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 1.21.02 pm.png" style="width: 333px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301265i11086DA4417CA3A0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 1.21.02 pm.png" alt="Screenshot 2025-08-15 at 1.21.02 pm.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;Because you are connected to your dev system you can see the release status of every view which is available on your current release&lt;/P&gt;&lt;H3 id="toc-hId--370020814"&gt;What do you think?&lt;/H3&gt;&lt;P&gt;Are you an expert on extensions already?&amp;nbsp; Or are you surprised at how much scope there is for extension on S/4HANA Public Cloud Edition?&amp;nbsp; Extensions certainly got a little easier, now that we can see every view available. Let me know in the comments what you think, and if you have any tips for finding views&lt;/P&gt;&lt;P&gt;I would love to find a good way to find CDS views which use a given table as a source (directly or indirectly).&amp;nbsp; This &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-q-a/unreleased-cds-views/qaq-p/12675263" target="_blank"&gt;can be done in the View Browser app&lt;/A&gt;, but we &lt;A href="https://me.sap.com/notes/3439701" target="_blank" rel="noopener noreferrer"&gt;won't see all of the views&lt;/A&gt;. Perhaps in future SAP could &lt;A href="https://me.sap.com/notes/28022" target="_blank" rel="noopener noreferrer"&gt;support using the where-used feature&lt;/A&gt; in ADT&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-find-cds-views-in-s-4hana-public-cloud-edition/ba-p/14181383"/>
    <published>2025-08-15T06:27:25.148000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266</id>
    <title>Random Numbers and Probability Distributions in the ABAP Environments for 2508</title>
    <updated>2025-08-18T13:00:51.072000+02:00</updated>
    <author>
      <name>kilian_kilger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/204709</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736911432"&gt;Random Numbers and Probability Distributions in the ABAP Environments for 2508&lt;/H2&gt;&lt;H3 id="toc-hId-1669480646"&gt;1 Introduction&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Can ABAP generate random numbers?&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Most ABAP developers would instinctively say "yes"—after all, who hasn't used&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;CL_ABAP_RANDOM&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for generating test data? But if you've ever looked under the hood, you'll know that not all random numbers are created equal. Every random number generator is tied to a &lt;STRONG&gt;probability distribution&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here's the twist: Until now, ABAP only spoke the language of&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;uniform&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;randomness—a far cry from the rich, varied distributions that reflect real-world and business data.&lt;/P&gt;&lt;P&gt;The great news? With the latest ABAP releases, the answer has changed. ABAP now speaks the whole language of probability, supporting versatile random number generation for your advanced business needs!&lt;/P&gt;&lt;P&gt;It also has all the functionality to &lt;STRONG&gt;compute&amp;nbsp;&lt;/STRONG&gt;with probabilities.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&amp;nbsp;Have you ever wanted to execute a &lt;STRONG&gt;t-test&lt;/STRONG&gt; on your customer base directly in ABAP to see whether the customers from country A pay systematically later than the customers from country B or if the recent late payments are just bad luck? You could implement this now very easily in ABAP.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; currently planned to be available on-premise and in the private cloud with the upcoming major SAP S/4HANA release in 2025. Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1472967141"&gt;2 Example: Customer Payment Date&lt;/H3&gt;&lt;P&gt;Suppose you want to generate realistic data for customer payment dates. Do you imagine that customers pay at random, with every date being equally likely?&lt;/P&gt;&lt;P&gt;Of course not!&lt;/P&gt;&lt;P&gt;In reality, most customers settle their bills close to the due date, with a few paying a bit early or late, and only a handful paying extremely early or well past the deadline.&lt;/P&gt;&lt;P&gt;These patterns can be captured with various probability distributions, such as &lt;STRONG&gt;normal&lt;/STRONG&gt;, &lt;STRONG&gt;beta&lt;/STRONG&gt;, or &lt;STRONG&gt;exponential&lt;/STRONG&gt; distributions. If you treat payment dates as discrete events, distributions like &lt;STRONG&gt;Poisson&lt;/STRONG&gt; or &lt;STRONG&gt;multinomial&lt;/STRONG&gt; may also fit.&lt;/P&gt;&lt;P&gt;For simplicity, we'll focus on the most common and versatile: the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;normal distribution&lt;/STRONG&gt;. The normal distribution's importance comes from a deep and beautiful mathematical result, the &lt;STRONG&gt;central limit theorem&lt;/STRONG&gt;. Simply put, it says:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;If you average many independent random processes—even if each one follows a different pattern—they will tend to form the familiar bell-shaped curve known as the normal distribution.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;In short, the normal distribution is the most important probability distribution.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Probability density of the normal distribution" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297174i767C0D2BE77657AA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="normal_distrib.png" alt="Probability density of the normal distribution" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Probability density of the normal distribution&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The curve means that the normal distribution generates values around its mean value (here: zero) more often and values farther away less frequently.&lt;/P&gt;&lt;P&gt;This can easily be adjusted to write ABAP code, which generates more realistic random numbers for this scenario.&lt;/P&gt;&lt;P&gt;The ABAP code is surprisingly easy compared to other programming languages. It uses the new system class CL_ABAP_PROB_DISTRIBUTION and its method NEXT_RANDOM_NUMBER( ). This class needs an underlying uniform random number generator given by an interface IF_ABAP_RANDOM. The old class CL_ABAP_RANDOM happens to implement IF_ABAP_RANDOM.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;class payment_date_generator definition.
  public section.
    methods constructor importing rng type ref to if_abap_random. " new as well
    methods generate_payment_date importing due_date type d
                                  returning value(payment_date) type d.

  private section.
    data m_rng type ref to if_abap_random.
    data m_system_date type d.
    data m_distribution type ref to if_abap_prob_distribution.
endclass.

class payment_date_generator implementation.
  method constructor.
    m_rng = rng.
    m_system_date = cl_abap_context_info=&amp;gt;get_system_date( ).
    m_distribution = cl_abap_prob_distribution=&amp;gt;get_normal_distribution(
      mean = 0
      standard_deviation = 15 ). " 68% are within ±15 days around due date
  endmethod.

  method generate_payment_date.
    while payment_date &amp;lt; m_system_date.
      payment_date = due_date + 
         conv i( m_distribution-&amp;gt;next_random_number( rng = m_rng ) ).
    endwhile.
  endmethod.
endclass.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Using the new interface IF_ABAP_RANDOM, you can also&amp;nbsp;&lt;STRONG&gt;plug in your own uniform random number&lt;/STRONG&gt; generator. No need to take the ABAP one (just in case you need a cryptographically secure, normally distributed number). Using ABAP's CL_ABAP_RANDOM is faster, as special optimizations apply here.&lt;/P&gt;&lt;P&gt;Running the example on 2025/08/06 with due date 2025/08/20 and 1000 numbers gives the following histogram, for example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="normal_example.png" style="width: 790px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297179iA9C3D2643E7CBACA/image-size/large?v=v2&amp;amp;px=999" role="button" title="normal_example.png" alt="normal_example.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&amp;nbsp;&lt;/STRONG&gt;Although the normal distribution is symmetric around the mean value, we arrived at a non-symmetric distribution by "cutting off" the dates before the current date. This is called &lt;EM&gt;rejection sampling&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;,&amp;nbsp;&lt;/EM&gt;and it&lt;/SPAN&gt;&amp;nbsp;gives a totally new probability distribution, unique to this business problem.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Implementation:&lt;/STRONG&gt; There are two ABAP classes:&lt;/P&gt;&lt;TABLE border="1" width="100.00125876414536%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;Class&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;&lt;STRONG&gt;Hint&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;CL_ABAP_PROB_DISTRIBUTION&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Calculate with F (= FLOAT) probabilities&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Faster, more distributions&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;CL_ABAP_PROB_DISTRIBUTION_DF34&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Calculate with DECFLOAT34 probabilities&lt;/TD&gt;&lt;TD width="16.666666666666668%"&gt;Much slower, fewer distributions&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;By default, the classes CL_ABAP_PROB_DISTRIBUTION and CL_ABAP_PROB_DISTRIBUTION_DF34 generate F or DECFLOAT34 numbers, but they can easily be cast to P, I, or other datatypes in different scenarios.&lt;/P&gt;&lt;P&gt;Both classes can generate I (= INT4) or INT8 random numbers for &lt;STRONG&gt;discrete&lt;/STRONG&gt; distributions by default using separate methods.&lt;/P&gt;&lt;H3 id="toc-hId-1276453636"&gt;3 Supported probability distributions&lt;/H3&gt;&lt;P&gt;The table below shows the distributions supported in the ABAP environments 2508.&amp;nbsp;The headers "&lt;STRONG&gt;FLOAT Probabilities&lt;/STRONG&gt;" and "&lt;STRONG&gt;DECFLOAT34 Probabilities&lt;/STRONG&gt;" refer to the system classes &lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION&lt;/STRONG&gt; and &lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION_DF34&lt;/STRONG&gt;, respectively.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;TABLE border="1" width="100.00000000000001%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;&lt;STRONG&gt;Distribution&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;&lt;STRONG&gt;FLOAT&amp;nbsp;&lt;BR /&gt;Probabilities&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;&lt;STRONG&gt;DECFLOAT34&lt;BR /&gt;Probabilities&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;&lt;STRONG&gt;Business Example&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="85px"&gt;Normal distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="85px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="85px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="85px"&gt;Customer satisfaction scores, Employee performance, and financial returns follow a normal distribution.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Lognormal distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;Revenue or units sold across a product catalog often follow a lognormal distribution.&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="112px"&gt;Exponential distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="112px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="112px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="112px"&gt;&lt;SPAN&gt;The duration of customer service calls can be modeled using an exponential distribution.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Gamma distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;A gamma distribution can model the time it takes to complete a project and the distribution of&amp;nbsp;&lt;SPAN&gt;customer lifetime values (CLV) in CRM.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Chi-Squared distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;Test whether the customer prefers a new product feature over an existing one using the famous&lt;STRONG&gt; chi-squared test, &lt;/STRONG&gt;which utilizes&amp;nbsp;the chi-squared distribution.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;&lt;P&gt;Uniform-int/int8 distribution&lt;/P&gt;&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;&lt;P&gt;Discrete&lt;/P&gt;&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;&lt;P&gt;Companies often conduct customer surveys in market research to gather feedback and insights. To ensure that the survey results represent the entire customer base, a uniform integer distribution can be used for random sampling.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="85px"&gt;Poisson distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="85px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="85px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="85px"&gt;&lt;SPAN&gt;Understanding customer traffic is crucial for staffing and operational decisions in retail management. The Poisson distribution can model the number of customers arriving at a store within a specific time interval.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;Binomial distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;&lt;P&gt;In manufacturing, the binomial distribution can be used to model the number of defective items (failures) in a sample of produced items.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="57px"&gt;Student's t-distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Continuous&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="57px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="57px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="57px"&gt;Using the famous &lt;STRONG&gt;t-test&lt;/STRONG&gt; and the &lt;STRONG&gt;t-distribution&lt;/STRONG&gt;, one can test whether a new marketing campaign significantly affected sales.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;Hypergeometric distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;&lt;SPAN&gt;In inventory management, the hypergeometric distribution can be used to model the selection of items for inspection or audit from a finite inventory.&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="16.666666666666668%" height="30px"&gt;Geometric distribution&lt;/TD&gt;&lt;TD width="11.51645207439199%"&gt;Discrete&lt;/TD&gt;&lt;TD width="10.26466380543634%" height="30px"&gt;Yes&lt;/TD&gt;&lt;TD width="12.160228898426327%" height="30px"&gt;No&lt;/TD&gt;&lt;TD width="49.39198855507868%" height="30px"&gt;Model the number of customer interactions needed until the first sales occur.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Note:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;More probability distributions might evolve in future ABAP releases (not an official statement, no guarantee, no promise or roadmap item).&amp;nbsp;&lt;SPAN&gt;Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1079940131"&gt;4 Calculating with probabilities&lt;/H3&gt;&lt;P&gt;These new classes aren't just about rolling random numbers—they unlock many possibilities! Now you can compute probabilities, dive into advanced statistical analyses, and so much more.&lt;/P&gt;&lt;P&gt;The magic happens through the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;IF_ABAP_PROB_DISTRIBUTION&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;interface, which lets you calculate cumulative distribution functions (CDFs), quantiles, and a range of other powerful statistical operations. Plus, with dedicated sub-interfaces for discrete distributions, you get even more specialized tools right at your fingertips.&lt;/P&gt;&lt;P&gt;Here we only talk about two very important methods:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Method&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;CDF (Cumulative Distribution Function)&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Calculates the probability that the distribution assumes values &amp;lt;= x. In mathematical terms: P(X &amp;lt;= x).&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;Quantile&lt;/TD&gt;&lt;TD&gt;Inverse of the CDF. The quantile function gives the smallest value &lt;EM&gt;x&lt;/EM&gt;  such that the cumulative probability (CDF) is at least &lt;EM&gt;p&lt;/EM&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Business Problem for the CDF:&amp;nbsp;&lt;/STRONG&gt;What proportion of the bills are paid within 20 days of the due date?&lt;BR /&gt;&lt;STRONG&gt;Solution in ABAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  final(dist) =
    cl_abap_prob_distribution=&amp;gt;get_normal_distribution( mean = 0 standard_deviation = 15 ).
  final(proportion) = dist-&amp;gt;cdf( 20 ).
  cl_demo_output=&amp;gt;display( proportion ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Problem for the Quantile:&amp;nbsp;&lt;/STRONG&gt;You want to know when 95% of customers have paid their bills.&lt;BR /&gt;&lt;STRONG&gt;Solution in ABAP:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  data quantile type d.
  final(dist) =
    cl_abap_prob_distribution=&amp;gt;get_normal_distribution( mean = 0 standard_deviation = 15 ).
  final(quantile_int) = conv i( ceil( dist-&amp;gt;quantile( '0.95' ) ) ).
  quantile = due_date + quantile_int.  
  cl_demo_output=&amp;gt;display( quantile ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This prints 2025/09/14 in my example from above, i.e., in mid-September, 95% of the customers paid their bill (simplified calculation for demo purposes, which does not account for the rejection sampling method applied above. Special applause to anyone posting the solution for the truncated normal distribution in the comments below.)&lt;/P&gt;&lt;P&gt;Note that&amp;nbsp;&lt;SPAN&gt;many valid statistical methods can be used to&amp;nbsp;&lt;STRONG&gt;find&amp;nbsp;&lt;/STRONG&gt;the correct probability distribution for your business problem. These can also be implemented now in ABAP&lt;/SPAN&gt;.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-754343907"&gt;5 More Trivia&lt;/H2&gt;&lt;P&gt;With the new classes, you can also do funny stuff, which is not quite new, but was difficult or slow before.&lt;/P&gt;&lt;H4 id="toc-hId-815995840"&gt;5.1 Generate many random numbers at once&lt;/H4&gt;&lt;P&gt;Usually, you do not want to generate only one random number. You want to generate many random numbers. In the past, every generated random number was a single method call.&lt;/P&gt;&lt;P&gt;Example:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  types i_tab type standard table of i with empty key.
  final(rng) = cl_abap_random=&amp;gt;create( ).
  final(tab) = reduce i_tab( init _tab = value #( ) 
                             for i = 1 then i + 1 until i &amp;gt; 1000
                             next _tab = value #( base _tab ( rng-&amp;gt;int( ) ) ) ).  &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This is slow, as we have 1000 method calls and a FOR-LOOP.&lt;/P&gt;&lt;P&gt;Now, this can be sped up many times by doing the loop inside the ABAP kernel.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  final(rng) = cl_abap_random=&amp;gt;create( ).
  final(distrib) = cl_abap_prob_distribution=&amp;gt;get_uniform_int_distribution( range = value #( ) ). " empty range =&amp;gt; all numbers
  final(tab) = distrib-&amp;gt;next_random_numbers( count = 1000 rng = rng ).

  cl_demo_output=&amp;gt;display( tab ).&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-619482335"&gt;5.2 Analyzing range tables and generating random numbers in non-consecutive intervals&lt;/H4&gt;&lt;P&gt;Another nice example is generating uniformly distributed integer random numbers in arbitrary subsets of the integers (i.e., not in a single contiguous interval). The constructor for the uniform integer distribution accepts a &lt;STRONG&gt;range table.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  data distrib type ref to if_abap_prob_distribution_int.
  final(rng) = cl_abap_random=&amp;gt;create( ).
  distrib = cl_abap_prob_distribution=&amp;gt;get_uniform_int_distribution(
    range = value #( ( sign = 'I' option = 'BT' low = 1 high = 10 )
                     ( sign = 'E' option = 'EQ' low = 5 ) ) ).
  cl_demo_output=&amp;gt;write( distrib-&amp;gt;support_size( ) ).  " prints 9, i.e. we have 9 elements which are covered by the rangetab
  cl_demo_output=&amp;gt;write( distrib-&amp;gt;median( ) ). " prints 6, which is the median of the set [1,2,3,4,6,7,8,9,10] in our definition  
  final(random_numbers) = distrib-&amp;gt;next_random_numbers( count = 1000 rng = rng ). " generate random numbers from 1 to 10 excluding 5
  cl_demo_output=&amp;gt;display( random_numbers ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;You can easily generate random numbers that satisfy any condition specified by a range table. Keep in mind that the range table is treated as a set—so overlapping conditions like X &amp;lt; 6 and X &amp;lt; 7 simply combine to X &amp;lt; 7. Values that fall into both ranges (such as 5) are not given extra weight or counted multiple times.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Also, integers are "cut off" at the minimum/maximum INT4 or INT8 value, so you can't compute uniform discrete probabilities of an infinite set. Mathematics is safe here.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-293886111"&gt;&lt;SPAN&gt;6 Overflows&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;When generating random numbers, a probability distribution can overflow. The normal distribution, for example, spans the whole real line. As FLOAT's value range is finite, this can lead to unexpected results for very large mean or standard deviation, or, if you are just "unlucky", also for small ones.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;We decided that random number generation &lt;STRONG&gt;should never overflow&lt;/STRONG&gt;. We achieve this by two means:&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 1. Restricting the parameters for the distribution in the constructor to "sensible" values reflecting real-world scenarios.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; 2. If you are unlucky anyhow, use rejection sampling until we are in the float range.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This is an important compromise and something that is not done in most random number generator libraries. It also means that the distribution may not&amp;nbsp;&lt;EM&gt;exactly&amp;nbsp;&lt;/EM&gt;be (normally-, gamma-, ...) distributed at the borders of the float or decfloat range. This has no influence on any real-world scenario or calculation, however.&amp;nbsp;&lt;/P&gt;&lt;P&gt;On the contrary, you can be content that no overflow occurs, ever. This is an important feature of a random number generator.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-97372606"&gt;7 Conclusion&lt;/H3&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;This article showcased the new ABAP capabilities for generating random numbers from various probability distributions—and performing probability calculations—using the powerful system classes&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;CL_ABAP_PROB_DISTRIBUTION_DF34&lt;/STRONG&gt;.&lt;/P&gt;&lt;H3 id="toc-hId--174372268"&gt;8 The interface IF_ABAP_PROB_DISTRIBUTION&lt;/H3&gt;&lt;P&gt;For reference, here is the complete interface IF_ABAP_PROB_DISTRIBUTION with the implemented methods:&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"! &amp;lt;p&amp;gt;Interface representing a probability distribution with probabilities of type F (=FLOAT). Used by class
"!  {@link CL_ABAP_PROB_DISTRIBUTION }, which represents a probability distribution over the real line.&amp;lt;/p&amp;gt;
interface if_abap_prob_distribution
  public .

  "! Table type to hold a collection of random numbers.
  types random_numbers type standard table of f with empty key.

  "! Returns the support of the probability distribution
  "! @parameter kind | The kind of support the distribution provides.
  methods support_kind
    returning value(kind) type if_abap_prob_types=&amp;gt;support_kind.

  "! Returns the kind of probability distribution
  "! @parameter kind | The kind of the distribution.
  methods distribution_kind
    returning value(kind) type if_abap_prob_types=&amp;gt;distribution_kind.

  "! Returns whether the probability distribution is continuous
  "! @parameter continuous | Flag indicating if the distribution is continuous.
  methods is_continuous
    returning value(continuous) type abap_bool.

  "! Returns the mean of the probability distribution
  "! @parameter mean | The mean value of the distribution.
  "! @raising CX_ABAP_PROB_UNSUPPORTED | if distribution has no mean
  methods mean
    returning value(mean) type f
    raising   cx_abap_prob_unsupported.

  "! Returns a possible mode of the probability distribution
  "! @parameter mode | The mode of the distribution.
  "! @raising CX_ABAP_PROB_UNSUPPORTED | if distribution has no mode
  methods mode
    returning value(mode) type f
    raising   cx_abap_prob_unsupported.

  "! Returns the variance of the probability distribution
  "! @parameter variance | The variance of the distribution.
  "! @raising CX_ABAP_PROB_UNSUPPORTED | if distribution has no variance
  methods variance
    returning value(variance) type f
    raising   cx_abap_prob_unsupported.

  "! Returns the (CDF-based) median of the probability distribution. Here, the median
  "! is the smallest x in the support, such that P(X &amp;lt;= x) &amp;gt;= 0.5.
  "! @parameter median | The median value of the distribution.
  methods median
    returning value(median) type f.

  "! Returns the cumulative distribution function, i.e. the probability that the
  "! distribution assumes values &amp;lt;= arg.
  "! @parameter arg                      | The argument for which to calculate the cumulative distribution function.
  "! @parameter probability              | P( X &amp;lt;= arg )
  "! @raising cx_sy_arithmetic_overflow  | If an arithmetic overflow occurs.
  "! @raising cx_parameter_invalid_range | If the parameter is outside of the support.
  methods cdf
    importing arg                type f
    returning value(probability) type f
    raising   cx_sy_arithmetic_overflow
              cx_parameter_invalid_range.

  "! Returns the probability density function (if continuous) or the probability mass function
  "! (if not continuous)
  "! @parameter arg                      | The argument for which to calculate the probability density or mass function.
  "! @parameter value                    | The calculated density or mass value.
  "! @raising cx_sy_arithmetic_overflow  | If an arithmetic overflow occurs.
  "! @raising cx_parameter_invalid_range | If the parameter is outside of the support.
  methods pdf_or_pmf
    importing arg          type f
    returning value(value) type f
    raising   cx_sy_arithmetic_overflow
              cx_parameter_invalid_range.

  "! Returns the p-quantile of the the distribution,
  "! @parameter probability              | The probability for which to calculate the quantile. Should be
  "!                                       between 0 and 1.
  "! @parameter quantile                 | The calculated quantile value.
  "! @raising cx_parameter_invalid_range | If the parameter is out of range.
  "! @raising cx_sy_arithmetic_overflow  | If an arithmetic overflow occurs.
  methods quantile
    importing probability     type f
    returning value(quantile) type f
    raising   cx_parameter_invalid_range
              cx_sy_arithmetic_overflow.

  "! Returns the minimum value the distribution can assume.
  "! @parameter value | The minimum value in the distribution.
  methods min_value
    returning value(value) type f.

  "! Returns the maximum value the distribution can assume
  "! @parameter value | The maximum value in the distribution.
  methods max_value
    returning value(value) type f.

  "! Returns a random number distributed according to the distribution
  "! @parameter rng    | The random number generator to use.
  "!                     When rng is of type {@link CL_ABAP_RANDOM }, other algorithms are used
  "!                     which are significantly faster and generate different random numbers for some
  "!                     distributions.
  "! @parameter number | The next random number generated.
  methods next_random_number
    importing rng           type ref to if_abap_random
    returning value(number) type f.

  "! Returns an internal table of random number distributed according to the distribution
  "! @parameter count   | The number of random numbers to generate.
  "! @parameter rng     | The random number generator to use.
  "!                      When rng is of type {@link CL_ABAP_RANDOM }, other algorithms are used
  "!                      which are significantly faster and generate different random numbers for some
  "!                      distributions.
  "! @parameter numbers | A set of generated random numbers.
  methods next_random_numbers
    importing count          type i
              rng            type ref to if_abap_random
    returning value(numbers) type random_numbers.

endinterface.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266"/>
    <published>2025-08-18T13:00:51.072000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/singleton-entities-in-rap-design-multi-line-edit-and-best-practices/ba-p/14177490</id>
    <title>Singleton Entities in RAP Design, Multi Line Edit, and Best Practices</title>
    <updated>2025-08-19T08:46:32.754000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;In&amp;nbsp; this blog I have explained creating of an RAP Singleton entity&amp;nbsp; with multiline edit&amp;nbsp; functionalities , and also coevered below topics&amp;nbsp;&lt;BR /&gt;1.copy action&lt;/P&gt;&lt;P&gt;2. Depricate actions&lt;/P&gt;&lt;P&gt;3.invalidating entries&lt;/P&gt;&lt;P&gt;4.transport organizer&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Add Copy Action : Helps to create new entries in object page&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;In case we have&amp;nbsp; lot of fields and we&amp;nbsp; need to refer existing entries --&amp;gt; and based on that if we want to create new entries we can make use of this action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Add Deprecate Action :&amp;nbsp; If we want to deprecate some entries ( make it invalid )&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;We can make use of this action&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select to include a deprecate and invalidate action in the generated app&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Pre requisite : the table must have&amp;nbsp; a field CONFIGDEPRECATIONCODE with data element CONFIG_DEPRECATION_CODE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Data Consistency Check : select this option to include a validation for the prepare draft action in the generated app which checks the consistency&amp;nbsp; of the input fields with&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Domain with fixed values&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Foreign keys where @abapCatalog.foreign key.screenCheck : true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If we have foreign key relationship / data element / domain&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;( suppose we have gender field in the employee table --&amp;gt; we need to maintain it in the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Domain level )&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can make use of&amp;nbsp; this field.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;lt;&amp;lt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Enable Transport Selection selected&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The transport request selection action displayed in edit mode&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The transport request information is displayed in the header toolbar&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If the save action is executed without&amp;nbsp; selected transport request and the transport is mandatory , the action to select a transport request is triggered automatically .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;After&amp;nbsp; selecting&amp;nbsp; a transport request , the save action continues&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If the action is not selected , a transport selection is made possible using an action button . This option is selected by default&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt; Manual :&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Select manual to include the action select transport&amp;nbsp; in the generated app&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this action , you can select an existing customizing transport request before saving the configuration changes&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt; Manual with pre selection&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To include the action select transport in the generated app .&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this action , you can select an existing customizing transport request before saving the configuration changes. When the edit action is performed , a customizing transport request is determined automatically&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt; No transport : Select No transport for an app without a transport suitable&amp;nbsp; fro configurations that are to be adjusted in the productive system&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T1. take a custom table say employee&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;PRE&gt;@EndUserText.label : 'employee table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #C 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zpd_dt_em { 

key client : abap.clnt not null; 
key employee_id : zpd_de_emp not null; 
@EndUserText.label : 'First Name' 
first_name : abap.char(50); 
@EndUserText.label : 'Last Name' 
last_name : abap.char(50); 
@EndUserText.label : 'Department' 
department : abap.char(20); 
@EndUserText.label : 'Joining Date' 
joining_date : abap.dats; 
@EndUserText.label : 'Active Employee' 
is_active : abap.char(1); 
@EndUserText.label : 'Changed By' 
changed_by : abap.char(12); 
configdeprecationcode : config_deprecation_code; 
local_last_changed_at : abp_locinst_lastchange_tstmpl; 
changed_at : abp_lastchange_tstmpl; 

} &lt;/PRE&gt;&lt;P&gt;2. Create a&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;LANGUAGE &lt;/SPAN&gt;&lt;SPAN class=""&gt;TABLE&lt;/SPAN&gt;&lt;SPAN class=""&gt; :&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we need one&amp;nbsp; entry – so we have selected I_Language and put into the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Where condition so that we get one entry to achieve singleton&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1754910289470.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299284i6746094642641C6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_0-1754910289470.png" alt="Pradeep555_0-1754910289470.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; select table and click on select generate repository objects&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1754910322004.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299285iF9020F0090B1FBA7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1754910322004.png" alt="Pradeep555_1-1754910322004.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1754910344865.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299286i38BABEA391257D4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1754910344865.png" alt="Pradeep555_2-1754910344865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.Delivery&lt;/SPAN&gt;&lt;SPAN class=""&gt; class must be C&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1754910436742.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299287i5C11E6C5D542DCFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1754910436742.png" alt="Pradeep555_3-1754910436742.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Data maintenance should be &lt;/SPAN&gt;&lt;SPAN class=""&gt;allowed&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1754910467221.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299289i3D3B7D91265AF6E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1754910467221.png" alt="Pradeep555_4-1754910467221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.&lt;SPAN class=""&gt;Also&lt;/SPAN&gt;&lt;SPAN class=""&gt; we need to have a data &lt;/SPAN&gt;&lt;SPAN class=""&gt;element( domain&lt;/SPAN&gt;&lt;SPAN class=""&gt; )&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_5-1754910582094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299290i228A1603B42BF437/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_5-1754910582094.png" alt="Pradeep555_5-1754910582094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Provide package&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1754910671588.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299291iFF6146F345A817A6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1754910671588.png" alt="Pradeep555_6-1754910671588.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We have business service definition and binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1754910705685.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299292i6B2880D0262ABF1E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1754910705685.png" alt="Pradeep555_7-1754910705685.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1754910858334.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299293i72C463D7B6AA9CA8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1754910858334.png" alt="Pradeep555_8-1754910858334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;.Also, we have singleton entity details&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Singleton entity name ( EmployeeTableAll)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interface view ( Zi_EmployeeTable_S)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Projection view&amp;nbsp; ( Zi_EmployeeTable_S)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Key field (SinlgetonID)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Draft table (zpd_dt_empl_d_s)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;11.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Table details&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1754910919195.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299295iA950A3E30ED9292A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1754910919195.png" alt="Pradeep555_9-1754910919195.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;12.&amp;nbsp;&lt;SPAN class=""&gt;we can be able to see the&lt;/SPAN&gt;&lt;SPAN class=""&gt; classes&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1754910953226.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299296iE676F4E9872F7999/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1754910953226.png" alt="Pradeep555_10-1754910953226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1754910978734.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299297i216093640328CBCE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1754910978734.png" alt="Pradeep555_11-1754910978734.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;13.&amp;nbsp;&lt;SPAN class=""&gt;we have scenario &lt;/SPAN&gt;&lt;SPAN class=""&gt;option&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1754911008131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299298iA0EA84C4B77D2521/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1754911008131.png" alt="Pradeep555_12-1754911008131.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;14&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Transport &lt;/SPAN&gt;&lt;SPAN class=""&gt;selection&lt;/SPAN&gt;&lt;SPAN class=""&gt; :&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1754911133421.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299312i61B2AA907508C890/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_0-1754911133421.png" alt="Pradeep555_0-1754911133421.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1754911186709.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299313i86F5069377B418ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1754911186709.png" alt="Pradeep555_1-1754911186709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;15.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;activate the service binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1754911230766.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299314i34DDEFEB95D25F0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1754911230766.png" alt="Pradeep555_2-1754911230766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;16.&amp;nbsp;&lt;SPAN class=""&gt;All the &lt;/SPAN&gt;&lt;SPAN class=""&gt;atrifacts&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be generated&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;intreface view:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'employee table' 
@AccessControl.authorizationCheck: #MANDATORY 
@Metadata.allowExtensions: true 

define view entity ZI_EmployeeTable1 
as select from ZPD_DT_EM 
association to parent ZI_EmployeeTable_S1 as _EmployeeTableAll on $projection.SingletonID = _EmployeeTableAll.SingletonID 
association [0..*] to I_ConfignDeprecationCodeText as _ConfignDeprecationCodeText on $projection.ConfigDeprecationCode = _ConfignDeprecationCodeText.ConfigurationDeprecationCode 

{ 

key EMPLOYEE_ID as EmployeeId, 
FIRST_NAME as FirstName, 
LAST_NAME as LastName, 
DEPARTMENT as Department, 
JOINING_DATE as JoiningDate, 
IS_ACTIVE as IsActive, 
CHANGED_BY as ChangedBy, 
@ObjectModel.text.association: '_ConfignDeprecationCodeText' 
@Consumption.valueHelpDefinition: [ { 

entity: { 

name: 'I_ConfignDeprecationCode', 
element: 'ConfigurationDeprecationCode' 

} 

} ] 

CONFIGDEPRECATIONCODE as ConfigDeprecationCode, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
@Consumption.hidden: true 
LOCAL_LAST_CHANGED_AT as LocalLastChangedAt, 
@Semantics.systemDateTime.lastChangedAt: true 
CHANGED_AT as ChangedAt, 
@Consumption.hidden: true 
1 as SingletonID, 
_EmployeeTableAll, 
case when CONFIGDEPRECATIONCODE = 'W' then 2 when CONFIGDEPRECATIONCODE = 'E' then 1 else 3 end as ConfigDeprecationCode_Critlty, 
_ConfignDeprecationCodeText 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;17.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;parent entity for interface&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we have made joined I_language&amp;nbsp; with employee table because&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We want Etag field from the table so that we can get lastchangedat field&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; one more association is created related to transport – because we need to capture the entries in transport ( I_abap_transportrequesttext)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'employee table Singleton' 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@ObjectModel.semanticKey: [ 'SingletonID' ] 
@UI: { 

headerInfo: { 
typeName: 'EmployeeTableAll' 

} 

} 

define root view entity ZI_EmployeeTable_S1 

as select from I_Language 
left outer join ZPD_DT_EM on 0 = 0 
association [0..*] to I_ABAPTransportRequestText as _ABAPTransportRequestText on $projection.TransportRequestID = _ABAPTransportRequestText.TransportRequestID 
composition [0..*] of ZI_EmployeeTable1 as _EmployeeTable 

{ 

@UI.facet: [ { 

id: 'ZI_EmployeeTable1',  
purpose: #STANDARD,  
type: #LINEITEM_REFERENCE,  
label: 'employee table',  
position: 1 ,  
targetElement: '_EmployeeTable' 

} ] 

@UI.lineItem: [ { 
position: 1  

} ] 

key 1 as SingletonID, 
_EmployeeTable, 
@UI.hidden: true 
max( ZPD_DT_EM.CHANGED_AT ) as LastChangedAtMax, 
@ObjectModel.text.association: '_ABAPTransportRequestText' 
@UI.identification: [ { 

position: 2 ,  
type: #WITH_INTENT_BASED_NAVIGATION,  
semanticObjectAction: 'manage' 

} ] 

@Consumption.semanticObject: 'CustomizingTransport' 
cast( '' as SXCO_TRANSPORT) as TransportRequestID, 
_ABAPTransportRequestText 

} 

where I_Language.Language = $session.system_language &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;18.&amp;nbsp;&lt;SPAN class=""&gt;child entity&lt;/SPAN&gt;&lt;SPAN class=""&gt; holds the singleton filed &lt;/SPAN&gt;&lt;SPAN class=""&gt;including&amp;nbsp; all&lt;/SPAN&gt;&lt;SPAN class=""&gt; other fields&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'employee table' 
@AccessControl.authorizationCheck: #MANDATORY 
@Metadata.allowExtensions: true 
define view entity ZI_EmployeeTable1 

as select from ZPD_DT_EM 
association to parent ZI_EmployeeTable_S1 as _EmployeeTableAll on $projection.SingletonID = _EmployeeTableAll.SingletonID 
association [0..*] to I_ConfignDeprecationCodeText as _ConfignDeprecationCodeText on $projection.ConfigDeprecationCode = _ConfignDeprecationCodeText.ConfigurationDeprecationCode 

{ 

key EMPLOYEE_ID as EmployeeId, 
FIRST_NAME as FirstName, 
LAST_NAME as LastName, 
DEPARTMENT as Department, 
JOINING_DATE as JoiningDate, 
IS_ACTIVE as IsActive, 
CHANGED_BY as ChangedBy, 
@ObjectModel.text.association: '_ConfignDeprecationCodeText' 
@Consumption.valueHelpDefinition: [ { 

entity: { 
name: 'I_ConfignDeprecationCode',  
element: 'ConfigurationDeprecationCode' 

} 

} ] 

CONFIGDEPRECATIONCODE as ConfigDeprecationCode, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
@Consumption.hidden: true 
LOCAL_LAST_CHANGED_AT as LocalLastChangedAt, 
@Semantics.systemDateTime.lastChangedAt: true 
CHANGED_AT as ChangedAt, 
@Consumption.hidden: true 
1 as SingletonID, 
_EmployeeTableAll, 

case when CONFIGDEPRECATIONCODE = 'W' then 2 when CONFIGDEPRECATIONCODE = 'E' then 1 else 3 end as ConfigDeprecationCode_Critlty, 

_ConfignDeprecationCodeText 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;19.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;behaviour definition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with additional save implementation in class ZBP_I_EMPLOYEETABLE_S1 unique; 
strict; 
with draft; 
define behavior for ZI_EmployeeTable_S1 alias EmployeeTableAll 

draft table ZPD_DT_EM_D_S1 
with unmanaged save 
lock master total etag LastChangedAtMax 
authorization master( global ) 

{ 

field ( readonly ) 
SingletonID; 
field ( features : instance ) 
TransportRequestID; 
field ( notrigger ) 
SingletonID, 
LastChangedAtMax; 

update; 
internal create; 
internal delete; 

draft action ( features : instance ) Edit with additional implementation; 
draft action Activate optimized; 
draft action Discard; 
draft action Resume; 
draft determine action Prepare; 

action ( features : instance ) SelectCustomizingTransptReq parameter D_SelectCustomizingTransptReqP result [1] $self; 

association _EmployeeTable { create ( features : instance ); with draft; } 
validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; } 

 

side effects { 
action SelectCustomizingTransptReq affects $self; 

} 

} 

 

define behavior for ZI_EmployeeTable1 alias EmployeeTable ##UNMAPPED_FIELD 

persistent table ZPD_DT_EM 
draft table ZPD_DT_EM_D 
etag master LocalLastChangedAt 
lock dependent by _EmployeeTableAll 
authorization dependent by _EmployeeTableAll 

{ 

field ( mandatory : create ) 

EmployeeId; 
field ( readonly ) 
SingletonID, 
LocalLastChangedAt, 
ChangedAt, 
ConfigDeprecationCode, 
ConfigDeprecationCode_Critlty; 
field ( readonly : update ) 
EmployeeId; 

field ( notrigger ) 
SingletonID, 
LocalLastChangedAt, 
ChangedAt; 

update( features : global ); 
delete( features : instance ); 

action ( features : instance ) Deprecate result [1] $self; 
action ( features : instance ) Invalidate result [1] $self; 

mapping for ZPD_DT_EM 

{ 

EmployeeId = EMPLOYEE_ID; 
FirstName = FIRST_NAME; 
LastName = LAST_NAME; 
Department = DEPARTMENT; 
JoiningDate = JOINING_DATE; 
IsActive = IS_ACTIVE; 
ChangedBy = CHANGED_BY; 
ConfigDeprecationCode = CONFIGDEPRECATIONCODE; 
LocalLastChangedAt = LOCAL_LAST_CHANGED_AT; 
ChangedAt = CHANGED_AT; 

} 
association _EmployeeTableAll { with draft; } 

validation ValidateTransportRequest on save ##NOT_ASSIGNED_TO_DETACT { create; update; delete; } 


} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;20. service definition&lt;/P&gt;&lt;PRE&gt;@ObjectModel.leadingEntity.name: 'ZI_EmployeeTable_S' 
define service ZUI_EMPLOYEETABLE { 
expose ZI_EMPLOYEETABLE_S as EmployeeTableAll; 
expose ZI_EMPLOYEETABLE as EmployeeTable; 

} &lt;/PRE&gt;&lt;P&gt;21.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;service binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1754912117572.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299315iFAD39EC6AFF8486C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1754912117572.png" alt="Pradeep555_3-1754912117572.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;22. OUTPUT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1754912157323.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299316iD1139CB664C6C398/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1754912157323.png" alt="Pradeep555_4-1754912157323.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;23.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1754912208665.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299318i69C5ABB38C6E3DB7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1754912208665.png" alt="Pradeep555_6-1754912208665.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;24.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Double click on singleton entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1754912236441.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299319i98B7F2CE2F1DF377/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1754912236441.png" alt="Pradeep555_7-1754912236441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;25.&amp;nbsp;&lt;SPAN class=""&gt;here &lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; edit &lt;/SPAN&gt;&lt;SPAN class=""&gt;button&amp;nbsp; is&lt;/SPAN&gt;&lt;SPAN class=""&gt; disabled –because no access to&lt;/SPAN&gt;&lt;SPAN class=""&gt; the &lt;/SPAN&gt;&lt;SPAN class=""&gt;tbale&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1754912271300.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299320iC5C465C851526705/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1754912271300.png" alt="Pradeep555_8-1754912271300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;26.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1754912306511.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299321iF18E2C33D6C155CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1754912306511.png" alt="Pradeep555_9-1754912306511.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;27.&amp;nbsp;&lt;SPAN&gt;Click on edit&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We will get the option to create&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1754912355432.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299322i89CD63D2B59DCA76/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1754912355432.png" alt="Pradeep555_10-1754912355432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;28.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1754912380944.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299323i9DBDFCD6DA965257/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1754912380944.png" alt="Pradeep555_11-1754912380944.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;29.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Entry will be created&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1754912438361.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299324iF8C37FB3EEA2004D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1754912438361.png" alt="Pradeep555_12-1754912438361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;30.&amp;nbsp;&lt;SPAN&gt;As soon as you click on save we will get an error&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we have not specified any&amp;nbsp; customizing transport&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_13-1754912472735.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299325iA3E9924BC2F67849/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_13-1754912472735.png" alt="Pradeep555_13-1754912472735.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;31.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_14-1754912504103.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299326i682223EF6DB8CD5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_14-1754912504103.png" alt="Pradeep555_14-1754912504103.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;32.&amp;nbsp;&lt;SPAN&gt;now we data is getting stored but not displaying because of CDS authorization&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Select not allowed&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_15-1754912540990.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299327i06E31093A5891495/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_15-1754912540990.png" alt="Pradeep555_15-1754912540990.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;33.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; now we can be able to see the data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_16-1754912565514.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299328iC9A95DCC9C9B9D38/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_16-1754912565514.png" alt="Pradeep555_16-1754912565514.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;34.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Copy Action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I&amp;nbsp; will select the entry ( id 3)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And click on copy action ..entry will be copied and we&amp;nbsp; need to assign new Id&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And also we can make changes in the perticular entry&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_17-1754912617841.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299330i0B8B903FA505FD0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_17-1754912617841.png" alt="Pradeep555_17-1754912617841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;35.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;deprecate &lt;/SPAN&gt;&lt;SPAN class=""&gt;selected&lt;/SPAN&gt;&lt;SPAN class=""&gt; entry and invalidate entry&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_18-1754912646740.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299331i21CC4D5C050C9FCF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_18-1754912646740.png" alt="Pradeep555_18-1754912646740.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;36.&amp;nbsp;&lt;SPAN&gt;Deprcate action&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; now&amp;nbsp; I shall select an entry and click on deprecate button&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_19-1754912680433.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299333iAD061F6555376987/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_19-1754912680433.png" alt="Pradeep555_19-1754912680433.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;37.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_20-1754912707661.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299334i8202E642326B87A0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_20-1754912707661.png" alt="Pradeep555_20-1754912707661.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;38.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_21-1754912731691.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299335i2F3BDCBE15820720/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_21-1754912731691.png" alt="Pradeep555_21-1754912731691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;39.&amp;nbsp;&lt;SPAN&gt;Again if you select the depricated entries . The action buttons will not be shown&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Invalidate entry&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_22-1754912782613.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299337iDD352ABA3C38642A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_22-1754912782613.png" alt="Pradeep555_22-1754912782613.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;40.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Click on save and open the entry&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_23-1754912809471.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299338i7DB8F462519ABA3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_23-1754912809471.png" alt="Pradeep555_23-1754912809471.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thnaks and Regards --&lt;/P&gt;&lt;P&gt;Pradeep Ishwar devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/singleton-entities-in-rap-design-multi-line-edit-and-best-practices/ba-p/14177490"/>
    <published>2025-08-19T08:46:32.754000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/upload-and-download-invoice-image-on-rap-application/ba-p/14181185</id>
    <title>Upload and Download Invoice Image on RAP Application</title>
    <updated>2025-08-20T07:19:57.829000+02:00</updated>
    <author>
      <name>AnithaSwamy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1757477</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608691752"&gt;Introduction:&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The&amp;nbsp;ABAP RESTful Application Programming Model (RAP)&amp;nbsp;provides a streamlined, standardized way to build enterprise-grade Fiori apps on SAP BTP ABAP Environment — including support for file handling.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Unlike traditional approaches where developers manually code file upload/download logic, RAP leverages&amp;nbsp;large object (LOB) semantics, MIME type control, and built‑in media stream handling to manage file content and metadata automatically.&lt;BR /&gt;In this project, we implement a&amp;nbsp;draft‑enabled RAP application&amp;nbsp;for invoice management that allows users to&amp;nbsp;upload, preview, download, and delete attachments&amp;nbsp;directly from the Fiori UI.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using only CDS annotations and metadata definitions — without custom CRUD code — the RAP runtime takes care of:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Persisting file content in database LRAW/RAWSTRING fields,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Validating file MIME types (e.g., JPEG, PNG),&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Exposing file streams for download via OData V4,&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Linking attachments to business object instances in draft or active state.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;By combining RAP’s managed draft capabilities and UI annotations like&amp;nbsp;@Semantics.largeObject&amp;nbsp;and&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.headerInfo.imageUrl, we achieve a clean, zero‑custom‑code solution for common file management needs in business applications.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1412178247"&gt;Objectives:&lt;/H1&gt;&lt;P&gt;Enable file upload and download functionality for a Draft enabled RAP Application&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1215664742"&gt;Tasks&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Database Table: Create the Attachment, MIME and File name fields in Database table&lt;/LI&gt;&lt;LI&gt;CDS Interface View: &amp;nbsp;the LargeObject semantics for the file like file types (in our case we set this to jpeg and PNG file types)&lt;/LI&gt;&lt;LI&gt;Metadata View: Declare the imageURL in UI.headerinfo and hide filename and MIME type fields.&lt;/LI&gt;&lt;LI&gt;Test the application for file upload and download for a record selected by user&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1019151237"&gt;Steps in Detail&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;Step 1 :Database Table will must have the following fields&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;attachment : /dmo/attachment;
mime_type  : /dmo/mime_type;
file name  : /dmo/filename;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 2 : CDS Interface view declaration:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject: { mimeType: 'MimeType', //case-sensitive
                          fileName: 'FileName', //case-sensitive
               acceptableMimeTypes: ['image/png', 'image/jpeg'],
      contentDispositionPreference: #ATTACHMENT }

attachment as Attachment,
@Semantics.mimeType: true
mime_type as MimeType,
file name as FileName,&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 3: Metadata View&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  imageUrl:       'Attachment',           //case-sensitive in UI.HeaderInfo.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;QUI.identification: [ { position: 110 } ]
Attachment;

@UI.hidden: true
MimeTypej

@UI.hidden: true
FileName;

@UI.hidden: true
LocalLastChangedAt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Step 4: Test the Application: Open your RAP UI App. Click “Go” Button, to see records listed from Database table.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_3-1755193519094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301138i2FF38BBE1EB90905/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_3-1755193519094.png" alt="AnithaSwamy_3-1755193519094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Navigate to a record by clicking on the list displayed, you will see the field for Attachments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_4-1755193519100.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301136i0ED98E71704F3556/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_4-1755193519100.png" alt="AnithaSwamy_4-1755193519100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can hit the upload button to upload the file: (in our case we have limited the file type to JPEG and PNG files). Once uploaded the file will be displayed as an icon. You can also see the updated file on the top left corner of the record when the upload is successful.&amp;nbsp; This means that the attachment has been successfully uploaded against the selected record in the database.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_5-1755193519106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301137i9883B1A6436EB4FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_5-1755193519106.png" alt="AnithaSwamy_5-1755193519106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;User is able to delete the file by selecting the delete icon next to the upload/download button when the record is in Creation or Edit mode.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_6-1755193519110.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301139i5E0653EF4FED4FA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_6-1755193519110.png" alt="AnithaSwamy_6-1755193519110.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;When the record is in Display mode, if there is a image attached to the record, the file name is hyperlink enables so that the user is able to download file onto local drive.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_7-1755193519114.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301140iD5EBD4FA9DC0F79F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_7-1755193519114.png" alt="AnithaSwamy_7-1755193519114.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-951720451"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-755206946"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This demonstrates that&amp;nbsp;RAP’s built‑in file handling&amp;nbsp;significantly reduces the complexity of implementing document management features in SAP applications.&lt;BR /&gt;By simply:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Declaring&amp;nbsp;attachment,&amp;nbsp;file name, and&amp;nbsp;MIME type&amp;nbsp;fields in the DB table,&lt;/LI&gt;&lt;LI&gt;Annotating them with&amp;nbsp;large object semantics&amp;nbsp;and acceptable MIME types,&lt;/LI&gt;&lt;LI&gt;Using metadata extensions to control UI display and hide technical fields,&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;the RAP framework automatically provides end‑to‑end file upload, delete, and download capabilities in the generated Fiori app — fully integrated with the business object lifecycle and draft handling. In our invoice scenario, users can intuitively manage image attachments within the object page: upload new files in edit mode, delete them when needed, and download them in display mode.&lt;/P&gt;&lt;P&gt;No manual OData stream provider or complex frontend logic was necessary — the RAP runtime, guided by CDS annotations, handled storage, retrieval, and MIME type enforcement for us.&lt;/P&gt;&lt;P&gt;This confirms RAP’s position as a&amp;nbsp;“declarative-first” development model&amp;nbsp;— enabling developers to focus on the data model and business logic, while the framework transparently implements recurring technical patterns like file management.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/upload-and-download-invoice-image-on-rap-application/ba-p/14181185"/>
    <published>2025-08-20T07:19:57.829000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/managed-rap-application-for-billing-document-header-and-item-tables/ba-p/14177961</id>
    <title>Managed RAP Application for Billing Document Header and Item Tables</title>
    <updated>2025-08-20T07:42:53.909000+02:00</updated>
    <author>
      <name>AnithaSwamy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1757477</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607954599"&gt;Project Overview:&lt;/H1&gt;&lt;P&gt;Managed RAP for custom Parent Child related tables with Odata2 UI&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1411441094"&gt;Introduction:&lt;/H1&gt;&lt;P&gt;The goal is to design a lightweight&amp;nbsp;Billing Document Header and Items maintenance UI application&amp;nbsp;with&amp;nbsp;Create&amp;nbsp;and&amp;nbsp;Delete&amp;nbsp;capabilities, using Managed RAP on SAP BTP ABAP Environment&amp;nbsp;using&amp;nbsp;Eclipse ADT.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The application uses&amp;nbsp;custom transparent tables&amp;nbsp;for storing billing document header and items data and implements&amp;nbsp;standard RAP layers&amp;nbsp;— Database Table, Interface View, Projection View, Metadata Annotations, Behavior Definitions, Behavior Pool, Service Definition, and Service Binding.&lt;/P&gt;&lt;P&gt;Since this is a RAP without draft facility, the service we generate would be based on OData UI 2.0 version.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1214927589"&gt;Objectives:&lt;/H1&gt;&lt;P&gt;Creating a Managed RAP based UI using BTP with Create &amp;amp; Delete actions on custom Billing Document header and Items tables that have Parent Child relationship.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1018414084"&gt;Tasks Outline&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;Create required Database Table(s) – Header and Item Tables&lt;/LI&gt;&lt;LI&gt;Create CDS views for the Database Table – Billing Header&lt;UL&gt;&lt;LI&gt;Interface View and&lt;/LI&gt;&lt;LI&gt;Consumption (Projection) View&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create CDS views for the Database Table – Billing Items&lt;UL&gt;&lt;LI&gt;Interface View and&lt;/LI&gt;&lt;LI&gt;Consumption (Projection) View&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create Metadata View one each for Header and Items Consumption Views&lt;/LI&gt;&lt;LI&gt;Create Behavior Definition&lt;UL&gt;&lt;LI&gt;for Interface View for Header and Define Items def. within&lt;/LI&gt;&lt;LI&gt;Create Behavior Pool implementation Class using Quick Fix option&lt;/LI&gt;&lt;LI&gt;Create Behavior Definition for Consumption View for Header and Define Items def. within&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create Service Definition for Consumption Views of Header and Item tables&lt;/LI&gt;&lt;LI&gt;Service Binding OData UI 2.0 for the Service Definition&lt;/LI&gt;&lt;LI&gt;Test the application in preview/Fiori app → validate header list, object page, and item section data&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-821900579"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-625387074"&gt;Objects List&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_0-1754948023092.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299566i26273CD79B7D2FE8/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_0-1754948023092.png" alt="AnithaSwamy_0-1754948023092.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-428873569"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-232360064"&gt;&lt;SPAN&gt;Step by Step outline:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;Step 1: Create Database Tables (Eclipse - Data Dictionary-Database Table)&lt;/P&gt;&lt;P&gt;Step 1a: Create Billing Header Database Table (Eclipse - Data Dictionary-Database Table)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Database table for BILLING header'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdb_ar5_bill {

  key client      : abap.clnt not null;
  key bill_id     : abap.numc(10) not null;
  bill_type       : abap.char(4);
  bill_date       : abap.dats;
  customer_id     : /dmo/customer_id;
  customer_name   : abap.char(80);
  @Semantics.amount.currencyCode : 'zdb_ar5_bill.currency'
  net_amount      : abap.curr(15,2);
  currency        : waers;
  sales_org       : vkorg;
  last_changed_at : abp_lastchange_tstmpl;
  createdby       : syuname;
  changedby       : syuname;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the created Database Table structure (Right click – Open With - Data Preview)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_2-1754948023099.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299567i8FD89C63920D9612/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_2-1754948023099.png" alt="AnithaSwamy_2-1754948023099.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step1b: Create Billing Items Database Table (Eclipse - Data Dictionary-Database Table)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Database table for BILLING ITEMS'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdb_ar5_item {

  key client      : abap.clnt not null;
  key bill_id     : abap.char(10) not null;
  key item_no     : abap.numc(6) not null;
  material_id     : matnr;
  description     : abap.char(40);
  @Semantics.quantity.unitOfMeasure : 'zsac_bill_item.uom'
  quantity        : abap.quan(13,3);
  @Semantics.amount.currencyCode : 'zsac_bill_item.currency'
  item_amount     : abap.curr(15,2);
  currency        : waers;
  uom             : meins;
  last_changed_at : abp_lastchange_tstmpl;
  createdby       : syuname;
  changedby       : syuname;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the created Database Table structure (Right click – Open With - Data Preview)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_4-1754948023107.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299568i3B0B47A4C63C001E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_4-1754948023107.png" alt="AnithaSwamy_4-1754948023107.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 2: Create Interface Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;Step 2a: Header Table – create interface root view&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View for Billing Header'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZAR5_IR_BILL
  as select from zdb_ar5_bill       as bill
  composition [0..*] of ZAR5_I_ITEM as _item
{
  key bill_id         as BillId,
      bill_type       as BillType,
      bill_date       as BillDate,
      customer_id     as CustomerId,
      customer_name   as CustomerName,
      @Semantics.amount.currencyCode : 'Currency'
      net_amount      as NetAmount,
      currency        as Currency,
      sales_org       as SalesOrg,
      last_changed_at as LastChangedAt,
      createdby       as Createdby,
      changedby       as Changedby,

      // Associations //
      _item
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 2b: Items Table – create interface view&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View for Billing item'
@Metadata.ignorePropagatedAnnotations: true
define view entity ZAR5_I_ITEM
  as select     from        zdb_ar5_item as item
  association   to parent   ZAR5_IR_BILL as _bill 
    on          $projection.BillId       = _bill.BillId
{
  key bill_id         as BillId,
  key item_no         as ItemNo,
      material_id     as MaterialId,
      description     as Description,
      @Semantics.quantity.unitOfMeasure: 'Uom'
      quantity        as Quantity,
      @Semantics.amount.currencyCode : 'Currency'
      item_amount     as ItemAmount,
      currency        as Currency,
      uom             as Uom,
      last_changed_at as LastChangedAt,
      createdby       as Createdby,
      changedby       as Changedby,

      // Associations //
      _bill // Make association public
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 3: Create Consumption/Projection Root view CDS for the database table created (right click database table - Data Definitions - Root View template)&lt;/P&gt;&lt;P&gt;Step 3a: Header Table – Projection root view creation&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection View for Billing Header'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true //manually added
define root view entity ZAR5_C_BILL
  provider contract transactional_query 
  as projection on ZAR5_IR_BILL
{
    key BillId,
    BillType,
    BillDate,
    CustomerId,
    CustomerName,
    @Semantics.amount.currencyCode: 'Currency'
    NetAmount,
    Currency,
    SalesOrg,
    LastChangedAt,
    Createdby,
    Changedby,
    
    /* Associations */
    _item :  redirected to composition child ZAR5_C_ITEM
   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 3b: Item Table – Projection view creation&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection View for Billing item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true //manually added
define view entity ZAR5_C_ITEM
    as projection on ZAR5_I_ITEM
{
    key BillId,
    key ItemNo,
    MaterialId,
    Description,
    @Semantics.quantity.unitOfMeasure: 'Uom'
    Quantity,
    @Semantics.amount.currencyCode: 'Currency'
    ItemAmount,
    Currency,
    Uom,
    LastChangedAt,
    Createdby,
    Changedby,
    
    /* Associations */
    _bill : redirected to parent ZAR5_C_BILL  
   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 4: Create Metadata that helps with designing aspects of the UI (Right click on the Projection View you created and select new "Metadata Definition")&lt;/P&gt;&lt;P&gt;Step 4a: Create Metadata for Header Table&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI: {
  headerInfo: {
    typeName:        'Billing Document Header',
    typeNamePlural:  'Billing Documents',
    title: {
      type:  #STANDARD,
      label: 'Billing Document',
      value: 'BillId'
    }
  }
}

annotate entity ZAR5_C_BILL with
{
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet: [
    {
      id:       'BillingDocHead',
      purpose:  #STANDARD,
      type:     #IDENTIFICATION_REFERENCE,
      label:    'Header',
      position: 10
    },
    {
      id:            'BillingDocItem',
      purpose:       #STANDARD,
      type:          #LINEITEM_REFERENCE,
      label:         'Items',
      position:      20,
      targetElement: '_item'
    }
  ]

  // --- START OF FINAL CORRECTION ---

  // All columns and buttons for the list report table go inside this SINGLE lineItem array.
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.lineItem: [
    // Object 1: The column for the BillId field
    {
      position: 10,
      importance: #HIGH
    },
    // Object 2: The button for the setFullName action
    {
      type:       #FOR_ACTION,
      dataAction: 'setFullName',
      label:      'Set Customer Name',
      position: 15  // Position for the button in the toolbar
    },
     // Object 3: The button for the COPY action
    {
      type:       #FOR_ACTION,
      dataAction: 'copyBillDoc',
      label:      'Copy to Create',
      position: 16  // Position for the button in the toolbar
    }
  ]
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.identification: [ { position: 10 } ]
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.selectionField: [ { position: 10 } ]
  @EndUserText.label: 'Billing Document'
  BillId;

  // --- END OF FINAL CORRECTION ---


  @EndUserText.label: 'Billing Document Type'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 20 } ],
    identification: [ { position: 20 } ],
    selectionField: [ { position: 20 } ]
  }
  BillType;

  @EndUserText.label: 'Billing Date'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 30 } ],
    identification: [ { position: 30 } ]
  }
  BillDate;

  @EndUserText.label: 'Customer'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 40 } ],
    identification: [ { position: 40 } ]
  }
  CustomerId;

  @EndUserText.label: 'Customer Name'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 45 } ],
    identification: [ { position: 45 } ]
  }
  CustomerName;

  @EndUserText.label: 'Net Amount'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 50 } ],
    identification: [ { position: 50 } ]
  }
  NetAmount;

  @EndUserText.label: 'Currency'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 60 } ],
    identification: [ { position: 60 } ]
  }
  Currency;

  @EndUserText.label: 'Sales Organization'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 70 } ],
    identification: [ { position: 70 } ]
  }
  SalesOrg;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 4b: Create Metadata for Item Table&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity ZAR5_C_ITEM with
{
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet: [ {
  id:       'BillingDocItem',
  purpose:  #STANDARD,
  type:     #IDENTIFICATION_REFERENCE,
  label:    'Item',
  position: 10
  }]
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    identification: [ { position: 10 } ],
    selectionField: [ { position: 10 } ]
  }
  BillId;
  @EndUserText.label: 'Item Number'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 20 } ],
    identification: [ { position: 20 } ],
    selectionField: [ { position: 20 } ]
  }
  ItemNo;
  @EndUserText.label: 'Material'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 30 } ],
    identification: [ { position: 30 } ]
  }
  MaterialId;
  @EndUserText.label: 'Description'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 40 } ],
    identification: [ { position: 40 } ]
  }
  Description;
  @EndUserText.label: 'Quantity'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 50 } ],
    identification: [ { position: 50 } ]
  }
  Quantity;
  @EndUserText.label: 'Unit of Measure'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 60 } ],
    identification: [ { position: 60 } ]
  }
  Uom;
  @EndUserText.label: 'Amount'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 70 } ],
    identification: [ { position: 70 } ]
  }
  ItemAmount;
  @EndUserText.label: 'Currency'
  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;: {
    lineItem:       [ { position: 80 } ],
    identification: [ { position: 80 } ]
  }
  Currency;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step5: Create Behaviour Definition - one for Interface view and one for Consumption view.&lt;/P&gt;&lt;P&gt;Step 5a: Create Behaviour Definition for Header interface view ((Right click the Interface CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_ar5_ir_bill unique;
strict ( 2 );

//Headewr table interface view definition
define behavior for ZAR5_IR_BILL alias bill
persistent table zdb_ar5_bill
lock master
authorization master ( instance )
etag master LastChangedAt
{
  create ( authorization : global );
  update;
  delete;
  field ( readonly ) BillId;
  association _item { create; }

    mapping for zdb_ar5_bill
    {
        BillId        = bill_id;
        BillDate      = bill_date;
        BillType      = bill_type;
        CustomerId    = customer_id;
        CustomerName  = customer_name;
        NetAmount     = net_amount;
        Currency      = currency;
        SalesOrg      = sales_org;
        LastChangedAt = last_changed_at;
        createdby     = createdby;
        changedby     = changedby;
    }
}
//Item table interface view definition
define behavior for ZAR5_I_ITEM alias item
persistent table zdb_ar5_item
lock dependent by _bill
authorization dependent by _bill
etag master LastChangedAt
{
  update;
  delete;
  field ( readonly ) BillId, ItemNo;
  association _bill;

  mapping for zdb_ar5_item
    {
      BillId      = bill_id;
      ItemNo      = item_no;
      MaterialId  = material_id;
      Description = description;
      Quantity    = quantity;
      ItemAmount  = item_amount;
      Currency    = currency;
      Uom         = uom;
      LastChangedAt = last_changed_at;
      createdby   = createdby;
      changedby   = changedby;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 5b: Create Behaviour Pool – Implementation class (from the Quick Fix facility on the first line of the definition above).Activate the generated class – no change required since we have no custom logic to be implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_bill DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR bill RESULT result.

    METHODS get_global_authorizations FOR GLOBAL AUTHORIZATION
      IMPORTING REQUEST requested_authorizations FOR bill RESULT result.

ENDCLASS.

CLASS lhc_bill IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

  METHOD get_global_authorizations.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 5c: Create Behaviour Definition for the Projection view (Right click the Projection CDS View and choose Behaviour Definition option)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );

with managed instance filter;

define behavior for ZAR5_C_BILL alias bill
use etag
{
  use create;
  use update;
  use delete;

  use association _item { create; }
}

define behavior for ZAR5_C_ITEM alias item
{
  use update;
  use delete;

  use association _bill;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step 6: Create Service definition (Right click CDS Projection Header View and click "New Service Definition"). Expose the Consumption Views of Header and Item.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Def. for Proj. View of Header'
define service ZSD_AR5_BILL {
  expose ZAR5_C_BILL as BillingParentChildApp;
  expose ZAR5_C_ITEM as BillingItems;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Step 7: Create Service Binding (Right click on the new Service definition you created and choose "New Service Binding" and Choose OData V4 version for the UI)&lt;/P&gt;&lt;P&gt;Select the Service Definition displayed on the versions section of the page and hit "Publish" button. Once published, a Service URL will be created and the binding will be displayed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_16-1754948023158.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299582iDCF9111D6B9D9694/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_16-1754948023158.png" alt="AnithaSwamy_16-1754948023158.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 8: Test the Application: Select the Entity and hit Preview button(see screenshot above) , a new Window will be opened with the RAP UI App you created.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_17-1754948023163.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299581i9464D446970B2139/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_17-1754948023163.png" alt="AnithaSwamy_17-1754948023163.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click “Go” Button, so that the values are pulled from the Database table to be shown on the screen.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_18-1754948023175.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299585i4841FB783D5B755D/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_18-1754948023175.png" alt="AnithaSwamy_18-1754948023175.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can see the database records displayed on the screen. The Create and Delete buttons are available for creating new records and deleting existing records. When user clicks on a particular record the object page opens up with Items table details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_19-1754948023183.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299584i9816A95928B15A97/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_19-1754948023183.png" alt="AnithaSwamy_19-1754948023183.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The user can navigate to each items record displayed to see additional information.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AnithaSwamy_20-1754948023189.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299583iAD7DF5785E13A3EC/image-size/large?v=v2&amp;amp;px=999" role="button" title="AnithaSwamy_20-1754948023189.png" alt="AnithaSwamy_20-1754948023189.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you are a beginner I recommend my blog :&lt;/P&gt;&lt;P&gt;&lt;A title="Simple RAP based Managed UI development with Create &amp;amp; Delete actions on custom BillDoc header table" href="https://community.sap.com/t5/technology-blog-posts-by-members/simple-rap-based-managed-ui-development-with-create-amp-delete-actions-on/ba-p/14173514" target="_self"&gt;Simple RAP based Managed UI development with Create &amp;amp; Delete actions on custom BillDoc header table&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-164929278"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;By leveraging Managed RAP, you do not need to write custom CRUD logic for database tables in parent-child relation— the framework auto-generates this functionality, allowing you to focus purely on&amp;nbsp;data modelling,&amp;nbsp;UI annotations, and&amp;nbsp;service exposure.&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+ABAP+Environment/pd-p/60907aa9-99e9-4d5d-9103-8b970e9bc0a4" class="lia-product-mention" data-product="39-1"&gt;SAP S/4HANA Cloud ABAP Environment&lt;/a&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/managed-rap-application-for-billing-document-header-and-item-tables/ba-p/14177961"/>
    <published>2025-08-20T07:42:53.909000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14175995</id>
    <title>ABAP Cloud Sessions at SAP TechEd in 2025</title>
    <updated>2025-08-22T17:20:44.662000+02:00</updated>
    <author>
      <name>CarineTchoutouo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1462</uri>
    </author>
    <content>&lt;P&gt;Hey Everyone!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd in 2025&lt;/A&gt;&lt;/STRONG&gt; kicks off on the 4th of November 2025, and preparations&amp;nbsp;&lt;SPAN&gt;are now in full swing at SAP!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP TechEd is the leading tech conference for all developers, IT professionals, business experts, tech visionaries, innovators, and leaders eager to gain in-depth knowledge of SAP’s solutions, platforms, and technologies, along with insights into their future direction. It also offer an opportunity to network and connect with peers and SAP experts.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In 2025, &lt;STRONG&gt;SAP TechEd&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;goes hybrid&lt;/STRONG&gt;, kicking off with parallel events &lt;/SPAN&gt;&lt;SPAN&gt;in Berlin, Louisville, and online – &lt;/SPAN&gt;&lt;SPAN&gt;followed by SAP TechEd on Tour stops in Australia, India, UK, and Germany for a unique opportunity for an in-depth, in-person learning experience. Except for the Berlin and Bangalore stops, the on-site events are organized in partnership with, and hosted by, SAP User Groups and SAPinsider.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The choice is yours: join us on-site in Berlin or Louisville (at ASUG Tech Connect), or online for the first events in the series!&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;Save the date and &lt;/STRONG&gt;&lt;STRONG&gt;register now&lt;/STRONG&gt;!&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;November 4 - 6, 2025&lt;BR /&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Berlin&lt;/A&gt; | &lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;Virtual&lt;/A&gt;&amp;nbsp;(free of charge) | &lt;A href="https://www.sap.com/events/2025-11-04-us-pe-asug-tech-connect.html" target="_blank" rel="noopener noreferrer"&gt;Louisville&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1607895114"&gt;ABAP Cloud at SAP TechEd in 2025&lt;/H1&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;What to Expect&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/abap-cloud" target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CarineTchoutouo_0-1755888895164.png" style="width: 102px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304101iB764B49D270DC480/image-dimensions/102x46/is-moderation-mode/true?v=v2" width="102" height="46" role="button" title="CarineTchoutouo_0-1755888895164.png" alt="CarineTchoutouo_0-1755888895164.png" /&gt;&lt;/span&gt;&lt;/A&gt;ABAP continues to evolve, and SAP TechEd events in 2025 are the best place to see what’s next. Beyond the integration of ABAP Cloud into SAP Build announced last year, and the integration of SAP Joule for Developers into the ABAP development tools along with the ABAP AI SK to infuse AI into your business processes earlier this year,&amp;nbsp; you’ll have the opportunity to explore the latest innovations and updates in ABAP Cloud, AI-based&amp;nbsp;custom code transformation, clean core practices, and the new clean core levels approach for SAP S/4HANA extensibility in both the private cloud and on-premise.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;Why Attending ABAP Sessions Matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Get a &lt;STRONG&gt;clear direction&lt;/STRONG&gt; for your ABAP strategy, whether you're on ECC, S/4HANA, or SAP BTP&lt;/LI&gt;&lt;LI&gt;Learn how to &lt;STRONG&gt;modernize custom development&lt;/STRONG&gt; without touching the core&lt;/LI&gt;&lt;LI&gt;See how&amp;nbsp;&lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities &lt;/STRONG&gt;can support faster, cleaner development&lt;/LI&gt;&lt;LI&gt;Take home &lt;STRONG&gt;practical skills&lt;/STRONG&gt; for RAP, testing, ABAP Test Cockpit, governance, and more&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Access the SAP TechEd 2025 session catalogs: &amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Berlin&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Virtual&lt;/A&gt;&amp;nbsp;| &lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda" target="_blank" rel="noopener nofollow noreferrer"&gt;ASUG Tech Connect&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H1 id="toc-hId-1411381609"&gt;ABAP Cloud Sessions at SAP TechEd &lt;FONT color="#0000FF"&gt;Berlin&lt;/FONT&gt; 2025&amp;nbsp;&lt;/H1&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Event Info&lt;/A&gt;:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dates&lt;/STRONG&gt;: November 4–6, 2025&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Location&lt;/STRONG&gt;: Messe Berlin (Berlin, Germany)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Session formats&lt;/STRONG&gt;: Strategy talks, roadmap updates, deep dives, community talks, and hands-on workshops&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;9 Content tracks&lt;/STRONG&gt;: ABAP sessions primarily in the tracks "Application Development &amp;amp; Automation (&lt;SPAN class=""&gt;AD&lt;/SPAN&gt;)" and "&lt;SPAN&gt;Digital Transformation with Cloud&amp;nbsp;&lt;SPAN class=""&gt;ERP&lt;/SPAN&gt;&amp;nbsp;(&lt;SPAN class=""&gt;DT&lt;/SPAN&gt;)"&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1343950823"&gt;&lt;span class="lia-unicode-emoji" title=":microphone:"&gt;🎤&lt;/span&gt;Keynote&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1755527936875001jfGl" target="_blank" rel="noopener noreferrer"&gt;KEY100 | Beyond the hype: How SAP is supercharging developers for what's next&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;Some experts argue there’s a developer shortage. Others will say developers are no longer needed due to AI. Let’s get real: developers, architects, and technologists are here to stay, and their roles are more important than ever. Explore how the latest technology, tools, AI, agents, and learning from SAP can help you adapt these changing roles.&amp;nbsp;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1147437318"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Strategy Talks (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109536463001vLhp" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST109&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud Strategy&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; | &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;also available virtually as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; ST119v&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;The ABAP Cloud strategy as part of SAP Build and the SAP strategy go hand-in-hand. Explore in this session what this means for our major topics ABAP AI and Custom Code Transformation and how we integrate Business Data Cloud. Furthermore, learn about the ABAP IDE strategy and how we support the sovereign cloud.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Sonja Liénard (SAP), &lt;SPAN&gt;Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132378115001LmnQ" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST113&lt;/SPAN&gt; – &lt;SPAN&gt;Journey to unified extensibility in SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore the strategy for extensibility across SAP Business Suite and cloud ERP. Learn why AI-driven development with the SAP Build solution including ABAP Cloud is key, and how the planned harmonization will make it easier to build extensions and support the clean core. Furthermore, learn about opportunities for partners to extend SAP solutions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Boris Gebhardt (SAP),&amp;nbsp;Khaled Musilhy (SAP), tbd&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-950923813"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;🗺&lt;/span&gt;️ Roadmap Sessions (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109867231001jec8" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;AD808&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud road map&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;See our upcoming innovations for the ABAP Cloud development model including Joule and the Business Data Cloud integration in context and get updates on the roadmap ahead.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132621235001F9CC" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;DT814&lt;/SPAN&gt; – &lt;SPAN&gt;Extensibility innovations road map for SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore upcoming extensibility innovations for SAP Business Suite and cloud ERP. Discover road maps for suite extensibility, harmonization, and partner enablement for commercial use cases. Learn more about upcoming innovations for AI-driven extensibility with the SAP Build solution including ABAP Cloud to support your clean core strategy.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Oren Shatil (SAP),&amp;nbsp;Boris Gebhardt (SAP),&amp;nbsp;&lt;SPAN&gt;External Speaker&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-754410308"&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;Deep Dives (45 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110017215001w1iM" target="_blank" rel="noopener noreferrer"&gt;AD104 – Boost your &amp;nbsp;ABAP development with Joule for developers&lt;/A&gt; &lt;/STRONG&gt;&amp;nbsp;&lt;SPAN&gt;| also available virtually as &lt;STRONG&gt;AD104v&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;In this deep dive session you will learn all aspects of the ABAP AI strategy, from accelerating your ABAP development, over developing custom AI scenarios, up to using Joule to transform your ABAP code.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Simona Marincei (SAP), Olga Dolinskaja (SAP)&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110856633001ZdrC" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD105&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Introduction to ABAP Cloud and how to get started&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;SPAN&gt;ABAP Cloud is the new way of developing ABAP—fully cloud-enabled and driven by AI. It combines cloud technologies with a clear separation of SAP and custom code, and in this way revolutionizes ABAP development. Grasp the major concepts of ABAP Cloud and learn how you can upskill. Also learn about Bosch Digital’s journey to ABAP Cloud and clean core.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Carine Tchoutouo Djomo (SAP), Ajay Kulkarni (Robert Bosch GmbH)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;AD201 – Explore ABAP Cloud in SAP Build - what's in for ABAP developers?&amp;nbsp;&lt;/A&gt; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this deep dive we will highlight the importance of our strategic approach of integrating ABAP Cloud in SAP Build. Learn how you can benefit from this for Fiori App development and how the graphical modeler helps you to create ABAP CDS models conveniently. Finally, get insights into the future direction.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Dr. &lt;/SPAN&gt;Anne Keller&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Katja Zoch&lt;SPAN&gt; (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749071777465001lGIE" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT200&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Unravel the mysteries of Clean Core extensions in Cloud ERP Private&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the new, enhanced clean core extensibility concept in SAP S/4HANA Cloud Private Edition. Learn about tools like ABAP Test Cockpit and RISE Dashboard, as well as guidance and best practices that help you to measure, govern, re-factor and develop your custom extensions in a clean core compliant, upgrade stable and cloud-ready way.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Olga Dolinskaja (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749073857569001yTng" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT201&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Extensibility with ABAP Cloud and AI in SAP Cloud ERP&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the on-stack key user and developer tools in the ABAP Cloud development model, now enhanced with generative AI. See how you can extend standard SAP applications and manage your custom apps directly in SAP S/4HANA Cloud Public Edition. Get insights into latest innovations for transactional, analytical, and integration use cases, such as the extensibility AI Assistant, editable tree-views, custom queries for analytical SAP Fiori apps, ABAP SQL services and more.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Carine Tchoutouo Djomo&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Oren Shatil&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-557896803"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Hands-On Workshops (2 hours)&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111133585001neK1" target="_blank" rel="noopener noreferrer"&gt;AD162 – Explore Joule for developers, ABAP AI capabilities&lt;/A&gt; &amp;nbsp; &lt;/STRONG&gt;&amp;nbsp;&lt;BR /&gt;Learn how to develop a RAP business object while exploring Joule's ABAP AI capabilities&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Sebastian Baskovich (SAP), Thomas Alexander Ritter (SAP), Dr. Anne Keller (SAP), Simona Marincei (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111362893001Nrqs" target="_blank" rel="noopener noreferrer"&gt;AD163 – Fusion Development with ABAP Cloud in SAP Build&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;In this session we will practice fusion development of ABAP Cloud in SAP Build by creating an ABAP Cloud project from the SAP Build lobby to develop a RAP BO including a Fiori application on top.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Sebastian Baskovich (SAP), Anne Keller (SAP), Katja Zoch (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749112624677001Rt0T" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD164&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Get started with ABAP Cloud for classic ABAP developers&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Familiar with classic ABAP development? Join us to learn how similar development works with ABAP Cloud development model using the ABAP RESTful application programming model (RAP). ABAP Cloud is the comprehensive model for building cloud-ready business apps, services, and extensions that follow clean core principles by default – on SAP BTP and SAP S/4HANA, both in the cloud and on-premise.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Volker Drees (SAP), Carine Tchoutouo Djomo (SAP), Boris Gebhardt (SAP), Jürgen Reidl (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749072760273001q6Pm" target="_blank" rel="noopener noreferrer"&gt;DT260 – Modernize classic extensions to clean core in Cloud ERP Private&lt;/A&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this session you will practice a clean core extensibility in SAP S/4HANA Cloud Private Edition. You will learn how to govern clean core development using the ABAP Test Cockpit, and how to use ABAP Cloud and clean core extensibility principles to modernize your custom on-stack extensions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Olga Dolinskaja (SAP), Thomas Fiedler (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749074059125001cpvA" target="_blank" rel="noopener noreferrer"&gt;DT261 – Build on-stack extensions with ABAP Cloud in Cloud ERP Public&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;Join us to discover how to build extensions, applications, and services with the ABAP Cloud development model, using the ABAP RESTful application programming model and generative AI. You will learn how to extend standard SAP applications, consume public SAP APIs, and build new apps and services from scratch. Get practical insights through exercises and take the opportunity to ask your questions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Carine Tchoutouo Djomo (SAP),&amp;nbsp;Volker Drees (SAP), Steffen Mattes (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749650347432001y6fi" target="_blank" rel="noopener noreferrer"&gt;DT266 – Troubleshoot and Optimize ABAP Cloud Extensions in Cloud ERP&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Ensuring optimal performance and stability of your ABAP Cloud-based extensions is crucial to long-term success. Learn advanced techniques and best practices for troubleshooting and optimizing custom code in the Cloud ERP. Use powerful tools like ABAP Cross Trace to get deep insights into execution flows and resource consumption.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Steffen Mattes (SAP), Juergen Reidl (SAP), Thomas Alexander Ritter (SAP), Thomas Fiedler (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-361383298"&gt;&lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;Join Us&lt;/H2&gt;&lt;P&gt;I hope this overview gives you even more reasons to join us at one of the &lt;A href="https://www.sap.com/events/teched.html" target="_self" rel="noopener noreferrer"&gt;SAP TechEd 2025 tour stops&lt;/A&gt;&amp;nbsp;in Berlin (DE), Louisville (US), Sydney (AU), Bangalore (IN), Birmingham (UK), or Hamburg (DE)&amp;nbsp;– or attend online, free of charge!&lt;/P&gt;&lt;P&gt;We look forward to meeting and interacting with you! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;In the meantime, you can watch the replays &lt;/SPAN&gt;&lt;SPAN&gt;of last year's events:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2024/ba-p/13783420" target="_blank"&gt;ABAP Cloud at SAP TechEd Virtual 2024&lt;/A&gt;&amp;nbsp;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/abap-cloud-at-devtoberfest-by-sap-teched-2024/ba-p/13789730" target="_blank"&gt;ABAP Cloud at SAP's Devtoberfest in 2024&lt;/A&gt;&lt;SPAN&gt;.&amp;nbsp;You can also have a look at the&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":fire:"&gt;🔥&lt;/span&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-devtoberfest-2025/ba-p/14187974" target="_self"&gt;ABAP Cloud sessions at the upcoming Devtoberfest 2025&lt;/A&gt;, running online and free of charge from September 29 to October 24, 2025! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Stay tuned &lt;SPAN&gt;–&lt;/SPAN&gt;&amp;nbsp;and see you there!&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14175995"/>
    <published>2025-08-22T17:20:44.662000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14187974</id>
    <title>ABAP Cloud Sessions at SAP TechEd in 2025</title>
    <updated>2025-08-22T20:27:47.137000+02:00</updated>
    <author>
      <name>CarineTchoutouo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1462</uri>
    </author>
    <content>&lt;P&gt;Hey Everyone!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd in 2025&lt;/A&gt;&lt;/STRONG&gt; kicks off on the 4th of November 2025, and preparations&amp;nbsp;&lt;SPAN&gt;are now in full swing at SAP!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP TechEd is the leading tech conference for all developers, IT professionals, business experts, tech visionaries, innovators, and leaders eager to gain in-depth knowledge of SAP’s solutions, platforms, and technologies, along with insights into their future direction. It also offer an opportunity to network and connect with peers and SAP experts.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In 2025, &lt;STRONG&gt;SAP TechEd&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;goes hybrid&lt;/STRONG&gt;, kicking off with parallel events &lt;/SPAN&gt;&lt;SPAN&gt;in Berlin, Louisville, and online – &lt;/SPAN&gt;&lt;SPAN&gt;followed by SAP TechEd on Tour stops in Australia, India, UK, and Germany for a unique opportunity for an in-depth, in-person learning experience. Except for the Berlin and Bangalore stops, the on-site events are organized in partnership with, and hosted by, SAP User Groups and SAPinsider.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The choice is yours: join us on-site in Berlin or Louisville (at ASUG Tech Connect), or online for the first events in the series!&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;Save the date and &lt;/STRONG&gt;&lt;STRONG&gt;register now&lt;/STRONG&gt;!&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;November 4 - 6, 2025&lt;BR /&gt;&lt;A href="https://www.sap.com/germany/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Berlin&lt;/A&gt;&amp;nbsp;| &lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;Online (free)&lt;/A&gt; | &lt;A href="https://www.sap.com/events/2025-11-04-us-pe-asug-tech-connect.html" target="_blank" rel="noopener noreferrer"&gt;Louisville&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1867043592"&gt;ABAP Cloud at SAP TechEd in 2025&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;What to Expect&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A title="ABAP Cloud" href="https://help.sap.com/docs/abap-cloud" target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CarineTchoutouo_0-1755888895164.png" style="width: 86px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304101iB764B49D270DC480/image-dimensions/86x39/is-moderation-mode/true?v=v2" width="86" height="39" role="button" title="CarineTchoutouo_0-1755888895164.png" alt="CarineTchoutouo_0-1755888895164.png" /&gt;&lt;/span&gt;&lt;/A&gt;ABAP continues to evolve, and SAP TechEd events in 2025 are the best place to see what’s next. Beyond the integration of ABAP Cloud into SAP Build announced last year, and the integration of SAP Joule for Developers into the ABAP development tools along with the ABAP AI SK to infuse AI into your business processes earlier this year,&amp;nbsp; you’ll have the opportunity to explore the latest innovations and updates in ABAP Cloud, AI-based&amp;nbsp;custom code transformation, clean core practices, and the new clean core levels approach for SAP S/4HANA extensibility in both the private cloud and on-premise.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;Why Attending ABAP Sessions Matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Get a &lt;STRONG&gt;clear direction&lt;/STRONG&gt; for your ABAP strategy, whether you're on ECC, S/4HANA, or SAP BTP&lt;/LI&gt;&lt;LI&gt;Learn how to &lt;STRONG&gt;modernize custom development&lt;/STRONG&gt; without touching the core&lt;/LI&gt;&lt;LI&gt;See how&amp;nbsp;&lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities &lt;/STRONG&gt;can support faster, cleaner development&lt;/LI&gt;&lt;LI&gt;Take home &lt;STRONG&gt;practical skills&lt;/STRONG&gt; for RAP, testing, ABAP Test Cockpit, governance, and more&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Access the SAP TechEd 2025 session catalogs: &amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Berlin&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://www.sap.com/germany/events/teched/virtual.html" target="_blank" rel="noopener noreferrer"&gt;SAP TechEd Virtual&lt;/A&gt;&amp;nbsp;| &lt;A href="https://events.asug.com/event/e7bd56fe-4c89-4e90-bc2c-ff75b4cc099b/agenda" target="_blank" rel="noopener nofollow noreferrer"&gt;ASUG Tech Connect&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H1 id="toc-hId-1412364649"&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;ABAP Cloud Sessions at SAP TechEd &lt;FONT color="#0000FF"&gt;Berlin&lt;/FONT&gt; 2025&amp;nbsp;&lt;/H1&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp;&lt;A href="https://www.sap.com/events/teched/berlin.html" target="_blank" rel="noopener noreferrer"&gt;Event Info&lt;/A&gt;:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dates&lt;/STRONG&gt;: November 4–6, 2025&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Location&lt;/STRONG&gt;: Messe Berlin (Berlin, Germany)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Session formats&lt;/STRONG&gt;: Strategy talks, roadmap updates, deep dives, community talks, and hands-on workshops&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;9 Content tracks&lt;/STRONG&gt;: ABAP sessions primarily in the tracks "Application Development &amp;amp; Automation (&lt;SPAN class=""&gt;AD&lt;/SPAN&gt;)" and "&lt;SPAN&gt;Digital Transformation with Cloud&amp;nbsp;&lt;SPAN class=""&gt;ERP&lt;/SPAN&gt;&amp;nbsp;(&lt;SPAN class=""&gt;DT&lt;/SPAN&gt;)"&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1344933863"&gt;&lt;span class="lia-unicode-emoji" title=":microphone:"&gt;🎤&lt;/span&gt;Keynote&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1755527936875001jfGl" target="_blank" rel="noopener noreferrer"&gt;KEY100 | Beyond the hype: How SAP is supercharging developers for what's next&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;Some experts argue there’s a developer shortage. Others will say developers are no longer needed due to AI. Let’s get real: developers, architects, and technologists are here to stay, and their roles are more important than ever. Explore how the latest technology, tools, AI, agents, and learning from SAP can help you adapt these changing roles.&amp;nbsp;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1148420358"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Strategy Talks (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109536463001vLhp" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST109&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud Strategy&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; | &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;also available virtually as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; ST119v&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;The ABAP Cloud strategy as part of SAP Build and the SAP strategy go hand-in-hand. Explore in this session what this means for our major topics ABAP AI and Custom Code Transformation and how we integrate Business Data Cloud. Furthermore, learn about the ABAP IDE strategy and how we support the sovereign cloud.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Sonja Lienard (SAP), &lt;SPAN&gt;Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132378115001LmnQ" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;ST113&lt;/SPAN&gt; – &lt;SPAN&gt;Journey to unified extensibility in SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore the strategy for extensibility across SAP Business Suite and cloud ERP. Learn why AI-driven development with the SAP Build solution including ABAP Cloud is key, and how the planned harmonization will make it easier to build extensions and support the clean core. Furthermore, learn about opportunities for partners to extend SAP solutions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Boris Gebhardt (SAP),&amp;nbsp;Khaled Musilhy (SAP), tbd&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-951906853"&gt;&lt;span class="lia-unicode-emoji" title=":world_map:"&gt;🗺&lt;/span&gt;️ Roadmap Sessions (25 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749109867231001jec8" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;AD808&lt;/SPAN&gt; – &lt;SPAN&gt;SAP Build: ABAP Cloud road map&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;See our upcoming innovations for the ABAP Cloud development model including Joule and the Business Data Cloud integration in context and get updates on the roadmap ahead.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Boris Gebhardt (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749132621235001F9CC" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;DT814&lt;/SPAN&gt; – &lt;SPAN&gt;Extensibility innovations road map for SAP Business Suite and cloud ERP&lt;/SPAN&gt;&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;SPAN&gt;Explore upcoming extensibility innovations for SAP Business Suite and cloud ERP. Discover road maps for suite extensibility, harmonization, and partner enablement for commercial use cases. Learn more about upcoming innovations for AI-driven extensibility with the SAP Build solution including ABAP Cloud to support your clean core strategy.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Oren Shatil (SAP),&amp;nbsp;Boris Gebhardt (SAP),&amp;nbsp;&lt;SPAN&gt;External Speaker&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-755393348"&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;Deep Dives (45 minutes&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110017215001w1iM" target="_blank" rel="noopener noreferrer"&gt;AD104 – Boost your &amp;nbsp;ABAP development with Joule for developers&lt;/A&gt; &lt;/STRONG&gt;&amp;nbsp;&lt;SPAN&gt;| also available virtually as &lt;STRONG&gt;AD104v&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;In this deep dive session you will learn all aspects of the ABAP AI strategy, from accelerating your ABAP development, over developing custom AI scenarios, up to using Joule to transform your ABAP code.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Simona Marincei (SAP), Olga Dolinskaja (SAP)&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110856633001ZdrC" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD105&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Introduction to ABAP Cloud and how to get started&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;&lt;SPAN&gt;ABAP Cloud is the new way of developing ABAP—fully cloud-enabled and driven by AI. It combines cloud technologies with a clear separation of SAP and custom code, and in this way revolutionizes ABAP development. Grasp the major concepts of ABAP Cloud and learn how you can upskill. Also learn about Bosch Digital’s journey to ABAP Cloud and clean core.&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Carine Tchoutouo Djomo (SAP), External Speaker&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749110615653001ATih" target="_blank" rel="noopener noreferrer"&gt;AD201 – Explore ABAP Cloud in SAP Build - what's in for ABAP developers?&amp;nbsp;&lt;/A&gt; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this deep dive we will highlight the importance of our strategic approach of integrating ABAP Cloud in SAP Build. Learn how you can benefit from this for Fiori App development and how the graphical modeler helps you to create ABAP CDS models conveniently. Finally, get insights into the future direction.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Dr. &lt;/SPAN&gt;Anne Keller&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Katja Zoch&lt;SPAN&gt; (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749071777465001lGIE" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT200&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Unravel the mysteries of Clean Core extensions in Cloud ERP Private&amp;nbsp;&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the new, enhanced clean core extensibility concept in SAP S/4HANA Cloud Private Edition. Learn about tools like ABAP Test Cockpit and RISE Dashboard, as well as guidance and best practices that help you to measure, govern, re-factor and develop your custom extensions in a clean core compliant, upgrade stable and cloud-ready way.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Olga Dolinskaja (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749073857569001yTng" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;DT201&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Extensibility with ABAP Cloud and AI in SAP Cloud ERP&lt;/STRONG&gt;&lt;/A&gt;&lt;BR /&gt;Learn about the on-stack key user and developer tools in the ABAP Cloud development model, now enhanced with generative AI. See how you can extend standard SAP applications and manage your custom apps directly in SAP S/4HANA Cloud Public Edition. Get insights into latest innovations for transactional, analytical, and integration use cases, such as the extensibility AI Assistant, editable tree-views, custom queries for analytical SAP Fiori apps, ABAP SQL services and more.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: &lt;/SPAN&gt;Carine Tchoutouo Djomo&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;, Oren Shatil&lt;SPAN&gt; (SAP)&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-558879843"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Hands-On Workshops (2 hours)&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111133585001neK1" target="_blank" rel="noopener noreferrer"&gt;AD162 – Explore Joule for developers, ABAP AI capabilities&lt;/A&gt; &amp;nbsp; &lt;/STRONG&gt;&amp;nbsp;&lt;BR /&gt;Learn how to develop a RAP business object while exploring Joule's ABAP AI capabilities&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Sebastian Baskovich (SAP), Thomas Alexander Ritter (SAP), Dr. Anne Keller (SAP), Simona Marincei (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749111362893001Nrqs" target="_blank" rel="noopener noreferrer"&gt;AD163 – Fusion Development with ABAP Cloud in SAP Build&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;In this session we will practice fusion development of ABAP Cloud in SAP Build by creating an ABAP Cloud project from the SAP Build lobby to develop a RAP BO including a Fiori application on top.&lt;SPAN&gt;&lt;BR /&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Braüninger (SAP), Sebastian Baskovich (SAP), Anne Keller (SAP), Katja Zoch (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749112624677001Rt0T" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;AD164&amp;nbsp;–&lt;/STRONG&gt;&lt;STRONG&gt; Get started with ABAP Cloud for classic ABAP developers&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Familiar with classic ABAP development? Join us to learn how similar development works with ABAP Cloud development model using the ABAP RESTful application programming model (RAP). ABAP Cloud is the comprehensive model for building cloud-ready business apps, services, and extensions that follow clean core principles by default – on SAP BTP and SAP S/4HANA, both in the cloud and on-premise.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Volker Drees (SAP), Carine Tchoutouo Djomo (SAP), Boris Gebhardt (SAP), Jürgen Reidl (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749072760273001q6Pm" target="_blank" rel="noopener noreferrer"&gt;DT260 – Modernize classic extensions to clean core in Cloud ERP Private&lt;/A&gt; &amp;nbsp; &amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;In this session you will practice a clean core extensibility in SAP S/4HANA Cloud Private Edition. You will learn how to govern clean core development using the ABAP Test Cockpit, and how to use ABAP Cloud and clean core extensibility principles to modernize your custom on-stack extensions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Olga Dolinskaja (SAP), Thomas Fiedler (SAP), Markus Goebel (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749074059125001cpvA" target="_blank" rel="noopener noreferrer"&gt;DT261 – Build on-stack extensions with ABAP Cloud in Cloud ERP Public&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;Join us to discover how to build extensions, applications, and services with the ABAP Cloud development model, using the ABAP RESTful application programming model and generative AI. You will learn how to extend standard SAP applications, consume public SAP APIs, and build new apps and services from scratch. Get practical insights through exercises and take the opportunity to ask your questions.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Ingo Bräuninger (SAP), Carine Tchoutouo Djomo (SAP),&amp;nbsp;Volker Drees (SAP), Steffen Mattes (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;A href="https://www.sap.com/events/teched/berlin/flow/sap/te25/catalog-inperson/page/catalog/session/1749650347432001y6fi" target="_blank" rel="noopener noreferrer"&gt;DT266 – Troubleshoot and Optimize ABAP Cloud Extensions in Cloud ERP&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Ensuring optimal performance and stability of your ABAP Cloud-based extensions is crucial to long-term success. Learn advanced techniques and best practices for troubleshooting and optimizing custom code in the Cloud ERP. Use powerful tools like ABAP Cross Trace to get deep insights into execution flows and resource consumption.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;Speakers&lt;/U&gt;: Steffen Mattes (SAP), Juergen Reidl (SAP), Thomas Alexander Ritter (SAP), Thomas Fiedler (SAP)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-362366338"&gt;&lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;Join Us&lt;/H2&gt;&lt;P&gt;I hope this overview gives you even more reasons to join us at one of the &lt;A href="https://www.sap.com/events/teched.html" target="_self" rel="noopener noreferrer"&gt;SAP TechEd 2025 tour stops&lt;/A&gt;&amp;nbsp;in Berlin (DE), Louisville (US), Sydney (AU), Bangalore (IN), Birmingham (UK), or Hamburg (DE)&amp;nbsp;– or attend online, free of charge!&lt;/P&gt;&lt;P&gt;We look forward to meeting and interacting with you! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;In the meantime, you can watch the replays &lt;/SPAN&gt;&lt;SPAN&gt;of last year's events:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2024/ba-p/13783420" target="_blank"&gt;ABAP Cloud at SAP TechEd Virtual 2024&lt;/A&gt;&amp;nbsp;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/abap-cloud-at-devtoberfest-by-sap-teched-2024/ba-p/13789730" target="_blank"&gt;ABAP Cloud at SAP's Devtoberfest in 2024&lt;/A&gt;&lt;SPAN&gt;.&amp;nbsp;You can also have a look at the&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":fire:"&gt;🔥&lt;/span&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-devtoberfest-2025/ba-p/14187974" target="_self"&gt;ABAP Cloud sessions at the upcoming Devtoberfest 2025&lt;/A&gt;, running online and free of charge from September 29 to October 24, 2025! &lt;span class="lia-unicode-emoji" title=":handshake:"&gt;🤝&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Stay tuned &lt;SPAN&gt;–&lt;/SPAN&gt;&amp;nbsp;and see you there!&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cloud-sessions-at-sap-teched-in-2025/ba-p/14187974"/>
    <published>2025-08-22T20:27:47.137000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/setting-default-values-in-rap-entity-creation-default-values-functions/ba-p/14188152</id>
    <title>Setting Default Values in RAP Entity Creation: Default Values Functions, Actions, and Augmentation</title>
    <updated>2025-08-23T23:30:51.317000+02:00</updated>
    <author>
      <name>MioYasutake</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/789</uri>
    </author>
    <content>&lt;P&gt;Setting default values when creating a new entity is a common requirement in RAP-based application development. Currently, there are three options available:&amp;nbsp;&lt;STRONG&gt;Default Values Function, Default Factory Action, and Augmentation&lt;/STRONG&gt;. In this blog post, I will walk through the implementation of each technique and explain when to use them.&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1737982912"&gt;Quick Comparison of Defaulting Options in RAP&lt;/H2&gt;&lt;P&gt;Here is a summary of the three options for setting default values in RAP entity creation.&lt;/P&gt;&lt;TABLE border="1" width="98.55855969778904%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;Default Values Function&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;Default Factory Action&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;Augmentation&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Can set default values for the root entity?&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&lt;P&gt;Can accept parameters?&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;&lt;P&gt;Can create child entities along with the root entity?&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="25%"&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Can set defaults when creating a child entity independently?&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;✖&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;✔&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1541469407"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1344955902"&gt;When to Use Each Approach&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Values Function&lt;/STRONG&gt;: Best when you want to set static default values. “Static” here still allows values depending on runtime context, such as the logged-in user, the current date, values from related entities.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt;: Use this when defaults need to be determined dynamically based on user input. It can also create child entities together with the root entity. However, it cannot be used for creating child entities independently; in that case, use a Default Values Function or Augmentation.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Augmentation&lt;/STRONG&gt;: This is defined at the &lt;STRONG&gt;projection layer&lt;/STRONG&gt;, not at the base behavior definition. It is mainly useful when you cannot or do not want to change the base behavior.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1148442397"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-951928892"&gt;Notes on Combining the Methods&lt;/H2&gt;&lt;P&gt;These methods &lt;STRONG&gt;cannot be combined&lt;/STRONG&gt; for the same entity.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Values Function + Augmentation&lt;/STRONG&gt; → Both are called, but only the values from the Default Values Function are applied.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Values Function + Default Factory Action&lt;/STRONG&gt; → Only the action is executed, but no default values are set.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Default Factory Action + Augmentation&lt;/STRONG&gt; → Only the action is executed, but no default values are set.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;In practice, always choose one method per entity.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;EM&gt;The above results are based on my own testing, not on official documentation. There may be inaccuracies.&lt;/EM&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1013580825"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H2 id="toc-hId-558901882"&gt;Sample Code&lt;/H2&gt;&lt;P&gt;In all of the following examples, the root entity is &lt;STRONG&gt;Employee&lt;/STRONG&gt;&amp;nbsp;and the child entity is &lt;STRONG&gt;Address&lt;/STRONG&gt;.&lt;BR /&gt;Each method demonstrates how to set default values for &lt;STRONG&gt;Employee&lt;/STRONG&gt;&amp;nbsp;as well as for Address&amp;nbsp;(when applicable).&lt;/P&gt;&lt;H3 id="toc-hId-491471096"&gt;1. Default Values Function&lt;/H3&gt;&lt;H4 id="toc-hId-424040310"&gt;Behavior Definition&lt;/H4&gt;&lt;P&gt;Define default values functions.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: &lt;STRONG&gt;GetDefaultsForCreate&lt;/STRONG&gt; is the predefined function name and can be omitted.&lt;/EM&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  // Default values for the root entity  
  create {default function GetDefaultsForCreate; }

  // Default values for the child entity (via create-by-association)  
  association _Address {create {default function GetDefaultsForCBA;}  with draft;}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-227526805"&gt;Behavior Projection&lt;/H4&gt;&lt;P&gt;Expose default values functions.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use function GetDefaultsForCreate;
  use function GetDefaultsForCBA;&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--466703795"&gt;Behavior Implementation&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD GetDefaultsForCreate.
    result = value #( for key in keys (
               %cid = key-%cid
               %param-LastName = 'Default Last Name'
                ) ).
  ENDMETHOD.

  METHOD GetDefaultsForCBA.
    result = value #( for key in keys (
                      %tky = key-%tky
                      %param-Purpose = 'Default Purpose'
                    ) ).
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--369814293"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--566327798"&gt;2.&amp;nbsp;&lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId--1056244310"&gt;Behavior Definition&lt;/H4&gt;&lt;P&gt;Define a default factory action. In this example, an input parameter ZABS_EMPLOYEE_INPUT is used. If no input is required, the parameter can be omitted.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;static default factory action MyDefaultActionForCreate parameter ZABS_EMPLOYEE_INPUT [1];&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;ZABS_EMPLOYEE_INPUT is defined as a CDS abstract entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Input for employee default action'
define abstract entity ZABS_EMPLOYEE_INPUT
{
    @EndUserText.label: 'Employee Type'
    EmployeeType: abap.int1;    
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1252757815"&gt;Behavior Projection&lt;/H4&gt;&lt;P&gt;Expose the default factory action.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action MyDefaultActionForCreate;&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--1449271320"&gt;Behavior Implementation&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD MyDefaultActionForCreate.
    DATA employee_create TYPE TABLE FOR CREATE zr_employee_2508.
    DATA employee_create_line TYPE STRUCTURE FOR CREATE zr_employee_2508.
    DATA address_create TYPE TABLE FOR CREATE zr_employee_2508\_Address.
    DATA address_create_line TYPE STRUCTURE FOR CREATE zr_employee_2508\_Address.

    LOOP AT keys INTO DATA(key).
      " Set default data for Employee
      employee_create_line = VALUE #(
        %cid = key-%cid
        %is_draft = key-%param-%is_draft
        FirstName = SWITCH #( key-%param-EmployeeType
                              WHEN 1 THEN 'Default 1'
                              WHEN 2 THEN 'Default 2'
                              WHEN 3 THEN '' )
        %control = VALUE #( FirstName = if_abap_behv=&amp;gt;mk-on )
       ).
      APPEND employee_create_line TO employee_create.

      " Set default data for Address
      address_create_line = VALUE #(
       %cid_ref = key-%cid
       %is_draft = key-%param-%is_draft
       %target = VALUE #( ( %cid = sy-tabix
                            %is_draft = key-%param-%is_draft
                            Purpose = 'Default'
                            %control = VALUE #( Purpose = if_abap_behv=&amp;gt;mk-on ) ) )
      ).
      APPEND address_create_line TO address_create.
    ENDLOOP.

    "Create new instance of Employee
    MODIFY ENTITIES OF zr_employee_2508 IN LOCAL MODE
      ENTITY Employee
      CREATE FROM employee_create
      CREATE BY \_Address
      FROM address_create
      MAPPED DATA(mapped_create).

    mapped-employee = mapped_create-employee.
    mapped-address = mapped_create-Address.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--1352381818"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId--1548895323"&gt;3. Augmentation&lt;/H3&gt;&lt;H4 id="toc-hId--2038811835"&gt;Behavior Projection&lt;/H4&gt;&lt;P&gt;Augmentations are defined only in the Behavior Projection. The keyword "&lt;STRONG&gt;augment&lt;/STRONG&gt;" is used to define them.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  // Default values for the root entity  
  use create (augment);

  // Default values for the child entity (via create-by-association)  
  use association _Address {create (augment); with draft;}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-2059641956"&gt;Behavior Implementation&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD augment_create.
    DATA employee_create TYPE TABLE FOR CREATE zr_employee_2508.
    DATA address_create TYPE TABLE FOR CREATE zr_employee_2508\_Address.
    DATA address_create_line TYPE STRUCTURE FOR CREATE zr_employee_2508\_Address.
    DATA relates_create TYPE abp_behv_relating_tab.
    DATA tabix TYPE sy-tabix.

    employee_create = CORRESPONDING #( entities ).

    LOOP AT employee_create ASSIGNING FIELD-SYMBOL(&amp;lt;employee&amp;gt;).
      " Count table index for generating unique %cid for Address
      tabix = sy-tabix.
      APPEND tabix TO relates_create.

      " Set Default Data for Employee
      &amp;lt;employee&amp;gt;-DateOfBirth = '19900101'.
      &amp;lt;employee&amp;gt;-%control-DateOfBirth = if_abap_behv=&amp;gt;mk-on.

      " Set Default Data for Address
      address_create_line = VALUE #( %cid_ref = &amp;lt;employee&amp;gt;-%cid
                     %is_draft = &amp;lt;employee&amp;gt;-%is_draft
                     %key = &amp;lt;employee&amp;gt;-%key
                     %target = VALUE #( ( %cid = tabix
                                          %is_draft = &amp;lt;employee&amp;gt;-%is_draft
                                          Purpose = 'Augmented Address'
                                          %control = VALUE #( Purpose = if_abap_behv=&amp;gt;mk-on )
                                        ) )
                     ).
      APPEND address_create_line TO address_create.
    ENDLOOP.

    MODIFY AUGMENTING ENTITIES OF zr_employee_2508
      ENTITY Employee
      CREATE FROM employee_create
      CREATE BY \_Address
      FROM address_create
      RELATING TO entities BY relates_create.
  ENDMETHOD.

  METHOD augment_cba_Address.
    DATA address_create TYPE TABLE FOR CREATE zr_employee_2508\_Address.
    DATA relates_update TYPE abp_behv_relating_tab.

    address_create = CORRESPONDING #( DEEP entities ).

    LOOP AT address_create ASSIGNING FIELD-SYMBOL(&amp;lt;address&amp;gt;).
      LOOP AT &amp;lt;address&amp;gt;-%target ASSIGNING FIELD-SYMBOL(&amp;lt;target&amp;gt;).
        &amp;lt;target&amp;gt;-Purpose = 'Augmented Address CBA'.
        &amp;lt;target&amp;gt;-%control = VALUE #( Purpose = if_abap_behv=&amp;gt;mk-on ).
      ENDLOOP.
    ENDLOOP.

    MODIFY AUGMENTING ENTITIES OF zr_employee_2508
      ENTITY Employee
      CREATE BY \_Address
      FROM address_create.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--1676849140"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1873362645"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;When setting default values in RAP, you can choose between &lt;STRONG&gt;Default Values Function&lt;/STRONG&gt;, &lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt;, and &lt;STRONG&gt;Augmentation&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;Default Values Function&lt;/STRONG&gt; for static defaults.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;Default Factory Action&lt;/STRONG&gt; for dynamic defaults or when creating child entities together with the root.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;Augmentation&lt;/STRONG&gt; only at the projection layer, when the base behavior cannot be changed.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;Since these methods cannot be combined for the same entity, always pick the one that best matches your scenario.&lt;/P&gt;&lt;H2 id="toc-hId--2069876150"&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/operation-defaulting" target="_self" rel="noopener noreferrer"&gt;Operation Defaulting (Default Values Function) | SAP Help Portal&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/ABENBDL_ACTION_DEFAULT_FACTORY.html" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;RAP - Default Factory Action&amp;nbsp; | ABAP Keyword Documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/fc4c71aa50014fd1b43721701471913d/fd45f76da7ab49bd8a6ef94a4b64f340.html" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;Editing Text for Supplements (Augmentation) | SAP Help Portal&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/setting-default-values-in-rap-entity-creation-default-values-functions/ba-p/14188152"/>
    <published>2025-08-23T23:30:51.317000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/deep-dive-and-experience-sharing-into-sap-joule-for-developers-j4d/ba-p/14202765</id>
    <title>Deep Dive and Experience Sharing into SAP Joule for Developers(J4D)</title>
    <updated>2025-09-01T10:51:09.610000+02:00</updated>
    <author>
      <name>ChandraBhushanSingh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/123700</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt; This blog is not written by any LLM.&lt;/P&gt;&lt;P&gt;Well, to start with, Joule for Developers, let us understand what it is?&lt;/P&gt;&lt;P&gt;Many people have a misconception that Joule for Developers or J4D is just an ABAP AI capability. But it is much more beyond ABAP. Joule for Developers(J4D) is&amp;nbsp;&lt;SPAN&gt;collective name for the AI-powered design-time capabilities across SAP Build and ABAP&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;It includes new and existing features enabled by Joule in:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Code&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Apps&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Build Process Automation&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;ABAP in SAP BTP and S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;These capabilities help developers build faster, code smarter, and automate better. Is that true? I will my honest opinion for some of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I have personally worked on SAP Build Apps, SAP Build Code and Joule for Developers, ABAP AI. I started with a lot of ambiguity and finally I made a mark that I could now explain it to our customers and users.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;SAP Build Apps allow for generating pages to handle data entities and generate sample data automatically. It means, whenever you integrate any oData service/REST API/SAP BTP Destination, you get an option to automatically create the User Interface and also generate sample data.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build Code, has evolved through multiple iterations and seems it is still evolving.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Created Fiori element app using Image&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Created a series of projects with prompts&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Created test data&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With ABAP AI, I could create a report with the suggestions popping up in run time and that too contextually aware code prompts also known to be predictive code completion feature. We called it Ghost Code. But trust me sometimes they are really good too.&amp;nbsp;&lt;/P&gt;&lt;P&gt;I see the ABAP and CDS unit scripts getting generated in no time. It was good again on this parameter.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Code explain, well I created small projects, hence feel it is good to have comments. But the true colors will be visible when you look at the repository of thousands lines of code written by someone and you have no clue of what it is. Using your skills you debug the code to understand what each block/function is doing. &lt;STRONG&gt;It is a life saver in this scenario.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP Build Code has the GenAI embedded as part of the service itself. There is no explicit step which need to perform other than just subscribing to this service via the Boosters (from the SAP BTP Global Account).&lt;/P&gt;&lt;P&gt;For SAP Build Apps and SAP Build Process Automation, everything under the new SAP Build Offering, will have the GenAI capability turned off by default. Then, how do you turn it on?&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to your SAP BTP Subaccount and access the SAP Build Apps and SAP Build Process Automation service from the 'Instances and Subscription' option&lt;/LI&gt;&lt;LI&gt;SAP Build Lobby will open&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 1 - Access SAP Build Lobby" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307593i7E3BFEFFAF1F7B9E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai.png" alt="Step 1 - Access SAP Build Lobby" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 1 - Access SAP Build Lobby&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Now go to the 'Control Tower' in the right hand side panel, last option&lt;SPAN&gt;&amp;nbsp;and then click on the 'Generative AI' tile in the top row, right hand side 'Tenant Configuration'&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 2 - Click on Control Tower Option in Left Hand Pane" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307592i47661B4253B39EFA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai1.png" alt="Step 2 - Click on Control Tower Option in Left Hand Pane" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 2 - Click on Control Tower Option in Left Hand Pane&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Switch on the toggle button of Generative AI&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 3 - Click on Generative AI tile in the right hand pane" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307591i872063908D8D8DF5/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai2.png" alt="Step 3 - Click on Generative AI tile in the right hand pane" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 3 - Click on Generative AI tile in the right hand pane&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Read the AI Terms and Conditions and scroll to the bottom of the Terms and Conditions to enable the checkbox of 'I have read the terms and conditions' - this is called as 'Scroll wrap agreement' in the language of Law - it means you agree to the Terms and Conditions and read till the last of the agreement.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 5 - Read/Scroll to the end of the AI Terms &amp;amp; Conditions" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307594i068E5BEE9B1A6CDA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai3.png" alt="Step 5 - Read/Scroll to the end of the AI Terms &amp;amp; Conditions" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 5 - Read/Scroll to the end of the AI Terms &amp;amp; Conditions&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Click on the checkbox of 'I have read the terms and conditions'&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 6 - Click on 'Accept' button on the right hand bottom corner" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307596iC4C66B6BE01BF572/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai4.png" alt="Step 6 - Click on 'Accept' button on the right hand bottom corner" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 6 - Click on 'Accept' button on the right hand bottom corner&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Now click on the 'Accept' button&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Step 4 - Turn on the toggle of Enable Generative AI features" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307595i56E831D3A9DB7BB6/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="blog_genai5.png" alt="Step 4 - Turn on the toggle of Enable Generative AI features" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Step 4 - Turn on the toggle of Enable Generative AI features&lt;/span&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;That's it. Now you can explore the GenAI capability inside SAP Build Apps and SAP Build Process Automation.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Some people have questions whether they need to sign a 0 USD AI Terms and Conditions contract to activate the GenAI capability for J4D. The answer is, except for 'Joule for Developers ABAP AI' capability, you do NOT need to sign an explicit contract for AI Terms and Conditions. They are all embedded within the services.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Well this will be an evolving document, where I will keep updating my reviews on each of these services mentioned. Stay tuned!&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/deep-dive-and-experience-sharing-into-sap-joule-for-developers-j4d/ba-p/14202765"/>
    <published>2025-09-01T10:51:09.610000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-simple-example-of-a-sap-rap-application-based-on-legacy-api-without-uuid/ba-p/14184282</id>
    <title>A simple example of a SAP RAP Application based on Legacy API without UUID keys</title>
    <updated>2025-09-01T11:19:39.744000+02:00</updated>
    <author>
      <name>cseijas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/102138</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608782083"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In SAP RAP, it is very easy to develop an application when the entities involved use UUIDs as keys. However, there are lots of legacy APIs and data models that does not have these type of keys. Usually this legacy APIs have the following characteristics in common:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;They have a CREATE operation that generates the entity (and subentities) in one call. The successful execution of this create operation generates the new entity Id (e.g.&amp;nbsp;BAPI_PO_CREATE1 with internal numbering)&lt;/LI&gt;&lt;LI&gt;They have an UPDATE operation that changes the entity (and subentities) in one call. Usually this operation contains&amp;nbsp; BAPIUPDATE structures to indicate which fields are being changed (e.g.&amp;nbsp;BAPI_PO_CHANGE).&lt;/LI&gt;&lt;LI&gt;Somentimes they have a DELETE operation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Although RAP framework allows to reuse these objects, I had some doubts when implementing my first real cases (when to call each API Operation, for example), so I write this blog in order to summarize my findings and provide a simple example of an RAP application with a UI that allows to execute CRUD operations in an entity that has a Legacy API to maintain it.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In order to keep things simple and do not depend in the specific configuration of any system, the development has been based in the Unmanaged Transactional App example of the ABAP Restful Programming Model Documentation (&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/fc4c71aa50014fd1b43721701471913d/f6cb3e3402694f5585068e5e5161a7c1.html?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Developing Unmanaged Transactional Apps&lt;/A&gt;), although in our case we will implement a managed app with unmanaged save and late numbering. Also, only the relevant elements for the example have been included in this article, not covering other elements that are similar to the Unmanaged Transactional App Example (Behavior Projection, Projection Views, Metadata Extensions, etc...). The complete source code of the application can be found in this GitHub repository:&amp;nbsp;&lt;A href="https://github.com/cesarsn/RAP-LateNumbering-UnmanagedSave.git" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/cesarsn/RAP-LateNumbering-UnmanagedSave.git&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Mor information can be found in the following blogs that were used as reference along with SAP Help:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-bapis-in-rap/ba-p/13560875" target="_self"&gt;Using BAPIs in RAP&lt;/A&gt;&amp;nbsp;by Marcel Hermanns&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/exposing-bapi-as-odata-api-using-rap-facade/ba-p/13571926" target="_self"&gt;Exposing BAPI as OData API using RAP Facade&lt;/A&gt;&amp;nbsp; by Marcel Wahl&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1412268578"&gt;Legacy Data Model&lt;/H1&gt;&lt;P&gt;As was stated previously, in order to do the example, we will use the Flight Reference Scenario of SAP RAP (&lt;A href="https://github.com/SAP-samples/abap-platform-refscen-flight" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/SAP-samples/abap-platform-refscen-flight&lt;/A&gt;), using the legacy objects that are defined in package&amp;nbsp;/DMO/FLIGHT_LEGACY.&amp;nbsp;&amp;nbsp;We will use the following API function modules to maintain Travels (table&amp;nbsp;/DMO/TRAVEL) and Bookings (table /DMO/BOOKING):&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;/DMO/FLIGHT_TRAVEL_CREATE: creates a new travel (and bookings).&lt;/LI&gt;&lt;LI&gt;/DMO/FLIGHT_TRAVEL_UPDATE: updates a travel (and its bookings)&lt;/LI&gt;&lt;LI&gt;/DMO/FLIGHT_TRAVEL_DELETE: deletes a travel (and its bookings)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For this example, we will&amp;nbsp;try to avoid numbering gaps when creating travels, and&amp;nbsp; the user should be allowed to manually inform the booking id during creation of a new booking (similar to giving the item id for the Purchase Order or Sales Order), with the system proposing next booking id to be used.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1215755073"&gt;RAP Entities&lt;/H1&gt;&lt;H3 id="toc-hId-1277407006"&gt;Travel data&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Travel data'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZI_Travel_U_CSN 
  as select from /dmo/travel as Travel -- the travel table is the data source for this view
  composition [0..*] of ZI_Booking_U_CSN as _Booking
  association [0..1] to /DMO/I_Agency    as _Agency   on $projection.AgencyID = _Agency.AgencyID
  association [0..1] to /DMO/I_Customer  as _Customer on $projection.CustomerID = _Customer.CustomerID
  association [0..1] to I_Currency       as _Currency on $projection.CurrencyCode = _Currency.Currency
  association [1..1] to /DMO/I_Travel_Status_VH as _TravelStatus on $projection.Status = _TravelStatus.TravelStatus
{
    
  key Travel.travel_id     as TravelID,
      Travel.agency_id     as AgencyID,
      Travel.customer_id   as CustomerID,
      Travel.begin_date    as BeginDate,
      Travel.end_date      as EndDate,    
      @Semantics.amount.currencyCode: 'CurrencyCode'
      Travel.booking_fee   as BookingFee,
      @Semantics.amount.currencyCode: 'CurrencyCode'
      Travel.total_price   as TotalPrice,
      Travel.currency_code as CurrencyCode,
      Travel.description   as Memo,
      Travel.status        as Status,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true 
      cast( '0' as abp_locinst_lastchange_tstmpl ) as LocalLastChangeDateTime,
      Travel.createdat as CreatedAt,
      Travel.createdby as CreatedBy,
      Travel.lastchangedat as LastChangedAt,
      Travel.lastchangedby as LastChangedBy,
      /* Associations */
      _Booking,
      _Agency,
      _Customer,
      _Currency,
      _TravelStatus
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It has been added a fixed value for attribute&amp;nbsp;LocalLastChangeDateTime as this will be the local Etag field that will be used in draft entity.&lt;/P&gt;&lt;H3 id="toc-hId-1080893501"&gt;Booking Data&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Booking data'
@Metadata.ignorePropagatedAnnotations: true
define view entity ZI_Booking_U_CSN 
  as select from /dmo/booking as Booking
  association        to parent ZI_Travel_U_CSN     as _Travel     on  $projection.TravelID = _Travel.TravelID
  association [1..1] to /DMO/I_Customer            as _Customer   on  $projection.CustomerID = _Customer.CustomerID
  association [1..1] to /DMO/I_Carrier             as _Carrier    on  $projection.AirlineID = _Carrier.AirlineID
  association [1..1] to /DMO/I_Connection          as _Connection on  $projection.AirlineID    = _Connection.AirlineID
                                                                  and $projection.ConnectionID = _Connection.ConnectionID
{
  key Booking.travel_id     as TravelID,
  key Booking.booking_id    as BookingID,
      Booking.booking_date  as BookingDate,
      Booking.customer_id   as CustomerID,
      Booking.carrier_id    as AirlineID,
      Booking.connection_id as ConnectionID,
      Booking.flight_date   as FlightDate,
      @Semantics.amount.currencyCode: 'CurrencyCode'
      Booking.flight_price  as FlightPrice,
      Booking.currency_code as CurrencyCode,
      /* Associations */
      _Travel,
      _Customer,
      _Carrier,
      _Connection
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Take into account that natural keys have been chosen (TravelId and BookingId) for this entity. This will have and impact in our numbering procedure as will be explained later.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-626214558"&gt;Behavior Definition&lt;/H1&gt;&lt;P&gt;The Behavior Definition of this BO is as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_i_travel_u_csn unique;
strict ( 2 );
with draft;

define behavior for ZI_Travel_U_CSN alias Travel
with unmanaged save
draft table ZITRVL_UCSND
lock master
total etag LastChangedAt
authorization master ( instance )
etag master LocalLastChangeDateTime
late numbering
{
  create;
  update;
  delete;
  field ( readonly ) TravelID;
  association _Booking { create {default function GetDefaultsForBookings;} with draft;  }

  draft action Edit;
  draft action Activate optimized;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

  mapping for /dmo/s_travel_in
  control /dmo/s_travel_intx
    {
      AgencyID      = agency_id;
      BeginDate     = begin_date;
      BookingFee    = booking_fee;
      CurrencyCode  = currency_code;
      CustomerID    = customer_id;
      EndDate       = end_date;
      Memo          = description;
      Status        = status;
      TotalPrice    = total_price;
      TravelID      = travel_id;
    }
}

define behavior for ZI_Booking_U_CSN alias Booking
with unmanaged save
draft table ZIBKNG_UCSND
lock dependent by _Travel
authorization dependent by _Travel
etag dependent by _Travel
late numbering
{
  update;
  delete;
  field ( readonly ) TravelID;
  field (readonly:update) BookingID;

  association _Travel {with draft;}

  mapping for /DMO/S_BOOKING_IN control /dmo/s_booking_intx
    {
      AirlineID    = carrier_id;
      BookingDate  = booking_date;
      BookingID    = booking_id;
      ConnectionID = connection_id;
      CurrencyCode = currency_code;
      CustomerID   = customer_id;
      FlightDate   = flight_date;
      FlightPrice  = flight_price;
      TravelID     = travel_id;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Take into account that in order to keep the example simple and focus on the updating logic, we do not include any validation or determination that will improve the usability of the application (for example mandatory fields, date coherence checks, etc...).&lt;/P&gt;&lt;P&gt;Let us check now the relevant points of this Behavior Definition.&lt;/P&gt;&lt;H2 id="toc-hId-558783772"&gt;Managed Implementation with Unmanaged Save&lt;/H2&gt;&lt;P&gt;Being the application Managed allows us to avoid all the coding that has to be implemented in an unmanaged applicationm and at the same time be able to reuse the API functions when saving data with the Unmanaged Save.&lt;/P&gt;&lt;P&gt;From my point of view, this is the easiest option to develop and app when we have a Legacy API: the runtime takes care of all the logic to create/update the entities during the interaction phase, while we can focus on business logic and fine tuning the application by using determinations, validations, side effects, ect...&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-362270267"&gt;Late Numbering&lt;/H2&gt;&lt;P&gt;In our case, Travel entity is created by API function&amp;nbsp;/DMO/FLIGHT_TRAVEL_CREATE with the id of the Travel being generated in this call.&amp;nbsp; As we prefer not to have gaps in our application, we are forced to use Late Numbering (as with Early Numbering an assigned travel Id will be lost if the user discards the draft during creation). This decission has however the following implications:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Draft table will have a new key field (&lt;SPAN&gt;draftuuid) that allows the assigment of a temporary key during entity creation. This is traslated to OData entity, where we have one additional key attribute (DraftUUID).&amp;nbsp; Take into account that DraftUUID is only informed by the runtime when creating new entities. When editing an existing entity it will be empty.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;As Booking entity includes Key fields of the Tavel Key (TravelId), this forces us to define also Late Numbering for this entity.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-165756762"&gt;Other relevant points&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;As an UI App will be generated, draft handling is defined for this BO.&lt;/LI&gt;&lt;LI&gt;It is included a mapping for the structures that uses our API functions (both for actual values and for updated flags).&lt;/LI&gt;&lt;LI&gt;As we want to propose next booking id for the user when creating a Booking entity, we define a defaults function&amp;nbsp;&lt;SPAN&gt;GetDefaultsForBookings for the "create by association" operation.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--159839462"&gt;Behavior Implementation&lt;/H1&gt;&lt;P&gt;Behavior is implemented with Behavior Pool&amp;nbsp;&lt;SPAN&gt;zbp_i_travel_u_csn. Let us check the relevant elements for Local Types include, when the RAP BO Business Logic is defined.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-119984109"&gt;&lt;SPAN&gt;Handler class LHC_TRAVEL&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This class correspond to Business Logic of entity Travel.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_Travel DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR Travel RESULT result.

    METHODS GetDefaultsForBookings FOR READ
      IMPORTING keys FOR FUNCTION Travel~GetDefaultsForBookings RESULT result.
ENDCLASS.

CLASS lhc_Travel IMPLEMENTATION.

  METHOD get_instance_authorizations.
    "To-do: Implement instance authorization
  ENDMETHOD.

  METHOD GetDefaultsForBookings.
    "This method will default the id of the new booking by reading all the bookings of
    "the travel and incrementing the highest id by 1.
    "Also, the booking date is set to the current system date.
    DATA: lt_read_keys TYPE TABLE FOR READ IMPORT ZI_Travel_U_CSN\\Travel\_Booking,
          ls_read_key  LIKE LINE OF lt_read_keys,
          ls_result    LIKE LINE OF result.
    DATA: lv_new_booking_id TYPE /dmo/booking_id.

    LOOP AT keys INTO DATA(ls_key).
      ls_read_key-%tky = ls_key-%tky.   "%TKY includes %is_draft, %pid and TravelId
      INSERT ls_read_key INTO TABLE lt_read_keys.
    ENDLOOP.

    READ ENTITIES OF ZI_Travel_U_CSN IN LOCAL MODE
        ENTITY Travel BY \_Booking
           FIELDS ( TravelID BookingId )
           WITH lt_read_keys
           RESULT DATA(lt_bookings).

    SORT lt_bookings BY %is_draft %pidparent TravelId BookingId DESCENDING.
    DELETE ADJACENT DUPLICATES FROM lt_bookings COMPARING %is_draft %pidparent TravelId.

    LOOP AT keys INTO ls_key.
      CLEAR: ls_result, lv_new_booking_id.
      TRY.
          DATA(ls_booking) = lt_bookings[ KEY entity %is_draft = ls_key-%is_draft %pidparent = ls_key-%pid TravelId = ls_key-TravelID ].
          lv_new_booking_id = ls_booking-BookingID + 1.
        CATCH cx_root.
          lv_new_booking_id = 1.
      ENDTRY.
      ls_result-%tky = ls_key-%tky.
      ls_result-%param-TravelID    = ls_key-TravelID.
      ls_result-%param-BookingID   = lv_new_booking_id.
      ls_result-%param-BookingDate = cl_abap_context_info=&amp;gt;get_system_date( ).
      INSERT ls_result INTO TABLE result.
    ENDLOOP.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;As you can see, in method GetDefaultsForBookings we retrieve the current Bookings that are defined for a Travel, and include in RESULT attribute the next booking id and the system date as default values for the new entity that will be created. The relevant point to signal out is that, as we have Late Numbering for travel, %TKY has a new component (%PID) that will include the preliminary Id (draftuuid) when creating a new entity. Hence, all the EML operations should take into account this component when retrieving/updating values.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--76529396"&gt;&lt;SPAN&gt;Saver Class LSC_ZI_TRAVEL_U_CSN&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This class is responsible for the save logic of our Business Object. As we are going to call the API functions for CRUD operations in methods that as default are not supposed to raise errors (ADJUST_NUMBERS and SAVE_MODIFIED, explained later), we have to change the default superclass (CL_ABAP_BEHAVIOR_SAVER) with CL_ABAP_BEHAVIOR_SAVER_FAILED, that includes changing parameters for failed keys and response messages for these methods. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The general logic is then:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In ADJUST_NUMBERS the API function for the Travel CREATE will be called (optionally including its bookings), as the returned Travel Id has to be mapped in this method with the premilinary id.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In SAVE_MODIFIED method it is included the UPDATE/DELETE API Calls.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;It has to be noted that SAVE_MODIFIED will be also called during the CREATE operation after the ADJUST_NUMBERS. Hence, we have to take care of not executing any logic in this case, as the CREATE API function has already been executed in ADJUST_NUMBERS.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With this, the definition of the class is as follows (there are some axiliary types and methods defined that will be explained later):&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lsc_ZI_TRAVEL_U_CSN DEFINITION INHERITING FROM cl_abap_behavior_saver_failed.
  PROTECTED SECTION.
    TYPES: BEGIN OF ts_key,
             travelid      TYPE /dmo/travel_id,
             delete_entity TYPE abap_boolean,
           END OF ts_key,
           tt_keys TYPE STANDARD TABLE OF ts_key WITH DEFAULT KEY.

    METHODS adjust_numbers REDEFINITION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

  PRIVATE SECTION.
    TYPES: ts_read_result_travel  TYPE STRUCTURE FOR READ RESULT zi_travel_u_csn,
           ts_read_result_booking TYPE TABLE FOR READ RESULT zi_booking_u_csn,
           ts_failed              TYPE RESPONSE FOR FAILED LATE zi_travel_u_csn,
           ts_reported            TYPE RESPONSE FOR REPORTED LATE zi_travel_u_csn,
           ts_mapped              TYPE RESPONSE FOR MAPPED LATE zi_travel_u_csn,
           ts_request_change      TYPE REQUEST FOR CHANGE zi_travel_u_csn,
           ts_request_delete      TYPE REQUEST FOR DELETE zi_travel_u_csn.

    METHODS _add_deleted_bookings
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        delete      TYPE ts_request_delete
      CHANGING
        ct_booking  TYPE /dmo/t_booking_in
        ct_bookingx TYPE /dmo/t_booking_inx.

    METHODS _add_updated_bookings
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        update      TYPE ts_request_change
      CHANGING
        ct_booking  TYPE /dmo/t_booking_in
        ct_bookingx TYPE /dmo/t_booking_inx.

    METHODS _add_new_bookings
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        create      TYPE ts_request_change
      CHANGING
        ct_booking  TYPE /dmo/t_booking_in
        ct_bookingx TYPE /dmo/t_booking_inx.

    METHODS _process_key
      IMPORTING
        is_key   TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        create   TYPE ts_request_change
        update   TYPE ts_request_change
        delete   TYPE ts_request_delete
      CHANGING
        failed   TYPE ts_failed
        reported TYPE ts_reported.

    METHODS _delete_travel
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
      EXPORTING
        et_messages TYPE /dmo/t_message.

    METHODS _update_travel
      IMPORTING
        is_key      TYPE lsc_zi_travel_u_csn=&amp;gt;ts_key
        create      TYPE ts_request_change
        update      TYPE ts_request_change
        delete      TYPE ts_request_delete
      EXPORTING
        et_messages TYPE /dmo/t_message.

    METHODS _get_processed_root_keys
      IMPORTING
        create          TYPE ts_request_change
        update          TYPE ts_request_change
        delete          TYPE ts_request_delete
      RETURNING
        VALUE(r_result) TYPE lsc_zi_travel_u_csn=&amp;gt;tt_keys.

    METHODS _create_travel
      IMPORTING
        is_travel    TYPE ts_read_result_travel
        it_bookings  TYPE ts_read_result_booking
      EXPORTING
        ev_travel_id TYPE /dmo/travel_id
      CHANGING
        failed       TYPE ts_failed
        reported     TYPE ts_reported
        mapped       TYPE ts_mapped.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, we will review the relevant methods that we have to implement.&lt;/P&gt;&lt;H3 id="toc-hId--566445908"&gt;Method ADJUST_NUMBERS&lt;/H3&gt;&lt;P&gt;The signature of this method is as follows:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 508px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304086i3C6735E5F4565065/image-size/large?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see, it includes FAILED and REPORTED parameters as is a subclass of&amp;nbsp;&lt;SPAN&gt;cl_abap_behavior_saver_failed class. It has also a MAPPED parameter to include the mapping between the preliminary ID (%PID) and the final Id of the new objects. This MAPPED structure contains two tables, one for the Travel and another for the Bookings.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MAPPED.jpg" style="width: 475px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304092i90E5F96C8D5CE066/image-size/large?v=v2&amp;amp;px=999" role="button" title="MAPPED.jpg" alt="MAPPED.jpg" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In these tables, each record contains the premilinary id (%PID) of the new entity, the final id of each entity (component group %KEY) and an structure (%TMP) with the temporary key values that already have these entities in the interaction buffer. The objective of this method is to call the CREATE API function and populate %KEY structure with the corresponding Ids.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;For example, when creating a Travel with a Booking, MAPPED structure enters the method with this values (notice that BOOKING[1] - %TMP contains manually assigned Booking Id 1):&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TRAVEL_BOOKING_IN.jpg" style="width: 507px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304280i47F6FFBFD59E45D3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TRAVEL_BOOKING_IN.jpg" alt="TRAVEL_BOOKING_IN.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And after the successful creation of the new travel with the booking, the updated values are as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="TRAVEL_BOOKING_OUT.jpg" style="width: 511px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304283i5C80B322B631B318/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="TRAVEL_BOOKING_OUT.jpg" alt="TRAVEL_BOOKING_OUT.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Take into account that when creating a new booking for a existing travel, as the booking id is assigned during interaction phase, although no API call is done in this method, BOOKINGIDs have to be included in MAPPED structure by copying %TMP - BOOKINGID value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Given this, the source code of methods ADJUST_NUMBERS and _CREATE_TRAVEL is then:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD adjust_numbers.
    "Create processing logic to adjust numbers if needed
    "Read travel and booking data from buffer, call the API function and
    "create travel

    "Two create options:
    "1.- Create a new travel (with bookings)
    "2.- Crate a new booking for a existing travel

    DATA: lt_travel_key TYPE TABLE FOR READ IMPORT ZI_Travel_U_CSN\\Travel.
    DATA: lt_booking_key TYPE TABLE FOR READ IMPORT ZI_Travel_U_CSN\\Booking.

    "Process only if there are changes
    CHECK mapped-travel IS NOT INITIAL OR mapped-booking IS NOT INITIAL.

    "Read operation is done with %PID, %TMP-TRAVELID (this is initial for new travels)
    LOOP AT mapped-travel INTO DATA(ls_mapped_travel).
      INSERT VALUE #( %pid = ls_mapped_travel-%pid %key = ls_mapped_travel-%tmp ) INTO TABLE lt_travel_key.
    ENDLOOP.
    "Read operation is done with %PID, %TMP-TRAVELID, %TMP-BOOKINGID
    LOOP AT mapped-booking INTO DATA(ls_mapped_booking).
      INSERT VALUE #( %pid = ls_mapped_booking-%pid %key = ls_mapped_booking-%tmp ) INTO TABLE lt_booking_key.
    ENDLOOP.

    READ ENTITIES OF ZI_Travel_U_CSN IN LOCAL MODE
        ENTITY Travel
           ALL FIELDS WITH CORRESPONDING #( lt_travel_key )
           RESULT DATA(lt_all_travels).

    READ ENTITIES OF ZI_Travel_U_CSN IN LOCAL MODE
        ENTITY Booking
           ALL FIELDS WITH CORRESPONDING #( lt_booking_key )
           RESULT DATA(lt_all_bookings).

    "Create travel with bookings (case 1)
    LOOP AT lt_all_travels INTO DATA(ls_travel).
      DATA(lt_bookings) = lt_all_bookings.
      DELETE lt_bookings WHERE %pidparent &amp;lt;&amp;gt; ls_travel-%pid.
      _create_travel(
        EXPORTING
          is_travel      = ls_travel
          it_bookings    = lt_bookings
        IMPORTING
          ev_travel_id   = ls_travel-TravelID
        CHANGING
          failed         = failed
          reported       = reported
          mapped         = mapped
      ).

    ENDLOOP.

    "Assign pending booking id from preliminary identifiers. Take into account that this values
    "are assigned during interaction phase
    "At this point, we will assign new bookings ids for existing travels (case 2)
    LOOP AT mapped-booking ASSIGNING FIELD-SYMBOL(&amp;lt;fs_booking&amp;gt;)
    WHERE bookingid IS INITIAL AND
          %tmp-TravelID IS NOT INITIAL AND
          %tmp-BookingID IS NOT INITIAL.
      &amp;lt;fs_booking&amp;gt;-TravelID  = &amp;lt;fs_booking&amp;gt;-%tmp-TravelID.
      &amp;lt;fs_booking&amp;gt;-Bookingid = &amp;lt;fs_booking&amp;gt;-%tmp-Bookingid.
    ENDLOOP.

  ENDMETHOD.

  METHOD _create_travel.

    "Call /DMO/FLIGHT_TRABEL_CREATE function to create travel and bookings
    "Take into account that this API requires two calls: 1 for create and 1 for save (persist data in database)

    DATA: ls_travel_out  TYPE /dmo/travel,
          ls_travel_in   TYPE /dmo/s_travel_in,
          ls_booking_in  TYPE /dmo/s_booking_in,
          lt_bookings_in TYPE /dmo/t_booking_in,
          lt_messages    TYPE /dmo/t_message.

    "Initialize buffers
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_INITIALIZE'.

    ls_travel_in = CORRESPONDING #( is_travel MAPPING FROM ENTITY ).
    LOOP AT it_bookings INTO DATA(ls_booking).
      CLEAR: ls_booking_in.
      ls_booking_in = CORRESPONDING #( ls_booking MAPPING FROM ENTITY ).
      INSERT ls_booking_in INTO TABLE lt_bookings_in.
    ENDLOOP.

    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_CREATE'
      EXPORTING
        is_travel   = ls_travel_in
        it_booking  = lt_bookings_in
      IMPORTING
        es_travel   = ls_travel_out
        et_messages = lt_messages.

    "Map errors as failed
    DELETE lt_messages WHERE msgty NA 'EAX'.

    IF lt_messages[] IS NOT INITIAL.
      LOOP AT lt_messages INTO DATA(ls_message).
        INSERT VALUE #( %tky = is_travel-%tky
                        %msg = new_message( id       = ls_message-msgid
                                            severity = if_abap_behv_message=&amp;gt;severity-error
                                            number   = ls_message-msgno
                                            v1       = ls_message-msgv1
                                            v2       = ls_message-msgv2
                                            v3       = ls_message-msgv3
                                            v4       = ls_message-msgv4 )
                        ) INTO TABLE reported-travel.
      ENDLOOP.
      INSERT VALUE #( %tky = is_travel-%tky ) INTO TABLE failed-travel.
      RETURN.
    ENDIF.

    "Save to database
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_SAVE'.

    "Map final ids
    "Travel
    READ TABLE mapped-travel ASSIGNING FIELD-SYMBOL(&amp;lt;fs_mapped_travel&amp;gt;)
      WITH KEY id COMPONENTS %pid = is_travel-%pid.
    &amp;lt;fs_mapped_travel&amp;gt;-TravelID = ls_travel_out-travel_id.

    "Bookings for this travel
    LOOP AT it_bookings ASSIGNING FIELD-SYMBOL(&amp;lt;fs_booking&amp;gt;)
      WHERE %pidparent = is_travel-%pid.
      "Map booking id
      READ TABLE mapped-booking ASSIGNING FIELD-SYMBOL(&amp;lt;fs_mapped_booking&amp;gt;)
        WITH KEY id COMPONENTS %pid = &amp;lt;fs_booking&amp;gt;-%pid.
      &amp;lt;fs_mapped_booking&amp;gt;-BookingId = &amp;lt;fs_booking&amp;gt;-BookingId.
      &amp;lt;fs_mapped_booking&amp;gt;-TravelID  = ls_travel_out-travel_id.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--762959413"&gt;Method SAVE_MODIFIED&lt;/H3&gt;&lt;P&gt;This method is called by the runtime once all the preliminary ids have been mapped to the final ids in ADJUST_NUMBERS method. Hence, this is the point where we have to implement the calls to the UPDATE / DELETE APIs. As was stated previously, we have to exclude the Travel CREATE operation (as it has been processed in ADJUST_NUMBERS method), although we have to process the Booking CREATE records for a exisiting Travel, as this corresponds to an UPDATE API call of a Travel.&lt;/P&gt;&lt;P&gt;The interface of this methods is as follows (again, notice the FAILED and REPORTED parameters included as this class is a subclass of &lt;SPAN&gt;cl_abap_behavior_saver_failed).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAVE_MODIFIED.jpg" style="width: 481px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304288i8098B51A8A06D94D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="SAVE_MODIFIED.jpg" alt="SAVE_MODIFIED.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CREATE, UPDATE and DELETE structures contains each one TRAVEL and BOOKING tables with the relevant entities that are being saved.&lt;/P&gt;&lt;P&gt;The general logic that has been implemented is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;First, all the relevant travel ids that are being processed are grouped in internal table LT_PROCESSED_KEYS (method _GET_PROCESSED_ROOT_KEYS), discarding new created travels.&lt;/LI&gt;&lt;LI&gt;For each key, method _PROCESS_KEY is called, where etither method _DETELE_TRAVEL (when the operation corresponds to a deletion) or _UPDATE_TRAVEL are executed. Within each method, the corresponding API functions are called. If there are any reported errors, FAILED and REPORTED structures are updated accordingly.&lt;/LI&gt;&lt;LI&gt;There are some auxiliary methods defined (_ADD_DELETED_BOOKINGS, _ADD_NEW_BOOKINGS, _ADD_UPDATED_BOOKINGS) to populate UPDATE API importing parameters for modified bookings.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The source code of the relevant methods is then:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD save_modified.
    "Update processing logic to save modified data
    "Process only updated travels. Created travels are processed in adjust_numbers method

    DATA: lt_processed_keys TYPE tt_keys.

    lt_processed_keys = _get_processed_root_keys( create = create
                                                  update = update
                                                  delete = delete ).

    LOOP AT lt_processed_keys INTO DATA(ls_key).
      _process_key( EXPORTING is_key = ls_key
                               create = create
                               update = update
                               delete = delete
                     CHANGING  failed   = failed
                               reported = reported ).
    ENDLOOP.

  ENDMETHOD.
  METHOD _get_processed_root_keys.

    LOOP AT create-booking INTO DATA(ls_booking).
      INSERT VALUE #( travelid = ls_booking-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT update-booking INTO ls_booking.
      INSERT VALUE #( travelid = ls_booking-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT update-travel INTO DATA(ls_travel).
      INSERT VALUE #( travelid = ls_travel-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT delete-travel INTO DATA(ls_delete_travel).
      INSERT VALUE #( travelid = ls_delete_travel-TravelID delete_entity = abap_true ) INTO TABLE r_result.
    ENDLOOP.

    LOOP AT delete-booking INTO DATA(ls_delete_booking).
      INSERT VALUE #( travelid = ls_delete_booking-TravelID ) INTO TABLE r_result.
    ENDLOOP.

    "Discard created travels as they are processed in adjust_numbers method
    LOOP AT create-travel INTO ls_travel.
      DELETE r_result WHERE travelid = ls_travel-TravelID.
    ENDLOOP.

    SORT r_result BY travelid delete_entity DESCENDING.
    DELETE ADJACENT DUPLICATES FROM r_result COMPARING travelid.


  ENDMETHOD.


  METHOD _update_travel.


    DATA: ls_travel   TYPE /dmo/s_travel_in,
          ls_travelx  TYPE /dmo/s_travel_inx,
          lt_booking  TYPE /dmo/t_booking_in,
          lt_bookingx TYPE /dmo/t_booking_inx.

    "Updated value for travel?
    TRY.
        DATA(ls_update_travel) = update-travel[ KEY id TravelID = is_key-travelid ].
        ls_travel = CORRESPONDING #( ls_update_travel MAPPING FROM ENTITY ).
        ls_travelx = CORRESPONDING #(  CORRESPONDING /dmo/s_travel_intx( ls_update_travel MAPPING FROM ENTITY USING CONTROL ) ).
      CATCH cx_root.
    ENDTRY.
    ls_travel-travel_id = is_key-travelid.
    ls_travelx-travel_id = is_key-travelid.
    "Bookings created
    _add_new_bookings( EXPORTING is_key = is_key
                                 create = create
                      CHANGING
                        ct_booking = lt_booking
                        ct_bookingx = lt_bookingx ).

    "Bookings updated
    _add_updated_bookings( EXPORTING is_key = is_key
                                 update = update
                      CHANGING
                        ct_booking = lt_booking
                        ct_bookingx = lt_bookingx ).


    "Bookings deleted
    _add_deleted_bookings( EXPORTING is_key = is_key
                                 delete = delete
                      CHANGING
                        ct_booking = lt_booking
                        ct_bookingx = lt_bookingx ).

    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_UPDATE'
      EXPORTING
        is_travel   = ls_travel
        is_travelx  = ls_travelx
        it_booking  = lt_booking
        it_bookingx = lt_bookingx
      IMPORTING
        et_messages = et_messages.

  ENDMETHOD.


  METHOD _delete_travel.

    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_DELETE'
      EXPORTING
        iv_travel_id = is_key-travelid
      IMPORTING
        et_messages  = et_messages.

  ENDMETHOD.


  METHOD _process_key.

    DATA: lt_messages TYPE /dmo/t_message.

    "Initialize buffers
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_INITIALIZE'.

    IF is_key-delete_entity = abap_true.
      _delete_travel( EXPORTING is_key = is_key
                          IMPORTING et_messages = lt_messages ).
    ELSE.
      _update_travel( EXPORTING is_key = is_key
                                    create = create
                                    update = update
                                    delete = delete
                          IMPORTING et_messages = lt_messages ).
    ENDIF.

    DELETE lt_messages WHERE msgty NA 'EAX'.
    IF lt_messages[] IS NOT INITIAL.
      LOOP AT lt_messages INTO DATA(ls_message).
        INSERT VALUE #( travelid = is_key-travelid
                        %msg = new_message( id       = ls_message-msgid
                                            severity = if_abap_behv_message=&amp;gt;severity-error
                                            number   = ls_message-msgno
                                            v1       = ls_message-msgv1
                                            v2       = ls_message-msgv2
                                            v3       = ls_message-msgv3
                                            v4       = ls_message-msgv4 )
                        ) INTO TABLE reported-travel.
      ENDLOOP.
      INSERT VALUE #( travelid = is_key-travelid ) INTO TABLE failed-travel.
      RETURN.
    ENDIF.

    "Save to database
    CALL FUNCTION '/DMO/FLIGHT_TRAVEL_SAVE'.



  ENDMETHOD.


  METHOD _add_new_bookings.

    DATA: ls_booking_in  TYPE /dmo/s_booking_in,
          ls_booking_inx TYPE /dmo/s_booking_inx.

    LOOP AT create-booking INTO DATA(ls_booking)
        USING KEY id WHERE TravelID = is_key-travelid.
      "Add new booking
      CLEAR: ls_booking_in, ls_booking_inx.

      ls_booking_in  = CORRESPONDING #( ls_booking MAPPING FROM ENTITY ).
      ls_booking_inx = CORRESPONDING #( CORRESPONDING /dmo/s_booking_intx( ls_booking MAPPING FROM ENTITY USING CONTROL ) ).
      ls_booking_inx-action_code = 'C'.
      ls_booking_inx-booking_id  = ls_booking_in-booking_id.
      INSERT ls_booking_in INTO TABLE ct_booking.
      INSERT ls_booking_inx INTO TABLE ct_bookingx.
    ENDLOOP.


  ENDMETHOD.


  METHOD _add_updated_bookings.

    DATA: ls_booking_in  TYPE /dmo/s_booking_in,
          ls_booking_inx TYPE /dmo/s_booking_inx.

    LOOP AT update-booking INTO DATA(ls_booking)
        USING KEY id WHERE TravelID = is_key-travelid.
      "Add updated booking
      CLEAR: ls_booking_in, ls_booking_inx.

      ls_booking_in  = CORRESPONDING #( ls_booking MAPPING FROM ENTITY ).
      ls_booking_inx = CORRESPONDING #( CORRESPONDING /dmo/s_booking_intx( ls_booking MAPPING FROM ENTITY USING CONTROL ) ).
      ls_booking_inx-action_code = 'U'.
      ls_booking_inx-booking_id  = ls_booking_in-booking_id.
      INSERT ls_booking_in INTO TABLE ct_booking.
      INSERT ls_booking_inx INTO TABLE ct_bookingx.
    ENDLOOP.

  ENDMETHOD.


  METHOD _add_deleted_bookings.

    DATA: ls_booking_in  TYPE /dmo/s_booking_in,
          ls_booking_inx TYPE /dmo/s_booking_inx.

    LOOP AT delete-booking INTO DATA(ls_booking)
        USING KEY entity WHERE TravelID = is_key-travelid.
      "add delete booking
      CLEAR: ls_booking_inx, ls_booking_in.
      ls_booking_in-travel_id = is_key-travelid.
      ls_booking_in-booking_id = ls_booking-BookingId.
      INSERT ls_booking_in INTO TABLE ct_booking.
      ls_booking_inx-action_code = 'D'.
      ls_booking_inx-booking_id  = ls_booking-BookingId.
      INSERT ls_booking_inx INTO TABLE ct_bookingx.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--372666904"&gt;Conclussions&lt;/H1&gt;&lt;P&gt;I hope that this blog has clarified how to develop a RAP UI to execute CRUD operation in an entity that has a legacy API to maintain it.&amp;nbsp;I think that this can be more or less easily adapted to other APIs.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-simple-example-of-a-sap-rap-application-based-on-legacy-api-without-uuid/ba-p/14184282"/>
    <published>2025-09-01T11:19:39.744000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/excel-upload-download-template-download-processed-data-in-sap-fiori-without/ba-p/14212916</id>
    <title>Excel Upload/ Download Template/ Download Processed Data in SAP Fiori Without SAPUI5 - Using SAP RAP</title>
    <updated>2025-09-10T16:00:28.980000+02:00</updated>
    <author>
      <name>AmanSaxena</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145025</uri>
    </author>
    <content>&lt;P&gt;In many projects, there is a common requirement to develop utilities for mass creation or update of business objects such as Purchase Orders, Materials, Sales Orders, Billing Documents etc. With the adoption of SAP S/4HANA, customers are increasingly opting for SAP Fiori applications over traditional classical reports for such use cases.&lt;/P&gt;&lt;P&gt;A frequent question arises:&lt;BR /&gt;&lt;STRONG&gt;Can we develop a Fiori application to upload files without building a custom SAPUI5 front end?&lt;BR /&gt;&lt;STRONG&gt;Yes, we can!&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Thanks to SAP’s RESTful Application Programming (RAP) model and the use of specific annotations, it is possible to handle file uploads directly within a Fiori Elements application. No need for custom UI5 development.&lt;/P&gt;&lt;P&gt;To enable file uploads in RAP, the following annotation is crucial:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This annotation allows handling of large file content (LOBs) in the RAP model. However, there is one important requirement:&lt;BR /&gt;You need to create a dedicated database table to store the uploaded file as a large object.&lt;/P&gt;&lt;P&gt;In below Example, I am explaining how Billing Date can be changed through Mass Upload.&lt;/P&gt;&lt;P&gt;In Excel Template I have two columns&lt;BR /&gt;Billing Document&lt;BR /&gt;New Billing date (DD.MM.YYYY)&lt;/P&gt;&lt;P&gt;Let’s walk through the steps to implement this.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1889058957"&gt;Create Database and Draft Tables&lt;/H3&gt;&lt;P&gt;We will begin by creating two database tables and their respective draft tables:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Parent Table&lt;/STRONG&gt; – Stores file metadata and the file content itself (LOB).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Child Table&lt;/STRONG&gt; – Stores the extracted data from the uploaded file. In this example, we will process an XLSX file.&lt;/LI&gt;&lt;/OL&gt;&lt;H5 id="toc-hId-1950710890"&gt;Parent Table – ZTOM_T_USER&lt;/H5&gt;&lt;P&gt;This table will store the uploaded file and its metadata. Here’s a sample structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'User Table for Excel Processing'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_user {
  key mandt             : mandt not null;
  key end_user          : syuname not null;
  status                : abap.char(20);
  attachment            : ztom_de_attach;
  mimetype              : abap.char(128);
  filename              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This setup ensures the uploaded file can be stored as a RAWSTRING (LENGTH 0) in the backend.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1754197385"&gt;Parent Draft Table –&amp;nbsp;&lt;SPAN&gt;ZTOM_T_USERD&lt;/SPAN&gt;&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'User Draft Table for Excel Processing'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_userd {
  key mandt             : mandt not null;
  key end_user          : syuname not null;
  status                : abap.char(20);
  attachment            : ztom_de_attach;
  mimetype              : abap.char(128);
  filename              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;
  "%admin"              : include sych_bdl_draft_admin_inc;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1557683880"&gt;Child Table – ZTOM_T_EXCEL&lt;/H5&gt;&lt;P&gt;This table will store the extracted data from the uploaded file. In this example, we will process an XLSX file. Here’s a sample structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Excel Data Table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_excel {
  key mandt    : mandt not null;
  @AbapCatalog.foreignKey.screenCheck : false
  key end_user : syuname not null
    with foreign key ztom_t_user
      where end_user = ztom_t_excel.end_user;
  key vbeln    : vbeln_vf not null;
  new_fkdat    : abap.char(10);
  prev_fkdat   : abap.char(10);
  type         : bapi_mtype;
  message      : bapi_msg;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1361170375"&gt;Child Draft Table – ZTOM_T_EXCELD&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Excel Data Draft Table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table ztom_t_exceld {
  key mandt    : mandt not null;
  key end_user : syuname not null;
  key vbeln    : vbeln_vf not null;
  new_fkdat    : abap.char(10);
  prev_fkdat   : abap.char(10);
  type         : bapi_mtype;
  message      : bapi_msg;
  "%admin"     : include sych_bdl_draft_admin_inc;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-906491432"&gt;Create Interface View&lt;/H3&gt;&lt;P&gt;Now, let's create Interface views on top of the tables we just created.&lt;/P&gt;&lt;H5 id="toc-hId-968143365"&gt;Parent Interface View – ZCDS_TOM_I_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View - Excel User'
@Metadata.allowExtensions: true

define root view entity ZCDS_TOM_I_USER
  as select from    usr02       as _user
    left outer join ztom_t_user as _XLUser on _user.bname = _XLUser.end_user
  composition [0..*] of ZCDS_TOM_I_EXCEL as _XLData
{
  key _user.bname                   as end_user,
      _XLUser.status                as status,
      _XLUser.attachment            as Attachment,
      @Semantics.mimeType: true
      _XLUser.mimetype              as MimeType,
      _XLUser.filename              as Filename,
      @Semantics.user.createdBy: true
      _XLUser.local_created_by      as Local_Created_By,
      @Semantics.systemDateTime.createdAt: true
      _XLUser.local_created_at      as Local_Created_At,
      @Semantics.user.lastChangedBy: true
      _XLUser.local_last_changed_by as Local_Last_Changed_By,
      //local ETag field --&amp;gt; OData ETag
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      _XLUser.local_last_changed_at as Local_Last_Changed_At,
      //total ETag field
      @Semantics.systemDateTime.lastChangedAt: true
      _XLUser.last_changed_at       as Last_Changed_At,

      _XLData
}
where
  _user.bname = $session.user&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-771629860"&gt;Child Entity Interface View – ZCDS_TOM_I_EXCEL&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View - Excel Data'
@Metadata.allowExtensions: true

define view entity ZCDS_TOM_I_EXCEL
  as select from ztom_t_excel
  association to parent ZCDS_TOM_I_USER as _XLUser on $projection.end_user = _XLUser.end_user
{
  key end_user                as end_user,
  key ztom_t_excel.vbeln      as Vbeln,
      ztom_t_excel.new_fkdat  as New_Fkdat,
      ztom_t_excel.prev_fkdat as Prev_Fkdat,
      ztom_t_excel.type       as Type,
      ztom_t_excel.message    as Message,

      _XLUser
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-316950917"&gt;Create Projection/ Consumption View&lt;/H3&gt;&lt;P&gt;Now, let's create Projection/ Consumption views on top of the Interfaces we just created.&lt;/P&gt;&lt;H5 id="toc-hId-378602850"&gt;Parent Projection/ Consumption View – ZCDS_TOM_C_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection Entity - Excel User'
@Metadata.allowExtensions: true

define root view entity ZCDS_TOM_C_USER
  provider contract transactional_query
  as projection on ZCDS_TOM_I_USER
{
  key end_user,
      @EndUserText.label: 'Processing Status'
      status as status,
      @Semantics.largeObject: {
          mimeType: 'MimeType',
          fileName: 'Filename',
          acceptableMimeTypes: [ 'application/vnd.ms-excel','application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' ],
          contentDispositionPreference: #INLINE } // This will store the File into our table
      Attachment,
      MimeType,
      Filename,
      Local_Created_By,
      Local_Created_At,
      Local_Last_Changed_By,
      @EndUserText.label: 'Last Changed At'
      Local_Last_Changed_At,
      Last_Changed_At,

      /* Associations */
      _XLData : redirected to composition child ZCDS_TOM_C_EXCEL
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--738113476"&gt;Child Entity Projection/ Consumption View – ZCDS_TOM_C_EXCEL&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection Entity - Excel Data'
@Metadata.allowExtensions: true

define view entity ZCDS_TOM_C_EXCEL
  as projection on ZCDS_TOM_I_EXCEL
{
  key end_user,
  key Vbeln,
      New_Fkdat,
      Prev_Fkdat,
      Type,
      Message,
      /* Associations */
      _XLUser : redirected to parent ZCDS_TOM_C_USER
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--347820967"&gt;Create Metadata Extensions&lt;/H3&gt;&lt;P&gt;Now, let's create Metadata Extensions on top of the Projection/ Consumption views we just created.&lt;/P&gt;&lt;H5 id="toc-hId--1131140486"&gt;Parent Metadata Extension – ZCDS_TOM_C_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI.headerInfo: {
    typeName: 'Mass Upload for Billing Date Change',
    typeNamePlural: 'Mass Upload for Billing Date Change'
}
annotate entity ZCDS_TOM_C_USER with
{
  .facet: [
  { id: 'idEndUser',    purpose: #HEADER,       position: 10,   type: #DATAPOINT_REFERENCE,     targetQualifier: 'tqEndUser'
  },
  { id: 'idChgAt',      purpose: #HEADER,       position: 20,   type: #DATAPOINT_REFERENCE,     targetQualifier: 'tqChgAt'
  },
  { id: 'idStatus',     purpose: #HEADER,       position: 30,   type: #DATAPOINT_REFERENCE,     targetQualifier: 'tqStatus'
  },
  { id: 'idFile',       purpose: #STANDARD,     position: 50,   type: #IDENTIFICATION_REFERENCE,    label: 'File Upload/ Download'
  },
  { id: 'idData',       purpose: #STANDARD,     position: 60,   type: #LINEITEM_REFERENCE,          label: 'Excel Data',    targetElement: '_XLData'
  } ]

  .lineItem: [{ position: 10, label: 'Person Responsible' }]
  .dataPoint: { qualifier: 'tqEndUser', title: 'Person Responsible' }
  .identification: [{ type: #FOR_ACTION, dataAction: 'downloadData', label: 'Download Data' }] //Needed in oDataV2 to download excel Data, for oDataV4 comment this
  end_user;
  .lineItem: [{ position: 20, label: 'File Status' }]
  .dataPoint: { qualifier: 'tqStatus', title: 'File Status' }
  status;
  .identification: [{ position: 10, label: 'Upload/ Download Template &amp;amp; Excel File' }]
  Attachment;
  .lineItem: [{ type: #FOR_ACTION, dataAction: 'downloadTemplate', label: 'Download Template' }]
  .identification: [{ type: #FOR_ACTION, dataAction: 'downloadTemplate', label: 'Download Template' }]
  .hidden: true
  MimeType;
  .lineItem: [{ position: 30, label: 'Filename' }]
  Filename;
  .hidden: true
  Local_Created_By;
  .hidden: true
  Local_Created_At;
  .hidden: true
  Local_Last_Changed_By;
  .dataPoint: { qualifier: 'tqChgAt', title: 'Last Changed At' }
  .lineItem: [{ position: 40, label: 'Last Changed At' }]
  Local_Last_Changed_At;
  .hidden: true
  Last_Changed_At;
  /* Associations */
  .hidden: true
  _XLData;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--1327653991"&gt;Child Entity Metadata Extension – ZCDS_TOM_C_EXCEL&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI.headerInfo: {
    typeName: 'Processed Billing Data',
    typeNamePlural: 'Processed Billing Data'
}
annotate entity ZCDS_TOM_C_EXCEL with
{
  .hidden: true
  //  .lineItem: [{ type: #FOR_ACTION, label: 'Display Document', dataAction: 'displayDocument' }]
  end_user;
  .lineItem: [{ position: 10, label: 'Billing Document' }]
  Vbeln;
  .lineItem: [{ position: 20, label: 'New Billing Date' }]
  New_Fkdat;
  .lineItem: [{ position: 30, label: 'Previous Billing Date' }]
  Prev_Fkdat;
  .lineItem: [{ position: 40, label: 'Status' }]
  Type;
  .lineItem: [{ position: 50, label: 'Message' }]
  Message;
  /* Associations */
  .hidden: true
  _XLUser;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--937361482"&gt;Create Behavior Definitions Behavior Implementation and Behavior Projection&lt;/H3&gt;&lt;P&gt;Now, let's create Behavior Definitions on top of the Parent Interface View and Behavior Projection on Parent Projection/ Consumption View we just created.&lt;/P&gt;&lt;H5 id="toc-hId--1720681001"&gt;Behavior Definition – ZCDS_TOM_I_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_cl_cds_tom_i_user unique;
strict ( 2 );
with draft;

define behavior for ZCDS_TOM_I_USER alias XLHead
persistent table ztom_t_user
lock master
total etag end_user
draft table ztom_t_userd
//early numbering
authorization master ( instance )
etag master end_user
{
  create;
  update;
  delete;

  field ( readonly ) end_user;

  action ( features : instance ) downloadTemplate result [1] $self;
  action ( features : instance ) downloadData result [1] $self; //Needed in oDataV2 to download excel Data, for oDataV4 comment this

  // Logic to read excel data into into internal table and save to the child entity
  action ( features : instance ) uploadExcelData result [1] $self;

  association _XLData { create; with draft; }

  // Logic to trigger action uploadExcelData
  determination fields on modify { field Filename; }

  //Draft actions
  draft action Edit;
  draft action Activate;
  draft action Discard;
  draft action Resume;
  draft determine action Prepare;

}

define behavior for ZCDS_TOM_I_EXCEL alias XLData
persistent table ztom_t_excel
draft table ztom_t_exceld
lock dependent by _XLUser
authorization dependent by _XLUser
etag master New_Fkdat
{
  update;
  delete;
  field ( readonly ) end_user;

  association _XLUser { with draft; }

  //  action displayDocument result [1] $self; //IF WANT TO ADD A NEW ACTION

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--1917194506"&gt;Behavior Implementation – ZBP_CL_CDS_TOM_I_USER&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Global Class&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_cl_cds_tom_i_user DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR BEHAVIOR OF zcds_tom_i_user .

  PUBLIC SECTION.
    TYPES: BEGIN OF gty_input,
             vbeln      TYPE vbeln_vf,
             new_fkdat  TYPE char10,
             prev_fkdat TYPE char10,
             type       TYPE bapi_mtype,
             message    TYPE bapi_msg,
           END OF gty_input.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zbp_cl_cds_tom_i_user IMPLEMENTATION.
ENDCLASS.​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Local Type&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lhc_XLHead DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR XLHead RESULT result.

    METHODS downloadTemplate FOR MODIFY
      IMPORTING keys FOR ACTION XLHead~downloadTemplate RESULT result.

    METHODS fields FOR DETERMINE ON MODIFY
      IMPORTING keys FOR XLHead~Fields.

    METHODS uploadExcelData FOR MODIFY
      IMPORTING keys FOR ACTION XLHead~uploadExcelData RESULT result.

    "Needed in oDataV2 to download excel Data, for oDataV4 comment this method
    METHODS downloadData FOR MODIFY
      IMPORTING keys FOR ACTION XLHead~downloadData RESULT result.

*    METHODS earlynumbering_create FOR NUMBERING
*      IMPORTING entities FOR CREATE XLHead.

    METHODS get_instance_features FOR INSTANCE FEATURES
      IMPORTING keys REQUEST requested_features FOR XLHead RESULT result.

ENDCLASS.


CLASS lhc_XLHead IMPLEMENTATION.
  METHOD get_instance_authorizations.
  ENDMETHOD.

  METHOD downloadTemplate.
*-- Local Variable Declaration
    DATA: lv_content   TYPE xstring,
          lv_mime_type TYPE string.

*-- Local Internal Table Declaration
    DATA: lt_bin TYPE STANDARD TABLE OF solix.

    "Clear all local objects
    CLEAR: lv_content, lv_mime_type, lt_bin.

*-- Retrieve File From MIME Repository
*-- accessing the file path '/SAP/PUBLIC/ZTOM_MASS_BILLING_DATE_UPD/Billing Date Update Template.xlsx'
    cl_mime_repository_api=&amp;gt;if_mr_api~get_api( )-&amp;gt;get( EXPORTING  i_url              = TEXT-001
                                                                  i_check_authority  = abap_false
                                                       IMPORTING  e_content          = lv_content
                                                                  e_mime_type        = lv_mime_type
                                                       EXCEPTIONS parameter_missing  = 1
                                                                  error_occured      = 2
                                                                  not_found          = 3
                                                                  permission_failure = 4
                                                                  OTHERS             = 5 ).

    IF sy-subrc &amp;lt;&amp;gt; 0.
      "Handle Error Messages
      INSERT new_message( id       = sy-msgid
                          number   = sy-msgno
                          severity = if_abap_behv_message=&amp;gt;severity-error
                          v1       = sy-msgv1
                          v2       = sy-msgv2
                          v3       = sy-msgv3
                          v4       = sy-msgv4 )
             INTO TABLE reported-%other.
    ELSE.
      "Modify Root Entity
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      UPDATE FROM VALUE #( FOR key IN keys
                           ( end_user            = key-end_user
                             status              = TEXT-002 "Template Downloaded
                             Attachment          = lv_content
                             Filename            = TEXT-003 "Billing Date Update Template
                             MimeType            = lv_mime_type
                             %control-status     = if_abap_behv=&amp;gt;mk-on
                             %control-Attachment = if_abap_behv=&amp;gt;mk-on
                             %control-Filename   = if_abap_behv=&amp;gt;mk-on
                             %control-MimeType   = if_abap_behv=&amp;gt;mk-on ) )
      MAPPED DATA(ls_mapped_update)
      REPORTED DATA(ls_reported_update)
      FAILED DATA(ls_failed_update).

      "Read Updated Entry
      READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      ALL FIELDS WITH
      CORRESPONDING #( Keys )
      RESULT DATA(lt_XLHead).

      "Send Status back to front end
      result = VALUE #( FOR lwa_upd_head IN lt_XLHead
                        ( %tky   = lwa_upd_head-%tky
                          %param = lwa_upd_head ) ).
    ENDIF.
  ENDMETHOD.

  METHOD fields.
    SELECT  INTO (lv_valid) FROM ztom_t_user UP TO 1 ROWS WHERE end_user = -uname.
    ENDSELECT.

    IF lv_valid &amp;lt;&amp;gt; abap_true.
      INSERT ztom_t_user FROM @( VALUE #( end_user = sy-uname ) ).
    ENDIF.

    IF keys[ 1 ]-%is_draft = '01'. "for oDataV4 '01' needs to be replaced with '00'
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      EXECUTE uploadexceldata
      FROM CORRESPONDING #( keys ).
    ENDIF.
  ENDMETHOD.

  METHOD uploadExcelData.
*-- Local Variable Declaration
    DATA: lv_index    TYPE sy-index.

*-- Local Workarea Declaration
    DATA: ls_vbrk_i TYPE vbrk.

*-- Local Internal Table Declaration
    DATA: lt_excel TYPE STANDARD TABLE OF zbp_cl_cds_tom_i_user=&amp;gt;gty_input,
          lt_data  TYPE TABLE FOR CREATE zcds_tom_i_user\_XLData.

*-- Local Object Declaration
    DATA: lo_table_descr  TYPE REF TO cl_abap_tabledescr,
          lo_struct_descr TYPE REF TO cl_abap_structdescr.

*-- Local Field Symbol Declaration
    FIELD-SYMBOLS:  &amp;lt;lfs_col_header&amp;gt; TYPE any.

    "Clear all local objects
    CLEAR: lv_index, lt_excel, lt_data.

    SELECT  INTO (lv_valid) FROM ztom_t_user UP TO 1 ROWS WHERE end_user = -uname.
    ENDSELECT.

    IF lv_valid &amp;lt;&amp;gt; abap_true.
      INSERT ztom_t_user FROM @( VALUE #( end_user = sy-uname ) ).
    ENDIF.

    DATA(lv_user) = cl_abap_context_info=&amp;gt;get_user_technical_name( ).

    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    ALL FIELDS WITH
    CORRESPONDING #( keys )
    RESULT DATA(lt_file_entity).

    DATA(lv_attachment) = lt_file_entity[ 1 ]-attachment.

    IF lv_attachment IS INITIAL.
      RETURN.
    ENDIF.

    "Move Excel Data to Internal Table
    DATA(lo_xlsx) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( iv_file_content = lv_attachment )-&amp;gt;read_access( ).
    DATA(lo_worksheet) = lo_xlsx-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).
    DATA(lo_selection_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to( )-&amp;gt;get_pattern( ).
    DATA(lo_execute) = lo_worksheet-&amp;gt;select( lo_selection_pattern )-&amp;gt;row_stream( )-&amp;gt;operation-&amp;gt;write_to(
                                                                      REF #( lt_excel ) ).
    lo_execute-&amp;gt;set_value_transformation( xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value )-&amp;gt;if_xco_xlsx_ra_operation~execute( ).

    "Get number of columns in upload file for validation
    TRY.
        lo_table_descr ?= cl_abap_tabledescr=&amp;gt;describe_by_data( p_data = lt_excel ).
        lo_struct_descr ?= lo_table_descr-&amp;gt;get_table_line_type( ).
        DATA(lv_no_of_cols) = lines( lo_struct_descr-&amp;gt;components ).
      CATCH cx_sy_move_cast_error INTO DATA(lo_sy_move_cast_error).

        "Implement error handling
        INSERT new_message( id       = sy-msgid
                            number   = sy-msgno
                            severity = if_abap_behv_message=&amp;gt;severity-error
                            v1       = sy-msgv1
                            v2       = sy-msgv2
                            v3       = sy-msgv3
                            v4       = sy-msgv4 )
               INTO TABLE reported-%other.
    ENDTRY.

*-- Remove Headings of Columns from Excel data
    IF lt_excel IS NOT INITIAL.
      DELETE lt_excel INDEX 1.
    ENDIF.

*-- Remove all entries where Billing document is not available
    IF lt_excel IS NOT INITIAL.
      DELETE lt_excel WHERE vbeln IS INITIAL.
    ENDIF.

*-- Remove all duplicates
    IF lt_excel IS NOT INITIAL.
      DELETE ADJACENT DUPLICATES FROM lt_excel.
    ENDIF.

    IF lt_excel IS NOT INITIAL.
      LOOP AT lt_excel ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_excel&amp;gt;).
        DO lv_no_of_cols TIMES.
          lv_index = sy-index.
          ASSIGN COMPONENT lv_index OF STRUCTURE &amp;lt;lfs_excel&amp;gt; TO &amp;lt;lfs_col_header&amp;gt;.
          IF &amp;lt;lfs_col_header&amp;gt; IS NOT ASSIGNED.
            CONTINUE.
          ENDIF.
          DATA(lv_has_error) = abap_false.
          CASE lv_index.
            WHEN 1. "Billing Document Number
              CALL FUNCTION 'CONVERSION_EXIT_ALPHA_INPUT'
                EXPORTING
                  input  = &amp;lt;lfs_col_header&amp;gt;
                IMPORTING
                  output = &amp;lt;lfs_col_header&amp;gt;.

              SELECT SINGLE fkdat
                FROM vbrk
                INTO (lv_fkdat)
                WHERE vbeln = @&amp;lt;lfs_col_header&amp;gt;.

              IF sy-subrc = 0.
                &amp;lt;lfs_excel&amp;gt;-prev_fkdat = |{ lv_fkdat+6(2) }.{ lv_fkdat+4(2) }.{ lv_fkdat(4) }|.
                CLEAR: lv_fkdat.
              ELSE.
                &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                &amp;lt;lfs_excel&amp;gt;-message = TEXT-004.   "Invalid Document
              ENDIF.

            WHEN 2.  "New Billing Date
              FIND PCRE '(\d{1,2}[.]\d{1,2}[.]\d{4})' IN &amp;lt;lfs_col_header&amp;gt;.
              IF sy-subrc = 0.
                CALL FUNCTION '/SAPDMC/LSM_DATE_CONVERT'
                  EXPORTING
                    date_in             = &amp;lt;lfs_col_header&amp;gt;
                    date_format_in      = 'DDMY'
                    to_output_format    = ' '
                    to_internal_format  = 'X'
                  IMPORTING
                    date_out            = &amp;lt;lfs_col_header&amp;gt;
                  EXCEPTIONS
                    illegal_date        = 1
                    illegal_date_format = 2
                    no_user_date_format = 3
                    OTHERS              = 4.
                IF sy-subrc &amp;lt;&amp;gt; 0.
                  &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                  &amp;lt;lfs_excel&amp;gt;-message = TEXT-005.   "Invalid Date
                ELSE.
                  IF &amp;lt;lfs_col_header&amp;gt;+0(2) EQ '00'.
                    &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                    &amp;lt;lfs_excel&amp;gt;-message = TEXT-005.   "Invalid Date
                  ELSE.
                    lv_fkdat = &amp;lt;lfs_col_header&amp;gt;.
                  ENDIF.
                ENDIF.
              ELSE.
                &amp;lt;lfs_excel&amp;gt;-type    = 'E'.
                &amp;lt;lfs_excel&amp;gt;-message = TEXT-005.   "Invalid Date
              ENDIF.
            WHEN 3 OR 4 OR 5.
              "Do Nothing!!
*              lv_has_error = COND #( WHEN &amp;lt;lfs_col_header&amp;gt; &amp;lt;&amp;gt; ' ' THEN abap_true ELSE lv_has_error ).
            WHEN OTHERS. "More than 5 columns (error)
              lv_has_error = abap_true.
          ENDCASE.
          UNASSIGN &amp;lt;lfs_col_header&amp;gt;.
        ENDDO.
        IF lv_has_error = abap_true.
          APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky ) TO failed-xlhead.
          APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky
                          %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-error
                                                        text     = TEXT-006 ) ) "Wrong File Format!!
          TO reported-xlhead.
          UNASSIGN &amp;lt;lfs_col_header&amp;gt;.
          EXIT.
        ELSE. "Process Data
          "Update Billing Date
          IF &amp;lt;lfs_excel&amp;gt;-type &amp;lt;&amp;gt; 'E'.
            TRY.
                zcl_tom_billing_date_upd=&amp;gt;zfm_tom_billing_date_upd( EXPORTING fkdat   = lv_fkdat
                                                                              vbeln   = &amp;lt;lfs_excel&amp;gt;-vbeln
*                                                                              _dest_  = 'NONE'
                                                                    CHANGING  message = &amp;lt;lfs_excel&amp;gt;-message
                                                                              mtype   = &amp;lt;lfs_excel&amp;gt;-type ).
              CATCH cx_aco_application_exception INTO DATA(lo_aco_application_exception).
              CATCH cx_aco_communication_failure INTO DATA(lo_aco_communication_failure).
              CATCH cx_aco_system_failure INTO DATA(lo_aco_system_failure).

                "Implement error handling
                INSERT new_message( id       = sy-msgid
                                    number   = sy-msgno
                                    severity = if_abap_behv_message=&amp;gt;severity-error
                                    v1       = sy-msgv1
                                    v2       = sy-msgv2
                                    v3       = sy-msgv3
                                    v4       = sy-msgv4 )
                       INTO TABLE reported-%other.
            ENDTRY.

            "Change Format to DD.MM.YYYY
            &amp;lt;lfs_excel&amp;gt;-new_fkdat = |{ &amp;lt;lfs_excel&amp;gt;-new_fkdat+6(2) }.{ &amp;lt;lfs_excel&amp;gt;-new_fkdat+4(2) }.{ &amp;lt;lfs_excel&amp;gt;-new_fkdat(4) }|.

          ENDIF.
        ENDIF.
      ENDLOOP.

    ELSE.
      APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky ) TO failed-xlhead.
      APPEND VALUE #( %tky = lt_file_entity[ 1 ]-%tky
                      %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-error
                                                    text     = TEXT-007 ) ) "No Input Data to Process in Excel!!
      TO reported-xlhead.
      EXIT.
    ENDIF.

*-- Sort with Error &amp;amp; Success type
    IF lt_excel IS NOT INITIAL.
      SORT: lt_excel ASCENDING BY type vbeln.
    ENDIF.

    "Prepare Data for Child Entity (XLData)
    lt_data = VALUE #( ( %cid_ref  = keys[ 1 ]-%cid_ref
                         %is_draft = keys[ 1 ]-%is_draft
                         end_user  = keys[ 1 ]-end_user
                         %target   = VALUE #( FOR lwa_excel IN lt_excel
                                              ( %cid      = keys[ 1 ]-%cid_ref
                                                %is_draft = keys[ 1 ]-%is_draft
                                                %data     = VALUE #( end_user   = keys[ 1 ]-end_user
                                                                     Vbeln      = lwa_excel-vbeln
                                                                     New_Fkdat  = lwa_excel-new_fkdat
                                                                     Prev_Fkdat = lwa_excel-prev_fkdat
                                                                     Type       = lwa_excel-type
                                                                     Message    = lwa_excel-message )
                                                %control  = VALUE #( end_user   = if_abap_behv=&amp;gt;mk-on
                                                                     Vbeln      = if_abap_behv=&amp;gt;mk-on
                                                                     New_Fkdat  = if_abap_behv=&amp;gt;mk-on
                                                                     Prev_Fkdat = if_abap_behv=&amp;gt;mk-on
                                                                     Type       = if_abap_behv=&amp;gt;mk-on
                                                                     Message    = if_abap_behv=&amp;gt;mk-on ) ) ) ) ).

    "Checking Existing entry in child entity for user if any
    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    BY \_XLData
    ALL FIELDS WITH CORRESPONDING #( keys )
    RESULT DATA(lt_existing_XLData).

    IF lt_existing_XLData IS NOT INITIAL.
      "Delete already existing entries from child entity
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLData DELETE FROM VALUE #( FOR lwa_data IN lt_existing_XLData
                                         ( %key      = lwa_data-%key
                                           %is_draft = lwa_data-%is_draft ) )
      MAPPED DATA(ls_del_mapped)
      REPORTED DATA(ls_del_reported)
      FAILED DATA(ls_del_failed).
    ENDIF.

    "Modify Root View data (Change Status)
    MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    UPDATE FROM VALUE #( FOR key IN keys
                         ( %is_draft       = key-%is_draft
                           end_user        = key-end_user
                           status          = TEXT-008 "File Processed
                           %control-status = if_abap_behv=&amp;gt;mk-on ) )
    MAPPED DATA(ls_mapped_update)
    REPORTED DATA(ls_reported_update)
    FAILED DATA(ls_failed_update).

    "Add New Entry for XLData (association)
    MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    CREATE BY \_XLData
    AUTO FILL CID
    WITH lt_data.

    "Read Updated Entry
    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    ALL FIELDS WITH
    CORRESPONDING #( Keys )
    RESULT DATA(lt_updated_XLHead).

    "Send Status back to front end
    result = VALUE #( FOR lwa_upd_head IN lt_updated_XLHead
                      ( %tky   = lwa_upd_head-%tky
                        %param = lwa_upd_head ) ).
  ENDMETHOD.

  "Needed in oDataV2 to download excel Data, for oDataV4 comment this method
  METHOD downloadData.
*-- Local Variable Declaration
    DATA: lo_columns TYPE REF TO cl_salv_columns_table.
    DATA: lo_column TYPE REF TO cl_salv_column.

    "Fetch Processed Data
    SELECT * FROM ztom_t_excel
    INTO TABLE (lt_final)
    WHERE end_user = -uname.

    IF lt_final IS NOT INITIAL.
      "Get Time Stamp
      GET TIME STAMP FIELD DATA(lv_timestampl).

      "Convert Internal table data to xstring.
      DATA(lv_filename) = |{ TEXT-009 } { lv_timestampl }|. "Billing Date Update Log

      "Convert internal table data to excel and download.
      TRY.
          cl_salv_table=&amp;gt;factory( IMPORTING r_salv_table = DATA(lo_table)
                                  CHANGING  t_table      = lt_final ).

          "Get ALV Column
          lo_columns = lo_table-&amp;gt;get_columns( ).

          TRY.
              lo_column = lo_columns-&amp;gt;get_column( 'NEW_FKDAT' ).
              lo_column-&amp;gt;set_long_text( TEXT-010 ). "New Billing Date
              lo_column-&amp;gt;set_output_length( '15' ).
            CATCH cx_salv_not_found INTO DATA(lo_salv_not_found).

              "Implement error handling
              INSERT new_message( id       = sy-msgid
                                  number   = sy-msgno
                                  severity = if_abap_behv_message=&amp;gt;severity-error
                                  v1       = sy-msgv1
                                  v2       = sy-msgv2
                                  v3       = sy-msgv3
                                  v4       = sy-msgv4 )
                     INTO TABLE reported-%other.
          ENDTRY.

          TRY.
              lo_column = lo_columns-&amp;gt;get_column( 'PREV_FKDAT' ).
              lo_column-&amp;gt;set_long_text( TEXT-011 ).  "Previous Billing Date
              lo_column-&amp;gt;set_output_length( '15' ).
            CATCH cx_salv_not_found INTO lo_salv_not_found.

              "Implement error handling
              INSERT new_message( id       = sy-msgid
                                  number   = sy-msgno
                                  severity = if_abap_behv_message=&amp;gt;severity-error
                                  v1       = sy-msgv1
                                  v2       = sy-msgv2
                                  v3       = sy-msgv3
                                  v4       = sy-msgv4 )
                     INTO TABLE reported-%other.
          ENDTRY.

          DATA(lv_content) = lo_table-&amp;gt;to_xml( xml_type = if_salv_bs_xml=&amp;gt;c_type_xlsx ).

        CATCH cx_salv_msg INTO DATA(lo_salv_msg).

          "Implement error handling
          INSERT new_message( id       = sy-msgid
                              number   = sy-msgno
                              severity = if_abap_behv_message=&amp;gt;severity-error
                              v1       = sy-msgv1
                              v2       = sy-msgv2
                              v3       = sy-msgv3
                              v4       = sy-msgv4 )
                 INTO TABLE reported-%other.
      ENDTRY.

      "Modify Root Entity
      MODIFY ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      UPDATE FROM VALUE #( FOR key IN keys
                           ( end_user            = key-end_user
                             status              = TEXT-012 "Data Downloaded
                             Attachment          = lv_content
                             Filename            = lv_filename
                             MimeType            = TEXT-013   "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
                             %control-status     = if_abap_behv=&amp;gt;mk-on
                             %control-Attachment = if_abap_behv=&amp;gt;mk-on
                             %control-Filename   = if_abap_behv=&amp;gt;mk-on
                             %control-MimeType   = if_abap_behv=&amp;gt;mk-on ) )
      MAPPED DATA(ls_mapped_update)
      REPORTED DATA(ls_reported_update)
      FAILED DATA(ls_failed_update).

      "Read Updated Entry
      READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
      ENTITY XLHead
      ALL FIELDS WITH
      CORRESPONDING #( Keys )
      RESULT DATA(lt_XLHead).

      "Send Status back to front end
      result = VALUE #( FOR lwa_upd_head IN lt_XLHead
                        ( %tky   = lwa_upd_head-%tky
                          %param = lwa_upd_head ) ).
    ENDIF.
  ENDMETHOD.

*  METHOD earlynumbering_create.
*  DATA(lv_user) = cl_abap_context_info=&amp;gt;get_user_technical_name( ).
*    LOOP AT entities ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_entities&amp;gt;).
*      APPEND CORRESPONDING #( &amp;lt;lfs_entities&amp;gt; ) TO mapped-xlhead
*          ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_xlhead&amp;gt;).
*      &amp;lt;lfs_xlhead&amp;gt;-end_user = lv_user.
*    ENDLOOP.
*  ENDMETHOD.

  METHOD get_instance_features.
    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
    ENTITY XLHead
    FIELDS ( end_user )
    WITH CORRESPONDING #( keys )
    RESULT DATA(lt_file).

    result = VALUE #( FOR ls_file IN lt_file
                      ( %key                              = ls_file-%key
                        %is_draft                         = ls_file-%is_draft
                        %features-%action-uploadexceldata = COND #( WHEN ls_file-%is_draft = '00'
                                                                    THEN if_abap_behv=&amp;gt;fc-f-read_only
                                                                    ELSE if_abap_behv=&amp;gt;fc-f-unrestricted ) ) ).
  ENDMETHOD.
ENDCLASS.


*CLASS lhc_XLData DEFINITION INHERITING FROM cl_abap_behavior_handler.
*
*  PRIVATE SECTION.
*    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
*      IMPORTING keys REQUEST requested_authorizations FOR XLData RESULT result.
*
*    METHODS displayDocument FOR MODIFY
*      IMPORTING keys FOR ACTION XLData~displayDocument RESULT result.
*
*ENDCLASS.
*
*
*CLASS lhc_XLData IMPLEMENTATION.
*  METHOD get_instance_authorizations.
*  ENDMETHOD.
*
*  METHOD displayDocument.
*    "Read Child Entity
*    READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
*        ENTITY XLData
*        ALL FIELDS WITH
*        CORRESPONDING #( keys )
*        RESULT FINAL(lt_data).
*
*    IF lt_data IS NOT INITIAL.
*      "Convert Internal table data for excel
*
*      "Read Updated Entry
*      READ ENTITIES OF zcds_tom_i_user IN LOCAL MODE
*      ENTITY XLData
*      ALL FIELDS WITH
*      CORRESPONDING #( Keys )
*      RESULT DATA(lt_XLData).
*
*      "Send Status back to front end
*      result = VALUE #( FOR lwa_upd_data IN lt_XLData
*                        ( %tky   = lwa_upd_data-%tky
*                          %param = lwa_upd_data ) ).
*    ENDIF.
*  ENDMETHOD.
*ENDCLASS.​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Function Module used in RAP to update Billing Date -&lt;BR /&gt;we have created a remote enabled custom FM ZFM_TOM_BILLING_DATE_UPD as we don't have released SAP APIs available in our system. Then we have wrapped it by transaction ACO_PROXY and created a proxy class ZCL_TOM_BILLING_DATE_UPD.&lt;BR /&gt;This proxy class will be called from behavior Implementation class to update billing date.&lt;BR /&gt;Click on Hyperlink to check full blog&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-generate-a-wrapper-for-function-modules-bapis-for-missing-released/ba-p/13692790" target="_blank"&gt;How to generate a wrapper for function modules (BAPIs) for missing released SAP APIs&lt;/A&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;Function module logic is mentioned below:&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;FUNCTION zfm_tom_billing_date_upd
  IMPORTING
    VALUE(vbeln) TYPE vbeln_vf
    VALUE(fkdat) TYPE fkdat
  CHANGING
    VALUE(mtype) TYPE bapi_mtype OPTIONAL
    VALUE(message) TYPE bapi_msg OPTIONAL
  EXCEPTIONS
    no_authority.



  DATA: ls_vbrk_i TYPE vbrk,
        ls_vbrk_e TYPE vbrk,
        ls_vbsk   TYPE vbsk.

  DATA: lt_xkomv  TYPE STANDARD TABLE OF komv,
        lt_xvbpa  TYPE STANDARD TABLE OF vbpavb,
        lt_xvbrk  TYPE STANDARD TABLE OF vbrkvb,
        lt_xvbrp  TYPE STANDARD TABLE OF vbrpvb,
        lt_xkomfk TYPE STANDARD TABLE OF komfk,
        lt_xvbfs  TYPE STANDARD TABLE OF vbfs,
        lt_xthead TYPE STANDARD TABLE OF theadvb,
        lt_xvbss  TYPE STANDARD TABLE OF vbss.

  CLEAR: ls_vbrk_i,
  ls_vbrk_e,
  ls_vbsk.

  REFRESH: lt_xkomv,
  lt_xvbpa,
  lt_xvbrk,
  lt_xvbrp,
  lt_xkomfk,
  lt_xvbfs,
  lt_xthead,
  lt_xvbss.

  ls_vbrk_i-vbeln = vbeln.

  TRY.
      "Read billing doc
      CALL FUNCTION 'RV_INVOICE_DOCUMENT_READ'
        EXPORTING
*         ACTIVITY     = '  '
          konv_read    = 'X'
*         NO_NAST      = ' '
          vbrk_i       = ls_vbrk_i
*         I_NO_AUTHORITY_CHECK = ' '
*         OIA_UNZIP_FEES =
*         I_GV_ERDAT_SEL =
*         IV_NO_PRICING_BUFFER = ABAP_FALSE
        IMPORTING
          vbrk_e       = ls_vbrk_e
*         VBUK_E       =
        TABLES
          xkomv        = lt_xkomv
          xvbpa        = lt_xvbpa
          xvbrk        = lt_xvbrk
          xvbrp        = lt_xvbrp
          xkomfk       = lt_xkomfk
          xvbfs        = lt_xvbfs
          xthead       = lt_xthead
          xvbss        = lt_xvbss
*        CHANGING
*         i_data_read_from_archive =
        EXCEPTIONS
          no_authority = 1
          OTHERS       = 2.
      IF sy-subrc &amp;lt;&amp;gt; 0.
* If BAPI is not successful, Implement error handling
        mtype    = 'E'.
        message = TEXT-001.  "Error in Reading Billing Document

      ELSE.
        "Change Billing Date
        ls_vbrk_e-fkdat = fkdat.   "New Billing date

        "Apply Changes
        CALL FUNCTION 'RV_INVOICE_HEAD_MAINTAIN'
          EXPORTING
*           FCODE_I = '    '
            vbrk_i = ls_vbrk_e
          TABLES
            xkomfk = lt_xkomfk
            xkomv  = lt_xkomv
            xthead = lt_xthead
            xvbfs  = lt_xvbfs
            xvbpa  = lt_xvbpa
            xvbrk  = lt_xvbrk
            xvbrp  = lt_xvbrp
            xvbss  = lt_xvbss.

        IF sy-subrc &amp;lt;&amp;gt; 0.
* If BAPI is not successful, Implement error handling
          mtype    = 'E'.
          message = TEXT-002.    "Error in Applying Changes

        ELSE.
          ls_vbsk-mandt = sy-mandt.
          ls_vbsk-ernam = ls_vbrk_e-ernam.
          ls_vbsk-erdat = ls_vbrk_e-erdat.
          ls_vbsk-uzeit = ls_vbrk_e-erzet.

          "Save the Changes
          CALL FUNCTION 'RV_INVOICE_DOCUMENT_ADD'
            EXPORTING
              vbsk_i = ls_vbsk
*             with_posting = 'X'
*             WITHOUT_REFRESH = ' '
*             PREISFINDUNGSART = 'A'
*             I_NO_VBLOG = ' '
*             I_NO_NAST = ' '
*             I_NO_PRICING = ' '
*             I_NO_FI_DOC = ' '
*             I_BLART = ' '
*             IS_FI_ADD_INPUT =
*             I_NO_COLLECTIVE_BILLING =
*             IV_SNAPSHOT_ACTIVATION = ABAP_FALSE
*             IV_SUPPRESS_GTS_IN_SIM_MODE = ABAP_FALSE
*             IV_NO_TAX_CALC_IN_SIM_MODE = ABAP_FALSE
*             IMPORTING
*             VBSK_E =
            TABLES
              xkomfk = lt_xkomfk
              xkomv  = lt_xkomv
              xthead = lt_xthead
              xvbfs  = lt_xvbfs
              xvbpa  = lt_xvbpa
              xvbrk  = lt_xvbrk
              xvbrp  = lt_xvbrp
              xvbss  = lt_xvbss.

          IF sy-subrc &amp;lt;&amp;gt; 0.
* If BAPI is not successful, Implement error handling
            mtype    = 'E'.
            message = TEXT-003.  "Error in Saving the Changes
          ELSE.
            mtype    = 'S'.
            message = TEXT-004.  "Billing Date Changed Successfully
          ENDIF.
        ENDIF.
      ENDIF.

    CATCH cx_root INTO DATA(lx).

  ENDTRY.

ENDFUNCTION.​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--2113708011"&gt;Behavior Projection – ZCDS_TOM_C_USER&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );
use draft;

define behavior for ZCDS_TOM_C_USER //alias XLHead
{
  //  use create;
  use update;
  use delete;

  field ( readonly ) end_user, status, Local_Last_Changed_At;

  use action downloadTemplate;
  use action downloadData; //Needed in oDataV2 to download excel Data, for oDataV4 comment this

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use association _XLData { create; with draft; }
}

define behavior for ZCDS_TOM_C_EXCEL //alias XLData
{
  //  use update; //IF WANT USER TO ENABLE EDIT IN EXCEL DATA UNCOMMENT THIS
  //  use delete; //IF WANT USER TO DELETE PROCESSED EXCEL DATA UNCOMMENT THIS

  use association _XLUser { with draft; }

  //  use action displayDocument; //IF WANT TO ADD A NEW ACTION
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1723415502"&gt;Create Service Definition&lt;/H3&gt;&lt;P&gt;Now, let's create Service Definitions, exposing both Behavior Definition and Projection we just created.&lt;/P&gt;&lt;H5 id="toc-hId-1788232275"&gt;Service Definition – &lt;SPAN&gt;ZCDS_TOM_SD_MASS_FKDAT&lt;/SPAN&gt;&lt;/H5&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Definition for Projection Views'
define service ZCDS_TOM_SD_MASS_FKDAT {
  expose ZCDS_TOM_C_USER as XLHead;
  expose ZCDS_TOM_C_EXCEL as XLData;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--1948258821"&gt;Create Service Binding&lt;/H3&gt;&lt;P&gt;Now, let's create Service Binding (I tested with V2) on top of Service Definition we just created.&lt;BR /&gt;&lt;BR /&gt;If You are using V4 Services, you don't need to create separate action downloadData (comment it out) as we already have an option to export the data as an excel in V4 Services. You can add validations on excel input data as per your requirement.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--2144772326"&gt;See the &lt;SPAN&gt;wonders...&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;The list report page would look like below for V2 Services, in V4 Services you will see an extra option to export data as an excel-&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Go -&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 143754.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312163i4F93E09465B374AF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 143754.png" alt="Screenshot 2025-09-10 143754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Person Responsible will be the Session User, Click anywhere on the line or on arrow -&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131117.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312151i6D0C0AA8EEDEA0A7/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131117.png" alt="Screenshot 2025-09-10 131117.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Download Template button to Load Template, this action can be performed on first screen as well by selecting line item and click download template, Template will be loaded successfully as an excel attachment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131209.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312153i9F19A9925D49E4D2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131209.png" alt="Screenshot 2025-09-10 131209.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click on Hyperlink to download Template.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131422.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312154i2F746DF9B2D47AA3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131422.png" alt="Screenshot 2025-09-10 131422.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Template can be deleted by clicking on Delete Button, this same delete button will be used to delete processed data entries.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131525.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312155i918EE6DF0C403359/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131525.png" alt="Screenshot 2025-09-10 131525.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Edit button on previous screen and You can now update entries in the template and upload the data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131602.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312156i75E258B132404DEB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131602.png" alt="Screenshot 2025-09-10 131602.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Data will be processed, now click on save.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 131856.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312157i945EFB19A8FACD56/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 131856.png" alt="Screenshot 2025-09-10 131856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Status will be changed to 'File Processed'.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 132016.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312161iCBDBFE4677078830/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 132016.png" alt="Screenshot 2025-09-10 132016.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click on Download Data to load Processed Data as an Excel Attachment.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-10 132125.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312160iDB6D54DC85751EFF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-10 132125.png" alt="Screenshot 2025-09-10 132125.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Watch the Demo for V4 Services!!&lt;/P&gt;&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FuApixpT8Vww%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DuApixpT8Vww&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FuApixpT8Vww%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="600" height="337" scrolling="no" title="Excel Upload/ Download Template/ Download Processed Data in SAP Fiori Without SAPUI5 - Using SAP RAP" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;Hope it will be helpful!!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/excel-upload-download-template-download-processed-data-in-sap-fiori-without/ba-p/14212916"/>
    <published>2025-09-10T16:00:28.980000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-collaborate-on-an-entity-of-a-draft-enabled-rap-business-object/ba-p/14216444</id>
    <title>How to collaborate on an entity of a draft enabled RAP Business Object ?</title>
    <updated>2025-09-13T17:11:57.556000+02:00</updated>
    <author>
      <name>Andre_Fischer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/55</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631007969"&gt;Introduction&lt;/H1&gt;&lt;P&gt;With the latest release 2508 of SAP BTP ABAP Environment a new feature called &lt;EM&gt;&lt;STRONG&gt;Collaborative Draft&lt;/STRONG&gt;&lt;/EM&gt; has been delivered.&amp;nbsp; This feature allows that several users can work on the same draft instance of an entity of a RAP Business Object.&amp;nbsp;&lt;/P&gt;&lt;P&gt;So similar like collaborating on a file in Microsoft Teams it is now possible that several users can perform changes on an entity of a RAP Business Object at the same time.&lt;/P&gt;&lt;P&gt;The cool thing is that every draft enabled RAP BO can be enhanced so that it also supports Collaborative Draft without the need to change the existing ABAP code of your behavior implementation class(es).&lt;/P&gt;&lt;P&gt;It is only required to change a few lines of code in the behavior definition, the behavior projection and you have to create a&amp;nbsp;&lt;SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;draft query view&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp; which projects all fields of the draft table of&amp;nbsp;the "authorization&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;master&lt;/SPAN&gt;&lt;SPAN&gt;" entity which in most cases this is the root entity of your business object.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In case&amp;nbsp;your active business object view entity is protected by a DCL (which is strongly recommended for every productive RAP business object &lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;)&amp;nbsp; the draft query view must also be protected by a&amp;nbsp;data control language (DCL) that inherits from that existing DCL.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This because otherwise users would be able to see data in the draft they would not be allowed to see in the active data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please note:&amp;nbsp;&amp;nbsp;&lt;BR /&gt;As described in the section Outlook the implementation will become even easier in the future once table entities will be supported as a draft persistency instead of tables.&amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1434494464"&gt;&lt;SPAN&gt;Prerequisites&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;You need a draft enabled RAP Business object (which you can easily generate using the new "&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/odata-ui-service-from-scratch?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=sap_cross_product_abap" target="_blank" rel="noopener noreferrer"&gt;from scratch generator&lt;/A&gt;").&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;Your user and any other user that is supposed to use / test your RAP BO must have the new&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;business catalog&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP_CORE_BC_RAP_DRAFT_PC&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;assigned which is part of the business role template&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP_BR_EMPLOYEE&lt;/STRONG&gt;.&amp;nbsp;&lt;BR /&gt;You have hence first to ask your administrator to either generate an additional role based on the role template&amp;nbsp;&lt;STRONG&gt;SAP_BR_EMPLOYEE&lt;/STRONG&gt;&amp;nbsp;or let the administrator assign the business catalogue to an existing role which is assigned to developers on your SAP BTP ABAP Environment system, so that you and your colleagues can start developing and testing this cool new feature.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1237980959"&gt;&lt;SPAN&gt;Result&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In the following you see me (Andre Fischer) and the user ANZEIGER working on the same instance of a draft entity. As soon as a user leaves the focus of a field the changes will be updated automatically in the UI of the other user.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Demo_video.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313957iAAB37BFE5C5DA836/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Demo_video.gif" alt="Demo_video.gif" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can test the collaborative draft setup even in systems where you have just one user, like in our trial systems.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the first screen shot I am editing the field "Notes" (highlighted in red) and I can see that I am editing the field "OrderID" in the second tab (highlighted in green).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the second screen shot we see vice versa that I am there editing the field "OrderID" (highlighted in red) and that I am editing the field notes in the other session in the first tab.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="User_in_tab_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313948iBD3D15B8542E81AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="User_in_tab_1.png" alt="User_in_tab_1.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="User_in_tab_2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313949iE2DB4E59DF935D61/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="User_in_tab_2.png" alt="User_in_tab_2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1041467454"&gt;&lt;SPAN&gt;Implementation Steps&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;A step by step guide which describe how to enhance an existing draft enabled RAP Business Object has been provided for your convenience to the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/adding-collaboration-capability-to-draft-enabled-managed-business-object?locale=en-US&amp;amp;version=LATEST" target="_blank" rel="noopener noreferrer"&gt;SAP Online Help&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;An example of a RAP Business Object has also been delievered as part of the well known Flight Reference Sample with the latest version in &lt;A href="https://github.com/SAP-samples/abap-platform-refscen-flight/blob/ABAP-platform-cloud/README.md" target="_blank" rel="noopener nofollow noreferrer"&gt;Github&lt;/A&gt;&amp;nbsp;which now contains an additional sub package &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;/DMO/FLIGHT_COLLDRAFT.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-844953949"&gt;&lt;SPAN&gt;Implementation Walkthrough&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;I will add a few screen shots on how I have enabled my small RAP BO using the above mentioned documentation. As shown in the following screen shot only the behavior definition and the behavior projection have to be changed and two additional objects, the draft query view for the draft table of the root entity and the DCL for the draft query view have to be created.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="list_of_changed_and_new_repo_objects.png" style="width: 827px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313956iC892BB3203762888/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="list_of_changed_and_new_repo_objects.png" alt="list_of_changed_and_new_repo_objects.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777523163"&gt;&lt;SPAN&gt;1. Changes in the behavior Definition&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As described in the documentation the we have specify in the behavior definition that collaborative draft is used instead of exclusive draft and for the root entity we have to add the use of the draft query view for the draft table and we have to add the action &lt;STRONG&gt;Share&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="changes_in_bdef.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313952iFB7250D796996097/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="changes_in_bdef.png" alt="changes_in_bdef.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-581009658"&gt;2. Changes in the behavior projection&lt;/H2&gt;&lt;P&gt;In the behavior projection we simply have to add use statements so that the collaborative draft is used for our RAP business object and we have to enable the action &lt;STRONG&gt;Share&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="changes_in_bdef_projection.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313953i06CBFE56B1BF1659/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="changes_in_bdef_projection.png" alt="changes_in_bdef_projection.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-384496153"&gt;&lt;SPAN&gt;3. Create new object - Draft Query View&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="new_object_draft_query_view.png" style="width: 801px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313954i57652090D4856855/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new_object_draft_query_view.png" alt="new_object_draft_query_view.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-187982648"&gt;&lt;SPAN&gt;4. Create DCL for the Draft Query View&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="new_object_draft_query_view_DCL.png" style="width: 872px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313955i9FAEBC373CCDB3D2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new_object_draft_query_view_DCL.png" alt="new_object_draft_query_view_DCL.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--137613576"&gt;&lt;SPAN&gt;Outlook&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In future releases, when table entities will be supported to store the draft data instead of tables it will not be necessary anymore to create a draft query view for the draft table. This is because in this case the table entity itself can be directly secured by a DCL.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The setup shown in this blog post will be presented in upcoming events such as the sitBE Event in Mechelen, the DevToberFest and naturally TechEd and TechConnect events later this year.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-435613002"&gt;&lt;SPAN&gt;DevToberFest Sample&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;And you can find the code of the sample application which shows a Shopping Cart with a header and a child entity for items that I will use in this blog post soon in Github as well.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For the implementation I used the "from scratch generator" and as a template for the root entity I used the following structure&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Shopping Cart Header Data'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
define structure zdmo_cart_## {

  currency                : abap.cuky;
  notes                   : abap.char(100);
  order_id                : abap.numc(8);
  requested_delivery_date : fins_caldate;
  @Semantics.amount.currencyCode : 'zdmo_cart_##.currency'
  total_price             : abap.curr(11,2);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;while for the child entity this structure was used&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Shopping Cart Item Data'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
define structure zdmo_item_## {

  item_id         : abap.numc(8);
  ordered_item    : matnr40;
  quantity        : abap.numc(4);
  currency        : abap.cuky;
  @Semantics.amount.currencyCode : 'zdmo_item_##.currency'
  item_price      : abap.curr(11,2);
  @Semantics.amount.currencyCode : 'zdmo_item_##.currency'
  item_unit_price : abap.curr(11,2);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-collaborate-on-an-entity-of-a-draft-enabled-rap-business-object/ba-p/14216444"/>
    <published>2025-09-13T17:11:57.556000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-better-way-to-create-the-root-child-grandchild-hierachy-in-rap/ba-p/14214385</id>
    <title>A better way to create the Root-Child-Grandchild hierachy in RAP</title>
    <updated>2025-09-15T08:01:50.310000+02:00</updated>
    <author>
      <name>satellarknighty</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1735497</uri>
    </author>
    <content>&lt;P&gt;The RAP Framework supports Parent - Child - Grandchild - Great Grandchild - and so forth.&lt;/P&gt;&lt;P&gt;There are beautiful blog posts on how to do this:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A title="How to design managed RAP business objects with 3 or more levels of nodes " href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-design-managed-rap-business-objects-with-3-or-more-levels-of-nodes/ba-p/13534811" target="_blank"&gt;How to design managed RAP business objects with 3 or more levels of nodes&lt;/A&gt;&amp;nbsp;: Shows the basic idea.&lt;/LI&gt;&lt;LI&gt;&lt;A title="Create Root-Child-Grandchild-Great Grandchild relationship using RAP" href="https://community.sap.com/t5/technology-blog-posts-by-members/create-root-child-grandchild-great-grandchild-relationship-using-rap/ba-p/14029438" target="_blank"&gt;Create Root-Child-Grandchild-Great Grandchild relationship using RAP&lt;/A&gt;&amp;nbsp;: Shows the actual implementation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Both of them relies on storing a reference to the root in each and every descendant. As in: a child has a reference to the parent, and a grandchild (or great grandchild) has a reference to the root parent as well.&lt;/P&gt;&lt;P&gt;This is required so that in the Behavior Definition of each descendant, the association to the root can be used for `lock` and `authorization`.&lt;/P&gt;&lt;P&gt;But this has got me thinking: Why do we have to store the reference to the root in each descendant like this? Couldn't we do something like:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Grandchild._Child._Parent
"or even
GreatGrandchild._Grandchild._Child._Parent&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;If this worked, we would need to store the reference to the parent only in the child, therefore saving space on Grandchild and Great Grandchild.&lt;/P&gt;&lt;P&gt;With that said, let's dive in and test this. Here I only build Parent, Child, and Grandchild.&lt;/P&gt;&lt;H2 id="toc-hId-1760030270"&gt;Database tables&lt;/H2&gt;&lt;P&gt;Parent:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'parent'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table z_parenttest {

  key client            : abap.clnt not null;
  key uuid              : sysuuid_x16 not null;
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Child:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'CHILD'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table z_childtest {

  key client  : abap.clnt not null;
  key uuid    : sysuuid_x16 not null;
  parent_uuid : sysuuid_x16;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Grandchild:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Grandchild'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table z_gchildtest {

  key client : abap.clnt not null;
  key uuid   : sysuuid_x16 not null;
  child_uuid : sysuuid_x16;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As you can see, the grandchild doesn't have a field for the parent's UUID.&lt;/P&gt;&lt;H2 id="toc-hId-1563516765"&gt;Interface View&lt;/H2&gt;&lt;P&gt;Parent&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'PARENT'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZI_PARENT
  as select from z_parenttest
  composition [0..*] of zi_child as _Child
{
  key uuid                  as Uuid,
      @Semantics.user.createdBy: true
      local_created_by      as CreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as CreatedAt,
      @Semantics.user.lastChangedBy: true
      local_last_changed_by as LastChangedBy,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      _Child
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Child&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'child'
@Metadata.ignorePropagatedAnnotations: true
define view entity zi_child
  as select from z_childtest
  association to parent ZI_PARENT    as _Parent on $projection.ParentUuid = _Parent.Uuid
  composition [0..*] of ZI_GRANDCHILD as _GrandChild
{
  key uuid        as Uuid,
      parent_uuid as ParentUuid,
      _Parent,
      _GrandChild
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Everything looks normal so far. Now for what we came here for: The Grandchild!&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'GRANDE'
@Metadata.ignorePropagatedAnnotations: true
define view entity ZI_GRANDCHILD
  as select from z_gchildtest
  association to parent zi_child as _Child on $projection.ChildUuid = _Child.Uuid
{
  key uuid       as Uuid,
      child_uuid as ChildUuid,
      _Child,
      //You will get an error saying you have to include this
      //If you want to use _Child._Parent
      _Child.ParentUuid as ParentUUID,
      _Child._Parent as _Parent,
      
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;And just like that, the association to parent is made, without having to store a reference.&lt;/P&gt;&lt;P&gt;From this point onward: Projection View, MDE, Behavior... Everything should be the same as in the mentioned blogs.&lt;/P&gt;&lt;P&gt;Thanks for reading my blog and I wish you a pleasant day.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-better-way-to-create-the-root-child-grandchild-hierachy-in-rap/ba-p/14214385"/>
    <published>2025-09-15T08:01:50.310000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970</id>
    <title>SAP S/4HANA Table Maintenance Reimagined: Choosing the Right Framework</title>
    <updated>2025-09-17T12:42:25.292000+02:00</updated>
    <author>
      <name>Saurabh_Gupta1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/53365</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In this blog, we’ll explore a practical use case implemented in&amp;nbsp;&lt;STRONG&gt;S/4HANA 2021 On-Premise&lt;/STRONG&gt;, where we opted for&amp;nbsp;&lt;STRONG&gt;Custom Business Objects (CBO)&lt;/STRONG&gt;&amp;nbsp;to enable table maintenance via Fiori with minimal development effort and also &lt;STRONG&gt;evaluate new frameworks&lt;/STRONG&gt; to achieve this in &lt;STRONG&gt;latest S4/HANA release 2023&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-2018320602"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Approach for choosing Custom Business Object&lt;/STRONG&gt; (Decision Matrix)&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBO is based on BOPF framework which was widely used by SAP before the era of RAP (RESTful ABAP Programming), while this is still relevant, SAP has now moved to RAP based development and a new concept called custom business configuration, both will be covered later in context of data maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1950889816"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Why we didn’t choose RAP or Custom business configuration for this use case.&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration ( Business configuration maintenance object ) – This is available from S4 On-Prem 2022 onwards and the Fiori app for CUBCO is available after 2023 onwards.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;RESTful ABAP Programming – SAP has provided RAP Generator which can generate all the artefacts based on a table right from views, behavior definition , service binding , generation to Fiori app however this is also not available in On-Prem 2021, the other workaround could be to build all these artefacts manually and generate Fiori app which was going to take more development time, hence it was avoided.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Since we cannot go with above 2 options, the only 2 options left are SM30 and Custom Business object, as we want to move towards Fiori first approach, Custom business object was chosen as the Go to approach. Let us deep dive in this with the help of use- case and practical tips&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1625293592"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;What is Custom Business Object –&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With the Custom Business Objects Fiori app, you can create and manage custom business objects. A custom business object is a hierarchical set of database tables with an API for creation, retrieval, update and deletion of data.&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In The Fiori App ‘Custom Business Object’, a new BO has been defined and maintained as below.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User can choose what options do they want as part of framework, e,g, Change document, system admin date (last change at, created at etc are added by default).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User interface is disabled in this since it is only possible to enable if Embedded gateway is used which is not the case here.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Saurabh_Gupta1_2-1758034866616.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315300i224DEF863855A856/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_2-1758034866616.png" alt="Saurabh_Gupta1_2-1758034866616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You are free to choose what kind of operations, out of CUD, should be supported in the BO out of box.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_3-1758035070410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315301i4300283172BACF00/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_3-1758035070410.png" alt="Saurabh_Gupta1_3-1758035070410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is where all the fields are defined for BO.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_4-1758035118964.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315302i70F7DFC5438ED8AD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_4-1758035118964.png" alt="Saurabh_Gupta1_4-1758035118964.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1557862806"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Final Output&lt;/STRONG&gt; –&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Until this point, no coding has been done except for few changes in CDS Metadata for Fiori UI related cosmetic changes, all the operation are handled by framework out of box.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;An additional button ‘Mass upload’ was added in metadata extension which is using intent-based navigation to navigate to another GUI application for mass upload of the entries.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758038827500.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315330iD5E9892D58E6AD7F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758038827500.png" alt="Saurabh_Gupta1_0-1758038827500.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1361349301"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Few Tips&lt;/STRONG&gt; -&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom Table (Type Application) is auto generated in this case with Key field as UUID.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Data entries maintained in one system cannot be transported to other system and must be maintained in target system, which was also the requirement in our use case.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once business object is published and moved to production, Deletion is not allowed.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId-1035753077"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How does the future look like for the same activity (Table Maintenance)-&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As discussed above, there are 2 other ways to achieve this with minimal development efforts in new S4 HANA releases.&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-839239572"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Custom Business Configuration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is &lt;STRONG&gt;recommended &lt;/STRONG&gt;approach going forward where a business configuration maintenance object serves as primary entry point for maintenance.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;We have the option to use the Generate ABAP Repository Objects Wizard for Business configuration maintenance object to generate all required development objects based on a customizing table&lt;/LI&gt;&lt;LI&gt;Based on the Business configuration maintenance object, the custom business configurations app renders a&amp;nbsp;Fiori element list report for the entities exposed by the service binding to maintain the configuration entries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_11-1758035471221.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315310i8644DD844BCAACC2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_11-1758035471221.png" alt="Saurabh_Gupta1_11-1758035471221.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_12-1758035554875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315311iD7963B6C1BF5D5BD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_12-1758035554875.png" alt="Saurabh_Gupta1_12-1758035554875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Image courtesy - SAP&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In short, Custom business configuration (Fiori app) is an umbrella under which all maintenance objects will be listed and serves as one stop shop while maintenance objects are the actual ABAP artefact which contains all the definition related to Object maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_13-1758035620891.png" style="width: 605px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315321i9C4BDEE4DBF5C59B/image-dimensions/605x198/is-moderation-mode/true?v=v2" width="605" height="198" role="button" title="Saurabh_Gupta1_13-1758035620891.png" alt="Saurabh_Gupta1_13-1758035620891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.20 PM.png" style="width: 607px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315314iA3E7AFAAA2468BBB/image-dimensions/607x199/is-moderation-mode/true?v=v2" width="607" height="199" role="button" title="Screenshot 2025-09-16 at 8.44.20 PM.png" alt="Screenshot 2025-09-16 at 8.44.20 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Different options like SM30 are available by default such Add copy action out of box.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Add Data Consistency Check for fields with fixed domain values or foreign key screen check.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.37 PM.png" style="width: 633px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315317i5B28948485F2436C/image-dimensions/633x333/is-moderation-mode/true?v=v2" width="633" height="333" role="button" title="Screenshot 2025-09-16 at 8.44.37 PM.png" alt="Screenshot 2025-09-16 at 8.44.37 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All of the below objects are created by default including CDS view, service definition, service binding, business object maintenance , transport definition, implementation classes etc.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.59 PM.png" style="width: 638px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315318i40537C78E8356547/image-dimensions/638x478/is-moderation-mode/true?v=v2" width="638" height="478" role="button" title="Screenshot 2025-09-16 at 8.44.59 PM.png" alt="Screenshot 2025-09-16 at 8.44.59 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.18 PM.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315320i990558C08B796ACB/image-dimensions/635x487/is-moderation-mode/true?v=v2" width="635" height="487" role="button" title="Screenshot 2025-09-16 at 8.45.18 PM.png" alt="Screenshot 2025-09-16 at 8.45.18 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-771808786"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Final Output -&amp;nbsp;&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Until this point, no coding has been done; all these features are provided out of the box by the framework.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;The custom business configuration app shows all the maintenance objects for which the user is authorized. &lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758178463971.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316288i7C80DFB3C71A9925/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758178463971.png" alt="Saurabh_Gupta1_0-1758178463971.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the relevant maintenance object is selected, the Edit button would be enabled to allow creation, deletion, updation, etc. activities.&lt;/P&gt;&lt;H5 id="toc-hId-575295281"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_1-1758178556614.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316290i00ACBDF62350D6C3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_1-1758178556614.png" alt="Saurabh_Gupta1_1-1758178556614.png" /&gt;&lt;/span&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Few Practical Tips&lt;/FONT&gt; –&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All tables must have a client key field and delivery class C&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Have a timestamp field with data element&amp;nbsp;ABP_LASTCHANGE_TSTMPL&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;To enable the "No Transport" option in the ADT wizard, implement SAP Note&amp;nbsp; &lt;A href="https://me.sap.com/notes/3579012" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/3579012&lt;/A&gt;.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With few tweaks, it is possible to maintain data directly in production system instead of transporting. More details in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-a-rap-bo-to-change-the-content-of-a-customizing-table-in-the/ba-p/13723087" target="_blank"&gt;blog&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As of version SAP S/4HANA release 2022, customers can use the generator for Business Configuration objects. The Custom Business Configurations SAP Fiori app is not yet available; app has been made available in release 2023.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-249699057"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;2. RAP Generator&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Second approach to achieve this is using same generation wizard from context menu of table.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.34 PM.png" style="width: 623px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315319i590CF530AE26F47A/image-dimensions/623x592/is-moderation-mode/true?v=v2" width="623" height="592" role="button" title="Screenshot 2025-09-16 at 8.45.34 PM.png" alt="Screenshot 2025-09-16 at 8.45.34 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId--737934550"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than plain RAP generator?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is a framework which is also built on RAP artefacts, but it has other framework related functionalities (e.g change log for auditing) in comparison to plain RAP application.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Fiori for CBC can be accessed through generic custom business configuration app serving as single source of entry whereas RAP application should be exposed as standalone app.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas RAP generator can be built around any customizing and application tables both.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBC provides in built functionality to capture entries into transport request, but RAP generator requires explicit changes to incorporate transport feature.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId--934448055"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than custom business object?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is built on RAP framework (SAP recommended) whereas custom business objects is built on BOPF framework.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration has transport feature for data entries whereas custom business object does not any way to transport entries from one system to other system.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is bottom-up approach where custom tables are defined first, and rest of the artifacts are generated around that whereas custom business object works on top-down approach where business object is created first then custom table is generated around BO.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration supports only OData V4 where CBO supports OData V2.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas custom business object is built around application tables.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once CBO has moved to production, it cannot be deleted.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In both the case, Metadata can be enhanced for any Fiori related UI changes, also additional validation, actions are supported in both.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Additional reading-&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970"/>
    <published>2025-09-17T12:42:25.292000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/integrating-change-documents-into-rap-applications/ba-p/14219994</id>
    <title>Integrating Change Documents into RAP Applications</title>
    <updated>2025-09-17T13:42:38.830000+02:00</updated>
    <author>
      <name>Madhumathi_</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1500393</uri>
    </author>
    <content>&lt;P&gt;Before diving into how to integrate change documents into a RAP application, it’s important to first understand what are change documents and why they matter.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Change Documents in SAP&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Change documents are records of changes made to data within SAP. These records contain detailed information such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The user who made the change&lt;/LI&gt;&lt;LI&gt;The time and date of the change&lt;/LI&gt;&lt;LI&gt;The specific table and field that were modified&lt;/LI&gt;&lt;LI&gt;The previous and updated values of the field&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Change documents in SAP play a crucial role in tracking modifications to critical business data. They also help in maintaining data integrity, support compliance, and provide a clear audit trail for business transactions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Significance of Change Documents&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Change documents serve various purposes, such as:​&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Auditing:&lt;/STRONG&gt;&amp;nbsp;They help track who made changes to data and when. This information is useful for detecting unauthorized changes and to identify the source of errors.​&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Troubleshooting:&lt;/STRONG&gt;&amp;nbsp;They assist in resolving data- related issues. For example, if a user reports incorrect data in a field, change documents can help determine who modified it and at what time.​&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data recovery:&lt;/STRONG&gt;&amp;nbsp;They can aid in restoring data that has been accidently deleted or corrupted.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To enable RAP change documents,&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenbdl_strict" target="_blank" rel="noopener nofollow noreferrer"&gt;BDEF strict mode&lt;/A&gt;&amp;nbsp;must be switched on.&lt;/LI&gt;&lt;LI&gt;A&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenrap_persistent_table_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;RAP persistent table&lt;/A&gt;&amp;nbsp;must be specified using the syntax addition&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenbdl_persistent_table" target="_blank" rel="noopener nofollow noreferrer"&gt;persistent table&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Advantages: &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;No implementation in the&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenbehavior_pool_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP behaviour pool&lt;/A&gt;&amp;nbsp;is required.&lt;/LI&gt;&lt;LI&gt;ChangeDocumentObject&amp;nbsp; can be generated by a quick fix in&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenadt_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP development tools for Eclipse&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Steps to Integrate Change Documents into RAP Applications&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step1: Mark the DDIC Data Element as Change Document Enabled.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As in the classic ABAP environment for change documents, begin by identifying &amp;nbsp;the fields in the database table that &amp;nbsp;must be enabled for change document and mark the corresponding data element as &lt;EM&gt;change document enabled&lt;/EM&gt;. This process remains the same for RAP applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step2: Enable in RAP Behavior Definition &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the behaviour definition, add the following statement to the root entity. The keyword &lt;STRONG&gt;master&lt;/STRONG&gt; indicates that the definition applies to the root entity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;changedocuments&lt;/STRONG&gt; &lt;STRONG&gt;master&lt;/STRONG&gt; &lt;STRONG&gt;(&lt;/STRONG&gt; ChangeDocumentObject &lt;STRONG&gt;)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;ChangeDocumentObject&amp;nbsp;refers to the name of a&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenchange_document_obj_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;change document object&lt;/A&gt;. You can generate this object by a quick fix in&amp;nbsp;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenadt_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;ABAP development tools for Eclipse&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Madhumathi__0-1758108798653.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315809i780DAB0AC273A9CA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Madhumathi__0-1758108798653.png" alt="Madhumathi__0-1758108798653.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step3: Define Logging Options&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To enable the logging option, add the following statement in the definition of the entity behaviour:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;changedocuments (create : key, update : data, delete : key );&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Logging options can be defined for the&amp;nbsp;&lt;A href="https://ldai2erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abenrap_standard_operation_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;standard operations&lt;/A&gt;:&amp;nbsp;&lt;EM&gt;create&lt;/EM&gt;,&amp;nbsp;&lt;EM&gt;update&lt;/EM&gt;, and&amp;nbsp;&lt;EM&gt;delete&lt;/EM&gt;. You can choose from the following logging options:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;none&lt;/STRONG&gt;:, No change document data is recorded.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;key&lt;/STRONG&gt;:, Only key values are recorded in the change documents.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;data&lt;/STRONG&gt;: A The data for change-document-relevant fields is recorded. A field is considered as relevant for change documents if its corresponding &amp;nbsp;&lt;A href="https://ldai2erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abendata_element_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;EM&gt;DDIC data elemen&lt;/EM&gt;t&lt;/A&gt;&amp;nbsp;has &amp;nbsp;the&amp;nbsp;change document&amp;nbsp;flag enabled.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step4: Enable in Dependent Entities &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The change documents dependent entities are defined using the following syntax:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;changedocuments dependent&amp;nbsp;&lt;EM&gt;[&lt;/EM&gt;by _Assoc&lt;EM&gt;]&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Adding&amp;nbsp;&lt;EM&gt;by _Assoc&lt;/EM&gt;&amp;nbsp;is optional. It is used to specify the association to the change documents master entity. When omitted, the&amp;nbsp;&lt;EM&gt;&lt;A href="https://ldai1erx.devsys.net.sap:44300/sap/public/bc/abap/docu?sap-language=EN&amp;amp;tree=X&amp;amp;version=X&amp;amp;sap-client=000&amp;amp;style=ui5&amp;amp;object=abencds_ancestor_assoc_glosry" target="_blank" rel="noopener nofollow noreferrer"&gt;ancestor association&lt;/A&gt;&lt;/EM&gt;&amp;nbsp;to the change documents master entity is used implicitly.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step5: Display on UI. &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Root BO Entity:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Add the access control and association to the root view entity of the behaviour definition.&lt;/P&gt;&lt;P&gt;Add access control to the alias of the association &amp;lt;_chdview&amp;gt;:&lt;BR /&gt;...&lt;BR /&gt;@AccessControl.privilegedAssociations: [ '&amp;lt;_chdview&amp;gt;' ]&lt;BR /&gt;...&lt;/P&gt;&lt;P&gt;Add association with alias &amp;lt;_chdview&amp;gt;:&lt;BR /&gt;...&lt;BR /&gt;association [0..*] to I_ChangeDocument_2 as &amp;lt;_chdview&amp;gt;&amp;nbsp;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;on &amp;lt;_chdview&amp;gt;.ChangeDocObjectClass = '&amp;lt;OWN_CHANGEDOC&amp;gt;'&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;and &amp;lt;_chdview&amp;gt;.ChangeDocObject = $projection.&amp;lt;OBJECT_ID&amp;gt;&lt;BR /&gt;...&lt;BR /&gt;&lt;BR /&gt;Field $projection.&amp;lt;OBJECT_ID&amp;gt; used in the association to I_ChangeDocument_2 has to be read only.&lt;BR /&gt;Otherwise change documents won't be displayed on an object page in 'edit mode'.&lt;/P&gt;&lt;P&gt;Add reference to alias:&lt;BR /&gt;...&lt;BR /&gt;&amp;lt;_chdview&amp;gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;&lt;STRONG&gt;Projection View&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Add the access control and redirect in the projection view.&lt;/P&gt;&lt;P&gt;Add the access control to the alias of the association&amp;nbsp;&amp;lt;_chdview&amp;gt;:&lt;BR /&gt;...&lt;BR /&gt;@AccessControl.privilegedAssociations: [ '&amp;lt;_chdview&amp;gt;' ]&lt;BR /&gt;...&lt;BR /&gt;&lt;BR /&gt;Add the redirection&lt;BR /&gt;...&lt;BR /&gt;&amp;lt;_chdview&amp;gt;:redirected to C_CHANGEDOCUMENT_2&lt;/P&gt;&lt;P&gt;Add annotation: @AccessControl.privilegedAssociations: [ '_ChangeDocument'] in the projection and root BO entity.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Metadata Extension&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Add the annotation for the facet for change documents in the metadata extension of the projection view:&lt;BR /&gt;&lt;BR /&gt;...&lt;/P&gt;&lt;P&gt;{ id: '&amp;lt;CHD_ID&amp;gt;',&lt;/P&gt;&lt;P&gt;type: #LINEITEM_REFERENCE,&lt;/P&gt;&lt;P&gt;label: 'Change Documents',&lt;/P&gt;&lt;P&gt;purpose: #STANDARD,&lt;/P&gt;&lt;P&gt;position: 40,&lt;/P&gt;&lt;P&gt;targetElement: '&amp;lt;_chdview&amp;gt;'&lt;BR /&gt;}&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Service Definition. &lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Extend the service definition for the behavior definition to expose&amp;nbsp;CDS&amp;nbsp;view C_ChangeDocument_2&lt;/P&gt;&lt;P&gt;...&lt;BR /&gt;expose C_ChangeDocument_2;&lt;/P&gt;&lt;P&gt;…&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/integrating-change-documents-into-rap-applications/ba-p/14219994"/>
    <published>2025-09-17T13:42:38.830000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/installing-github-copilot-in-eclipse-adt/ba-p/14217834</id>
    <title>Installing GitHub Copilot in Eclipse ADT</title>
    <updated>2025-09-18T11:47:54.505000+02:00</updated>
    <author>
      <name>kunalchanda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/890293</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760124292"&gt;Introduction&lt;/H2&gt;&lt;P&gt;GitHub Copilot is an AI coding assistant platform that helps us while writing code by suggesting lines or blocks of code &amp;amp; troubleshooting them. This guide walks you through installing &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; in &lt;STRONG&gt;Eclipse ADT&lt;/STRONG&gt; (ABAP Development Tools).&lt;/P&gt;&lt;H2 id="toc-hId-1563610787"&gt;Pre-requisites&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Eclipse IDE with ADT installed&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Existing Github account&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1367097282"&gt;Steps&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Open Eclipse IDE and navigate to: Help -&amp;nbsp;Eclipse Marketplace&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="kunalchanda_2-1757948909739.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314731iC87C2A938B413472/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_2-1757948909739.png" alt="kunalchanda_2-1757948909739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search &amp;amp; Select GitHub Copilot then install it by following the installation prompts.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_4-1757949016026.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314737i074C5A96CEC35BC6/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_4-1757949016026.png" alt="kunalchanda_4-1757949016026.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Restart Eclipse&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;After restarting, Copilot is available in the menu bar. Sign in using Github account.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_5-1757949108733.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314738iEAFB2F9E7AA599AA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_5-1757949108733.png" alt="kunalchanda_5-1757949108733.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1299666496"&gt;Using GitHub Copilot in Eclipse&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;U&gt;Code Suggestions:&lt;/U&gt;&amp;nbsp;Start typing your code. Copilot will automatically suggest completions. Press &lt;STRONG&gt;TAB&lt;/STRONG&gt; to accept a suggestion.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_7-1757949344991.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314743i7FF173DF5E78A8D2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_7-1757949344991.png" alt="kunalchanda_7-1757949344991.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;Chat option:&lt;/U&gt;&amp;nbsp;Use the Open Chat option to communicate with Copilot. We can also select the context/object for which we're asking questions or resolving errors.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_8-1757949373300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314745i34B0760A856F71DC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_8-1757949373300.png" alt="kunalchanda_8-1757949373300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-974070272"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;After using it for few cases of RAP, I feel it needs to be evolve further for ABAP specific developments.&amp;nbsp; On the other hand the VSCode copilot extension works better for CAP developments in case of code suggestions &amp;amp; troubleshooting.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/installing-github-copilot-in-eclipse-adt/ba-p/14217834"/>
    <published>2025-09-18T11:47:54.505000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-mathematical-instead-of-artificial-intelligence-in-the-abap/ba-p/14215884</id>
    <title>Using mathematical instead of artificial intelligence in the ABAP environments for 2508</title>
    <updated>2025-09-22T13:26:15.367000+02:00</updated>
    <author>
      <name>kilian_kilger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/204709</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760064865"&gt;1. Introduction&lt;/H2&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Do all intelligent ABAP apps use AI?&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Although using AI for all intelligent functionality is tempting, other techniques exist to gain insight. One of these is &lt;STRONG&gt;statistics&lt;/STRONG&gt;. In contrast to AI, statistics is a mathematically sound science that will not produce fake answers and hallucinations but merely hard facts. These hard facts can then be used for operational decisions. I will call this &lt;STRONG&gt;mathematical&lt;/STRONG&gt;, not &lt;STRONG&gt;artificial&lt;/STRONG&gt; &lt;STRONG&gt;intelligence&lt;/STRONG&gt;.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Of course, there are new technologies like&amp;nbsp;&lt;A title="BDC" href="https://www.sap.com/products/data-cloud.html?campaigncode=crm-yj25-btp-3097595&amp;amp;source=ppc-de-googleads--22741048455-185762215630-bdci_bdci-x-x-aam&amp;amp;gclsrc=aw.ds&amp;amp;gad_source=1&amp;amp;gad_campaignid=22741048455&amp;amp;gbraid=0AAAABAUXsVQrP-kl-sYE9i_KlxUkBhq9N&amp;amp;gclid=Cj0KCQjw58PGBhCkARIsADbDilzUwPog1hQ-p2jsuqAWCR5iN_Dx3xqF-gQU0J-1UivT94Vy7BAx0VQaAoITEALw_wcB" target="_blank" rel="noopener noreferrer"&gt;BDC&lt;/A&gt;&amp;nbsp; for data warehousing. However, having statistics available in your transactional ABAP applications might also be of great value, as many transactional decisions might be driven by a dataset already available in ABAP.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;However, some foundations must be built to integrate statistical functions directly into the ABAP language. This blog post outlines these foundations and covers the integration of some new mathematical functions into the ABAP language in the ABAP environments for 2508.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;For a concrete example of applying these functions, see the following blog post, where these are used to compute random numbers or quantiles using a C1 released cloud API.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The now integrated functions are also part of an agenda to bring more built-in Python or Microsoft Excel functions into ABAP. A business analyst is expected to prepare a functionality in an Excel workspace or a Python script. Later on, this can be integrated into an ABAP app.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;This is currently planned to be available on-premise and in the private cloud with the upcoming major SAP S/4HANA release in 2025. Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1563551360"&gt;2. Let's talk about data types&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;When discussing mathematical functions in ABAP, we have to talk about datatypes. For statistics, the computation must be fast. At the end, we will often calculate a percentage or some other number where only the first two decimal places are relevant.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Implementing the float data type functionality, which provides 64 bits of binary precision and can represent up to 17 decimal places, is generally sufficient for most applications. We have also developed functions that utilize the DECFLOAT34 data type, offering 128 bits of precision. This level of precision exceeds what is readily available in most other programming languages. Yet, it integrates well within the ABAP type system, and some users might benefit from 128 bits of precision or larger numbers. Often, it is more relevant to support higher exponents than more digits of precision.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId-1367037855"&gt;3. Simple combinatoric functions: factorial( ) and binomial( )&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;The first two functions covered in this article are used for combinatorics. These are very basic and occur in a wide variety of settings. These are the factorial and binomial functions. Both take integer arguments and deliver a float or decfloat34 value. As factorials can be pretty large, the extended precision of decfloat34 is beneficial here.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Both functions return &lt;STRONG&gt;integers mathematically&lt;/STRONG&gt;, but in ABAP, they return F and DECFLOAT34 to support a wider range of input parameters.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H3 id="toc-hId-1299607069"&gt;a) Factorial&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Description:&lt;/STRONG&gt;&amp;nbsp;Describes the number of ways in which n items can be ordered. Written n!.&lt;/P&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt; available in Microsoft Excel as FACT( )&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;This function appears in a wide variety of settings.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;So if we have Apple and Banana (two items), the factorial is also 2, as there are two possible orderings (Apple, Banana) and (Banana, Apple). For three items, Apple, Banana, and Orange, we have six orderings (Apple, Banana, Orange), (Apple, Orange, Banana), (Orange, Apple, Banana), (Orange, Banana, Apple), (Banana, Orange, Apple), (Banana, Apple, Orange).&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;The factorial has a simple formula:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;n! = n*(n-1)*(n-2)*...*1&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;For the first position, we have n possibilities to choose an item, for the second position only n-1, and so on.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Factorials can be pretty large. For example:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;50! = 30414093201713378043612608166064768844377641568960512000000000000&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;The ABAP kernel computes the factorials using a precomputed table for small values and the transcendental gamma function for large values. This is much faster than computing n * (n-1) * ... * 1.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Here is the ABAP example:&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;data large type decfloat34.
large = factorial( 1000 ).
cl_demo_output=&amp;gt;display( large ).&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;ABAP correctly outputs: 4.023872600770937735437024339230040E+2567.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-1103093564"&gt;&lt;STRONG&gt;b.)&amp;nbsp;&lt;/STRONG&gt;Binomial coefficient&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;: Describes the number of ways in which k items can be chosen out of a total set of n items.&amp;nbsp;Written&amp;nbsp;C(n, k).&lt;/P&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Good to know&lt;/STRONG&gt;: available in Microsoft Excel as COMBIN( )&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;For example, C(5,1) equals 5, as there are five possibilities for choosing one item out of five. C(4,2) equals six, as if you have four items (1,2,3,4), you have the six possibilities {1,2}, {1,3}, {1,4}, {2,4}, {2,4}, and {3,4} to choose 2 items. Note here that the ordering is not considered, i.e., the binomial coefficient is not the number of ways to choose an ordered set of k items out of n items.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;There is a simple formula for the binomial coefficient as well:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;C(n,k) = n! / ( k! * (n-k)! )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here is a simple ABAP program to use the function:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;data large type decfloat34.
large = binomial( n = 20000 k = 5000 ).
cl_demo_output=&amp;gt;display( large ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This correctly outputs:&amp;nbsp;&lt;SPAN&gt;1.566362779957802233492978893365436E+4882, as you have many options to choose from, 5000 items out of 20,000 items.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Note that the binomial coefficient is typically not computed by the above formula, but by the transcendental beta function. This is also done in ABAP.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777497340"&gt;4. Basic transcendental functions: gamma( ) and log_gamma( )&lt;/H2&gt;&lt;P&gt;These basic transcendental functions appear everywhere in statistics, probability theory, and many other settings. If you don't know them, imagine them as similar to transcendental functions like sin(x), cos(x), and log(x).&lt;/P&gt;&lt;P&gt;The importance of the gamma function comes from the fact that it is defined on the whole range of real numbers (except -1, -2, ...) and that for positive integers n:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;n! = Gamma(n+1)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The gamma function is defined as an integral (for positive real numbers) as:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 221px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314456i8F1F7182DA5B5780/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is essential, as it defines the probability density of the &lt;STRONG&gt;gamma probability distribution&lt;/STRONG&gt; and some other probability distributions. Thus, it is often used in statistics.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As the gamma function grows rapidly, in practice, the function log_gamma(x) is often used, which is defined as:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;log_gamma(x) = log(abs(gamma(x))&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The computation of the log_gamma function is also more numerically stable.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Here is a picture of both functions:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313654i9E9FCDD77A85E0DB/image-dimensions/712x381/is-moderation-mode/true?v=v2" width="712" height="381" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The usage in ABAP is simple:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; data gamma_value type decfloat34.
 data log_gamma_value type decfloat34.
 data test_log_gamma type decfloat34.
 
 gamma_value = gamma( - 1 / 2 ).
 log_gamma_value = log_gamma( - 1 / 2 ).
 test_log_gamma = log( abs( gamma( -1 / 2 ) ) ).
 
 assert log_gamma_value = test_log_gamma.
 
 cl_demo_output=&amp;gt;write( gamma_value ).
 cl_demo_output=&amp;gt;write( log_gamma_value ).
 cl_demo_output=&amp;gt;write( test_log_gamma ).
 cl_demo_output=&amp;gt;display( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This correctly outputs:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;GAMMA_VALUE
-3.544907701811032054596334966682290

LOG_GAMMA_VALUE
1.265512123484645396488945797134706

TEST_LOG_GAMMA
1.265512123484645396488945797134706&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Good to know: &lt;/STRONG&gt;These&amp;nbsp;functions are available in Microsoft Excel as GAMMA( ) and GAMMALN( ).&lt;/P&gt;&lt;H2 id="toc-hId-580983835"&gt;&lt;STRONG&gt;5. Statistic functions: erf( ), erf_inv(), erfc(), erfc_inv()&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;error function&lt;/STRONG&gt; is another fundamental transcendental function. The importance of the error function erf(x) comes from the fact that it is related to the distribution function of the normal probability distribution.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314463i1DC884AC1A6FBCC7/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The area marked in yellow below the blue curve (which draws the probability density function of the standard normal distribution) is given by:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 205px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314466iF098B12381E4E6C8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The yellow area gives the probability that an event is smaller than or equal to some given value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;An integral again defines the error function:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 184px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314595iF481F1715B634B06/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The error function is available in Microsoft Excel as ERF().&lt;/P&gt;&lt;P&gt;The graph of the function erf(x) is simple:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314469i3A803CB2802302FD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see from the graph, the error function is invertible on the interval (-1,1). The inverse function is called erf_inv(x) and is used to compute the &lt;STRONG&gt;quantile&lt;/STRONG&gt; of the &lt;STRONG&gt;normal distribution&lt;/STRONG&gt;. The graph of the inverse function looks like so:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314619i260476E559F615EF/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The inverse error function is available in Microsoft Excel as ERFINV()&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition to the error and inverse error functions, there are the complementary error functions erfc(x) and inverse erfc_inv(x). The complementary error function is defined as:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 154px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314635i2442525ADCFC9A8F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Why is this function needed? There are multiple reasons this function is used very often, as it appears naturally in statistics, but is also needed numerically to compute probabilities very close to 1, where erf(x) loses precision (floating point numbers are very precise around 0 and not very precise around 1).&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The complementary error function is called ERFC() in Microsoft Excel.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here is a basic usage in ABAP:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; final(erf) = erf( 1 / 2 ).
 final(erfc) = erfc( 1 / 2 ).
 final(erf_inv) = erf_inv( 1 / 2 ).

 cl_demo_output=&amp;gt;write( erf ).
 cl_demo_output=&amp;gt;write( erfc ).
 cl_demo_output=&amp;gt;write( erf_inv ).
 cl_demo_output=&amp;gt;display( ).&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-384470330"&gt;6. Conclusion&lt;/H2&gt;&lt;P&gt;This article introduced 8 new mathematical functions in ABAP for the ABAP environments for 2508. These can be applied in a business context in statistical applications. A good example for this can be found in the following blog post:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributio...&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-mathematical-instead-of-artificial-intelligence-in-the-abap/ba-p/14215884"/>
    <published>2025-09-22T13:26:15.367000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-sort-data-in-value-help/ba-p/14225144</id>
    <title>ABAP RAP: Sort data in value help</title>
    <updated>2025-09-23T08:16:39.831000+02:00</updated>
    <author>
      <name>adel_adel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/218694</uri>
    </author>
    <content>&lt;P&gt;Hi Experts,&lt;/P&gt;&lt;P&gt;I haven ABAP RAP application, is working fine. The requirement I have to add is the following:&lt;/P&gt;&lt;P&gt;The values of 1 of the fileds are coming from a domain name. The values are now populated default sorted on key value.&lt;/P&gt;&lt;P&gt;I want to sort the values ( at least on the presentation layer) based on the position as defined in the domain DD07T-VALPOS&lt;/P&gt;&lt;P&gt;Any idea how to achieve this? I have tried to add that field in the cds view and hide it and use the annotation&amp;nbsp;&lt;SPAN&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.presentationVariant: [{sortOrder: [{ by: 'ValuePosition' , direction: #DESC}]}] -- does not help&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-sort-data-in-value-help/ba-p/14225144"/>
    <published>2025-09-23T08:16:39.831000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-cloud-number-ranges-the-abap-rap-commit-work-conflict-and-the-simple/ba-p/14221714</id>
    <title>ABAP Cloud Number Ranges: The ABAP RAP COMMIT WORK Conflict and the Simple Fix</title>
    <updated>2025-09-23T12:45:39.845000+02:00</updated>
    <author>
      <name>suzanne_alivand</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/848404</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Many business applications require unique numbers, for example, to complete the keys of data records. In order to get numbers from an interval, a number range object must be defined which can contain different properties. Standard Number ranges are typically maintained via customizing in each system (Test and Production). However, the process for&amp;nbsp;&lt;STRONG&gt;custom&lt;/STRONG&gt;&amp;nbsp;Number Range Objects in the S/4HANA Cloud Public Edition is different.&lt;/P&gt;&lt;P&gt;These custom objects must be created in the development environment, configured in the customizing client, and then transported through the landscape. This blog outlines that end-to-end process, including a frustrating short dump I encountered and the surprisingly simple configuration change that solved it.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 1: The Developer's Task - Defining the Blueprint in ADT&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Unlike the on-premises world, the process for a custom number range begins in the developer's toolkit: ABAP Development Tools (ADT). Here, you create the&amp;nbsp;&lt;EM&gt;definition&lt;/EM&gt;&amp;nbsp;or the&amp;nbsp;&lt;EM&gt;blueprint&lt;/EM&gt;&amp;nbsp;of your number range object.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In your ABAP package, right-click and choose&amp;nbsp;New&amp;nbsp;-&amp;gt;&amp;nbsp;Other ABAP Repository Object.&lt;/LI&gt;&lt;LI&gt;Search for&amp;nbsp;&lt;STRONG&gt;"Number Range Object"&lt;/STRONG&gt;, give it a name and a description.&lt;/LI&gt;&lt;LI&gt;Assign it to a&amp;nbsp;&lt;STRONG&gt;Workbench Transport&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;In the object editor, the most important property is the&amp;nbsp;&lt;STRONG&gt;Number Length Domain&lt;/STRONG&gt;. It’s a best practice to create a custom domain for this to define the length and type. For my&amp;nbsp;ZPO_RUN_ID, I used a domain of type&amp;nbsp;NUMC(10).&lt;/LI&gt;&lt;LI&gt;Save and&amp;nbsp;&lt;STRONG&gt;activate&lt;/STRONG&gt;&amp;nbsp;the object.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_7-1758216453231.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316647iBAD6D68F8E9EC235/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="suzanne_alivand_7-1758216453231.png" alt="suzanne_alivand_7-1758216453231.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The system now knows what a&amp;nbsp;ZPO_RUN_ID&amp;nbsp;is, but it has no actual number intervals defined.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 2: The Customizer's Task - Setting Intervals in Fiori&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This is where we move to the Fiori Launchpad, specifically in the&amp;nbsp;&lt;STRONG&gt;Customizing Client&lt;/STRONG&gt;.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Log in to your Customizing client and open the&amp;nbsp;&lt;STRONG&gt;"Manage Number Range Intervals"&lt;/STRONG&gt;&amp;nbsp;Fiori app.&lt;/LI&gt;&lt;LI&gt;Search for your newly created object,&amp;nbsp;ZPO_RUN_ID.&lt;/LI&gt;&lt;LI&gt;Navigate to the "Number Ranges" tab and click&amp;nbsp;&lt;STRONG&gt;"Create"&lt;/STRONG&gt;. Here you'll define your interval, for example,&amp;nbsp;01&amp;nbsp;with its lower and upper limits.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_8-1758216453232.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316646i0A9308E96CB6625D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="suzanne_alivand_8-1758216453232.png" alt="suzanne_alivand_8-1758216453232.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_13-1758216499507.png" style="width: 663px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316652i70CFA2444947FDD8/image-dimensions/663x226/is-moderation-mode/true?v=v2" width="663" height="226" role="button" title="suzanne_alivand_13-1758216499507.png" alt="suzanne_alivand_13-1758216499507.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 3: The Transport &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The system needs a&amp;nbsp;&lt;STRONG&gt;Customizing Transport&lt;/STRONG&gt;&amp;nbsp;to record this change.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In a new tab, open the&amp;nbsp;&lt;STRONG&gt;"Export Customizing Transports"&lt;/STRONG&gt;&amp;nbsp;Fiori app.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_10-1758216453236.png" style="width: 237px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316649iD7EFC91ECED66A4B/image-dimensions/237x191/is-moderation-mode/true?v=v2" width="237" height="191" role="button" title="suzanne_alivand_10-1758216453236.png" alt="suzanne_alivand_10-1758216453236.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a new&amp;nbsp;&lt;STRONG&gt;"Customizing Request"&lt;/STRONG&gt;&amp;nbsp;and give it a description. It's a good practice to set this as your "Default" request using the "Change Category" button.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_11-1758216453238.png" style="width: 734px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316650i3B8DE8A478A85F6C/image-dimensions/734x90/is-moderation-mode/true?v=v2" width="734" height="90" role="button" title="suzanne_alivand_11-1758216453238.png" alt="suzanne_alivand_11-1758216453238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go back to the Number Range app and save your interval again. This time, it will find your open request and save the change successfully.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_12-1758216453239.png" style="width: 823px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316651i263BA5C692E50873/image-dimensions/823x99/is-moderation-mode/true?v=v2" width="823" height="99" role="button" title="suzanne_alivand_12-1758216453239.png" alt="suzanne_alivand_12-1758216453239.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now you have two transports: the Workbench TR from ADT with the object definition, and the Customizing TR from Fiori with the interval data. The Workbench TR should be a prerequisite for the Customizing TR when you import them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 4: The Payoff - Using the Number Range in RAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With everything configured, it was time to use it in my ABAP RAP application. The correct, released API is the class&amp;nbsp;CL_NUMBERRANGE_RUNTIME.&lt;/P&gt;&lt;P&gt;I had two main options for assigning an ID based on the business requirement:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;An&amp;nbsp;early numbering&amp;nbsp;determination, which runs before the save phase.&lt;/LI&gt;&lt;LI&gt;A&amp;nbsp;determination on save, which runs during the final save transaction.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I initially chose early numbering&amp;nbsp;determination. My&amp;nbsp;earlynumbering_create method was clean and used the correct class.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD earlynumbering_create.

    DATA: latest_num   TYPE cl_numberrange_runtime=&amp;gt;nr_number.

    DATA(All_entities) = entities.
    DELETE All_entities WHERE  RunId IS NOT INITIAL.

    TRY.
        cl_numberrange_runtime=&amp;gt;number_get(
          EXPORTING
            nr_range_nr = '01'
            object      = 'ZPO_RUN_ID'
            quantity = CONV #( lines( all_entities ) )
          IMPORTING
            number      = latest_num
            returncode = DATA(code)
            returned_quantity = DATA(return_qty) ).

      CATCH cx_nr_object_not_found INTO DATA(lx_obj_not_found).
      CATCH cx_number_ranges INTO DATA(lx_ranges_error).

        LOOP AT All_entities INTO DATA(entity_line).

          APPEND VALUE #( %cid = entity_line-%cid
                          %key  = entity_line-%key ) TO failed-run.
          APPEND VALUE #( %cid = entity_line-%cid
                          %key = entity_line-%key
                          %msg = lx_ranges_error ) TO reported-run.
        ENDLOOP.
        EXIT.
    ENDTRY.

    DATA(curr_num) = latest_num - return_qty.

    LOOP AT All_entities INTO entity_line.
      curr_num = curr_num + 1 .
      APPEND VALUE #( %cid = entity_line-%cid
      RunUuid = curr_num ) TO mapped-run.

    ENDLOOP.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;I ran the app, created an entry, clicked "Save," and was met with a short dump:&amp;nbsp;&lt;STRONG&gt;ABAP Runtime error 'BEHAVIOR_ILLEGAL_STATEMENT'&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The "Aha!" Moment: The&amp;nbsp;COMMIT WORK&amp;nbsp;Conflict and the Simple Fix&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;My code was correct. The class was correct. The configuration was correct. So, what was wrong?&lt;/P&gt;&lt;P&gt;The problem was my number range was&amp;nbsp;&lt;STRONG&gt;not buffered&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;After a long debugging session, I discovered that when&amp;nbsp;cl_numberrange_runtime&amp;nbsp;is called for a non-buffered number range, it&amp;nbsp;&lt;STRONG&gt;must&lt;/STRONG&gt;&amp;nbsp;perform an immediate database&amp;nbsp;UPDATE&amp;nbsp;and its own&amp;nbsp;COMMIT WORK&amp;nbsp;to guarantee the number is reserved. The RAP framework, in its strictly controlled Save phase, saw this independent&amp;nbsp;COMMIT&amp;nbsp;as a violation of its own transaction and triggered the dump to prevent data inconsistency.&lt;/P&gt;&lt;P&gt;The solution wasn't in my ABAP code at all. It was in the configuration.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enabling buffering solves this transactional conflict.&lt;/STRONG&gt;&amp;nbsp;Here’s why:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;With buffering, the class gets the next number from the application server's&amp;nbsp;&lt;STRONG&gt;memory&lt;/STRONG&gt;, not directly from the database.&lt;/LI&gt;&lt;LI&gt;Getting a number from memory requires&amp;nbsp;&lt;STRONG&gt;no immediate database update&lt;/STRONG&gt;&amp;nbsp;and, crucially,&amp;nbsp;&lt;STRONG&gt;no conflicting&amp;nbsp;COMMIT WORK&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I edited the&amp;nbsp;&lt;STRONG&gt;Properties&lt;/STRONG&gt;&amp;nbsp;of my&amp;nbsp;ZPO_RUN_ID&amp;nbsp;object and changed the&amp;nbsp;&lt;STRONG&gt;Buffering&lt;/STRONG&gt;&amp;nbsp;type to&amp;nbsp;&lt;STRONG&gt;"Main Memory Buffering"&lt;/STRONG&gt;&amp;nbsp;with a size of 10.&lt;/P&gt;&lt;P&gt;With that one configuration change, everything worked perfectly. My&amp;nbsp;determination on save&amp;nbsp;now executes without any issues.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the ABAP Cloud, writing correct code is only half the battle. We also have to deeply understand and respect the strict transactional model of the RAP framework. A seemingly simple configuration choice, like buffering, can be the key to resolving what looks like a complex runtime error.&lt;/P&gt;&lt;P&gt;If you ever face an unexpected&amp;nbsp;BEHAVIOR_ILLEGAL_STATEMENT&amp;nbsp;dump, consider what your code might be doing that could be trying to interfere with the framework's unit of work.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-cloud-number-ranges-the-abap-rap-commit-work-conflict-and-the-simple/ba-p/14221714"/>
    <published>2025-09-23T12:45:39.845000+02:00</published>
  </entry>
</feed>
