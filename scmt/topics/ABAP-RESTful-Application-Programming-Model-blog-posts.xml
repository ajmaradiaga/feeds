<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-RESTful-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - ABAP RESTful Application Programming Model</title>
  <updated>2025-11-01T21:00:07.306837+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP RESTful Application Programming Model/pd-p/7e44126e-7b27-471d-a379-df205a12b1ff" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP RESTful Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/foreign-entity-in-rap/ba-p/14227441</id>
    <title>Foreign entity in RAP</title>
    <updated>2025-09-29T09:05:47.440000+02:00</updated>
    <author>
      <name>Shyam4U</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1512208</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Description:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;A RAP BO entity which is not part of the BO composition tree for which it is defined. Defining a foreign entity in the behavior definition enables cross-BO message mapping between the two BOs.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Concepts:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;RAP foreign entity is a component of the BC-ESI-RAP RESTful ABAP Programming Model. It is a representation of an external entity, such as a web service, that can be used in an ABAP program. The foreign entity is defined in the ABAP program and can be used to access data from the external source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tips &amp;amp; Tricks:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;When defining a RAP foreign entity, it is important to ensure that all authentication information is correct. This will ensure that requests are sent securely and that responses are received correctly. Additionally, it is important to ensure that the URL of the external source is correct, as this will ensure that requests are sent to the correct location.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;How to use it:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;To use a RAP foreign entity, first define the entity in the ABAP program. This includes specifying the URL of the external source, as well as any authentication information that may be required. Once the entity is defined, it can be used to access data from the external source. This can be done using the RAP API, which provides methods for making requests and receiving responses from the external source.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758779361113.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319667i1BD7D26A3B6E12D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758779361113.png" alt="Shyam4U_0-1758779361113.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Example : &lt;/STRONG&gt;&lt;/FONT&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;"In our system, we have two distinct business entities: &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inventory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Sales Order&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Although they are separate, they are fundamentally linked. We manage this connection by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;product ID&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; as the key identifier. This ensures that every time a sales order is created, the system automatically checks and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;deducts the correct quantity from the available stock&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; in the inventory. This process maintains accurate, real-time stock levels, which is critical for our operations."&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'inverty table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zscn_t_inventory { 

key product_id : abap.char(10) not null; 
stock_level : abap.int4; 
product_name : abap.char(40); 
create_at : timestampl; 
last_chdate : timestampl; 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'INTERFACE VIEW INVERNTORY' 
@Metadata.ignorePropagatedAnnotations: true 
define root view entity ZSCN_i_INVENTORY as select from zscn_t_inventory 
{ 
key product_id as ProductId, 
stock_level as StockLevel, 
product_name as ProductName, 
create_at as CreateAt, 
last_chdate as LastChdate 
} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'INVENTORY CONSUMPATION VIEW' 
@Metadata.ignorePropagatedAnnotations: true 
@VDM.viewType: #TRANSACTIONAL 
define root view entity ZSCN_C_INVENTORY 
provider contract transactional_query 
as projection on ZSCN_i_INVENTORY 
{ 
@UI.facet: [{ type: #IDENTIFICATION_REFERENCE }] 

@UI.lineItem: [{ position: 10 , label: 'Product Id' }] 
@UI.identification:[{ position: 10 , label: 'Product Id' }] 
key ProductId, 
@UI.lineItem: [{ position: 20 , label: 'Stock Level' }] 
@UI.identification:[{ position: 20 , label: 'Stock Level' }] 
StockLevel, 
@UI.lineItem: [{ position: 30 , label: 'Product Name' }] 
@UI.identification:[{ position: 30 , label: 'Product Name' }] 
ProductName, 
@Semantics.systemDateTime.createdAt: true 
CreateAt, 
@Semantics.systemDateTime.lastChangedAt: true 
LastChdate 
} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_scn_i_inventory unique; 
strict ( 2 ); 
with draft; 

define behavior for ZSCN_i_INVENTORY //alias &amp;lt;alias_name&amp;gt; 
persistent table zscn_t_inventory 
lock master 
total etag LastChdate 
draft table zscn_t_invent_d 
authorization master ( instance ) 
late numbering 
//etag master &amp;lt;field_name&amp;gt; 
{ 
create ( authorization : global ); 
update; 
delete; 
field ( readonly ) ProductId; 

validation vali_Stock on save { create; update; } 

draft action Activate optimized ; 
draft action Discard ; 
draft action Edit ; 
draft action Resume ; 
draft determine action Prepare ; 

mapping for zscn_t_inventory { 
CreateAt = create_at ; 
LastChdate = last_chdate ; 
ProductId = product_id ; 
ProductName = product_name ; 
StockLevel = stock_level; 
} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758779760747.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319670i23615557B62C460B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758779760747.png" alt="Shyam4U_1-1758779760747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In our system, a key validation for inventory is to prevent the stock level from ever going into a negative value.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758780972739.png" style="width: 655px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319675i7F29A75ECBAD4A91/image-dimensions/655x264?v=v2" width="655" height="264" role="button" title="Shyam4U_0-1758780972739.png" alt="Shyam4U_0-1758780972739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD vali_Stock.
    
LOOP AT keys INTO DATA(lv_key).

      READ ENTITY IN LOCAL MODE ZSCN_i_INVENTORY
       ALL FIELDS WITH VALUE #( (  %key = lv_key-%key ) )
      RESULT DATA(lt_result).

      CHECK lt_result IS NOT INITIAL.

      LOOP AT lt_result INTO DATA(lv_result).
        IF lv_result-StockLevel &amp;lt; 0 .
          APPEND VALUE #(  %tky = lv_result-%tky  ) TO failed-zscn_i_inventory.

          APPEND VALUE #(  %tky = lv_result-%tky
                 %msg = new_message_with_text( severity =
                 if_abap_behv_message=&amp;gt;severity-error
                 text = 'Stock value should not be negative value ' &amp;amp;&amp;amp; ' ' &amp;amp;&amp;amp; lv_result-StockLevel )
                 %element-stocklevel = if_abap_behv=&amp;gt;mk-on  ) TO reported-zscn_i_inventory .

        ENDIF.
      ENDLOOP.
    ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758781361679.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319683i21B33569A1767987/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_2-1758781361679.png" alt="Shyam4U_2-1758781361679.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;Sales order Entity&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="arial black,avant garde"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'SALES ORDER' 
@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #ALLOWED 
define table zscn_dt_salesord { 

key sales_order_id : abap.numc(10) not null; 
product_id : abap.char(10) not null; 
quantity : abap.numc(5); 
customer_id : abap.char(10); 
order_date : abap.dats; 
@Semantics.amount.currencyCode : 'zscn_dt_salesord.currency' 
total_amount : abap.curr(13,2); 
currency : abap.cuky; 
create_at : timestamp; 
last_changed : timestamp; 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'SALESORD CONSUMPATION VIEW' 
@Metadata.ignorePropagatedAnnotations: false 
define root view entity ZSCN_C_SALESORD 
provider contract transactional_query 
as projection on ZSCN_I_SALESORD 
{ 
@UI.facet: [{ type: #IDENTIFICATION_REFERENCE }] 

@UI.lineItem: [{ position: 10 , label: 'Sales Order Id' }] 
@UI.identification:[{ position: 10 , label: 'Sales Order Id' }] 
key SalesOrderId, 
@UI.lineItem: [{ position: 20 , label: 'Product Id' }] 
@UI.identification:[{ position: 20 , label: 'Product Id' }] 
@Consumption.valueHelpDefinition: [{ 
entity: { name: 'ZSCN_C_INVENTORY', element: 'ProductId' } }] 
ProductId, 
@UI.lineItem: [{ position: 30 , label: 'Quantity' }] 
@UI.identification:[{ position: 30 , label: 'Quantity' }] 
Quantity, 
@UI.lineItem: [{ position: 40 , label: 'Customer Id' }] 
@UI.identification:[{ position: 40 , label: 'Customer Id' }] 
CustomerId, 
@UI.lineItem: [{ position: 50 , label: 'Order Date' }] 
@UI.identification:[{ position: 50 , label: 'Order Date' }] 
OrderDate, 
@UI.lineItem: [{ position: 60 , label: 'Total Amount' }] 
@UI.identification:[{ position: 60 , label: 'Total Amount' }] 
TotalAmount, 
Currency, 
@Semantics.systemDateTime.createdAt: true 
CreateAt, 
@Semantics.systemDateTime.lastChangedAt: true 
LastChanged 

} &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_scn_i_salesord unique; 
strict ( 2 ); 
with draft; 

//foreign entity Zscn_i_inventory alias _inventory ; 
define behavior for ZSCN_I_SALESORD //alias &amp;lt;alias_name&amp;gt; 
persistent table zscn_dt_salesord 
lock master 
total etag LastChanged 
draft table zscn_dt_salord_d 
authorization master ( instance ) 
early numbering 
//etag master &amp;lt;field_name&amp;gt; 
{ 

create ( authorization : global ); 
update; 
delete; 
field ( readonly ) SalesOrderId; 

validation valid_ProductId on save { create; update; } 
determination stock_upadte on save { field Quantity; } 
 
draft action Activate optimized ; 
draft action Discard ; 
draft action Edit ; 
draft action Resume ; 
draft determine action Prepare ; 

mapping for zscn_dt_salesord 
{ 
CreateAt = create_at; 
Currency = currency; 
CustomerId = customer_id; 
LastChanged = last_changed; 
OrderDate = order_date;
ProductId = product_id; 
SalesOrderId = sales_order_id; 
Quantity = quantity; 
TotalAmount = total_amount; 

} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without the foreign entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;Zscn_i_inventory&lt;/SPAN&gt; &lt;SPAN class=""&gt;syntax ,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp; behavior definition of the ZSCN_I_SALESORD it only holding the structure of ZSCN_I_SALESORD it &lt;/SPAN&gt;&lt;SPAN class=""&gt;doesn't&lt;/SPAN&gt;&lt;SPAN class=""&gt; hold the structure &lt;/SPAN&gt;&lt;SPAN class=""&gt;Zscn_i_inventory&lt;/SPAN&gt;&lt;SPAN class=""&gt; .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_3-1758782312689.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319693i04E76CF2ACE2702F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_3-1758782312689.png" alt="Shyam4U_3-1758782312689.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_4-1758782320070.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319694iBE9FAD22C19ED3EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_4-1758782320070.png" alt="Shyam4U_4-1758782320070.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Due to the separate entity definitions, errors from an inventory stock update cannot be directly propagated to the sales order user interface. In Failed and &lt;/SPAN&gt;&lt;SPAN class=""&gt;Reported structure will be miss &lt;/SPAN&gt;&lt;SPAN class=""&gt;match. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o propagate &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt; we use of foreign entity syntax&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;uncomment the&amp;nbsp;//foreign entity Zscn_i_inventory alias _inventory ;&amp;nbsp; in Behavior definition of&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Zscn_i_salesord .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758782990181.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319700i976D6F6DBC5BC8E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758782990181.png" alt="Shyam4U_0-1758782990181.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After adding the Foreign entity Zscn_i_inventory &amp;nbsp;alies _inventory ; &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can see the change in the entity Zscn_i_salesord structure .&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758783042974.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319701i23555758241BE272/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758783042974.png" alt="Shyam4U_1-1758783042974.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758783077463.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319702i7ED69A661F19E1EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_2-1758783077463.png" alt="Shyam4U_2-1758783077463.png" /&gt;&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_3-1758783109372.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319703iBBF8EBD3793DA2F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_3-1758783109372.png" alt="Shyam4U_3-1758783109372.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_4-1758783178499.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319704iD42E5E0BC1A228ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_4-1758783178499.png" alt="Shyam4U_4-1758783178499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using the Determination we are update the stock of&amp;nbsp;the inventory table based on the Product id in Behavior definition implementation class .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A critical validation has been implemented: when a sales order is created, if the requested quantity is greater than the available stock level, an error is raised in the inventory business logic. This error is then propagated to the sales order entity, making it visible on the sales order screen.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD stock_upadte. 

LOOP AT keys INTO DATA(lv_key). 

READ ENTITY IN LOCAL MODE zscn_i_salesord ALL FIELDS WITH 
VALUE #( ( %key = lv_key-%key ) ) 
RESULT DATA(lt_result). 

CHECK lt_result IS NOT INITIAL. 

LOOP AT lt_result INTO DATA(lv_result). 
 
READ ENTITY ZSCN_i_INVENTORY 
ALL FIELDS WITH VALUE #( ( ProductId = lv_result-ProductId ) ) 
RESULT DATA(lt_result_inventory). 

LOOP AT lt_result_inventory INTO DATA(lv_inventory). 

 DATA(lv_stock) = CONV i( lv_inventory-StockLevel - lv_result-Quantity ). 

MODIFY ENTITY ZSCN_i_INVENTORY UPDATE FIELDS ( StockLevel ) 
WITH VALUE #( ( %key-ProductId = lv_inventory-%key-ProductId 
StockLevel = lv_stock ) ) REPORTED DATA(ltreported). 

if ltreported is not INITIAL. 
 
DATA: lt_dummy LIKE reported-_inventory. 
lt_dummy = CORRESPONDING #( ltreported-zscn_i_inventory ). 

APPEND LINES OF lt_dummy TO reported-_inventory.  

endif. 
      ENDLOOP. 
   ENDLOOP. 
ENDLOOP. 

ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In &lt;/SPAN&gt;&lt;SPAN class=""&gt;above&lt;/SPAN&gt;&lt;SPAN class=""&gt; code &lt;/SPAN&gt;&lt;SPAN class=""&gt;I&lt;/SPAN&gt;&lt;SPAN class=""&gt; am using &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;CORRESPONDING #( &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ltreported&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;zscn_i_inventory&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;because &lt;/SPAN&gt;&lt;SPAN class=""&gt;of while&lt;/SPAN&gt; &lt;SPAN class=""&gt;using&lt;/SPAN&gt;&lt;SPAN class=""&gt; the EML syntax the report will be early but inside the Behavior &lt;/SPAN&gt;&lt;SPAN class=""&gt;definition it&lt;/SPAN&gt;&lt;SPAN class=""&gt; will be late &lt;/SPAN&gt;&lt;SPAN class=""&gt;structure.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_5-1758783700742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319709i8DE267E217225D43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_5-1758783700742.png" alt="Shyam4U_5-1758783700742.png" /&gt;&lt;/span&gt;&amp;nbsp; &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_6-1758783731326.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319710i291685CEEACF10B0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shyam4U_6-1758783731326.png" alt="Shyam4U_6-1758783731326.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In inventory entity this are the possible product we have in that &lt;/SPAN&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;SPAN class=""&gt; will &lt;/SPAN&gt;&lt;SPAN class=""&gt;chose&lt;/SPAN&gt;&lt;SPAN class=""&gt; Titan watch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_0-1758784285024.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319716i82C35938198C8543/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_0-1758784285024.png" alt="Shyam4U_0-1758784285024.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When creating a sales order for a Titan watch, if the requested quantity of 50 exceeds the available stock of 40, the system will prevent the transaction and display an error.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_1-1758784335793.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319717i0D9C69770EC165AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_1-1758784335793.png" alt="Shyam4U_1-1758784335793.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The error which is from the inventory entity by using the foreign entity concept we are propagating the error message of &lt;/SPAN&gt;&lt;SPAN class=""&gt;inventory in&lt;/SPAN&gt;&lt;SPAN class=""&gt; sales order entity.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shyam4U_2-1758784368449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319718i9251943C19615F88/image-size/large?v=v2&amp;amp;px=999" role="button" title="Shyam4U_2-1758784368449.png" alt="Shyam4U_2-1758784368449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Related Information:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;For more information on using RAP foreign entities, please refer to the SAP Help documentation on BC-ESI-RAP RESTful ABAP Programming Model. Additionally, there are many tutorials available online which provide step-by-step instructions on how to use RAP foreign entities in an ABAP program.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks for &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.erplingo.com/sap-glossary/en/bc-esi-rap/rap-foreign-entity" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;What is RAP foreign entity in SAP BC-ESI-RAP? Definition &amp;amp; Tips&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abenbdl_foreign.htm" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abenbdl_foreign.htm&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/foreign-entity-in-rap/ba-p/14227441"/>
    <published>2025-09-29T09:05:47.440000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/building-saas-products-on-sap-btp/ba-p/14231929</id>
    <title>Building SaaS Products on SAP BTP</title>
    <updated>2025-09-30T17:53:09.293000+02:00</updated>
    <author>
      <name>michal_majer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/160961</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Part 2&lt;/STRONG&gt;:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/part-2-architecting-saas-resilience-against-s-4hana-variance/ba-p/14248778#M176027" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/part-2-architecting-saas-resilience-against-s-4hana-variance/ba-p/14248778#M176027&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1632710804"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1436197299"&gt;Building SaaS Products on SAP BTP&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt; This article was inspired by SAP's work on modern cloud development, particularly the blog "&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-sap-s-abap-cloud-partner-reference-app-simplifies-multi-tenant-side-by/ba-p/14223705" target="_blank"&gt;How SAP's ABAP Cloud Partner Reference App simplifies multi-tenant side-by-side extensions&lt;/A&gt;," and is intended to explore these critical architectural topics further.&lt;/P&gt;&lt;P&gt;SAP is undergoing its largest transformation in decades—moving from &lt;STRONG&gt;on-premise monoliths to cloud-native architecture&lt;/STRONG&gt;. Products like Datasphere, Analytics Cloud, and Business Data Cloud exist only in the cloud. Yet despite this fundamental shift, most software vendors still treat SAP like it’s 2010.&lt;/P&gt;&lt;P&gt;Let me explain why this gap is a massive &lt;STRONG&gt;opportunity for disruption&lt;/STRONG&gt;—and why mastering the &lt;STRONG&gt;SAP Business Technology Platform (BTP)&lt;/STRONG&gt; is much harder than the marketing suggests.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1368766513"&gt;The Architectural Divide: From Monolith to Node&lt;/H2&gt;&lt;P&gt;To understand the &lt;STRONG&gt;BTP challenge&lt;/STRONG&gt;, we must first recognize the dramatic shift in enterprise architecture.&lt;/P&gt;&lt;H3 id="toc-hId-1301335727"&gt;The Old World: SAP as the Center of Gravity&lt;/H3&gt;&lt;P&gt;For decades, &lt;STRONG&gt;SAP ECC&lt;/STRONG&gt; was the undisputed heart of enterprise data. Every system pointed inward. CRM, warehouse management, custom applications—everything fed data into one central, tightly coupled system.&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;External&amp;nbsp;Systems&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;⟶&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;ECC&amp;nbsp;Monolith&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;⟶&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Single&amp;nbsp;Source&amp;nbsp;of&amp;nbsp;Truth&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;This architecture made building SAP-integrated products deceptively straightforward:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Write &lt;STRONG&gt;ABAP code&lt;/STRONG&gt; directly inside the SAP system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Deploy via Transport Requests.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Access everything natively (tables, function modules, full transaction control).&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I've seen incredibly sophisticated, high-performance solutions built entirely in ABAP. But notice this: many of these established ABAP vendors are slow to build cloud-native versions on BTP. This hesitation tells you something profound about the real challenges involved.&lt;/P&gt;&lt;H3 id="toc-hId-1104822222"&gt;The New Reality: S/4HANA as Just Another Node&lt;/H3&gt;&lt;P&gt;In today's distributed architecture, &lt;STRONG&gt;S/4HANA is simply one system among many&lt;/STRONG&gt;. It sits alongside Salesforce, Workday, custom applications, and SAP’s own cloud products—all communicating through &lt;STRONG&gt;SAP BTP as the critical integration, extension, and application layer&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This fundamental change means you can no longer rely on deep, internal access to the core. It forces a complete overhaul of how you design and build &lt;STRONG&gt;SaaS products&lt;/STRONG&gt; for the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-779225998"&gt;The BTP Reality: Why It's Harder Than It Looks&lt;/H2&gt;&lt;P&gt;The core challenge lies in bridging the gap between the &lt;STRONG&gt;ABAP world's capabilities&lt;/STRONG&gt; and the &lt;STRONG&gt;modern cloud platform’s constraints&lt;/STRONG&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-711795212"&gt;The ABAP Advantage (What You Lose)&lt;/H3&gt;&lt;P&gt;When you build directly in ABAP (on-premise), you gain:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Direct access&lt;/STRONG&gt; to all SAP objects and processes.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Standardized integration patterns (BAPIs, Function Modules).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Full &lt;STRONG&gt;transactional control&lt;/STRONG&gt; and deep customization hooks.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;30+ years of accumulated frameworks and access methods.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-515281707"&gt;The BTP Reality (What You Are Limited To)&lt;/H3&gt;&lt;P&gt;On BTP, you are limited to officially sanctioned external access methods:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;APIs (REST, OData)&lt;/STRONG&gt; – when they exist and are complete.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;RFC Calls/Web Services&lt;/STRONG&gt; – (The "legacy" or "sidecar" approach).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom ABAP Extensions&lt;/STRONG&gt; – (The fallback when APIs fail).&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The Technical Truth: Many older, niche, or newly migrated SAP modules do not have complete &lt;STRONG&gt;API coverage&lt;/STRONG&gt; for every critical workflow step. This is not a criticism of SAP; it's the reality of a massive platform in transition. Building true SaaS products on BTP requires mapping your entire solution against the &lt;STRONG&gt;SAP API Business Hub&lt;/STRONG&gt; before writing any code.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-189685483"&gt;The Compelling Reason to Build SaaS on BTP&lt;/H2&gt;&lt;P&gt;Despite the integration complexity, the strategic advantages of BTP are too significant for modern vendors to ignore. &lt;STRONG&gt;BTP is the enforcement mechanism for SAP's Clean Core strategy.&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;Strategic Advantage&lt;/TD&gt;&lt;TD&gt;Why it Matters&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;1. Leverage SAP Objects Without Core Modification&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Use SAP &lt;STRONG&gt;CAP&lt;/STRONG&gt; (Cloud Application Programming Model) or &lt;STRONG&gt;RAP&lt;/STRONG&gt; (ABAP RESTful Application Programming Model) to extend key SAP objects (Business Partners, Sales Orders, Materials) with custom fields and logic. This ensures your solution aligns with the &lt;STRONG&gt;Clean Core&lt;/STRONG&gt; approach.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;2. Instant User Management and Security&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Integrate with BTP's &lt;STRONG&gt;XSUAA service&lt;/STRONG&gt;. You instantly inherit customer's users, &lt;STRONG&gt;SSO integration&lt;/STRONG&gt;, saving months of development and operational overhead on identity management.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;3. Customer-Specific Extensions via Multitenancy&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Ship one product while allowing customer-specific configurations and extensions. BTP's native &lt;STRONG&gt;multitenancy&lt;/STRONG&gt; handles the data and configuration isolation, dramatically lowering codebase maintenance costs compared to the old world of branched ABAP code.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;4. Modern Deployment and Operations&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Deploy globally without hardware investment. Scale automatically based on demand. Use modern &lt;STRONG&gt;DevOps&lt;/STRONG&gt; practices and CI/CD pipelines to update all customers simultaneously—a logistical nightmare with on-premise solutions.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--6828022"&gt;Two Strategic Approaches to BTP SaaS&lt;/H2&gt;&lt;P&gt;Your product's architecture should align with its core purpose:&lt;/P&gt;&lt;H3 id="toc-hId--149490177"&gt;Approach 1: Extend SAP Objects&lt;/H3&gt;&lt;P&gt;Your product becomes a natural, value-add extension of core SAP functionality, leveraging the data models customers already use and understand.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Best for:&lt;/STRONG&gt; Solutions that enhance existing SAP processes (advanced analytics, specialized compliance requirements, industry-specific workflows).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Technical Focus:&lt;/STRONG&gt; Heavy reliance on &lt;STRONG&gt;CAP/RAP&lt;/STRONG&gt; to extend standard entities and leverage the existing SAP transactional context.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--346003682"&gt;Approach 2: Build Independent with SAP Integration (Loosely Coupled)&lt;/H3&gt;&lt;P&gt;Create your own data model using modern frameworks (CAP/Node.js, Java) and integrate with SAP only as needed for master data and transactional exchange.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Best for:&lt;/STRONG&gt; Products that could exist standalone but gain significant value from SAP integration (planning tools, specialized industry solutions, asset management).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Technical Focus:&lt;/STRONG&gt; Strong emphasis on the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; and &lt;STRONG&gt;Event Mesh&lt;/STRONG&gt; for asynchronous, reliable communication.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--249114180"&gt;The Common Pitfalls I've Observed&lt;/H2&gt;&lt;P&gt;Architectural success on BTP is often defined by avoiding these common traps:&lt;/P&gt;&lt;H3 id="toc-hId--739030692"&gt;1. The API Gap Surprise&lt;/H3&gt;&lt;P&gt;Teams design beautiful cloud-native architecture assuming APIs exist for everything. When they discover a critical workflow is missing an API, they are forced to write custom ABAP in the S/4HANA core to create a needed OData service.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; This creates a &lt;STRONG&gt;Custom ABAP Sidecar&lt;/STRONG&gt;—it defeats the purpose of the BTP-native, Clean Core approach for that use case, complicating deployment and creating system-specific dependencies. &lt;STRONG&gt;Map your integration requirements against actual API availability before committing to architecture.&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--935544197"&gt;2. The Custom Integration Trap&lt;/H3&gt;&lt;P&gt;A company builds its first SAP integration for Customer A, which takes six months. Customer B has different middleware, a different S/4HANA version, and unique customizations. Three years later, the company has five customers but five completely different integrations with no reusable product.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; Design for product &lt;STRONG&gt;reusability&lt;/STRONG&gt; from day one. Use &lt;STRONG&gt;BTP as the standard integration hub&lt;/STRONG&gt; for all customers. Your product should treat the S/4HANA backend as an interchangeable service, not a monolithic dependency.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1132057702"&gt;3. The Deployment Complexity&lt;/H3&gt;&lt;P&gt;The product itself might be excellent, but if every customer implementation requires weeks of external SAP consulting to set up roles, connect services, and configure the integration, the deployment model doesn't scale economically.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;The Lesson:&lt;/STRONG&gt; Design your solution to be simple. Aim for a solution that can be deployed and configured by the customer’s existing SAP team in days, not months, using automated scripts and minimal manual steps.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--1035168200"&gt;My Strategic Focus&lt;/H2&gt;&lt;P&gt;My focus is clear: to master the architecture required to build and commercialize a &lt;STRONG&gt;CAP template SaaS solution&lt;/STRONG&gt;. By leveraging the best practices of the &lt;STRONG&gt;Cloud Application Programming Model (CAP)&lt;/STRONG&gt; and designing for &lt;STRONG&gt;native multitenancy&lt;/STRONG&gt;, I aim to provide a production-ready, clean-core blueprint that accelerates the time-to-market for modern SAP solutions. This is the strategic direction for dominating the next era of the SAP ecosystem.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/building-saas-products-on-sap-btp/ba-p/14231929"/>
    <published>2025-09-30T17:53:09.293000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901</id>
    <title>RAP Using Custom Entity with load multiple data using Pagination and Preview using UI annotations</title>
    <updated>2025-10-03T06:01:53.175000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This blog covers RAP development using a custom entity, showcasing data with UI annotations, and surpassing the standard SAP data preview limit through the use of pagination.&lt;/P&gt;&lt;P&gt;Lets Start....&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create a custom entity with the fields that need to be displayed or sent to the frontend.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom entity for fetching data'
@ObjectModel.query.implementedBy: 'ABAP:ZCL_IMPLEMENT_EXT' //This is the class where the data is handle and processed
@UI:{ headerInfo:{  typeName: 'RAP Learn',
                             typeNamePlural: 'RAP Learn',
                             title: { label: 'RAP Learn',
                                       type: #STANDARD,
                                       value: 'component'
                                     },
                             description: { value: 'obj_desc' },
                                     typeImageUrl: 'sap-icon://activity-items' //Show Icon image on header of object layout
                           }
               }
@Search.searchable: true //for Searching the data from the output which is also need to implement in the implemented class above 
define root custom entity ZCE_MAIN
{
      .facet   : [{
                      id: 'ID1',
                      purpose: #STANDARD,
                      type: #IDENTIFICATION_REFERENCE,
                      label : 'Component detail',
                      position: 10
                    },
                    {
                id: 'FG1',
                purpose: #STANDARD,
                type: #FIELDGROUP_REFERENCE,
                label : 'Validity Date',
                targetQualifier: 'FG1',
                position: 10
              }]
               : {  selectionField: [{ position: 10 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                            entity : { name: 'ZIV_F4MATNR' , element: 'matnr'   } ,
                            additionalBinding: [{ localElement: 'werks', element: 'werks' },
                                                         {  localElement: 'stlan' , element: 'stlan' },
                                                         {  localElement: 'stlal' , element: 'stlal' }]}]
      @Consumption.filter.selectionType: #SINGLE
  key matnr       : matnr;
               : {  selectionField: [{ position: 20 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                      entity : { name: 'ZIV_F4WERKS', element: 'werks' }
                                                         }]
      @Consumption.filter.selectionType: #SINGLE
  key werks       : werks_d;
               : {  selectionField: [{ position: 30 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                entity : { name: 'ZIV_F4STLAN' , element: 'stlan' }
                                                   }]
      @Consumption.filter.selectionType: #SINGLE
  key stlan       : stlan;
               : {  selectionField: [{ position: 40 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
  key stlal       : stlal;
               : { lineItem: [{ position: 10 }], identification: [{ position: 10 }]}
      @EndUserText.label: 'Level'
  key bom_level   : abap.dec( 2, 0 );
               : { lineItem: [{ position: 20 }], identification: [{ position: 20 }]}
      @EndUserText.label: 'Component'
      .defaultSearchElement: true
  key component   : idnrk;
               : {  selectionField: [{ position: 50 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
      @EndUserText.label: 'Date'
      zdate       : abap.dats;
               : { lineItem: [{ position: 30, cssDefault: { width: '13rem' }  }], identification: [{ position: 30 }]}
      @EndUserText.label: 'Object Description'
      .defaultSearchElement: true
      obj_desc    : maktx;
               : { lineItem: [{ position: 35, cssDefault: { width: '8rem' } }], identification: [{ position: 35 }]}
      @EndUserText.label: 'Quantity'
      comp_qty    : kmpmg_bi;
               : { lineItem: [{ position: 45 }], identification: [{ position: 45 }]}
      @EndUserText.label: 'Unit'
      comp_unit   : kmpme;
               : { lineItem: [{ position: 55 }], fieldGroup: [{ position: 10 , qualifier: 'FG1', label: 'Valid From' }]}
      @EndUserText.label: 'Valid from'
      valid_from  : datuv_bi;
               : { lineItem: [{ position: 65 }], fieldGroup: [{ position: 11 , qualifier: 'FG1', label: 'Valid To' }]}
      @EndUserText.label: 'Valid to'
      valid_to    : datub_bi;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;While using the RAP framework, metadata extensions cannot be created for custom entities. Therefore, annotations must be directly included in the custom entity code itself for UI purposes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 : Create an implementation class for the custom entity mentioned above and name it&amp;nbsp;ZCL_IMPLEMENT_EXT&amp;nbsp;or use the custom name specified in the second line of the code.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_implement_ext DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  SHARED MEMORY ENABLED .

  PUBLIC SECTION.
    DATA : et_final TYPE TABLE OF zce_main.
    INTERFACES if_rap_query_provider .

  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.



CLASS ZCL_IMPLEMENT_EXT IMPLEMENTATION.

  METHOD if_rap_query_provider~select.
    CASE io_request-&amp;gt;get_entity_id( ).
      WHEN 'ZCE_MAIN'.
        TRY.
            DATA(lv_skip) = io_request-&amp;gt;get_paging( )-&amp;gt;get_offset( ). "gets the skip part from URL which means number of data to be skipped and default is 0 but later on it gets add by 20... till last data not get fetched
            DATA(lv_top) = io_request-&amp;gt;get_paging( )-&amp;gt;get_page_size( ). "gets the top part from URL which means number of data required and default is 20
            DATA(lt_filter) = io_request-&amp;gt;get_filter( )-&amp;gt;get_as_ranges( ). "gets the input value which is either pass in our filters or when click on single data line item
           
          CATCH cx_rap_query_filter_no_range.
            "handle exception
        ENDTRY.

        IF lv_top &amp;lt; 0.
*********** Start Logic
"Put logic for single data fetch in which it will trigger when you are going for object page while clicking on single item from display table
"Take inputs from LT_filter table for sending that particular data click 
*********** End Logic
            IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
              io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ).
            ENDIF.
            IF io_request-&amp;gt;is_data_requested(  ).
              io_response-&amp;gt;set_data( et_final ).
            ENDIF.
        ELSE.
*********** Start Logic
"Put logic for actual multiple data fetch in which it will trigger when you click go button or any sort of actions like search, sort, excel download....
"Take inputs from LT_filter table for required data fetch 
*********** End Logic
          ENDIF.
********** Searching Logic
        DATA(lv_search) = io_request-&amp;gt;get_search_expression( ). "gets the value from Search field in the UI
          IF lv_search IS NOT INITIAL.
            DATA lt_search LIKE et_final.

            lv_search = |*{ lv_search }*|.
            lt_search = VALUE #( BASE lt_search
                          FOR ls_f IN et_final
                          WHERE ( field1 CP lv_search OR  "Put required field to be search instead of field1,field2.....
                                  field2 CP lv_search  OR
                                  field3 cp lv_search OR
                                  field4 cp lv_search OR                                                                
                                                       ( ls_f ) ).
            et_final = lt_search.
          ENDIF.
***********End of Searching logic
***********Sorting logic
        DATA(lt_sort_elements) = io_request-&amp;gt;get_sort_elements( ). "gets the detail table of ascending and descending of field we wants to be sorted from UI
          IF lt_sort_elements IS NOT INITIAL.
            LOOP AT lt_sort_elements INTO DATA(ls_sort).
              IF ls_sort-descending &amp;lt;&amp;gt; 'X'.
                SORT et_final BY (ls_sort-element_name) ASCENDING.
              ELSE.
                SORT et_final BY (ls_sort-element_name) DESCENDING.
              ENDIF.
            ENDLOOP.
          ENDIF.
**********End of sorting logic
**********Paging- logic for loading more data wrt Standard set amount of data
          IF lv_top IS NOT INITIAL OR lv_skip IS NOT INITIAL.
            /iwbep/cl_mgw_data_util=&amp;gt;paging( EXPORTING is_paging = VALUE #( top  = lv_top
                                                                            skip = lv_skip )
                                             CHANGING  ct_data   = et_final ).
          ENDIF.
*********End of Pagination

          IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
            io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ). "set number of initial data to display overall
          ENDIF.

          IF io_request-&amp;gt;is_data_requested(  ).
            io_response-&amp;gt;set_data( et_final ). "Set data into the entity
          ENDIF.

        ENDIF.
    ENDCASE.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;The aforementioned class plays a crucial role as it encapsulates the entire logic for data processing, including searching, sorting, and most importantly, setting data for our custom entity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Create Service Definition of the Custom entity&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service definition, simply right-click the custom entity in the Project Explorer, click 'New Service Definition', fill in the required inputs, and your service definition will be created.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition'
define service ZSD_MAIN {
  expose ZCE_MAIN;
  expose ZIV_F4MATNR; "This is for ValueHelp Definition, and it's okay not to expose it.
  expose ZIV_F4WERKS;
  expose ZIV_F4STLAN;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Let's take a look at one of the interface views of the ValueHelpDefinition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for ValueHelpDefinition - MATNR'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZIV_F4MATNR
  as select distinct from mast
    left outer join       makt on makt.matnr = mast.matnr
{
         : {  selectionField: [{ position: 10 }] , lineItem: [{ position: 10 }]}
      @EndUserText.label: 'Material No'
  key mast.matnr,
      @Consumption.filter.hidden: true
  key mast.werks,
      @Consumption.filter.hidden: true
  key mast.stlan,
      @Consumption.filter.hidden: true
  key mast.stlal,
      @Consumption.filter.hidden: true
         : {   lineItem: [{ position: 20 }]}
      @EndUserText.label: 'Material Desc'
      makt.maktx
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4 : Create a Service Binding for the aforementioned service definition.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service binding, simply right-click the created service definition in the Project Explorer, click 'New Service Binding', fill in the required inputs, and your service binding will be created. While creating the Service Binding, I selected OData V2 - UI. Then, activate and publish the service. To view the UI output, you can use the Preview option in Eclipse to see the output as shown in the image below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-02 211818.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322447iD800178661F5E9F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-02 211818.png" alt="Screenshot 2025-10-02 211818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In conclusion, using RAP with custom entities and pagination facilitates efficient data handling. With UI annotations, you can easily preview and refine the user interface. We hope this guide has been helpful. Stay tuned for more tips!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note: This program is created for a remote system. For cloud environments, you can use a service consumption model or access data through a remote system API in the implementation class.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901"/>
    <published>2025-10-03T06:01:53.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696</id>
    <title>Collective Search Help Using Abstract Entity in RAP</title>
    <updated>2025-10-03T11:51:37.840000+02:00</updated>
    <author>
      <name>sanjay22</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1535416</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Collective Value Help with Abstract Entity in SAP RAP&lt;/SPAN&gt;&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can define a Collective Search Help&amp;nbsp;that combines multiple elementary &lt;/SPAN&gt;&lt;SPAN class=""&gt;search&lt;/SPAN&gt;&lt;SPAN class=""&gt; helps. This allows users to choose between different search paths and fetch values from various sources in a single dialog. The same concept is available in SAP Fiori through a Collective Value Help&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;It is implemented using an Abstract &lt;/SPAN&gt;&lt;SPAN class=""&gt;Entity that&lt;/SPAN&gt;&lt;SPAN class=""&gt; aggregates multiple elementary value helps and defines potential field mappings&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An Abstract Entity does not hold data. Instead, it acts as a container for the Collective Search Help. This means it only groups together multiple elementary value helps and defines how they are mapped, without storing any business data itself.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The Collective Value Help shall be annotated with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.collectiveValueHelp.for.element&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; pointing to the field for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The referenced field must be assigned at least one elementary value help using the annotation &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;This setup ensures that your Collective Value Help aggregates multiple search options seamlessly for end-users.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Only specific keywords are allowed in a collective value help:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity.name&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity. Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding local Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding. Element qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create a&amp;nbsp;Abstract Entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abstract entity'
@ObjectModel.supportedCapabilities: [ #COLLECTIVE_VALUE_HELP ]
@ObjectModel.collectiveValueHelp.for.element: 'Country'
define abstract entity ZSM_ABSTRACT_CDS_ENTITY

{
  @Consumption.valueHelpDefinition: [
  {
       entity: { name: 'I_Country' },
       label: 'Search by Country'
  },
   {
      entity: {
      name: 'I_RegionVH',
      element: 'Country'
  },
  additionalBinding: [{ localElement: 'Region', element: 'Region' }],
  label   : 'Search by Region',
  qualifier: 'Regionsearch'
   }
   ]
  Country : land1;
  Region  : regio;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758879930864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320249i89C882018112B8B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758879930864.png" alt="sanjay22_0-1758879930864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.CollectiveValueHelp.for.element &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;→&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Specifies the field (Country) for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;The Abstract Entity (&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;zsm_abstract_cds_entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;) &amp;nbsp;acts as a container, not holding data itself. acts as a Consumption value Help Definition search paths Defines multiple Search by Country (default value help) (alternative path with additional Search by Region binding to Region.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;@&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Consumption.valueHelpDefintion &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;→ Defines multiple search paths :&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Country( default Value Help )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Region( Alternate path with additional binding to Region )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create an Interface View&lt;/SPAN&gt;&lt;SPAN class=""&gt; on Database Table&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880109210.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320250i35C6CA50B680760A/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880109210.png" alt="sanjay22_0-1758880109210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Assign a Value Help for the Country field inside a &lt;/SPAN&gt;&lt;SPAN class=""&gt;Metadata Extension&lt;/SPAN&gt;&lt;SPAN class=""&gt; CDS.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880183958.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320251iCD87357B0371C953/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880183958.png" alt="sanjay22_1-1758880183958.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Here Country field uses Collective search &lt;/SPAN&gt;&lt;SPAN class=""&gt;help( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_I_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL) &lt;/SPAN&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;SPAN class=""&gt; binding to &lt;/SPAN&gt;&lt;SPAN class=""&gt;Region&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the above Interface View.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880250069.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320252i495BFA8BE3403846/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880250069.png" alt="sanjay22_2-1758880250069.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Projection View for the Above Interface view&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880409200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320255iBBBDF9FB40C44CFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880409200.png" alt="sanjay22_0-1758880409200.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the Interface View&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880499246.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320256i0DAD0BA5C278B5F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880499246.png" alt="sanjay22_1-1758880499246.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Service Binding &lt;/SPAN&gt;&lt;SPAN class=""&gt;( OData&lt;/SPAN&gt;&lt;SPAN class=""&gt; – V&lt;/SPAN&gt;&lt;SPAN class=""&gt;4 )&lt;/SPAN&gt;&lt;SPAN class=""&gt; to expose the Entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_C_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL )&lt;/SPAN&gt; &lt;SPAN class=""&gt;to the front end.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880554639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320257i45126292733C4314/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880554639.png" alt="sanjay22_2-1758880554639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;F4 for Country Field – Search by Country&lt;/SPAN&gt;&lt;SPAN class=""&gt;, Search by region two value help screen.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_3-1758880593273.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320258i131D140173B03D26/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_3-1758880593273.png" alt="sanjay22_3-1758880593273.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696"/>
    <published>2025-10-03T11:51:37.840000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/validation-in-draft-with-state-messages-in-rap/ba-p/14228996</id>
    <title>Validation in Draft with State Messages in RAP</title>
    <updated>2025-10-03T16:34:11.013000+02:00</updated>
    <author>
      <name>harsh_raj1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/152044</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;When we build applications using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP RESTful Application Programming Model (RAP)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, one of the big advantages is the ability to work with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;draft-enabled business objects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Draft handling lets users edit data, save it temporarily, and only activate it when they’re ready.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;But here’s the catch: even in draft mode, we can’t allow &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;just anything&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; to be saved. Business rules still need to be checked. This is where &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;validations with state messages&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; come in. They ensure data quality while giving users clear, contextual feedback right inside the Fiori UI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this post, I’ll Walk you through how to set up such validations in RAP.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Why do we need validations in draft?&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need validation in a draft&amp;nbsp;to maintain data integrity and consistency throughout the business process by identifying inconsistencies early, providing immediate feedback to the user, and ensuring that data meets business requirements before it becomes active, thereby preventing errors and improving the overall reliability of the system.&amp;nbsp;&lt;/SPAN&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Ensures Data Integrity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Validation checks if data entered into a draft is consistent with predefined criteria, preventing the storage of incomplete or incorrect data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Provides Immediate Feedback&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Users receive real-time messages indicating any inconsistencies or issues within the draft, allowing them to correct them before committing to the final active state.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Supports Data Consistency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Validations are triggered at predefined points in the transaction cycle, ensuring that draft instances remain in a consistent and reliable state.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Prevents Business Errors&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;By catching errors in the draft stage, validation prevents them from propagating to the active data, avoiding costly mistakes and ensuring the accuracy of final data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Enhances User Experience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;Users are informed about missing or incorrect information, allowing them to modify their input without needing to complete the entire transaction to see the problem.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Facilitates Data Reliability&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;For developers, this means the data that eventually leaves an API can be trusted because it has been validated, leading to simpler and more reliable front-end code.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Validation:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A validation is an optional part of the business object behavior that checks the consistency of business object instances based on trigger conditions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A validation is implicitly invoked by the business object’s framework if the trigger condition of the validation is fulfilled. Trigger conditions can be&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;modify&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;operations and modified fields. The trigger condition is evaluated at the trigger time, a predefined point during the BO runtime. An invoked validation can reject inconsistent instance data from being saved by passing the keys of failed instances to the corresponding table in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;FAILED&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;structure. Additionally, a validation can return messages to the consumer by passing them to the corresponding table in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;REPORTED&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;structure.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Points to be noted:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When working with validations, you have to consider the following runtime specifics:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In unmanaged scenarios, validations are only supported for draft instances, not for active instances.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;SPAN&gt;The execution order of validations is not fixed. If there is more than one validation triggered by the same condition, you cannot know which validation is executed first.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It is not allowed to use EML modify statements in validations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In a managed scenario with draft, it is strongly recommended to assign validations to the PREPARE, so that state messages from the validations are returned correctly to the consumer.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Messages in RAP:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;State Messages:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;State messages refer to a business object instance and its values.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;State messages must be always bound to a business object instance.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You mustn’t define state messages in an action or function added on projection level(Dump).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Draft Scenario, They’re persisted until the state that caused the message is changed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Managed scenario, the messages are buffered until the end of the session.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If a validation returns an error message regarding an incorrect value in a field,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The state message persisted until the value is changed and the save sequence is &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Triggered again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Using State messages is only recommended for the following cases:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Business object with draft capabilities: Determinations and validation that are &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Allocated to the prepare or a determine action.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Unmanaged Business Object: Finalize/check before save code exit.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Managed Scenario: Determination/validation on save.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Transition Messages:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Refers to the current Request.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It can either be bound or unbound (not related to business object instances).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      APPEND VALUE #( %tky = &amp;lt;ls_keys&amp;gt;-%tky
                     %msg = NEW /dmo/cm_flight_messages(
                        textid   = /dmo/cm_flight_messages=&amp;gt;discount_invalid
                        severity = if_abap_behv_message=&amp;gt;severity-error
      )                 %element-bookingfee = if_abap_behv=&amp;gt;mk-on
                       %action-deductdiscount =  if_abap_behv=&amp;gt;mk-on )
                       TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;        APPEND VALUE #( %msg      = new_message_with_text(
                        severity = if_abap_behv_message=&amp;gt;severity-error
                        text = 'operation not authorized!' ) )
                        TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    APPEND VALUE #(
            %tky                = booking-%tky
            %state_area         = 'VALIDATE_CUSTOMER'
            %msg                = NEW /dmo/cm_flight_messages( textid   = /dmo/cm_flight_messages=&amp;gt;enter_customer_id
                                                               severity = if_abap_behv_message=&amp;gt;severity-error )
            %path               = VALUE #( zR_Travel_D1-%tky = travel_booking_links[
                                                                   KEY id
                                                                   source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Trigger condition can be: CUD operation or modified fields(Update for validation is only &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Supported in combination with create).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; validation validateCustomer on save { create; field CustomerID; }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Trigger Time:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Validation on save are executed:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the check Before save method of the save sequence.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;On request by executing a determine action, if the validation has been assigned to&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Such an action in the behavior definition. For more information, see Determine Actions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_5-1758884065427.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320421iEF8CD1D080ED6C91/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_5-1758884065427.png" alt="harsh_raj1_5-1758884065427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For making the validation you have to make field as mandatory.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;field&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;(&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;mandatory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;CustomerID&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;validation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;validateCustomer&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;on&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;save&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;{&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;create;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;field&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;CustomerID&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;;}&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Give &lt;/SPAN&gt;&lt;SPAN&gt;implementation for&amp;nbsp;validatecustomer&amp;nbsp;method in local handler class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;When we are working with state messages in RAP first we need to invalidate it without msg and later&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If needed, we can validate with msg.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      APPEND VALUE #( %tky        = travel-%tky
                      %state_area = 'VALIDATE_CUSTOMER' )
             TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Adding back with msg:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If we remove state area it will become transaction message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;      IF travel-CustomerID IS INITIAL.
        APPEND VALUE #( %tky = travel-%tky ) TO failed-zr_travel_d1.

        APPEND VALUE #( %tky                = travel-%tky
                        %state_area         = 'VALIDATE_CUSTOMER'
                        %msg                = NEW /dmo/cm_flight_messages(
                                                      textid   = /dmo/cm_flight_messages=&amp;gt;enter_customer_id
                                                      severity = if_abap_behv_message=&amp;gt;severity-error )
                        %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_travel_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;On Fiori app:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we can see Customerid is 1 and it’s a valid value so it will not through any error &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Message whenever user click enter or save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_8-1758884118570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320425iC029A38130842A81/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_8-1758884118570.png" alt="harsh_raj1_8-1758884118570.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Now I will edit it and pass some invalid value. See how it behaves.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;[{entity:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;{name:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;'/DMO/I_Customer_StdVH',&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;element:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;'CustomerID'&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;},&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;useForValidation:&amp;nbsp;true&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;}]&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Here am not using use for validation : true that’s why if user click on enter it will not throw any error message it will only throw error message when &amp;nbsp;User click on save button.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_9-1758884118573.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320429iB4D0F878C6A572B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_9-1758884118573.png" alt="harsh_raj1_9-1758884118573.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now i have added use for validation: true.&amp;nbsp;&lt;/P&gt;&lt;P&gt;See it will validate when user click on enter as well.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_10-1758884118575.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320430i2B4981D90DA5D176/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_10-1758884118575.png" alt="harsh_raj1_10-1758884118575.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;These messages are coming from read after performing&amp;nbsp; modify.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_11-1758884118576.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320428iDB8103322D917B99/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_11-1758884118576.png" alt="harsh_raj1_11-1758884118576.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we are reading from parent entity travel for booking.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here are minor changes in validation from travel customer validation.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Apart from this most of the things are similar.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;%path is different and link data.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY zr_booking_d1
         FIELDS ( CustomerID )
         WITH CORRESPONDING #( keys )
         RESULT DATA(bookings).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY zr_booking_d1 BY \_Travel1
         FROM CORRESPONDING #( bookings )
         LINK DATA(travel_booking_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path               = VALUE #( zR_Travel_D1-%tky = travel_booking_links[
                                                                   KEY id
                                                                   source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;For Booking:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Am not using here this annotation so here it's not validating at frontend with enter.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will validate once user click on save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_14-1758884118579.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320433i35F61C1F60FFA47E/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_14-1758884118579.png" alt="harsh_raj1_14-1758884118579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I will pass incorrect value for&amp;nbsp;custoimerid.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;See what happen:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_15-1758884118580.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320435iD5879396589589F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_15-1758884118580.png" alt="harsh_raj1_15-1758884118580.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is accepting while click on&amp;nbsp;enter.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It is giving error only after press save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_16-1758884118581.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320434i0428B600F861A05E/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_16-1758884118581.png" alt="harsh_raj1_16-1758884118581.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Even if&amp;nbsp;customerid&amp;nbsp;is mandatory field it will accept empty value when we hit enter&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will validate only after click on save button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_17-1758884118582.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320436i5EB8BCB53BA79A5D/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_17-1758884118582.png" alt="harsh_raj1_17-1758884118582.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_18-1758884118583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320439i737C56412366A804/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_18-1758884118583.png" alt="harsh_raj1_18-1758884118583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;For Booking Supplement&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here am not passing any value and if we click on save button validation will be&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Trigger and throw&amp;nbsp;a&amp;nbsp;error message as Enter a&amp;nbsp;ProductID.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_19-1758884118584.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320438iDF194310794B3A8E/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_19-1758884118584.png" alt="harsh_raj1_19-1758884118584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_20-1758884118585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320437iDDAFCD19F0616B34/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_20-1758884118585.png" alt="harsh_raj1_20-1758884118585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If&amp;nbsp;ProductID&amp;nbsp;it is wrong, it will throw error message as&amp;nbsp;ProductID&amp;nbsp;is unknown.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_21-1758884118586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320442iC7CCFBC722AD47B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_21-1758884118586.png" alt="harsh_raj1_21-1758884118586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="harsh_raj1_22-1758884118586.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320440i72F821F6D1A40646/image-size/large?v=v2&amp;amp;px=999" role="button" title="harsh_raj1_22-1758884118586.png" alt="harsh_raj1_22-1758884118586.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Things needs to define:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In behavior definition:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;field ( mandatory ) SupplementID;
  validation validateSupplement on save { create; field SupplementID; }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;In local handler class&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we need to link both parent and child as it is grandchild entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY ZR_BookingSupplement_D1 BY \_Booking1
         FROM CORRESPONDING #( bookingsupplements )
         LINK DATA(booksuppl_booking_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    READ ENTITIES OF zR_Travel_D1 IN LOCAL MODE
         ENTITY ZR_BookingSupplement_D1 BY \_Travel1
         FROM CORRESPONDING #( bookingsupplements )
         LINK DATA(booksuppl_travel_links).&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path                 = VALUE #(
                zr_booking_d1-%tky = booksuppl_booking_links[ KEY id
                                                             source-%tky = &amp;lt;bookingsupplement&amp;gt;-%tky ]-target-%tky
                zR_Travel_D1-%tky  = booksuppl_travel_links[  KEY id
                                                            source-%tky = &amp;lt;bookingsupplement&amp;gt;-%tky ]-target-%tky )
            %element-SupplementID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_bookingsupplement_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;These highlighted lines such as path are different from travel and booking entity as this is a type&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Of grandchild entity. So we have to link with both entity parent such as travel and child such as booking.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;            %path               = VALUE #(
                zR_Travel_D1-%tky = travel_booking_links[ KEY id
                                                          source-%tky = booking-%tky ]-target-%tky )
            %element-CustomerID = if_abap_behv=&amp;gt;mk-on )
               TO reported-zr_booking_d1.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/validation-in-draft-with-state-messages-in-rap/ba-p/14228996"/>
    <published>2025-10-03T16:34:11.013000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872</id>
    <title>ABAP RAP : Excel upload through custom action popup ( No UI5 Extension , No Object Page workaround )</title>
    <updated>2025-10-05T00:52:51.623000+02:00</updated>
    <author>
      <name>Ramjee_korada</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10276</uri>
    </author>
    <content>&lt;P&gt;A frequent business requirement involves enabling mass changes to business objects via&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Excel uploads&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;executed through a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom action popup&lt;/STRONG&gt;. Historically, achieving this functionality has necessitated various workarounds, often involving&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 extensions&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;third-party solutions&lt;/STRONG&gt;, or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Object Page manipulations&lt;/STRONG&gt;, all of which present specific implementation challenges.&lt;/P&gt;&lt;P&gt;The existing workaround approaches present several drawbacks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom UI Extensions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Require specialized&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 development expertise&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Third-Party Solutions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Introduce risks related to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;licensing compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and potential&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;security vulnerabilities&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Object Page Manipulations:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Involve complex, multi-step processes, such as creating a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;dummy object page&lt;/STRONG&gt;, facilitating file upload, temporarily&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;storing the file data in a table field&lt;/STRONG&gt;, and requiring a final user action (a button press) to initiate processing. This temporary data storage is often&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;unnecessary&lt;/STRONG&gt;, complicating the data model.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, SAP has recently introduced&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP / CAP annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that offer a cloud-ready solution, potentially&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;eliminating approximately 95% of the development effort&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;typically associated with integrating an Excel upload into the backend. This innovation allows developers to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;prioritize implementing core business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;over developing reusable technical artifacts.&lt;/P&gt;&lt;P&gt;I will now detail the implementation steps.&lt;/P&gt;&lt;P&gt;A business requirement to manage &lt;STRONG&gt;mass processing listings for a library&lt;/STRONG&gt; was selected to demonstrate this use case. The implementation requires several steps, with steps 3 through 6 being the &lt;STRONG&gt;special or additional configurations&lt;/STRONG&gt; needed, while all others are considered routine.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759618459647.png" style="width: 691px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322875i27F4B6363B99B5FA/image-dimensions/691x376?v=v2" width="691" height="376" role="button" title="Ramjee_korada_0-1759618459647.png" alt="Ramjee_korada_0-1759618459647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890964802"&gt;Note:&lt;/H3&gt;&lt;P&gt;&lt;EM&gt;This feature is currently &lt;STRONG&gt;functional on the BTP ABAP Environment&lt;/STRONG&gt;. However, an issue appears to exist with metadata generation on &lt;STRONG&gt;S/4HANA 2023 On-Premise&lt;/STRONG&gt; deployments, even though the objects are syntactically correct. It is anticipated that this constraint will be addressed in the &lt;STRONG&gt;S/4HANA 2025 release&lt;/STRONG&gt;, making the full feature set available on the S/4HANA On-Premise version following a brief waiting period.&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694451297"&gt;Implementation Steps&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;A database table for the &lt;STRONG&gt;listing entity&lt;/STRONG&gt; is created. This involves fields such as &lt;CODE&gt;Id&lt;/CODE&gt;, &lt;CODE&gt;Title&lt;/CODE&gt;, &lt;CODE&gt;Type&lt;/CODE&gt;, and &lt;CODE&gt;Author&lt;/CODE&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Library Listings'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zrk_lib_listings {

  key client            : abap.clnt not null;
  key listing_uuid      : sysuuid_x16 not null;
  id                    : abap.numc(10);
  title                 : abap.char(40);
  type                  : abap.char(5);
  author                : abap.char(40);
  publisher_studio      : abap.char(40);
  isbn_ean              : abap.char(40);
  language_code         : abap.lang;
  publication_year      : abap.numc(4);
  description           : abap.char(40);
  totalcopies           : abap.int2;
  available_copies      : abap.int2;
  location_shelf_id     : abap.char(40);
  lending_duration_days : abap.int2;
  status                : abap.char(40);
  cover_image_url       : abap.char(100);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;A &lt;STRONG&gt;RAP Business Object (BO)&lt;/STRONG&gt;&lt;SPAN&gt; is generated, followed by the requisite &lt;/SPAN&gt;&lt;STRONG&gt;UI artifacts&lt;/STRONG&gt;&lt;SPAN&gt;. The specific RAP BO scenario (Managed, Unmanaged, Draft, or Non-Draft) is noted as not influencing the core Excel upload use case. The &lt;/SPAN&gt;&lt;STRONG&gt;RAP Generator is used&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt; to simplify the demonstration.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759617725687.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322874iBDE9FF5181449404/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ramjee_korada_0-1759617725687.png" alt="Ramjee_korada_0-1759617725687.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. A &lt;STRONG&gt;root&amp;nbsp;abstract entity&lt;/STRONG&gt; is created for the file to be uploaded. (This entity is highly reusable and can be applied across different RAP BOs).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abs. Entity For Attachment'
define root abstract entity ZRK_D_FILE_STREAM
{
  @Semantics.largeObject.mimeType: 'MimeType'
  @Semantics.largeObject.fileName: 'FileName'
  @Semantics.largeObject.contentDispositionPreference: #INLINE
  @EndUserText.label: 'Select Excel file'
  StreamProperty : abap.rawstring(0);
  
  .hidden: true
  MimeType : abap.char(128);
  
  .hidden: true
  FileName : abap.char(128);   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the file entity is implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict(2);
with hierarchy;
define behavior for ZRK_D_FILE_STREAM {
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. A second &lt;STRONG&gt;abstract entity is created&lt;/STRONG&gt; to serve as an action parameter. This entity includes an association to the file abstract entity (from Step 3).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Action Param for Uploading Excel'
define root abstract entity ZRK_D_UPLOAD_EXCEL
{
// Dummy is a dummy field
@UI.hidden: true
dummy : abap_boolean;
     _StreamProperties : association [1] to ZRK_D_FILE_STREAM on 1 = 1;
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the action parameter is implemented, including the association to the earlier entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict ( 2 );
with hierarchy;
define behavior for ZRK_D_UPLOAD_EXCEL //alias &amp;lt;alias_name&amp;gt;
{
association _StreamProperties with hierarchy;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. An &lt;STRONG&gt;action is defined&lt;/STRONG&gt; on the RAP BO Behavior definition, with the parameter specified in Step 5.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class ZRK_BP_R_LIB_LISTINGS unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZRK_R_LIB_LISTINGS alias Listings
persistent table ZRK_LIB_LISTINGS
extensible
draft table ZRK_LIB_LSTNGS_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )
{
  field ( readonly )
   ListingUUID,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   ListingUUID;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;

  mapping for ZRK_LIB_LISTINGS corresponding extensible
  {
    ListingUUID = listing_uuid;
    ID = id;
    Title = title;
    Type = type;
    Author = author;
    PublisherStudio = publisher_studio;
    IsbnEan = isbn_ean;
    LanguageCode = language_code;
    PublicationYear = publication_year;
    Description = description;
    Totalcopies = totalcopies;
    AvailableCopies = available_copies;
    LocationShelfID = location_shelf_id;
    LendingDurationDays = lending_duration_days;
    Status = status;
    CoverImageUrl = cover_image_url;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. The &lt;STRONG&gt;business logic is implemented&lt;/STRONG&gt; to read the Excel content. A released API, XCO_CP_XLSX&amp;nbsp;&lt;FONT color="#000000"&gt;,&lt;/FONT&gt; is used for this demonstration.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD ExcelUpload.
    TYPES : BEGIN OF ty_sheet_data,
              id                  TYPE zrk_r_lib_listings-id,
              title               TYPE zrk_r_lib_listings-title,
              type                TYPE zrk_r_lib_listings-Type,
              author              TYPE zrk_r_lib_listings-author,
              PublisherStudio     TYPE zrk_r_lib_listings-PublisherStudio,
              IsbnEan             TYPE zrk_r_lib_listings-IsbnEan,
              LanguageCode        TYPE zrk_r_lib_listings-LanguageCode,
              PublicationYear     TYPE zrk_r_lib_listings-PublicationYear,
              description         TYPE zrk_r_lib_listings-Description,
              Totalcopies         TYPE zrk_r_lib_listings-Totalcopies,
              AvailableCopies     TYPE zrk_r_lib_listings-AvailableCopies,
              LocationShelfID     TYPE zrk_r_lib_listings-LocationShelfID,
              LendingDurationDays TYPE zrk_r_lib_listings-LendingDurationDays,
              status              TYPE zrk_r_lib_listings-Status,
            END OF ty_sheet_data.

    DATA lv_file_content   TYPE xstring.
    DATA lt_sheet_data     TYPE STANDARD TABLE OF ty_sheet_data.
    DATA lt_listing_create TYPE TABLE FOR CREATE zrk_r_lib_listings.

    lv_file_content = VALUE #( keys[ 1 ]-%param-_streamproperties-StreamProperty OPTIONAL ).

    " Error handling in case file content is initial

    DATA(lo_document) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( lv_file_content )-&amp;gt;read_access( ).

    DATA(lo_worksheet) = lo_document-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).

    DATA(o_sel_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to(
      )-&amp;gt;from_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'A' )  " Start reading from Column A
      )-&amp;gt;to_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'N' )   " End reading at Column N
      )-&amp;gt;from_row( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_numeric_value( 2 )    " *** Start reading from ROW 2 to skip the header ***
      )-&amp;gt;get_pattern( ).

    lo_worksheet-&amp;gt;select( o_sel_pattern
                                     )-&amp;gt;row_stream(
                                     )-&amp;gt;operation-&amp;gt;write_to( REF #( lt_sheet_data )
                                     )-&amp;gt;set_value_transformation(
                                         xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value
                                     )-&amp;gt;execute( ).

    lt_listing_create = CORRESPONDING #( lt_sheet_data ).

    MODIFY ENTITIES OF zrk_r_lib_listings IN LOCAL MODE
           ENTITY Listings
           CREATE AUTO FILL CID FIELDS ( Id Title Type author PublisherStudio IsbnEan LanguageCode PublicationYear description Totalcopies AvailableCopies LocationShelfID LendingDurationDays status )
           WITH lt_listing_create
           " TODO: variable is assigned but never used (ABAP cleaner)
           MAPPED DATA(lt_mapped)
           " TODO: variable is assigned but never used (ABAP cleaner)
           REPORTED DATA(lt_reported)
           " TODO: variable is assigned but never used (ABAP cleaner)
           FAILED DATA(lt_failed).

    " Communicate the messages to UI - not in scope of this demo
    IF lt_failed IS INITIAL.
      APPEND VALUE #( %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-success
                                                    text     = 'Listings have been uploaded - please refresh the list!!' ) )
             TO reported-listings.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. The action is utilized on the &lt;STRONG&gt;projection behavior&lt;/STRONG&gt; and subsequently exposed in the &lt;STRONG&gt;metadata extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action ExcelUpload;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection implementation in class ZRK_BP_C_LIB_LISTINGS unique;
strict ( 2 );
extensible;
use draft;
use side effects;
define behavior for ZRK_C_LIB_LISTINGS alias Listings
extensible
use etag
{
  use create;
  use update;
  use delete;

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use action ExcelUpload;

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.lineItem: [{ type:#FOR_ACTION , dataAction: 'ExcelUpload' , label: 'Upload Excel' }]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10. The &lt;STRONG&gt;service binding is published&lt;/STRONG&gt;, and the application is then ready for execution.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_2-1759616768674.png" style="width: 739px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322868iF1985AA5BDD03A2A/image-dimensions/739x181?v=v2" width="739" height="181" role="button" title="Ramjee_korada_2-1759616768674.png" alt="Ramjee_korada_2-1759616768674.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_3-1759616871331.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322869i040F7DA1CC5515C5/image-dimensions/721x392?v=v2" width="721" height="392" role="button" title="Ramjee_korada_3-1759616871331.png" alt="Ramjee_korada_3-1759616871331.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_4-1759616921974.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322870i5364BBC5623F81B7/image-dimensions/720x117?v=v2" width="720" height="117" role="button" title="Ramjee_korada_4-1759616921974.png" alt="Ramjee_korada_4-1759616921974.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_5-1759617464764.png" style="width: 743px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322872i185A7C14C9E33C7E/image-dimensions/743x390?v=v2" width="743" height="390" role="button" title="Ramjee_korada_5-1759617464764.png" alt="Ramjee_korada_5-1759617464764.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_6-1759617503382.png" style="width: 736px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322873iF922947957F6C08B/image-dimensions/736x407?v=v2" width="736" height="407" role="button" title="Ramjee_korada_6-1759617503382.png" alt="Ramjee_korada_6-1759617503382.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872"/>
    <published>2025-10-05T00:52:51.623000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-the-power-of-sap-build-sap-build-bootcamp-for-partners/ba-p/14237492</id>
    <title>Unlocking the Power of SAP Build (SAP Build Bootcamp for Partners)</title>
    <updated>2025-10-09T07:22:45.050000+02:00</updated>
    <author>
      <name>Oswaldo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/39194</uri>
    </author>
    <content>&lt;P&gt;On September 18th, we conducted a session focused on the new SAP Build and how it can be an element of transformation enabeling innovation, automation, and extensibility. From a packed agenda, expert Q&amp;amp;A and networking; the participants had first-hand views on how the new SAP Build (and assets like Joule, ABAP RAP, and BTP AI Core) can be used as a differentiator and how organizations can leverage them to build and extend SAP solutions.&lt;/P&gt;&lt;H2 id="toc-hId-1761967674"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H3 id="toc-hId-1694536888"&gt;Agenda highlights &amp;amp; session recap:&lt;/H3&gt;&lt;H4 id="toc-hId-1627106102"&gt;&lt;FONT size="4"&gt;Welcome &amp;amp; Introduction // SAP Build engagement-&amp;nbsp;Speaker:&amp;nbsp;&lt;U&gt;Luis Felipe Lanz (SAP)&lt;/U&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;U&gt;&lt;A title="SAP BTP Clean Core - Intro" href="https://dam.sap.com/mac/embed/public/pdf/a/4NMn4dM?rc=10&amp;amp;doi=SAP1244816&amp;amp;includeSapBrandedWraper=true" target="_self" rel="noreferrer noopener"&gt;&lt;SPAN&gt;&amp;nbsp;[Link to presentation]&lt;/SPAN&gt;&lt;/A&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1430592597"&gt;&lt;FONT size="4"&gt;The Road to Clean Core - Speaker:&amp;nbsp;&lt;U&gt;&lt;FONT size="4"&gt;Daniel Alamo (SAP)&lt;/FONT&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P data-unlink="true"&gt;&lt;A title="Clean Core" href="https://d.dam.sap.com/a/18ftSyQ/Partners_-Clean_Core_2.pdf?rc=10&amp;amp;inline=true&amp;amp;doi=SAP1244783" target="_self" rel="noopener noreferrer"&gt;&lt;U&gt;&lt;FONT size="4"&gt;&amp;nbsp;[Link to presentation]&amp;nbsp;&lt;/FONT&gt;&lt;/U&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1234079092"&gt;&lt;FONT size="4"&gt;The New SAP Build and Joule Studio -&amp;nbsp;&lt;FONT size="4"&gt;Speaker:&amp;nbsp;&lt;/FONT&gt;&lt;/FONT&gt;&lt;U&gt;&lt;FONT size="4"&gt;Alejandra Gómez y Oswaldo Seara (SAP)&lt;/FONT&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P&gt;&lt;U&gt;&lt;FONT size="4"&gt;&lt;A title="SAP BTP Clean Core - Intro" href="https://dam.sap.com/mac/embed/public/pdf/a/BrX2eJK?rc=10&amp;amp;doi=SAP1244782&amp;amp;includeSapBrandedWraper=true" target="_self" rel="noreferrer noopener"&gt;&amp;nbsp;[Link to presentation]&lt;/A&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1037565587"&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;ABAP RAP (RESTful Application Programming) -&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT size="4"&gt;Speaker:&amp;nbsp;&lt;STRONG&gt;&lt;FONT size="4"&gt;&amp;nbsp;&lt;U&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Daniel Álamo (SAP)&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;U&gt;&lt;FONT size="4"&gt;&lt;A title="SAP BTP Clean Core - Intro" href="https://dam.sap.com/mac/embed/public/pdf/a/g9i9CF7?rc=10&amp;amp;doi=SAP1244776&amp;amp;includeSapBrandedWraper=true" target="_self" rel="noreferrer noopener"&gt;&amp;nbsp;[Link to presentation]&lt;/A&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-841052082"&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;SAP BTP AI Core and AI Capabilities&amp;nbsp;- Speaker:&amp;nbsp;&lt;U&gt; Fernando Terry (SAP)&lt;/U&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;U&gt;&lt;A title="SAP BTP Clean Core - Intro" href="https://dam.sap.com/mac/embed/public/pdf/a/PSTMa9Z?rc=10&amp;amp;doi=SAP1244779&amp;amp;includeSapBrandedWraper=true" target="_self" rel="noreferrer noopener"&gt;&amp;nbsp;[Link to presentation]&lt;/A&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-515455858"&gt;&lt;STRONG&gt;Key Takeaways&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;SAP Build Is Empowering a New Era of &lt;U&gt;Business-Led Development&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ABAP RAP: The Future of &lt;U&gt;Extensibility, Built on Clean Core Principles&lt;/U&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Joule Studio: &lt;U&gt;AI with &lt;U&gt;SAP context and Purpose&lt;/U&gt;&lt;/U&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;Framework Guidance: Building with &lt;U&gt;Governance and Agility in Mind&lt;/U&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-318942353"&gt;&lt;STRONG&gt;What’s Next?&lt;/STRONG&gt;&lt;/H3&gt;&lt;P class=""&gt;Here’s how to keep the momentum going:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;Contact your SAP BTP Customer Success Manager&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":graduation_cap:"&gt;🎓&lt;/span&gt;Visit&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://discovery-center.cloud.sap/index.html" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Discovery Center Missions on BTP&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-the-power-of-sap-build-sap-build-bootcamp-for-partners/ba-p/14237492"/>
    <published>2025-10-09T07:22:45.050000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-learning-blog-posts/do-you-know-how-to-apply-the-clean-core-principles-for-creating-custom/ba-p/14239218</id>
    <title>Do you know how to apply the Clean Core principles for creating custom extensions in SAP S/4HANA?</title>
    <updated>2025-10-10T15:39:46.208000+02:00</updated>
    <author>
      <name>Katrin1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1489671</uri>
    </author>
    <content>&lt;P data-unlink="true"&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;I&amp;nbsp;&lt;/SPAN&gt;recommend to access our&amp;nbsp;&lt;A title="Acquiring Core ABAP Skills" href="https://learning.sap.com/learning-journeys/acquiring-core-abap-skills" target="_blank" rel="noopener noreferrer"&gt;Acquiring Core ABAP Skills&lt;/A&gt;&amp;nbsp;&lt;/FONT&gt;&amp;nbsp; learning journey.&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;Learning outcome&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;By the end of this learning journey, you will be able to:&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Explain the fundamental principles of the ABAP programming language&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Explain the essential ABAP programming techniques.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create simple applications using the ABAP RESTful Application Programming Model&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Apply the Clean Core principles for creating custom extensions in SAP S/4HANA&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Goals&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;Get started with SAP: Building the basics&lt;/LI&gt;&lt;LI&gt;Develop your expertise: Skill deepening learning&lt;/LI&gt;&lt;LI&gt;Excel in your expertise: Advanced specialization learning&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Please post you question related&amp;nbsp;to the digital learning Journey in the&amp;nbsp;&lt;/STRONG&gt;&lt;A href="https://groups.community.sap.com/t5/sap-learning-q-a/qa-p/learningqanda-board" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Q&amp;amp;A area&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt;.&amp;nbsp;&lt;/STRONG&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;Our SAP Learning Experts will get back to you as soon as possible!&amp;nbsp;&lt;BR /&gt;We are here to support you.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;BR /&gt;I appreciate your feedback and we will make sure to continue sharing interesting topics.&lt;BR /&gt;&lt;BR /&gt;Kind regards,&amp;nbsp;Katrin&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/sap-learning-blog-posts/do-you-know-how-to-apply-the-clean-core-principles-for-creating-custom/ba-p/14239218"/>
    <published>2025-10-10T15:39:46.208000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/is-it-rap-or-bopf-fiori-programming-model-analyzer-for-s-4hana/ba-p/14240651</id>
    <title>Is It RAP or BOPF? Fiori Programming Model Analyzer for S/4HANA</title>
    <updated>2025-10-10T17:21:44.866000+02:00</updated>
    <author>
      <name>AlessandroSpadoni</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/141302</uri>
    </author>
    <content>&lt;H5 id="toc-hId--2145034684"&gt;&lt;EM&gt;Update – 21 October 2025&lt;/EM&gt;&lt;/H5&gt;&lt;P&gt;The &lt;STRONG&gt;ABAP Generator&lt;/STRONG&gt; component of the &lt;EM&gt;Fiori Programming Model Analyzer&lt;/EM&gt; is now available on GitHub!&lt;/P&gt;&lt;P&gt;The project now consists of two complementary repositories:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A href="https://github.com/alespad/s4-fiori-model-generator" target="_self" rel="nofollow noopener noreferrer"&gt;ABAP Generator&lt;/A&gt;&lt;/STRONG&gt; – the backend engine running directly on your S/4HANA system.&lt;BR /&gt;It analyzes the &lt;CODE&gt;manifest.json&lt;/CODE&gt; of standard Fiori apps, cross-references them with CDS views and Service Definitions, and automatically classifies each app by programming model (&lt;STRONG&gt;RAP&lt;/STRONG&gt;, &lt;STRONG&gt;BOPF&lt;/STRONG&gt;, or &lt;EM&gt;Gateway Classic&lt;/EM&gt;).&lt;BR /&gt;It produces &lt;STRONG&gt;JSON&lt;/STRONG&gt; and &lt;STRONG&gt;CSV&lt;/STRONG&gt; outputs ready to be consumed by the viewer.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;&lt;A class="" href="https://github.com/alespad/s4-fiori-model-analyzer" target="_new" rel="noopener nofollow noreferrer"&gt;Viewer Application&lt;/A&gt;&lt;/STRONG&gt; – the frontend visualization tool that lets you explore and compare the generated data interactively, including the “Compare” view for release-to-release analysis.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1824336388"&gt;Introduction: the Idea&lt;/H4&gt;&lt;P&gt;Last week at &lt;A href="https://community.sap.com/t5/rome-events/sap-inside-track-rome-2025/ev-p/14102611" target="_self"&gt;&lt;STRONG&gt;SAP Inside Track Rome 2025&lt;/STRONG&gt;&lt;/A&gt; I had the chance to present a session about a new tool I’ve been working on recently.&lt;/P&gt;&lt;P&gt;The goal of this tool is to &lt;STRONG&gt;support ABAP developers&lt;/STRONG&gt; in identifying the &lt;STRONG&gt;programming model&lt;/STRONG&gt; behind a given &lt;STRONG&gt;Fiori app&lt;/STRONG&gt;, showing useful information&amp;nbsp;such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;What programming model does this app use – &lt;STRONG&gt;BOPF&lt;/STRONG&gt; or &lt;STRONG&gt;RAP&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;What’s the name of the &lt;STRONG&gt;Business Object&lt;/STRONG&gt;&amp;nbsp;?&lt;/LI&gt;&lt;LI&gt;Has the &lt;STRONG&gt;Fiori Elements&lt;/STRONG&gt; app been &lt;STRONG&gt;extended with the Flexible Programming Model&lt;/STRONG&gt;?&lt;/LI&gt;&lt;LI&gt;For &lt;STRONG&gt;OData V2&lt;/STRONG&gt; apps – sometimes the OData name doesn’t match the &lt;STRONG&gt;SEGW project&lt;/STRONG&gt; name: which one is the correct SEGW project?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You can explore the data directly here:&lt;BR /&gt;&lt;A class="" href="https://alespad.github.io/s4-fiori-model-analyzer/" target="_new" rel="noopener nofollow noreferrer"&gt;https://alespad.github.io/s4-fiori-model-analyzer/&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AlessandroSpadoni_0-1760109394683.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325710i909D1E3FDB46FCFA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="AlessandroSpadoni_0-1760109394683.png" alt="AlessandroSpadoni_0-1760109394683.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The app can also be run &lt;STRONG&gt;locally&lt;/STRONG&gt;, and all data files used by the Fiori viewer (in both &lt;STRONG&gt;JSON&lt;/STRONG&gt; and &lt;STRONG&gt;CSV&lt;/STRONG&gt; formats) are available in the GitHub project under:&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/alespad/s4-fiori-model-analyzer/tree/main/docs/data" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/alespad/s4-fiori-model-analyzer/tree/main/docs/data&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1627822883"&gt;Behind the story&lt;/H4&gt;&lt;P&gt;How did this idea come up?&lt;/P&gt;&lt;P&gt;At &lt;STRONG&gt;Syscons&lt;/STRONG&gt;, we regularly run internal and customer webinars we call &lt;STRONG&gt;“Fiori Enablement”&lt;/STRONG&gt;, designed to help experienced ABAP developers modernize their skills and get ready to work on the latest &lt;STRONG&gt;S/4HANA releases&lt;/STRONG&gt; (and even &lt;STRONG&gt;BTP-based&lt;/STRONG&gt; developments).&lt;/P&gt;&lt;P&gt;Some time ago,&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/38226"&gt;@SergioFerrariIt2&lt;/a&gt;&amp;nbsp;suggested a session called &lt;EM&gt;“Anatomy of a Fiori App”&lt;/EM&gt;. It wasn’t easy to prepare, since there’s no official end-to-end documentation on how to “dissect” a Fiori app. The goal was to show how an ABAP developer can look inside a standard app and understand &lt;EM&gt;what’s really happening&lt;/EM&gt; behind an action button, a navigation, or any specific UI behavior.&lt;/P&gt;&lt;P&gt;To prepare the session, I chose the &lt;STRONG&gt;Fiori App F1048A – Process Purchase Requisition&lt;/STRONG&gt;, and started documenting each step:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Identify the main object: start from the &lt;STRONG&gt;OData service&lt;/STRONG&gt; in the Fiori Library, or use &lt;STRONG&gt;Dev Tools (F12)&lt;/STRONG&gt; to see which entity is called when pressing “Go”.&lt;/LI&gt;&lt;LI&gt;Notice that there are &lt;STRONG&gt;three actions&lt;/STRONG&gt; in the table – but only &lt;STRONG&gt;one action&lt;/STRONG&gt; exists in the RAP object. Comparing &lt;STRONG&gt;ADT Preview&lt;/STRONG&gt; with the actual Fiori App, there are &lt;STRONG&gt;no @UI actions&lt;/STRONG&gt;, and even an extra column appears in the app. That means the app was &lt;STRONG&gt;extended with the Flexible Programming Model&lt;/STRONG&gt;. We can download the app and inspect it locally in &lt;STRONG&gt;VS Code&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;This app, based on a &lt;STRONG&gt;RAP&lt;/STRONG&gt; object, also navigates to other apps that use &lt;STRONG&gt;BOPF&lt;/STRONG&gt; via specific actions. Which BOPF objects are they? Here, F12 helps only partially — we need to go one level deeper to find the true &lt;STRONG&gt;BO names&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Following this process made me realize how useful it would be to have a &lt;STRONG&gt;tool that automatically shows this information&lt;/STRONG&gt;, starting from the app list in the Fiori Library.&lt;/P&gt;&lt;H4 id="toc-hId-1431309378"&gt;ABAP Generator&lt;/H4&gt;&lt;P&gt;If you’re only interested in &lt;STRONG&gt;browsing the analyzed data&lt;/STRONG&gt; in the viewer or &lt;STRONG&gt;downloading the JSON/CSV files&lt;/STRONG&gt;, then the &lt;A class="" href="https://github.com/alespad/s4-fiori-model-analyzer" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;Viewer Repository&lt;/STRONG&gt;&lt;/A&gt; is all you need.&lt;BR /&gt;However, if you want to &lt;STRONG&gt;generate the results directly in your own S/4HANA system&lt;/STRONG&gt;, improve the detection logic, or — in the near future — produce your &lt;STRONG&gt;own data for custom Fiori apps&lt;/STRONG&gt;, then you’ll definitely want to explore the &lt;A class="" href="https://github.com/alespad/s4-fiori-model-generator" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;ABAP Repository&lt;/STRONG&gt;&lt;/A&gt;.&lt;BR /&gt;For a deeper technical overview, you can refer directly to the README in that repository.&lt;/P&gt;&lt;P&gt;From a technical perspective, for each app the generator retrieves the corresponding BSP application and parses the &lt;CODE&gt;manifest.json&lt;/CODE&gt; to identify the OData service and main entity.&lt;BR /&gt;The logic then checks the presence of &lt;STRONG&gt;Service Bindings&lt;/STRONG&gt; (for RAP/V4) or &lt;STRONG&gt;SEGW projects&lt;/STRONG&gt; (for BOPF/V2), inspects the DDL source of CDS views to trace &lt;STRONG&gt;consumption and interface layers&lt;/STRONG&gt;, and classifies the app according to the detected programming model.&lt;BR /&gt;All results are consolidated into &lt;STRONG&gt;JSON&lt;/STRONG&gt; and &lt;STRONG&gt;CSV&lt;/STRONG&gt; output files that can be visualized directly through the Fiori Model Analyzer viewer.&lt;/P&gt;&lt;H4 id="toc-hId-1234795873"&gt;What's next?&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Improve&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;N/A&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;classification logic&lt;/LI&gt;&lt;LI&gt;Some SEGW Projects are not determined&lt;/LI&gt;&lt;LI&gt;Validate accuracy across different S/4HANA releases&lt;/LI&gt;&lt;LI&gt;Analyzing Custom Fiori Apps: Support detection of custom Fiori Elements apps built with SAP Fiori Tools&lt;/LI&gt;&lt;LI&gt;Continue improving by learning and adopting modern ABAP and open-source tools — currently using &lt;A href="https://abaplint.org/" target="_self" rel="nofollow noopener noreferrer"&gt;abaplint&lt;/A&gt; and exploring best practices for clean and collaborative development.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I’ll keep posting updates about the progress — and if you have &lt;STRONG&gt;feedback, suggestions, or ideas&lt;/STRONG&gt;, they’re very welcome!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/is-it-rap-or-bopf-fiori-programming-model-analyzer-for-s-4hana/ba-p/14240651"/>
    <published>2025-10-10T17:21:44.866000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/mastering-total-etag-in-rap-a-practical-guide/ba-p/14227417</id>
    <title>Mastering Total ETag in RAP , A Practical Guide.</title>
    <updated>2025-10-13T07:44:59.204000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog I have explained the mechanism of total etag&amp;nbsp; and also differnce between&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;E-TAG and total etag in RAP in restful abap programming model&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Introduction :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;ETAG: the etag concept ensures that&amp;nbsp; the end user of an Odata service only changes instances with the state that is displayed on the UI&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Hence , the etag prevents changes of the BO that are not noticed by the Odata consumers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.W&lt;/SPAN&gt;&lt;SPAN&gt;ith Etag master each BO&amp;nbsp; entity can be checked independently.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;TOTAL E-TAG:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;It enables optimistic concurrency checks durig the transition from draft to active data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This total etag field on the database table is updated by the RAP runtime framework as soon as an active instance is changed&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Its value is compared when resuming a draft instance to ensure that the active data has not been changed after the exclusive lock has expired&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The total E-tag is used for edit-drafts, a draft that has a corresponding active instance .&lt;/SPAN&gt;&lt;SPAN&gt;As soon as the exclusive lock expires and&amp;nbsp; an edit-draft is resumed , the total etag value of the draft is compared to the total ETAG value of the active instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The total etag is compared for all entities of BO&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Total e-tag is useful when we are changing draft data to active data .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1758777107961.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319637iDB81940A0646880F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Pradeep555_0-1758777107961.png" alt="Pradeep555_0-1758777107961.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;why total etag? and scenario&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose an application is not using draft concepts ,&amp;nbsp; if it is only using e-tag then that application is also modifying the same table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;E-tag will work whenever we are loading the data in the front end , someone else changes the data&amp;nbsp; and&amp;nbsp; unknowingly&amp;nbsp; saving the data – etag will be compered&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In&amp;nbsp; order to save the data and override we use etag&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SCENARIO:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When we start working on a draft table , we will put exclusive lock on active instance (say BOOKING ID-1)so that nobody can change the data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Active data base--&amp;gt;it will become active instance--&amp;gt; active instance to it will become draft instance&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose&amp;nbsp; I&amp;nbsp; have made some changes in active instance and – forgot to save it ,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;But it will be automatically saved in draft instance – as we are working on draft&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Chages made will be automatically saved in draft table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As soon as we stop working – the exclusve lock will be removed from active instance (BOOKING ID-1)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So now&amp;nbsp; the I&amp;nbsp; will come again ad start working on the draft instance which&amp;nbsp; have&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Saved , again&amp;nbsp; I will put exclusive lock and make some changes in the data and save it .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;As soon as we save – draft instance will be converted into active instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;What happens if we don't use total eTag?&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose somebody else did some changes and those changes are not saved in draft&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;(&lt;/SPAN&gt;&lt;SPAN&gt;the app is not using draft )&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&lt;/SPAN&gt;&lt;SPAN&gt;And we will be overwriting those changes with our changes, since we don't exactly now&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; w&lt;/SPAN&gt;&lt;SPAN&gt;hether someone eles has changed the data or not&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Total etag will be matched automatically based on the field &lt;/SPAN&gt;&lt;SPAN&gt;@Semantics.systemDateTime.lastChangedAt: true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need to match these field in behaviour definition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The framework will update total etag field each time --&amp;gt; whenever we are converting draft into&amp;nbsp; active data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Example :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1.create the table&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1758777516837.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319638iBA50C280B96C856A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1758777516837.png" alt="Pradeep555_1-1758777516837.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2.create a consumption view and provide the necessary annotation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1758777601278.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319639iC5FD3820E1DB68BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1758777601278.png" alt="Pradeep555_2-1758777601278.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;3.&lt;/SPAN&gt;&lt;SPAN&gt;create behaviour definition and provide total Etag and respective field.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1758777648461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319642i24CEFCC17BCB1020/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1758777648461.png" alt="Pradeep555_3-1758777648461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;4. create draft table&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1758777676405.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319643i715C25FB8A7E1322/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1758777676405.png" alt="Pradeep555_4-1758777676405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;create service def.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_5-1758777706631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319645i36372182CFD9F5AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_5-1758777706631.png" alt="Pradeep555_5-1758777706631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.Create&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;service binding.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1758777736935.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319646i83155EF51634578F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1758777736935.png" alt="Pradeep555_6-1758777736935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.OUTPUT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1758777788413.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319647i5818315A1846CC63/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1758777788413.png" alt="Pradeep555_7-1758777788413.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8.now&amp;nbsp; user 1 opens the data&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1758777841691.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319648i25DC4171796D1C7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1758777841691.png" alt="Pradeep555_8-1758777841691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.user 2 has the same data&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1758777887709.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319649i6B063E5B03A49A2D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1758777887709.png" alt="Pradeep555_9-1758777887709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10.now user 1 starts editing the data&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1758777929109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319652i91F42FE09E418B7B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1758777929109.png" alt="Pradeep555_10-1758777929109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11.suppose the user 2 trying to edit the same data--&amp;gt; he will get an error&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1758777971032.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319656iC79AADF91C9F4BFF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1758777971032.png" alt="Pradeep555_11-1758777971032.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1758777991719.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319657i0883C4CDE67D4E2B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1758777991719.png" alt="Pradeep555_12-1758777991719.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;13.we can see the entry in the dradft table&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_13-1758778026503.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319658i44DE883A4568A852/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_13-1758778026503.png" alt="Pradeep555_13-1758778026503.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14.now the active draft is&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_14-1758778067261.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319659i78779C02AB84DA77/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_14-1758778067261.png" alt="Pradeep555_14-1758778067261.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;15.User2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Trying to edit active draft with different value-&amp;gt;g&lt;/SPAN&gt;&lt;SPAN class=""&gt;etting error-&amp;gt;No data found&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_15-1758778105887.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319660i1614DD58FD8874E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_15-1758778105887.png" alt="Pradeep555_15-1758778105887.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;16.Now user2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;trying&lt;/SPAN&gt;&lt;SPAN class=""&gt; to edit&amp;nbsp; with&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Same value-&amp;gt;updated&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_16-1758778144031.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319661i81539FD8305AC09E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_16-1758778144031.png" alt="Pradeep555_16-1758778144031.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So total etag comes into picture&amp;nbsp;!!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Conclusion:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Whenever we wil save the data&amp;nbsp; from active to draft instance – before saving I will compare total e-tag&amp;nbsp; value&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If it matches --&amp;gt; I&amp;nbsp;shall save the data&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If it does not match --&amp;gt; i shall not save&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whenever we change the&amp;nbsp; active data --&amp;gt; total etag changes each time .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If nobody changes the data&amp;nbsp; ---&amp;gt; total etag will be matched&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If somebody changes the data--&amp;gt; total&amp;nbsp; etag will not be matched , we need to discrad the current draft and&amp;nbsp; we need to load the current data&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;NOTE: whenever we change the draft data into active data we need total etag&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;thank you !&lt;/P&gt;&lt;P&gt;- Pradeep Ishwar Devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-total-etag-in-rap-a-practical-guide/ba-p/14227417"/>
    <published>2025-10-13T07:44:59.204000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957</id>
    <title>File upload for items in Fiori Elements List Report</title>
    <updated>2025-10-13T12:30:19.100000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;In this blog, we'll show you how to upload, browse, and delete files on a row-by-line basis by having each row (item) have an item like an "attachment" in the SAP Fiori Elements List Report.&lt;BR /&gt;The data source for the List Report covers OData V4 services developed using the ABAP RESTful Application Programming Model (RAP) framework, and provides information about the implementation required to achieve file upload in RAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091120"&gt;2. Key points for implementing file upload&lt;/H1&gt;&lt;P&gt;In the file upload implementation, two points are required: (1) define the table items required for file storage, and (2) provide appropriate annotations for file object storage fields and file type storage fields.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Defining the table items required to store files&lt;P&gt;Set the following three fields in the custom table (the field names are samples).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;File object storage field (abap.rawstring(0) if file size is not specified)&lt;UL&gt;&lt;LI&gt;example：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file name&lt;UL&gt;&lt;LI&gt;example：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;example：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Proper Annotation of File Object and File Type Fields in CDS View&lt;UL&gt;&lt;LI&gt;File object storage field&lt;UL&gt;&lt;LI&gt;example：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577615"&gt;3. Implementation sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use the RAP Generator to simplify RAP development. RAP Generator is a tool that allows you to generate RAP objects such as CDS View and Behavior Definition from custom tables using only wizard settings. When using the RAP Generator to generate a RAP object, a service is generated that supports the Managed Runtime with a draft function. Therefore, the table definition must define the required fields for drafting functions and update processing. For more information about RAP Generator, please check the following SAP Help.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog is an example implementation based on the &lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229548"&gt;1. Create a package to store objects by the RAP Generator.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105716043"&gt;2. Create a custom table inside the package you created in 1.&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202538"&gt;3. Run the RAP Generator and follow the wizard to configure it.&lt;/H3&gt;&lt;P&gt;Right-click on the target custom table → run it with "Generate ABAP Repository Objects..."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a Service Type&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a package for storing generated objects&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Review the generated object and rename or alias it as needed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712689033"&gt;4. Add annotations for file upload to the generated data model (CDS View) and enable the CDS View.&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175528"&gt;5. Publish the service binding.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319662023"&gt;6. Select the entity and preview it.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148518"&gt;7. From the "Create" button, perform data registration and file upload.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209658"&gt;4. Summary&lt;/H1&gt;&lt;P&gt;By implementing the above, using the OData V4 service using the ABAP RESTful Application Programming Model (RAP), you can use the "Attachment" for each row (item) in the SAP Fiori Elements List Report. It is possible to upload, read, and delete files on a line-by-line basis. Please take advantage of it.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696153"&gt;References&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957"/>
    <published>2025-10-13T12:30:19.100000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/dynamically-making-a-field-read-only-in-sap-rap/ba-p/14225542</id>
    <title>Dynamically Making a Field Read-Only in SAP RAP</title>
    <updated>2025-10-14T11:19:32.771000+02:00</updated>
    <author>
      <name>Faizan_khan1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451076</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Making a field read-only or non-editable dependent on the value of another field is a frequent requirement. This blog post will explain how to use the RAP model to accomplish this.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The scenario we'll cover is making the &lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field read-only based on the value of the &lt;/SPAN&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; field.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Setting Up the RAP Application&lt;/STRONG&gt;&amp;nbsp;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before implementing the dynamic behavior, we need a basic RAP application structure.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Database Table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Data base Table for sales order'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdemo_dt_so {
  key vbeln : vbeln_va not null;
  erdat     : erdat;
  ernam     : ernam;
  vbtyp     : vbtypl;
  auart     : auart;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; 2 . &lt;STRONG&gt;Interface View&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for sales order'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root view entity ZDEMO_I_SO as select from zdemo_dt_so
{
    key vbeln as Vbeln,
    erdat as Erdat,
    ernam as Ernam,
    vbtyp as Vbtyp,
    auart as Auart
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;3 .&amp;nbsp;&lt;STRONG&gt;&lt;SPAN&gt;Projection View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection view for Sales order'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Metadata.allowExtensions: true
define root view entity ZDEMO_P_SO as projection on ZDEMO_I_SO
{
    key Vbeln,
    Erdat,
    Ernam,
    Vbtyp,
    Auart
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; 4 .&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Behavior Definition&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_demo_i_so unique;
strict ( 2 );
define behavior for ZDEMO_I_SO //alias &amp;lt;alias_name&amp;gt;
persistent table zdemo_dt_so
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
field (features : instance ) Vbtyp ;
validation vbtyp_valid on save { field Auart , Vbtyp ; }
  create;
  update;
  delete;
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );
define behavior for ZDEMO_P_SO //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;STRONG&gt; 5 .Service Definition and Binding&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service def SO'
define service ZDEMO_P_SO {
  expose ZDEMO_P_SO;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1758626719811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318831i36BA6EF83B11D5D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1758626719811.png" alt="Faizan_khan1_1-1758626719811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Once you click on preview you can see the application and create a record&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_2-1758626761985.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318832i87B00A509503C3FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_2-1758626761985.png" alt="Faizan_khan1_2-1758626761985.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_3-1758626769228.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318833iC5D4AF65B649F8AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_3-1758626769228.png" alt="Faizan_khan1_3-1758626769228.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Implementing Dynamic Feature Control&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Our goal is to make the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field read-only if the &lt;/SPAN&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; field has a specific value, like 'KA'.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For Achieving this scenario first we need to Define a Dynamic feature control for the field 'VBTYP'&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758626860646.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318837i82B7069BF5FA3D0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758626860646.png" alt="Faizan_khan1_0-1758626860646.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The logic for making the field read-only&amp;nbsp; presents in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;get_instance_features&lt;/SPAN&gt;&lt;SPAN&gt; method of your behavior implementation class. This method is automatically created&amp;nbsp; by the RAP framework. Here's the code you'll need to write:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD get_instance_features.

  READ ENTITIES OF ZDEMO_I_SO IN LOCAL MODE
   ENTITY zdemo_i_so FIELDS ( Vbeln  Auart )
   WITH CORRESPONDING #( keys )
   RESULT data(lt_result).
        LOOP AT lt_result INTO data(ls_result).
        if ls_result-Auart = 'KA'.
        result = VALUE #(
        (
        %tky = ls_result-%tky
        %features-%field-Vbtyp = if_abap_behv=&amp;gt;fc-f-read_only
        ) ).
        ELSE.
        result = VALUE #(
        (
        %tky = ls_result-%tky
        %features-%field-Vbtyp = if_abap_behv=&amp;gt;fc-f-unrestricted
        ) ).
        ENDIF.
        ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After implementing the logic, activate your behavior implementation class. Now, when you refresh your&amp;nbsp; application, the changes will be applied&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758627133505.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318841i9C3E65A60324E488/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758627133505.png" alt="Faizan_khan1_0-1758627133505.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In your application, you can create a few records with different&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; values, such as 'KA' and 'OR'. When you try to edit the record where&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; is 'KA', you will notice that the &lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field is grayed out and you are unable to change its value. However, if you edit a record where&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1758627174853.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318842iD3CAFC6AD77B3851/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1758627174853.png" alt="Faizan_khan1_1-1758627174853.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;AUART&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; is 'OR', the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;VBTYP&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; field will remain editable, allowing you to change its value freely.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758627257369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318867i9986E801A5B8F789/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758627257369.png" alt="Faizan_khan1_0-1758627257369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This &lt;/SPAN&gt;&lt;SPAN class=""&gt;demonstrates&lt;/SPAN&gt;&lt;SPAN class=""&gt; how the field's behavior is dynamically controlled.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Conclusion&amp;nbsp; :&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;The blog post effectively demonstrates how to &lt;/SPAN&gt;&lt;SPAN class=""&gt;dynamically make a field read-only&lt;/SPAN&gt;&lt;SPAN class=""&gt; within the &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP RAP.&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;The core method involves using&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;dynamic feature control&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/dynamically-making-a-field-read-only-in-sap-rap/ba-p/14225542"/>
    <published>2025-10-14T11:19:32.771000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap-event-consume-sap-standard-event-and-trigger-custom-rap-event/ba-p/14241235</id>
    <title>RAP Event: consume SAP standard event and trigger custom RAP event</title>
    <updated>2025-10-14T18:00:00.028000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633627625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;Event-driven architecture (EDA) is an integrated model that detects critical business "events" and responds to them in real time. As modern businesses seek real-time operations and flexible, responsive systems, EDA has become an essential technology.&lt;BR /&gt;Many standard RAP events are provided for the implementation of the event-driven architecture in SAP S/4HANA, but the standard event payload may not meet business requirements and require customization. In particular, there is a use case where SAP standard events are extended with Derived Events for the purpose of filtering by event data and payload completion of standard events.&lt;BR /&gt;Derived Event is available in S/4HANA Cloud, private edition &amp;amp; S/4HANA 2023 / S/4HANA Cloud, public edition Introduced in the 2308 release, this feature allows you to define new events with custom payloads based on existing SAP standard events. This allows you to reuse standard event implementations while creating events with additional fields and filtering criteria that you need for your business.&lt;BR /&gt;SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/derived-events-how-to-trigger-custom-event-from-an-sap-standard-event/ba-p/13955193" target="_blank"&gt;Derived Events- How to Trigger Custom Event from an SAP Standard Event&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;On the other hand, a Derived Event requires that the SAP Standard object to be extended meets the following conditions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The business object containing the referring event must be extensible.&lt;/LI&gt;&lt;LI&gt;The referenced event must be published on the C0 and C1 released RAP BO interfaces&lt;/LI&gt;&lt;LI&gt;The CDS view entity used as the data source for the Derived Event payload must have been released in C1&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Therefore, some objects do not support extensibility with Derived Events in SAP Standard RAP BO. In this case, there may be cases where the requirements that should be solved by Derived Events cannot be realized.&lt;BR /&gt;So, in this blog, we will introduce a workaround approach that enables payload expansion with custom RAP BO for SAP standard events that cannot be extended with Derived Events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437114120"&gt;2. Workaround Solutions&lt;/H1&gt;&lt;P&gt;If Derived Events are not available, a workaround approach that combines Local Event Consumption with custom RAP events can be an effective approach. This approach involves consuming SAP standard events locally (custom ABAP classes) and using them as triggers to raise custom RAP events. By setting the payload of a custom event to meet your business requirements, you can use event filters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760225484634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326000i65E19ECBA8BC68CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760225484634.png" alt="hironobu_nakayama_1-1760225484634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1240600615"&gt;3. Implementation Sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use a non-extensible r_purchaseordertp as the target object to extend the event payload for data changes in a PO document. SAP standard events have a payload of only the purchase order document number, whereas custom events have a purchase order document number and purchase order type as the payload. For more information on Event Binding and channel configuration with Event Mesh, please visit the SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;. Please note that the RAP BO in the implementation sample in this blog does not implement CRUD or save processing other than events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302252548"&gt;(1) Local Consumer (Custom ABAP Class for Local Event Consumption)&lt;/H3&gt;&lt;H5 id="toc-hId-1363904481"&gt;Global class: zcl_event_consump&lt;/H5&gt;&lt;P&gt;In the Global class, the definition FOR EVENTS OF r_purchaseordertp sets the standard events to be consumed.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_event_consump DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR EVENTS OF r_purchaseordertp.

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_event_consump IMPLEMENTATION.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1167390976"&gt;Local class: zcl_event_consump&lt;/H5&gt;&lt;P&gt;The Local class performs additional data retrieval based on the data from the standard event payload consumed to trigger a custom RAP event.&lt;BR /&gt;It is important to note that triggering events is only possible in the RAP framework with a Save Sequence, so you must explicitly change it to Save Sequence by cl_abap_tx=&amp;gt;save( ).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lcl_event_consump DEFINITION INHERITING FROM cl_abap_behavior_event_handler.
  PRIVATE SECTION.
    METHODS:
      consume_changed FOR ENTITY EVENT changed_instances FOR purchaseorder~changed.
ENDCLASS.

CLASS lcl_event_consump IMPLEMENTATION.

  METHOD consume_changed.
    cl_abap_tx=&amp;gt;save(  ).

    DATA lv_potype TYPE mm_purchaseordertype.

    CHECK changed_instances IS NOT INITIAL.

    LOOP AT changed_instances INTO DATA(changed_instance).

      SELECT SINGLE purchaseordertype
      FROM c_purchaseordertp
      INTO _potype
      WHERE purchaseorder = @changed_instance-purchaseorder.

      DATA(et_events) = VALUE zbp_i_purchseorder_test=&amp;gt;tt_events(
        (
        purchaseorder = changed_instance-purchaseorder
        purchaseordertype = lv_potype
        )
      ).

      zbp_i_purchseorder_event=&amp;gt;raise_po_changed_event( it_events = et_events ).

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712712033"&gt;(2) Custom RAP BO (Custom Event)&lt;/H3&gt;&lt;H5 id="toc-hId-774363966"&gt;CDS View: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;In the CDS View, I define only the purchase order.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consume purchase order event'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define root view entity ZI_purchseorder_event as select from I_PurchaseOrder
{
  key PurchaseOrder
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-577850461"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId-381336956"&gt;Behavior Definition: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Custom RAP BO for event triggers does not define the create/update/delete function.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_i_purchseorder_event unique;
strict ( 2 );

define behavior for ZI_purchseorder_event //alias &amp;lt;alias_name&amp;gt;
//persistent table ekko
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  //  create;
  //  update;
  //  delete;
  event purchaseorder_changed parameter ZAB_PO_changed_event;

  field ( readonly ) PurchaseOrder;
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--735379370"&gt;Behavior Implementation (Global class) : &lt;SPAN&gt;zbp_i_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;In the Global class, I define a method for triggering events.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_i_purchseorder_event DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zi_purchseorder_event.

  TYPES tt_events TYPE TABLE FOR EVENT zi_purchseorder_event~purchaseorder_changed.

  PUBLIC SECTION.
        CLASS-METHODS raise_po_changed_event
            IMPORTING it_events TYPE tt_events.

ENDCLASS.

CLASS zbp_i_purchseorder_event IMPLEMENTATION.
METHOD raise_po_changed_event.
  lcl_event_handler=&amp;gt;on_po_changed_event( it_events ).
endmethod.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--931892875"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1128406380"&gt;Behavior Implementation (Local class) : &lt;SPAN&gt;lhc_zi_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;The Local class does not implement save processing, etc., but only implements methods for triggering events.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_purchseorder_event RESULT result.

ENDCLASS.

CLASS lhc_zi_purchseorder_event IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zi_purchseorder_event IMPLEMENTATION.

  METHOD save_modified.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_handler DEFINITION FRIENDS zbp_i_purchseorder_event.
  PUBLIC SECTION.
    CLASS-METHODS on_po_changed_event IMPORTING it_events TYPE zbp_i_purchseorder_event=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_po_changed_event.

    RAISE ENTITY EVENT ZI_purchseorder_event~purchaseorder_changed FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--1324919885"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1521433390"&gt;Abstract Entity: &lt;SPAN&gt;ZAB_PO_changed_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Abstract entity adds a purchase order document type. This results in the payload of the custom RAP event being the purchase order document number and the purchase order document type.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abastract entity for po changed event'
define abstract entity ZAB_PO_changed_event
  //  with parameters parameter_name : parameter_type
{
  PurchaseOrderType : mm_purchaseordertype;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--544334867"&gt;4. Implementation Results&lt;/H1&gt;&lt;P&gt;Modify and save an existing purchase order document from the Manage Purchase Orders (F0842A) app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760229645619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326001iA137C622300D0D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760229645619.png" alt="hironobu_nakayama_0-1760229645619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can receive custom events triggered from S/4HANA in SAP Event Mesh.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760229707438.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326002i776A835D573B8867/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760229707438.png" alt="hironobu_nakayama_1-1760229707438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--740848372"&gt;5. Summary&lt;/H1&gt;&lt;P&gt;When it is not possible to scale with Derived Events in implementing an event-driven architecture, a workaround approach that combines Local Event Consumption with custom RAP events is an effective approach.&lt;BR /&gt;This approach enables custom payloads and filtering capabilities based on business requirements, providing event consumers with the data they need to optimize cross-system integration.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937361877"&gt;References&lt;/H1&gt;&lt;P&gt;SAP Learning：&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/explaining-event-driven-architecture_d02a51bb-1ce4-4c2d-a25d-8b9c9198ffd2" target="_blank" rel="noopener noreferrer"&gt;Explaining Event-Driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/integration-architecture-guide/event-driven-architecture?amp;state=PRODUCTION&amp;amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Event-driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-event-consume-sap-standard-event-and-trigger-custom-rap-event/ba-p/14241235"/>
    <published>2025-10-14T18:00:00.028000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/f4-search-help-not-working-in-application-jobs-fiori-app-in-s4-hana-2023/ba-p/14244453</id>
    <title>F4 Search help not working in Application Jobs fiori app in S4/HANA 2023</title>
    <updated>2025-10-15T09:51:59.199000+02:00</updated>
    <author>
      <name>vimal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3165</uri>
    </author>
    <content>&lt;P&gt;If you are in S/4 HANA 2023 and working with &lt;STRONG&gt;Application jobs&lt;/STRONG&gt; fiori app and trying to put F4 search help to parameters but it's not working then make sure below notes are implemented in your system:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3564773 - Application Jobs: Value help does not working&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3558502 &amp;nbsp; Application Jobs: missing functionality for class based job catalogs in transaction SAPJ&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks,&lt;/P&gt;&lt;P&gt;Vimal&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/f4-search-help-not-working-in-application-jobs-fiori-app-in-s4-hana-2023/ba-p/14244453"/>
    <published>2025-10-15T09:51:59.199000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/a-developer-s-guide-to-building-hybrid-transactional-fiori-apps-with-rap/ba-p/14245208</id>
    <title>A Developer’s Guide to Building Hybrid Transactional Fiori Apps with RAP and Analytical features</title>
    <updated>2025-10-16T01:11:17.894000+02:00</updated>
    <author>
      <name>VijayCR</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/38084</uri>
    </author>
    <content>&lt;P&gt;In many SAP S/4HANA implementations, particularly those involving Fiori List Reports, business users often require a unified experience that combines &lt;STRONG&gt;transactional capabilities ,&lt;/STRONG&gt;such as executing actions on records ,with &lt;STRONG&gt;analytical insights&lt;/STRONG&gt; like grouping, subtotals, and totals. This is especially relevant in operational reporting scenarios where decisions are made directly from the data view.&lt;BR /&gt;These hybrid use cases are common in operational reporting, where users need to analyze data and take immediate action within the same interface.However, when using &lt;STRONG&gt;analytical CDS views&lt;/STRONG&gt; (annotated with &lt;CODE&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.query: true&lt;/CODE&gt;), SAP RAP imposes architectural constraints that prevent the direct definition of &lt;STRONG&gt;actions&lt;/STRONG&gt; within the same view. This limitation can be a bottleneck when designing intelligent, user-centric applications.&lt;/P&gt;&lt;P&gt;To overcome this challenge, the following approach is recommended:&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Separate OData Services for Analytics and Transactions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Analytical Service&lt;/STRONG&gt;: Built using a CDS view with &lt;CODE&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/15206"&gt;@analytics&lt;/a&gt;.query: true&lt;/CODE&gt;, enabling features like grouping, subtotals, and totals.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Transactional Service&lt;/STRONG&gt;: Developed using RAP with behavior definitions to support actions, determinations, and validations. This view excludes analytical annotations to maintain RAP compatibility.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;UI5 Extension Logic for Action Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use &lt;STRONG&gt;SAPUI5 extensions&lt;/STRONG&gt; to wire up action buttons in the Fiori List Report.&lt;/LI&gt;&lt;LI&gt;These buttons trigger transactional logic from the RAP-based service, even though the data is displayed via the analytical service.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Workaround for Filtering on Aggregated Fields&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Since analytical views often aggregate fields (e.g., total amounts), filtering directly on these fields may not work as expected.&lt;/LI&gt;&lt;LI&gt;Introduce &lt;STRONG&gt;dummy fields&lt;/STRONG&gt; or helper logic to enable meaningful filtering in the UI.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach allows developers to deliver &lt;STRONG&gt;intelligent Fiori applications&lt;/STRONG&gt; that combine the best of both worlds: &lt;STRONG&gt;real-time analytical insights&lt;/STRONG&gt; and &lt;STRONG&gt;direct transactional capabilities&lt;/STRONG&gt;. It supports business scenarios such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Mass approvals with KPI-based filtering&lt;/LI&gt;&lt;LI&gt;Sales performance analysis with direct follow-up actions&lt;/LI&gt;&lt;LI&gt;Inventory grouping with replenishment triggers&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By decoupling analytics and actions at the service level and integrating them at the UI layer, you can build scalable, maintainable, and user-friendly applications that align with SAP’s clean core principles.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Analytical CDS View (OData V2 or V4)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You’ve correctly defined analytical views such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPRREQ_TOTAL&lt;/CODE&gt;: Aggregates planned costs using &lt;CODE&gt;sum(bpja.wtjhr)&lt;/CODE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPRREQ_COSTS&lt;/CODE&gt;: Joins totals with individual cost records&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Z_I_APPROPRIATEREQUEST&lt;/CODE&gt;: Combines investment request data with ledger and object info&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Ledger Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_LEDGER as select from tka01
inner join tbp0l on tbp0l.waers = tka01.waers
and tbp0l.periv = tka01.lmona
{

key tka01.kokrs as Kokrs,
tbp0l.periv as Periv,
tbp0l.waers as Waers,
tbp0l.lednr as Lednr

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Costs Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_COSTS
as select from bpja
inner join Z_I_APPRREQ_TOTAL on Z_I_APPRREQ_TOTAL.Ledger = bpja.lednr
and Z_I_APPRREQ_TOTAL.ObjectNumber = bpja.objnr

{


key bpja.lednr as Ledger,
key bpja.objnr as ObjectNumber,
key bpja.gjahr as FiscalYear,
// @semantics.currencycode
bpja.twaer as Currency,
@Semantics.amount.currencyCode : 'Currency'
bpja.wtjhr as PlancostsYear,
Z_I_APPRREQ_TOTAL.Currency as Currency_Code,
@Semantics.amount.currencyCode : 'Currency_Code'
Z_I_APPRREQ_TOTAL.PlancostsYear as PlancostsTotal
}

where
bpja.wrttp = '40';&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Appropriate Request Costs Details.'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
define view entity Z_I_APPRREQ_TOTAL as select from bpja

{

key bpja.lednr as Ledger,
key bpja.objnr as ObjectNumber,

bpja.twaer as Currency ,
@Semantics.amount.currencyCode : 'Currency'
sum(bpja.wtjhr) as PlancostsYear

}
where bpja.wrttp = '40'
group by lednr,objnr,bpja.twaer;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'IMAK Details'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@Analytics.dataCategory: #CUBE
define view entity Z_I_APPROPRIATEREQUEST
as select from imak
association [0..1] to imakpi on imakpi.posnr = imak.posnr
association [0..1] to imakt on imakt.posnr = imak.posnr
association [0..1] to imav on imav.posnr = imak.posnr
association [0..1] to Z_I_APPRREQ_LEDGER on Z_I_APPRREQ_LEDGER.Kokrs = imak.vkokrs
{
key
cast(imak.posnr as abap.char( 12 )) as Appr_Request,
imak.abukrs as CompanyCode,
imak.gjahr as FiscalYear,
imakpi.izwek as Izwek,
imakt.txt50 as Txt50,
imav.objnr as ObjectNumber,
Z_I_APPRREQ_LEDGER.Lednr as Ledger,
concat('IQ',imak.posnr) as IQOBJNR,

erdat as Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-2020994856"&gt;&amp;nbsp;&lt;STRONG&gt;Consumption CDS View&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;This consumption view is designed to support a &lt;STRONG&gt;Fiori List Report&lt;/STRONG&gt; that displays investment request data with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Aggregated planned costs per fiscal year and overall&lt;/LI&gt;&lt;LI&gt;Currency semantics for proper formatting&lt;/LI&gt;&lt;LI&gt;Additional Filters for amounts as the original ones does not support in analytical views.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Bericht zur Freigabe der Maßnahmenanforderungen'

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED

@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@UI.headerInfo.typeName: 'Freigabeliste'
@UI.headerInfo.typeNamePlural: 'Freigabeliste'


define root view entity ZAPPR_APPRLLIST_MAIL
as select from Z_I_APPROPRIATEREQUEST
association [0..1] to Z_I_APPRREQ_COSTS as Investcosts on Investcosts.Ledger = Z_I_APPROPRIATEREQUEST.Ledger
and Investcosts.ObjectNumber = Z_I_APPROPRIATEREQUEST.ObjectNumber
and Investcosts.FiscalYear = Z_I_APPROPRIATEREQUEST.FiscalYear

{
@UI.facet : [
{
id : 'AppropRequest',
purpose : #STANDARD,
type : #IDENTIFICATION_REFERENCE,
label : 'Maßnahmenanforderung',
position : 10 }
]

@UI : {
lineItem : [{position: 10} ],

identification : [{position: 10 }],
selectionField : [{position: 10}]
}
@EndUserText: { label: 'Investitionsantragsnummer'}
key Z_I_APPROPRIATEREQUEST.Appr_Request,
@UI : {
lineItem : [{position: 20}],
identification : [{ position: 20 }],
selectionField : [{position: 20}]
}
@EndUserText: { label: 'Buchungskreis'}
Z_I_APPROPRIATEREQUEST.CompanyCode,

@UI : {
lineItem : [{position: 50}],
identification : [{position: 50}],
selectionField : [{position: 50}]
}
@EndUserText: { label: 'Bezeichnung'}
Z_I_APPROPRIATEREQUEST.Txt50,



Investcosts.Currency,
@UI : {
lineItem : [{position: 60}],
identification : [{position: 60}],
selectionField : [{position: 60}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR'}
@Semantics.amount.currencyCode : 'Currency'
@Aggregation.default : #SUM
Investcosts.PlancostsYear as TotalPlancostsYear,
@UI : {
// lineItem : [{position: 70}],
identification : [{position: 70}],
selectionField : [{position: 70}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR '}
@Semantics.amount.currencyCode : 'Currency'

Investcosts.PlancostsYear as TotalPlancostsYear1,


Investcosts.Currency_Code,
@UI : {
lineItem : [{position: 80}],
identification : [{position: 80}],
selectionField : [{position: 80}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR'}
@Aggregation.default : #SUM
Investcosts.PlancostsTotal as PlancostsTotalSum,
@UI : {

identification : [{position: 90}],
selectionField : [{position: 90}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR '}

Investcosts.PlancostsTotal as PlancostsTotalSum1,
@UI : {
selectionField : [{position: 100}] }
@Consumption.filter.selectionType: #INTERVAL

Z_I_APPROPRIATEREQUEST.Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once done create a Service Behaviour and Definition for the above CDS Entity .&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;CDS entity with Action Service&lt;/STRONG&gt;&lt;BR /&gt;RAP-Based CDS View with Behavior Definition with Action&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_appr_appremail unique;
strict ( 1 );

define behavior for ZAPPR_APPREMAIL //alias &amp;lt;alias_name&amp;gt;
persistent table ZAPPR_APPREMAIL
lock master
authorization master ( instance )

{
action Email parameter Z_APPROVER3 result [1] $self;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Abstract entity for the comments&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Approval 3 Input Details'
define abstract entity Z_APPROVER3
// with parameters parameter_name : parameter_type
{
comments : char255;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Behavior Definition code:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zappr_appremail DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.
    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zappr_appremail RESULT result.
    METHODS email FOR MODIFY
      IMPORTING keys FOR ACTION zappr_appremail~email RESULT result.
ENDCLASS.

CLASS lhc_zappr_appremail IMPLEMENTATION.
  METHOD get_instance_authorizations.
  ENDMETHOD.
  METHOD email.
 READ ENTITIES OF zappr_appremail IN LOCAL MODE
  ENTITY zappr_appremail
    FIELDS ( appr_request )
  WITH CORRESPONDING #( keys )
  RESULT DATA(lt_app_data).
    DATA: lv_recipient TYPE adr6-smtp_addr.
    DATA: lv_subject TYPE string.
    DATA: lv_content TYPE string.
    DATA : email_template_name TYPE smtg_tmpl_id VALUE 'ZEMAIL_APPROVAL'.
    DATA(email_api) =
  cl_smtg_email_api=&amp;gt;get_instance(
          iv_template_id = email_template_name  ).
    DATA(lv_html_text) = VALUE string( ).

    DATA(i_cds_key) = VALUE if_smtg_email_template=&amp;gt;ty_gt_data_key( ).
  " Get the RawHTML Content and Replace the palceholder with the INV Details in the email
    email_api-&amp;gt;render( EXPORTING
                                iv_language = sy-langu
                                  it_data_key =  i_cds_key
                              IMPORTING
                                ev_subject = DATA(lv_subject_tmp)
                                ev_body_html = DATA(lv_body_html) ).

    LOOP AT keys INTO DATA(appdetails) .
   lv_content = |{ appdetails-%param-comments }|.
    exit.
  endloop.

REPLACE 'ZCOMMENTS' WITH lv_content INTO lv_body_html.
lv_subject = lv_subject_tmp.
 DATA(lv_body_html_soli) = cl_bcs_convert=&amp;gt;string_to_soli( lv_body_html ).  " Build HTML for Sending
    DATA(lo_multipart_ref) = NEW cl_gbt_multirelated_service( ).
    lo_multipart_ref-&amp;gt;set_main_html(
        EXPORTING
          content     = lv_body_html_soli
          description = '' ).


TRY.

DATA(o_document) = cl_document_bcs=&amp;gt;create_document( i_type    = 'HTM'
 i_text    = lv_body_html_soli
 i_subject = CONV so_obj_des( lv_subject ) ).
* Sendrequest erzeugen
        DATA(o_send_request) = cl_bcs=&amp;gt;create_persistent( ).
* Email-Subject festlegen, ip_subject ist vom Typ String
        o_send_request-&amp;gt;set_message_subject( ip_subject = lv_subject ).
* Die Mail an den Sendrequest hängen
        o_send_request-&amp;gt;set_document( o_document ).
        o_send_request-&amp;gt;set_sender( o_sender ).
        DATA o_recipient TYPE REF TO cl_cam_address_bcs .
        LOOP AT recipients ASSIGNING FIELD-SYMBOL(&amp;lt;fs_email_recipient&amp;gt;).
          o_send_request-&amp;gt;add_recipient( i_recipient  = cl_cam_address_bcs=&amp;gt;create_internet_address( &amp;lt;fs_email_recipient&amp;gt;-email ) i_express = abap_true ).
        ENDLOOP.
* Sofort senden
        o_send_request-&amp;gt;set_send_immediately( abap_true ).
* Dokument senden
        IF o_send_request-&amp;gt;send( i_with_error_screen = abap_true ) = abap_true.
        ELSE.
        ENDIF.
      CATCH cx_root INTO DATA(e_text).
    ENDTRY.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now create CDS Entity with Annotation for action to Trigger transactional actions (e.g., sending approval emails) directly from the report&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Bericht zur Freigabe der Maßnahmenanforderungen'

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED

@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
serviceQuality: #X,
sizeCategory: #S,
dataClass: #MIXED
}
@UI.headerInfo.typeName: 'Freigabeliste'
@UI.headerInfo.typeNamePlural: 'Freigabeliste'
define root view entity ZAPPR_APPREMAIL
as select from Z_I_APPROPRIATEREQUEST
association [0..1] to Z_I_APPRREQ_COSTS as Investcosts on Investcosts.Ledger = Z_I_APPROPRIATEREQUEST.Ledger
and Investcosts.ObjectNumber = Z_I_APPROPRIATEREQUEST.ObjectNumber
and Investcosts.FiscalYear = Z_I_APPROPRIATEREQUEST.FiscalYear
association [0..1] to Z_I_APPRREQ_STATUS as ApprStatus on ApprStatus.Objnr = Z_I_APPROPRIATEREQUEST.IQOBJNR
and ApprStatus.spras = $session.system_language

{
@UI.facet : [
{
id : 'AppropRequest',
purpose : #STANDARD,
type : #IDENTIFICATION_REFERENCE,
label : 'Maßnahmenanforderung',
position : 10 }
]

@UI : {
lineItem : [{position: 10} ,{ type: #FOR_ACTION , dataAction: 'Email' ,label: 'FraigabeListe Email Senden' , invocationGrouping: #CHANGE_SET
}],

identification : [{position: 10 }],
selectionField : [{position: 10}]
}
@EndUserText: { label: 'Investitionsantragsnummer'}
key Z_I_APPROPRIATEREQUEST.Appr_Request,
@UI : {
lineItem : [{position: 20}],
identification : [{ position: 20 }],
selectionField : [{position: 20}]
}
@EndUserText: { label: 'Buchungskreis'}
Z_I_APPROPRIATEREQUEST.CompanyCode,



@UI : {
lineItem : [{position: 30}],
identification : [{position: 50}],
selectionField : [{position: 50}]
}
@EndUserText: { label: 'Bezeichnung'}
Z_I_APPROPRIATEREQUEST.Txt50,

@UI : {
lineItem : [{position: 40}],
identification : [{position: 40}],
selectionField : [{position: 40}] }
@EndUserText: { label: 'Status'}
ApprStatus.txt30 as Statustext,

Investcosts.Currency,
@UI : {
lineItem : [{position: 50}],
identification : [{position: 50}],
selectionField : [{position: 50}] }
@EndUserText: { label: 'Geplante Kosten [aktuelles GJ] in EUR'}
@Semantics.amount.currencyCode : 'Currency'
// @DefaultAggregation: #SUM
Investcosts.PlancostsYear as TotalPlancostsYear,
Investcosts.Currency_Code,
@UI : {
lineItem : [{position: 60}],
identification : [{position: 60}],
selectionField : [{position: 60}] }
@Semantics.amount.currencyCode : 'Currency_Code'
@EndUserText: { label: 'Geplante Kosten [GESAMT] in EUR'}
// @Aggregation.default : #SUM
Investcosts.PlancostsTotal as PlancostsTotalSum,
@UI : {
selectionField : [{position: 70}] }
Z_I_APPROPRIATEREQUEST.Erdat

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now genrate the Service definition and service&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1695398632"&gt;&lt;STRONG&gt;Create the Fiori List Report App&lt;/STRONG&gt;&lt;/H3&gt;&lt;H4 id="toc-hId-1627967846"&gt;In SAP Business Application Studio:&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;Create a new project from template&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;List Report Object Page&lt;/STRONG&gt;&amp;nbsp; with &lt;STRONG&gt;analytical table&lt;/STRONG&gt; and select the Odata entity generated from the &lt;STRONG&gt;aggregated Service&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;In the Manifest.json add additional Odata Service or use guided development&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="VijayCR_0-1760567958925.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328101i733541505FD7047B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_0-1760567958925.png" alt="VijayCR_0-1760567958925.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Using the&amp;nbsp;guided development&amp;nbsp; add a action as shwon below .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_1-1760568663616.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328106i00D01431AC68CC78/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_1-1760568663616.png" alt="VijayCR_1-1760568663616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns:core='sap.ui.core'
    xmlns='sap.m'&amp;gt;

 &amp;lt;Dialog class="sapUiSizeCompact"
        xmlns="sap.m"
        xmlns:ca="sap.ca.ui"
        xmlns:layout="sap.ui.layout"
        xmlns:form="sap.ui.layout.form"
        xmlns:core="sap.ui.core"
        xmlns:unified="sap.ui.unified" title="{i18n&amp;gt;remarks}" contentWidth="200px" id="idremarks"&amp;gt;
        &amp;lt;content &amp;gt;
            &amp;lt;form:SimpleForm columnsL="1" columnsM="1" maxContainerCols="1" layout="ResponsiveGridLayout" id="formexlstat" editable="true"&amp;gt;
                &amp;lt;form:content &amp;gt;
                    &amp;lt;Label id="remarkslabel" text="{i18n&amp;gt;remarks}"/&amp;gt;
                    &amp;lt;Input id="idremarksinput" type="Text"/&amp;gt;
                &amp;lt;/form:content&amp;gt;
            &amp;lt;/form:SimpleForm&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;beginButton &amp;gt;
            &amp;lt;Button text="{i18n&amp;gt;idEmail}" press="._onSend" id="idEmail"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button text="{i18n&amp;gt;Cancel}" press="._onCancel" id="idcancelbtn"/&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Handle the action using the below controller code&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/m/MessageToast"
], function(MessageToast) {
    'use strict';
    return {
        onInit: function(){
           this.loadDialogFragment();
            this.AnalyticalTable = this.getView().byId('apprsendemail::sap.suite.ui.generic.template.ListReport.view.ListReport::apprListEmail--analyticalTable') 
            //this.getView(this.getView().getContent()[0].getContent().getItems()[0].getId())
        },
            _onCancel: function(oEvent){
        
            var oModel = this.getView().getModel();
            this._oDialog.close();
            if (this._oDialog) {
                this._oDialog.destroy();
                this._oDialog = null; // Important to nullify the reference
            }
          
          
               
        },
        _onSend: function (oEvent) {
            //var oInput = this.byId("inputParam");
           // var sValue = oInput.getValue();
        
            // Get selected items from the Analytical List Table
            var oTable = this.getView().byId("apprsendemail::sap.suite.ui.generic.template.ListReport.view.ListReport::apprListEmail--analyticalTable"); // Replace with your table ID
            var aSelectedIndices = oTable._getSelectionPlugin().getSelectedIndices();
            var aSelectedItems = [];
        
            aSelectedIndices.forEach(function (iIndex) {
                var oContext = oTable.getContextByIndex(iIndex);
                aSelectedItems.push(oContext.getObject());
            });
        
            // Call the backend action with the selected items and parameter
            this._callBackendAction(aSelectedItems);
            oTable.getModel().refresh(true);
            // Close the dialog
            this._oDialog.close();
            if (this._oDialog) {
                this._oDialog.destroy();
                this._oDialog = null; // Important to nullify the reference
            }
        },
        sendEmailList: function(oEvent) {
 //            MessageToast.show("Custom handler invoked.");
            if (!this._oDialog) {
                this._oDialog = sap.ui.xmlfragment("apprsendemail.ext.fragment.EmailListDialog", this);
                this.getView().addDependent(this._oDialog);
            }
            this._oDialog.open();
        },
        loadDialogFragment: function(){
            if (!this.ReleaseListDialog) {
                this.oDialog = this.loadFragment({
                    name: "apprsendemail.ext.fragment.EmailListDialog",
                    controller: this
                });
            }
        },
        _callBackendAction:  async function (aSelectedItems) {
            var oModel = this.getOwnerComponent().getModel("emailAction");

            var sPath = "/Email"; // Adjust the path as needed
            var mParameters = {
                batchGroupId: "myChangeset",
                changeSetId: "myChangeset"
            };
           
            var comments =     sap.ui.getCore().byId("idremarksinput").getValue();
            // Example of calling the backend for each selected item
            aSelectedItems.forEach(function (oItem) {
                oModel.callFunction(sPath, {
                    method: "POST",
                    mParameters: mParameters,
                    urlParameters: {
                        "Appr_Request": oItem.Appr_Request,
                        "comments" : comments,
                    },
                  
                });
            });
            //Submitting the function import batch call
oModel.submitChanges({
	batchGroupId: "myChangeset", //Same as the batch group id used previously

    success: function (oData) {
  
//      var  oTable = this.getView().byId("releaseapprreq::sap.suite.ui.generic.template.ListReport.view.ListReport::appropriatelist--analyticalTable");
 //       oTable._getSelectionPlugin().getModel().refresh(true);
        // Handle success
        MessageToast.show("E-Mail erfolgreich gesendet");
    }.bind(this),
    error: function (oError) {
        // Handle error
        MessageToast.show("E-Mail wurde nicht erfolgreich gesendet");
    }

});
        },
        
    };
});
    &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once done deploy the app and this will be available in the Workzone and you see the app showing totals and also actions as shown below :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_2-1760569240360.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328109iC19213226438FE29/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_2-1760569240360.png" alt="VijayCR_2-1760569240360.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VijayCR_3-1760569271440.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328110i8A0D61FCD51356BE/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="VijayCR_3-1760569271440.png" alt="VijayCR_3-1760569271440.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The approach outlined in this guide demonstrates how to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Leverage CDS view annotations for &lt;STRONG&gt;grouping, subtotals, and totals&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Integrate &lt;STRONG&gt;status tracking&lt;/STRONG&gt; and multilingual support&lt;/LI&gt;&lt;LI&gt;Enable &lt;STRONG&gt;transactional actions&lt;/STRONG&gt; like sending approval emails via RAP behavior&lt;/LI&gt;&lt;LI&gt;Maintain a clean architecture by &lt;STRONG&gt;decoupling analytics and actions&lt;/STRONG&gt; at the service level and integrating them at the UI layer&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This design not only enhances &lt;STRONG&gt;user productivity&lt;/STRONG&gt; but also aligns with SAP’s &lt;STRONG&gt;clean core principles&lt;/STRONG&gt;, ensuring scalability, maintainability, and future readiness of your S/4HANA applications.&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-right" style="text-align : right;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/a-developer-s-guide-to-building-hybrid-transactional-fiori-apps-with-rap/ba-p/14245208"/>
    <published>2025-10-16T01:11:17.894000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/fiori-elements-list-report%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89/ba-p/14240934</id>
    <title>Fiori Elements List Reportでのファイルアップロード</title>
    <updated>2025-10-17T18:00:00.031000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604560"&gt;1. はじめに&lt;/H1&gt;&lt;P&gt;このブログでは、SAP Fiori ElementsのList Reportで、各行（アイテム）に対して“添付ファイル“のような項目を持たせ、行単位でファイルのアップロード・参照・削除の実現方法を紹介します。&lt;BR /&gt;List Reportのデータソースは、ABAP RESTful Application Programming Model（RAP）フレームワークを使用して開発したOData V4サービスを対象とし、RAP開発においてファイルアップロードを実現するために必要な実装についての内容となっています。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091055"&gt;2. ファイルアップロード実装のポイント&lt;/H1&gt;&lt;P&gt;ファイルアップロード実装においては、①ファイル格納に必要なテーブル項目の定義、および、②ファイルオブジェクト格納用項目とファイルタイプ格納用項目への適切なアノテーション付与の2点が必要となります。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;ファイル格納に必要なテーブル項目の定義&lt;P&gt;カスタムテーブルに以下の3つの項目を設定します（項目名は、サンプルです。）&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;ファイルオブジェクト格納用項目（ファイルサイズを指定しない場合、abap.rawstring(0)とする）&lt;UL&gt;&lt;LI&gt;例：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;ファイル名格納用項目&lt;UL&gt;&lt;LI&gt;例：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;ファイルタイプ格納用項目&lt;UL&gt;&lt;LI&gt;例：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;CDS Viewでのファイルオブジェクト格納用項目とファイルタイプ格納用項目への適切なアノテーション付与&lt;UL&gt;&lt;LI&gt;ファイルオブジェクト格納用項目&lt;UL&gt;&lt;LI&gt;例：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;ファイルタイプ格納用項目&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577550"&gt;3. 実装例&lt;/H1&gt;&lt;P&gt;本ブログでは、RAP開発の簡略化のため、RAP Generatorを使用します。RAP Generatorは、カスタムテーブルからCDS ViewやBehavior Definition等のRAP オブジェクト群をウィザードによる設定のみで生成可能なツールです。RAP Generator を利用して RAP オブジェクトを生成する場合、ドラフト機能を持つ更新処理（Managed Runtime）に対応したサービスが生成されます。そのため、テーブル定義にドラフト機能や更新処理に利用するための必須項目を定義している必要があります。RAP Generatorについては、以下のSAP Helpをご確認ください。&lt;/P&gt;&lt;P&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;以下の実装手順は、&lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;のサンプルをベースとした実装例となります。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229483"&gt;1. RAP Generatorによるオブジェクトを格納するためのパッケージを作成します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105715978"&gt;2. １で作成したパッケージ内にカスタムテーブルを作成します。&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202473"&gt;3. RAP Generatorを実行し、ウィザードに沿って設定します。&lt;/H3&gt;&lt;P&gt;対象のカスタムテーブルを右クリック→”Generate ABAP Repository Objects…” で実行&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;サービスタイプの選択&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;生成オブジェクト格納用パッケージの選択&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;生成されるオブジェクトを確認し、必要に応じて名称変更やエイリアス名を設定&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712688968"&gt;4. 生成されたデータモデル（CDS View）へファイルアップロードのためのアノテーションを追加し、有効化します。&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175463"&gt;5. サービスバインディングを公開します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319661958"&gt;6. エンティティを選択して、プレビューします。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148453"&gt;7. “Create”ボタンからデータの登録およびファイルのアップロードを実行します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209593"&gt;4. まとめ&lt;/H1&gt;&lt;P&gt;上記の実装により、ABAP RESTful Application Programming Model（RAP）を用いたOData V4サービスを利用し、SAP Fiori ElementsのList Reportで各行（アイテム）ごとに“添付ファイル”項目を持たせ、行単位でファイルのアップロード・参照・削除を実現することが可能です。是非ご活用下さい。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696088"&gt;参考情報&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/fiori-elements-list-report%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89/ba-p/14240934"/>
    <published>2025-10-17T18:00:00.031000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88-sap%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E6%B6%88%E8%B2%BB%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC/ba-p/14241240</id>
    <title>RAPイベント：SAP標準イベントの消費とカスタムRAPイベントのトリガー</title>
    <updated>2025-10-18T18:00:00.033000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633627651"&gt;1. はじめに&lt;/H1&gt;&lt;P&gt;イベント駆動アーキテクチャ（&lt;SPAN&gt;EDA&lt;/SPAN&gt;）は、ビジネスにおける重要な“イベント”を検出し、リアルタイムで対応する統合モデルです。現代の企業がリアルタイム運用と柔軟で応答性の高いシステムを求める中で、&lt;SPAN&gt;EDA&lt;/SPAN&gt;は不可欠な技術となっています。&lt;BR /&gt;SAP S/4HANAにおけるイベント駆動アーキテクチャの実装において、標準&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントが多数提供されていますが、標準イベントのペイロードでは、業務要件に対応できず、カスタマイズが必要となる場合があります。特に、イベントデータによるフィルタリングや標準イベントのペイロード補完を目的として、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントを&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;により拡張するユースケースがございます。&lt;BR /&gt;Derived Eventは、&lt;SPAN&gt;S/4HANA Cloud, private edition &amp;amp; S/4HANA 2023 / S/4HANA Cloud, public edition 2308&lt;/SPAN&gt;リリースで導入された機能で、既存の&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントをベースに、カスタムペイロードを持つ新しいイベントを定義できる機能です。これにより、標準イベントの実装を再利用しながら、業務に必要な追加フィールドやフィルタリング条件を適用したイベントを作成することが可能になります。&lt;BR /&gt;SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/derived-events-how-to-trigger-custom-event-from-an-sap-standard-event/ba-p/13955193" target="_blank"&gt;Derived Events- How to Trigger Custom Event from an SAP Standard Event&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;一方、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;は、拡張対象の&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準オブジェクトが以下の条件を満たしている必要があります。&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;参照元イベントを含むビジネスオブジェクトが拡張可能&lt;SPAN&gt;(extensible)&lt;/SPAN&gt;であること&lt;/LI&gt;&lt;LI&gt;参照されるイベントが&lt;SPAN&gt;C0&lt;/SPAN&gt;および&lt;SPAN&gt;C1&lt;/SPAN&gt;リリースされた&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;インターフェースで公開されている必要があること&lt;/LI&gt;&lt;LI&gt;Derived Eventのペイロードのデータソースとして使用される&lt;SPAN&gt;CDS&lt;/SPAN&gt;ビューエンティティが&lt;SPAN&gt;C1&lt;/SPAN&gt;リリースされている必要があること&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;そのため、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;では、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張に対応していないオブジェクトも存在します。この場合、本来であれば&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;で解決できるはずの要件が実現できないケースが発生します。&lt;BR /&gt;そこで本ブログでは、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張が不可能な&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントに対して、カスタム&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;によるペイロードの拡張を実現するワークアラウンドアプローチについて紹介します。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437114146"&gt;2. ワークアラウンドソリューション&lt;/H1&gt;&lt;P&gt;Derived Eventが使用できない場合、&lt;SPAN&gt;Local Event Consumption&lt;/SPAN&gt;とカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを組み合わせたワークアラウンドアプローチが有効な手段となります。このアプローチは、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントをローカル（カスタム&lt;SPAN&gt;ABAP&lt;/SPAN&gt;クラス）で消費し、それをトリガーとしてカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを発生させる手法です。カスタムイベントのペイロードを業務要件に合わせたペイロードとすることで、イベントフィルタの利用等が可能となります。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760225484634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326000i65E19ECBA8BC68CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760225484634.png" alt="hironobu_nakayama_1-1760225484634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1240600641"&gt;3. 実装サンプル&lt;/H1&gt;&lt;P&gt;本ブログでは、拡張不可な&lt;SPAN&gt;r_purchaseordertp&lt;/SPAN&gt;を対象オブジェクトとし、購買発注伝票のデータ変更に対するイベントペイロードの拡張を実現します。&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントでは、購買発注伝票番号のみのペイロードあるのに対し、カスタムイベントでは、購買発注伝票番号と購買発注伝票タイプをペイロードとします。Event Bindingおよび&lt;SPAN&gt;Event Mesh&lt;/SPAN&gt;とのチャンネル設定等は、&lt;SPAN&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312&lt;/A&gt; &lt;/SPAN&gt;をご確認ください。本ブログの実装サンプルでの&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;では、イベント以外の&lt;SPAN&gt;CRUD&lt;/SPAN&gt;や保存等の処理は、実装していない点にご注意ください。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302252574"&gt;(1) Local Consumer (ローカルイベントハンドリングのためのカスタムABAPクラス)&lt;/H3&gt;&lt;H5 id="toc-hId-1363904507"&gt;グローバルクラス: zcl_event_consump&lt;/H5&gt;&lt;P&gt;グローバルクラスでは、&lt;SPAN&gt;FOR EVENTS OF r_purchaseordertp&lt;/SPAN&gt;の定義により、消費する標準イベントを設定します。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_event_consump DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR EVENTS OF r_purchaseordertp.

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_event_consump IMPLEMENTATION.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1167391002"&gt;ローカルクラス: zcl_event_consump&lt;/H5&gt;&lt;P&gt;ローカルクラスでは、消費した標準イベントのペイロードのデータをもとに追加のデータ取得を行い、カスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントをトリガーします。イベントのトリガーは、&lt;SPAN&gt;RAP&lt;/SPAN&gt;フレームワークにおいて、&lt;SPAN&gt;Save Sequence&lt;/SPAN&gt;でのみ可能なため、&lt;SPAN&gt;cl_abap_tx=&amp;gt;save(&amp;nbsp; ). &lt;/SPAN&gt;により、明示的に&lt;SPAN&gt;Save Sequence&lt;/SPAN&gt;に変更する必要がある点に注意が必要です。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lcl_event_consump DEFINITION INHERITING FROM cl_abap_behavior_event_handler.
  PRIVATE SECTION.
    METHODS:
      consume_changed FOR ENTITY EVENT changed_instances FOR purchaseorder~changed.
ENDCLASS.

CLASS lcl_event_consump IMPLEMENTATION.

  METHOD consume_changed.
    cl_abap_tx=&amp;gt;save(  ).

    DATA lv_potype TYPE mm_purchaseordertype.

    CHECK changed_instances IS NOT INITIAL.

    LOOP AT changed_instances INTO DATA(changed_instance).

      SELECT SINGLE purchaseordertype
      FROM c_purchaseordertp
      INTO _potype
      WHERE purchaseorder = @changed_instance-purchaseorder.

      DATA(et_events) = VALUE zbp_i_purchseorder_test=&amp;gt;tt_events(
        (
        purchaseorder = changed_instance-purchaseorder
        purchaseordertype = lv_potype
        )
      ).

      zbp_i_purchseorder_event=&amp;gt;raise_po_changed_event( it_events = et_events ).

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712712059"&gt;(2) Custom RAP BO (Custom Event)&lt;/H3&gt;&lt;H5 id="toc-hId-774363992"&gt;CDS View: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;CDS Viewでは、購買発注伝票番号のみ定義しています。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consume purchase order event'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define root view entity ZI_purchseorder_event as select from I_PurchaseOrder
{
  key PurchaseOrder
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-577850487"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId-381336982"&gt;Behavior Definition: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;イベントトリガのためのカスタム&lt;SPAN&gt;RAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;BO&lt;/SPAN&gt;では、&lt;SPAN&gt;create / update / delete &lt;/SPAN&gt;機能を定義していません。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_i_purchseorder_event unique;
strict ( 2 );

define behavior for ZI_purchseorder_event //alias &amp;lt;alias_name&amp;gt;
//persistent table ekko
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  //  create;
  //  update;
  //  delete;
  event purchaseorder_changed parameter ZAB_PO_changed_event;

  field ( readonly ) PurchaseOrder;
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--735379344"&gt;Behavior Implementation (Global class) : &lt;SPAN&gt;zbp_i_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;グローバルクラスでは、イベントトリガー用のメソッドを定義します。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_i_purchseorder_event DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zi_purchseorder_event.

  TYPES tt_events TYPE TABLE FOR EVENT zi_purchseorder_event~purchaseorder_changed.

  PUBLIC SECTION.
        CLASS-METHODS raise_po_changed_event
            IMPORTING it_events TYPE tt_events.

ENDCLASS.

CLASS zbp_i_purchseorder_event IMPLEMENTATION.
METHOD raise_po_changed_event.
  lcl_event_handler=&amp;gt;on_po_changed_event( it_events ).
endmethod.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--931892849"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1128406354"&gt;Behavior Implementation (Local class) : &lt;SPAN&gt;lhc_zi_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;ローカルクラスでは、保存処理等は実装せず、イベントトリガー用のメソッドのみ実装しています。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_purchseorder_event RESULT result.

ENDCLASS.

CLASS lhc_zi_purchseorder_event IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zi_purchseorder_event IMPLEMENTATION.

  METHOD save_modified.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_handler DEFINITION FRIENDS zbp_i_purchseorder_event.
  PUBLIC SECTION.
    CLASS-METHODS on_po_changed_event IMPORTING it_events TYPE zbp_i_purchseorder_event=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_po_changed_event.

    RAISE ENTITY EVENT ZI_purchseorder_event~purchaseorder_changed FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--1324919859"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1521433364"&gt;Abstract Entity: &lt;SPAN&gt;ZAB_PO_changed_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Abstract entityにより、購買発注伝票タイプを追加しています。これにより、カスタムRAPイベントのペイロードは、購買発注伝票番号と購買発注伝票タイプとなります。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abastract entity for po changed event'
define abstract entity ZAB_PO_changed_event
  //  with parameters parameter_name : parameter_type
{
  PurchaseOrderType : mm_purchaseordertype;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--544334841"&gt;4. 実装結果&lt;/H1&gt;&lt;P&gt;Manage Purchase Orders (F0842A) アプリから既存の購買発注伝票を変更して、保存します。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760229645619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326001iA137C622300D0D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760229645619.png" alt="hironobu_nakayama_0-1760229645619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Event Meshで&lt;SPAN&gt;S/4HANA&lt;/SPAN&gt;からトリガされたカスタムイベントを受け取ることができます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760229707438.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326002i776A835D573B8867/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760229707438.png" alt="hironobu_nakayama_1-1760229707438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--740848346"&gt;5. まとめ&lt;/H1&gt;&lt;P&gt;イベント駆動アーキテクチャの実現において、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張が不可能な場合、&lt;SPAN&gt;Local Event Consumption&lt;/SPAN&gt;とカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを組み合わせたワークアラウンドアプローチが有効な手段となります。&lt;BR /&gt;こちらのアプローチにより、業務要件に応じたカスタムペイロードとフィルタリング機能を実現することで、必要なデータをイベントコンシューマに提供し、システム間連携の最適化を図ることが可能です。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937361851"&gt;参考情報&lt;/H1&gt;&lt;P&gt;SAP Learning：&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/explaining-event-driven-architecture_d02a51bb-1ce4-4c2d-a25d-8b9c9198ffd2" target="_blank" rel="noopener noreferrer"&gt;Explaining Event-Driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/integration-architecture-guide/event-driven-architecture?amp;state=PRODUCTION&amp;amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Event-driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88-sap%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E6%B6%88%E8%B2%BB%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC/ba-p/14241240"/>
    <published>2025-10-18T18:00:00.033000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/download-smart-form-as-pdf-using-rap-action-in-on-premises/ba-p/14244826</id>
    <title>Download Smart form as PDF using RAP action in On-premises</title>
    <updated>2025-10-22T07:43:37.130000+02:00</updated>
    <author>
      <name>chandana9269</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1470141</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog I need to demonstrate the process of enabling a smart form PDF download within a RAP application using a custom action button in an on-premises setup.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;This is a common requirement for generating and downloading documents like invoices, Purchase orders etc., from a Fiori elements app.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;In classic ABAP, generating and downloading files was often done using methods like GUI_DOWNLOAD, but this approach is not compatible with RAP.&amp;nbsp;&lt;BR /&gt;In RAP, the recommended way to implement download functionality is by using streams, combined with additional logic to handle the pdf generation and delivery to the front-end.&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;Step 1 :&amp;nbsp; Create Database Tables &amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;First we will be creating a database table to store the sales header(ZCH_DT_SALES_HED) and sales item (ZCH_DT_SALES_IT)data.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'sales header table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zch_dt_sales_hed 
{
  key sid         : abap.char(10) not null;
  created_on      : abap.dats;
  document_type   : abap.char(4);
  customer        : abap.char(10);
  attachment      : abap.rawstring(0);
  mimetype        : abap.char(128);
  filename        : abap.char(128);
  last_changed_at : abp_lastchange_tstmpl;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Item table&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'sales item table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zch_dt_sales_it 
{
  key sid       : abap.char(10) not null;
  key sdoc_item : abap.numc(6) not null;
  material_no   : abap.char(40);
  @Semantics.quantity.unitOfMeasure : 'zch_dt_sales_it.unit'
  quantity      : abap.quan(15,3);
  unit          : abap.unit(3);
  @Semantics.amount.currencyCode : 'zch_dt_sales_it.currency'
  net_value     : abap.curr(15,2);
  currency      : abap.cuky;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step &lt;/SPAN&gt;&lt;SPAN class=""&gt;2 :&lt;/SPAN&gt;&lt;SPAN class=""&gt; Define Interface view on top of Sales Header and item tables&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'base view for sales header'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root view entity zch_i_saleshed
  as select from zch_dt_sales_hed
  composition [0..*] of zch_i_salesit as _sitem
{
  key sid             as Sid,
      created_on      as CreatedOn,
      document_type   as DocumentType,
      customer        as Customer,
      @Semantics.largeObject : { fileName: 'filename' , mimeType: 'Mimetype' , 
      contentDispositionPreference: #ATTACHMENT}
      attachment      as Attachment,
      @Semantics.mimeType: true
      mimetype        as Mimetype,
      filename        as Filename,
      last_changed_at as LastChangedAt,
      _sitem
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'base view for sales item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity zch_i_salesit as select from zch_dt_sales_it
association to parent zch_i_saleshed as _sheader on $projection.Sid = _sheader.Sid
{
    key sid as Sid,
    key sdoc_item as SdocItem,
    material_no as MaterialNo,
    @Semantics.quantity.unitOfMeasure : 'Unit'
    quantity as Quantity,
    unit as Unit,
    @Semantics.amount.currencyCode : 'Currency'
    net_value as NetValue,
    currency as Currency,
    _sheader
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 :&lt;/SPAN&gt;&lt;SPAN class=""&gt; Define Consumption view on top of &lt;/SPAN&gt;&lt;SPAN class=""&gt;header and item &lt;/SPAN&gt;&lt;SPAN class=""&gt;interface views&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'projection view for sales header'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define root view entity zch_c_saleshed
  provider contract transactional_query
  as projection on zch_i_saleshed
{
  key Sid,
      CreatedOn,
      DocumentType,
      Customer,
      @Semantics.largeObject : { fileName: 'filename' , mimeType: 'Mimetype' , 
      contentDispositionPreference: #ATTACHMENT}
      Attachment,
      @Semantics.mimeType: true
      Mimetype,
      Filename,
      LastChangedAt,
      /* Associations */
      _sitem : redirected to composition child zch_c_salesit
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'projection view for sales item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define view entity zch_c_salesit 
as  projection on  zch_i_salesit
{
    key Sid,
    key SdocItem,
    MaterialNo,
    @Semantics.quantity.unitOfMeasure : 'unit'
    Quantity,
    Unit,
    @Semantics.amount.currencyCode: 'Currency'
    NetValue,
    Currency,
    /* Associations */
    _sheader : redirected to parent zch_c_saleshed
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step &lt;/SPAN&gt;&lt;SPAN class=""&gt;4 :&lt;/SPAN&gt;&lt;SPAN class=""&gt; Define &lt;/SPAN&gt;&lt;SPAN class=""&gt;Metadata Extension for Header and item data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer:#CORE
annotate entity zch_c_saleshed
    with 
{
     .facet: [
    {
      id:       'SalesDocHeader',
      purpose:  #STANDARD,
      position: 10,
      label:    'Header',
      type:     #IDENTIFICATION_REFERENCE
    },
    {
      id:            'SalesDocItem',
      purpose:       #STANDARD,
      type:          #LINEITEM_REFERENCE,
      label:         'Items',
      position:      20,
      targetElement: '_sitem'
    }
  ]
     : { lineItem: [{position: 10 , label: 'Salesorder Id' }],
    identification: [{ position: 10 ,label :'Salesorder Id' },
    { type: #FOR_ACTION, position:10 ,dataAction: 'download', label: 'Download Invoice' }] } 
    Sid;
     : { lineItem: [{position: 20 , label: 'Created on' }], 
    identification: [{ position: 20 ,label :'Created on' }] } 
    CreatedOn;
     : { lineItem: [{position: 30 , label: 'Document type' }], 
    identification: [{ position: 30 ,label :'Document type' }] } 
    DocumentType;
     : { lineItem: [{position: 40 , label: 'Customer id' }], 
    identification: [{ position: 40 ,label :'Customer id' }] } 
    Customer;
    .identification: [
    { position: 60, label: 'Attachment'   }
    ]
    Attachment;
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity zch_c_salesit
    with 
{
    .facet: [
    {
      id:       'SalesDocItem',
      purpose:  #STANDARD,
      position: 10,
      label:    'Header',
      type:     #IDENTIFICATION_REFERENCE
    }]
@UI : { lineItem: [{position: 10 , label: 'Salesorder Id' }], 
     identification: [{ position: 10 , label :'Salesorder Id' }] } 
    Sid;
     : { lineItem: [{position: 20 , label: 'Sales Document Item' }], 
identification: [{ position: 20 ,label :'Sales Document Item' }] } 
    SdocItem;
     : { lineItem: [{position: 30 , label: 'Material no' }], 
identification: [{ position: 30 ,label :'Material no' }] } 
    MaterialNo;
     : { lineItem: [{position: 40 , label: 'Quantity' }], 
identification: [{ position: 40 ,label :'Quantity' }] } 
    Quantity;
     : { lineItem: [{position: 50 , label: 'Unit' }], 
identification: [{ position: 50 ,label :'Unit' }] } 
    Unit;
     : { lineItem: [{position: 60 , label: 'Net value' }], 
identification: [{ position: 60 ,label :'Net value' }] } 
    NetValue;
     : { lineItem: [{position: 70 , label: 'Currency' }], 
identification: [{ position: 70 ,label :'Currency' }] } 
    Currency;    
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step 5: Define &lt;/SPAN&gt;&lt;SPAN class=""&gt;Behavior Definitions&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;W&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt; nee&lt;/SPAN&gt;&lt;SPAN class=""&gt;d to define the behavior &lt;/SPAN&gt;&lt;SPAN class=""&gt;definition &lt;/SPAN&gt;&lt;SPAN class=""&gt;for &lt;/SPAN&gt;&lt;SPAN class=""&gt;sales order &lt;/SPAN&gt;&lt;SPAN class=""&gt;header&lt;/SPAN&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;SPAN class=""&gt;item&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;SPAN class=""&gt;This includes setting up &lt;/SPAN&gt;&lt;SPAN class=""&gt;the managed implementation, defining standard CRUD &lt;/SPAN&gt;&lt;SPAN class=""&gt;operations, defining early numbering for header and item&lt;/SPAN&gt; &lt;SPAN class=""&gt;key&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt; &lt;SPAN class=""&gt;and defining the Download action&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;*Here Download action button returns the abstract entity instead of sales order &lt;/SPAN&gt;&lt;SPAN class=""&gt;itself. This&lt;/SPAN&gt;&lt;SPAN class=""&gt; abstract entity is used only &lt;/SPAN&gt;&lt;SPAN class=""&gt;for transferring the file back to the UI.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_ch_i_saleshed unique;
strict ( 2 );

define behavior for zch_i_saleshed //alias salesheader
persistent table zch_dt_sales_hed
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
early numbering
{
  create;
  update;
  delete;
  action download result [1]  zch_download_file;
  side effects { action download affects $self ;}
  association _sitem { create; }
  field ( readonly ) Sid,Attachment, Mimetype, Filename;

  mapping for zch_dt_sales_hed
  {
    Sid = sid;
    CreatedOn = created_on;
    DocumentType = document_type;
    Customer = customer;
    Filename = filename;
    Mimetype = mimetype;
    Attachment = attachment;
    LastChangedAt = last_changed_at;
  }
}

define behavior for zch_i_salesit //alias salesitem
persistent table zch_dt_sales_it
lock dependent by _sheader
authorization dependent by _sheader
//etag master &amp;lt;field_name&amp;gt;
early numbering
{
  update;
  delete;
  field ( readonly ) sid,SdocItem ;
  association _sheader;

  mapping for zch_dt_sales_it
  {
    Sid = sid;
    SdocItem = sdoc_item;
    MaterialNo = material_no;
    Quantity = quantity;
    Unit = unit;
    NetValue = net_value;
    Currency = currency;
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Abstract Entity :&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'abstract entity for file download'
define root abstract entity Zch_Download_File
{
  @Semantics.largeObject : { fileName: 'filename' , mimeType: 'Mimetype' , 
  contentDispositionPreference: #ATTACHMENT }
  attachment      : abap.rawstring(0);
  @Semantics.mimeType: true
  mimetype        : abap.char(128);
  filename        : abap.char(128);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define behavior definition on top of projection view&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );

define behavior for zch_c_saleshed //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;

  use action download ;
  use association _sitem { create; }
}

define behavior for zch_c_salesit //alias &amp;lt;alias_name&amp;gt;
{
  use update;
  use delete;

  use association _sheader;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step 6: &lt;/SPAN&gt;&lt;SPAN class=""&gt;I&lt;/SPAN&gt;&lt;SPAN class=""&gt;mplement the &lt;/SPAN&gt;&lt;SPAN class=""&gt;Be&lt;/SPAN&gt;&lt;SPAN class=""&gt;havior handler class &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In this step we will be implementing the behavior handler for our sales order &lt;/SPAN&gt;&lt;SPAN class=""&gt;RAP BO.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This class takes care of early numbering as well as the download action which generates and s&lt;/SPAN&gt;&lt;SPAN class=""&gt;treams the invoice pdf back to UI.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zch_i_saleshed DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zch_i_saleshed RESULT result.
    METHODS download FOR MODIFY
      IMPORTING keys FOR ACTION zch_i_saleshed~download RESULT result.
    METHODS earlynumbering_cba_sitem FOR NUMBERING
      IMPORTING entities FOR CREATE zch_i_saleshed\_sitem.
    METHODS earlynumbering_create FOR NUMBERING
      IMPORTING entities FOR CREATE zch_i_saleshed.

ENDCLASS.

CLASS lhc_zch_i_saleshed IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

  METHOD earlynumbering_create.
    select max( sid ) from zch_dt_sales_hed
    into (lv_max_id).
    data(lv_num) = CONV numc08( lv_max_id ).
    if lv_num is initial.
        lv_max_id = 'SO00000001'.
    else.
        lv_num += 1.
        lv_max_id = |SO{ lv_num }|.
    ENDIF.

data(ls_entity) = entities[ 1 ].
APPEND VALUE #( %cid = ls_entity-%cid
                sid = lv_max_id ) to mapped-zch_i_saleshed.
  ENDMETHOD.

  METHOD earlynumbering_cba_Sitem.
              data lv_number(6) type n.

  select max( sdoc_item ) from zch_dt_sales_it
  into (lv_max_id).
  if sy-subrc = 0.
    lv_number = lv_max_id + 1.
  else.
    lv_number = 1.
  ENDIF.
  loop at entities into data(ls_entities).
    loop at ls_entities-%target ASSIGNING FIELD-SYMBOL(&amp;lt;fs_target&amp;gt;).
   APPEND CORRESPONDING #( &amp;lt;fS_target&amp;gt; ) to mapped-zch_i_salesit ASSIGNING FIELD-SYMBOL(&amp;lt;ls_item&amp;gt;).
   &amp;lt;ls_item&amp;gt;-SdocItem = lv_number.
   ENDLOOP.
  ENDLOOP.
  ENDMETHOD.

  METHOD download.
   data: lt_salesi type ZCH_T_SALESI.

  loop at keys into data(ls_keys).
   READ ENTITIES OF zch_i_saleshed IN LOCAL MODE
      ENTITY zch_i_saleshed
        ALL FIELDS WITH CORRESPONDING #( keys )
      RESULT DATA(lt_sales_header).

   data(ls_salesh) = CORRESPONDING zch_i_saleshed( lt_sales_header[ 1 ] ).

   READ ENTITIES OF zch_i_saleshed IN LOCAL MODE
      ENTITY zch_i_saleshed by \_sitem
       ALL FIELDS WITH CORRESPONDING #( keys )
      RESULT DATA(lt_sales_item).

   LOOP AT lt_sales_item INTO DATA(ls_item).
      APPEND CORRESPONDING zch_i_salesit( ls_item ) TO lt_salesi.
    ENDLOOP.

   DATA(lv_pdf_xstring) = NEW ZCL_CH_HELPER_CLS( )-&amp;gt;generate_form(
                                                   is_sales_header = ls_salesh
                                                   it_sales_items  = lt_salesi ).

APPEND VALUE #(
      %tky              = ls_keys-%tky
      %param-attachment = lv_pdf_xstring
      %param-mimetype   = 'application/pdf'
      %param-filename   = |Invoice_{ ls_salesh-sid }.pdf|
    ) TO result.

  ENDLOOP.
  
  MODIFY ENTITY IN LOCAL MODE zch_i_saleshed
   UPDATE FIELDS  (  Attachment Mimetype Filename )
   WITH value #( (  %key = ls_keys-%key
                    Attachment = lv_pdf_xstring
                    Filename = |Invoice_{ ls_salesh-sid }.pdf|
                    Mimetype = 'application/pdf' ) )
                    REPORTED reported
                    FAILED failed.
 ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The following helper&lt;/SPAN&gt; &lt;SPAN class=""&gt;class&lt;/SPAN&gt; &lt;SPAN class=""&gt;generates the&lt;/SPAN&gt; &lt;SPAN class=""&gt;Smart form &lt;/SPAN&gt;&lt;SPAN class=""&gt;output &lt;/SPAN&gt;&lt;SPAN class=""&gt;as&lt;/SPAN&gt;&lt;SPAN class=""&gt; an&lt;/SPAN&gt; &lt;SPAN class=""&gt;X&lt;/SPAN&gt;&lt;SPAN class=""&gt;STRING .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_ch_helper_cls DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES: ty_sales_items_tt TYPE STANDARD TABLE OF zch_i_salesit.

    METHODS generate_form
      IMPORTING
        is_sales_header TYPE zch_i_saleshed
        it_sales_items  TYPE ty_sales_items_tt
      RETURNING
        VALUE(rv_pdf)   TYPE xstring.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.


CLASS zcl_ch_helper_cls IMPLEMENTATION.
  METHOD generate_form.

    data : lv_fm_name type RS38L_FNAM,
       lv_ctr_par type ssfctrlop,
       lv_output_options type SSFCOMPOP,
       lv_job_output type SSFCRESCL,
       Gt_pdf_lines type table of tline,
       lv_size type i,
       lv_pdf_xstring type xstring.


CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
  EXPORTING
    formname                 = 'ZCH_INVOICE'
*   VARIANT                  = ' '
*   DIRECT_CALL              = ' '
 IMPORTING
   FM_NAME                  =  lv_fm_name
 EXCEPTIONS
   NO_FORM                  = 1
   NO_FUNCTION_MODULE       = 2
   OTHERS                   = 3
          .

lv_ctr_par-no_dialog = 'X'.
lv_ctr_par-preview = 'X'.
lv_ctr_par-getotf = 'X'.
lv_output_options-TDDEST = 'LP01'.

CALL FUNCTION lv_fm_name
  EXPORTING
   CONTROL_PARAMETERS         = lv_ctr_par
   OUTPUT_OPTIONS             = lv_output_options
   USER_SETTINGS              = ''
    im_sales                   = is_sales_header-Sid
 IMPORTING
   JOB_OUTPUT_INFO            = lv_job_output
 EXCEPTIONS
   FORMATTING_ERROR           = 1
   INTERNAL_ERROR             = 2
   SEND_ERROR                 = 3
   USER_CANCELED              = 4
   OTHERS                     = 5
          .

CALL FUNCTION 'CONVERT_OTF'
 EXPORTING
   FORMAT                      = 'PDF'
 IMPORTING
    bin_filesize          = lv_size
    bin_file              = lv_pdf_xstring
  TABLES
    otf                         = lv_job_output-otfdata
    lines                       = Gt_pdf_lines
 EXCEPTIONS
   ERR_MAX_LINEWIDTH           = 1
   ERR_FORMAT                  = 2

   ERR_CONV_NOT_POSSIBLE       = 3
   ERR_BAD_OTF                 = 4
   OTHERS                      = 5.
          
 rv_pdf = lv_pdf_xstring.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define Service definition&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition for sales header' 

define service Zch_srv_saleshed { 

expose zch_c_saleshed; 

expose zch_c_salesit; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define Service &lt;/SPAN&gt;&lt;SPAN class=""&gt;binding&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt; and&lt;/SPAN&gt;&lt;SPAN class=""&gt; preview the application&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_0-1760687945765.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328880i6F009A4D9C91932C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_0-1760687945765.png" alt="chandana9269_0-1760687945765.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create Sales Header data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_1-1760688020461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328881i46F0EDB66AD5B776/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_1-1760688020461.png" alt="chandana9269_1-1760688020461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Cr&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;ate item data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_2-1760688059366.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328883i3F157670405C85CD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_2-1760688059366.png" alt="chandana9269_2-1760688059366.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Click on the Download invoice button and refresh&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_3-1760688089159.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328884i930843A5CF426181/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_3-1760688089159.png" alt="chandana9269_3-1760688089159.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Now Click on Open &lt;/SPAN&gt;&lt;SPAN class=""&gt;file ,the&lt;/SPAN&gt;&lt;SPAN class=""&gt; form will be downloaded&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_4-1760688126961.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328885iF31635F0E2B884F4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_4-1760688126961.png" alt="chandana9269_4-1760688126961.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_5-1760688144980.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328886iED3E9E4EA4389C97/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_5-1760688144980.png" alt="chandana9269_5-1760688144980.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion :&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;This approach enables seamless Smart Form PDF generation and download within RAP, combining classic ABAP capabilities with modern Fiori user experience in an on-premise setup.&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/download-smart-form-as-pdf-using-rap-action-in-on-premises/ba-p/14244826"/>
    <published>2025-10-22T07:43:37.130000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/writable-entity-in-cds/ba-p/14249189</id>
    <title>Writable Entity in CDS</title>
    <updated>2025-10-22T07:56:59.929000+02:00</updated>
    <author>
      <name>kalmesh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1490139</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction to writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;CDS provides a powerful way to define and consume data models.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Traditionally, CDS views were read-only, used primarily for data retrieval.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;However, with the evolution of SAP's ABAP platform, Writable CDS Entities were introduced to enable direct data manipulation (Update, modify).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Types of Writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;1.Writable CDS View Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; - Wrap DDIC tables for direct writing access.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; 2.Writable External Entities &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;- Enable write access to eternal database.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, we are going to focus on CDS Writable Entities. I will walk you through the concept step-by-step, using a practical example to demonstrate how it works and what operations—such as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; INSERT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;UPDATE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;—we can perform using a writable entity. Let's dive into the example.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create a Table&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_0-1761035674723.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330139i0E91AC394DB0288C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_0-1761035674723.png" alt="kalmesh_0-1761035674723.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next, we will create a writable CDS entity on top of the database table &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZTRL_T_AIRPORT, &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Using the writable CDS entity, we can perform &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;update &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;operations directly, and we can also &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;insert&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; new records by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; statement. We will explore how to implement these operations in the upcoming steps.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_1-1761035762682.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330140i8F18A3F4D2C62746/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_1-1761035762682.png" alt="kalmesh_1-1761035762682.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In the next step, we will create a class to perform all the required operations. We will use standard interface methods to execute these operations and display the output in the console for better visibility and testing.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_2-1761035834570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330141i6A6F1BD2A833069C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_2-1761035834570.png" alt="kalmesh_2-1761035834570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Let’s&lt;/SPAN&gt;&lt;SPAN class=""&gt; insert some data into the database table. Since we cannot perform insert operation directly through a writable CDS entity, I will &lt;/SPAN&gt;&lt;SPAN class=""&gt;proceed&lt;/SPAN&gt;&lt;SPAN class=""&gt; with inserting data into the underlying database &lt;/SPAN&gt;&lt;SPAN class=""&gt;table.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_3-1761035898193.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330142i477E22022DB56E99/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_3-1761035898193.png" alt="kalmesh_3-1761035898193.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Fetch &lt;/SPAN&gt;&lt;SPAN class=""&gt;the data from the database table to verify whether the records were successfully inserted, as performed in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;SPAN class=""&gt;revious&lt;/SPAN&gt; &lt;SPAN class=""&gt;step.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_4-1761035941906.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330143i0ADEFA20BA444649/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_4-1761035941906.png" alt="kalmesh_4-1761035941906.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;UPDATE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, let’s perform an update operation using the writable CDS entity (&lt;STRONG&gt;ZTRL&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;_I_WRENT_DEMO&lt;/STRONG&gt;)&lt;SPAN&gt;. In this example, we will update the name field to demonstrate how data can be modified through the entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_5-1761036054229.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330145i4019B9CCE92DA46E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_5-1761036054229.png" alt="kalmesh_5-1761036054229.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;INSERT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We will insert a new record by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; statement, which allows us to perform insert operations through the writable CDS entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_6-1761036103280.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330146iF60E2A1020E11868/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_6-1761036103280.png" alt="kalmesh_6-1761036103280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;DELETE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Direct delete operations are not supported through writable CDS entities. If attempted, the system will raise an error, as shown below.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_7-1761036149147.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330147i142A233FDCF4405F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_7-1761036149147.png" alt="kalmesh_7-1761036149147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_8-1761036170936.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330148i289A85701DAF27DC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_8-1761036170936.png" alt="kalmesh_8-1761036170936.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; offer a powerful and flexible way to interact with database tables in SAP. Through these entities, we can perform &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;update operations &lt;/SPAN&gt;&lt;/STRONG&gt;and&lt;SPAN&gt;&amp;nbsp;even &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;insert new records&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; using the &lt;/SPAN&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;SPAN&gt; statement.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Keep experimenting, keep learning—and happy coding! &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/writable-entity-in-cds/ba-p/14249189"/>
    <published>2025-10-22T07:56:59.929000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/outbound-integration-from-sap-btp-abap-to-sap-s-4hana-cloud-via-service/ba-p/14255149</id>
    <title>Outbound Integration from SAP BTP, ABAP to SAP S/4HANA Cloud via Service Consumption Model</title>
    <updated>2025-10-28T13:17:53.803000+01:00</updated>
    <author>
      <name>Pramathesh_t_s</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1455465</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;This blog post will describe the Service Consumption Model for OData. I will describe its benefits, provide a description of the model, take a look at the OData Client Proxy at runtime and also dive into the ABAP cross trace integration as well.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;If you want to receive or send data to an OData V2 or V4 service within SAP BTP, ABAP Environment or SAP S/4HANA ABAP Environment, you can use the "Service Consumption Model" for OData. As of release 2311, it is possible to&amp;nbsp;consume Complex Types, Complex Collection, Action (bound) and Functions (bound).&amp;nbsp;Of course, the consumption of Entity Types and Entity Sets is also possible.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Use case&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;If you have an SAP BTP, ABAP Environment or SAP S/4HANA Cloud, ABAP Environment system you can use the Service Consumption Model for OData. From here you can connect to a Cloud or an on-premises system.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_0-1761650653791.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333359iE20CBBCBB983B936/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Pramathesh_t_s_0-1761650653791.png" alt="Pramathesh_t_s_0-1761650653791.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In my scenario I am consuming the &lt;EM&gt;API - API_WAREHOUSE_ORDER_TASK_2&lt;/EM&gt; from another Cloud system. A call to the Entity Set&amp;nbsp;&lt;EM&gt;Warehouse Task&lt;/EM&gt;&amp;nbsp;returns the following data:&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_0-1761650980033.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333361i9FE0B730525AE6E9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_0-1761650980033.png" alt="Pramathesh_t_s_0-1761650980033.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Service Consumption Model for OData&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Select&amp;nbsp;&lt;EM&gt;File&lt;/EM&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;&amp;nbsp;&lt;EM&gt;New&lt;/EM&gt;&amp;nbsp;--&amp;gt;&amp;nbsp;&lt;EM&gt;Service Consumption Model&lt;/EM&gt;&amp;nbsp;and choose&amp;nbsp;&lt;EM&gt;OData&lt;/EM&gt;&amp;nbsp;as&amp;nbsp;&lt;EM&gt;Consumption mode&lt;/EM&gt;&amp;nbsp;in ADT.&lt;/P&gt;&lt;P&gt;The consumption system requires a representation of the remote service. This knowledge is used to create the URL, write and read the JSON form the HTTP requests and responses. Therefore, the wizard needs the EDMX file (a service metadata document that describes the data model exposed by the service as an HTTP endpoint). OData uses EDMX as the format for this description of the remote service. You can get this by adding&amp;nbsp;&lt;EM&gt;$metadata&lt;/EM&gt;&amp;nbsp;to the end of the service document, in my case it is the following URL -&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;GET /sap/opu/odata4/sap/api_warehouse_order_task_2/srvd_a2x/sap/warehouseorder/0001/$metadata&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Save this file locally to use it in the below shown wizard. In addition, chose the appropriate class name. This class is the model representation and will contain all the types.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_1-1761651074160.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333362i4E220282FA77C500/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_1-1761651074160.png" alt="Pramathesh_t_s_1-1761651074160.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, we get the Service Consumption model for OData. Create an outbound service object using wizard, which models the outbound call that will be implemented. The outbound service will be part of a custom communication scenario.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_2-1761651128515.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333363i2D6DC05E2B6D119C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_2-1761651128515.png" alt="Pramathesh_t_s_2-1761651128515.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create a communication scenario and assign the outbound service to it. This will be the basis for the outbound communication arrangement, which will be configured by an administrator at a later point. Keep in mind that the developer defines which authentication methods are supported, while the administrator decides which authentication method is ultimately used at runtime.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_3-1761651467132.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333364i2B0D21F02F7C5AD2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_3-1761651467132.png" alt="Pramathesh_t_s_3-1761651467132.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Consuming an Odata Service via&amp;nbsp;Service Consumption Model&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You can use the generated code snippet of the SRVC in and ABAP class, pass the name of the communication scenario and if required, the name of the communication system and the outbound service to CREATE_BY_COMM_ARRANGEMENT&amp;nbsp;method, and perform the service call.&lt;/P&gt;&lt;P&gt;The following code is generated by the SRVC for the create operation of the OData service Warehouse Task.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_4-1761651617495.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333371i8D265D6053BE92E8/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_4-1761651617495.png" alt="Pramathesh_t_s_4-1761651617495.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Support for Actions and Functions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To call an OData action or function, the necessary structures and tables for the parameters are generated in the Service Consumption Model. With the 2311 release, however, the ADT (ABAP Development Tools) integration for OData V4 actions is still missing.&lt;/P&gt;&lt;P&gt;Consequently, I cannot yet select a bound action, an action import, a bound function, or a function import and directly generate the code snippet using the ADT tool. Despite this missing feature, the required parameter structure is available, and I can use it at runtime to call the operation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ Code Example: CancelWarehouseTask Action&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's look at how to perform the CancelWarehouseTask action. Before implementing this using the Service Consumption Model, we'll verify the steps using the SAP Gateway Client.&lt;/P&gt;&lt;P&gt;For any standard SAP API, you should always consult the SAP API Business Hub to determine the correct syntax, required URL, and mandatory parameters for any action or function. The sample link confirms that the following details are required to execute this action:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Key Parameters:&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Warehouse Number (EWMWarehouse)&lt;/LI&gt;&lt;LI&gt;Warehouse Task Number (WarehouseTask)&lt;/LI&gt;&lt;LI&gt;Warehouse Task Item Number (WarehouseTaskItem)&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;Concurrency Control: The ETag value is also required for conditional updates/actions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The full API request URL for the action is:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;POST /sap/opu/odata4/sap/api_warehouse_order_task_2/srvd_a2x/sap/warehouseorder/0001/WarehouseTask(EWMWarehouse='{EWMWarehouse}',WarehouseTask='{WarehouseTask}',WarehouseTaskItem='{WarehouseTaskItem}')/SAP__self.CancelWarehouseTask?sap-client=&amp;lt;client&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt; Steps to Prepare the Details using SAP Gateway Client&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To successfully execute the action, you first need to retrieve the current ETag and key parameters for the warehouse task.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Perform a GET Call to Retrieve the Task Details and ETag.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Execute a GET request to the WarehouseTask entity set using the relevant warehouse and order numbers to retrieve the task details.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;/sap/opu/odata4/sap/api_warehouse_order_task_2/srvd_a2x/sap/warehouseorder/0001/WarehouseOrder(EWMWarehouse='0880',WarehouseOrder='9748')/_WarehouseTask&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The response payload will contain the Warehouse Number, Warehouse Task Number, Warehouse Task Item, and the &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1599241"&gt;@odata&lt;/a&gt;.etag property for the required task.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_5-1761652886181.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333391i08D1764058C2AAB8/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_5-1761652886181.png" alt="Pramathesh_t_s_5-1761652886181.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2. Perform the POST Call for the Action.&lt;/P&gt;&lt;P&gt;Perform a POST request for the CancelWarehouseTask action using the details (parameters) obtained in the previous step. Crucially, you must also include the ETag value in the If-Match HTTP header.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;Post /sap/opu/odata4/sap/api_warehouse_order_task_2/srvd_a2x/sap/warehouseorder/0001/WarehouseTask(EWMWarehouse='{EWMWarehouse}',WarehouseTask='{WarehouseTask}',WarehouseTaskItem='{WarehouseTaskItem}')/SAP__self.CancelWarehouseTask&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Required Header - If-Match: W/"&amp;lt;ETag_Value_From_Step_1&amp;gt;"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_6-1761653556921.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333394iDA3D6A690FB64A59/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_6-1761653556921.png" alt="Pramathesh_t_s_6-1761653556921.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":laptop_computer:"&gt;💻&lt;/span&gt; 1. Retrieving ETag and Key Parameters via Service Consumption Model&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The first step is to read the entity to obtain its current ETag and key properties, which are required for the subsequent action call.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;TRY.
    " -----------------------------------------------------------
    " 1. Create HTTP Client and Client Proxy
    " -----------------------------------------------------------
    " Create HTTP destination using Communication Arrangement details
    DATA(lo_destination) = cl_http_destination_provider=&amp;gt;create_by_comm_arrangement(
        comm_scenario  = lv_commscetask
        comm_system_id = lv_commsystem
        service_id     = lv_serviceid_task ).

    lo_http_client  = cl_web_http_client_manager=&amp;gt;create_by_http_destination( lo_destination ).
    
    " Create the OData V4 client proxy
    lo_client_proxy = /iwbep/cl_cp_factory_remote=&amp;gt;create_v4_remote_proxy(
        EXPORTING
            is_proxy_model_key       = VALUE #( repository_id       = lv_repid
                                                  proxy_model_id      = lv_proxymodelid
                                                  proxy_model_version = lv_proxymodlever )
            io_http_client             = lo_http_client
            iv_relative_service_root   = lv_servicerootwh ).

    ASSERT lo_http_client IS BOUND.
    
    " -----------------------------------------------------------
    " 2. Navigate to the Resource and Read Data (GET)
    " -----------------------------------------------------------
    " Create a request for the read operation on the WAREHOUSE_TASK entity set
    lo_request = lo_client_proxy-&amp;gt;create_resource_for_entity_set( 'WAREHOUSE_TASK' )-&amp;gt;create_request_for_read( ).
    
    " Apply filter condition for the Warehouse Task
    lo_filter_factory = lo_request-&amp;gt;create_filter_factory( ).
    CLEAR lt_range_warehousetask.
    
    " Populate range table (assuming &amp;lt;ls_keys&amp;gt; holds the task number)
    lt_range_warehousetask =  VALUE #( ( sign  = 'I' option = 'EQ' low    = &amp;lt;ls_keys&amp;gt;-warehousetask ) ).
    
    " Create filter node by range on the WAREHOUSE_TASK property
    lo_filter_node_1 = lo_filter_factory-&amp;gt;create_by_range( iv_property_path = 'WAREHOUSE_TASK'
                                                          it_range         = lt_range_warehousetask ).
                                                          
    lo_request-&amp;gt;set_filter( lo_filter_node_1 ).
    
    " -----------------------------------------------------------
    " 3. Execute Request and Process Response
    " -----------------------------------------------------------
    lo_response = lo_request-&amp;gt;execute( ).
    
    " Retrieve the business data (ETag is implicitly available in the internal structure)
    lo_response-&amp;gt;get_business_data( IMPORTING et_business_data = lt_business_data ).

CATCH cx_root INTO DATA(lo_err).
    DATA(lv_text) = lo_err-&amp;gt;get_text( ).
    
    " Error handling and logging (omitted for brevity, based on your original code)
    APPEND VALUE #( warehousetask = &amp;lt;ls_keys&amp;gt;-warehousetask
                    %msg          = new_message( ... v2       = lv_text )
                  ) TO reported-zn5_dl_c_createmon_task.
    APPEND VALUE #( warehousetask = &amp;lt;ls_keys&amp;gt;-warehousetask ) TO failed-zn5_dl_c_createmon_task.
    lv_flag = abap_true.
ENDTRY.

" -----------------------------------------------------------
" 4. Extract ETag from Read Results
" -----------------------------------------------------------
" Assuming you are looping through tasks, the loop structure is missing, but extracting the ETag is done here:
READ TABLE lt_business_data ASSIGNING FIELD-SYMBOL(&amp;lt;ls_business_data&amp;gt;) WITH KEY warehouse_task = ls_task-warehousetask.

IF sy-subrc = 0.
    " The etag field is automatically mapped in the generated structure
    ls_task-etag = &amp;lt;ls_business_data&amp;gt;-etag.
ENDIF.

IF lv_flag = abap_false.
    APPEND ls_task TO lt_task.
    CLEAR ls_task.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt; 2. Performing the CancelWarehouseTask Action&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As previously noted, as of the 2311 release, the ADT integration for generating code snippets for OData V4 actions is still pending. Therefore, we must implement the action call manually.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Key Implementation Details:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Bound Action Method&lt;/STRONG&gt;: The method that triggers the bound action in the Service Consumption Model is typically named bound_action('ACTION_NAME') on the resource object. Here, the action name must be passed as a string literal: 'CANCEL_WAREHOUSE_TASK'.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pramathesh_t_s_7-1761653664347.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/333395i8E713F1F8DED25B7/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Pramathesh_t_s_7-1761653664347.png" alt="Pramathesh_t_s_7-1761653664347.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 2.&amp;nbsp;&lt;STRONG&gt;Concurrency Control:&lt;/STRONG&gt; Since CancelWarehouseTask is a state-changing operation, it requires the ETag for optimistic locking. This is set using the set_if_match( etag_value ) method on the request object.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;TRY.
    " -----------------------------------------------------------
    " 1. Create HTTP Client and Client Proxy (using a different variable set, e.g., lo_client_proxy1)
    " -----------------------------------------------------------
    DATA(lo_destination1) = cl_http_destination_provider=&amp;gt;create_by_comm_arrangement(
        comm_scenario  = lv_commscetask
        comm_system_id = lv_commsystem
        service_id     = lv_serviceid_task ).

    lo_http_client1  = cl_web_http_client_manager=&amp;gt;create_by_http_destination( lo_destination1 ).
    
    lo_client_proxy1 = /iwbep/cl_cp_factory_remote=&amp;gt;create_v4_remote_proxy(
        EXPORTING
            is_proxy_model_key       = VALUE #( repository_id       = lv_repid
                                                  proxy_model_id      = lv_proxymodelid
                                                  proxy_model_version = lv_proxymodlever )
            io_http_client             = lo_http_client1
            iv_relative_service_root   = lv_servicerootwh ).
            
    ASSERT lo_http_client1 IS BOUND.

    " -----------------------------------------------------------
    " 2. Navigate to Entity and Bind Action
    " -----------------------------------------------------------
    " Construct the key for the specific WAREHOUSE_TASK entity
    DATA(ls_entity_key1) = VALUE #(
        ewmwarehouse        = lv_ewmwarehouse
        warehouse_task      = &amp;lt;ls_task&amp;gt;-warehousetask
        warehouse_task_item = '0' " Assuming the item is '0' for the action context
    ).
    
    " Navigate to the specific entity instance using its key
    DATA(lo_entity1) = lo_client_proxy1-&amp;gt;create_resource_for_entity_set( 'WAREHOUSE_TASK'
    )-&amp;gt;navigate_with_key( ls_entity_key1 ).
    
    " Bind the CANCEL_WAREHOUSE_TASK action to the entity resource
    DATA(lo_resource1) = lo_entity1-&amp;gt;bind_action( 'CANCEL_WAREHOUSE_TASK' ).
    
    " -----------------------------------------------------------
    " 3. Create Request, Set ETag, and Execute
    " -----------------------------------------------------------
    DATA(lo_request1) = lo_resource1-&amp;gt;create_request( ).
    
    " Set the ETag (If-Match header) using the ETag retrieved in step 1
    lo_request1-&amp;gt;set_if_match( &amp;lt;ls_task&amp;gt;-etag ).
    
    " Execute the action (POST request)
    DATA(lo_response1) = lo_request1-&amp;gt;execute( ).
    
    " Action successful, continue with status handling...

CATCH cx_root INTO DATA(lo_obj).
    DATA(lv_text) = lo_obj-&amp;gt;get_text( ).

    " Error handling and logging (omitted for brevity, based on your original code)
    APPEND VALUE #( warehousetask = &amp;lt;ls_task&amp;gt;-warehousetask
                    %msg          = new_message( ... v2       = lv_text )
                  ) TO reported-zn5_dl_c_createmon_task.
    APPEND VALUE #( warehousetask = &amp;lt;ls_task&amp;gt;-warehousetask ) TO failed-zn5_dl_c_createmon_task.
    lv_flag = abap_true.
ENDTRY.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion: Seamless Outbound Integration with OData Service Consumption Model&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This post demonstrated a complete, robust approach to Outbound Integration from the SAP BTP, ABAP Environment (or S/4HANA Cloud, ABAP Environment) to an external OData API, specifically the API_WAREHOUSE_ORDER_TASK_2 in a cloud-to-cloud scenario.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/outbound-integration-from-sap-btp-abap-to-sap-s-4hana-cloud-via-service/ba-p/14255149"/>
    <published>2025-10-28T13:17:53.803000+01:00</published>
  </entry>
</feed>
