<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-RESTful-Application-Programming-Model-blog-posts.xml</id>
  <title>SAP Community - ABAP RESTful Application Programming Model</title>
  <updated>2025-08-06T17:00:08.571698+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP RESTful Application Programming Model/pd-p/7e44126e-7b27-471d-a379-df205a12b1ff" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP RESTful Application Programming Model blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-delta-token-unavailable-exception/ba-p/14097985</id>
    <title>SAP - Delta Token Unavailable Exception</title>
    <updated>2025-05-20T16:07:35.616000+02:00</updated>
    <author>
      <name>nabsrisubhasourya</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/822642</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;When we faced Delta Token Unavailable Exception for multiple Projects across the Globe, we didn't find a direct solution and have reach out to SAP specialists for solution. We are writing this Blog to make the solution available&amp;nbsp;for everyone by following these simple steps.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is a Delta Token?&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To enhance API performance, SAP introduced the concept of a &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt; to optimize data retrieval and reduce unnecessary processing.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;I&gt;&lt;SPAN&gt;Problem Statement&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Consider an API that returns a list of tasks, where the response size is around &lt;STRONG&gt;&lt;SPAN&gt;10,000 records&lt;SPAN&gt;. Traditionally, the app fetches this entire dataset daily when the user opens the app. However, on any given day, only &lt;STRONG&gt;&lt;SPAN&gt;10 to 15 new records&lt;SPAN&gt; might be added. Despite this, the API still retrieves the entire dataset, leading to &lt;STRONG&gt;&lt;SPAN&gt;performance issues&lt;SPAN&gt; due to the large response size and increased processing time.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;I&gt;&lt;SPAN&gt;SAP’s Delta Token Solution&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP addresses this inefficiency with the &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt; mechanism.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;First API Request (Fresh Request):&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;When an API request is made for the first time, the &lt;STRONG&gt;&lt;SPAN&gt;GET_ENTITYSET&lt;SPAN&gt; method in OData is executed.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP captures the timestamp of this request and generates a &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt;, which is stored in an SAP table (DELTA_TABLE).&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The API response includes both the &lt;STRONG&gt;&lt;SPAN&gt;task list&lt;SPAN&gt; and the &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt;.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Storage on the Mobile Device:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;The &lt;STRONG&gt;&lt;SPAN&gt;SAP SDK&lt;SPAN&gt; creates offline tables on the mobile device to store the received records.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The Delta Token is also saved in &lt;STRONG&gt;&lt;SPAN&gt;Shared Preferences&lt;SPAN&gt;, mapped to the respective entity.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Subsequent API Requests (Delta Requests):&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;When the user reopens the app the next day, the SAP SDK sends the &lt;STRONG&gt;&lt;SPAN&gt;previously stored Delta Token&lt;SPAN&gt; as a filter in the API request.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The OData service executes the &lt;STRONG&gt;&lt;SPAN&gt;GET_ENTITYSET_DELTA&lt;SPAN&gt; method, triggered due to the presence of the Delta Token in the request.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP decodes the Delta Token, checks the timestamp, and retrieves only the &lt;STRONG&gt;&lt;SPAN&gt;newly created, updated, or deleted records&lt;SPAN&gt; since the last request.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;A &lt;STRONG&gt;&lt;SPAN&gt;new Delta Token&lt;SPAN&gt; is generated, updated in the SAP table, and returned in the response along with the modified task list.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Efficient Data Synchronization:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;The mobile SDK receives only incremental&lt;STRONG&gt;&lt;SPAN&gt; changes&lt;SPAN&gt; (fewer records), reducing response time.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;The local database is updated with the new data and the updated Delta Token.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;/IWBEP/CX_QRL_DELTA_UNAVAILABL Exception&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below is a screenshot of the &lt;STRONG&gt;&lt;SPAN&gt;UserDetailSet&lt;SPAN&gt; entity's &lt;STRONG&gt;&lt;SPAN&gt;fresh request&lt;SPAN&gt;, where the response includes a &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image11.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259548i6AC60122FB3709AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image11.png" alt="Image11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After a day, when the mobile device attempts to make a &lt;STRONG&gt;&lt;SPAN&gt;delta request&lt;SPAN&gt; using the previously generated &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt;, the response returns an exception: &lt;STRONG&gt;&lt;SPAN&gt;/IWBEP/CX_QRL_DELTA_UNAVAILABLE&lt;SPAN&gt;.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image 22.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259550iC1F56BD6DFD341D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image 22.png" alt="Image 22.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image33.png" style="width: 399px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259549i8862F36887CA10A4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image33.png" alt="Image33.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;What is a Delta Token Unavailable Exception?&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As mentioned earlier, every &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt; generated by SAP OData is stored in the &lt;STRONG&gt;&lt;SPAN&gt;DELTA_TABLE&lt;SPAN&gt;. However, a scheduled process runs at predefined intervals to &lt;STRONG&gt;&lt;SPAN&gt;clear old records&lt;SPAN&gt; from this table. If a request is made after the Delta Token has been purged, the system will be unable to find it, resulting in a &lt;STRONG&gt;&lt;SPAN&gt;Delta Token Unavailable Exception&lt;SPAN&gt;.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;I&gt;&lt;SPAN&gt;Understanding the Exception with an Example&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/I&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Delta Token Storage &amp;amp; Cleanup&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;When a &lt;STRONG&gt;&lt;SPAN&gt;fresh request&lt;SPAN&gt; is made, SAP generates a &lt;STRONG&gt;&lt;SPAN&gt;Delta Token&lt;SPAN&gt; and stores it in the &lt;STRONG&gt;&lt;SPAN&gt;DELTA_TABLE&lt;SPAN&gt;.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;A &lt;STRONG&gt;&lt;SPAN&gt;scheduler&lt;SPAN&gt; is configured to periodically clear old records from the table.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For instance, if the scheduler is set to run &lt;STRONG&gt;&lt;SPAN&gt;every 3 days&lt;SPAN&gt;, any Delta Tokens older than this timeframe will be removed.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Successful Delta Request&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;If a user logs in &lt;STRONG&gt;&lt;SPAN&gt;within the scheduler timeframe&lt;SPAN&gt; (e.g., the next day), the mobile app sends the &lt;STRONG&gt;&lt;SPAN&gt;previously stored Delta Token&lt;SPAN&gt;.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;SAP looks up the &lt;STRONG&gt;&lt;SPAN&gt;DELTA_TABLE&lt;SPAN&gt;, finds the token, decodes it, and returns only the updated records.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;Delta Token Unavailable Scenario&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;Suppose a user logs in &lt;STRONG&gt;&lt;SPAN&gt;after one week&lt;SPAN&gt;.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The app still sends the &lt;STRONG&gt;&lt;SPAN&gt;last stored Delta Token&lt;SPAN&gt;, but since the &lt;STRONG&gt;&lt;SPAN&gt;scheduler ran 4 days ago&lt;SPAN&gt;, the Delta Token has been &lt;STRONG&gt;&lt;SPAN&gt;purged&lt;SPAN&gt; from the table.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;As a result, SAP &lt;STRONG&gt;&lt;SPAN&gt;fails to find the token&lt;SPAN&gt; and throws a &lt;STRONG&gt;&lt;SPAN&gt;DELTA_UNAVAILABLE&lt;SPAN&gt; exception.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Solution&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP recommends handling the &lt;STRONG&gt;&lt;SPAN&gt;Delta Token Unavailable Exception&lt;SPAN&gt; by capturing it in the OData service and returning a &lt;STRONG&gt;&lt;SPAN&gt;410 (Gone) status code&lt;SPAN&gt;. This status code indicates that the Delta Token is no longer available.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When &lt;STRONG&gt;&lt;SPAN&gt;Mobile Services&lt;SPAN&gt; receive a &lt;STRONG&gt;&lt;SPAN&gt;410 response&lt;SPAN&gt;, it recognizes that the Delta Token is missing and automatically triggers a &lt;STRONG&gt;&lt;SPAN&gt;fresh request&lt;SPAN&gt; for the same entity. This fresh request retrieves the &lt;STRONG&gt;&lt;SPAN&gt;entire dataset&lt;SPAN&gt; along with a &lt;STRONG&gt;&lt;SPAN&gt;new Delta Token&lt;SPAN&gt;, ensuring that data synchronisation continues smoothly.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Code snippet OData&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN&gt;Write the Custom Exception Message with Status code as 410 whenever the delta token unavailable exception &lt;STRONG&gt;&lt;SPAN&gt;/iwbep/cx_qrl_delta_unavailabl&lt;SPAN&gt; is raised.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image44.png" style="width: 399px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259551i99B80DAEEC3F956E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image44.png" alt="Image44.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to check/change delta token schedular&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Monitor the standard jobname &lt;STRONG&gt;&lt;SPAN&gt;/IWBEP/QUERY_RESULT_LOG_CLEANUP&amp;nbsp; &lt;SPAN&gt;which uses the standard program -&amp;nbsp; &lt;STRONG&gt;&lt;SPAN&gt;/IWBEP/R_CLEAN_UP_QRL &lt;SPAN&gt;scheduled&lt;SPAN&gt; based on required days to clear the delta token from the system saved as variant.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Note: The standard job can be updated with required scheduled cycle from tcode - SM36&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image55.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259553iECC1C0727B009D6E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image55.png" alt="Image55.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image66.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259552i341885C0A9C914B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image66.png" alt="Image66.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image77.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259554iF004D3DFF311BCDB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image77.png" alt="Image77.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;and on execution the cache memory of delta query will be removed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Image88.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259555iF4819D64DFC117C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Image88.png" alt="Image88.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you have any questions related to the same, feel free to post a question &lt;A href="https://answers.sap.com/tags/67837800100800007077" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please make sure to follow my profile to know more about my upcoming blog where I will write on how to design a complex MDK application with multiple screens and API.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you have any further queries, feel free to comment.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Authors&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nabsrisubhasourya_0-1746883183871.png" style="width: 114px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259556iC2EDF796ED53C780/image-dimensions/114x114?v=v2" width="114" height="114" role="button" title="nabsrisubhasourya_0-1746883183871.png" alt="nabsrisubhasourya_0-1746883183871.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Name&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; :&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;About&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;SPAN&gt;Nabsri Subha Sourya&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Architect (Mobility, SAP BTP)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nabsrisubhasourya_1-1746883183872.png" style="width: 123px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259557i6392704F5EBAD4FA/image-dimensions/123x123?v=v2" width="123" height="123" role="button" title="nabsrisubhasourya_1-1746883183872.png" alt="nabsrisubhasourya_1-1746883183872.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Name&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; :&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;About&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;SPAN&gt;Jagadisha N&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Lead Engineer (SAP MDK, Android)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nabsrisubhasourya_2-1746883183873.png" style="width: 120px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/259558iEF16141FD4E4BFDC/image-dimensions/120x120?v=v2" width="120" height="120" role="button" title="nabsrisubhasourya_2-1746883183873.png" alt="nabsrisubhasourya_2-1746883183873.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Name&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp; :&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;About&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; :&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;&lt;SPAN&gt;Navarathana Kumar&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Sr Engineer (ABAP)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-delta-token-unavailable-exception/ba-p/14097985"/>
    <published>2025-05-20T16:07:35.616000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-identify-sap-fiori-apps-based-on-rap-restful-application-programming/ba-p/14110977</id>
    <title>✨ How to Identify SAP Fiori Apps Based on RAP (RESTful Application Programming Model)</title>
    <updated>2025-05-25T14:02:49.165000+02:00</updated>
    <author>
      <name>VishalKumar_BTPArchitect</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/493330</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1602204973"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;With the rise of &lt;SPAN&gt;SAP S/4HANA&lt;/SPAN&gt; and &lt;SPAN&gt;SAP BTP&lt;/SPAN&gt;, the ABAP &lt;SPAN&gt;RESTful Application Programming Model &lt;/SPAN&gt;&lt;SPAN&gt;(RAP)&lt;/SPAN&gt; has become the gold standard for building cloud-ready, upgrade-safe applications. RAP brings together modern CDS views, OData services, business object behavior definitions, and service bindings to simplify and accelerate application development.&lt;/P&gt;&lt;P&gt;As SAP increasingly delivers new Fiori apps using RAP—and updates existing ones into RAP-based versions—it's becoming critical for developers, architects, and even functional consultants to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Identify which apps use RAP&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Understand how to extend them using &lt;/SPAN&gt;&lt;SPAN&gt;side-by-side, developer&lt;/SPAN&gt;&lt;SPAN&gt; or &lt;/SPAN&gt;&lt;SPAN&gt;in-app extensibility&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Recognize RAP-based capabilities like draft handling, validations, actions, and more&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;But here's the challenge: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;U&gt;SAP doesn't explicitly label Fiori apps as "RAP-based" in the Fiori Apps Library&lt;/U&gt;. So how can we reliably identify which apps are built using RAP?&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog shows you how. Let's break it down with examples, tools, screenshots, and common pitfalls.&lt;/P&gt;&lt;H3 id="toc-hId-1663856906"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Where to Begin? Fiori Apps Reference Library&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Head to the SAP Fiori Apps Reference Library. This is your primary tool for:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Searching apps by Line of Business (e.g., Finance, Procurement)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Filtering by SAP S/4HANA Version, UI Technology, and more&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Getting details like OData service, App ID, and Extensibility options&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT color="#FF9900"&gt;&lt;STRONG&gt;But here's the catch: The library doesn't let you filter directly for "RAP-based apps". So you have to be smart about indirect clues&lt;/STRONG&gt;&lt;/FONT&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="FIORI App Library.JPG" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265715iEB0096ED8879819A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="FIORI App Library.JPG" alt="FIORI App Library.JPG" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1467343401"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1270829896"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-1074316391"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-877802886"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-681289381"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-484775876"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":high_voltage:"&gt;⚡&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;RAP Indicators in the Library&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Apply these filters and clues:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;UI Technology: Select SAP Fiori elements (RAP supports this by default)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Application Type: Select Transactional&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;OData Version: If available, filter or check for OData V4 (Most RAP Apps are build on OData V4 technology )&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;App Name or Version: Look for apps with names like:&lt;/SPAN&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;"Manage Sales Quotation - Version 2"&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;"Manage Sales Contract - Version 2"&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-159179652"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":crystal_ball:"&gt;🔮&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Confirming RAP in the Backend (Step-by-Step)&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;If you've found a promising app in the Fiori Library, verify it in the backend using ADT (ABAP Development Tools) or SAP GUI.&lt;/P&gt;&lt;H3 id="toc-hId-91748866"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Checklist: Is It RAP?&lt;/SPAN&gt;&lt;/H3&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;Checkpoint&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;RAP Indicator&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;STRONG&gt;Tool&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;Service Binding exists&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Required&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;ADT (Eclipse/BAS)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;Service Definition used&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Required&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;ADT&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;Behavior Definition present&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Required&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;ADT&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;No SEGW project involved&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Good sign&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;ADT or GUI&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;OData Version = 4.0&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Strong hint&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%"&gt;&lt;P&gt;/IWFND/MAINT_SERVICE&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-113406999"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;RAP-Based App Example&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;App ID F5630 (Manage Sales Quotation - Version 2):&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;OData = V4 &lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Has Service Definition: UI_SALESQUOTATIONMANAGE&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Has Service Binding: UI_SALESQUOTATIONMANAGE &lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Has Behavior Definition: &lt;/SPAN&gt;&lt;SPAN&gt;I_SalesQuotationTP &lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":party_popper:"&gt;🎉&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Conclusion: This is a RAP-based Fiori app.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Sales Quote App.JPG" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265718iDF36BE5273608F67/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Sales Quote App.JPG" alt="Sales Quote App.JPG" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Sales Quote App-2.JPG" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265717i92C639C600F2D2D7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Sales Quote App-2.JPG" alt="Sales Quote App-2.JPG" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--83106506"&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="BD.JPG" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265722i68EC5FA70CC2522F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BD.JPG" alt="BD.JPG" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;H2 id="toc-hId--279620011"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--476133516"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--672647021"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--869160526"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1065674031"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1262187536"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1458701041"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1655214546"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1683544360"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":bar_chart:"&gt;📊&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Diagram: How RAP-Based Fiori App Is Structured&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;UI_SALESQUOTATIONMANAGE (Service Binding, OData V4)&lt;/P&gt;&lt;P&gt;└── UI_SALESQUOTATIONMANAGE (Service Definition)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; └── [Projection CDS View – C_SalesQuotationManageTP]&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; └── I_SalesQuotationTP (Root CDS View with Behavior)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; └── Behavior Definition (BDD)&lt;/P&gt;&lt;H2 id="toc-hId--1880057865"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":sparkles:"&gt;✨&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Identifying whether a Fiori app is &lt;SPAN&gt;RAP-based&lt;/SPAN&gt; takes a bit of detective work, but once you understand the key indicators—&lt;SPAN&gt;OData V4, service binding, behavior definition&lt;/SPAN&gt;—you'll be able to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Build smarter extensions&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create upgrade-stable extensions&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use modern features like drafts, validations, and late numbering&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Whether you're a developer or an architect planning your SAP S/4HANA roadmap, knowing how to filter and confirm RAP apps helps you take full advantage of the modern ABAP programming model.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you found this blog helpful, share it with your team and Happy Learning Together !! &lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-identify-sap-fiori-apps-based-on-rap-restful-application-programming/ba-p/14110977"/>
    <published>2025-05-25T14:02:49.165000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/retrieve-data-from-rest-api-to-abap/ba-p/14109609</id>
    <title>Retrieve Data from Rest API to ABAP</title>
    <updated>2025-05-27T09:27:13.029000+02:00</updated>
    <author>
      <name>Aravindha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1442730</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In abap, we create and expose API service through the OData gateway client for integration with third-party systems. This blog focuses on how to retrieve data from a REST API using a standard ABAP class. I have created the OData service using the GET_ENTITY method in an OData project and consumed that API using the approach described below.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;cl_http_client&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;if_http_client&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;****Data Declarations****
TYPES: BEGIN OF tt_json,
         MaterialCode TYPE matnr,           "Material
         UserName     TYPE ernam,           "Creator Name
         mtart        TYPE mtart,           "Material Type
       END OF tt_json.

TYPES: BEGIN OF ty_field,
         fielname TYPE char40,              "Field Name
       END OF ty_field.

DATA: lt_material     TYPE TABLE OF tt_json,
      lt_tab          TYPE TABLE OF ty_field,
      ls_material     TYPE tt_json,
      lo_http         TYPE REF TO if_http_client,    "HTTP Client Abstraction
      lr_data         TYPE REF TO data,
      lv_result       TYPE string,
      lv_content_type TYPE string,
      lv_action_type  TYPE string.

FIELD-SYMBOLS: &amp;lt;ls_data&amp;gt;   TYPE data,
               &amp;lt;ls_d&amp;gt;      TYPE data,
               &amp;lt;ls_struct&amp;gt; TYPE data,
               &amp;lt;lv_any&amp;gt;    TYPE any,
               &amp;lt;lv_char&amp;gt;.

SELECTION-SCREEN BEGIN OF BLOCK a1 WITH FRAME TITLE TEXT-002.
  PARAMETERS: p_mat TYPE matnr OBLIGATORY.
SELECTION-SCREEN END OF BLOCK a1.

*Get URL
DATA(lv_url) =  |{ TEXT-001 }'{ p_mat }')|  .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The API and selection screen look likes,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_0-1747933764005.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265182iF3F80F92AA75BE26/image-dimensions/635x81?v=v2" width="635" height="81" role="button" title="Aravindha_0-1747933764005.png" alt="Aravindha_0-1747933764005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Select Screen.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265201iD6D1B6CEA04CB76A/image-dimensions/697x122?v=v2" width="697" height="122" role="button" title="Select Screen.png" alt="Select Screen.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"To perform the HTTP communication using factory method.
cl_http_client=&amp;gt;create_by_url(
  EXPORTING
    url                    = lv_url           " URL
  IMPORTING
    client                 = lo_http          " HTTP Client Abstraction
  EXCEPTIONS
    argument_not_found     = 1                " Communication parameter (host or service) not available
    plugin_not_active      = 2                " HTTP/HTTPS communication not available
    internal_error         = 3                " Internal error (e.g. name too long)
    OTHERS                 = 7
).
"
IF sy-subrc = 0.
  lv_content_type  = 'application/json'.
  lv_action_type   = 'GET'.
  lo_http-&amp;gt;request-&amp;gt;set_content_type(  lv_content_type ).
  lo_http-&amp;gt;request-&amp;gt;set_method( lv_action_type ).
"The output shows a json format.
  lo_http-&amp;gt;request-&amp;gt;set_header_field(
  EXPORTING
    name  =  'Accept'                          " Name of the header field
    value =  'application/json'                " HTTP header field value
).
"To ignore the authentication during execution.
  lo_http-&amp;gt;propertytype_logon_popup = if_http_client=&amp;gt;co_disabled.
  lo_http-&amp;gt;authenticate(
  EXPORTING
    proxy_authentication = ' '            " Proxy Logon (= 'X')
    client               = '800'          " R/3 system (client number from logon)
    username             = 'username'     " ABAP System, User Logon Name
    password             = 'password'     " Logon ID
    language             = 'E'            " SAP System, Current Language
).
ENDIF.

lo_http-&amp;gt;send(
  EXPORTING
    timeout                    = 15                 " Timeout of Answer Waiting Time
  EXCEPTIONS
    http_communication_failure = 1                  " Communication Error
    http_invalid_state         = 2                  " Invalid state
    http_processing_failed     = 3                  " Error when processing method
    http_invalid_timeout       = 4                  " Invalid Time Entry
    OTHERS                     = 5
).
IF sy-subrc &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

lo_http-&amp;gt;receive(
  EXCEPTIONS
    http_communication_failure = 1                " Communication Error
    http_invalid_state         = 2                " Invalid state
    http_processing_failed     = 3                " Error when processing method
    OTHERS                     = 4
).
IF sy-subrc &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*Get the response from target as character string cdata( ).
lv_result = lo_http-&amp;gt;response-&amp;gt;get_cdata( ).
lo_http-&amp;gt;close( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;We have the response from target system and need to retrieve the data from the string variable lv_result.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*Deserialize the data from Json to Abap
/ui2/cl_json=&amp;gt;deserialize(
  EXPORTING
    json             =  lv_result         " JSON string
  CHANGING
    data             =  lr_data           " Data to serialize
).

lt_tab =  VALUE #( ( fielname = 'MATERIALCODE')
                   ( fielname = 'USERNAME')
                   ( fielname = 'MTART'  ) ).

ASSIGN lr_data-&amp;gt;* TO &amp;lt;ls_data&amp;gt;.
ASSIGN COMPONENT 'd' OF STRUCTURE &amp;lt;ls_data&amp;gt; TO &amp;lt;ls_d&amp;gt;.

DATA(lo_typedescr) = cl_abap_typedescr=&amp;gt;describe_by_data( &amp;lt;ls_d&amp;gt; ).
ASSIGN &amp;lt;ls_d&amp;gt;-&amp;gt;* TO &amp;lt;ls_struct&amp;gt;.
IF &amp;lt;ls_struct&amp;gt; IS ASSIGNED.
  LOOP AT lt_tab INTO DATA(ls_tab).
    ASSIGN COMPONENT ls_tab-fielname OF STRUCTURE &amp;lt;ls_struct&amp;gt; TO &amp;lt;lv_any&amp;gt;.
    IF &amp;lt;lv_any&amp;gt; IS ASSIGNED.
      ASSIGN &amp;lt;lv_any&amp;gt;-&amp;gt;* TO &amp;lt;lv_char&amp;gt;.
      IF &amp;lt;lv_char&amp;gt; IS ASSIGNED.
        ASSIGN COMPONENT ls_tab-fielname OF STRUCTURE ls_material TO FIELD-SYMBOL(&amp;lt;lv_target&amp;gt;).
        IF &amp;lt;lv_target&amp;gt; IS ASSIGNED.
          &amp;lt;lv_target&amp;gt; = &amp;lt;lv_char&amp;gt;.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDIF.
UNASSIGN: &amp;lt;ls_data&amp;gt;,&amp;lt;ls_d&amp;gt;,&amp;lt;ls_struct&amp;gt;,&amp;lt;lv_any&amp;gt;,&amp;lt;lv_char&amp;gt;,&amp;lt;lv_target&amp;gt;.

cl_demo_output=&amp;gt;begin_section( 'Material Detail' ).
cl_demo_output=&amp;gt;write_data( ls_material ).
cl_demo_output=&amp;gt;next_section( 'OData Service URL' ).
cl_demo_output=&amp;gt;write_text( lv_url ).
cl_demo_output=&amp;gt;display( ).
CLEAR: ls_material.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The output should be like below in debugger level.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Debugger Level.png" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265202i641ED9C9567251A4/image-dimensions/571x239?v=v2" width="571" height="239" role="button" title="Debugger Level.png" alt="Debugger Level.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Output.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265205i35F15273B8391E9B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Output.png" alt="Output.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Test the above service URI to postman app in GET method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Post 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265207iC803123558A9A968/image-size/large?v=v2&amp;amp;px=999" role="button" title="Post 1.png" alt="Post 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Post 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265208i4CE7DF673C51A334/image-size/large?v=v2&amp;amp;px=999" role="button" title="Post 2.png" alt="Post 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; In the example above, I retrieved data from an OData HTTP API that does not require an SSL certificate. However, when communication with external APIs. an SSL certificate is typically required. We will cover this in detail in a separate blog post.&lt;/P&gt;&lt;P&gt;Thank you!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/retrieve-data-from-rest-api-to-abap/ba-p/14109609"/>
    <published>2025-05-27T09:27:13.029000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-advanced-event-mesh-blog-collection/ba-p/14111943</id>
    <title>SAP Integration Suite, Advanced Event Mesh Blog Collection</title>
    <updated>2025-05-27T10:32:54.286000+02:00</updated>
    <author>
      <name>AlexPfeil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165526</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1602234667"&gt;Introduction&lt;/H1&gt;&lt;P&gt;In today’s fast-paced, event-driven world, seamless data movement and real-time responsiveness have become critical to modern application architectures. &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;Advanced Event Mesh&lt;/STRONG&gt; (AEM) offers a powerful solution—enabling dynamic, reliable, and scalable event streaming across hybrid and multi-cloud environments.&lt;/P&gt;&lt;P&gt;Over time, we've created a substantial amount of content around Advanced Event Mesh—now it makes sense to bring all the pieces together in one place as a cohesive blog collection, including Guides &amp;amp; contributions from other AEM Experts in the Community.&lt;/P&gt;&lt;P&gt;This blog serves as a &lt;STRONG&gt;central hub&lt;/STRONG&gt;—a curated collection of insightful articles, technical deep dives and best practices focused on AEM and SAP Event Enablement Options like RAP, AIFAEM and the SAP Event-Enablement Add-On (ASAPIO). Whether you're just getting started or looking to optimize a production-grade deployment, this collection is designed to guide you through the concepts and capabilities of AEM.&lt;/P&gt;&lt;P&gt;Let’s explore how event mesh technology is transforming integration strategies and empowering developers and architects to build the next generation of event-driven systems.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1405721162"&gt;Getting Started&lt;/H1&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;&lt;A href="https://developers.sap.com/mission.advanced-event-mesh-get-started.html" target="_self" rel="noopener noreferrer"&gt;Get Started with SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-basic-concepts/ba-p/13572050" target="_self"&gt;Advanced Event Mesh: Basic Concepts&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-create-your-first-event-broker/ba-p/13571945" target="_blank"&gt;Advanced Event Mesh: Create your first event broker&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1338290376"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1141776871"&gt;AEM Features&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-advanced-event-mesh-manage-advance-event-mesh-with-api-s/ba-p/13807071" target="_self"&gt;SAP Advanced Event Mesh – Manage Advance Event Mesh with API’s&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/automating-advanced-event-mesh-broker-creation/ba-p/13595187" target="_self"&gt;Automating Advanced Event Mesh Broker Creation&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-replay/ba-p/13574847" target="_blank"&gt;Advanced Event Mesh: Replay&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-queue/ba-p/13574698" target="_self"&gt;Advanced Event Mesh: Queue&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/enabling-in-order-processing-with-sap-integration-suite-advanced-event-mesh/ba-p/13703498" target="_blank"&gt;Enabling In-Order processing with SAP Integration Suite, advanced event mesh Partitioned Queues&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/securing-sap-advanced-event-mesh-oauth-configuration-and-semp-api/ba-p/13750269" target="_blank"&gt;Securing SAP Advanced Event Mesh: OAuth Configuration and SEMP API Integration&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-945263366"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-748749861"&gt;Connectivity &amp;amp; Auth&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-client-authentication-basic-oauth/ba-p/13572073" target="_self"&gt;Advanced Event Mesh: Client Authentication - Basic / OAuth&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/advanced-event-mesh-connectors-and-easy-event-driven-example-of-s-4hana/ba-p/13642721" target="_blank"&gt;Advanced Event Mesh Connectors and Easy Event-Driven Example of S/4HANA with Amazon S3 Integration&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-552236356"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-355722851"&gt;Event Portal / Developer Hub&lt;/H2&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/enable-sap-developer-hub-as-central-event-catalog/ba-p/14076495" target="_blank"&gt;Enable SAP Developer Hub as central Event Catalog&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/discover-s-4hana-cloud-events-in-sap-developer-hub/ba-p/14097325" target="_blank"&gt;Discover S/4HANA Cloud Events in SAP Developer Hub&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-159209346"&gt;Monitoring&lt;/H2&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/configure-sap-integration-suite-advanced-event-mesh-distributed-tracing/ba-p/13755378" target="_self"&gt;Configure SAP Integration Suite, Advanced Event Mesh Distributed Tracing&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/evaluate-sap-integration-suite-advanced-event-mesh-datadog-distributed/ba-p/13776768" target="_blank"&gt;Evaluate SAP Integration Suite, Advanced Event Mesh Datadog Distributed Tracing&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-troubleshooting/ba-p/13762032" target="_blank"&gt;Advanced Event Mesh:Troubleshooting&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--37304159"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-113436693"&gt;User Management&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/introduction-to-group-management-in-sap-integration-suite-advanced-event/ba-p/14050720" target="_blank"&gt;Introduction to Group Management in SAP Integration Suite, Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-user-management-in-advanced-event-mesh-with-sap-cis-and/ba-p/14108619" target="_blank"&gt;Streamlining User Management in Advanced Event Mesh with SAP CIS and Identity Federation&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-advanced-event-mesh-event-access-approval-workflow/ba-p/13953086" target="_self"&gt;SAP Advanced Event Mesh – Event Access Approval Workflow&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--83076812"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--279590317"&gt;Deployment Options&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/setting-up-a-private-sap-advanced-event-mesh-cluster-on-suse-rancher-rke2/ba-p/13988701" target="_blank"&gt;Setting Up a Private SAP Advanced Event Mesh Cluster on SUSE Rancher RKE2&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId--476103822"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--672617327"&gt;Kafka Bridge&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/sap-integration-suite-connect-everything-featuring-kafka/ba-p/14050084" target="_blank"&gt;SAP Integration Suite – Connect Everything FEATURING Kafka&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/bridging-advanced-event-mesh-and-kafka-dynamic-topics-and-headers-in-action/ba-p/14098091" target="_blank"&gt;Bridging Advanced Event Mesh and Kafka: Dynamic Topics and Headers in Action&lt;/A&gt;&lt;/P&gt;&lt;H1 id="toc-hId--575727825"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--772241330"&gt;SAP Event Enablement&lt;/H1&gt;&lt;H2 id="toc-hId--1262157842"&gt;RAP&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/rap-business-events-with-sap-integration-suite-advanced-event-mesh-and-sap/ba-p/13913393" target="_blank"&gt;RAP Business Events with SAP Integration Suite, Advanced Event Mesh and SAP S/4HANA On Premise 2023&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-1-connecting-aem-to-s-4hana-on/ba-p/13913581" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [1]: Connecting AEM to S/4HANA On Premise 2023&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-3-creating-events-with-deep/ba-p/13914285" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [3]: Creating events with deep payloads&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-4-creating-a-derived-event/ba-p/13915120" target="_self"&gt;RAP Business Events with Advanced Event Mesh [4]: Creating a derived event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-6-consuming-a-remote-event/ba-p/13915155" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [6]: Consuming a remote event&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1458671347"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1655184852"&gt;AIFAEM&lt;/H2&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/a-natural-choice-sap-aif-can-now-expose-events-to-advanced-event-mesh-to/ba-p/13773758" target="_blank"&gt;A Natural Choice: SAP AIF can now expose events to Advanced Event Mesh to power your EDA&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-enhanced-events-for-advanced-event-mesh-with-application/ba-p/13780160" target="_blank"&gt;How to set up enhanced Events for Advanced Event Mesh with Application Interface Framework &amp;amp; AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-out-idocs-to-advanced-event-mesh-using-sap-application/ba-p/13972680" target="_blank"&gt;How to send out IDocs to Advanced Event Mesh using SAP Application Interface Framework &amp;amp; AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-set-up-filters-in-aifaem/ba-p/13982842" target="_blank"&gt;How to set up Filters in AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-display-the-json-payload-in-aifaem/ba-p/14098028" target="_blank"&gt;How to Display the JSON Payload in AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-send-custom-http-headers-in-aifaem/ba-p/14098050" target="_blank"&gt;How to send Custom HTTP Headers in AIFAEM&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1390111659"&gt;Initial Loads&lt;/H1&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/blog-series-intitial-loads-to-sap-advanced-event-mesh/ba-p/14074847" target="_blank"&gt;Blog Series - Intitial Loads to SAP Advanced Event Mesh&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1586625164"&gt;Other&lt;/H1&gt;&lt;P&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/btp-event-mesh-advance-concepts/ba-p/13528142" target="_blank"&gt;BTP Event Mesh Advance Concepts&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--1783138669"&gt;Summary&lt;/H1&gt;&lt;P&gt;This collection brings together key insights and technical deep dives around Advanced Event Mesh to help you navigate, implement, and optimize event-driven architectures. If you notice that a relevant blog post or important topic is missing, feel free to let me know in the comments—I'm happy to expand the list and keep this collection as complete and useful as possible.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-advanced-event-mesh-blog-collection/ba-p/14111943"/>
    <published>2025-05-27T10:32:54.286000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/building-and-publishing-external-apis-in-sap-s-4hana-cloud-public-from-adt/ba-p/14114911</id>
    <title>Building and Publishing External APIs in SAP S/4HANA Cloud Public: From ADT to Postman</title>
    <updated>2025-05-30T00:42:21.519000+02:00</updated>
    <author>
      <name>Mahmoud-Farag</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45055</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1602323945"&gt;Overview&lt;/H1&gt;&lt;P&gt;This guide explains how to create and expose a custom external API using the &lt;STRONG&gt;Developer Extensibility&lt;/STRONG&gt; approach in &lt;STRONG&gt;SAP S/4HANA Cloud, Public Edition&lt;/STRONG&gt;. The process involves creating a custom business object, implementing its behavior, and publishing it as a service accessible to external systems.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1405810440"&gt;&lt;SPAN&gt;Prerequisites&lt;/SPAN&gt;&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;Access to SAP S/4HANA Cloud, Public Edition with developer extensibility enabled.&lt;/LI&gt;&lt;LI&gt;ABAP Development Tools (ADT) installed in Eclipse.&lt;/LI&gt;&lt;LI&gt;Business role &lt;STRONG&gt;SAP_BR_DEVELOPER&lt;/STRONG&gt; assigned.&lt;/LI&gt;&lt;LI&gt;A development package created in the ABAP environment.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1209296935"&gt;&lt;SPAN&gt;Step-by-Step Guide&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Create a Custom Database Table: &lt;/STRONG&gt;This is the foundational data structure where your application’s data will be stored. It represents the physical storage in the system.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In ADT, create a new database table (e.g., &lt;STRONG&gt;&lt;EM&gt;ZTODO_LIST&lt;/EM&gt;&lt;/STRONG&gt;).&lt;/LI&gt;&lt;LI&gt;&lt;DIV class=""&gt;Define required fields and activate the table.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_4-1748555629918.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267559i5B958A8E9BD8A03B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_4-1748555629918.png" alt="MahmoudFarag_4-1748555629918.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_5-1748555639091.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267560iA1CE1FEE37D286B3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_5-1748555639091.png" alt="MahmoudFarag_5-1748555639091.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_6-1748555649556.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267561iB9D2A04817DD739B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_6-1748555649556.png" alt="MahmoudFarag_6-1748555649556.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_7-1748555656033.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267562iBBA0E94D5FF23E09/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_7-1748555656033.png" alt="MahmoudFarag_7-1748555656033.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create a Root CDS View (Interface View):&amp;nbsp;&lt;/STRONG&gt;The root CDS view defines the business object’s main entity (the root node) and provides an abstraction over the database table. It enables the use of annotations and is required to define the behavior and expose data services.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Right-click your package &amp;gt; New &amp;gt; Data Definition.&lt;/LI&gt;&lt;LI&gt;Name it (e.g., &lt;STRONG&gt;Z_I_TODO_LIST&lt;/STRONG&gt;).&lt;/LI&gt;&lt;LI&gt;Use defines root view syntax to expose your database table.&lt;/LI&gt;&lt;LI&gt;Annotate with &lt;STRONG&gt;@ObjectModel:&lt;/STRONG&gt; and activate the view.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_8-1748555792472.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267563i745687C08CD38ED5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_8-1748555792472.png" alt="MahmoudFarag_8-1748555792472.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_9-1748555796868.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267564i29165E873ADFA709/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_9-1748555796868.png" alt="MahmoudFarag_9-1748555796868.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create Behavior Definition with Managed Implementation:&amp;nbsp;&lt;/STRONG&gt;The behavior definition governs how the data can be interacted with (Create, Read, Update, Delete - CRUD). Using managed implementation reduces manual coding and allows SAP to handle the data persistence layer automatically.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Right-click on the CDS view &amp;gt; New Behavior Definition&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Mapping the CDS Fields with Custom table.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_11-1748555874816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267566iEFDF858443655E25/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_11-1748555874816.png" alt="MahmoudFarag_11-1748555874816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_12-1748555885330.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267567iB0379A9FDCE39427/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_12-1748555885330.png" alt="MahmoudFarag_12-1748555885330.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_13-1748555890930.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267568iBF8BC1B6C4D0BEA3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_13-1748555890930.png" alt="MahmoudFarag_13-1748555890930.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create a Projection View:&amp;nbsp;&lt;/STRONG&gt;The projection view exposes only the fields and structure you want available to the external world via the API. It acts as the public API interface layered over the root CDS view and enables additional annotations like UI or access control.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Right-click &amp;gt; New &amp;gt; Data Definition.&lt;/LI&gt;&lt;LI&gt;Use define root view entity as projection&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_14-1748556053034.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267569iC5B8C404BD86CBA3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_14-1748556053034.png" alt="MahmoudFarag_14-1748556053034.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_15-1748556063672.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267570iDA80FE974DA7E3B0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_15-1748556063672.png" alt="MahmoudFarag_15-1748556063672.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create behavior definition for your Projection View:&amp;nbsp;&lt;/STRONG&gt;Determines what operations (Create, Update, Delete, Action, etc.) are exposed to consumers of the API&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_16-1748556092610.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267571i6E4C6E4C2DD19E8E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_16-1748556092610.png" alt="MahmoudFarag_16-1748556092610.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_17-1748556100316.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267572iB427D72218321458/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_17-1748556100316.png" alt="MahmoudFarag_17-1748556100316.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_18-1748556106871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267573i2B104F3A05D6ACD9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_18-1748556106871.png" alt="MahmoudFarag_18-1748556106871.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Define a Service Definition:&amp;nbsp;&lt;/STRONG&gt;The service definition tells SAP which projection view (and hence, which data and operations) to expose as a service. This is a required layer before service binding can be created.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Right-click &amp;gt; New &amp;gt; Service Definition.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_20-1748556167035.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267575i4C035DFAECE96804/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_20-1748556167035.png" alt="MahmoudFarag_20-1748556167035.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_21-1748556209248.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267576iA3A02563FF552F00/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_21-1748556209248.png" alt="MahmoudFarag_21-1748556209248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create a Service Binding:&amp;nbsp;&lt;/STRONG&gt;The binding connects the service definition to a specific protocol (e.g., OData V4) and exposes the service endpoint URL.&lt;BR /&gt;It also allows you to publish the service so it's available in the system catalog.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Right-click &amp;gt; New &amp;gt; Service Binding.&lt;/LI&gt;&lt;LI&gt;Choose OData V4 as the binding type.&lt;/LI&gt;&lt;LI&gt;Name and activate the binding.&lt;/LI&gt;&lt;LI&gt;Click Publish to make it available.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_22-1748556279138.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267577iE08110DF87A8E709/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_22-1748556279138.png" alt="MahmoudFarag_22-1748556279138.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_23-1748556293196.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267578iFD01856DDCF745C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_23-1748556293196.png" alt="MahmoudFarag_23-1748556293196.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_24-1748556306290.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267579i041C88A0EE1D43D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_24-1748556306290.png" alt="MahmoudFarag_24-1748556306290.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create a Communication Scenario&lt;/STRONG&gt;&lt;STRONG&gt;:&amp;nbsp;&lt;/STRONG&gt;The communication scenario defines the APIs and authorizations needed for external communication. It acts as a container that external systems will use to discover and authenticate with your custom service.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In ADT, create a communication scenario.&lt;/LI&gt;&lt;LI&gt;Add your service binding.&lt;/LI&gt;&lt;LI&gt;Define inbound service, I/O structure, and authorization.&lt;/LI&gt;&lt;LI&gt;Activate and publish it.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_25-1748556448865.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267580i1C1ECD4F05E8561A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_25-1748556448865.png" alt="MahmoudFarag_25-1748556448865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_26-1748556457608.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267581i11B137B278A92EE0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_26-1748556457608.png" alt="MahmoudFarag_26-1748556457608.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_27-1748556462977.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267582i626F13CA08BA5E15/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_27-1748556462977.png" alt="MahmoudFarag_27-1748556462977.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_28-1748556468836.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267583i9C14ED8C5FD8B980/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_28-1748556468836.png" alt="MahmoudFarag_28-1748556468836.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configure Communication Arrangement in SAP Fiori&lt;/STRONG&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;:&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="4"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;FONT size="3"&gt;The communication arrangement ties the communication scenario to an actual communication system and user credentials.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_29-1748556623334.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267584i5EBB73C6C4DECE4B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_29-1748556623334.png" alt="MahmoudFarag_29-1748556623334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a New Communication User:&lt;OL&gt;&lt;LI&gt;Go to the &lt;STRONG&gt;Fiori Launchpad&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Search for or open "&lt;STRONG&gt;Maintain Communication Users&lt;/STRONG&gt;" app.&lt;/LI&gt;&lt;LI&gt;Click on &lt;STRONG&gt;"&lt;/STRONG&gt;New&lt;STRONG&gt;"&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Fill in the required fields&lt;/LI&gt;&lt;LI&gt;Save the user.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Create a Communication System:&lt;OL&gt;&lt;LI&gt;Go to your &lt;STRONG&gt;SAP Fiori Launchpad&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Search for and open &lt;STRONG&gt;"Communication Systems"&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Users for Inbound Communication&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Click &lt;STRONG&gt;"&lt;/STRONG&gt;New&lt;STRONG&gt;"&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Fill Communication Users (technical credentials).&lt;/LI&gt;&lt;LI&gt;Save.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;Open “&lt;STRONG&gt;Communication Arrangements&lt;/STRONG&gt;” app in &lt;STRONG&gt;SAP Fiori Launchpad&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Create a new arrangement using your communication scenario.&lt;/LI&gt;&lt;LI&gt;Set communication system, user, and authentication method.&lt;/LI&gt;&lt;LI&gt;Save to generate the external API URL.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_30-1748556715301.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267585i5680B714A825B9B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_30-1748556715301.png" alt="MahmoudFarag_30-1748556715301.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_31-1748556720633.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267586iE35CA6B9902455C9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_31-1748556720633.png" alt="MahmoudFarag_31-1748556720633.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test&lt;/STRONG&gt; -&amp;nbsp;&lt;STRONG&gt;Postman&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_33-1748556780237.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267588iA71D97A24EABBE06/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_33-1748556780237.png" alt="MahmoudFarag_33-1748556780237.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_34-1748556785872.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267589iFB7B6E80DDA62AB6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_34-1748556785872.png" alt="MahmoudFarag_34-1748556785872.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_35-1748556791674.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267590iE1F3CBC975087D20/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_35-1748556791674.png" alt="MahmoudFarag_35-1748556791674.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MahmoudFarag_36-1748556797769.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/267591iD7D6B293B709B106/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MahmoudFarag_36-1748556797769.png" alt="MahmoudFarag_36-1748556797769.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1270948868"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Building an external API in SAP S/4HANA Cloud (Public Edition) using Developer Extensibility gives developers the tools to connect seamlessly with external systems — securely, efficiently, and in line with SAP best practices. By following a structured, standards-compliant process, you create scalable, flexible APIs that support modern integration needs, third-party tools, and future innovations in the cloud landscape.&lt;/P&gt;&lt;P&gt;And hey — if your API doesn’t work the first time... don’t panic. Just turn it off, activate it again, and pretend it was a test all along. &lt;span class="lia-unicode-emoji" title=":grinning_face_with_sweat:"&gt;😅&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/building-and-publishing-external-apis-in-sap-s-4hana-cloud-public-from-adt/ba-p/14114911"/>
    <published>2025-05-30T00:42:21.519000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-add-task-to-an-existing-transport-request-using-program/ba-p/14116716</id>
    <title>How to add task to an existing transport request using program</title>
    <updated>2025-06-02T14:09:07.356000+02:00</updated>
    <author>
      <name>Jayesh_Gharate1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1615208</uri>
    </author>
    <content>&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;SPAN&gt;PARAMETERS: &lt;/SPAN&gt;&lt;SPAN&gt;p_TR&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt; OBLIGATORY. // Take TR as parameter&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;DATA: &lt;/SPAN&gt;&lt;SPAN&gt;lt_authorlist&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trwbo_users&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;lt_return&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;e070&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ls_return&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;bapiret2&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;lv_new_task&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt;. // Variable to take task &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;START-OF-SELECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;CALL FUNCTION &lt;/SPAN&gt;&lt;SPAN&gt;'TRINT_INSERT_NEW_COMM'&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;EXPORTING&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_kurztext&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;'New Task' // Description if creating TR&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_trfunction&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;'S' // 'S' to create task under TR &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;iv_username&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;sy&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;uname // System Username &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_strkorr&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;p_TR // Export TR value to FM&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;IMPORTING&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we_trkorr&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;lv_new_task // Import task to the variable&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;EXCEPTIONS&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_systemname&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_systemtype&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_authorization&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;3&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;db_access_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;4&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;file_access_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;5&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;enqueue_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;6&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;number_range_full&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;7&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;invalid_input&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;8&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;OTHERS = &lt;/SPAN&gt;&lt;SPAN&gt;9&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;IF &lt;/SPAN&gt;&lt;SPAN&gt;sy&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;subrc&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WRITE: &lt;/SPAN&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;' New task created under TR:'&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;p_TR&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;' Task number:'&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;lv_new_task&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ELSE.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WRITE: &lt;/SPAN&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;'Failed to create task. '&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ENDIF.&lt;BR /&gt;&lt;BR /&gt;*********************************************************************************&lt;BR /&gt;Type of request/task&lt;BR /&gt;Domain :&amp;nbsp;TRFUNCTION&lt;BR /&gt;K : Workbench Request&lt;BR /&gt;W : Customizing Request&lt;BR /&gt;S : Development/Correction&lt;BR /&gt;Q : Customizing Task&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-add-task-to-an-existing-transport-request-using-program/ba-p/14116716"/>
    <published>2025-06-02T14:09:07.356000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-enable-buffering-for-the-rap-bo-of-a-customizing-table/ba-p/14121303</id>
    <title>How to enable buffering for the RAP BO of a customizing table</title>
    <updated>2025-06-06T19:50:12.512000+02:00</updated>
    <author>
      <name>patrick_winkler</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/729521</uri>
    </author>
    <content>&lt;H1 id="toc-hId-887480474" id="toc-hId-1603152298"&gt;Introduction&lt;/H1&gt;&lt;P&gt;For a scalable and high-performance ABAP application, configuration data should always be accessed using the ABAP application server buffer.&lt;/P&gt;&lt;P&gt;In this blog, you will learn how to provide buffered access to your configuration data for your application and other software components if you have &lt;A href="https://developers.sap.com/group.abap-env-factory.html" target="_blank" rel="noopener noreferrer"&gt;created a RAP BO&lt;/A&gt; for the customizing table.&lt;/P&gt;&lt;P&gt;This blog is relevant for&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Public+Edition/pd-p/08e2a51b-1ce5-4367-8b33-4ae7e8b702e0" target="_blank"&gt;SAP S/4HANA Cloud Public Edition&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Private+Edition/pd-p/5c26062a-9855-4f39-8205-272938b6882f" target="_blank"&gt;SAP S/4HANA Cloud Private Edition&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+BTP+ABAP+environment/pd-p/73555000100800001164" target="_blank"&gt;SAP BTP ABAP environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Further reading:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/tag/business%20configuration%20maintenance%20object/tg-p/board-id/technology-blog-sap" target="_blank"&gt;Related blog posts&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Learn how you can use&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap?url_id=text-sapcommunity-prdteng-ABAP" target="_blank" rel="noopener noreferrer"&gt;ABAP technology&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to develop innovative applications and business solutions across SAP’s portfolio on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap" target="_blank" rel="noopener noreferrer"&gt;SAP Learning Site&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1406638793"&gt;Direct access to the table&lt;/H1&gt;&lt;P&gt;In your application code, you can use ABAP SQL to access the customizing table directly.&lt;BR /&gt;This is the leanest way to access the data. A valid pattern is to encapsulate the SQL statements in an API class.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To enable buffering, open the technical settings of the table and select buffering state and buffering type. Activate the table.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_0-1749211429507.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270837i9AF896B90F2EC682/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_0-1749211429507.png" alt="patrick_winkler_0-1749211429507.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_3-1749211576318.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270843iFBFE21D2B2D18BF2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_3-1749211576318.png" alt="patrick_winkler_3-1749211576318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Unlike the use of ABAP SQL with CDS view or ABAP EML, no access control is performed by default. See ABAP help documentation when choosing the &lt;A href="https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/index.htm?file=abenddic_database_tables_buffer.htm#@@ITOC@@ABENDDIC_DATABASE_TABLES_BUFFER_2" target="_blank" rel="noopener noreferrer"&gt;buffering type.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Other applications should not use ABAP SQL statements on your configuration tables. They can use a (released) version of the aforementioned API class but the standard pattern is to release a CDS view.&lt;/P&gt;&lt;H1 id="toc-hId-1210125288"&gt;CDS View&lt;/H1&gt;&lt;P&gt;Other applications should use a (released) version of a CDS view to access the configuration data of your application.&lt;/P&gt;&lt;P&gt;Before releasing the CDS view, you should test an example ABAP SQL statement to ensure that the buffer is used.&lt;BR /&gt;Create an executable ABAP class with such a statement. In ADT, right-click and select Profile As -&amp;gt; ABAP Application (Console). Continue with the default settings. Then open the ABAP Traces view and then open the recorded trace.&lt;BR /&gt;Navigate to the "Database Accesses" section and make sure that 1 is entered in the "Buffered Accesses" column.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD if_oo_adt_classrun~main.
    SELECT SINGLE * FROM zi_pwid WHERE id = 'TWO' INTO &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(result).
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Buffer is not used:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_0-1749228942057.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271082i1028765ABED28217/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_0-1749228942057.png" alt="patrick_winkler_0-1749228942057.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Buffer is used:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_2-1749229502827.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271084i70E0D166705914C9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_2-1749229502827.png" alt="patrick_winkler_2-1749229502827.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To enable buffering for the CDS view, you need to create a CDS view entity buffer. For more information, see&amp;nbsp;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/buffering-cds-view-entities/ba-p/13520422" target="_blank"&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/buffering-cds-view-entities/ba-p/13520422&lt;/A&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1013611783"&gt;ABAP EML&lt;/H1&gt;&lt;P&gt;It is not recommended to use ABAP EML to read configuration data. If you still want to create a read-only projection RAP BO for your configuration data for other applications, you need to create &lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/buffering-cds-view-entities/ba-p/13520422" target="_blank"&gt;buffer objects&lt;/A&gt; for the CDS view entities for buffered access.&lt;/P&gt;&lt;P&gt;In the SAP BTP ABAP Environment, I could not create a trace where you can see if the buffer is used or not. If you have access to transaction ST05, you can check it.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD if_oo_adt_classrun~main.
    READ ENTITY zi_pwid
    ALL FIELDS WITH VALUE #( ( id = 'TWO'  ) )
    RESULT DATA(read_result).
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;Buffer is not used:&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_8-1749230211184.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271103iDE3255A71112E7D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_8-1749230211184.png" alt="patrick_winkler_8-1749230211184.png" /&gt;&lt;/span&gt; &lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_10-1749230255502.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271108i1623FD48F2432E8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_10-1749230255502.png" alt="patrick_winkler_10-1749230255502.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;Buffer is used:&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_3-1749230050602.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271096i360482A98D9E4B7D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_3-1749230050602.png" alt="patrick_winkler_3-1749230050602.png" /&gt;&lt;/span&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="patrick_winkler_6-1749230104944.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271100iFBA6D264805329FB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="patrick_winkler_6-1749230104944.png" alt="patrick_winkler_6-1749230104944.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-enable-buffering-for-the-rap-bo-of-a-customizing-table/ba-p/14121303"/>
    <published>2025-06-06T19:50:12.512000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/deep-insert-in-unmanaged-rap/ba-p/14111318</id>
    <title>Deep Insert in Unmanaged RAP</title>
    <updated>2025-06-13T16:15:28.005000+02:00</updated>
    <author>
      <name>Faizan_khan1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451076</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the evolving landscape of SAP development, the ABAP RESTful Application Programming Model (RAP) has emerged as a pivotal framework for building modern, cloud-ready applications. While RAP offers both managed and unmanaged scenarios, the unmanaged approach provides developers with greater flexibility and control over data persistence and business logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;One of the complex operations in application development is the deep insert—creating a parent entity along with its associated child entities in a single transactional call. Implementing deep insert in an unmanaged RAP scenario requires meticulous planning and a clear understanding of the underlying architecture.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will walk you through the process of implementing deep insert functionality in an unmanaged RAP scenario. We'll explore the data model, define the necessary CDS views, set up behavior definitions, and implement the behavior classes to handle the deep insert logic effectively. This guide aims to provide a comprehensive understanding of the steps involved, ensuring a robust and efficient implementation.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Implementation Overview&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 1: &lt;STRONG&gt;Create Database Tables&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;First i have created two data base tables doing the create operation&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Header table&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Header Order Table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #RESTRICTED 

define table zfa_dt_order { 
key order_id : char10 not null; 
product : char20; 
product_brand : char20; 
product_quantity : char4; 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Item Table&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Pricing item table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #RESTRICTED
 
define table zfa_dt_pricing { 
key order_id : abap.char(10) not null; 

key product_id : abap.char(5) not null; 

product_price : abap.char(4); 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 2: Define Interface Views&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Then we have to create the interface Views upon both the table&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp; Header interface view&lt;/STRONG&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Here we have to use the key word composition and need to mention cardinality&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for header' 
@Metadata.ignorePropagatedAnnotations: true 

define root view entity zfa_i_Order_header as select from zfa_dt_order 
composition[1..1] of zfa_i_price_item as _Pricing 
{ 
key order_id as OrderId, 
product as Product, 
product_brand as ProductBrand, 
product_quantity as ProductQuantity, 
_Pricing // Make association public 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Item interface view&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the item view we&amp;nbsp; have to use association to parent&amp;nbsp; keyword&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Interface view for item' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
define view entity zfa_i_price_item as select from ZFA_DT_PRICING 
association to parent zfa_i_Order_header as _Order on $projection.OrderId = _Order.OrderId 
{ 
key order_id as OrderId, 
key product_id as ProductId, 
product_price as ProductPrice, 
_order 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 3: Define Projection Views&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Now we have to create Projection view upon interface view&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; Header Projection view&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Order projection' 
@Metadata.ignorePropagatedAnnotations: true 
@Metadata.allowExtensions: true 
define root view entity zfa_P_Order_header 
provider contract transactional_query as projection on zfa_i_Order_header 
{ 
key OrderId, 
Product, 
ProductBrand, 
ProductQuantity, 
/* Associations */ 
_Pricing : redirected to composition child zfa_P_price_item 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &amp;nbsp;&lt;STRONG&gt; Item projection view &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Price projection view' 
@Metadata.ignorePropagatedAnnotations: true 
@Metadata.allowExtensions: true 
define view entity zfa_P_price_item 
as projection on zfa_i_price_item 
{ 
key OrderId, 
key ProductId, 
ProductPrice,
/* Associations */ 
_order : redirected to parent zfa_P_Order_header 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 4: Define Behavior Definitions&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Then we have to create the&amp;nbsp; behavior definition for both interface and projection view of the header&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;Header Interface view Behavior definition&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;unmanaged implementation in class zbp_fa_i_order_header unique; 
strict ( 2 ); 
define behavior for zfa_i_Order_header //alias &amp;lt;alias_name&amp;gt; 
late numbering 
lock master 
authorization master ( instance ) 
//etag master &amp;lt;field_name&amp;gt; 
{ 
create; 
update; 
delete;
field ( readonly ) OrderId; 
association _Pricing { create; } 
mapping for zfa_dt_order 
{ 
OrderId = order_id ; 
Product = product; 
ProductBrand = product_brand; 
ProductQuantity = product_quantity; 
} 
} 
define behavior for zfa_i_price_item //alias &amp;lt;alias_name&amp;gt; 
late numbering 
lock dependent by _order 
authorization dependent by _order 
//etag master &amp;lt;field_name&amp;gt; 
{ 
create; 
update; 
delete; 
field ( readonly ) OrderId, ProductId; 
association _order; 
mapping for zfa_dt_pricing{ 
OrderId = order_id; 
ProductId = product_id; 
ProductPrice = product_price; 
} 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Header Projection view Behavior Definition&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection; 
strict ( 2 ); 
define behavior for zfa_P_Order_header //alias &amp;lt;alias_name&amp;gt; 
{ 
use create; 
use update; 
use delete; 
use association _Pricing { create; } 
} 
define behavior for zfa_P_price_item //alias &amp;lt;alias_name&amp;gt; 
{ 
use update; 
use delete; 
use association _order; 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 5: Implement Behavior Handler Classes&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;We have to write our implementation in behavior implementation class , I have used a Helper class for doing the deep insert and&amp;nbsp; I'm calling the methods in this class&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zfa_i_Order_header DEFINITION INHERITING FROM cl_abap_behavior_handler. 
PRIVATE SECTION. 
METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION 
IMPORTING keys REQUEST requested_authorizations FOR zfa_i_Order_header RESULT result. 

METHODS create FOR MODIFY 
IMPORTING entities FOR CREATE zfa_i_Order_header. 

METHODS update FOR MODIFY 
IMPORTING entities FOR UPDATE zfa_i_Order_header. 

METHODS delete FOR MODIFY 
IMPORTING keys FOR DELETE zfa_i_Order_header. 

METHODS read FOR READ 
IMPORTING keys FOR READ zfa_i_Order_header RESULT result. 

METHODS lock FOR LOCK 
IMPORTING keys FOR LOCK zfa_i_Order_header. 

METHODS rba_Pricing FOR READ 
IMPORTING keys_rba FOR READ zfa_i_Order_header\_Pricing FULL result_requested RESULT result LINK association_links. 

METHODS cba_Pricing FOR MODIFY 
IMPORTING entities_cba FOR CREATE zfa_i_Order_header\_Pricing. 
ENDCLASS. 

CLASS lhc_zfa_i_Order_header IMPLEMENTATION. 
METHOD get_instance_authorizations. 
ENDMETHOD. 

METHOD create. 
data(lo_order) = zfa_um_helper=&amp;gt;get_instance( ). 
lo_order-&amp;gt;create_order( 
EXPORTING 
entities = entities 
CHANGING 
mapped = mapped 
failed = failed 
reported = reported 
). 
ENDMETHOD. 

METHOD update. 
ENDMETHOD. 

METHOD delete. 
ENDMETHOD. 

METHOD read. 
ENDMETHOD. 

METHOD lock. 
ENDMETHOD. 

METHOD rba_Pricing. 
ENDMETHOD. 

METHOD cba_Pricing. 
data(lo_pricing) = zfa_um_helper=&amp;gt;get_instance_price( ). 
lo_pricing-&amp;gt;create_price( 
EXPORTING 
entities = entities_cba 
CHANGING 
mapped = mapped 
failed = failed 
reported = reported 
). 
ENDMETHOD. 
ENDCLASS. 

CLASS lhc_zfa_i_price_item DEFINITION INHERITING FROM cl_abap_behavior_handler. 
PRIVATE SECTION. 
METHODS update FOR MODIFY 
IMPORTING entities FOR UPDATE zfa_i_price_item. 

METHODS delete FOR MODIFY 
IMPORTING keys FOR DELETE zfa_i_price_item. 

METHODS read FOR READ 
IMPORTING keys FOR READ zfa_i_price_item RESULT result. 

METHODS rba_Order FOR READ 
IMPORTING keys_rba FOR READ zfa_i_price_item\_Order FULL result_requested RESULT result LINK association_links. 

METHODS create FOR MODIFY 
IMPORTING entities FOR CREATE zfa_i_price_item. 
ENDCLASS. 

CLASS lhc_zfa_i_price_item IMPLEMENTATION. 

METHOD update. 
ENDMETHOD. 

METHOD delete. 
ENDMETHOD. 

METHOD read. 
ENDMETHOD. 

METHOD rba_Order. 
ENDMETHOD. 

METHOD create. 
ENDMETHOD. 

ENDCLASS. 
CLASS lsc_ZFA_I_ORDER_HEADER DEFINITION INHERITING FROM cl_abap_behavior_saver. 
PROTECTED SECTION. 
METHODS finalize REDEFINITION. 
METHODS check_before_save REDEFINITION. 
METHODS adjust_numbers REDEFINITION. 
METHODS save REDEFINITION. 
METHODS cleanup REDEFINITION. 
METHODS cleanup_finalize REDEFINITION. 
ENDCLASS. 

CLASS lsc_ZFA_I_ORDER_HEADER IMPLEMENTATION. 
METHOD finalize. 
ENDMETHOD. 

METHOD check_before_save. 
ENDMETHOD. 

METHOD adjust_numbers. 
data(lo_order) = zfa_um_helper=&amp;gt;get_instance( ). 
lo_order-&amp;gt;adjust_number( 
CHANGING 
mapped = mapped 
reported = reported 
). 
ENDMETHOD. 

METHOD save. 
data(lo_save_order) = zfa_um_helper=&amp;gt;get_instance( ). 
lo_save_order-&amp;gt;save_order( 
CHANGING 
reported = reported 
). 
select max( order_id ) from zfa_dt_order into table (lt_oid). 
if lt_oid is not INITIAL. 
data(lo_save_price) = zfa_um_helper=&amp;gt;get_instance_price( ). 
lo_save_price-&amp;gt;save_price( 
CHANGING 
reported = reported 
). 
endif. 
ENDMETHOD. 

METHOD cleanup. 
ENDMETHOD. 

METHOD cleanup_finalize. 
ENDMETHOD. 

ENDCLASS. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step 6: Implement Helper Class for Deep Insert&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This is my helper &lt;/SPAN&gt;&lt;SPAN class=""&gt;class ,&lt;/SPAN&gt; &lt;SPAN class=""&gt;Here&lt;/SPAN&gt;&lt;SPAN class=""&gt; we can see our actual logic &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zfa_um_helper DEFINITION 
PUBLIC 
FINAL 
CREATE PUBLIC . 
PUBLIC SECTION. 

TYPES : tt_order_create TYPE TABLE FOR CREATE zfa_i_Order_header, 
tt_order_cba TYPE TABLE FOR CREATE zfa_i_Order_header\_Pricing, 
tt_order_delete TYPE TABLE FOR DELETE zfa_i_Order_header, 
tt_order_update TYPE TABLE FOR UPDATE zfa_i_order_header, 
tt_reported_early TYPE RESPONSE FOR REPORTED EARLY zfa_i_Order_header, 
tt_reported_late TYPE RESPONSE FOR REPORTED LATE zfa_i_Order_header, 
tt_mapped_early TYPE RESPONSE FOR MAPPED EARLY zfa_i_Order_header, 
tt_mapped_late TYPE RESPONSE FOR MAPPED LATE zfa_i_Order_header, 
tt_price_create TYPE TABLE FOR CREATE zfa_i_price_item, 
tt_price_delete TYPE TABLE FOR DELETE zfa_i_price_item, 
tt_price_update TYPE TABLE FOR UPDATE zfa_i_price_item, 
tt_failed_early TYPE RESPONSE FOR FAILED EARLY zfa_i_Order_header. 

CLASS-METHODS get_instance RETURNING VALUE(ret_order) TYPE REF TO zfa_um_helper. 

CLASS-METHODS get_instance_price RETURNING VALUE(ret_price) TYPE REF TO zfa_um_helper. 

METHODS : create_order 
IMPORTING entities TYPE tt_order_create 
CHANGING 
mapped TYPE tt_mapped_early 
failed TYPE tt_failed_early 
reported TYPE tt_reported_early, 

create_price 
IMPORTING entities TYPE tt_order_cba 
CHANGING 
mapped TYPE tt_mapped_early 
failed TYPE tt_failed_early 
reported TYPE tt_reported_early, 

adjust_number 
changing mapped type tt_mapped_late 
reported type tt_reported_late, 

save_order 
CHANGING reported TYPE tt_reported_late, 

save_price 
CHANGING reported TYPE tt_reported_late. 
PROTECTED SECTION. 
PRIVATE SECTION. 
CLASS-DATA : go_order TYPE REF TO zfa_um_helper, 
go_price TYPE REF TO zfa_um_helper, 
gt_order_create TYPE TABLE OF zfa_dt_order, 
gt_price_create TYPE TABLE OF zfa_dt_pricing, 
gt_price_create1 TYPE TABLE OF zfa_i_price_item , 
gt_order_delete TYPE RANGE OF zfa_i_Order_header-OrderId, 
gs_order TYPE zfa_dt_order. 
ENDCLASS. 

CLASS zfa_um_helper IMPLEMENTATION. 

METHOD get_instance. 
ret_order = go_order = COND #( WHEN go_order IS BOUND THEN go_order 
ELSE NEW #( ) ). 
ENDMETHOD. 

METHOD get_instance_price. 
ret_price = go_price = COND #( WHEN go_price IS BOUND THEN go_price 
ELSE NEW #( ) ). 
ENDMETHOD. 

METHOD create_order. 
gt_order_create = CORRESPONDING #( entities MAPPING FROM ENTITY ). 
mapped-zfa_i_order_header = CORRESPONDING #( entities ). 
ENDMETHOD. 

METHOD create_price. 
gt_price_create1 = CORRESPONDING #( entities[ 1 ]-%target ). 
gt_price_create = CORRESPONDING #( gt_price_create1 MAPPING order_id = OrderId product_id = ProductId product_price = ProductPrice ). 
mapped-zfa_i_price_item = CORRESPONDING #( entities ). 
ENDMETHOD. 

METHOD save_order. 
IF gt_order_create IS NOT INITIAL. 
INSERT zfa_dt_order FROM TABLE _order_create. 
ENDIF. 
ENDMETHOD. 

METHOD save_price. 
IF gt_price_create IS NOT INITIAL. 
INSERT zfa_dt_pricing FROM TABLE _price_create. 
ENDIF. 
ENDMETHOD. 

METHOD adjust_number. 
data : lv_num TYPE char10, 
lv_num2 TYPE char5. 
if gt_order_create is NOT INITIAL. 
SELECT max( order_id ) from zfa_dt_order into (lv_oid). 
lv_num = COND #( when sy-subrc = 4 then 0000000001 
ELSE lv_oid + 1 ). 
gt_order_create[ 1 ]-order_id = lv_num . 
ENDIF. 
if gt_price_create is NOT INITIAL. 
SELECT MAX( product_id ) from zfa_dt_pricing into (lv_pid). 
lv_num2 = COND #( when sy-subrc = 4 then 00001 
else lv_pid + 1 ). 
gt_price_create[ 1 ]-product_id = lv_num2. 
endif. 
ENDMETHOD. 
ENDCLASS. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step 7: Define Metadata Annotations&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After All the implementation is &lt;/SPAN&gt;&lt;SPAN class=""&gt;done&lt;/SPAN&gt;&lt;SPAN class=""&gt; we have to create the meta data files for both the projection view&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Metadata for Header Projection view&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer:#CORE 
annotate entity zfa_P_Order_header 
with  
{ 
@UI.facet: [{ 
purpose: #STANDARD, 
position: 10, 
label: 'Create Order', 
type: #IDENTIFICATION_REFERENCE 
}, 
{  
purpose: #STANDARD, 
position: 20, 
label: 'Create payment', 
type: #LINEITEM_REFERENCE, 
targetElement: '_Pricing' 
}] 
@UI.identification: [{ position: 10 , label: 'Order ID' }] 
@UI.lineItem: [{ position: 10, label: 'Order ID' }] 
OrderId; 
@UI.identification: [{ position: 20 , label: 'Product' }] 
@UI.lineItem: [{ position: 20, label: 'Product' }] 
Product; 
@UI.identification: [{ position: 30 , label: 'Product Brand' }] 
@UI.lineItem: [{ position: 30, label: 'Product Brand' }] 
ProductBrand; 
@UI.identification: [{ position: 40 , label: 'Product Quantity' }] 
@UI.lineItem: [{ position: 40, label: 'Product Quality' }] 
ProductQuantity; 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Metadata for item Projection view&lt;/STRONG&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE 
annotate entity zfa_P_price_item 
with  
{ 
@UI.facet: [{  
purpose: #STANDARD, 
position: 10, 
label: 'Price creation', 
type: #IDENTIFICATION_REFERENCE 
} 
] 
@UI.identification: [{ position: 10 , label: 'Order ID' }] 
@UI.lineItem: [{ position: 10}] 
OrderId; 
@UI.identification: [{ position: 20 , label: 'Product ID' }] 
@UI.lineItem: [{ position: 20}] 
ProductId; 
@UI.identification: [{ position: 30 , label: 'Product Price' }] 
@UI.lineItem: [{ position: 30 }] 
ProductPrice; 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 8: Create Service Definition and Binding&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;At last we have to create the service definition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service def For header' 
define service Zfa_def_order { 
expose zfa_P_Order_header; 
expose zfa_P_price_item; 
} &lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Upon the service definition we &lt;/SPAN&gt;&lt;SPAN class=""&gt;have to&lt;/SPAN&gt;&lt;SPAN class=""&gt; create the service Binding&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1748411890235.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266750i1BD30B1B6037A7FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1748411890235.png" alt="Faizan_khan1_0-1748411890235.png" /&gt;&lt;/span&gt;Here You can see both the header and item &lt;SPAN class=""&gt;entity ,&lt;/SPAN&gt;&lt;SPAN class=""&gt; we need to select the header entity and click on preview&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1748412015638.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266753iD724B14419585751/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1748412015638.png" alt="Faizan_khan1_1-1748412015638.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Click on Create for creating the Header data &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1748412128578.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266754iE5F8421E30A6667A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1748412128578.png" alt="Faizan_khan1_0-1748412128578.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Here You can see header data has been created &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1748412155801.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266755i3B58312601E1F2A4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1748412155801.png" alt="Faizan_khan1_1-1748412155801.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Now click on create to create the item data for the &lt;/SPAN&gt;&lt;SPAN class=""&gt;particular header&lt;/SPAN&gt;&lt;SPAN class=""&gt; data&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1748412364079.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266756iCAD28EF0FA487982/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1748412364079.png" alt="Faizan_khan1_0-1748412364079.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/deep-insert-in-unmanaged-rap/ba-p/14111318"/>
    <published>2025-06-13T16:15:28.005000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/setup-your-btp-trial-account-and-abap-environment/ba-p/14131685</id>
    <title>Setup your BTP Trial account and ABAP environment</title>
    <updated>2025-06-19T14:56:53.611000+02:00</updated>
    <author>
      <name>SangeetaSingh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/747879</uri>
    </author>
    <content>&lt;P&gt;Hi Community,&amp;nbsp;&lt;/P&gt;&lt;P&gt;Here are the steps to create your first BTP trial account and setup ABAP on cloud environment in eclipse.&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. &lt;EM&gt;Create an account on SAP.com. If you already have S-user id or sap account, you can re-use that.&lt;/EM&gt;&amp;nbsp; &amp;nbsp;&lt;A href="https://www.sap.com/index.html" target="_blank" rel="noopener noreferrer"&gt;SAP Software Solutions | Business Applications and Technology&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2.&amp;nbsp; &lt;EM&gt;Create BTP trial account&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Go to SAP BTP cockpit &amp;nbsp;&lt;A href="https://account.hanatrial.ondemand.com/trial/#/globalaccount/8b36374e-3cb7-4cef-9a58-d39f40d34f50/subaccount/960235a0-6d0f-419d-ac1d-3b0d0ce77682/service-instances&amp;amp;//detail/4e844349-ef52-4a8e-b6c2-6ef5c8cdee43/?layout=TwoColumnsMidExpanded" target="_blank" rel="noopener nofollow noreferrer"&gt;Instances and Subscriptions - trial &amp;lt; 5c30eb07trial &amp;lt; Trial Home - SAP BTP Cockpit&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Login with your account&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_24-1750312008187.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276133iDF14BCA5E31A18CF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_24-1750312008187.png" alt="SangeetaSingh_24-1750312008187.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Choose US East(VA)-AWS region&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_25-1750312008190.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276132i6C39E6463E6BB355/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_25-1750312008190.png" alt="SangeetaSingh_25-1750312008190.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_26-1750312008197.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276134i5BA5DCBA98DD48D8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_26-1750312008197.png" alt="SangeetaSingh_26-1750312008197.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Go to your Trial Account&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_27-1750312008213.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276135i8355700A11D13A82/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_27-1750312008213.png" alt="SangeetaSingh_27-1750312008213.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_28-1750312008220.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276137iDAB3636CCE6A51EA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_28-1750312008220.png" alt="SangeetaSingh_28-1750312008220.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Go to subaccounts&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_29-1750312008226.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276136i96079688BF86405E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_29-1750312008226.png" alt="SangeetaSingh_29-1750312008226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;3. Create new instance and setup ABAP environment in BTP account&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Subaccounts &amp;gt;&amp;gt; Instance and Subscriptions &amp;gt;&amp;gt; Create&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_30-1750312008230.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276138iC68735246223AB72/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_30-1750312008230.png" alt="SangeetaSingh_30-1750312008230.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_31-1750312008240.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276140i8DB8D1E52BA2A7F5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_31-1750312008240.png" alt="SangeetaSingh_31-1750312008240.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_32-1750312008248.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276139iBDBE6C051DC059A8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_32-1750312008248.png" alt="SangeetaSingh_32-1750312008248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_33-1750312008256.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276143iF407D05173CFB50C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_33-1750312008256.png" alt="SangeetaSingh_33-1750312008256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Setup ABAP environment&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_34-1750312008269.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276144i32FBDB468EA1D69E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_34-1750312008269.png" alt="SangeetaSingh_34-1750312008269.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Enter your BTP account e-mail id here&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_35-1750312008274.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276142i6D3ADD9793B2FE2B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_35-1750312008274.png" alt="SangeetaSingh_35-1750312008274.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Create service key&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_36-1750312008279.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276145i1118F8433CDB0278/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_36-1750312008279.png" alt="SangeetaSingh_36-1750312008279.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Enter your e-mail id with which you created BTP account&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_37-1750312008287.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276147i9E20125F9E69CB53/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_37-1750312008287.png" alt="SangeetaSingh_37-1750312008287.png" /&gt;&lt;/span&gt;4.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;EM&gt;4. Download/Install and setup eclipse&lt;/EM&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;A href="https://tools.hana.ondemand.com/#abap" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Development Tools&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_38-1750312008292.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276146i66733E45865642D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_38-1750312008292.png" alt="SangeetaSingh_38-1750312008292.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_39-1750312008299.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276150iFBCF02676CC87EB1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_39-1750312008299.png" alt="SangeetaSingh_39-1750312008299.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Launch eclipse from downloaded folder&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Install ADT plug in&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In Eclipse, choose in the menu bar&amp;nbsp;&lt;STRONG&gt;Help &amp;gt; Install New Software...&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Enter the URL&amp;nbsp;&lt;STRONG&gt;&lt;A href="https://tools.hana.ondemand.com/latest" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/latest&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Press&amp;nbsp;&lt;STRONG&gt;Enter&lt;/STRONG&gt;&amp;nbsp;to display the available features.&lt;/LI&gt;&lt;LI&gt;Select&amp;nbsp;&lt;STRONG&gt;ABAP Development Tools&lt;/STRONG&gt;&amp;nbsp;and choose&amp;nbsp;&lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;On the next wizard page, you get an overview of the features to be installed. Choose&amp;nbsp;&lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Confirm the&amp;nbsp;&lt;STRONG&gt;license agreements&lt;/STRONG&gt;&amp;nbsp;and choose&amp;nbsp;&lt;STRONG&gt;Finish&lt;/STRONG&gt;&amp;nbsp;to start the installation.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_40-1750312008304.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276149iAE03D815274636B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_40-1750312008304.png" alt="SangeetaSingh_40-1750312008304.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Connect eclipse with ABAP on Cloud&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;File &amp;gt;&amp;gt; New &amp;gt;&amp;gt; ABAP Cloud Project&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_41-1750312008310.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276148i0194CDF445BA6615/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_41-1750312008310.png" alt="SangeetaSingh_41-1750312008310.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_42-1750312008315.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276154i9BBF46B4E96B0AFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_42-1750312008315.png" alt="SangeetaSingh_42-1750312008315.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Go to your BTP account and click on view Service key&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_43-1750312008322.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276153iEF33FCBACD4F1210/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_43-1750312008322.png" alt="SangeetaSingh_43-1750312008322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Copy url from your service key and paste in ABAP Service Instance URL in eclipse&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_44-1750312008325.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276152iB48D206634E5B6F3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_44-1750312008325.png" alt="SangeetaSingh_44-1750312008325.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_45-1750312008330.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276155i2237F607811F8899/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_45-1750312008330.png" alt="SangeetaSingh_45-1750312008330.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Login with your BTP account in browser&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_46-1750312008333.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276156iC2BF6A7126482C95/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_46-1750312008333.png" alt="SangeetaSingh_46-1750312008333.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Click Finish&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SangeetaSingh_47-1750312008338.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/276157i58E90BB9839C66CC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="SangeetaSingh_47-1750312008338.png" alt="SangeetaSingh_47-1750312008338.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Your ABAP environment on cloud will be connected.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Thanks for visiting.&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Please do like, share and comment.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Sangeeta Singh&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://sangeetasinghdotblog.wordpress.com/" target="_self" rel="nofollow noopener noreferrer"&gt;Website&lt;/A&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;A class="" href="https://www.linkedin.com/mynetwork/discovery-see-all/?usecase=PEOPLE_FOLLOWS&amp;amp;followMember=sangeeta-singh-4bb3aa117" target="_blank" rel="noopener nofollow noreferrer"&gt;Linkedin&lt;/A&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;A class="" href="https://medium.com/@sangeetasinghofficial17" target="_self" rel="nofollow noopener noreferrer"&gt;Medium&lt;/A&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" target="_blank"&gt;ABAP Development&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+Community/pd-p/486157991894093153608181816584982" target="_blank"&gt;SAP Community &lt;/A&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+HANA+service+for+SAP+BTP/pd-p/73555000100800001352" class="lia-product-mention" data-product="654-1"&gt;SAP HANA service for SAP BTP&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/PostgreSQL+on+SAP+BTP%25252C+hyperscaler+option/pd-p/84478839-5ee3-43c6-a92e-0474fec95b3e" class="lia-product-mention" data-product="1219-1"&gt;PostgreSQL on SAP BTP, hyperscaler option&lt;/a&gt;&amp;nbsp; &lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+HANA+Enterprise+Cloud/pd-p/161153735145145802176671450589155" class="lia-product-mention" data-product="329-1"&gt;SAP HANA Enterprise Cloud&lt;/a&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/setup-your-btp-trial-account-and-abap-environment/ba-p/14131685"/>
    <published>2025-06-19T14:56:53.611000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-managed-rap-based-on-header-and-item-table/ba-p/14133709</id>
    <title>SAP Managed RAP based on Header and Item table</title>
    <updated>2025-06-22T01:34:51.835000+02:00</updated>
    <author>
      <name>anjan_paul</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/183963</uri>
    </author>
    <content>&lt;P&gt;Steps:&lt;/P&gt;&lt;P&gt;1. Create Data Base table for PO Header.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'PO Header'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpo_header {

  key client : abap.clnt not null;
  key pono   : ebeln not null;
  pocompany  : bukrs;
  podate     : abap.dats;
  podesc     : abap.char(20);
  postatus   : abap.char(1);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2. Create PO Item Database table.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'PO Item'
@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpo_item {

  key client : abap.clnt not null;
  @AbapCatalog.foreignKey.screenCheck : false
  key pono   : ebeln not null
    with foreign key [1..*,1] zpo_header
      where client = zpo_item.client
        and pono = zpo_item.pono;
  key poitem : ebelp not null;
  @Semantics.quantity.unitOfMeasure : 'zpo_item.unit'
  quantity   : abap.quan(10,0);
  unit       : abap.unit(3);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Create Base CDS Header view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Base view for po'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 

define root view entity z_po_header_base as select from zpo_header
{
    key pono as Pono,
    pocompany as Pocompany,
    podate as Podate,
    podesc as Podesc,
    postatus as Postatus
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. Create Base CDS item view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Base view for po item'
@Metadata.ignorePropagatedAnnotations: true
define root view entity z_po_item_base as select from zpo_item

{
    key pono as Pono,
    key poitem as Poitem,
    @Semantics.quantity.unitOfMeasure : 'Unit'
    quantity as Quantity,
    unit as Unit
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. Create Composite Header CDS view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Composit view for po'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root  view entity z_po_header_composit as select from z_po_header_base
 composition [1..*] of z_po_item_composit as _item
   
{
    key Pono,
    Pocompany,
    Podate,
    Podesc,
    Postatus,
    _item
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. Create Composite Item CDS view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Composit view for po item'
@Metadata.ignorePropagatedAnnotations: true
define view entity z_po_item_composit as select from z_po_item_base
association to parent z_po_header_composit as _header
    on $projection.Pono = _header.Pono
{
    key Pono,
    key Poitem,
     @Semantics.quantity.unitOfMeasure : 'Unit'
   Quantity,
    Unit,
    _header 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;7. Create Consumption CDS Header view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consumption view for po'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root view entity z_po_header_consumption  
provider contract transactional_query
as projection on z_po_header_composit
{
    key Pono,
    Pocompany,
    Podate,
    Podesc,
    Postatus,
    /* Associations */
    _item : redirected to composition child z_po_item_consumption 
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. Create Consumption Item CDS view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consumption view for po item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity z_po_item_consumption 
as projection on z_po_item_composit

{
    key Pono,
    key Poitem,
 
   @Semantics.quantity.unitOfMeasure : 'Unit'
    Quantity,
    Unit,
    /* Associations */
    _header : redirected to parent z_po_header_consumption
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. Create Metadata Extension for Header.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CUSTOMER 
annotate entity z_po_header_consumption
    with 
{
    &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet: [{ 
purpose: #STANDARD, 
position: 10, 
label: 'Header', 
type: #IDENTIFICATION_REFERENCE 
}, 
{ 
purpose: #STANDARD, 
position: 20, 
label: 'Item', 
type: #LINEITEM_REFERENCE, 
targetElement: '_item' 
}] 
@UI.selectionField: [{ position: 10 }]
@UI.lineItem: [{ position: 10, label: 'PO No' }] 
@UI.identification: [{ position: 10, label: 'Po NO' }] 
Pono; 
@UI.selectionField: [{ position: 20 }]
@UI.lineItem: [{ position: 20, label: 'Company' }] 
@UI.identification: [{ position: 20, label: 'Company' }] 
Pocompany; 
@UI.selectionField: [{ position: 30 }]
@UI.lineItem: [{ position: 30, label: 'PO Date' }] 
@UI.identification: [{ position: 30, label: 'PO Date' }] 
Podate; 
@UI.lineItem: [{ position: 40, label: 'Desc' }] 
@UI.identification: [{ position: 40, label: 'Desc' }] 
Podesc; 
@UI.lineItem: [{ position: 50, label: 'Status' }] 
@UI.identification: [{ position: 50, label: 'Status' }] 
Postatus; 
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10.&amp;nbsp; Create Metadata extension for Item .&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CUSTOMER
annotate entity z_po_item_consumption
    with 
{
    &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.facet: [{ 
purpose: #STANDARD, 
position: 10, 
label: 'Item', 
type: #IDENTIFICATION_REFERENCE 
}] 
@UI.lineItem: [{ position: 10, label: 'Po no' }] 
@UI.identification: [{ position: 10, label: 'Po no' }] 
Pono; 
@UI.lineItem: [{ position: 20, label: 'Item' }] 
@UI.identification: [{ position: 20, label: 'Item' }] 
Poitem; 
@UI.lineItem: [{ position: 30, label: 'Quantity' }] 
@UI.identification: [{ position: 30, label: 'Quantity' }] 
Quantity; 
@UI.lineItem: [{ position:40, label: 'Unit' }] 
@UI.identification: [{ position: 40, label: 'Unit' }] 
Unit; 
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;11. Create Behavior Definition of Composite view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_po_header_composit unique;
strict ( 2 );

define behavior for z_po_header_composit //alias &amp;lt;alias_name&amp;gt;
persistent table zpo_header
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  create;
  update;
  delete;
  association _item { create; }
}

define behavior for z_po_item_composit //alias &amp;lt;alias_name&amp;gt;
persistent table zpo_item
lock dependent by _header
authorization dependent by _header
//etag master &amp;lt;field_name&amp;gt;
{
  update;
  delete;
  field ( readonly ) Pono;
  association _header;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;12. Create Projection Behavior Definition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );

define behavior for z_po_header_consumption //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;

  use association _item { create; }
}

define behavior for z_po_item_consumption //alias &amp;lt;alias_name&amp;gt;
{
  use update;
  use delete;

  use association _header;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;13. Create Service Definition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Definition fo PO Header'
define service Z_SV_PO_HEADER {
  expose z_po_header_consumption;
  expose z_po_item_consumption;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;14. Create Service Binding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anjan_paul_1-1750548575837.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277298i246C5370ABCB5340/image-size/medium?v=v2&amp;amp;px=400" role="button" title="anjan_paul_1-1750548575837.png" alt="anjan_paul_1-1750548575837.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;15. Now Application can be run from Preview. Header and Item can be created .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anjan_paul_2-1750548645413.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277299iC1DAB4E79DC427FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="anjan_paul_2-1750548645413.png" alt="anjan_paul_2-1750548645413.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anjan_paul_3-1750548679744.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277300i0D7B443BDBCE4487/image-size/medium?v=v2&amp;amp;px=400" role="button" title="anjan_paul_3-1750548679744.png" alt="anjan_paul_3-1750548679744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;16. Records created in Header and Item table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anjan_paul_4-1750548764141.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277301iA72D85CBB8D96D03/image-size/medium?v=v2&amp;amp;px=400" role="button" title="anjan_paul_4-1750548764141.png" alt="anjan_paul_4-1750548764141.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="anjan_paul_5-1750548793518.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277302iD08F7F6378AC46BC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="anjan_paul_5-1750548793518.png" alt="anjan_paul_5-1750548793518.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-managed-rap-based-on-header-and-item-table/ba-p/14133709"/>
    <published>2025-06-22T01:34:51.835000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/tree-view-in-rap/ba-p/14135071</id>
    <title>Tree view in RAP</title>
    <updated>2025-06-24T09:43:15.825000+02:00</updated>
    <author>
      <name>Vivek_Sahu_21</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451075</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog we will cover:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Introduction,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Architecture overview,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Scenario,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Procedure,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Conclusion.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;Introduction:&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;CDS hierarchy&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; in SAP ABAP is used to define &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;recursive, tree-like relationships&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; in data directly within Core Data Services (CDS) views. It allows structured, hierarchical data (like manager-employee, material categories, sales orgs, BOMs, etc.) to be represented and consumed easily in UI applications and analytics tools.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;RAP (RESTful ABAP Programming Model)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tree View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; is used to &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;visualize hierarchical (recursive) data structures&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; in the UI—typically in &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Fiori Elements&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; apps such as List Reports with tree tables.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Tree View allows end users to &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;navigate data in a parent-child format&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (e.g., managers → employees, sales org → region → country).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;├── Region North America&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;│&amp;nbsp;&amp;nbsp; ├── Country USA&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;│&amp;nbsp;&amp;nbsp; └── Country Canada&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;└── Region Europe&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; ├── Country Germany&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; └── Country France&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To enable a Tree View in a RAP app:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Model recursive data in a CDS view&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (e.g., employee-manager, sales org tree)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;CDS hierarchy&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (&lt;/SPAN&gt;&lt;SPAN&gt;define hierarchy&lt;/SPAN&gt;&lt;SPAN&gt;)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;C_ projection view&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to expose the hierarchy using:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1599241"&gt;@odata&lt;/a&gt;.hierarchy.recursiveHierarchy: [ { entity.name: 'ZVS_I_SALES_ORG_HN' } ]&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Add your entity to &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Service Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Service Binding&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Run the Fiori app (it will automatically detect and display a tree)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;Treeviews: Architecture Overview&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The implementation of a treeview in the ABAP RESTful Application Programming Model (RAP) requires different entities depending on whether the treeview should be read-only or editable.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Architecture Overview: Read-Only Treeview&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_0-1750743710426.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277974i2891481FDCFB3EFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_0-1750743710426.jpeg" alt="Vivek_Sahu_21_0-1750743710426.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Architecture Overview: Read-Only Tree View in CDS&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;To enable a read-only hierarchical display of data in the UI, the following CDS artifacts are used in combination:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Database Table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;A custom database table holds the hierarchical data structure.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Interface View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;This CDS view entity is built on top of the database table and defines the data model. It includes a self-association to represent the parent-child hierarchy within the same dataset.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;CDS Hierarchy&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;A &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;persistent CDS hierarchy&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; is created using the &lt;/SPAN&gt;&lt;SPAN&gt;DEFINE HIERARCHY&lt;/SPAN&gt;&lt;SPAN&gt; statement. It provides a hierarchical interpretation of the interface view, enabling the framework to understand how records are nested.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Projection View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;This view projects the interface view and incorporates the CDS hierarchy to expose the structured, hierarchical data as required by the UI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Service Definition and Service Binding&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;These are created to expose the CDS projection view as an OData service. This step enables the consumption of hierarchical data in SAP Fiori or other UI frameworks.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Architecture Overview: Editable Treeview with Draft&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_0-1750744114176.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277982i08F2A2C1F5D8F5DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_0-1750744114176.png" alt="Vivek_Sahu_21_0-1750744114176.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Editable Tree View with Draft Enablement – Architecture Overview&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;To enable an &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;editable tree view with draft functionality&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, the following key artifacts work together to define and expose the hierarchical data structure to the UI:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Database table:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Active and draft tables&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; store the hierarchical data and hierarchy directory separately, supporting draft-enabled transactional scenarios.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;CDS view Entities (Interface Views):&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Interface views reference the underlying database tables and act as the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;first projection layer&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The CDS view for the hierarchical data must include:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;self-association&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to represent the parent-child relationship within the same entity (enabling hierarchy logic).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;A &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;one-to-many association&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to link with the hierarchy directory entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;CDS Hierarchy:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;persistent CDS hierarchy&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; is defined using &lt;/SPAN&gt;&lt;SPAN&gt;DEFINE HIERARCHY&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It enables hierarchical interpretation for the data exposed by the first-layer CDS view.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Base CDS views:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;These views enrich the model with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;compositional information&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;hierarchy directory view&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; acts as the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;composition root&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (parent).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;hierarchical data view&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; acts as the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;composition child&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Behaviour Definition for base views:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Defines &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;transactional behavior&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, including:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Draft capability&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Editing operations required by the UI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Projection views:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Serve the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;consumption layer&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For the hierarchy directory: A projection view supports transactional queries.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;For hierarchical data: A projection view combines interface view data with hierarchical logic using the &lt;/SPAN&gt;&lt;SPAN&gt;@OData.hierarchy.recursiveHierarchy&lt;/SPAN&gt;&lt;SPAN&gt; annotation (referring to the CDS hierarchy).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Projection behaviour definition:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Describes the behavior of projection views, allowing:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Custom logic&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; like determinations, validations, authorizations, numbering, etc.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Service Definition and Service Binding:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Finally, a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;service definition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; are created to expose the hierarchy and its data structure to the UI layer via OData.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;===========================================================================&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;Scenario for Tree view in RAP:&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In large global companies, the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Sales &amp;amp; Distribution (SD) module&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; often reflects the company's organizational structure. Typically, &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Sales Organizations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; are arranged in a multi-level hierarchy like this:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_0-1750746293329.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278000iA1D1A26B7D0A30E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_0-1750746293329.png" alt="Vivek_Sahu_21_0-1750746293329.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This kind of structure helps companies manage &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;sales performance, reporting, and operations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; more effectively.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;However, many systems don’t provide a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;read-only, easy-to-use view&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; of this hierarchy — especially in a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;tree or drill-down format&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; that users can easily navigate.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, we’ll walk through how to model and expose this Sales Org hierarchy using &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;CDS Hierarchies&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, and finally expose it through an &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;OData service&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to be consumed in a Fiori UI.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;Procedure:&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 1: Define the Base Table - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZVS_DT_SALES&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This transparent table stores the core sales organization data including parent-child relationships.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Hierarchy: Read Only: Sales Organization'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zvs_dt_sales {

  key client       : abap.clnt not null;
  key sales_org_id : abap.char(6) not null;
  name             : abap.char(50);
  region           : abap.char(20);
  country          : abap.char(3);
  @Semantics.amount.currencyCode : 'zvs_dt_sales.currency'
  revenue          : abap.curr(21,2);
  currency         : /dmo/currency_code;
  parent_sales_org : abap.char(6);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Note:&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;parent_sales_org&lt;/SPAN&gt;&lt;SPAN&gt; is a self-referencing field to represent the hierarchy.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This table contain some records:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_0-1750746688733.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278008i35DB9521A7BF5906/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_0-1750746688733.png" alt="Vivek_Sahu_21_0-1750746688733.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 2: Interface View - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZVS_I_SALES&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This CDS view represents the Sales Org data and defines a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;self-association&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to establish the parent-child link.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View: Sales Organization'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity zvs_i_sales as select from zvs_dt_sales
association to zvs_i_sales as _Parent on 
    $projection.ParentSalesOrg = _Parent.SalesOrgId
{
    key sales_org_id as SalesOrgId,
    name as Name,
    region as Region,
    country as Country,
    @Semantics.amount.currencyCode: 'Currency'
    revenue as Revenue,
    currency as Currency,
    parent_sales_org as ParentSalesOrg,
    
    _Parent
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 3: Define Hierarchy - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZVS_I_SALES_HN&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using CDS hierarchy syntax, we now define a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;parent-child recursive hierarchy&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label:'Sales Organization Hierarchy'

define hierarchy zvs_i_sales_hn
  as parent child hierarchy (
    source zvs_i_sales
    child to parent association _Parent
    start where ParentSalesOrg is initial
    siblings order by SalesOrgId ascending
  )
{
    key SalesOrgId,
      ParentSalesOrg
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;This is where the magic happens. This hierarchy enables a recursive structure that can be rendered in Fiori Tree controls.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 4: Projection View - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZVS_C_SALES&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This is the final consumption layer that will be exposed as OData. The hierarchy is referenced using the &lt;/SPAN&gt;&lt;SPAN&gt;@OData.hierarchy.recursiveHierarchy&lt;/SPAN&gt;&lt;SPAN&gt; annotation.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection View: Sales Organization'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality:#X,
  sizeCategory:#S,
  dataClass:#MIXED
}
@Metadata.allowExtensions:true
@Search.searchable:true

@OData.hierarchy.recursiveHierarchy: [{ entity.name: 'zvs_i_sales_hn' }]
define view entity zvs_c_sales as select from zvs_i_sales
association of many to one zvs_c_sales as _Parent
    on $projection.ParentSalesOrg = _Parent.SalesOrgId
{
    key SalesOrgId,
    @Search.defaultSearchElement: true
    Name,
    Region,
    Country,
    @Semantics.amount.currencyCode: 'Currency'
    Revenue,
    Currency,
    ParentSalesOrg,
    /* Associations */
    _Parent
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Screenshot:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_1-1750747123946.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278015iBDF0BBC47997F34B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_1-1750747123946.png" alt="Vivek_Sahu_21_1-1750747123946.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Metadata extension:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity zvs_c_sales with
{
  @UI: {lineItem: [{ label: 'Sales org ID', position: 10 }],
        identification: [{ label: 'Sales org ID', position: 10 }]
  }
  SalesOrgId;

  @UI: {lineItem: [{ label: 'Sales org Name', position: 20 }],
    identification: [{ label: 'Sales org Name', position: 20 }]
  }
  Name;

  @UI: {lineItem: [{ label: 'Region', position: 30 }],
    identification: [{ label: 'Region', position: 30 }]
  }
  Region;

  @UI: {lineItem: [{ label: 'Country', position: 40 }],
    identification: [{ label: 'Country', position: 40 }]
  }
  Country;

  @UI: {lineItem: [{ label: 'Revenue', position: 50 }],
    identification: [{ label: 'Revenue', position: 50 }]
  }
  Revenue;

  @UI: {lineItem: [{ label: 'Currency', position: 60 }],
    identification: [{ label: 'Currency', position: 60 }]
  }
  Currency;

  @UI: {lineItem: [{ label: 'Parent Sales org ID', position: 70 }],
        identification: [{ label: 'Parent Sales org ID', position: 70 }]
  }
  ParentSalesOrg;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Step 6: Service Binding - &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZVS_C_SALES_ORG_V4&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;If you will choose service binding type as V2, So you will get one error:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_0-1750747822530.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278026iA1D4CE4AD614B646/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_0-1750747822530.png" alt="Vivek_Sahu_21_0-1750747822530.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;So select your Binding type as V4,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_0-1750747270474.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278016iE5D2B66D56C3A4F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_0-1750747270474.png" alt="Vivek_Sahu_21_0-1750747270474.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Now preview your application:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_1-1750747270475.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278018i775632EE7FE87274/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_1-1750747270475.png" alt="Vivek_Sahu_21_1-1750747270475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_2-1750747270476.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278017i237BDF6C97864655/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_2-1750747270476.png" alt="Vivek_Sahu_21_2-1750747270476.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Vivek_Sahu_21_3-1750747270477.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278019i79A479F9D5D0F6D5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Vivek_Sahu_21_3-1750747270477.png" alt="Vivek_Sahu_21_3-1750747270477.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;&lt;FONT size="6"&gt;Conclusion:&amp;nbsp;&lt;/FONT&gt;&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Using CDS views and hierarchies in SAP S/4HANA is a simple and effective way to show the Sales Organization structure in a clear, tree-like format. It helps sales managers easily understand how different sales units are connected and how each one is performing. This setup is read-only, so the data stays safe, and it works well with Fiori apps for a smooth user experience.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Overall, this approach makes reporting and analysis easier without needing a lot of custom coding.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/tree-view-in-rap/ba-p/14135071"/>
    <published>2025-06-24T09:43:15.825000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/crud-operations-in-rap-abap-in-managed-bo/ba-p/14134508</id>
    <title>CRUD Operations in RAP ABAP in managed BO</title>
    <updated>2025-06-24T10:52:46.357000+02:00</updated>
    <author>
      <name>BharathKumarVaddepalli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1989797</uri>
    </author>
    <content>&lt;OL&gt;&lt;LI&gt;Create a table what you want to do &lt;STRONG&gt;CRUD&lt;/STRONG&gt; operations, or you can use any table of your choice&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_0-1750685661677.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277661iC6634DB583120AB9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_0-1750685661677.png" alt="BharathKumarVaddepalli_0-1750685661677.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'product table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zvb_product {
  key client     : abap.clnt not null;
  key product_id : abap.int4 not null;
  name           : abap.string(256);
  category       : abap.char(40);
  price          : abap.int4;
  currency       : abap.cuky;
  discount       : abap.int4;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;Create a root interface view entity for the table You are going to do &lt;STRONG&gt;CRUD &lt;/STRONG&gt;Operations.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_1-1750685661691.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277659iE7784BF7438ADAF2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_1-1750685661691.png" alt="BharathKumarVaddepalli_1-1750685661691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface View for Product'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZI_VBPRODUCT as select from zvb_product
{
  key product_id as Product_id,
  name as Name,
  category as Category,
  price as Price,
  currency as Currency,
  discount as Discount
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.&amp;nbsp; &amp;nbsp;Create a projection view for the view entity created in step 2. And allow metadata extension annotation to be true.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_2-1750685661703.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277660i775B84CCC9E8193C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_2-1750685661703.png" alt="BharathKumarVaddepalli_2-1750685661703.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consumption View product entity'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Search.searchable: true
@Metadata.allowExtensions: true
define root view entity ZI_VBPRODUCT_ENTITY
as projection on ZI_VBPRODUCT as product
{
   @Consumption.valueHelpDefinition: [
   { entity: {
               name: '/DMO/I_Customer',
               element: 'CustomerID'
       } }
   ]
@Search.defaultSearchElement: true
  key Product_id,
  @Consumption.valueHelpDefinition: [
   { entity: {
               name: '/DMO/I_Customer',
               element: 'FirstName'
       } }
   ]
  Name,
  Category,
  Price,
  Currency,
  Discount
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here I have used value help for some fields and searchable true annotation for searching.&lt;/P&gt;&lt;P&gt;4. Create a metadata extension for the Consumption view created in the step 3. Use at least single annotation for each field otherwise you may get an error if not you can continue.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_3-1750685661720.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277662iFB1678BBDBDCC4B0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_3-1750685661720.png" alt="BharathKumarVaddepalli_3-1750685661720.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI: {
  headerInfo: {
    typeName: 'Product',
    typeNamePlural: 'Product',
    title: { type: #STANDARD , label: 'Product', value: 'product_id' }
  }
}
annotate view ZI_VBPRODUCT_ENTITY
    with
{
  .facet: [{ id: 'product_id', purpose: #STANDARD, type: #IDENTIFICATION_REFERENCE, label: 'product_id', position: 10 }]
  : { lineItem: [{ position: 10 },{ type: #FOR_ACTION, label: 'Copy', dataAction: 'Copy' }] ,selectionField: [{ position: 20 }],
  identification: [{ position: 10, label: 'Product ID' }] }
    Product_id ;
    : { lineItem: [{ position: 20 }], identification: [{ position: 20, label: 'Name' }], selectionField: [{ position: 30 }] }
    Name;
        : { lineItem: [{ position: 30 }], identification: [{ position: 30, label: 'Category' }],selectionField: [{ position: 40 }]}
    Category;
     : { lineItem: [{ position: 40 }], identification: [{ position: 40,label: 'Price' }],selectionField: [{ position: 50 }]}
    Price;
     : { lineItem: [{ position: 50}], identification: [{ position: 50, label: 'Currency' }],selectionField: [{ position: 60 }]}
    Currency;
    : { lineItem: [{ position: 60 }], identification: [{ position: 60, label: 'Discount' }],selectionField: [{ position: 70 }]}
    Discount;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5.&amp;nbsp;Create the Behavior definition for the root view entity. &amp;nbsp;Make sure the mapping for the &lt;STRONG&gt;crud&lt;/STRONG&gt; operations L.H.S will be the names of view and the R.H.S&amp;nbsp; names of table.&lt;/P&gt;&lt;P&gt;Note: L.H.S. and R.H.S names should not be same .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_4-1750685661728.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277664iDF81CED3192E3ACD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_4-1750685661728.png" alt="BharathKumarVaddepalli_4-1750685661728.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_i_vbproduct unique;
strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.
define behavior for ZI_VBPRODUCT alias product // alias name can be as you like
persistent table zvb_product
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  create;
  update;
  delete;
//  field ( readonly ) product_id;
  mapping for zvb_product
{
  Product_id = product_id;
  Name       = name;
  Category   = category;
  Price      = price;
  Currency   = currency;
  Discount   = discount;
}
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6.&amp;nbsp; &amp;nbsp;Create the behavior definition for the consumption view entity.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_5-1750685661736.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277663iD791B8FEB0DADD02/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_5-1750685661736.png" alt="BharathKumarVaddepalli_5-1750685661736.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.&amp;nbsp; &amp;nbsp; Create the class which is in the behavior definition of the root view entity. Just create and activate.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_6-1750685661747.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277666iC0226BFBE89BDD17/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_6-1750685661747.png" alt="BharathKumarVaddepalli_6-1750685661747.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_ZI_VBPRODUCT DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.
    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_vbproduct RESULT result.
ENDCLASS.
CLASS lhc_ZI_VBPRODUCT IMPLEMENTATION.
  METHOD get_instance_authorizations.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8.&amp;nbsp; &amp;nbsp;Create a service definition.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_7-1750685661754.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277665iEFCAA3980CB636A1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_7-1750685661754.png" alt="BharathKumarVaddepalli_7-1750685661754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.&amp;nbsp; &amp;nbsp; Finally create a service binding and activate it. And click on preview to view the application .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_8-1750685661766.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277667i590445B8FEC5A213/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_8-1750685661766.png" alt="BharathKumarVaddepalli_8-1750685661766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;FINAL OUTPUT&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_9-1750685661769.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277669i476C174C2A793C79/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_9-1750685661769.png" alt="BharathKumarVaddepalli_9-1750685661769.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_10-1750685661774.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277670i8153B0F44DA8E102/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_10-1750685661774.png" alt="BharathKumarVaddepalli_10-1750685661774.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;CREATE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_11-1750685661777.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277668i6CEB580D08B4F986/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_11-1750685661777.png" alt="BharathKumarVaddepalli_11-1750685661777.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_12-1750685661781.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277672i732E64E941BC35D5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_12-1750685661781.png" alt="BharathKumarVaddepalli_12-1750685661781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_13-1750685661782.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277671iC9F5A057FB7C58A1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_13-1750685661782.png" alt="BharathKumarVaddepalli_13-1750685661782.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;UPDATE OR EDIT&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_14-1750685661786.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277673iCAC2DF0ED585C233/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_14-1750685661786.png" alt="BharathKumarVaddepalli_14-1750685661786.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_15-1750685661789.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277675i46331F08F5717892/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_15-1750685661789.png" alt="BharathKumarVaddepalli_15-1750685661789.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_16-1750685661792.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277674iB3C4DEE1F566CBBA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_16-1750685661792.png" alt="BharathKumarVaddepalli_16-1750685661792.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;DELETE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_17-1750685661798.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277676i23E02C2672B915DA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_17-1750685661798.png" alt="BharathKumarVaddepalli_17-1750685661798.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BharathKumarVaddepalli_18-1750685661804.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277677iED24A32151E26954/image-size/medium?v=v2&amp;amp;px=400" role="button" title="BharathKumarVaddepalli_18-1750685661804.png" alt="BharathKumarVaddepalli_18-1750685661804.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/crud-operations-in-rap-abap-in-managed-bo/ba-p/14134508"/>
    <published>2025-06-24T10:52:46.357000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap-transactional-app-performance-considerations-for-singleton-pattern-in/ba-p/14140680</id>
    <title>RAP Transactional app: performance considerations for singleton pattern in draft enabled RAP BO</title>
    <updated>2025-07-01T11:50:32.505000+02:00</updated>
    <author>
      <name>patrick_winkler</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/729521</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1604972677"&gt;Introduction&lt;/H1&gt;&lt;P&gt;When developing a transactional app, you can use the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/developing-transactional-apps-with-multi-inline-edit-capabilities" target="_blank" rel="noopener noreferrer"&gt;singleton pattern for a draft enabled RAP BO&lt;/A&gt; to enable editing / inline create on the actual root entity.&lt;/P&gt;&lt;P&gt;In this blog, you will learn how the singleton pattern impacts performance and other advantages and disadvantages of this pattern in the context of Fiori elements.&lt;/P&gt;&lt;P&gt;This blog is relevant for&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Public+Edition/pd-p/08e2a51b-1ce5-4367-8b33-4ae7e8b702e0" target="_blank"&gt;SAP S/4HANA Cloud Public Edition&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Private+Edition/pd-p/5c26062a-9855-4f39-8205-272938b6882f" target="_blank"&gt;SAP S/4HANA Cloud Private Edition&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+BTP+ABAP+environment/pd-p/73555000100800001164" target="_blank"&gt;SAP BTP ABAP environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Further reading:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/tag/business%20configuration%20maintenance%20object/tg-p/board-id/technology-blog-sap" target="_blank"&gt;Related blog posts&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Learn how you can use&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap?url_id=text-sapcommunity-prdteng-ABAP" target="_blank" rel="noopener noreferrer"&gt;ABAP technology&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to develop innovative applications and business solutions across SAP’s portfolio on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap" target="_blank" rel="noopener noreferrer"&gt;SAP Learning Site&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1408459172"&gt;Example BO&lt;/H1&gt;&lt;P&gt;Our data model consists of a table T1 and a corresponding text table T1_TXT.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Tab1'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #C
@AbapCatalog.dataMaintenance : #ALLOWED
define table T1 {
  key client            : abap.clnt not null;
  key k1                : zpw_d1 not null;
  f1                    : abap.char(20);
  f2                    : abap.char(20);
  f3                    : abap.char(20);
  f4                    : abap.char(20);
  f5                    : abap.char(20);
  f6                    : abap.char(20);
  f7                    : abap.char(20);
  f8                    : abap.char(20);
  last_changed_at       : abp_lastchange_tstmpl;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Tab1 Text'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #C
@AbapCatalog.dataMaintenance : #ALLOWED
define table T1_TXT {
  key client            : abap.clnt not null;
  key langu             : abap.lang not null;
  @AbapCatalog.foreignKey.keyType : #TEXT_KEY
  @AbapCatalog.foreignKey.screenCheck : false
  key k1                : zpw_d1 not null
    with foreign key T1
      where client = T1_TXT.client
        and k1 = T1_TXT.k1;
  description           : abap.char(30);
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Therefore, the draft-enabled RAP BO with singleton pattern consists of the singleton root entity type, T1 entity type, and T1_TXT entity type, each with a draft table.&lt;/P&gt;&lt;H1 id="toc-hId-1211945667"&gt;Singleton draft&lt;/H1&gt;&lt;P&gt;When the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/runtime-edit-action" target="_blank" rel="noopener noreferrer"&gt;Edit action&lt;/A&gt; is performed on a root entity, a corresponding draft entity including all subentities is created. In the singleton pattern, this basically means that a draft entity is created for all entities of the RAP BO.&lt;BR /&gt;Typically, the Edit action is performed when the user clicks the Edit button in the Fiori elements app. You can also use the following ABAP EML statement:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;MODIFY ENTITY zi_t1_s
  EXECUTE edit
  FROM VALUE #( ( %cid = |CID1|  singletonid = 1 ) ).
COMMIT ENTITIES.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For our example BO, the Edit action therefore consists of three SQL statements in the form of INSERT INTO &amp;lt;draft table&amp;gt; SELECT FROM &amp;lt;entity type cds view&amp;gt;. No data is passed to the ABAP application server, only one statement per entity type, regardless of the number of entities.&lt;/P&gt;&lt;P&gt;The following measurement was performed in an ABAP Platform performance test system with respect to the above SQL statements as total:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;#Rows T1&lt;/TD&gt;&lt;TD width="25%"&gt;#Rows T1_TXT&lt;/TD&gt;&lt;TD width="25%"&gt;HANA CPU time [ms]&lt;/TD&gt;&lt;TD width="25%"&gt;HANA max memory consumption [mb]&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;10&lt;/TD&gt;&lt;TD width="25%"&gt;40&lt;/TD&gt;&lt;TD width="25%"&gt;7&lt;/TD&gt;&lt;TD width="25%"&gt;1&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;100&lt;/TD&gt;&lt;TD width="25%"&gt;400&lt;/TD&gt;&lt;TD width="25%"&gt;75&lt;/TD&gt;&lt;TD width="25%"&gt;3&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;1000&lt;/TD&gt;&lt;TD width="25%"&gt;4000&lt;/TD&gt;&lt;TD width="25%"&gt;135&lt;/TD&gt;&lt;TD width="25%"&gt;6&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;10000&lt;/TD&gt;&lt;TD width="25%"&gt;40000&lt;/TD&gt;&lt;TD width="25%"&gt;810&lt;/TD&gt;&lt;TD width="25%"&gt;45&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;100000&lt;/TD&gt;&lt;TD width="25%"&gt;400000&lt;/TD&gt;&lt;TD width="25%"&gt;7600&lt;/TD&gt;&lt;TD width="25%"&gt;437&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;This table shows the performance impact of the singleton pattern compared to a RAP BO without a singleton pattern. It is linear, so you can extrapolate for a higher number of lines.&lt;/P&gt;&lt;P&gt;If you use ABAP EML to modify entities, you do not need to create a draft entity, so this penalty does not necessarily apply to ABAP EML statements.&lt;/P&gt;&lt;P data-unlink="true"&gt;The runtime behavior when changing a draft entity or in the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/runtime-prepare-action" target="_blank" rel="noopener noreferrer"&gt;action prepare&lt;/A&gt;&amp;nbsp;is not affected by the singleton pattern.&lt;/P&gt;&lt;P&gt;During the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/draft-action-activate-optimized" target="_blank" rel="noopener noreferrer"&gt;activation action&lt;/A&gt;, the draft entities are discarded using a DELETE statement:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%" height="57px"&gt;#Rows T1&lt;/TD&gt;&lt;TD width="25%" height="57px"&gt;#Rows T1_TXT&lt;/TD&gt;&lt;TD width="25%" height="57px"&gt;HANA CPU time [ms]&lt;/TD&gt;&lt;TD width="25%" height="57px"&gt;HANA max memory consumption [mb]&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="30px"&gt;10&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;40&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;7&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;1&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="30px"&gt;100&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;400&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;7&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;2&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="30px"&gt;1000&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;4000&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;27&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;4&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%" height="30px"&gt;10000&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;40000&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;155&lt;/TD&gt;&lt;TD width="25%" height="30px"&gt;10&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="30px"&gt;100000&lt;/TD&gt;&lt;TD height="30px"&gt;400000&lt;/TD&gt;&lt;TD height="30px"&gt;430&lt;/TD&gt;&lt;TD height="30px"&gt;43&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;So you can add this to the performance impact.&lt;/P&gt;&lt;P&gt;Logically, these numbers depend on the table and CDS view design as well as the system. But the basic statement remains.&lt;/P&gt;&lt;P&gt;If the user changes more than about 10% of the entities in the interaction phase, the singleton pattern is more performant because draft entities do not always have to be created.&lt;/P&gt;&lt;H1 id="toc-hId-1015432162"&gt;Singleton in Fiori Elements&lt;/H1&gt;&lt;P&gt;Using a singleton RAP BO pattern in Fiori elements has the following characteristics:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Multi-line edit/inline creation for the actual root entity&lt;/LI&gt;&lt;LI&gt;The app can temporarily store global information in the singleton draft entity&lt;/LI&gt;&lt;LI&gt;All entities of the RAP BO are locked for a user&lt;/LI&gt;&lt;LI&gt;You cannot use selection fields as the &lt;A href="https://sapui5.hana.ondemand.com/sdk/#/topic/4bd7590569c74c61a0124c6e370030f6.html" target="_blank" rel="noopener nofollow noreferrer"&gt;filter bar&lt;/A&gt; is only available in the list report. Alternatively, you can add &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/adding-search-capabilities" target="_blank" rel="noopener noreferrer"&gt;search capabilities&lt;/A&gt; to the entity. A search field is then available&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;See &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-a-fiori-elements-app-for-a-rap-bo-with-transport-selection/ba-p/13562792" target="_blank"&gt;link&lt;/A&gt; on how to create a Fiori Elements app for a RAP BO with singleton pattern.&lt;/P&gt;&lt;H1 id="toc-hId-818918657"&gt;Custom Business Configurations&lt;/H1&gt;&lt;P&gt;When you create business configurations app using the ABAP RAP programming model, you use the&amp;nbsp;&lt;A href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/creating-business-configuration-apps-with-abap-restful-application-programming-model-and-custom-business-configurations-app" target="_blank" rel="noopener noreferrer"&gt;Custom Business Configurations&lt;/A&gt; app and the &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/generating-business-configuration-maintenance-object-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;business configuration maintenance object ADT wizard&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The RAP BO that this wizard generates always uses the singleton pattern for the following reasons:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For configuration tables, you want to have a spreadsheet like user experience&lt;/LI&gt;&lt;LI&gt;The customizing transport request can be selected once for all entities and stored in the singleton draft entity&lt;/LI&gt;&lt;LI&gt;Locking the entire configuration for only one user is beneficial. You do not want multiple users to work on the same configuration table in parallel&lt;/LI&gt;&lt;LI&gt;The performance penalty for the singleton pattern is acceptable because&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Configuration tables rarely have more than 1000 rows, let alone more than 10000 rows&lt;/LI&gt;&lt;LI&gt;Most of the configuration takes place in the intended system/client, not in the production client&lt;/LI&gt;&lt;LI&gt;The frequency of configuration changes is low&lt;/LI&gt;&lt;LI&gt;There is no performance impact when using ABAP EML or the &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/upload-business-configuration?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Upload Business Configurations&lt;/A&gt; app&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Custom Business Configurations app also supports RAP BO without singleton pattern:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create the RAP BO / Service binding without using the business configuration maintenance object ADT wizard&lt;/LI&gt;&lt;LI&gt;Add the relevant transport related functionality to the RAP BO&lt;/LI&gt;&lt;LI&gt;Create the business configuration maintenance object (SMBC) manually. Leave the option "Skip root entity list report" unchecked&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-622405152"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;Do not use the singleton pattern if the RAP BO handles more than 50000 entities and the app is used frequently.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-transactional-app-performance-considerations-for-singleton-pattern-in/ba-p/14140680"/>
    <published>2025-07-01T11:50:32.505000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/side-effects-in-rap-explained-with-determination-example/ba-p/14140206</id>
    <title>Side Effects in RAP Explained with Determination  Example</title>
    <updated>2025-07-02T10:28:03.987000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In the world of SAP RAP (RESTful Application Programming), Determinations and Side Effects play a crucial role in delivering responsive and intelligent user experiences. While determinations are used to implement logic that reacts to changes in data during specific RAP phases (such as &lt;/SPAN&gt;&lt;SPAN&gt;on modify&lt;/SPAN&gt;&lt;SPAN&gt; or &lt;/SPAN&gt;&lt;SPAN&gt;on save)&lt;/SPAN&gt;&lt;SPAN&gt;, side effects ensure that related fields or entities stay consistent and updated on the UI without additional user actions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In his blog, I will demonstrate a practical scenario where determinations are used to dynamically calculate&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;values based on user input, and side effects are configured to immediately reflect these changes on the UI. This not only improves the data integrity but also enhances usability in Fiori applications. By the end of this post, you will have a clearer understanding of how to leverage determinations and side effects together effectively within a RAP-based application.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;DETERMINATION :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Actions modifies the existing BO instance where as Determination modifies the existing BO instances based on some&amp;nbsp; trigger condition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;We can see that Actions also triggers based on the conditions but cannot modify the BO instances , we can be able to throw the error messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Pre requisites :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;During modification we change/modify&amp;nbsp; some fields / requirements&amp;nbsp; and we can compute the values of&amp;nbsp; particular fields&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Determination can be called during&amp;nbsp; Transactional phase/Save sequence where as validations always called during the save sequence&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once a determination&amp;nbsp; has been triggered , it must run independently from other determinations&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;During determination result must change if we execute detrmination several time under same condition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Scenario :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here the determination calculateTotalPrice which is defined for all the three entities&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(Travel, booking and booking supplements) handles the&amp;nbsp; calculation of total&amp;nbsp; price of one travel.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Based on the booking Fee total price must be calculated for the travel&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SIDE-EFFECTS:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The SAP Fiori UI does not necessarily trigger a reload of all&amp;nbsp; related BO after every User input , as it simply does not know anything &lt;/SPAN&gt;&lt;SPAN&gt;about data changes&amp;nbsp; on the tables&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Side effects are&amp;nbsp; used to reload data, permissions or messages based on data changes in UI scenarios with draft enabled BO’s&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Side effects reloads the screen but it does not reload entire screen&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;It changes some of the field values or will enable/ disable some of the fied values&amp;nbsp;&amp;nbsp;&amp;nbsp; Or status of the data in transactional buffer --&amp;gt; based on these same things should appear in the front end&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;We need to define side effects in Behaviour definition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Side effects will only reload the fields in front end&amp;nbsp; ,nothing will happen in backend&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The data which is available in the backend it will reload in the front end whihc is not currently displaying properly&lt;/SPAN&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Side effects have two parts :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Triggering condition : specifies when you should reload ( can be actions / validations)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Target : which fields should get&amp;nbsp; reloaded ( value of a field / multiple fields / reload entire entity )&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Important points:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Determinations calculates the total&amp;nbsp; price and updates it into the transcational buffer&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;But in the front end screen older values will be there .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Requirement :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Whenever I change the booking fee and booking supplement data and flight price&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The total&amp;nbsp; price should be updated not only in transactional buffer but also in the front end automatically&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;And whenever we are updating booking fee the reload of total price should happen&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Based on the trigger condition --&amp;gt; it should reload the values / fields&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here the source --&amp;gt; Booking fee&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Target --&amp;gt; totalprice&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Syntax:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Side effects { filed MyField affects Target }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; { $self affects Targets ; }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; { action MyAction affects Tragets ;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; { determine action MyDetermineAction&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; Executed on sources&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Affects Tagets } .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the target we can specify :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;$self : The current RAP BO is reloaded&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Entity _MyAssoc&amp;nbsp; : the specified associated entity&amp;nbsp; _MyAssoc is reloaded when the side effect is triggered&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Message&amp;nbsp; : all the messages in the response parameter reported are reloaded when the side effects is triggered&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;We can&amp;nbsp; also als provide multiple targets&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Side effects { field MyField affects Field1 , Field2 , action Action1 ,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Action Action 2 [..] }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;RESTRICTIONS :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Static actions&amp;nbsp; defined using the addition static must&amp;nbsp; not be used as a side effect trigger , nor as a side effect target&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;In case of the trigger entity property $sefl , the target cannot be a field of the current entity $self itself ,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;However fields&amp;nbsp; from the associated entity can be defined using path&amp;nbsp; expressions&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Side Effect In BDL:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Side effects can be specified exactly once for each RAP BO entity in the entity&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Behaviour definition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Multiple side effects can&amp;nbsp; be summarized with curly brackets , separated by a semicolon (; ) , if required.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The syntax ‘use side effects’ is specified in the behaviour definition header and all&amp;nbsp; side effects from all&amp;nbsp; RAP BO entities of the underlying RAP BO are reused&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create &lt;/SPAN&gt;&lt;SPAN class=""&gt;db&lt;/SPAN&gt;&lt;SPAN class=""&gt; table for travel&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'travel table' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #RESTRICTED 
define table zpd_dt_travel {
 
key client : abap.clnt not null; 
key travel_id : /dmo/travel_id not null; 
agency_id : /dmo/agency_id; 
customer_id : /dmo/customer_id; 
begin_date : /dmo/begin_date; 
end_date : /dmo/end_date; 
@Semantics.amount.currencyCode : 'zpd_dt_travel.currency_code' 
booking_fee : /dmo/booking_fee; 
@Semantics.amount.currencyCode : 'zpd_dt_travel.currency_code' 
total_price : /dmo/total_price; 
currency_code : /dmo/currency_code; 
description : /dmo/description; 
overall_status : /dmo/overall_status; 
created_by : abp_creation_user; 
created_at : abp_creation_tstmpl; 
last_changed_by : abp_locinst_lastchange_user; 
last_changed_at : abp_locinst_lastchange_tstmpl; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create &lt;/SPAN&gt;&lt;SPAN class=""&gt;db&lt;/SPAN&gt;&lt;SPAN class=""&gt; table for Booking&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'tbale for booking details' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #RESTRICTED 
define table zpd_dt_booking { 

key client : abap.clnt not null; 
@AbapCatalog.foreignKey.label : 'Travel' 
@AbapCatalog.foreignKey.screenCheck : false 
key travel_id : /dmo/travel_id not null 
with foreign key [0..*,1] zpd_dt_travel 
where travel_id = zpd_dt_booking.travel_id; 
key booking_id : /dmo/booking_id not null; 
booking_date : /dmo/booking_date; 
customer_id : /dmo/customer_id; 
carrier_id : /dmo/carrier_id; 
connection_id : /dmo/connection_id; 
flight_date : /dmo/flight_date; 
@Semantics.amount.currencyCode : 'zpd_dt_booking.currency_code' 
flight_price : /dmo/flight_price; 
currency_code : /dmo/currency_code; 
booking_status : /dmo/booking_status; 
last_changed_at : abp_locinst_lastchange_tstmpl; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;3.Crete a db table for Booking suppliment&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'booking supplimnet' 
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE 
@AbapCatalog.tableCategory : #TRANSPARENT 
@AbapCatalog.deliveryClass : #A 
@AbapCatalog.dataMaintenance : #RESTRICTED 
define table zpd_dt_bsupplmnt { 

key client : abap.clnt not null; 
@AbapCatalog.foreignKey.label : 'Travel' 
@AbapCatalog.foreignKey.screenCheck : false 
key travel_id : /dmo/travel_id not null 
with foreign key [0..*,1] zpd_dt_travel 
where travel_id = zpd_dt_bsupplmnt.travel_id; 
@AbapCatalog.foreignKey.label : 'Booking' 
@AbapCatalog.foreignKey.screenCheck : false 
key booking_id : /dmo/booking_id not null 
with foreign key [0..*,1] zpd_dt_booking 
where travel_id = zpd_dt_bsupplmnt.travel_id 
and booking_id = zpd_dt_bsupplmnt.booking_id; 
key booking_supplement_id : /dmo/booking_supplement_id not null; 
supplement_id : /dmo/supplement_id; 
@Semantics.amount.currencyCode : 'zpd_dt_bsupplmnt.currency_code' 
price : /dmo/supplement_price; 
currency_code : /dmo/currency_code; 
last_changed_at : abp_locinst_lastchange_tstmpl; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;4.Create a root view entity for travel&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'root view for travel' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 

} 

define root view entity zi_travel_detail as select from zpd_dt_travel 
composition [0..*] of ZI_BOOKING_DETAIL as _booking 
association [0..1] to /DMO/I_Agency as _agency on $projection.AgencyId = _agency.AgencyID  
association [0..1] to /DMO/I_Customer as _customer on $projection.CustomerId = _customer.CustomerID 
association [1..1] to I_Currency as _currency on $projection.CurrencyCode = _currency.Currency 
association [1..1] to /DMO/I_Overall_Status_VH as _status on $projection.OverallStatus = _status.OverallStatus 

{ 

key travel_id as TravelId, 
agency_id as AgencyId, 
customer_id as CustomerId, 
begin_date as BeginDate, 
end_date as EndDate, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
booking_fee as BookingFee, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
total_price as TotalPrice, 
currency_code as CurrencyCode, 
description as Description, 
overall_status as OverallStatus, 
@Semantics.user.createdBy: true 
created_by as CreatedBy, 
@Semantics.systemDateTime.createdAt: true 
created_at as CreatedAt, 
@Semantics.user.localInstanceLastChangedBy: true 
last_changed_by as LastChangedBy, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
last_changed_at as LastChangedAt, 
_agency, 
_customer, 
_currency, 
_status, 
_booking 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;5.Create interface view&amp;nbsp; for booking&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'root view for booking' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 

} 

define view entity ZI_BOOKING_DETAIL as select from zpd_dt_booking association to parent zi_travel_detail as _travel 
on $projection.TravelId = _travel.TravelId 
composition [0..*] of zi_booking_supp as _bookingsuppl  
association [1..1] to /DMO/I_Carrier as _carrier on $projection.CarrierId = _carrier.AirlineID 
association [1..1] to /DMO/I_Customer as _customer on $projection.CustomerId = _customer.CustomerID  
association [1..1] to /DMO/I_Connection as _connection on $projection.CarrierId = _connection.AirlineID 
and $projection.ConnectionId = _connection.ConnectionID 
association[1..1] to /DMO/I_Booking_Status_VH as _booking_status on $projection.BookingStatus = _booking_status.BookingStatus  

{  

key travel_id as TravelId, 
key booking_id as BookingId, 
booking_date as BookingDate, 
customer_id as CustomerId, 
carrier_id as CarrierId, 
connection_id as ConnectionId, 
flight_date as FlightDate, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
flight_price as FlightPrice, 
currency_code as CurrencyCode, 
booking_status as BookingStatus, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
last_changed_at as LastChangedAt, 
_carrier, 
_customer,
_connection,
_booking_status, 
_travel, 
_bookingsuppl 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6.Create Interface view for Booking suppliment&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'root view for booking suppliment' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 

define view entity zi_booking_supp as select from zpd_dt_bsupplmnt 
association to parent ZI_BOOKING_DETAIL as _booking on $projection.TravelId = _booking.TravelId 
and $projection.BookingId = _booking.BookingId 
association[1..1] to zi_travel_detail as _travel on $projection.TravelId = _travel.TravelId 
association [1..1] to /DMO/I_Supplement as _suppliment on $projection.SupplementId = _suppliment.SupplementID 
association[1..*] to /DMO/I_SupplementText as _supplimentText on $projection.SupplementId = _supplimentText.SupplementID  

{ 

key travel_id as TravelId,  
key booking_id as BookingId, 
key booking_supplement_id as BookingSupplementId, 
supplement_id as SupplementId, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
price as Price, 
currency_code as CurrencyCode, 
@Semantics.systemDateTime.localInstanceLastChangedAt: true 
last_changed_at as LastChangedAt, 
_travel, 
_supplimentText, 
_suppliment, 
_booking 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define projection for travel root entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'consumption view for travel' 
@Metadata.ignorePropagatedAnnotations: true 
@Metadata.allowExtensions: true 
define root view entity zc_travel_det provider contract transactional_query 
as projection on zi_travel_detail 

{ 

key TravelId, 
@ObjectModel.text.element: [ 'AgencyName' ] 
AgencyId, 
_Agency.Name as AgencyName, 
@ObjectModel.text.element: [ 'CustomerName' ] 
CustomerId, 
_Customer.LastName as CustomerName, 
BeginDate, 
EndDate, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
BookingFee, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
TotalPrice, 
CurrencyCode, 
Description, 
@ObjectModel.text.element: [ 'OverallStatusText' ] 
OverallStatus, 
_Status._Text.Text as OverallStatusText : localized, 
CreatedBy, 
CreatedAt, 
LastChangedBy, 
LastChangedAt, 
/* Associations */ 
_Agency, 
_booking : redirected to composition child zc_booking_det, 
_Currency, 
_Customer, 
_Status 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;8.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define projection for booking&amp;nbsp; entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'consumption view for booking' 
@Metadata.ignorePropagatedAnnotations: true 
@Metadata.allowExtensions: true 
define view entity zc_booking_det  
as projection on ZI_BOOKING_DETAIL 
{ 

key TravelId, 
key BookingId, 
BookingDate, 
@ObjectModel.text.element: [ 'CustomerName' ] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Customer', 
element: 'CustomerID' 

} }] 

CustomerId, 
_customer.LastName as CustomerName, 
@ObjectModel.text.element: [ 'CarrierName' ] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Carrier', 
element: 'AirlineId' 

} }] 

CarrierId, 
_carrier.Name as CarrierName, 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Flight', 
element: 'Connection Id' 

}  

}] 
ConnectionId,  
FlightDate, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
FlightPrice, 
CurrencyCode, 
@ObjectModel.text.element: [ 'BookingStatusText' ] 
_booking_status._Text.Text as BookingStatusText : localized, 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Booking_Status_VH', 
element: 'Booking_Status' 

} }] 
BookingStatus, 
LastChangedAt, 
/* Associations */ 
_bookingsuppl : redirected to composition child zc_booking_supp, 
_booking_status, 
_carrier, 
_connection, 
_customer, 
_travel : redirected to parent zc_travel_det 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9.&lt;SPAN&gt;&lt;SPAN class=""&gt;Define projection for booking&amp;nbsp; suppliment&amp;nbsp; entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'consumption view for booking suppliment' 
@Metadata.ignorePropagatedAnnotations: true 
@Metadata.allowExtensions: true 
define view entity zc_booking_supp  
as projection on zi_booking_supp 

{ 

key TravelId, 
key BookingId, 
key BookingSupplementId, 
@ObjectModel.text.element: [ 'SupplemenDesc' ] 
SupplementId, 
_SupplementText.Description as SupplemenDesc : localized, 
@Semantics.amount.currencyCode: 'CurrencyCode' 
Price, 
CurrencyCode, 
LastChangedAt, 
/* Associations */ 
_Travel : redirected to zc_travel_det,
_Booking : redirected to parent zc_booking_det, 
_Supplement, 
_SupplementText 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10.provide metada extension for projected views&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE 

@Search.searchable: true 
@UI.headerInfo: { 
typeName: 'Travel', 
typeNamePlural: 'Travels', 

title: { 
type: #STANDARD, 
label: 'Travel', 
value: 'TravelId' 

} 

} 
annotate view zc_travel_det 
with  

{ 

@UI.facet: [{ 
id: 'Travel', 
purpose: #STANDARD, 
position: 10 , 
label: 'Travel', 
type: #IDENTIFICATION_REFERENCE 

}, 

{ 

id: 'Booking', 
purpose: #STANDARD, 
position: 20 , 
label: 'Booking', 
type: #LINEITEM_REFERENCE, 
targetElement: '_booking' 

} 

] 

@UI.lineItem: [{ position: 10 }, { type:#FOR_ACTION, dataAction: 'CopyTravel', label: 'Copy Travel' } 
,{ type:#FOR_ACTION, dataAction: 'AcceptTravel', label: 'AcceptTravel' } 
,{ position: 30 },{ type:#FOR_ACTION, dataAction: 'RejectTravel', label: 'RejectTravel' }] 
@UI.identification: [{ position: 10 }] 
@Search.defaultSearchElement: true 
TravelId; 
@UI: { lineItem: [{ position: 40 }], 
selectionField: [{ position: 40 }], 
identification: [{ position: 40 }] 

} 

@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Agency', 
element: 'AgencyID' 

} }] 

AgencyId; 
// AgencyName; 
@UI: { lineItem: [{ position: 50 }], 
selectionField: [{ position: 50 }], 
identification: [{ position: 50 }] 
} 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Customer', 
element: 'CustomerID' 

} }] 
CustomerId; 
// CustomerName; 
@UI.lineItem: [{ position: 60 }] 
@UI.identification: [{ position: 60 }] 
BeginDate; 
@UI.lineItem: [{ position: 70 }] 
@UI.identification: [{ position: 70 }] 
EndDate; 
@UI.identification: [{ position: 75 }] 
BookingFee; 
@UI.lineItem: [{ position: 80 }] 
@UI.identification: [{ position: 80 }] 
TotalPrice; 
@Consumption.valueHelpDefinition: [{ entity: { 
name: 'I_Currency', 
element: 'Currency' 
} }] 

CurrencyCode; 
@UI.identification: [{ position: 85 }] 
Description; 
@UI: { lineItem: [{ position: 90 }],
selectionField: [{ position: 60 }], 
identification: [{ position: 90 }],
textArrangement: #TEXT_ONLY 
} 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Overall_Status_VH', 
element: 'OverallStatus' 
} }] 

OverallStatus; 
// OverallStatusText;
// .hidden: true 
// LastChangedAt; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;11. metadata extension for booking entity&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE 

@Search.searchable: true 
@UI.headerInfo: { 
typeName: 'Booking',
typeNamePlural: 'Bookings', 

title: { 
type: #STANDARD, 
label: 'Booking', 
value: 'BookingId' 

} 

} 

annotate view zc_booking_det 

with  

{ 

@UI.facet: [{ 
id: 'Booking', 
purpose: #STANDARD,
position: 10 , 
label: 'Booking', 
type: #IDENTIFICATION_REFERENCE 

}, 

{ 

id: 'BookingSuppl', 
purpose: #STANDARD, 
position: 20 ,  
label: 'Booking Suppliments', 
type: #LINEITEM_REFERENCE, 
targetElement: '_bookingsuppl' 

} 

] 

// .defaultSearchElement: true 
// TravelId; 

@UI.lineItem: [{ position: 10 }] 
@UI.identification: [{ position: 10 }] 
@Search.defaultSearchElement: true 
BookingId; 
@UI.lineItem: [{ position: 20 }] 
@UI.identification: [{ position: 20 }] 

BookingDate; 
@UI.lineItem: [{ position: 30 }] 
@UI.identification: [{ position: 30 }] 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Customer',
element: 'CustomerID' 

} }] 

CustomerId; 
@UI.lineItem: [{ position: 40 }] 
@UI.identification: [{ position: 40 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Carrier', 
element: 'AirlineID' 

} }] 

CarrierId; 
@UI.lineItem: [{ position: 50 }] 
@UI.identification: [{ position: 50 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Flight', 
element: 'ConnectionId' 

}, 

additionalBinding: [{ element: 'ConnectionId' ,  
localElement: 'ConnectionID'}, 
{ element: 'AirlineID' ,  
localElement: 'CarrierId'},  
{ element: 'CurrencyCode' ,  
localElement: 'CurrencyCode'}, 
{ element: 'Price' ,  
localElement: 'FlightPrice'} ] 

}]  

ConnectionId; 
@UI.lineItem: [{ position: 60 }] 
@UI.identification: [{ position: 60 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Flight', 
element: 'FlightDate' 

}, 

additionalBinding: [{ element: 'FlightDate' ,  
localElement: 'FlightDate'}, 
{ element: 'AirlineID' ,  
localElement: 'CarrierId'},  
{ element: 'CurrencyCode' ,  

localElement: 'CurrencyCode'}, 
{ element: 'Price' ,  
localElement: 'FlightPrice'} ] 

}]  

FlightDate; 
@UI.lineItem: [{ position: 70 }] 
@UI.identification: [{ position: 70 }] 
FlightPrice; 
// @Consumption.valueHelpDefinition: [{ entity: { 
// name: 'I_Currency', 
// element: 'Currency' 

// } }] 

// CurrencyCode; 
@UI.lineItem: [{ position: 80 }]
@UI.identification: [{ position: 80 }] 
@UI.textArrangement: #TEXT_ONLY 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Booking_Status_VH', 
element: 'BookingStatus' 

} }] 

BookingStatus; 
// LastChangedAt; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;12. Metadata extension for booking entity&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE 

@Search.searchable: true 
@UI.headerInfo: { 
typeName: 'Booking', 
typeNamePlural: 'Bookings', 
title: { 
type: #STANDARD, 
label: 'Booking', 
value: 'BookingId' 

} 

} 
annotate view zc_booking_det 
with  

{ 

@UI.facet: [{ 
id: 'Booking', 
purpose: #STANDARD, 
position: 10 , 
label: 'Booking', 
type: #IDENTIFICATION_REFERENCE 

}, 

{ 

id: 'BookingSuppl', 
purpose: #STANDARD, 
position: 20 ,  
label: 'Booking Suppliments', 
type: #LINEITEM_REFERENCE, 
targetElement: '_bookingsuppl' 

} 

] 
// .defaultSearchElement: true 
// TravelId; 

@UI.lineItem: [{ position: 10 }] 
@UI.identification: [{ position: 10 }] 
@Search.defaultSearchElement: true 
BookingId; 
@UI.lineItem: [{ position: 20 }] 
@UI.identification: [{ position: 20 }] 
BookingDate; 
@UI.lineItem: [{ position: 30 }] 
@UI.identification: [{ position: 30 }] 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity: {
name: '/DMO/I_Customer', 
element: 'CustomerID' 

} }] 

CustomerId; 
@UI.lineItem: [{ position: 40 }] 
@UI.identification: [{ position: 40 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Carrier', 
element: 'AirlineID' 

} }] 

CarrierId; 
@UI.lineItem: [{ position: 50 }] 
@UI.identification: [{ position: 50 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Flight', 
element: 'ConnectionId' 

}, 
additionalBinding: [{ element: 'ConnectionId' ,  
localElement: 'ConnectionID'}, 

{ element: 'AirlineID' ,  
localElement: 'CarrierId'},  
{ element: 'CurrencyCode' ,  
localElement: 'CurrencyCode'}, 
{ element: 'Price' , 
localElement: 'FlightPrice'} ] 

}]  
ConnectionId; 
@UI.lineItem: [{ position: 60 }] 
@UI.identification: [{ position: 60 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Flight', 
element: 'FlightDate' 

}, 

additionalBinding: [{ element: 'FlightDate' ,  
localElement: 'FlightDate'}, 
{ element: 'AirlineID' ,  
localElement: 'CarrierId'},  
{ element: 'CurrencyCode' ,  
localElement: 'CurrencyCode'}, 
{ element: 'Price' ,  
localElement: 'FlightPrice'} ] 

}]  
FlightDate; 
@UI.lineItem: [{ position: 70 }] 
@UI.identification: [{ position: 70 }] 

FlightPrice; 
// @Consumption.valueHelpDefinition: [{ entity: { 
// name: 'I_Currency', 
// element: 'Currency' 
// } }] 

// CurrencyCode; 
@UI.lineItem: [{ position: 80 }] 
@UI.identification: [{ position: 80 }] 
@UI.textArrangement: #TEXT_ONLY 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_Booking_Status_VH', 
element: 'BookingStatus' 

} }] 
BookingStatus; 
// LastChangedAt; 


} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;13.&amp;nbsp;Metadata extension for booking&amp;nbsp; suppliment entity&lt;/P&gt;&lt;PRE&gt;@Metadata.layer: #CORE 

@Search.searchable: true 
@UI.headerInfo: { 
typeName: 'BookingSuppl', 
typeNamePlural: 'BookingSuppls', 
title: { 
type: #STANDARD, 
label: 'Booking Suppliments', 
value: 'BookingSupplementId' 

} 
} 

annotate view zc_booking_supp 
with  
{ 
@UI.facet: [{ 
id: 'BookingSuppl', 
purpose: #STANDARD, 
position: 10 ,
label: 'Booking Suppliments', 
type: #IDENTIFICATION_REFERENCE 
} 
] 
// @Search.defaultSearchElement: true 
// TravelId; 
@Search.defaultSearchElement: true 
BookingId; 
@UI.lineItem: [{ position: 10 }] 
@UI.identification: [{ position: 10 }] 
BookingSupplementId; 
@UI.lineItem: [{ position: 20 }] 
@UI.identification: [{ position: 20 }] 
@Consumption.valueHelpDefinition: [{ entity: { 
name: '/DMO/I_SUPPLEMENT', 
element: 'SupplementID' 
}, 

additionalBinding: [{ element: 'SupplementID' , 
localElement: 'SupplementId'}, 
{ element: 'Price' , 
localElement: 'Price'}, 
{ element: 'CurrencyCode' , 
localElement: 'CurrencyCode'} 

] 

}] 
SupplementId; 
@UI.lineItem: [{ position: 30 }] 
@UI.identification: [{ position: 30 }] 

Price; 
// @Consumption.valueHelpDefinition: [{ entity: { 
// name: 'I_Currency', 
// element: 'Currency' 
// } }] 
// CurrencyCode; 
// @UI.hidden: true 
// LastChangedAt; 

} &lt;/PRE&gt;&lt;P&gt;14.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create&lt;/SPAN&gt;&lt;SPAN class=""&gt; behaviour definition travel root entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed; 

strict ( 2 ); 
define behavior for zi_travel_detail //alias &amp;lt;alias_name&amp;gt; 
implementation in class zcl_bp_travel_maa unique 
persistent table zpd_dt_travel 
lock master 
authorization master ( global ) 
etag master LastChangedAt 
early numbering 

{ 

field ( readonly ) TravelId; 
action AcceptTravel result [1] $self; 
action RejectTravel result [1] $self; 

factory action CopyTravel [1]; 
internal action RecalcTotalPrice; 
determination CalcTotalPrice on modify { create; field BookingFee, CurrencyCode; } 

// authorization ( global ), 
create; 
update; 
delete; 
// field ( readonly ) TravelId; 
association _booking { create; } 
mapping for zpd_dt_travel 
{ 

TravelId = travel_id; 
AgencyId = agency_id; 
CustomerId = customer_id; 
BeginDate = begin_date; 
EndDate = end_date; 
BookingFee = booking_fee; 
TotalPrice = total_price; 
CurrencyCode = currency_code; 
Description = description; 
OverallStatus = overall_status; 
CreatedBy = created_by; 
CreatedAt = created_at; 
LastChangedBy = last_changed_by; 
LastChangedAt = last_changed_at; 

} 
} 
define behavior for ZI_BOOKING_DETAIL //alias &amp;lt;alias_name&amp;gt; 
implementation in class zcl_bp_booking_ma unique 
persistent table zpd_dt_booking 
lock dependent by _Travel 
//authorization dependent by _travel 
authorization master ( global ) 
etag master LastChangedAt 
early numbering 
{ 
update; 
delete; 
field ( readonly ) TravelId, BookingId;

determination CalcTotalPrice on modify { create; field FlightPrice, CurrencyCode; } 
association _travel; 
association _bookingsuppl { create; } 
mapping for zpd_dt_booking 

{ 
TravelId = travel_id; 
BookingId = booking_id; 
BookingDate = booking_date; 
CustomerId = customer_id; 
CarrierId = carrier_id; 
ConnectionId = connection_id; 
FlightDate = flight_date; 
FlightPrice = flight_price; 

CurrencyCode = currency_code; 
BookingStatus = booking_status; 
LastChangedAt = last_changed_at; 

} 

} 
define behavior for zi_booking_supp //alias &amp;lt;alias_name&amp;gt; 
implementation in class zcl_bp_booking_ma unique 
persistent table zpd_dt_bsupplmnt 
lock dependent by _Travel 
//authorization dependent by _Travel 
authorization master ( global ) 
etag master LastChangedAt 
early numbering 

{ 
update; 
delete; 
field ( readonly ) TravelId, BookingId, BookingSupplementId; 
determination CalcTotalPrice on modify { create; field Price, CurrencyCode; } 
association _Travel; 
association _Booking; 
mapping for zpd_dt_bsupplmnt 
{ 

SupplementId = supplement_id; 
TravelId = travel_id; 
BookingId = booking_id; 
BookingSupplementId = booking_supplement_id; 
Price = price; 
CurrencyCode = currency_code; 
LastChangedAt = last_changed_at; 

} 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;15.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define &lt;/SPAN&gt;&lt;SPAN class=""&gt;behavior definition&lt;/SPAN&gt;&lt;SPAN class=""&gt; for projection root entity&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection; 

strict ( 2 );
define behavior for zc_travel_det //alias &amp;lt;alias_name&amp;gt; 

{ 
use create; 
use update; 
use delete; 

use action AcceptTravel; 
use action RejectTravel; 
use action CopyTravel; 
use association _booking { create; } 

} 
define behavior for zc_booking_det //alias &amp;lt;alias_name&amp;gt; 

{ 

use update; 
use delete; 
use association _travel; 
use association _bookingsuppl { create; } 

} 

define behavior for zc_booking_supp //alias &amp;lt;alias_name&amp;gt; 
{ 

use update; 
use delete; 

use association _Travel; 
use association _Booking; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;16. Create Service Definition&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'service def for travel' 
define service Zsr_travel_det { 

expose zc_travel_det; 
expose zc_booking_det; 
expose zc_booking_supp;
expose /DMO/I_Supplement_StdVH as Supplement; 
expose /DMO/I_SupplementCategory_VH as SupplementCategory; 
expose /DMO/I_Customer_StdVH as Passenger; 
expose /DMO/I_Agency_StdVH as TravelAgency; 
expose /DMO/I_Carrier_StdVH as Airline; 
expose /DMO/I_Connection_StdVH as FlightConnection; 
expose /DMO/I_Flight_StdVH as Flight; 
expose /DMO/I_Airport_StdVH as Airport; 
expose /DMO/I_Overall_Status_VH as OverallStatus; 
expose /DMO/I_Booking_Status_VH as BookingStatus; 
expose I_CurrencyStdVH as Currency; 
expose I_CountryVH as Country; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;17.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create service binding&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1751354700486.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281015iFEA8DEFC3496780A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_0-1751354700486.png" alt="Pradeep555_0-1751354700486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;18. Implement the class&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_travel_detail DEFINITION INHERITING FROM cl_abap_behavior_handler. 

PRIVATE SECTION. 

METHODS get_global_authorizations FOR GLOBAL AUTHORIZATION 
IMPORTING REQUEST requested_authorizations FOR zi_travel_detail RESULT result. 
METHODS accepttravel FOR MODIFY 
IMPORTING keys FOR ACTION zi_travel_detail~accepttravel RESULT result. 
METHODS copytravel FOR MODIFY 
IMPORTING keys FOR ACTION zi_travel_detail~copytravel. 
METHODS recalctotalprice FOR MODIFY 
IMPORTING keys FOR ACTION zi_travel_detail~recalctotalprice. 
METHODS rejecttravel FOR MODIFY 
IMPORTING keys FOR ACTION zi_travel_detail~rejecttravel RESULT result. 
METHODS calctotalprice FOR DETERMINE ON MODIFY 
IMPORTING keys FOR zi_travel_detail~calctotalprice. 
METHODS earlynumbering_cba_booking FOR NUMBERING 
IMPORTING entities FOR CREATE zi_travel_detail\_booking. 
METHODS earlynumbering_create FOR NUMBERING 
IMPORTING entities FOR CREATE zi_travel_detail. 

ENDCLASS. 

CLASS lhc_zi_travel_detail IMPLEMENTATION. 
METHOD get_global_authorizations. 
ENDMETHOD. 

METHOD earlynumbering_create. 
DATA(lt_entities) = entities. 
DELETE lt_entities WHERE TravelId IS NOT INITIAL . 
TRY. 
cl_numberrange_runtime=&amp;gt;number_get( 

EXPORTING 
nr_range_nr = '01' 
object = '/DMO/TRV_M' 
quantity = CONV #( lines( lt_entities ) ) 
IMPORTING 
number = DATA(lv_latest_num) 
returncode = DATA(lv_code) 
returned_quantity = DATA(lv_qty) 

). 
CATCH cx_nr_object_not_found. 
CATCH cx_number_ranges INTO DATA(lo_error). 

LOOP AT lt_entities INTO DATA(ls_entities). 
APPEND VALUE #( %cid = ls_entities-%cid 
%key = ls_entities-%key ) 
TO failed-zi_travel_detail. 
APPEND VALUE #( %cid = ls_entities-%cid 
%key = ls_entities-%key 
%msg = lo_error ) 
TO reported-zi_travel_detail. 
ENDLOOP. 
EXIT. 
ENDTRY.. 

ASSERT lv_qty = lines( lt_entities ). 
DATA(lv_curr_num) = lv_latest_num - lv_qty. 
LOOP AT lt_entities INTO ls_entities. 
lv_curr_num = lv_curr_num + 1. 
APPEND VALUE #( %cid = ls_entities-%cid 
TravelId = lv_curr_num ) 
TO mapped-zi_travel_detail. 
ENDLOOP. 
ENDMETHOD. 

METHOD earlynumbering_cba_Booking. 

DATA : lv_max_booking TYPE /dmo/booking_id. 
READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail BY \_booking 
FROM CORRESPONDING #( entities ) 
LINK DATA(lt_link_data). 
LOOP AT entities ASSIGNING FIELD-SYMBOL(&amp;lt;ls_group_entity&amp;gt;) 
GROUP BY &amp;lt;ls_group_entity&amp;gt;-TravelId. 

lv_max_booking = REDUCE #( INIT lv_max = CONV /dmo/booking_id( '0' ) 
FOR ls_link IN lt_link_data USING KEY entity 
WHERE ( source-TravelId = &amp;lt;ls_group_entity&amp;gt;-TravelId ) 
NEXT lv_max = COND /dmo/booking_id( WHEN lv_max &amp;lt; ls_link-target-BookingId 
THEN ls_link-target-BookingId 
ELSE lv_max ) ). 

lv_max_booking = REDUCE #( INIT lv_max = lv_max_booking 
FOR ls_entity IN entities USING KEY entity 
WHERE ( TravelId = &amp;lt;ls_group_entity&amp;gt;-TravelId ) 
FOR ls_booking IN ls_entity-%target 
NEXT lv_max = COND /dmo/booking_id( WHEN lv_max &amp;lt; ls_booking-BookingId 
THEN ls_booking-BookingId 
ELSE lv_max ) ). 
LOOP AT entities ASSIGNING FIELD-SYMBOL(&amp;lt;ls_entities&amp;gt;) 
USING KEY entity 
WHERE TravelId = &amp;lt;ls_group_entity&amp;gt;-TravelId. 

LOOP AT &amp;lt;ls_entities&amp;gt;-%target ASSIGNING FIELD-SYMBOL(&amp;lt;ls_booking&amp;gt;). 
IF &amp;lt;ls_booking&amp;gt;-BookingId IS INITIAL. 
lv_max_booking += 10. 
APPEND CORRESPONDING #( &amp;lt;ls_booking&amp;gt; ) TO mapped-zi_booking_detail ASSIGNING FIELD-SYMBOL(&amp;lt;ls_new_map_book&amp;gt;). 
&amp;lt;ls_new_map_book&amp;gt;-BookingId = lv_max_booking. 

ENDIF. 
ENDLOOP. 
ENDLOOP. 

ENDLOOP. 
ENDMETHOD. 

METHOD AcceptTravel. 
MODIFY ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 

UPDATE FIELDS ( OverallStatus ) 
WITH VALUE #( FOR ls_keys IN keys ( %tky = ls_keys-%tky 
OverallStatus = 'A') ). 
READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
ALL FIELDS WITH CORRESPONDING #( keys ) 
RESULT DATA(lt_result). 
result = VALUE #( FOR ls_result IN lt_result ( %tky = ls_result-%tky 
%param = ls_result ) ). 

ENDMETHOD. 
METHOD CopyTravel. 
ENDMETHOD. 

 

METHOD RecalcTotalPrice.

TYPES : BEGIN OF ty_total, 
price TYPE /dmo/total_price, 
curr TYPE /dmo/currency_code, 
END OF ty_total. 

DATA : lt_total TYPE TABLE OF ty_total, 
lv_conv_price TYPE ty_total-price. 

READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
FIELDS ( BookingFee CurrencyCode ) 
WITH CORRESPONDING #( keys ) 
RESULT DATA(lt_travel). 
DELETE lt_travel WHERE CurrencyCode IS INITIAL. 

READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail BY \_booking 
FIELDS ( FlightPrice CurrencyCode ) 
WITH CORRESPONDING #( lt_travel ) 
RESULT DATA(lt_ba_booking) . 

READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_booking_detail BY \_bookingsuppl 
FIELDS ( Price CurrencyCode ) 
WITH CORRESPONDING #( lt_ba_booking ) 
RESULT DATA(lt_ba_bookingsupp) . 
LOOP AT lt_travel ASSIGNING FIELD-SYMBOL(&amp;lt;ls_travel&amp;gt;). 
lt_total = VALUE #( ( price = &amp;lt;ls_travel&amp;gt;-BookingFee curr = &amp;lt;ls_travel&amp;gt;-CurrencyCode ) ). 

LOOP AT lt_ba_booking ASSIGNING FIELD-SYMBOL(&amp;lt;ls_booking&amp;gt;) 
USING KEY entity 
WHERE TravelId = &amp;lt;ls_travel&amp;gt;-TravelId 
AND CurrencyCode IS NOT INITIAL.

APPEND VALUE #( price = &amp;lt;ls_booking&amp;gt;-FlightPrice curr = &amp;lt;ls_booking&amp;gt;-CurrencyCode ) 
TO lt_total. 

LOOP AT lt_ba_bookingsupp ASSIGNING FIELD-SYMBOL(&amp;lt;ls_bookingsupp&amp;gt;) 
USING KEY entity 
WHERE TravelId = &amp;lt;ls_booking&amp;gt;-TravelId 

AND BookingId = &amp;lt;ls_booking&amp;gt;-BookingId 
AND CurrencyCode IS NOT INITIAL. 
APPEND VALUE #( price = &amp;lt;ls_bookingsupp&amp;gt;-Price curr = &amp;lt;ls_bookingsupp&amp;gt;-CurrencyCode ) 

TO lt_total. 
ENDLOOP. 
ENDLOOP. 

LOOP AT lt_total ASSIGNING FIELD-SYMBOL(&amp;lt;ls_total&amp;gt;). 
IF &amp;lt;ls_total&amp;gt;-curr = &amp;lt;ls_travel&amp;gt;-CurrencyCode . 
lv_conv_price = &amp;lt;ls_total&amp;gt;-price . 
ELSE. 

/dmo/cl_flight_amdp=&amp;gt;convert_currency( 

EXPORTING 
iv_amount = &amp;lt;ls_total&amp;gt;-price 
iv_currency_code_source = &amp;lt;ls_total&amp;gt;-curr 
iv_currency_code_target = &amp;lt;ls_travel&amp;gt;-CurrencyCode 
iv_exchange_rate_date = cl_abap_context_info=&amp;gt;get_system_date( ) 
IMPORTING 
ev_amount = lv_conv_price 

). 

ENDIF. 
&amp;lt;ls_travel&amp;gt;-TotalPrice = &amp;lt;ls_travel&amp;gt;-TotalPrice + lv_conv_price. 
ENDLOOP.

MODIFY ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
UPDATE FIELDS ( TotalPrice ) 
WITH CORRESPONDING #( lt_travel ). 
ENDLOOP. 

ENDMETHOD. 
METHOD RejectTravel. 

MODIFY ENTITIES OF zi_travel_detail IN LOCAL MODE 

ENTITY zi_travel_detail 
UPDATE FIELDS ( OverallStatus ) 
WITH VALUE #( FOR ls_keys IN keys ( %tky = ls_keys-%tky 
OverallStatus = 'X') ) 
REPORTED DATA(lt_travel). 

READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
ALL FIELDS WITH CORRESPONDING #( keys ) 
RESULT DATA(lt_result). 
result = VALUE #( FOR ls_result IN lt_result ( %tky = ls_result-%tky 
%param = ls_result ) ). 
ENDMETHOD. 

METHOD CalcTotalPrice. 

MODIFY ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
EXECUTE RecalcTotalPrice 
FROM CORRESPONDING #( keys ). 
ENDMETHOD. 

ENDCLASS. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;18.&amp;nbsp;&lt;SPAN&gt;Here we are calculating the total&amp;nbsp; price , whenever somebody changes the total&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Price and currency manually this determination&amp;nbsp; should call on transactional phase(on modify)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD CalcTotalPrice. 

MODIFY ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
EXECUTE RecalcTotalPrice 
FROM CORRESPONDING #( keys ). 

ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;19.&amp;nbsp;&amp;nbsp;&lt;SPAN&gt;will call RecacTotalPrice for each determination&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;All the travel id which we modify&amp;nbsp; will trigger when we are calculating total price&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;RecacTotalPrice--&amp;gt; will be called . We need to write the logic to modify&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Our BO instance based on travel ID And it will read and updae the price&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Here the action will take care of the process – when we change the price&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;( based on determination ) action will be called&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And as soon as price filed changes, determination happens&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;And we need to read the travel entity with fields booking fee and currency code&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;And we need to provide travel IDs which is present in keys&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Result is taken in LT_TRAVEL&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Same thing we need to do it for boking and booking suppliment&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD RecalcTotalPrice. 

TYPES : BEGIN OF ty_total, 
price TYPE /dmo/total_price, 
curr TYPE /dmo/currency_code, 
END OF ty_total. 

DATA : lt_total TYPE TABLE OF ty_total, 
lv_conv_price TYPE ty_total-price. 

READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
FIELDS ( BookingFee CurrencyCode ) 
WITH CORRESPONDING #( keys ) 
RESULT DATA(lt_travel). 

DELETE lt_travel WHERE CurrencyCode IS INITIAL. 
READ ENTITIES OF zi_travel_detail IN LOCAL MODE 

ENTITY zi_travel_detail BY \_booking 
FIELDS ( FlightPrice CurrencyCode ) 
WITH CORRESPONDING #( lt_travel ) 
RESULT DATA(lt_ba_booking) . 
READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_booking_detail BY \_bookingsuppl 
FIELDS ( Price CurrencyCode ) 
WITH CORRESPONDING #( lt_ba_booking ) 

RESULT DATA(lt_ba_bookingsupp) . 

LOOP AT lt_travel ASSIGNING FIELD-SYMBOL(&amp;lt;ls_travel&amp;gt;). 
lt_total = VALUE #( ( price = &amp;lt;ls_travel&amp;gt;-BookingFee curr = &amp;lt;ls_travel&amp;gt;-CurrencyCode ) ). 

LOOP AT lt_ba_booking ASSIGNING FIELD-SYMBOL(&amp;lt;ls_booking&amp;gt;) 
USING KEY entity 
WHERE TravelId = &amp;lt;ls_travel&amp;gt;-TravelId 
AND CurrencyCode IS NOT INITIAL. 
APPEND VALUE #( price = &amp;lt;ls_booking&amp;gt;-FlightPrice curr = &amp;lt;ls_booking&amp;gt;-CurrencyCode ) 
TO lt_total. 
LOOP AT lt_ba_bookingsupp ASSIGNING FIELD-SYMBOL(&amp;lt;ls_bookingsupp&amp;gt;) 
USING KEY entity 

WHERE TravelId = &amp;lt;ls_booking&amp;gt;-TravelId 
AND BookingId = &amp;lt;ls_booking&amp;gt;-BookingId 
AND CurrencyCode IS NOT INITIAL. 

APPEND VALUE #( price = &amp;lt;ls_bookingsupp&amp;gt;-Price curr = &amp;lt;ls_bookingsupp&amp;gt;-CurrencyCode ) 
TO lt_total. 

ENDLOOP. 
ENDLOOP. 


LOOP AT lt_total ASSIGNING FIELD-SYMBOL(&amp;lt;ls_total&amp;gt;). 

IF &amp;lt;ls_total&amp;gt;-curr = &amp;lt;ls_travel&amp;gt;-CurrencyCode . 
lv_conv_price = &amp;lt;ls_total&amp;gt;-price . 
ELSE. 

/dmo/cl_flight_amdp=&amp;gt;convert_currency( 
EXPORTING 
iv_amount = &amp;lt;ls_total&amp;gt;-price 
iv_currency_code_source = &amp;lt;ls_total&amp;gt;-curr 
iv_currency_code_target = &amp;lt;ls_travel&amp;gt;-CurrencyCode 
iv_exchange_rate_date = cl_abap_context_info=&amp;gt;get_system_date( ) 
IMPORTING 
ev_amount = lv_conv_price 

). 
 
ENDIF. 

&amp;lt;ls_travel&amp;gt;-TotalPrice = &amp;lt;ls_travel&amp;gt;-TotalPrice + lv_conv_price. 

ENDLOOP. 

MODIFY ENTITIES OF zi_travel_detail in LOCAL MODE 
ENTITY zi_travel_detail 
UPDATE FIELDS ( TotalPrice ) 
WITH CORRESPONDING #( lt_travel ). 
ENDLOOP. 

ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;20.&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;Class for booking&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp; suppliment&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_booking_supp DEFINITION INHERITING FROM cl_abap_behavior_handler. 

PRIVATE SECTION. 

METHODS CalcTotalPrice FOR DETERMINE ON MODIFY 
IMPORTING keys FOR zi_booking_supp~CalcTotalPrice. 
METHODS get_global_authorizations FOR GLOBAL AUTHORIZATION 
IMPORTING REQUEST requested_authorizations FOR zi_booking_supp RESULT result. 
ENDCLASS. 

CLASS lhc_zi_booking_supp IMPLEMENTATION. 
METHOD CalcTotalPrice. 

ENDMETHOD. 
METHOD get_global_authorizations. 
ENDMETHOD. 

ENDCLASS. 
 
CLASS lhc_zi_booking_detail DEFINITION INHERITING FROM cl_abap_behavior_handler. 

PRIVATE SECTION. 
METHODS earlynumbering_cba_Bookingsupp FOR NUMBERING 

IMPORTING entities FOR CREATE zi_booking_detail\_Bookingsuppl. 
METHODS CalcTotalPrice FOR DETERMINE ON MODIFY 
IMPORTING keys FOR zi_booking_detail~CalcTotalPrice. 

METHODS get_global_authorizations FOR GLOBAL AUTHORIZATION 
IMPORTING REQUEST requested_authorizations FOR zi_booking_detail RESULT result. 

ENDCLASS. 


CLASS lhc_zi_booking_detail IMPLEMENTATION. 

METHOD earlynumbering_cba_Bookingsupp. 
DATA: max_booking_suppl_id TYPE /dmo/booking_supplement_id . 
READ ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_booking_detail BY \_Bookingsuppl 
FROM CORRESPONDING #( entities ) 
LINK DATA(booking_supplements). 

" Loop over all unique tky (TravelID + BookingID) 
LOOP AT entities ASSIGNING FIELD-SYMBOL(&amp;lt;booking_group&amp;gt;) GROUP BY &amp;lt;booking_group&amp;gt;-%tky. 

" Get highest bookingsupplement_id from bookings belonging to booking 
max_booking_suppl_id = REDUCE #( INIT max = CONV /dmo/booking_supplement_id( '0' ) 

FOR booksuppl IN booking_supplements USING KEY entity 
WHERE ( source-TravelId = &amp;lt;booking_group&amp;gt;-TravelId 
AND source-BookingId = &amp;lt;booking_group&amp;gt;-BookingId ) 
NEXT max = COND /dmo/booking_supplement_id( WHEN booksuppl-target-BookingSupplementId &amp;gt; max 
THEN booksuppl-target-BookingSupplementId 
ELSE max ) 

). 
" Get highest assigned bookingsupplement_id from incoming entities 

max_booking_suppl_id = REDUCE #( INIT max = max_booking_suppl_id 
FOR entity IN entities USING KEY entity 
WHERE ( TravelId = &amp;lt;booking_group&amp;gt;-TravelId 
AND BookingId = &amp;lt;booking_group&amp;gt;-BookingId ) 
FOR target IN entity-%target 
NEXT max = COND /dmo/booking_supplement_id( WHEN target-BookingSupplementId &amp;gt; max 
THEN target-BookingSupplementId 
ELSE max ) 

). 
" Loop over all entries in entities with the same TravelID and BookingID
LOOP AT entities ASSIGNING FIELD-SYMBOL(&amp;lt;booking&amp;gt;) USING KEY entity WHERE TravelId = &amp;lt;booking_group&amp;gt;-TravelId 
AND BookingId = &amp;lt;booking_group&amp;gt;-BookingId. 

" Assign new booking_supplement-ids 
LOOP AT &amp;lt;booking&amp;gt;-%target ASSIGNING FIELD-SYMBOL(&amp;lt;booksuppl_wo_numbers&amp;gt;). 
APPEND CORRESPONDING #( &amp;lt;booksuppl_wo_numbers&amp;gt; ) TO mapped-zi_booking_supp ASSIGNING FIELD-SYMBOL(&amp;lt;mapped_booksuppl&amp;gt;). 
IF &amp;lt;booksuppl_wo_numbers&amp;gt;-BookingSupplementId IS INITIAL. 
max_booking_suppl_id += 1 . 
&amp;lt;mapped_booksuppl&amp;gt;-BookingSupplementId = max_booking_suppl_id . 
ENDIF. 
ENDLOOP. 
ENDLOOP. 
ENDLOOP.
ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;21.&amp;nbsp;&lt;SPAN&gt;Based on the booking fee&amp;nbsp; we need to calculate the total price&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;So we need to write the logic in calcTotal price&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;method&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD CalcTotalPrice. 

DATA : it_travel TYPE STANDARD TABLE OF zpd_dt_travel WITH UNIQUE HASHED KEY key COMPONENTS travel_id. 
it_travel = CORRESPONDING #( keys DISCARDING DUPLICATES MAPPING travel_id = TravelId ). 

MODIFY ENTITIES OF zi_travel_detail IN LOCAL MODE 
ENTITY zi_travel_detail 
EXECUTE RecalcTotalPrice 
FROM CORRESPONDING #( it_travel ). 

ENDMETHOD. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;22. OUTPUT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1751356413745.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281056i9F607E3B71E7BBD6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1751356413745.png" alt="Pradeep555_1-1751356413745.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;23.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Edit--&amp;gt; changing booking fee from 140 USD to 240&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;USD&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1751356464751.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281061i80F49161DD120248/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1751356464751.png" alt="Pradeep555_3-1751356464751.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1751356486334.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281062iBFFF53176F80B0A8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1751356486334.png" alt="Pradeep555_4-1751356486334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;24.&amp;nbsp; &amp;nbsp;&lt;SPAN&gt;Click on save&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; after saving , the total price is still the same ---&amp;gt; not updated at the screen level&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_5-1751356553915.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281066iE1EEC86B86A98E04/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_5-1751356553915.png" alt="Pradeep555_5-1751356553915.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;25.&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When we refresh the page—the total price gets updated&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1751356589520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281067iB2E6360B32F2DBFB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1751356589520.png" alt="Pradeep555_6-1751356589520.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;26.&amp;nbsp; N&lt;SPAN&gt;ow we need to use the side effects to make the data refreshed on save at screen level&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;, So n&lt;/SPAN&gt;&lt;SPAN&gt;ow it should not only be updated in the transactional buffer – it should&amp;nbsp; also be updated in the front end&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1751356689309.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281068iF69F21F2160CCEBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1751356689309.png" alt="Pradeep555_7-1751356689309.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;27.&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Change the booking fee 258 USD&amp;nbsp; and click on save&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1751356741975.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281069i705DAB1959677231/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1751356741975.png" alt="Pradeep555_8-1751356741975.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;28.&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;As soon as you click on save&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1751356776648.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281070i48252591EEDCAC73/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1751356776648.png" alt="Pradeep555_9-1751356776648.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks and regards&amp;nbsp;&lt;/P&gt;&lt;P&gt;-PRADEEP ISHWAR DEVADIGA&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/side-effects-in-rap-explained-with-determination-example/ba-p/14140206"/>
    <published>2025-07-02T10:28:03.987000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/determine-action-in-rap/ba-p/14140181</id>
    <title>Determine action in RAP</title>
    <updated>2025-07-02T10:28:17.775000+02:00</updated>
    <author>
      <name>Dadapeer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451098</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Introduction&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;This blo&lt;/SPAN&gt;&lt;SPAN&gt;g provides a step-by-step guide on creating a Inventory&amp;nbsp;Management and archiving the &lt;/SPAN&gt;&lt;SPAN&gt;Determine action&lt;/SPAN&gt;&lt;SPAN&gt; u&lt;/SPAN&gt;&lt;SPAN&gt;sing RAP in a managed scenario.&lt;/SPAN&gt;&lt;SPAN&gt; In RAP, determinations and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;validations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; are typically executed &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;implicitly&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; during save operations.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, where I will calculate the &lt;/SPAN&gt;&lt;SPAN&gt;total value&lt;/SPAN&gt;&lt;SPAN&gt; in an &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Inventory&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; object &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;only after&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; the &lt;/SPAN&gt;&lt;SPAN&gt;lastchangeat&lt;/SPAN&gt;&lt;SPAN&gt; timestamp was set. We'll solve this challenge using a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Determine Action.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Determine action &lt;/SPAN&gt;&lt;SPAN&gt;allows to execute Determination and validation &lt;STRONG&gt;on request&lt;/STRONG&gt;. Whenever a determine action is executed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Scenario for Determine action:&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When a user creates an Inventory entry with product details, the following must happen:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A default RAP determination should calculate total_value&amp;nbsp; during create.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The total_value should be calculated after the lastchangeat field is populated (which happens after the entity is saved).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;To achieve this, a custom Determine Action should be used post-save to trigger the actual determination.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Procedure:&lt;/STRONG&gt;&lt;/U&gt;&lt;STRONG&gt;&amp;nbsp; &lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;C&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;reated one database table '&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZDP_inventory&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'inventory table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdp_inventory {

  key product_id : abap.int1 not null;
  product_name   : abap.char(50);
  quantity       : zdp_de_pdt_quantity;
  @Semantics.amount.currencyCode : 'zdp_inventory.currency_code'
  unit_price     : zdp_de_unit_price;
  currency_code  : abap.cuky;
  @Semantics.amount.currencyCode : 'zdp_inventory.currency_code'
  total_value    : abap.curr(13,2);
  last_change_at : timestampl;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Now we need to create &lt;/SPAN&gt;&lt;SPAN class=""&gt;an interface&lt;/SPAN&gt;&lt;SPAN class=""&gt; view on top of &lt;/SPAN&gt;&lt;SPAN class=""&gt;DB&lt;/SPAN&gt;&lt;SPAN class=""&gt; table.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'interface entity view for inventory'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Metadata.allowExtensions: true
define root view entity zdp_i_cds_inventory as 
select from zdp_inventory

{
    key product_id as ProductId,
    product_name as ProductName,
    quantity as Quantity,
    @Semantics.amount.currencyCode : 'currencycode'
    unit_price as UnitPrice,
    currency_code as CurrencyCode,
    @Semantics.amount.currencyCode : 'currencycode'
    total_value as totalvalue,
    @Semantics.systemDateTime.lastChangedAt: true
    last_change_at as lastchangeat
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Now we need to create a projection view on top of &lt;/SPAN&gt;&lt;SPAN class=""&gt;Interface&lt;/SPAN&gt;&lt;SPAN class=""&gt; view&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'projection view on inventory'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define root view entity zdp_p_cds_inventory 
provider contract transactional_query 
as projection on zdp_i_cds_inventory
{
    key ProductId,
    ProductName,
    Quantity,
    @Semantics.amount.currencyCode : 'currencycode'
    UnitPrice,
    CurrencyCode,
    @Semantics.amount.currencyCode : 'currencycode'
    totalvalue,
    lastchangeat
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Now we need to create the behavior definition on top of &lt;/SPAN&gt;&lt;SPAN class=""&gt;interface&lt;/SPAN&gt;&lt;SPAN class=""&gt; view.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_dp_i_cds_inventory unique;
strict ( 2 );

define behavior for zdp_i_cds_inventory //alias &amp;lt;alias_name&amp;gt;
persistent table zdp_inventory
lock master
authorization master ( none )

{
  create ;
  update ( authorization : none  );
  delete ;
  
  field ( readonly ) lastchangeat;
  action Trigger_detmine_action result[1] $self;

  determine action calc_total
    {
       determination ( always ) totalCalc;
      validation checkQuantity;
    }

  determination totalCalc
    on save
    { field lastchangeat; create; }

  validation checkQuantity
    on save
    { field Quantity; }

  mapping for zdp_inventory
  {
   ProductId = product_id;
   ProductName = product_name;
   Quantity = quantity;
   UnitPrice = unit_price;
   CurrencyCode = currency_code;
   totalvalue = total_value;
   lastchangeat = last_change_at;

  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;I&gt;&lt;SPAN&gt;Now create a behavior definition on top of consumption view:&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Code of Behavior Definition of Projection:&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );

define behavior for zdp_p_cds_inventory //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;
  use action Trigger_detmine_action;
  use action calc_total;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;To declare Determine action in Behavior Definition.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dadapeer_0-1751279317704.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280571iBF1985E2B7F6BC56/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Dadapeer_0-1751279317704.png" alt="Dadapeer_0-1751279317704.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To trigger Determine action :&lt;BR /&gt;The determine action calc_total is executed with the statement&amp;nbsp;MODIFY ENTITIES&amp;nbsp;for entity instances.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dadapeer_0-1751278622761.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280545i03B6D4EBDD9524D7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Dadapeer_0-1751278622761.png" alt="Dadapeer_0-1751278622761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior implementation.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zdp_i_cds_inventory DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS checkquantity FOR VALIDATE ON SAVE
      IMPORTING keys FOR zdp_i_cds_inventory~checkquantity.
    METHODS trigger_detmine_action FOR MODIFY
      IMPORTING keys FOR ACTION zdp_i_cds_inventory~trigger_detmine_action RESULT result.
    METHODS totalcalc FOR DETERMINE ON SAVE
      IMPORTING keys FOR zdp_i_cds_inventory~totalcalc.

ENDCLASS.

CLASS lhc_zdp_i_cds_inventory IMPLEMENTATION.

  METHOD checkQuantity.
    READ ENTITIES OF zdp_i_cds_inventory IN LOCAL MODE
    ENTITY zdp_i_cds_inventory
    FIELDS ( quantity )
    WITH CORRESPONDING #( keys )
    RESULT DATA(lt_result_qua).

    DATA(ls_res_qua) = lt_result_qua[ 1 ].
    IF ls_res_qua-Quantity IS INITIAL.
      APPEND VALUE #( %tky = ls_res_qua-%tky
                    %msg = new_message_with_text(
                    severity = if_abap_behv_message=&amp;gt;severity-error
                    text = 'Please provide quantity'
                    ) ) TO reported-zdp_i_cds_inventory.
    ENDIF.

  ENDMETHOD.

  METHOD Trigger_detmine_action.
    READ ENTITIES OF zdp_i_cds_inventory IN LOCAL MODE
    ENTITY zdp_i_cds_inventory
    FIELDS ( ProductId )
    WITH CORRESPONDING #( keys )
    RESULT DATA(lt_result_prdt).


    LOOP AT lt_result_prdt INTO DATA(ls_result).
      MODIFY ENTITIES OF zdp_i_cds_inventory IN LOCAL MODE
           ENTITY zdp_i_cds_inventory
           EXECUTE calc_total
           FROM VALUE #( ( ProductId = ls_result-ProductId ) )

           MAPPED FINAL(lt_mapped)
           FAILED FINAL(lt_failed)
           REPORTED FINAL(lt_reported).
      mapped-zdp_i_cds_inventory = lt_mapped-zdp_i_cds_inventory.
*    COMMIT ENTITIES.
    ENDLOOP.
  ENDMETHOD.

  METHOD totalCalc.

    READ ENTITIES OF zdp_i_cds_inventory IN LOCAL MODE
    ENTITY zdp_i_cds_inventory
    FIELDS ( quantity  unitprice  )
    WITH CORRESPONDING #( keys )
    RESULT DATA(lt_result).



    LOOP AT keys ASSIGNING FIELD-SYMBOL(&amp;lt;fs_keys&amp;gt;).
      LOOP AT lt_result INTO DATA(ls_result).
        IF ls_result-%tky = &amp;lt;fs_keys&amp;gt;-%tky.
          ls_result-totalvalue = ls_result-quantity * ls_result-unitprice.

          MODIFY ENTITIES OF zdp_i_cds_inventory IN LOCAL MODE
          ENTITY zdp_i_cds_inventory
          UPDATE
          FIELDS ( totalvalue ) WITH VALUE #( ( %tky = &amp;lt;fs_keys&amp;gt;-%tky
                                                 totalvalue = ls_result-totalvalue ) ).
        ENDIF.
      ENDLOOP.
    ENDLOOP.
    .


  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Output:&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dadapeer_0-1751278237864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280537iADDD05FDEC70260D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Dadapeer_0-1751278237864.png" alt="Dadapeer_0-1751278237864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;W&lt;/SPAN&gt;&lt;SPAN class=""&gt;hen&lt;/SPAN&gt; &lt;SPAN class=""&gt;we click on &lt;/SPAN&gt;&lt;SPAN class=""&gt;the action&lt;/SPAN&gt;&lt;SPAN class=""&gt; button at that &lt;/SPAN&gt;&lt;SPAN class=""&gt;time,&lt;/SPAN&gt; &lt;SPAN class=""&gt;determine&lt;/SPAN&gt;&lt;SPAN class=""&gt; action will trigger &lt;/SPAN&gt;&lt;SPAN class=""&gt;the total&lt;/SPAN&gt;&lt;SPAN class=""&gt; value is calculated.&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Dadapeer_0-1751278084388.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/280535iB0BF099CB1C13EA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Dadapeer_0-1751278084388.png" alt="Dadapeer_0-1751278084388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/determine-action-in-rap/ba-p/14140181"/>
    <published>2025-07-02T10:28:17.775000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/use-of-convert-key-which-is-return-as-a-preliminary-key-pid-from-late/ba-p/14141942</id>
    <title>Use of CONVERT KEY , which is return as a preliminary key %pid from Late Numbering</title>
    <updated>2025-07-04T18:39:01.499000+02:00</updated>
    <author>
      <name>DDEBORSHI</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/156789</uri>
    </author>
    <content>&lt;P&gt;What is Covert Key ? – When we are using standard BDEF for our development, some time we can see standard BDEF using “Late Numbering” for creating preliminary key %pid.&lt;/P&gt;&lt;P&gt;For example, for PO Creation we use BDEF &amp;nbsp;I_PurchaseOrderTP_2 , for Purchase Contract BDEF is &amp;nbsp;I_PurchaseContractTP and for Service Entry Sheet BDEF r_serviceentrysheettp.&lt;/P&gt;&lt;P&gt;During CREATE operation using EML, in MAPPED parameter will only return a preliminary key %pid. Then to retrieve the final key in our application from this preliminary key we must use the&amp;nbsp;CONVERT KEY&amp;nbsp;key word.&lt;/P&gt;&lt;P&gt;This conversion will call in SAVE Sequence in SAVE_MODIFIED&amp;nbsp; method. And for this we need to use either Unmanaged Save or Additional Save.&lt;/P&gt;&lt;P&gt;Note:- &lt;EM&gt;If we want to save this convert key into the persistence of our own RAP business object, then we must use the unmanaged save approach&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;For Example, here I am using BDEF r_serviceentrysheettp.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;Scenario 1&lt;/U&gt;&lt;/EM&gt;- When we are call EML inside our BDEF.&lt;/P&gt;&lt;P&gt;I have created an app where Service Entry Sheet will create when user click on Action Button.&lt;/P&gt;&lt;P&gt;I have used managed with unmanaged save implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_0-1751387641421.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281464iE3B1BDA737E7FE8E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_0-1751387641421.png" alt="DDEBORSHI_0-1751387641421.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Behavior Implementation class (Global Section) I have defined a variable that will hold the response of my API call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_1-1751387711993.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281465i0B7113DBEA839C5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_1-1751387711993.png" alt="DDEBORSHI_1-1751387711993.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Action “createses” method&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_2-1751387765698.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281466iDA99C8FD16AB3716/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_2-1751387765698.png" alt="DDEBORSHI_2-1751387765698.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here in variable mapped_serviceentry_sheet &amp;nbsp;we will hold the response of our API call i.e. MAPPED data.&lt;/P&gt;&lt;P&gt;In debugging we can see the %PID value.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_3-1751387792200.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281467i117DEA0AFF401FE1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_3-1751387792200.png" alt="DDEBORSHI_3-1751387792200.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here we can see EML is returning only preliminary key, that we need to convert in SAVE_MODIFIED method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_4-1751387876195.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281468iD5A488149252C2BF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_4-1751387876195.png" alt="DDEBORSHI_4-1751387876195.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In debugging -&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_5-1751387920372.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281469iDDAB8B6295DB015E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_5-1751387920372.png" alt="DDEBORSHI_5-1751387920372.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Scenario&lt;/EM&gt; 2 – Call EML outside BDEF or normal class.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_6-1751388081653.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281470iA148AF2E6C259FE7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_6-1751388081653.png" alt="DDEBORSHI_6-1751388081653.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Debugging -&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DDEBORSHI_7-1751388119306.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281471i5D4E36828C7D0C5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DDEBORSHI_7-1751388119306.png" alt="DDEBORSHI_7-1751388119306.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/use-of-convert-key-which-is-return-as-a-preliminary-key-pid-from-late/ba-p/14141942"/>
    <published>2025-07-04T18:39:01.499000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/designing-a-fiori-ready-cds-view-with-ui-facets-value-helps-and/ba-p/14147853</id>
    <title>Designing a Fiori-Ready CDS View with UI Facets, Value Helps, and Associations in RAP</title>
    <updated>2025-07-23T11:53:03.236000+02:00</updated>
    <author>
      <name>raghu_ps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150897</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this blog post, I will explain how to design a CDS view entity in ABAP RAP (RESTful ABAP Programming Model) that is well-suited for use with Fiori Elements. We'll use annotations such as ui&lt;FONT size="4"&gt;&lt;STRONG&gt;.&lt;/STRONG&gt;facet&lt;/FONT&gt;, Consumption.valueHelpDefinition, ObjectModel.association, and search.defaultSearchElement to enhance the user interface and behavior.&lt;/P&gt;&lt;P&gt;The example is based on a Flight Management scenario, where we create a CDS view to manage flight connections and set up associations to carrier and flight-related data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Display flight connection details as the header, along with the related flight entries as line items&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Provide value help functionality for airport-related fields&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use associations to link the CDS view to related entities such as carrier and airport information&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enable search capabilities and ensure the data is optimized for Fiori Elements&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;CDS View Entity Code&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ZPS_FLIGHT_R - &lt;/SPAN&gt;&lt;SPAN&gt;Flight Information&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Flight Information' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@Search.searchable: true 
define view entity ZPS_FLIGHT_R 
as select from /dmo/flight 
association[1] to ZPS_CARRIER_R as _Airline on $projection.CarrierId = _Airline.CarrierId  
{ 
@UI.lineItem: [{ position: 10 }] 
@ObjectModel.text.association: '_Airline' 
key carrier_id as CarrierId, 
@UI.lineItem: [{ position: 20 }] 
key connection_id as ConnectionId, 
@UI.lineItem: [{ position: 30 }] 
key flight_date as FlightDate, 
@UI.lineItem: [{ position: 40 }] 
@Semantics.amount.currencyCode: 'CurrencyCode' 
price as Price, 
@UI.lineItem: [{ position: 50 }] 
currency_code as CurrencyCode, 
@UI.lineItem: [{ position: 60 }] 
@Search.defaultSearchElement: true 
plane_type_id as PlaneTypeId, 
@UI.lineItem: [{ position: 70 }] 
seats_max as SeatsMax, 
@UI.lineItem: [{ position: 80 }] 
seats_occupied as SeatsOccupied, 
_Airline 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZPS_CARRIER_R - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Carrier detail&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Carrier detail' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@Search.searchable: true 
define view entity ZPS_CARRIER_R 
as select from /dmo/carrier 
{ 
key carrier_id as CarrierId, 
@Search.defaultSearchElement: true 
@Semantics.text: true 
@Search.fuzzinessThreshold: 0.8 
name as Name, 
currency_code as CurrencyCode 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZPS_AIRPORT_VH - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Value help for airport&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Value help for airport' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@Search.searchable: true 
define view entity ZPS_AIRPORT_VH 
as select from /dmo/airport 
{ 
@Search.defaultSearchElement: true 
key airport_id as AirportId, 
@Search.defaultSearchElement: true 
@Search.fuzzinessThreshold: 0.7 
name as Name, 
@Search.defaultSearchElement: true 
@Search.fuzzinessThreshold: 0.7 
city as City, 
@Search.defaultSearchElement: true 
@Search.fuzzinessThreshold: 0.7 
country as Country 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZPS_CONNECTION_FLIGHT - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Flight Reference&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE] 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Flight Reference' 
@Metadata.ignorePropagatedAnnotations: true 
@ObjectModel.usageType:{ 
serviceQuality: #X, 
sizeCategory: #S, 
dataClass: #MIXED 
} 
@UI.headerInfo: { 
typeName: 'Connection', 
typeNamePlural: 'Connections' 
} 
@Search.searchable: true 
define view entity ZPS_CONNECTION_FLIGHT 
as select from /dmo/connection as connection 
association [1..*] to ZPS_FLIGHT_R as _flight on $projection.CarrierId = _flight.CarrierId 
and $projection.ConnectionId = _flight.ConnectionId 
association [1] to ZPS_CARRIER_R as _Airline on $projection.CarrierId = _Airline.CarrierId 
{ 
@UI.facet: [{ id: 'Connection', 
purpose: #STANDARD, 
type: #IDENTIFICATION_REFERENCE, 
position: 10, 
label: 'Connection Detail' }, 
{ id: 'Flight', 
purpose: #STANDARD, 
type: #LINEITEM_REFERENCE, 
position: 20, 
label: 'Flights', 
targetElement: '_flight' 
} 
] 
@UI.lineItem: [{position: 10, label: 'Airline' }] 
@UI.identification: [{ position: 10, label: 'Airline' }] 
@ObjectModel.text.association: '_Airline' 
@Search.defaultSearchElement: true 
key carrier_id as CarrierId, 
@UI.lineItem: [{position: 20 }] 
@UI.identification: [{ position: 20 }] 
@Search.defaultSearchElement: true 
key connection_id as ConnectionId, 
@UI.selectionField: [{ position: 10 }] 
@UI.lineItem: [{position: 30, label: 'Depature Airport Id' }] 
@UI.identification: [{ position: 30, label: 'Depature Airport Id' }] 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity:{ 
name: 'ZPS_AIRPORT_VH', 
element: 'AirportId'} }] 
airport_from_id as AirportFromId, 
@UI.selectionField: [{ position: 20 }] 
@UI.lineItem: [{position: 40 }] 
@UI.identification: [{ position: 40 }] 
@Search.defaultSearchElement: true 
@Consumption.valueHelpDefinition: [{ entity:{ 
name: 'ZPS_AIRPORT_VH', 
element: 'AirportId'} }] 
@EndUserText.label: 'Destination Airport ID' 
airport_to_id as AirportToId, 
@UI.lineItem: [{position: 50, label: 'Departure Time' }] 
@UI.identification: [{ position: 50 }] 
departure_time as DepartureTime, 
@UI.lineItem: [{position: 60, label: 'Arrival Time' }] 
@UI.identification: [{ position: 60 }] 
arrival_time as ArrivalTime, 
@Semantics.quantity.unitOfMeasure: 'DistanceUnit' 
@UI.identification: [{ position: 70 }] 
distance as Distance, 
distance_unit as DistanceUnit, 
//Association--&amp;gt; 
@Search.defaultSearchElement: true 
_flight, 
@Search.defaultSearchElement: true 
_Airline 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Key Concepts Covered&lt;/P&gt;&lt;P&gt;Annotations&lt;BR /&gt;&lt;STRONG&gt;ui.facet&lt;/STRONG&gt; : Creates grouped sections in the Fiori Object Page&lt;BR /&gt;&lt;STRONG&gt;ui.lineItem&lt;/STRONG&gt; : Controls the display of fields in table lists&lt;BR /&gt;&lt;STRONG&gt;Consumption.valueHelpDefinit&lt;/STRONG&gt; : Enables F4 value help for fields&lt;BR /&gt;&lt;STRONG&gt;search.&lt;/STRONG&gt;defaultSearchElement : Makes the field available in the Fiori search bar&lt;BR /&gt;&lt;STRONG&gt;ObjectModel.text.association&lt;/STRONG&gt; : Provides text description for key fields&lt;BR /&gt;Association to entity Enables : navigation and linking to related entities&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You’ll see:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;A header section labeled "Connection Detail" displaying the main connection information&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;A "Flights" section or tab, enabled through the _flight association, showing related flight entries as line items&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;F4 help (value help) activated for airport_from_id and airport_to_id fields using @Consumption.valueHelpDefinition&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;A search bar that allows filtering by fields such as Airline, Connection ID, Departure Airport, and Destination Airport&lt;/P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="raghu_ps_1-1752036262694.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284351i865E5E45363C902D/image-size/large?v=v2&amp;amp;px=999" role="button" title="raghu_ps_1-1752036262694.png" alt="raghu_ps_1-1752036262694.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Departure airport value help&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="raghu_ps_2-1752036303518.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284352iBD555FDD6A270FF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="raghu_ps_2-1752036303518.png" alt="raghu_ps_2-1752036303518.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Line-item record&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="raghu_ps_3-1752036334100.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284353iDC4F58C299C0314B/image-size/large?v=v2&amp;amp;px=999" role="button" title="raghu_ps_3-1752036334100.png" alt="raghu_ps_3-1752036334100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Summary&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog demonstrated how to build a Fiori-optimized CDS view using ABAP RAP, with the help of UI annotations, value helps, and text associations.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/designing-a-fiori-ready-cds-view-with-ui-facets-value-helps-and/ba-p/14147853"/>
    <published>2025-07-23T11:53:03.236000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915</id>
    <title>Exposing SAP S4 Onprem data to external System || Odata Service || BTP || Destination-Connectivity</title>
    <updated>2025-07-24T09:09:11.979000+02:00</updated>
    <author>
      <name>Ace_D</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1501366</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735011379"&gt;&lt;STRONG&gt;Prerequisites from BTP Side&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Account&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Access to SAP Business Technology Platform (BTP) with appropriate entitlements.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Cloud Connector Setup&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP Cloud Connector installed and configured to connect your on-premise S/4HANA system to SAP BTP.&lt;/LI&gt;&lt;LI&gt;Destination configured in BTP cockpit pointing to your on-premise system.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connectivity Service and Destination Service&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP BTP Connectivity service and destination service instance on the BTP account.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Environment&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Cloud Foundry space set up in your BTP subaccount to deploy the application.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets take a simple use case for creating a RAP service on S4, which is a wrapper API call on the reprocess IDOC function module.&lt;/P&gt;&lt;P&gt;For this we will create a RAP service on the S4 box, than activate the service with the &lt;STRONG&gt;/IWFND/MAINT_SERVICE&amp;nbsp;&lt;/STRONG&gt;and activate the &lt;STRONG&gt;ICF Node as well.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Note: In this blog we will not go through the steps of setting cloud connector and destination on the BTP account. We will assume that destination with cloud connector setup is already available on the BTP.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create and activate the RAP service on the S4 Box.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;We will create a unmanaged rap scenario with custom entity and than we will create a service definition and top of service definition we will create service binding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752479114889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286063i6147300A58FD94EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752479114889.png" alt="Ace_D_0-1752479114889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Lets create the class for the query implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752479219667.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286066i8FE4DD17F2125A3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752479219667.png" alt="Ace_D_1-1752479219667.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752479284513.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286068i7DF33D859E64B0B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752479284513.png" alt="Ace_D_3-1752479284513.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752479314425.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286069i1ADC607EAFF20853/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752479314425.png" alt="Ace_D_4-1752479314425.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We are calling the FM to reprocess the idoc and checking the relevant table to get the latest reprocessed idoc status for the same.&lt;/P&gt;&lt;P&gt;Now we will create a service definition and service binding for the custom entity created.&lt;/P&gt;&lt;P&gt;Service Definition&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752479854976.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286073i72B0728E2CDB8D9C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752479854976.png" alt="Ace_D_8-1752479854976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And overall project will look something like this.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752479511558.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286070iB8D8CB8704C75416/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752479511558.png" alt="Ace_D_5-1752479511558.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here i have created two types of service bindings v2 and v4 but we will be using only v2 for this.&lt;/P&gt;&lt;P&gt;So overall we created below 4 artifacts.&lt;/P&gt;&lt;P&gt;1. Custom entity&lt;/P&gt;&lt;P&gt;2. Class&lt;/P&gt;&lt;P&gt;3. Service definition&lt;/P&gt;&lt;P&gt;4. Service binding&lt;/P&gt;&lt;P&gt;Now to test the service we will publish the service first and than call the generated url&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752479816432.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286072iDC562CE467DBAAA5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752479816432.png" alt="Ace_D_7-1752479816432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;if you see the image, i have published the service and after publish we also got the custom entity that we have created, click on the &lt;STRONG&gt;service url&lt;/STRONG&gt; and it will open in browser asking for authentication of S4 user id and password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752480025822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286074iD29880ABB4A5E44A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752480025822.png" alt="Ace_D_9-1752480025822.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the authentication is successful you should be able to see this.&lt;/P&gt;&lt;P&gt;Now lets open the SAP GUI so that i can show you the ICF node activation, which is generally taken care by basis team.&lt;/P&gt;&lt;P&gt;Open the Tcode:&amp;nbsp;&lt;STRONG&gt;/IWFND/MAINT_SERVICE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_10-1752480290098.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286075i2C11D72626448B10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_10-1752480290098.png" alt="Ace_D_10-1752480290098.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here you can find your activated service binding and make sure all components of the service looks as it is in the image.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Assuming cloud connector and destination is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With this we completed the S4 box setup, now its ready to communicate with other external systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Creating the Destination service and Connectivity service on the BTP Account.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Login in to BTP account and lets create 2 service instances with service keys.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752483153170.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286097iDCC3A3321CE1ECB0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752483153170.png" alt="Ace_D_11-1752483153170.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1.&amp;nbsp;&lt;STRONG&gt;Destination service&lt;/STRONG&gt;, this will help us to get the destination details, Destination service gets all the registered destinations on the BTP, from which we can filter out the destination that is up for our S4 onprem box.&lt;/P&gt;&lt;P&gt;Destination service will give us all the relevant things like user id passwd, location and etc. for that destination.&lt;/P&gt;&lt;P&gt;Service key for the destination service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752483270245.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286098iBE180D64FD0F615E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752483270245.png" alt="Ace_D_12-1752483270245.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752483330309.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286099i127A1F287FB75995/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752483330309.png" alt="Ace_D_13-1752483330309.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. &lt;STRONG&gt;Connectivity Service,&amp;nbsp;&lt;/STRONG&gt;Since we are trying to get the data out of onprem system we will have to use connectivity service from btp, which will provide us proxies, this proxies will be use to call the onprem odata url.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752483491742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286106i3806395799EEF5CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752483491742.png" alt="Ace_D_14-1752483491742.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752483598535.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286107iCD11D07C5A492C3E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752483598535.png" alt="Ace_D_15-1752483598535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is important to paste here the service keys for better understanding since we will be using many things from the service key into our application&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Lets create a python application to call the onprem service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important things to consider here.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;By using destination and connectivity service we cannot test the application on local system, we will have to deploy our app on CF to test the same.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We will use the flask requests and certain other libraries for the python programming&lt;/P&gt;&lt;P&gt;file: .env file to store all the secrets this secrets are from the service keys only.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_2-1752492372749.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286202iF6300349E7896528/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_2-1752492372749.png" alt="Ace_D_2-1752492372749.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;File: Requirements.txt&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752492015085.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286200i27F53BD3C09B09AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752492015085.png" alt="Ace_D_0-1752492015085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;File: Runtime.txt&lt;/P&gt;&lt;P&gt;python-3.11.*&lt;/P&gt;&lt;P&gt;file: manifest.yaml&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752492157202.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286201iA56CB734CFA3967C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752492157202.png" alt="Ace_D_1-1752492157202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;file:idocapis.py (should be same as mentioned in Manifest.yml file&lt;/P&gt;&lt;P&gt;Load all the required libraries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752492555784.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286203iEB454EAAAAA7E66C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752492555784.png" alt="Ace_D_3-1752492555784.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;define the function to get the token&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752493129840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286204i152BA582C8BA1F8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752493129840.png" alt="Ace_D_4-1752493129840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get the list of all destinations on the BTP&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752493241781.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286205iA640B84C01B00E5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752493241781.png" alt="Ace_D_5-1752493241781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define the function to construct the URL for the odata call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_6-1752493319173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286206i83806D03EC8AE6C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_6-1752493319173.png" alt="Ace_D_6-1752493319173.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get token for the connectivity service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752493411094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286213i4C439E0B0047EB4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752493411094.png" alt="Ace_D_7-1752493411094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to call the odata service with connectivity things&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752493551879.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286242iDE3AED9EE0D95C35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752493551879.png" alt="Ace_D_8-1752493551879.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752493573946.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286243i670226B5E2674B07/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752493573946.png" alt="Ace_D_9-1752493573946.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now lets define the final route in flask to call this service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752494450583.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286281i0C7C7F657EECF5CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752494450583.png" alt="Ace_D_13-1752494450583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One thing to note here the&amp;nbsp;&lt;STRONG&gt;RESOURCE variable will depend on the destination url of the onprem that is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752494105816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286279i7A1D0EA83E29C50A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752494105816.png" alt="Ace_D_11-1752494105816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752494133009.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286280iBAC4EB399CB3AEFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752494133009.png" alt="Ace_D_12-1752494133009.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;STEP 4: Deployment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets deploy the app on the CF by pushing the app to the cloud foundry from the BAS&lt;/P&gt;&lt;P&gt;Use command &lt;STRONG&gt;cf push&lt;/STRONG&gt; after successful authentication for your cloud foundry space.&lt;/P&gt;&lt;P&gt;After the deployment on the cloud we can get the url that is generated on the cloud.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752495094785.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286283iF188D4ACAB2AC66A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752495094785.png" alt="Ace_D_14-1752495094785.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Testing the application:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets create a small python program to call this API in local now to test it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752495325813.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286284iA1C1678704489B7A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752495325813.png" alt="Ace_D_15-1752495325813.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should get response coming from your S4 onPrem system.&lt;/P&gt;&lt;P&gt;Thanks for staying till the end!!!&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915"/>
    <published>2025-07-24T09:09:11.979000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420</id>
    <title>A Step-by-Step Guide to Implementing an Excel Upload Button in a Fiori App using RAP</title>
    <updated>2025-07-24T09:18:19.224000+02:00</updated>
    <author>
      <name>KPShekhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1617455</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735155555"&gt;&lt;STRONG&gt;Live Demo&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Here is a short video demonstrating the final Excel upload functionality in action.&lt;/P&gt;&lt;P class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FcFcxJPgTAa8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DcFcxJPgTAa8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FcFcxJPgTAa8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Excel Upload Button in SAP RAP Fiori Application Demo Run" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I've built a simple RAP application with a V4 UI. The application features an "Employee" table with three fields. The base of the application was created using the RAP generator, and I've also included early numbering logic for the&amp;nbsp;&lt;/SPAN&gt;Employee ID.&lt;/P&gt;&lt;H2 id="toc-hId-1538642050"&gt;&lt;STRONG&gt;Step 1: Create a Fiori Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To begin, create a new SAP Fiori project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;List Report&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;template. This will serve as the foundation for our application.&lt;/P&gt;&lt;H2 id="toc-hId-1342128545"&gt;&lt;STRONG&gt;Step 2: Add a Custom Button&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;With the project set up, the next step is to add a custom button. You can do this by using the open guided development feature. From there, choose the option to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Add a Custom Action to a Page Using Extensions&lt;/STRONG&gt;. Follow the prompts in the guide to insert the necessary code snippets for the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.33.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288514i7A9DB78C413A5FF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.33.43 PM.png" alt="Screenshot 2025-07-18 at 12.33.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.36.47 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288515i92DDB5C0BBCE2331/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.36.47 PM.png" alt="Screenshot 2025-07-18 at 12.36.47 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;or&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145615040"&gt;&lt;STRONG&gt;Step 2: Configure the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;File&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file is the application descriptor, defining its structure, data sources, and routing. To add the "Excel Upload" button, you need to modify this file to define a custom action and extend the standard List Report controller with our custom logic&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;You can either use the "Add a Custom Action to a Page Using Extensions" option in the guided development tool or update the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file directly with the following configuration&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Pay close attention to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;controlConfiguration&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;extends&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sections, which are key to enabling this functionality.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "_version": "1.53.0",
  "sap.app": {
    "id": "uploadempexcel",
    "type": "application",
    "i18n": "i18n/i18n.properties",
    "applicationVersion": {
      "version": "0.0.1"
    },
    "title": "{{appTitle}}",
    "description": "{{appDescription}}",
    "resources": "resources.json",
    "sourceTemplate": {
      "id": "@sap/generator-fiori:lrop",
      "version": "1.18.2",
      "toolsId": "f8a70d19-c3d7-40bf-9b4b-03ba34f86143"
    },
    "dataSources": {
      "mainService": {
        "uri": "/sap/opu/odata4/sap/zui_upload_emp_o4/srvd/sap/zui_upload_emp_o4/0001/",
        "type": "OData",
        "settings": {
          "annotations": ["annotation"],
          "localUri": "localService/mainService/metadata.xml",
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui5": {
    "flexEnabled": true,
    "dependencies": {
      "minUI5Version": "1.114.9",
      "libs": {
        "sap.m": {},
        "sap.ui.core": {},
        "sap.fe.templates": {}
      }
    },
    "routing": {
      "routes": [
        {
          "pattern": ":?query:",
          "name": "ZC_UPLOAD_EMPList",
          "target": "ZC_UPLOAD_EMPList"
        }
      ],
      "targets": {
        "ZC_UPLOAD_EMPList": {
          "type": "Component",
          "id": "ZC_UPLOAD_EMPList",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "contextPath": "/ZC_UPLOAD_EMP",
              "controlConfiguration": {
                "@com.sap.vocabularies.UI.v1.LineItem": {
                  "actions": {
                    "uploadExcelController.controller": {
                      "press": ".extension.uploadempexcel.ext.controller.uploadExcelController.uploadExcel",
                      "visible": true,
                      "enabled": true,
                      "requiresSelection": false,
                      "text": "Upload Excel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "extends": {
      "extensions": {
        "sap.ui.controllerExtensions": {
          "sap.fe.templates.ListReport.ListReportController": {
            "controllerName": "uploadempexcel.ext.controller.uploadExcelController"
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949101535"&gt;&lt;STRONG&gt;Step 3: Create a Fragment for the Pop-up Screen&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;You'll need to create a fragment in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ext&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;folder. This fragment will define the pop-up screen that appears when a user clicks the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.43.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288516i792D93DDC3EE4AF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.43.56 PM.png" alt="Screenshot 2025-07-18 at 12.43.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:upload="sap.m.upload"&amp;gt;
    &amp;lt;Dialog id="uploadDialogSet" title="Excel Upload"&amp;gt;
        &amp;lt;content&amp;gt;
            &amp;lt;upload:UploadSet
                id="uploadSet"
                maxFileNameLength="200"
                fileTypes="xlsx, xls"
                afterItemAdded=".onAfterItemAdded"
                afterItemRemoved=".onAfterItemRemoved"
                uploadEnabled="true"
                /&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;!-- CORRECTED: Changed from &amp;lt;buttons&amp;gt; to &amp;lt;beginButton&amp;gt; and &amp;lt;endButton&amp;gt; --&amp;gt;
        &amp;lt;beginButton&amp;gt;
            &amp;lt;Button id="idUploadB" text="Upload" press=".onUploadPress" type="Emphasized" enabled="false"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button id="idCancelB" text="Cancel" press=".onCloseDialog" /&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-752588030"&gt;&lt;STRONG&gt;Step 4: Implement the Controller Logic&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The main logic for handling the file upload is contained within the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;uploadExcelController.controller.js&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file. You can adapt the code below for your own application. Make sure to adjust the file name and payload column names to fit your specific needs.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define(
  [
    "sap/ui/core/mvc/ControllerExtension",
    "sap/m/MessageToast",
    "sap/ui/core/Fragment",
    "xlsx",
  ],
  function (ControllerExtension, MessageToast, Fragment, XLSX) {
    "use-strict";

    return ControllerExtension.extend(
      "uploadempexcel.ext.controller.uploadExcelController",
      {
        _pDialog: null,
        _file: null,

        uploadExcel: function () {
          if (!this._pDialog) {
            this._pDialog = Fragment.load({
              id: this.base.getView().getId(),
              name: "uploadempexcel.ext.fragment.uploadExcelFragment",
              controller: this,
            }).then(
              function (oDialog) {
                this.base.getView().addDependent(oDialog);
                return oDialog;
              }.bind(this)
            );
          }

          this._pDialog.then(
            function (oDialog) {
              oDialog.open();
              oDialog.getContent()[0].removeAllItems();
              this._file = null;
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(false);
              }
            }.bind(this)
          );
        },

        onCloseDialog: function () {
          this._pDialog.then(function (oDialog) {
            oDialog.close();
          });
        },

        onAfterItemAdded: function (oEvent) {
          this._file = oEvent.getParameter("item").getFileObject();
          if (this._file) {
            MessageToast.show(
              "File '" + this._file.name + "' is ready for upload."
            );
          }
          this._pDialog.then(
            function (oDialog) {
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(!!this._file);
              }
            }.bind(this)
          );
        },

        onAfterItemRemoved: function (oEvent) {
          this._file = null;
          this._pDialog.then(function (oDialog) {
            var oUploadButton = oDialog.getBeginButton();
            if (oUploadButton) {
              oUploadButton.setEnabled(false);
            }
          });
          MessageToast.show("File removed.");
        },

        onUploadPress: function () {
          if (!this._file) {
            MessageToast.show("Please select a file first.");
            return;
          }

          var oReader = new FileReader();
          oReader.onload = function (e) {
            try {
              var data = e.target.result;
              var workbook = XLSX.read(data, { type: "buffer" });
              var sheetName = workbook.SheetNames[0];
              var excelData = XLSX.utils.sheet_to_row_object_array(
                workbook.Sheets[sheetName]
              );

              if (excelData.length &amp;gt; 0) {
                this._callOdataService(excelData);
              } else {
                MessageToast.show("No data found in the Excel file.");
              }
            } catch (error) {
              MessageToast.show("Error reading Excel file: " + error.message);
            }
          }.bind(this);

          oReader.readAsArrayBuffer(this._file);
        },

        _callOdataService: function (excelData) {
          try {
            // --- START: FINAL CORRECTED CODE ---
            // Get the main OData V4 model from the view.
            var oModel = this.base.getView().getModel();

            // Create a ListBinding directly for the entity set of the List Report.
            // The path MUST match the 'contextPath' in your manifest.json for the List Report target.
            var oListBinding = oModel.bindList("/ZC_UPLOAD_EMP");
            // --- END: FINAL CORRECTED CODE ---

            if (!oListBinding) {
              // This error is now highly unlikely to occur.
              throw new Error(
                "Could not create a ListBinding for the path /ZC_UPLOAD_EMP."
              );
            }

            excelData.forEach(function (rowData) {
              // IMPORTANT: Make sure your Excel column headers match exactly
              var oPayload = {
                //EmpID: rowData.EmployeeID.toString(), auto generated by Early Numbering in RAP Application
                Empname: rowData.EmployeeName.toString(),
                Contact: rowData.Contact.toString(),
              };
              // The create operation is performed on the ListBinding instance.
              oListBinding.create(oPayload);
            });

            MessageToast.show("Uploading " + excelData.length + " records...");

            // The model holds the batch queue, so we submit the changes on the model.
            oModel
              .submitBatch("$auto")
              .then(
                function () {
                  MessageToast.show("Data uploaded successfully.");
                  this.base.getExtensionAPI().refresh(); // Refresh the table to show new data
                  this.onCloseDialog();
                }.bind(this)
              )
              .catch(function (oError) {
                MessageToast.show("Error during upload: " + oError.message);
              });
          } catch (error) {
            MessageToast.show("Error processing data: " + error.message);
          }
        },
      }
    );
  }
);&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556074525"&gt;&lt;STRONG&gt;Dependencies&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Before you can run the application, you'll need to install the necessary dependencies. You can do this by running the following commands in your terminal.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i ui5-tooling-modules
npm i xlsx&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;SPAN&gt;We also need to update your&amp;nbsp;&lt;/SPAN&gt;ui5.yaml&lt;SPAN&gt;&amp;nbsp;file by adding the following custom tasks.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;builder:
customTasks:
- name: ui5-tooling-modules-task
afterTask: replaceVersion
- name: ui5-tooling-modules-middleware
afterMiddleware: compression&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359561020"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;By following these steps, you can add a fully functional Excel upload feature to your SAP Fiori application. This enhancement provides a more convenient way for users to handle bulk data uploads, ultimately improving the user experience. I have also prepared a demo Excel file with sample data that you can use for testing purposes.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420"/>
    <published>2025-07-24T09:18:19.224000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666</id>
    <title>Event-driven Architecture:  Creating Fullstate Events in SAP S/4HANA for SAP EMIS</title>
    <updated>2025-07-31T12:41:30.451000+02:00</updated>
    <author>
      <name>vanessadayanc</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126506</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In modern SAP S/4HANA landscapes, Event-driven architecture (EDA) enables decoupled, and scalable integrations across systems. SAP business events are often represented as &lt;STRONG&gt;n&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;otification events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; especially in context master data events, such as&amp;nbsp; business partner creation or changes. Notification events merely signal that something happened (e.g., "Business Partner Created"), where as &lt;STRONG&gt;f&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ull state events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; deliver the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;complete state of business object &lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;in real time.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Benefits of Full State Events:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Decoupled Consumers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: No need for consumers to call back to S/4HANA — all relevant data is included in the event.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Higher Resilience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Event consumers remain functional even if source systems are temporarily unavailable.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Faster Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Downstream applications and services can act immediatly, without additional round trips.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified Architectures&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Reduces dependency on S/4HANA APIs, lowering system coupling and load.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Full state events are a powerful enabler for real-time, loosely coupled digital processes — especially in complex, hybrid SAP environments. However, since f&lt;/SPAN&gt;&lt;SPAN&gt;ull state events are not available for many business objects in SAP S/4HANA feature scope, this blog series outlines some approaches to fullfill the requirements of a specific event-driven use case in context of business partner events:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (1/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) – Intro &amp;amp; SAP Standard Business Events&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (2/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - RAP Edition&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (3/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - Event-enablement Addon Edition &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1864150953"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Intro&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Event-driven architecture (EDA) is a software architecture paradigm in which system components interact through the production, detection, and consumption of events. Instead of relying on a synchronous request/response model, EDA uses asynchronous communication, enabling components to react to state changes or occurrences in real time. This approach increas flexibility, scalability, and responsiveness, particularly in complex, distributed systems. In the context of SAP S/4HANA this paradigm shift is reflected in concept of so called “business events”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An overview of released business events, for example&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;for the SAP S/4HANA Private Cloud, can be found in the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A class="" href="https://api.sap.com/products/SAPS4HANACloudPrivateEdition/events/events" target="_blank" rel="noreferrer noopener"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP Business Accelorator Hub.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example: If you want to be notified about the creation or modification of business partner master data, you can use the SAP business event for business partners.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752651776823.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287152i146D264070AF4D32/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752651776823.png" alt="vanessadayanc_0-1752651776823.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Many of SAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;standard&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;events&lt;/SPAN&gt; &lt;SPAN class=""&gt;are&lt;/SPAN&gt;&amp;nbsp;n&lt;SPAN class=""&gt;otification&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;events. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;No&lt;/SPAN&gt;&lt;SPAN class=""&gt;tification events i&lt;/SPAN&gt;&lt;SPAN class=""&gt;nform s&lt;/SPAN&gt;&lt;SPAN class=""&gt;ubscribers about the occurrence of an event, triggering actions or workflows without providing detailed context. They typically&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;SPAN class=""&gt;ontain&lt;/SPAN&gt;&lt;SPAN class=""&gt; minimal informations, like an event ID or type, sufficient for consumers to decide whether further data retrieval is necessary. &lt;/SPAN&gt;&lt;SPAN class=""&gt;In case of our business partner e&lt;/SPAN&gt;&lt;SPAN class=""&gt;xample,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;only includes&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the &lt;/SPAN&gt;&lt;SPAN class=""&gt;Busin&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;ssPartner&lt;/SPAN&gt;&lt;SPAN class=""&gt; ID. Additionally SAP standard events&lt;/SPAN&gt; &lt;SPAN class=""&gt;can’&lt;/SPAN&gt;&lt;SPAN class=""&gt;t&lt;/SPAN&gt;&lt;SPAN class=""&gt; be &lt;/SPAN&gt;&lt;SPAN class=""&gt;filter&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;SPAN class=""&gt; in SAP S/4HANA&lt;/SPAN&gt;&amp;nbsp;out of the box, meaning s&lt;SPAN class=""&gt;ubscribers receive notifications for all creation or change events of every business partner even if only a dedicated type or group is relevant for them.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Depending on the specific use case, it is advisable to evaluate whether notification events or full state events are more suitable. A comparison can be found below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="693px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Criterion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Notification Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Full State Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Announces that &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;something happened&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; minor &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;context&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Announces&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;something&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;happened&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;and&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ncludes&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;entire&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;current&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt;&lt;SPAN class=""&gt; an &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;business&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Content&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Minimal &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;info&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;event&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; type, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;affected&lt;/SPAN&gt; &lt;SPAN class=""&gt;entity&lt;/SPAN&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;u&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pdated)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Typical Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Created.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 (&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Updated.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Use Case&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;triggering&lt;/SPAN&gt; &lt;SPAN class=""&gt;workflows&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;alerts&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;initiates&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;or&lt;/SPAN&gt;&lt;SPAN class=""&gt; simple &lt;/SPAN&gt;&lt;SPAN class=""&gt;notifications&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;replication&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;synchronization&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;direct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;downstream&lt;/SPAN&gt; &lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data Dependency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;fetch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; additional &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Self-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;contained&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; — &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Coupling&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tightly coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – consumers&amp;nbsp;de&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pend&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; on &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; APIs&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Loosely coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – events are self-contained&lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Failure Tolerance&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Lower – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; down, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;retrieval&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;may&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; fail&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher –&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;act&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;availability&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Payload Size&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Small&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Larger&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Producer Complexity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Low – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;basic&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;metadata&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;required&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;must&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;serialize&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;include&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example Payload&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerCreated", "partnerId": "BP12345" }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerUpdated", "partner": { ...full partner data... } &lt;/SPAN&gt;&lt;SPAN&gt;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1753097963462.png" style="width: 621px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289310i2B29551E66A0EE15/image-dimensions/621x210?v=v2" width="621" height="210" role="button" title="vanessadayanc_0-1753097963462.png" alt="vanessadayanc_0-1753097963462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check: &lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/presenting-event-sources_e4194f4f-a986-418d-9c3b-ee71bb4ed101" target="_self" rel="noopener noreferrer"&gt;Presenting Event Sources&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1796720167"&gt;&lt;SPAN&gt;The Use Case&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The use case aims &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;enable&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; automatic validation of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; country-&lt;/SPAN&gt;&lt;SPAN class=""&gt;specific&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;for&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness partners&lt;/SPAN&gt; &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&lt;SPAN class=""&gt; code 'CH'. Whenever a b&lt;/SPAN&gt;&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number is provided, it&lt;/SPAN&gt; &lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;SPAN class=""&gt;automatically&lt;/SPAN&gt; &lt;SPAN class=""&gt;checked&lt;/SPAN&gt; &lt;SPAN class=""&gt;against&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT IDs service&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;published&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;SPAN class=""&gt;Each&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&amp;nbsp;maintains&amp;nbsp;&lt;SPAN class=""&gt;its&lt;/SPAN&gt;&lt;SPAN class=""&gt; own &lt;/SPAN&gt;&lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;administration, e.g. Switzerland offers a public SOAP API&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;validating&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; Swiss VAT ID. This&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;automated&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number check&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;ensures&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;complete&lt;/SPAN&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;management&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt; &lt;SPAN class=""&gt;master&lt;/SPAN&gt; &lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;SPAN class=""&gt;. In this specific case,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;use&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;SPAN class=""&gt; also important&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;audits conducted&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1600206662"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;Expected&amp;nbsp;features/functionalities&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;If a business partner is created or changed and has the country value 'CH' in any of its addresses, the VAT ID with the BPTaxNumberType = 'CH1' should be validated using the public SOAP API. If the VAT validation was successful, no further action is required. However if no VAT is maintained or the validation fails, both an email and a message to a webhook should be generated.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1403693157"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Environment&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The event is produced in the SAP S/4HANA Private Cloud. The requirement is implemented using the SAP Integration Suite and its components: SAP Event Mesh Integration Suite (EMIS) and Cloud Integration. A mail adapter and a webhook are used as consumers of the event. Alternatively, instead of SAP EMIS you can also use the SAP Advanced Event Mesh (AEM). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Schaubild.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293441i38896C0AEFEA7A73/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Schaubild.jpg" alt="Schaubild.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Simplified presentation of the use case with a full state event in a high level architecture.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set-Up-Connectivity:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To set up connectivity for SAP S/4HANA Private Cloud and SAP EMIS (or SAP AEM) you can refer to the following blog posts:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-s-4hana-direct-connectivity-with-event-mesh-in-integration-suite/ba-p/13752534" target="_blank"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP S/4HANA direct connectivity &lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt;ith Event Mesh in Integration Suite&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/rap-business-events-with-sap-integration-suite-advanced-event-mesh-and-sap/ba-p/13913393" target="_self"&gt;RAP Business Events with SAP Integration Suite, Advanced Event Mesh and SAP S/4HANA On Premise 2023&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1207179652"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Variante&lt;/SPAN&gt;&lt;SPAN class=""&gt; 1 &lt;/SPAN&gt;&lt;SPAN class=""&gt;– &lt;/SPAN&gt;&lt;SPAN class=""&gt;Using &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP Business Event&lt;/SPAN&gt;&lt;SPAN class=""&gt; for &lt;/SPAN&gt;&lt;SPAN class=""&gt;Business&lt;/SPAN&gt; &lt;SPAN class=""&gt;Partner&lt;/SPAN&gt;&lt;SPAN class=""&gt; Create/Change&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752652200462.png" style="width: 504px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287155iB46B37412A89FDAA/image-dimensions/504x87?v=v2" width="504" height="87" role="button" title="vanessadayanc_1-1752652200462.png" alt="vanessadayanc_1-1752652200462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the standard event, which is used first, a simple structure (notification event) is applied: the message contains only the ID field and the data in JSON format. A connection to EMIS/AEM is used, which requires an additional API call to retrieve the full data &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;before&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;further&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;take&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;place&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;This&lt;/SPAN&gt; &lt;SPAN class=""&gt;iFlo&lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt; becomes more complex due to the&lt;/SPAN&gt;&amp;nbsp;extra&amp;nbsp;&lt;SPAN class=""&gt;API Call.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the HTTPS sender adapter &lt;/SPAN&gt;&lt;SPAN class=""&gt;only &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;JSON-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;formatted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;body&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;sent&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"BusinessPartner":"1000540" 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Using the received BusinessPartnerNumber a query is made to SAP S/4HANA to retrieve additional data (such as name, address, country, BPTaxNumber, etc.).&amp;nbsp;&lt;/SPAN&gt;There are two options for the receiver adapter to obtain this data:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;You can use an HTTP receiver adapter to receive the payload in JSON format or&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;an OData receiver adapter to receive the payload in XML format.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN class=""&gt;In this interface there is no option to select the country directly. Therefore it was decided to use OData to retrieve the data in XML format and apply filtering during processing.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the OData receiver a&lt;/SPAN&gt;&lt;SPAN class=""&gt;dapter&lt;/SPAN&gt;&lt;SPAN class=""&gt; the following settings are required&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752664672097.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287266iC0978C19948709C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752664672097.png" alt="vanessadayanc_0-1752664672097.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752664721215.png" style="width: 449px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287267i327E8AAD2CAE12CD/image-dimensions/449x137?v=v2" width="449" height="137" role="button" title="vanessadayanc_1-1752664721215.png" alt="vanessadayanc_1-1752664721215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After &lt;/SPAN&gt;&lt;SPAN class=""&gt;receivíng&lt;/SPAN&gt;&lt;SPAN class=""&gt; the data, the next step is t&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; route &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;messages&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;where&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;country is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;'CH' (S&lt;/SPAN&gt;&lt;SPAN class=""&gt;witzerland&lt;/SPAN&gt;&lt;SPAN class=""&gt;). &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;A &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;message&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;mapping&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;then&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; performend &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; check &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxType&lt;/SPAN&gt;&lt;SPAN class=""&gt; = 'CH1'. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_4-1752652296718.png" style="width: 475px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287158iE20A8D9AF81111C7/image-dimensions/475x202?v=v2" width="475" height="202" role="button" title="vanessadayanc_4-1752652296718.png" alt="vanessadayanc_4-1752652296718.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We&lt;/SPAN&gt; &lt;SPAN class=""&gt;us&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;g&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roovy &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;cript&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt; &lt;SPAN class=""&gt;set&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roperties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, so &lt;/SPAN&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt; &lt;SPAN class=""&gt;we&lt;/SPAN&gt; &lt;SPAN class=""&gt;can&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;later&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; send &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;emails&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;containing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;important&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. The &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ayload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;properties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;are&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;extracted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;has&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;now&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;been&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;converted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; XML &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; JSON, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
  "A_BusinessPartner": { 
    "A_BusinessPartnerType": { 
      "BusinessPartner": "1000540", 
      "BusinessPartnerUUID": "6045bd9c-ea28-1fe0-8df5-064c8dfd4727", 
      "BusinessPartnerName": "Test RealCore Schweiz GmbH", 
      "to_BusinessPartnerAddress": { 
        "A_BusinessPartnerAddressType": [ 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "1", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29648" 
          }, 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "2", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29663" 
          }, 
        ] 
      }, 
      "to_BusinessPartnerTax": { 
        "A_BusinessPartnerTaxNumberType": { 
          "BusinessPartner": "1000540", 
          "BPTaxType": "CH1", 
          "BPTaxNumber": "CHE359123374", 
          "BPTaxLongNumber": "", 
          "AuthorizationGroup": "" 
        } 
      } 
    } 
  } 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; perform &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;action&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;you&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ne&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;set&lt;/SPAN&gt;&lt;SPAN class=""&gt; and send a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;h&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;eader&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;in &lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;all&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. In &lt;/SPAN&gt;&lt;SPAN class=""&gt;our&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;use&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;case&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;header&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;indicate&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;validation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;A href="https://www.uid-wse.admin.ch/V5.0/PublicServices.svc" target="_self" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; to webservice and actions)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The HTTP receiver adapter &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;used&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;make&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;API call to &lt;/SPAN&gt;&lt;SPAN class=""&gt;validate&lt;/SPAN&gt;&lt;SPAN class=""&gt; the &lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_6-1752652391710.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287161iD64CA3DF9A0186BF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_6-1752652391710.png" alt="vanessadayanc_6-1752652391710.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;he API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;call&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;returns&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a simple &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;response&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"&amp;gt; 
  &amp;lt;s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&amp;gt; 
    &amp;lt;ValidateVatNumberResponse xmlns="http://www.uid.admin.ch/xmlns/uid-wse"&amp;gt; 
      &amp;lt;ValidateVatNumberResult&amp;gt;true&amp;lt;/ValidateVatNumberResult&amp;gt; 
    &amp;lt;/ValidateVatNumberResponse&amp;gt; 
  &amp;lt;/s:Body&amp;gt; 
&amp;lt;/s:Envelope&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;All &lt;/SPAN&gt;&lt;SPAN class=""&gt;together&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;complete&amp;nbsp;&lt;SPAN class=""&gt;iFlow&lt;/SPAN&gt; &lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_7-1752652431621.png" style="width: 690px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287162i17A282525BFB8203/image-dimensions/690x231?v=v2" width="690" height="231" role="button" title="vanessadayanc_7-1752652431621.png" alt="vanessadayanc_7-1752652431621.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the teaser one benefit of full state events was &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;highlighted&lt;/SPAN&gt;&lt;/SPAN&gt;: &lt;EM&gt;&lt;STRONG&gt;Simplified Architectures&lt;/STRONG&gt;&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;: Reduceing dependency on S/4HANA APIs, and lowering system coupling and load.&lt;/EM&gt;&amp;nbsp;However, with the interface described above, the simplified architecture is not archieved. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;address&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;another&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;solution&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requir&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ed&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;STRONG&gt;RAP event &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A RAP event can be used to archieve simpler architecture, providing pre-selected and filtered events.&amp;nbsp;Therefore, the solution chosen is to implement a custom RAP event.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;You&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; find &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;more&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; in &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;SPAN class=""&gt;next&lt;/SPAN&gt;&amp;nbsp;blog of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt; &lt;SPAN class=""&gt;serie&lt;/SPAN&gt;&lt;SPAN class=""&gt;: Event-&lt;/SPAN&gt;&lt;SPAN class=""&gt;driven&lt;/SPAN&gt;&lt;SPAN class=""&gt; Architecture: &lt;/SPAN&gt;&lt;SPAN class=""&gt;Creating&lt;/SPAN&gt; &lt;SPAN class=""&gt;Fullstate&lt;/SPAN&gt;&lt;SPAN class=""&gt; Events in SAP S/4HANA &lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;SPAN class=""&gt; SAP Event Mesh on Integration Suite (EMIS) - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;RAP Edition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;coming&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;soon&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;…).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666"/>
    <published>2025-07-31T12:41:30.451000+02:00</published>
  </entry>
</feed>
