<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Development-blog-posts.xml</id>
  <title>SAP Community - ABAP Development</title>
  <updated>2025-09-25T08:00:03.671514+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Development/pd-p/833755570260738661924709785639136" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Development blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073</id>
    <title>ABAP AI Revolution Accelerates: The ABAP Developer Who Built Enterprise Apps in Minutes</title>
    <updated>2025-09-12T21:50:13.192000+02:00</updated>
    <author>
      <name>SimonaM</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/9367</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;The ABAP AI revolution just got a massive functionality upgrade and stays FREE OF CHARGE for another year&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Remember John, our seasoned ABAP developer who discovered the power of Joule for AI-assisted coding? His journey has taken an incredible turn. What started as relief from "quick questions" and real-time assistance has evolved into something he never imagined possible – building entire applications and transforming legacy systems through conversation in minutes.&amp;nbsp;&lt;/P&gt;&lt;P&gt;John's incredible journey is about to accelerate even further with game-changing news:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Joule for Developers remains FREE OF CHARGE for another year&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– the promotion has been extended with no commercial barriers, allowing every customer and partner to benefit from AI-driven development through material numbers 8019124 (customers) and 8019541 (TDD partners). This offer is now available not only for the BTP ABAP environments (Steampunk) and SAP Cloud ERP Public, but also to our SAP Cloud ERP Private customers using the latest 2025 release version. For a deep dive in more commercial details see&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568" target="_blank"&gt;ABAP AI - Chapter 2&lt;/A&gt;&amp;nbsp;blog written by my colleague&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/179726"&gt;@AlexanderRother&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;See John's ABAP AI complete evolution with 2505, 2508 and 2025 ABAP releases:&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The Game-Changer: ABAP Cloud Application Generation&lt;/LI&gt;&lt;LI&gt;Intelligent Business Logic with RAP Business Logic Prediction&lt;/LI&gt;&lt;LI&gt;Seamless Integration with OData Consumption&lt;/LI&gt;&lt;LI&gt;Enhanced Extensibility with Extensibility AI Assistant&amp;nbsp;for SAP Cloud ERP Public&lt;/LI&gt;&lt;LI&gt;The Migration Revolution: Custom Code Migration AI Assistant&amp;nbsp;for SAP Cloud ERP Private 2025&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1760086936"&gt;The Game-Changer: ABAP Cloud Application Generation&lt;/H2&gt;&lt;P&gt;John's latest project required a library application with multiple entities. Opening his package in ADT, he right-clicks and selects "Generate ABAP Repository Objects." The new&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData UI Service from Scratch Wizard with Joule Chat&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;appears.&lt;/P&gt;&lt;P&gt;"Create a library application with entities for branches, book stock, users and borrowing information. Generate the appropriate fields which fit the business case for the entities." John prompts.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_0-1757699149723.png" style="width: 831px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313657iF75C055449D3BA74/image-dimensions/831x489/is-moderation-mode/true?v=v2" width="831" height="489" role="button" title="SimonaM_0-1757699149723.png" alt="SimonaM_0-1757699149723.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Within seconds, Joule responds with a comprehensive proposal including all entities, fields, and relationships. One click on "Accept" and the wizard auto-populates all configuration fields. Minutes later, John has a complete, runnable RAP application with data model, behavior definitions, service bindings, and OData services ready for UI consumption.&lt;/P&gt;&lt;H2 id="toc-hId-1563573431"&gt;Intelligent Business Logic with RAP Business Logic Prediction&lt;/H2&gt;&lt;P&gt;But the magic doesn't stop at application generation. John's application needs sophisticated business logic – validations for booking dates, automatic stock calculations, and borrowing permission determinations.&lt;/P&gt;&lt;P&gt;Navigating to his behavior implementation class, John finds empty method stubs for his determinations and validations. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAP Predict Business Logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capability kicks in, understanding the entity structure, field relationships, and business context to generate complete validation logic within the method implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_2-1757699553027.png" style="width: 671px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313659i2E91AAAC0E2D0475/image-dimensions/671x255/is-moderation-mode/true?v=v2" width="671" height="255" role="button" title="SimonaM_2-1757699553027.png" alt="SimonaM_2-1757699553027.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;"It's not just generating code," John marvels. "It's understanding the business context and implementing proper RAP patterns automatically."&lt;/P&gt;&lt;H2 id="toc-hId-1367059926"&gt;Seamless Integration with OData Consumption&lt;/H2&gt;&lt;P&gt;When John needs to integrate with external booking services, he opens his service consumption model and starts the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Joule chat&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;/consume&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;slash command. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData consumption&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capability generates complete, ready-to-use ABAP code for consuming OData calls via the OData Client Proxy, tailored to his specific service model.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_5-1757699897856.png" style="width: 909px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313662iC303D01AD9C0D39A/image-dimensions/909x507/is-moderation-mode/true?v=v2" width="909" height="507" role="button" title="SimonaM_5-1757699897856.png" alt="SimonaM_5-1757699897856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;What used to take hours of documentation reading now happens in seconds with Joule providing example prompts and OData request generation.&lt;/P&gt;&lt;H2 id="toc-hId-1170546421"&gt;Enhanced Extensibility with Extensibility AI Assistant for SAP Cloud ERP Public&lt;/H2&gt;&lt;P&gt;As business requirements evolve, the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Extensibility AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;guides John through adding custom fields for regulatory compliance. It assists him in:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Creating Custom Fields&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for borrowing information&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finding Business Contexts&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for the right extension points&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enabling Usages&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;where custom fields can be exposed in UIs, APIs, and analytical views&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enabling Business Scenarios&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for data flow between business objects&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finding Value Help Views&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;for code list-based custom fields&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Finding BAdIs&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;based on natural language input&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_6-1757700405040.png" style="width: 841px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313665i86F9A9FF94CFD78E/image-dimensions/841x547/is-moderation-mode/true?v=v2" width="841" height="547" role="button" title="SimonaM_6-1757700405040.png" alt="SimonaM_6-1757700405040.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-974032916"&gt;The Migration Revolution: Custom Code Migration AI Assistant&amp;nbsp;&lt;STRONG&gt;for SAP Cloud ERP Private 2025&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;With the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP S/4HANA Cloud Private Edition 2025 release&lt;/STRONG&gt;, John faces his organization's biggest challenge: migrating 15 years of custom ECC code to SAP ERP Cloud Private 2025. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;will&amp;nbsp;&lt;/SPAN&gt;transforms this experience (on October 2025 planned release).&amp;nbsp; These use cases are currently not available on the older releases, however the use cases delivered on 2025 versions will be soon provided also as part of the&lt;STRONG&gt; Custom Code Migration Application&lt;/STRONG&gt; which is a standalone BTP ABAP environment (Steampunk) application &lt;STRONG&gt;which can connect freely to any ERP OnPrem or Cloud system to support RISE migrations.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Using the Explain Capability&lt;/STRONG&gt;: "Explain this legacy report," John types, selecting a 500-line ABAP program. The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Explain capability&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;provides detailed explanations of the ABAP program, breaking down complex concepts with support for ABAP classes, ABAP programs, and CDS artifacts.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explain ATC Findings Capability&lt;/STRONG&gt;&lt;SPAN&gt;: When running ATC checks with S/4HANA readiness variants, John uses the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Explain ATC Findings capability&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;on his S/4HANA readiness findings. This capability provides detailed explanations and step by step resolution proposal on ATC findings from check variants for SAP S/4HANA Readiness, specifically for:&amp;nbsp;&lt;/SPAN&gt;S/4HANA: Field Length Extensions,&amp;nbsp;S/4HANA: Search for Database Operations and&amp;nbsp;S/4HANA: Search for Usages and Simplified Objects. Each finding links to simplification items, which Joule explains in detail.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Documentation Migration Assistance&lt;/STRONG&gt;&lt;SPAN&gt;: Using the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;, John opens the Joule chat view,&amp;nbsp; type in /docs to start chatting about simplification items related to Custom Code Migration and ABAP SAP Help documentation.&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;To chat with the assistant about SAP S/4HANA simplification items and Custom Code Migration, just start asking topic-related questions.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;With&amp;nbsp;&lt;STRONG&gt;Code proposal for code adaptation&lt;/STRONG&gt;&amp;nbsp;coming in SAP S/4HANA 2025 FPS01, John will soon receive in addition of the step-by-step description of how to solve the ATC findings provided currently by ATC Explain functionality and a custom code adaptation automatically.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SimonaM_0-1757704750948.png" style="width: 906px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313685iB65B0C26D2DE969E/image-dimensions/906x562/is-moderation-mode/true?v=v2" width="906" height="562" role="button" title="SimonaM_0-1757704750948.png" alt="SimonaM_0-1757704750948.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777519411"&gt;The Complete ABAP Lifecycle Revolution&lt;/H2&gt;&lt;P&gt;John's journey now encompasses the entire ABAP development and transformation lifecycle:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Build new cloud applications&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData UI Service from Scratch Wizard&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Implement intelligent business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAP Predict Business Logic&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integrate seamlessly&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData consumption&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extend dynamically&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Extensibility AI Assistant in SAP Cloud ERP Public&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Transform existing solutions&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant for RISE&amp;nbsp;in SAP Cloud ERP Private 2025&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;John tells now to everyone: "Six months ago, I was struggling with syntax," John explains to his manager. "Today, I'm generating complete applications with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData UI Service from Scratch Wizard&lt;/STRONG&gt;, implementing business logic with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;RAP Predict Business Logic&lt;/STRONG&gt;, consuming services with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;OData consumption&lt;/STRONG&gt;, extending solutions with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Extensibility AI Assistant&lt;/STRONG&gt;, and leading our S/4HANA migration with the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;– all through natural language conversations."&lt;/P&gt;&lt;P&gt;The impact is transformative:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Application Development&lt;/STRONG&gt;: Dramatically faster with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP Cloud Application Generation&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Business Logic Implementation&lt;/STRONG&gt;: Massive reduction in development time&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Migration Analysis&lt;/STRONG&gt;: From weeks to hours using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Custom Code Migration AI Assistant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;OData Integration&lt;/STRONG&gt;: Significantly less code required for side-by-side extension scenarios&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-581005906"&gt;&amp;nbsp;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;The AI Revolution Accelerates – &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/abap-ai-chapter-2/ba-p/14210568" target="_self"&gt;Chapter 2&lt;/A&gt; Awaits!&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;John's incredible transformation is just the beginning as we enter the next phase of ABAP AI evolution. Even more exciting, SAP is pioneering a revolutionary&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;side-by-side ABAP AI service&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that will bring full AI capabilities to older SAP S/4HANA Cloud Private Edition releases, enabling immediate access to new AI innovations without waiting for upgrades or support packages across hybrid landscapes. Get ready for&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;TechEd 2025&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;where all the groundbreaking details of this hybrid AI service will be unveiled – the future of ABAP development is about to get even more transformative!&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Ready to evolve your ABAP development approach? Check out the &lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/generative-ai-in-abap-cloud" target="_self" rel="noopener noreferrer"&gt;hands-on documentation in SAP Help&lt;/A&gt; and join the growing community redefining what's possible in enterprise development.&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073"/>
    <published>2025-09-12T21:50:13.192000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-collaborate-on-an-entity-of-a-draft-enabled-rap-business-object/ba-p/14216444</id>
    <title>How to collaborate on an entity of a draft enabled RAP Business Object ?</title>
    <updated>2025-09-13T17:11:57.556000+02:00</updated>
    <author>
      <name>Andre_Fischer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/55</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1631007969"&gt;Introduction&lt;/H1&gt;&lt;P&gt;With the latest release 2508 of SAP BTP ABAP Environment a new feature called &lt;EM&gt;&lt;STRONG&gt;Collaborative Draft&lt;/STRONG&gt;&lt;/EM&gt; has been delivered.&amp;nbsp; This feature allows that several users can work on the same draft instance of an entity of a RAP Business Object.&amp;nbsp;&lt;/P&gt;&lt;P&gt;So similar like collaborating on a file in Microsoft Teams it is now possible that several users can perform changes on an entity of a RAP Business Object at the same time.&lt;/P&gt;&lt;P&gt;The cool thing is that every draft enabled RAP BO can be enhanced so that it also supports Collaborative Draft without the need to change the existing ABAP code of your behavior implementation class(es).&lt;/P&gt;&lt;P&gt;It is only required to change a few lines of code in the behavior definition, the behavior projection and you have to create a&amp;nbsp;&lt;SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;draft query view&lt;/STRONG&gt;&lt;/EM&gt;&amp;nbsp; which projects all fields of the draft table of&amp;nbsp;the "authorization&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;master&lt;/SPAN&gt;&lt;SPAN&gt;" entity which in most cases this is the root entity of your business object.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In case&amp;nbsp;your active business object view entity is protected by a DCL (which is strongly recommended for every productive RAP business object &lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;)&amp;nbsp; the draft query view must also be protected by a&amp;nbsp;data control language (DCL) that inherits from that existing DCL.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This because otherwise users would be able to see data in the draft they would not be allowed to see in the active data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please note:&amp;nbsp;&amp;nbsp;&lt;BR /&gt;As described in the section Outlook the implementation will become even easier in the future once table entities will be supported as a draft persistency instead of tables.&amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1434494464"&gt;&lt;SPAN&gt;Prerequisites&lt;/SPAN&gt;&lt;/H1&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;You need a draft enabled RAP Business object (which you can easily generate using the new "&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/odata-ui-service-from-scratch?locale=en-US&amp;amp;state=PRODUCTION&amp;amp;version=sap_cross_product_abap" target="_blank" rel="noopener noreferrer"&gt;from scratch generator&lt;/A&gt;").&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;&amp;nbsp;Your user and any other user that is supposed to use / test your RAP BO must have the new&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;business catalog&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP_CORE_BC_RAP_DRAFT_PC&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;assigned which is part of the business role template&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;SAP_BR_EMPLOYEE&lt;/STRONG&gt;.&amp;nbsp;&lt;BR /&gt;You have hence first to ask your administrator to either generate an additional role based on the role template&amp;nbsp;&lt;STRONG&gt;SAP_BR_EMPLOYEE&lt;/STRONG&gt;&amp;nbsp;or let the administrator assign the business catalogue to an existing role which is assigned to developers on your SAP BTP ABAP Environment system, so that you and your colleagues can start developing and testing this cool new feature.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H1 id="toc-hId-1237980959"&gt;&lt;SPAN&gt;Result&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In the following you see me (Andre Fischer) and the user ANZEIGER working on the same instance of a draft entity. As soon as a user leaves the focus of a field the changes will be updated automatically in the UI of the other user.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Demo_video.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313957iAAB37BFE5C5DA836/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Demo_video.gif" alt="Demo_video.gif" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can test the collaborative draft setup even in systems where you have just one user, like in our trial systems.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the first screen shot I am editing the field "Notes" (highlighted in red) and I can see that I am editing the field "OrderID" in the second tab (highlighted in green).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the second screen shot we see vice versa that I am there editing the field "OrderID" (highlighted in red) and that I am editing the field notes in the other session in the first tab.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="User_in_tab_1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313948iBD3D15B8542E81AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="User_in_tab_1.png" alt="User_in_tab_1.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="User_in_tab_2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313949iE2DB4E59DF935D61/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="User_in_tab_2.png" alt="User_in_tab_2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1041467454"&gt;&lt;SPAN&gt;Implementation Steps&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;A step by step guide which describe how to enhance an existing draft enabled RAP Business Object has been provided for your convenience to the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/adding-collaboration-capability-to-draft-enabled-managed-business-object?locale=en-US&amp;amp;version=LATEST" target="_blank" rel="noopener noreferrer"&gt;SAP Online Help&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;An example of a RAP Business Object has also been delievered as part of the well known Flight Reference Sample with the latest version in &lt;A href="https://github.com/SAP-samples/abap-platform-refscen-flight/blob/ABAP-platform-cloud/README.md" target="_blank" rel="noopener nofollow noreferrer"&gt;Github&lt;/A&gt;&amp;nbsp;which now contains an additional sub package &lt;STRONG&gt;&lt;FONT face="courier new,courier"&gt;/DMO/FLIGHT_COLLDRAFT.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-844953949"&gt;&lt;SPAN&gt;Implementation Walkthrough&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;I will add a few screen shots on how I have enabled my small RAP BO using the above mentioned documentation. As shown in the following screen shot only the behavior definition and the behavior projection have to be changed and two additional objects, the draft query view for the draft table of the root entity and the DCL for the draft query view have to be created.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="list_of_changed_and_new_repo_objects.png" style="width: 827px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313956iC892BB3203762888/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="list_of_changed_and_new_repo_objects.png" alt="list_of_changed_and_new_repo_objects.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777523163"&gt;&lt;SPAN&gt;1. Changes in the behavior Definition&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As described in the documentation the we have specify in the behavior definition that collaborative draft is used instead of exclusive draft and for the root entity we have to add the use of the draft query view for the draft table and we have to add the action &lt;STRONG&gt;Share&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="changes_in_bdef.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313952iFB7250D796996097/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="changes_in_bdef.png" alt="changes_in_bdef.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-581009658"&gt;2. Changes in the behavior projection&lt;/H2&gt;&lt;P&gt;In the behavior projection we simply have to add use statements so that the collaborative draft is used for our RAP business object and we have to enable the action &lt;STRONG&gt;Share&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="changes_in_bdef_projection.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313953i06CBFE56B1BF1659/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="changes_in_bdef_projection.png" alt="changes_in_bdef_projection.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-384496153"&gt;&lt;SPAN&gt;3. Create new object - Draft Query View&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="new_object_draft_query_view.png" style="width: 801px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313954i57652090D4856855/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new_object_draft_query_view.png" alt="new_object_draft_query_view.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-187982648"&gt;&lt;SPAN&gt;4. Create DCL for the Draft Query View&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="new_object_draft_query_view_DCL.png" style="width: 872px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313955i9FAEBC373CCDB3D2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new_object_draft_query_view_DCL.png" alt="new_object_draft_query_view_DCL.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--137613576"&gt;&lt;SPAN&gt;Outlook&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In future releases, when table entities will be supported to store the draft data instead of tables it will not be necessary anymore to create a draft query view for the draft table. This is because in this case the table entity itself can be directly secured by a DCL.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The setup shown in this blog post will be presented in upcoming events such as the sitBE Event in Mechelen, the DevToberFest and naturally TechEd and TechConnect events later this year.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-435613002"&gt;&lt;SPAN&gt;DevToberFest Sample&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;And you can find the code of the sample application which shows a Shopping Cart with a header and a child entity for items that I will use in this blog post soon in Github as well.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For the implementation I used the "from scratch generator" and as a template for the root entity I used the following structure&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Shopping Cart Header Data'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
define structure zdmo_cart_## {

  currency                : abap.cuky;
  notes                   : abap.char(100);
  order_id                : abap.numc(8);
  requested_delivery_date : fins_caldate;
  @Semantics.amount.currencyCode : 'zdmo_cart_##.currency'
  total_price             : abap.curr(11,2);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;while for the child entity this structure was used&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Shopping Cart Item Data'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
define structure zdmo_item_## {

  item_id         : abap.numc(8);
  ordered_item    : matnr40;
  quantity        : abap.numc(4);
  currency        : abap.cuky;
  @Semantics.amount.currencyCode : 'zdmo_item_##.currency'
  item_price      : abap.curr(11,2);
  @Semantics.amount.currencyCode : 'zdmo_item_##.currency'
  item_unit_price : abap.curr(11,2);

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-collaborate-on-an-entity-of-a-draft-enabled-rap-business-object/ba-p/14216444"/>
    <published>2025-09-13T17:11:57.556000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/download-and-upload-transport-requests-as-zip-file/ba-p/14215829</id>
    <title>Download and Upload Transport Requests as Zip File</title>
    <updated>2025-09-15T08:28:23.004000+02:00</updated>
    <author>
      <name>stefan-schwab</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1478374</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Based on articles such as&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blogs-by-members/how-to-download-upload-transport-request-from-to-a-server/ba-p/13271226" target="_blank"&gt;here&lt;/A&gt;&lt;SPAN&gt;,&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devops-and-system-administration-blogs/upload-a-sap-transport-request-made-easy/ba-p/13405416" target="_blank"&gt;here&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;or&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/upload-transport-files-from-sap/ba-p/13580710" target="_blank"&gt;here&lt;/A&gt;&lt;SPAN&gt;, I would like to provide you with a report with which you can export and import transport requests from/to an SAP system.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;Unfortunately, the transactions mentioned in the linked articles (CG3Y, CG3Z) are not available in every SAP system. The same applies to the FuMo ARCHIVFILE_CLIENT_TO_SERVER.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;For example, these transactions are not available on an SAP DevSystem NPL (see here:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://developers.sap.com/trials-downloads.html?search=abap" target="_blank" rel="noopener noreferrer"&gt;SAP NetWeaver AS ABAP Developer Edition 7.52 SP04&lt;/A&gt;&lt;SPAN&gt;).&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;The report is a stand-alone application and uses as few dependencies as possible.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;free to use! CopyPaste and enjoy!&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1889147403"&gt;Report Code:&amp;nbsp;&lt;/H3&gt;&lt;H5 id="toc-hId-1950799336"&gt;&lt;A href="https://github.com/sts-source/zrep_stsource_tr_up_download" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/sts-source/zrep_stsource_tr_up_download&lt;/A&gt;&lt;/H5&gt;&lt;H2 id="toc-hId-1367037674"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1170524169"&gt;How to use&lt;/H2&gt;&lt;H3 id="toc-hId-1103093383"&gt;Download/export Transport request as Zip File&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="howto_download.png" style="width: 855px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313582i5AD0B990C2AE2649/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="howto_download.png" alt="howto_download.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-906579878"&gt;Upload/export Transport request as Zip File&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="howto_upload.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313583iB4CBF7EC61D76B99/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="howto_upload.png" alt="howto_upload.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-710066373"&gt;ZipFile content&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="howto_zip_content.png" style="width: 794px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313584iB9BC51DFE4564147/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="howto_zip_content.png" alt="howto_zip_content.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/download-and-upload-transport-requests-as-zip-file/ba-p/14215829"/>
    <published>2025-09-15T08:28:23.004000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/odata-deep-insert-implementation-and-real-life-examples/ba-p/14147054</id>
    <title>OData Deep Insert: Implementation and Real-Life Examples</title>
    <updated>2025-09-15T08:37:09.070000+02:00</updated>
    <author>
      <name>SRSATAPATHY</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150881</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Understanding OData Deep Insert in SAP: A Practical Overview&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is OData Deep Insert?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;OData Deep Insert is used when we need to create a main record along with its related records in one go. For example, if we're creating a sales order and want to include multiple items in that order, instead of calling the service multiple times (once for the header and once for each item), we can just send everything together in one request. This helps reduce the number of API calls and keeps things more efficient.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Where Is It Used?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s say we’re placing a new sales order:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The &lt;STRONG&gt;header&lt;/STRONG&gt; contains information like the customer, order date, and total value.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;items&lt;/STRONG&gt; include details such as product, quantity, and price.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With Deep Insert, we can send both the header and item data together in one single payload. This is useful in real-time integrations or web applications where performance and fewer network calls matter.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to Implement It in SAP OData&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Define the Entity Model in SEGW&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We’ll need to create two entity types:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SalesOrder: Represents the header.&lt;/LI&gt;&lt;LI&gt;SalesOrderItem: Represents the line items.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Then create an association between them, showing that a sales order can have multiple items.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Redefine &lt;/STRONG&gt;&lt;STRONG&gt;CREATE_DEEP_ENTITY&lt;/STRONG&gt;&lt;STRONG&gt; in DPC_EXT Class&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This is where we will handle the payload in the backend.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD create_deep_entity.
  DATA: ls_header_input  TYPE zcl_zdeep_demo_mpc=&amp;gt;ts_salesorder,
        lt_item_input    TYPE STANDARD TABLE OF zcl_zdeep_demo_mpc=&amp;gt;ts_salesorderitem,
        ls_item_input    TYPE zcl_zdeep_demo_mpc=&amp;gt;ts_salesorderitem,
        ls_order_header  TYPE bapisdhd1,
        lt_items         TYPE STANDARD TABLE OF bapisditm,
        ls_item          TYPE bapisditm,
        lt_partners      TYPE STANDARD TABLE OF bapiparnr,
        ls_partner       TYPE bapiparnr,
        lt_return        TYPE STANDARD TABLE OF bapiret2,
        ls_return        TYPE bapiret2,
        lv_salesdoc      TYPE vbak-vbeln.

  " Extract header &amp;amp; item data from payload
  ls_header_input = is_deep_entity.
  lt_item_input   = is_deep_entity-toitems.

  " Map header to BAPI structure
  ls_order_header-doc_type   = 'OR'.    " Order type
  ls_order_header-sales_org  = '1000'.
  ls_order_header-distr_chan = '10'.
  ls_order_header-division   = '00'.

  " Add Sold-to Party (AG)
  CLEAR ls_partner.
  ls_partner-partn_role = 'AG'.
  ls_partner-partn_numb = ls_header_input-customer.
  APPEND ls_partner TO lt_partners.

  " Optionally, Ship-to Party (WE) same as Sold-to
  CLEAR ls_partner.
  ls_partner-partn_role = 'WE'.
  ls_partner-partn_numb = ls_header_input-customer.
  APPEND ls_partner TO lt_partners.

  " Map item data
  LOOP AT lt_item_input INTO ls_item_input.
    CLEAR ls_item.
    ls_item-itm_number = ls_item_input-itemid.
    ls_item-material   = ls_item_input-material.
    ls_item-target_qty = ls_item_input-quantity.
    APPEND ls_item TO lt_items.
  ENDLOOP.

  " Call BAPI
  CALL FUNCTION 'BAPI_SALESORDER_CREATEFROMDAT2'
    EXPORTING
      order_header_in  = ls_order_header
    IMPORTING
      salesdocument    = lv_salesdoc
    TABLES
      return           = lt_return
      order_items_in   = lt_items
      order_partners   = lt_partners.

  " Check for any errors (E/A/X)
  LOOP AT lt_return INTO ls_return WHERE type = 'E' OR 
                                         type = 'A' OR 
                                         type = 'X'.
    RAISE EXCEPTION TYPE /iwbep/cx_mgw_busi_exception
      EXPORTING
        textid  = /iwbep/cx_mgw_busi_exception=&amp;gt;business_error
        message = ls_return-message.
  ENDLOOP.

  " Commit work
  CALL FUNCTION 'BAPI_TRANSACTION_COMMIT'
    EXPORTING
      wait = abap_true.
  " Fill deep entity response
  er_deep_entity-salesorderid = lv_salesdoc.
  er_deep_entity-customer     = ls_header_input-customer.
  er_deep_entity-orderdate    = ls_header_input-orderdate.

ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Make sure both header and items are saved in the same transaction to maintain consistency.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Testing&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We can test this service using Postman or /IWFND/GW_CLIENT in SAP. A sample payload might look like:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;{
  "Customer": "1000001",
  "OrderDate": "2025-08-05T00:00:00",
  "ToItems":[{ "ItemID": "10",
               "Material": "MATERIAL001",
               "Quantity": 5 },
             { "ItemID": "20",
               "Material": "MATERIAL002",
               "Quantity": 3 } ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ss.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302769iE1EDD7255AA54B4C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ss.png" alt="ss.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Common Issues and Solutions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Items not saving?&lt;/STRONG&gt;&lt;BR /&gt;Check if the association and navigation are correctly defined.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;CREATE_DEEP_ENTITY not triggered?&lt;/STRONG&gt;&lt;BR /&gt;Make sure you've redefined the method and mapped the navigation properly in SEGW.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data inconsistency after commit?&lt;/STRONG&gt;&lt;BR /&gt;Handle errors correctly and roll back changes if needed.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Real-World Example&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A retail company has a frontend ordering app. When a customer checks out, the app sends the order header and all items in one payload using Deep Insert. The backend saves everything in one shot, ensuring performance and data consistency.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;In Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Deep Insert in OData is extremely helpful when dealing with parent-child relationships like orders and order items. It reduces complexity and improves performance by eliminating multiple round-trips to the server. When implemented correctly, it can streamline our data entry scenarios and backend integration.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/odata-deep-insert-implementation-and-real-life-examples/ba-p/14147054"/>
    <published>2025-09-15T08:37:09.070000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/dynamic-template-download-upload-report-on-year/ba-p/14198541</id>
    <title>Dynamic Template Download Upload Report on Year</title>
    <updated>2025-09-17T12:34:37.814000+02:00</updated>
    <author>
      <name>SanketGode45</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1859849</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Introduction (Requirement):&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need to develop a program to upload the Monthly Production plan. In input screen user will enter the year and execute we should get an excel template downloaded with columns Matnr , Plant and followed month of year. Upload function we will fill those details and upload will be saved to custom table and we need to give runtime save in alv(editable).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Example:&lt;/P&gt;&lt;TABLE width="966"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="64"&gt;Plant&lt;/TD&gt;&lt;TD width="92"&gt;Model name&lt;/TD&gt;&lt;TD width="92"&gt;25-Jan&lt;/TD&gt;&lt;TD width="78"&gt;25-Feb&lt;/TD&gt;&lt;TD width="64"&gt;25-Mar&lt;/TD&gt;&lt;TD width="64"&gt;25-Apr&lt;/TD&gt;&lt;TD width="64"&gt;25-May&lt;/TD&gt;&lt;TD width="64"&gt;25-Jun&lt;/TD&gt;&lt;TD width="64"&gt;25-Jul&lt;/TD&gt;&lt;TD width="64"&gt;25-Aug&lt;/TD&gt;&lt;TD width="64"&gt;25-Sep&lt;/TD&gt;&lt;TD width="64"&gt;25-Oct&lt;/TD&gt;&lt;TD width="64"&gt;25-Nov&lt;/TD&gt;&lt;TD width="64"&gt;25-Dec&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;A010&lt;/TD&gt;&lt;TD&gt;B2&lt;/TD&gt;&lt;TD&gt;1000&lt;/TD&gt;&lt;TD&gt;400&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;200&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;60&lt;/TD&gt;&lt;TD&gt;40&lt;/TD&gt;&lt;TD&gt;30&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;A010&lt;/TD&gt;&lt;TD&gt;B3&lt;/TD&gt;&lt;TD&gt;200&lt;/TD&gt;&lt;TD&gt;400&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;200&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;60&lt;/TD&gt;&lt;TD&gt;40&lt;/TD&gt;&lt;TD&gt;200&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;A010&lt;/TD&gt;&lt;TD&gt;B4&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;400&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;200&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;60&lt;/TD&gt;&lt;TD&gt;40&lt;/TD&gt;&lt;TD&gt;400&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;A010&lt;/TD&gt;&lt;TD&gt;B5&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;400&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;300&lt;/TD&gt;&lt;TD&gt;200&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;500&lt;/TD&gt;&lt;TD&gt;60&lt;/TD&gt;&lt;TD&gt;40&lt;/TD&gt;&lt;TD&gt;600&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;SPAN&gt;Main Portion (Explanation):&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this example we will get year as input then we generate this template, and we will upload the same but there is twist we will upload data column-wise, but we need to update it row-wise here,&lt;/P&gt;&lt;P&gt;A010, B2, 1000, 2025, 01(Jan) this will one record in same way we will update all 12 records with respect to first row as A010, B2, 30, 2025, 12(Dec) in custom table.&lt;/P&gt;&lt;P&gt;Difficult things to do in this task:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Generating the excel template on year (but we can do it easily).&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Handling uploaded data where in this requirement we need to update data row-wise in the system.&lt;/LI&gt;&lt;LI&gt;Selection Screen Design (Easy).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Simple Implementation:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT zztest_download_upload.

TABLES: sscrfields.
TYPE-POOLS: truxs.

TYPES: BEGIN OF tp_data,
         col1  TYPE string,
         col2  TYPE string,
         col3  TYPE string,
         col4  TYPE string,
         col5  TYPE string,
         col6  TYPE string,
         col7  TYPE string,
         col8  TYPE string,
         col9  TYPE string,
         col10 TYPE string,
         col11 TYPE string,
         col12 TYPE string,
         col13 TYPE string,
         col14 TYPE string,
       END OF tp_data.

TYPES: BEGIN OF tp_heading,
         heading(30),
       END OF tp_heading.

DATA: gt_data     TYPE STANDARD TABLE OF tp_data,
      gf_data     TYPE STANDARD TABLE OF tp_data,
      gv_data     TYPE STANDARD TABLE OF tp_data,
      gd_data     TYPE tp_data,
      gs_data     TYPE tp_data,
      gt_heading  TYPE STANDARD TABLE OF tp_heading,
      gs_heading  TYPE tp_heading,
      gt_fieldcat TYPE TABLE OF slis_fieldcat_alv,
      gs_fieldcat TYPE slis_fieldcat_alv,
      lv_date     TYPE string,
      lv_month    TYPE string,
      lv_year     TYPE string,
      lv_new_date TYPE string,
      lv_index    TYPE sy-tabix,
      lv_cell     TYPE string,
      index       TYPE I.
DATA : gs_prod_plan TYPE zzmm_m_prod_plan.

FIELD-SYMBOLS: &amp;lt;fs_cell&amp;gt;    TYPE string,
               &amp;lt;fs_input&amp;gt;   TYPE  tp_data,
               &amp;lt;fs_input_1&amp;gt; TYPE  tp_data,
               &amp;lt;fs_month&amp;gt;   TYPE tp_data,
               &amp;lt;fs_value&amp;gt;   TYPE any,
               &amp;lt;fs_value_1&amp;gt; TYPE any.
DATA : lv_field               TYPE char5,
       gv_model               TYPE mname,
       gv_plant               TYPE mcode,
       gv_filename            TYPE string,
       gv_path                TYPE string,
       gv_fullpath            TYPE string,
       gv_result              TYPE i,
       gv_template_downloaded TYPE abap_bool VALUE abap_false,
       it_raw                 TYPE truxs_t_text_data,
       gv_year                TYPE char4.

*INITIALIZATION.
*  gv_year = sy-datum+0(4).

SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-001.
  PARAMETERS: rb_down RADIOBUTTON GROUP grp DEFAULT 'X' USER-COMMAND rb-s1,
              rb_up   RADIOBUTTON GROUP grp.
SELECTION-SCREEN END OF BLOCK b1.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-002.
  PARAMETERS: s_file TYPE rlgrap-filename MODIF ID sc2.
SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-002.
  SELECT-OPTIONS: p_model  FOR gv_model MODIF ID sc1 .
  PARAMETERS: p_plant  TYPE mcode MODIF ID sc1 .
  PARAMETERS: p_year  TYPE t009b-bdatj OBLIGATORY.
SELECTION-SCREEN END OF BLOCK b3.

AT SELECTION-SCREEN OUTPUT.
  IF rb_down = 'X'.
    LOOP AT SCREEN.
      IF screen-group1 = 'SC2'.
        screen-invisible = 1.
        screen-input = 0.
        MODIFY SCREEN.
      ELSEIF screen-group1 = 'SC1'.
        screen-invisible = 0.
        screen-input = 1.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ELSE.
    LOOP AT SCREEN.
      IF screen-group1 = 'SC2'.
        screen-invisible = 0.
        screen-input = 1.
        MODIFY SCREEN.
      ELSEIF screen-group1 = 'SC1'.
        screen-invisible = 1.
        screen-input = 0.
        MODIFY SCREEN.
      ENDIF.
    ENDLOOP.
  ENDIF.


AT SELECTION-SCREEN ON VALUE-REQUEST FOR s_file.
  CALL FUNCTION 'F4_FILENAME'
    EXPORTING
      field_name   = 'S_FILE'
      program_name = sy-cprog
    IMPORTING
      file_name    = s_file.


START-OF-SELECTION.
  IF rb_down = 'X'.
*building the header table for excel download. 
    PERFORM build_headings.
*getting the saving location on local system.
    PERFORM get_save_location.
*save the file in local.
    PERFORM download.
  ELSEIF rb_up = 'X'.
*building the header table for excel download. 
    PERFORM build_headings.
*save the uploaded data.
    PERFORM upload_file.
  ENDIF.

*---------------------------------------------------------------------*
*       Form  GET_SAVE_LOCATION
*---------------------------------------------------------------------*
FORM get_save_location.
  CONCATENATE 'Template_' sy-datum sy-uzeit INTO gv_filename.

  CALL METHOD cl_gui_frontend_services=&amp;gt;file_save_dialog
    EXPORTING
      window_title      = 'Select the location'
      default_extension = 'xls'
      default_file_name = gv_filename
    CHANGING
      filename          = gv_filename
      path              = gv_path
      fullpath          = gv_fullpath
      user_action       = gv_result.
ENDFORM.

*---------------------------------------------------------------------*
*       Form  BUILD_HEADINGS
*---------------------------------------------------------------------*
FORM build_headings.
  gs_heading-heading = 'Plant'.
  APPEND gs_heading TO gt_heading.
  CLEAR gs_heading.

  gs_heading-heading = 'Model name'.
  APPEND gs_heading TO gt_heading.
  CLEAR gs_heading.

  DATA: lt_month_names LIKE TABLE OF t247.
  CALL FUNCTION 'MONTH_NAMES_GET'
    TABLES
      month_names = lt_month_names
    EXCEPTIONS
      OTHERS      = 1.

  LOOP AT lt_month_names INTO DATA(ls_month_name).
    CONCATENATE ls_month_name-ltx '' P_year INTO DATA(lv_header).
    gs_heading-heading = lv_header.
    APPEND gs_heading TO gt_heading.
    CLEAR gs_heading.
  ENDLOOP.
ENDFORM.

*---------------------------------------------------------------------*
*       Form  DOWNLOAD
*---------------------------------------------------------------------*
FORM download.
  LOOP AT p_model INTO DATA(s_model).
    gs_data-col1 = p_plant.
    gs_data-col2 = s_model-low.
    APPEND gs_data TO gt_data.
    CLEAR : gs_data.
  ENDLOOP.
  IF gv_fullpath IS NOT INITIAL.
    CALL FUNCTION 'GUI_DOWNLOAD'
      EXPORTING
        filename   = gv_fullpath
        filetype   = 'DAT'
      TABLES
        data_tab   = gt_data
        fieldnames = gt_heading
      EXCEPTIONS
        OTHERS     = 22.

    IF sy-subrc = 0.
      gv_template_downloaded = abap_true.

      CALL METHOD cl_gui_frontend_services=&amp;gt;execute
        EXPORTING
          document = gv_fullpath
        EXCEPTIONS
          OTHERS   = 10.
    ENDIF.
  ENDIF.
ENDFORM.

*---------------------------------------------------------------------*
*       Form  UPLOAD_FILE
*---------------------------------------------------------------------*
FORM upload_file.

  CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
    EXPORTING
      i_tab_raw_data       = it_raw
      i_filename           = s_file
    TABLES
      i_tab_converted_data = gt_data
    EXCEPTIONS
      conversion_failed    = 1
      OTHERS               = 2.

  IF sy-subrc = 0.
    LOOP AT gt_heading INTO DATA(lv_fieldname).
      CLEAR: lv_field,gs_fieldcat.
      lv_field = |COL{ sy-tabix }|.
      gs_fieldcat-fieldname = lv_field."lv_fieldname.
      gs_fieldcat-seltext_l = lv_fieldname.
      gs_fieldcat-col_pos = sy-tabix.
      gs_fieldcat-ctabname = 'gt_data'.
      gs_fieldcat-edit = 'X'.
      APPEND gs_fieldcat TO gt_fieldcat.
    ENDLOOP.

    gv_data = gt_data.
    DELETE gv_data  INDEX 1.
    gf_data = gv_data.


    LOOP AT gv_data ASSIGNING &amp;lt;fs_input&amp;gt;.
      READ TABLE gt_data INDEX 1 ASSIGNING &amp;lt;fs_month&amp;gt;.
      index = 1.
      DO 12 TIMES.
        ASSIGN COMPONENT sy-index + 2 OF STRUCTURE &amp;lt;fs_input&amp;gt; TO &amp;lt;fs_value&amp;gt;.
        IF sy-subrc = 0.
          CLEAR gs_prod_plan.
          gs_prod_plan-mcode   = &amp;lt;fs_input&amp;gt;-col1.
          gs_prod_plan-mname   = &amp;lt;fs_input&amp;gt;-col2.
          gs_prod_plan-zplan = &amp;lt;fs_value&amp;gt;.
          gs_prod_plan-zmonth = index.
          gs_prod_plan-zyear = p_year.
          MODIFY zzmm_m_prod_plan FROM gs_prod_plan.
        ENDIF.
        index = index + 1.
      ENDDO.
    ENDLOOP.

    CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
      EXPORTING
        i_callback_program       = sy-repid
        i_callback_pf_status_set = ' '
        i_callback_user_command  = 'SAVE'
        i_default                = 'X'
        i_save                   = 'S'
        it_fieldcat              = gt_fieldcat
      TABLES
        t_outtab                 = gv_data
      EXCEPTIONS
        program_error            = 1
        OTHERS                   = 2.


    MESSAGE 'File uploaded and data captured successfully.' TYPE 'S'.
  ELSE.
    MESSAGE 'Error uploading file.' TYPE 'E'.
  ENDIF.
ENDFORM.

FORM save USING rcomm TYPE sy-ucomm
      sel TYPE slis_selfield.

  CASE sy-ucomm.
    WHEN '&amp;amp;DATA_SAVE'.
      LOOP AT gv_data ASSIGNING &amp;lt;fs_input&amp;gt;.
        READ TABLE gt_data INDEX 1 ASSIGNING &amp;lt;fs_month&amp;gt;.
        READ TABLE gf_data INTO gd_data INDEX sy-tabix.
        IF &amp;lt;fs_input&amp;gt; NE gd_data.
          DO 12 TIMES.
            ASSIGN COMPONENT sy-index + 2 OF STRUCTURE &amp;lt;fs_input&amp;gt; TO &amp;lt;fs_value&amp;gt;.
            ASSIGN COMPONENT sy-index + 2 OF STRUCTURE &amp;lt;fs_month&amp;gt; TO &amp;lt;fs_value_1&amp;gt;.
            DATA: lv_date_string TYPE string,
                  lv_month_num   TYPE char2,
                  lv_day         TYPE char2,
                  lv_month_name  TYPE string.

            lv_date_string = &amp;lt;fs_value_1&amp;gt;.

            SPLIT lv_date_string AT '/' INTO lv_month_num lv_day lv_year.

            IF sy-subrc = 0.
              CLEAR gs_prod_plan.
              gs_prod_plan-mcode   = &amp;lt;fs_input&amp;gt;-col1.
              gs_prod_plan-mname   = &amp;lt;fs_input&amp;gt;-col2.
              gs_prod_plan-zplan = &amp;lt;fs_value&amp;gt;.
              gs_prod_plan-zmonth = lv_month_num.
              gs_prod_plan-zyear = lv_year.
              MODIFY zzmm_m_prod_plan FROM gs_prod_plan.
            ENDIF.
          ENDDO.
        ENDIF.
      ENDLOOP.
  ENDCASE.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Conclusion:&lt;/P&gt;&lt;P&gt;We have implemented a report that generates a dynamic Excel template and allows uploading of the same. The user provides a year as input, and we retrieve the corresponding month names using the function module MONTH_NAMES_GET. Based on this, we dynamically create an internal table with the required primary keys and month columns for that year. This internal table is then downloaded as an Excel file. For the upload functionality, the user fills in the Excel file and uploads it. We use field catalog and field symbols to process the uploaded data, and we have also added functionality to modify the data at runtime within the ALV grid display.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/dynamic-template-download-upload-report-on-year/ba-p/14198541"/>
    <published>2025-09-17T12:34:37.814000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-salv-table-with-checkbox-column-select-deselect-all-and-email-export/ba-p/14218665</id>
    <title>ABAP SALV Table with Checkbox Column, Select/Deselect All, and Email Export Functionality</title>
    <updated>2025-09-17T12:39:28.116000+02:00</updated>
    <author>
      <name>manijangiti</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2174619</uri>
    </author>
    <content>&lt;P&gt;Hi all,&lt;/P&gt;&lt;P&gt;I have developed an ABAP report that displays employee data in a SALV table with a checkbox column. Users can select/deselect rows using custom toolbar buttons, and send the selected data as an Excel attachment via email.&lt;/P&gt;&lt;P&gt;The SALV table includes clickable checkboxes that toggle selection, and I handle user commands for selecting all, deselecting all, and sending email.&lt;/P&gt;&lt;P&gt;Please review the code below. Any suggestions on improving performance, best practices, or adding additional features would be appreciated!&lt;/P&gt;&lt;P&gt;Thank you!&lt;BR /&gt;&lt;STRONG&gt;Tcode&lt;/STRONG&gt; :SE41&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="manijangiti_1-1758024872694.png" style="width: 535px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315140i61B5FA0E2B3ED74A/image-dimensions/535x396/is-moderation-mode/true?v=v2" width="535" height="396" role="button" title="manijangiti_1-1758024872694.png" alt="manijangiti_1-1758024872694.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create a PF Status&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="manijangiti_2-1758024932106.png" style="width: 649px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315141iFD679A6FD20F693E/image-dimensions/649x330/is-moderation-mode/true?v=v2" width="649" height="330" role="button" title="manijangiti_2-1758024932106.png" alt="manijangiti_2-1758024932106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT zsalv_factory_disply_checkbox.

" Type definition for internal table representing employee data with a checkbox
TYPES: BEGIN OF t_zemployee,
         checkbox       TYPE c LENGTH 1,                " Checkbox for selection
         employee_id    TYPE zemploye-employee_id,     " Employee ID
         company_code   TYPE zemploye-company_code,    " Company code
         bankid         TYPE zemploye-bankid,          " Bank ID
         insurance_id   TYPE zemploye-insurance_id,    " Insurance ID
         empname        TYPE zemploye-empname,         " Employee Name
         remarks        TYPE zemploye-remarks,         " Remarks
         date_of_join   TYPE zemploye-date_of_join,     " Date of Joining
         date_of_resign TYPE zemploye-date_of_resign,  " Date of Resignation
         salary         TYPE zemploye-salary,           " Salary
         currency       TYPE zemploye-currency,         " Currency
         commission     TYPE zemploye-commission,       " Commission
         currency23     TYPE zemploye-currency23,       " Additional Currency
       END OF t_zemployee.

" Global internal tables to hold employee data and selected records
DATA: gt_data  TYPE STANDARD TABLE OF t_zemployee,
      seleted  TYPE STANDARD TABLE OF t_zemployee,
      gv_repid TYPE sy-repid VALUE sy-repid.

CLASS lcl_app DEFINITION.
  PUBLIC SECTION.
    CLASS-METHODS:
      get_data,                        " Fetch data from DB into internal table
      display_data,                    " Display SALV table with checkbox
      refresh_display,                 " Refresh the SALV table display
      send_email,                     " Send selected data as email attachment
      convert_itab_to_xls_xstring     " Convert internal table to XLS XSTRING
        RETURNING VALUE(rv_xstring) TYPE xstring,
      on_link_click FOR EVENT link_click OF cl_salv_events_table
        IMPORTING row column,         " Event handler for checkbox click
      handle_user_command FOR EVENT added_function OF cl_salv_events_table
        IMPORTING e_salv_function.    " Handler for custom toolbar functions

  PRIVATE SECTION.
    CLASS-DATA: gr_table TYPE REF TO cl_salv_table.   " Reference to SALV table object
ENDCLASS.

CLASS lcl_app IMPLEMENTATION.

  " Method to fetch employee data from database and initialize checkbox field
  METHOD get_data.
    IF gt_data IS INITIAL.
      SELECT * FROM zemploye INTO CORRESPONDING FIELDS OF TABLE gt_data.
      LOOP AT gt_data ASSIGNING FIELD-SYMBOL(&amp;lt;fs&amp;gt;).
        &amp;lt;fs&amp;gt;-checkbox = ''.  " Initialize checkbox as empty (unchecked)
      ENDLOOP.
    ENDIF.
  ENDMETHOD.

  " Method to display the SALV table with checkbox and event handlers
  METHOD display_data.
    lcl_app=&amp;gt;get_data( ).  " Load data

    IF gr_table IS INITIAL.
      TRY.
          cl_salv_table=&amp;gt;factory(
            IMPORTING r_salv_table = gr_table
            CHANGING  t_table      = gt_data ).
        CATCH cx_salv_msg INTO DATA(lx).
          MESSAGE lx-&amp;gt;get_text( ) TYPE 'E'.
          RETURN.
      ENDTRY.

      " Enable all standard functions in SALV toolbar
      gr_table-&amp;gt;get_functions( )-&amp;gt;set_all( ).

      TRY.
          " Set custom GUI status with custom functions (PF-STATUS 'ZTOOLBAR')
          gr_table-&amp;gt;set_screen_status(
            EXPORTING
              report        = gv_repid
              pfstatus      = 'ZTOOLBAR'
              set_functions = gr_table-&amp;gt;c_functions_all ).
        CATCH cx_salv_msg.
      ENDTRY.

      " Set checkbox column as hotspot to allow click events
      DATA lr_columns TYPE REF TO cl_salv_columns_table.
      DATA lr_column  TYPE REF TO cl_salv_column_table.
      lr_columns = gr_table-&amp;gt;get_columns( ).
      lr_columns-&amp;gt;set_optimize( abap_true ).

      TRY.
          lr_column ?= lr_columns-&amp;gt;get_column( 'CHECKBOX' ).
          lr_column-&amp;gt;set_cell_type( if_salv_c_cell_type=&amp;gt;checkbox_hotspot ).
          lr_column-&amp;gt;set_short_text( 'Select' ).
        CATCH cx_salv_not_found.
      ENDTRY.

      " Register event handlers for checkbox clicks and user commands
      DATA lo_events TYPE REF TO cl_salv_events_table.
      lo_events = gr_table-&amp;gt;get_event( ).
      SET HANDLER lcl_app=&amp;gt;on_link_click FOR lo_events.
      SET HANDLER lcl_app=&amp;gt;handle_user_command FOR lo_events.

    ELSE.
      " Refresh SALV table if already created
      gr_table-&amp;gt;refresh( ).
    ENDIF.

    gr_table-&amp;gt;display( ).
  ENDMETHOD.

  " Refresh display wrapper method
  METHOD refresh_display.
    lcl_app=&amp;gt;display_data( ).
  ENDMETHOD.

  " Event handler to toggle checkbox on clicking checkbox cell
  METHOD on_link_click.
    FIELD-SYMBOLS: &amp;lt;fs&amp;gt; TYPE t_zemployee.
    READ TABLE gt_data ASSIGNING &amp;lt;fs&amp;gt; INDEX row.
    IF sy-subrc = 0.
      IF &amp;lt;fs&amp;gt;-checkbox = 'X'.
        &amp;lt;fs&amp;gt;-checkbox = ''.
      ELSE.
        &amp;lt;fs&amp;gt;-checkbox = 'X'.
      ENDIF.
    ENDIF.
    lcl_app=&amp;gt;refresh_display( ).
  ENDMETHOD.

  " Convert selected internal table data to XLS XSTRING format for attachment
  METHOD convert_itab_to_xls_xstring.
    TRY.
        cl_salv_table=&amp;gt;factory(
          EXPORTING
            list_display = abap_false
          IMPORTING
            r_salv_table = DATA(lo_salv_table)
          CHANGING
            t_table      = seleted ).
      CATCH cx_salv_msg INTO DATA(lx_mail).
        MESSAGE lx_mail TYPE 'E'.
    ENDTRY.

    rv_xstring = lo_salv_table-&amp;gt;to_xml( xml_type = if_salv_bs_xml=&amp;gt;c_type_xlsx ).
  ENDMETHOD.

  " Send email with the selected employee data as an Excel attachment
  METHOD send_email.
    TRY.
        " Create persistent email object
        DATA(lo_mail) = cl_bcs=&amp;gt;create_persistent( ).

        " Sender email address
        DATA(lo_sender_address) = cl_cam_address_bcs=&amp;gt;create_internet_address(
                                    i_address_string = 'maniyadav2585@gmail.com' ).
        lo_mail-&amp;gt;set_sender( lo_sender_address ).

        " Recipient email address
        DATA(recipient_address) = cl_cam_address_bcs=&amp;gt;create_internet_address(
                                    i_address_string = 'maniyadav2585@gmail.com' ).
        lo_mail-&amp;gt;add_recipient( i_recipient = recipient_address ).

        " Create email document with subject and body text
        DATA(lo_document) = cl_document_bcs=&amp;gt;create_document(
                              i_type    = 'htm'
                              i_subject = `Excel Attachment`
                              i_text    = VALUE #( ( CONV #( 'Excel Attachment' ) ) )
                              i_sender  = lo_sender_address ).

        " Convert selected data to XLS format for attachment
        DATA(lv_excel_data) = convert_itab_to_xls_xstring( ).

        " Add the Excel attachment
        lo_document-&amp;gt;add_attachment(
          i_attachment_type     = 'XLS'
          i_attachment_subject  = 'Employee Information'
          i_attachment_size     = xstrlen( lv_excel_data )
          i_att_content_hex     = cl_bcs_convert=&amp;gt;xstring_to_solix( lv_excel_data ) ).

        lo_mail-&amp;gt;set_document( lo_document ).
        lo_mail-&amp;gt;set_send_immediately( abap_true ).

        " Send the email
        DATA(lv_send_success) = lo_mail-&amp;gt;send( ).
        COMMIT WORK.

      CATCH cx_send_req_bcs cx_address_bcs cx_document_bcs INTO DATA(lx_mail).
        MESSAGE lx_mail TYPE 'E'.
    ENDTRY.
  ENDMETHOD.

  " Handle custom toolbar commands (Select All, Deselect All, Send, Back)
  METHOD handle_user_command.
    FIELD-SYMBOLS: &amp;lt;fs&amp;gt; TYPE t_zemployee.
    DATA lv_count TYPE i VALUE 0.

    CASE e_salv_function.
      WHEN 'SELALL'.
        LOOP AT gt_data ASSIGNING &amp;lt;fs&amp;gt;.
          &amp;lt;fs&amp;gt;-checkbox = 'X'.
        ENDLOOP.
        lcl_app=&amp;gt;refresh_display( ).

      WHEN 'DESALL'.
        LOOP AT gt_data ASSIGNING &amp;lt;fs&amp;gt;.
          &amp;lt;fs&amp;gt;-checkbox = ''.
        ENDLOOP.
        lcl_app=&amp;gt;refresh_display( ).

      WHEN 'SEND'.
        " Collect selected records for sending
        LOOP AT gt_data ASSIGNING &amp;lt;fs&amp;gt; WHERE checkbox = 'X'.
          lv_count = lv_count + 1.
          APPEND &amp;lt;fs&amp;gt; TO seleted.
        ENDLOOP.

        IF lv_count = 0.
          MESSAGE 'Please select at least one record before sending.' TYPE 'E'.
          RETURN.
        ENDIF.

        lcl_app=&amp;gt;convert_itab_to_xls_xstring( ).
        lcl_app=&amp;gt;send_email( ).

        IF sy-subrc = 0.
          MESSAGE |{ lv_count } row(s) selected and sent.| TYPE 'S'.
        ENDIF.

      WHEN 'BACK'.
        LEAVE TO SCREEN 0.
    ENDCASE.
  ENDMETHOD.

ENDCLASS.

" Program starts here
START-OF-SELECTION.
  SET PF-STATUS 'ZTOOLBAR'.  " Set custom toolbar with your custom functions
  lcl_app=&amp;gt;display_data( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;OutPut:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="manijangiti_0-1758024807559.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315139i59D0CAB15A7A4418/image-dimensions/712x251/is-moderation-mode/true?v=v2" width="712" height="251" role="button" title="manijangiti_0-1758024807559.png" alt="manijangiti_0-1758024807559.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Connectivity/pd-p/266264953119842772207986043063520" class="lia-product-mention" data-product="313-1"&gt;ABAP Connectivity&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-salv-table-with-checkbox-column-select-deselect-all-and-email-export/ba-p/14218665"/>
    <published>2025-09-17T12:39:28.116000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970</id>
    <title>SAP S/4HANA Table Maintenance Reimagined: Choosing the Right Framework</title>
    <updated>2025-09-17T12:42:25.292000+02:00</updated>
    <author>
      <name>Saurabh_Gupta1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/53365</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In this blog, we’ll explore a practical use case implemented in&amp;nbsp;&lt;STRONG&gt;S/4HANA 2021 On-Premise&lt;/STRONG&gt;, where we opted for&amp;nbsp;&lt;STRONG&gt;Custom Business Objects (CBO)&lt;/STRONG&gt;&amp;nbsp;to enable table maintenance via Fiori with minimal development effort and also &lt;STRONG&gt;evaluate new frameworks&lt;/STRONG&gt; to achieve this in &lt;STRONG&gt;latest S4/HANA release 2023&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-2018320602"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Approach for choosing Custom Business Object&lt;/STRONG&gt; (Decision Matrix)&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBO is based on BOPF framework which was widely used by SAP before the era of RAP (RESTful ABAP Programming), while this is still relevant, SAP has now moved to RAP based development and a new concept called custom business configuration, both will be covered later in context of data maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1950889816"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Why we didn’t choose RAP or Custom business configuration for this use case.&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration ( Business configuration maintenance object ) – This is available from S4 On-Prem 2022 onwards and the Fiori app for CUBCO is available after 2023 onwards.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;RESTful ABAP Programming – SAP has provided RAP Generator which can generate all the artefacts based on a table right from views, behavior definition , service binding , generation to Fiori app however this is also not available in On-Prem 2021, the other workaround could be to build all these artefacts manually and generate Fiori app which was going to take more development time, hence it was avoided.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Since we cannot go with above 2 options, the only 2 options left are SM30 and Custom Business object, as we want to move towards Fiori first approach, Custom business object was chosen as the Go to approach. Let us deep dive in this with the help of use- case and practical tips&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1625293592"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;What is Custom Business Object –&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With the Custom Business Objects Fiori app, you can create and manage custom business objects. A custom business object is a hierarchical set of database tables with an API for creation, retrieval, update and deletion of data.&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In The Fiori App ‘Custom Business Object’, a new BO has been defined and maintained as below.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User can choose what options do they want as part of framework, e,g, Change document, system admin date (last change at, created at etc are added by default).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User interface is disabled in this since it is only possible to enable if Embedded gateway is used which is not the case here.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Saurabh_Gupta1_2-1758034866616.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315300i224DEF863855A856/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_2-1758034866616.png" alt="Saurabh_Gupta1_2-1758034866616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You are free to choose what kind of operations, out of CUD, should be supported in the BO out of box.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_3-1758035070410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315301i4300283172BACF00/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_3-1758035070410.png" alt="Saurabh_Gupta1_3-1758035070410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is where all the fields are defined for BO.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_4-1758035118964.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315302i70F7DFC5438ED8AD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_4-1758035118964.png" alt="Saurabh_Gupta1_4-1758035118964.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1557862806"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Final Output&lt;/STRONG&gt; –&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Until this point, no coding has been done except for few changes in CDS Metadata for Fiori UI related cosmetic changes, all the operation are handled by framework out of box.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;An additional button ‘Mass upload’ was added in metadata extension which is using intent-based navigation to navigate to another GUI application for mass upload of the entries.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758038827500.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315330iD5E9892D58E6AD7F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758038827500.png" alt="Saurabh_Gupta1_0-1758038827500.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1361349301"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Few Tips&lt;/STRONG&gt; -&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom Table (Type Application) is auto generated in this case with Key field as UUID.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Data entries maintained in one system cannot be transported to other system and must be maintained in target system, which was also the requirement in our use case.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once business object is published and moved to production, Deletion is not allowed.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId-1035753077"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How does the future look like for the same activity (Table Maintenance)-&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As discussed above, there are 2 other ways to achieve this with minimal development efforts in new S4 HANA releases.&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-839239572"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Custom Business Configuration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is &lt;STRONG&gt;recommended &lt;/STRONG&gt;approach going forward where a business configuration maintenance object serves as primary entry point for maintenance.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;We have the option to use the Generate ABAP Repository Objects Wizard for Business configuration maintenance object to generate all required development objects based on a customizing table&lt;/LI&gt;&lt;LI&gt;Based on the Business configuration maintenance object, the custom business configurations app renders a&amp;nbsp;Fiori element list report for the entities exposed by the service binding to maintain the configuration entries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_11-1758035471221.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315310i8644DD844BCAACC2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_11-1758035471221.png" alt="Saurabh_Gupta1_11-1758035471221.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_12-1758035554875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315311iD7963B6C1BF5D5BD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_12-1758035554875.png" alt="Saurabh_Gupta1_12-1758035554875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Image courtesy - SAP&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In short, Custom business configuration (Fiori app) is an umbrella under which all maintenance objects will be listed and serves as one stop shop while maintenance objects are the actual ABAP artefact which contains all the definition related to Object maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_13-1758035620891.png" style="width: 605px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315321i9C4BDEE4DBF5C59B/image-dimensions/605x198/is-moderation-mode/true?v=v2" width="605" height="198" role="button" title="Saurabh_Gupta1_13-1758035620891.png" alt="Saurabh_Gupta1_13-1758035620891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.20 PM.png" style="width: 607px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315314iA3E7AFAAA2468BBB/image-dimensions/607x199/is-moderation-mode/true?v=v2" width="607" height="199" role="button" title="Screenshot 2025-09-16 at 8.44.20 PM.png" alt="Screenshot 2025-09-16 at 8.44.20 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Different options like SM30 are available by default such Add copy action out of box.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Add Data Consistency Check for fields with fixed domain values or foreign key screen check.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.37 PM.png" style="width: 633px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315317i5B28948485F2436C/image-dimensions/633x333/is-moderation-mode/true?v=v2" width="633" height="333" role="button" title="Screenshot 2025-09-16 at 8.44.37 PM.png" alt="Screenshot 2025-09-16 at 8.44.37 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All of the below objects are created by default including CDS view, service definition, service binding, business object maintenance , transport definition, implementation classes etc.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.59 PM.png" style="width: 638px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315318i40537C78E8356547/image-dimensions/638x478/is-moderation-mode/true?v=v2" width="638" height="478" role="button" title="Screenshot 2025-09-16 at 8.44.59 PM.png" alt="Screenshot 2025-09-16 at 8.44.59 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.18 PM.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315320i990558C08B796ACB/image-dimensions/635x487/is-moderation-mode/true?v=v2" width="635" height="487" role="button" title="Screenshot 2025-09-16 at 8.45.18 PM.png" alt="Screenshot 2025-09-16 at 8.45.18 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-771808786"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Final Output -&amp;nbsp;&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Until this point, no coding has been done; all these features are provided out of the box by the framework.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;The custom business configuration app shows all the maintenance objects for which the user is authorized. &lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758178463971.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316288i7C80DFB3C71A9925/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758178463971.png" alt="Saurabh_Gupta1_0-1758178463971.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the relevant maintenance object is selected, the Edit button would be enabled to allow creation, deletion, updation, etc. activities.&lt;/P&gt;&lt;H5 id="toc-hId-575295281"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_1-1758178556614.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316290i00ACBDF62350D6C3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_1-1758178556614.png" alt="Saurabh_Gupta1_1-1758178556614.png" /&gt;&lt;/span&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Few Practical Tips&lt;/FONT&gt; –&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All tables must have a client key field and delivery class C&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Have a timestamp field with data element&amp;nbsp;ABP_LASTCHANGE_TSTMPL&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;To enable the "No Transport" option in the ADT wizard, implement SAP Note&amp;nbsp; &lt;A href="https://me.sap.com/notes/3579012" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/3579012&lt;/A&gt;.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With few tweaks, it is possible to maintain data directly in production system instead of transporting. More details in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-a-rap-bo-to-change-the-content-of-a-customizing-table-in-the/ba-p/13723087" target="_blank"&gt;blog&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As of version SAP S/4HANA release 2022, customers can use the generator for Business Configuration objects. The Custom Business Configurations SAP Fiori app is not yet available; app has been made available in release 2023.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-249699057"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;2. RAP Generator&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Second approach to achieve this is using same generation wizard from context menu of table.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.34 PM.png" style="width: 623px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315319i590CF530AE26F47A/image-dimensions/623x592/is-moderation-mode/true?v=v2" width="623" height="592" role="button" title="Screenshot 2025-09-16 at 8.45.34 PM.png" alt="Screenshot 2025-09-16 at 8.45.34 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId--737934550"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than plain RAP generator?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is a framework which is also built on RAP artefacts, but it has other framework related functionalities (e.g change log for auditing) in comparison to plain RAP application.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Fiori for CBC can be accessed through generic custom business configuration app serving as single source of entry whereas RAP application should be exposed as standalone app.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas RAP generator can be built around any customizing and application tables both.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBC provides in built functionality to capture entries into transport request, but RAP generator requires explicit changes to incorporate transport feature.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId--934448055"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than custom business object?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is built on RAP framework (SAP recommended) whereas custom business objects is built on BOPF framework.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration has transport feature for data entries whereas custom business object does not any way to transport entries from one system to other system.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is bottom-up approach where custom tables are defined first, and rest of the artifacts are generated around that whereas custom business object works on top-down approach where business object is created first then custom table is generated around BO.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration supports only OData V4 where CBO supports OData V2.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas custom business object is built around application tables.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once CBO has moved to production, it cannot be deleted.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In both the case, Metadata can be enhanced for any Fiori related UI changes, also additional validation, actions are supported in both.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Additional reading-&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970"/>
    <published>2025-09-17T12:42:25.292000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/installing-github-copilot-in-eclipse-adt/ba-p/14217834</id>
    <title>Installing GitHub Copilot in Eclipse ADT</title>
    <updated>2025-09-18T11:47:54.505000+02:00</updated>
    <author>
      <name>kunalchanda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/890293</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760124292"&gt;Introduction&lt;/H2&gt;&lt;P&gt;GitHub Copilot is an AI coding assistant platform that helps us while writing code by suggesting lines or blocks of code &amp;amp; troubleshooting them. This guide walks you through installing &lt;STRONG&gt;GitHub Copilot&lt;/STRONG&gt; in &lt;STRONG&gt;Eclipse ADT&lt;/STRONG&gt; (ABAP Development Tools).&lt;/P&gt;&lt;H2 id="toc-hId-1563610787"&gt;Pre-requisites&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Eclipse IDE with ADT installed&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Existing Github account&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1367097282"&gt;Steps&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Open Eclipse IDE and navigate to: Help -&amp;nbsp;Eclipse Marketplace&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="kunalchanda_2-1757948909739.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314731iC87C2A938B413472/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_2-1757948909739.png" alt="kunalchanda_2-1757948909739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search &amp;amp; Select GitHub Copilot then install it by following the installation prompts.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_4-1757949016026.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314737i074C5A96CEC35BC6/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_4-1757949016026.png" alt="kunalchanda_4-1757949016026.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Restart Eclipse&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;After restarting, Copilot is available in the menu bar. Sign in using Github account.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_5-1757949108733.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314738iEAFB2F9E7AA599AA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_5-1757949108733.png" alt="kunalchanda_5-1757949108733.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1299666496"&gt;Using GitHub Copilot in Eclipse&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;U&gt;Code Suggestions:&lt;/U&gt;&amp;nbsp;Start typing your code. Copilot will automatically suggest completions. Press &lt;STRONG&gt;TAB&lt;/STRONG&gt; to accept a suggestion.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_7-1757949344991.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314743i7FF173DF5E78A8D2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_7-1757949344991.png" alt="kunalchanda_7-1757949344991.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;Chat option:&lt;/U&gt;&amp;nbsp;Use the Open Chat option to communicate with Copilot. We can also select the context/object for which we're asking questions or resolving errors.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kunalchanda_8-1757949373300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314745i34B0760A856F71DC/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="kunalchanda_8-1757949373300.png" alt="kunalchanda_8-1757949373300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-974070272"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;After using it for few cases of RAP, I feel it needs to be evolve further for ABAP specific developments.&amp;nbsp; On the other hand the VSCode copilot extension works better for CAP developments in case of code suggestions &amp;amp; troubleshooting.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/installing-github-copilot-in-eclipse-adt/ba-p/14217834"/>
    <published>2025-09-18T11:47:54.505000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-s-4-hana-architecture-functional-flow/ba-p/14210760</id>
    <title>SAP S/4 HANA Architecture Functional Flow</title>
    <updated>2025-09-18T11:52:37.027000+02:00</updated>
    <author>
      <name>neeraj_putluru</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2142221</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;SAP S/4 HANA: -&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP S/4 HANA is the latest version of SAP. The full form of SAP S/4 HANA is SAP Business Suite 4th generation ERP High Performance Analytic Appliance.&lt;BR /&gt;There are 3 layers that are present in SAP namely:-&amp;nbsp;&amp;nbsp;&lt;BR /&gt;1. Presentation layer&lt;BR /&gt;2. Application Layer&lt;BR /&gt;3. Database Layer&lt;/P&gt;&lt;P&gt;In the 1990’s a new architecture was introduced, and it was R/3. In R/3 architecture we can observe the three layers namely presentation layer, application layer and database layer.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;The speed of R/3 architecture is fast when compared with R/2 architecture. The algorithms in R/2 architecture were in the database layer whereas the algorithms in R/3 architecture are in the application layer. The database layer can be anyone like oracle, Microsoft etc...&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="neeraj_putluru_1-1757323146536.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310999i2E0E2C137496BAC9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="neeraj_putluru_1-1757323146536.png" alt="neeraj_putluru_1-1757323146536.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;FIG : - R/3 Architecture&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Presentation Layer:-&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;The presentation layer is a screen where user can interact with the system. For example we can take Monitor of a computer or laptop screen. So for SAP it is&lt;STRONG&gt; GUI --&amp;gt; Graphical User Interface.&amp;nbsp;&lt;/STRONG&gt;Here user will interact with SAP data base with the help of SAP GUI which is a software that will be installed on laptops.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Application Layer:-&lt;BR /&gt;&lt;/STRONG&gt;This is the main advantage of SAP R/3 architecture. Here it acts as like middle wear between presentation layer and database layer. Here it will process the user input , applies business rules and execute the programs in this layer.&lt;BR /&gt;Here in this layer it will collects all the details or actions that are being carried out by the user and interacts with the database system and represents them on the output screen.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Dispatcher:-&amp;nbsp;&lt;/STRONG&gt;Dispatcher will collects the request and will decide which type of request it is whether it is dialog, update, background, spool , enqueue. After getting to know about the spool request type it will also check for the work processor which is idle.&lt;BR /&gt;&lt;STRONG&gt;Work Processor:-&amp;nbsp;&lt;/STRONG&gt;After getting the request into work processor it will co-ordinate with the database management and will perform the operation or action on the database and will also gets a acknowledgement .&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Database layer:-&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;After getting the request or command form the database management the database layer will process it and will update the request.&lt;/P&gt;&lt;P&gt;The below diagram is the in-depth process of how the database layer will function.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="neeraj_putluru_0-1757321618599.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310974i243797FB2FADB038/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="neeraj_putluru_0-1757321618599.jpeg" alt="neeraj_putluru_0-1757321618599.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;DATABASE LAYER FUNCTION FLOW: -&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The request from the work processor will first enter into the session manager and the &lt;STRONG&gt;session manager&lt;/STRONG&gt; will makes user to automatic behaviour and transaction isolation level.&lt;/LI&gt;&lt;LI&gt;Once the request got established the request moves to the &lt;STRONG&gt;planning engine&lt;/STRONG&gt; which analyses SQL.&lt;/LI&gt;&lt;LI&gt;And here &lt;STRONG&gt;SQL engine&lt;/STRONG&gt; will runs the machine.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;transaction manager&lt;/STRONG&gt; assigns a transaction ID and ensures that every operation follows the principle, transactions to the SQL engine and data engine.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;data engine&lt;/STRONG&gt; takes over the user request and performs it on the database.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Index Server&lt;/STRONG&gt; → Executes SQL/MDX queries, does actual processing.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Name Server&lt;/STRONG&gt; → Knows &lt;EM&gt;where&lt;/EM&gt; the data lives.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Pre-processor&lt;/STRONG&gt; → Text &amp;amp; search.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;XS Engine&lt;/STRONG&gt; → Application services.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Persistence Layer&lt;/STRONG&gt; → Save points + logs.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="neeraj_putluru_2-1757326728977.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311054iCF30853F3422ADFF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="neeraj_putluru_2-1757326728977.jpeg" alt="neeraj_putluru_2-1757326728977.jpeg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In 2015 the SAP S/4 HANA has been introduced and here the database is HANA, and this is SAP’S own database. The Hana database can also be called as in-memory database.&lt;/P&gt;&lt;P&gt;S/4 HANA is also called &lt;STRONG&gt;4th generation SAP&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Versions of SAP S/4 HANA are released in the following years: -&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;VERSION&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;YY MM&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1st Version of SAP S/4 HANA &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1511(2015 11th)&lt;/P&gt;&lt;P&gt;2nd Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1610 (2016 10th)&lt;/P&gt;&lt;P&gt;3rd Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1709(2019 9th)&lt;/P&gt;&lt;P&gt;4th Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1809 (2018 9th)&lt;/P&gt;&lt;P&gt;5th Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1909(2019 9th)&lt;/P&gt;&lt;P&gt;6th Version of SAP S/4 HANA &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2020 (YYYY)&lt;/P&gt;&lt;P&gt;7th Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2021(YYYY)&lt;/P&gt;&lt;P&gt;8th Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2022(YYYY)&lt;/P&gt;&lt;P&gt;9th Version of SAP S/4 HANA&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2023(YYYY)&lt;/P&gt;&lt;P&gt;SAP S/4 Hana works with Fiori NetWeaver GUI.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Advantages of sap s/4hana: &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The performance and speed have been improved due to databases.&lt;/LI&gt;&lt;LI&gt;Embedded analytics have been embedded in sap s/4hana&lt;/LI&gt;&lt;LI&gt;In ECC we can only perform operations, and some extract basic reports can be extracted in ECC, but not more complex reports can be extracted, when it comes to s/4 Hana we can easily extract the complex reports easily.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;OLTP – Online Transaction processing (ECC) &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;OLAP – Online Analytical Processing (BI/BW)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;OLTP + OLAP + Planning – SAP S/4 HANA &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Planning -&amp;gt; &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;MRP line&lt;/LI&gt;&lt;LI&gt;PD MRP&lt;/LI&gt;&lt;LI&gt;ATP (advanced available to promise)&lt;/LI&gt;&lt;LI&gt;PDS (production planning and detailed scheduling)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP HANA: - &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/STRONG&gt;This Hana is a database which is also called an in-memory database, and this provides or is capable of analytics, data models and library for code writing.&lt;/P&gt;&lt;P&gt;The HANA database can be accessed through &lt;STRONG&gt;HANA STUDIO.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP HANA: - &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/STRONG&gt;This Hana is a database which is also called an in-memory database, and this provides or is capable of analytics, data models and library for code writing.&lt;/P&gt;&lt;P&gt;The HANA database can be accessed through &lt;STRONG&gt;HANA STUDIO.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP BW powered by HANA (BW for HANA): - &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SIDE CAR: -&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; For suppose you have an ECC system which is working on any database and now you want to connect it with the HANA database then there will be a middle wear SLT which is a software brings the data from table to HANA database.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HANA live is a tool which can be used to view the analytics of data.&lt;/LI&gt;&lt;LI&gt;Lumera system is a toll which is being used to represent or visualize the analytical data.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="neeraj_putluru_0-1758019300808.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315105iF8AA8AA777E01A6F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="neeraj_putluru_0-1758019300808.png" alt="neeraj_putluru_0-1758019300808.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Benefits of a side car: -&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Main cars are not being distributed.&lt;/LI&gt;&lt;LI&gt;It can be implemented in 1.5 to 2 months.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Drawback: -&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Data footprint increases:&lt;/STRONG&gt; - the data is being replicated from the production system to the side car so more space will be occupied.&lt;/LI&gt;&lt;LI&gt;The landscape is very complex.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;SAP BW POWERED BY HANA: -&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp;It was introduced in 2012 and here the analytical can be obtained. The complex reports can be fetched within seconds only.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP BUSINESS SUIT POWERED BY SAP HANA: -&lt;BR /&gt;&lt;/STRONG&gt;It was introduced in 2013 in this enhancement pack (EHP 7 or and here the system is ECC, and the database is HANA.)&lt;/P&gt;&lt;P&gt;OLAP + OLTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP SIMPLE FINANCE POWERED BY SAP HANA: -&lt;BR /&gt;&lt;/STRONG&gt;ECC with HANA Database but the difference between this and SOH is only the fico module as they have simplified the data module for FICO and introduced Fiori apps separately for fico and &lt;STRONG&gt;ACDOCA&lt;/STRONG&gt; table which is single source of truth table.&lt;/P&gt;&lt;P&gt;Apart from fico modules the other modules will work as they were functioning in the same manner as ECC on any other database.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;S/4 HANA: -&lt;BR /&gt;&lt;/STRONG&gt;This was introduced in &lt;STRONG&gt;2015 &lt;/STRONG&gt;they have simplified the data model for all the modules. They have introduced MATDOC, ACDOCA table and innovations + Fiori apps for all the modules&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;APP_L&lt;/STRONG&gt; -&amp;gt; Technical application for ECC.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;S/4 core&lt;/STRONG&gt; -&amp;gt; Technical application for HANA.&lt;/P&gt;&lt;P&gt;So the above blog is a synopsis of how the 3 tier architecture will co ordinate with each other and performs the actions.&lt;/P&gt;&lt;P&gt;Feel free to comment.&lt;/P&gt;&lt;P&gt;Regards,&lt;BR /&gt;Neeraj.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/sap-s-4-hana-architecture-functional-flow/ba-p/14210760"/>
    <published>2025-09-18T11:52:37.027000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/reducing-weeks-to-minutes-ai-abap-and-low-code-in-sap-development/ba-p/14221758</id>
    <title>Reducing Weeks to Minutes: AI, ABAP, and Low-Code in SAP Development</title>
    <updated>2025-09-18T20:55:01.913000+02:00</updated>
    <author>
      <name>rogeriobalassiano</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/718349</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760868172"&gt;Introduction&lt;/H2&gt;
&lt;P&gt;The creation of SAP applications has always required a combination of technical and functional knowledge. In many scenarios, ABAP developers need to master SAPUI5 to deliver modern, SAP Fiori-style applications that meet end-user expectations.&lt;/P&gt;
&lt;P&gt;However, the integration of &lt;STRONG&gt;Artificial Intelligence (AI) tools&lt;/STRONG&gt; with &lt;STRONG&gt;low-code platforms&lt;/STRONG&gt; opens a new path: enabling ABAP developers to build complete applications without needing SAPUI5 knowledge, while still allowing continuous maintenance in a simple and secure way.&lt;/P&gt;
&lt;P&gt;Tachyonix has developed an innovative approach that transforms business specifications into technical specifications through specialized AI tools, significantly accelerating the development process and drastically reducing delivery time.&lt;/P&gt;
&lt;H2 id="toc-hId-1564354667"&gt;Architecture&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Slide1.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316673iA6727980214CE4C6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Slide1.PNG" alt="Slide1.PNG" /&gt;&lt;/span&gt;&lt;/H2&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;Flow with LLM&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Slide2.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316674iC5429CCDF4A117EA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Slide2.PNG" alt="Slide2.PNG" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Flow with Tachyonix Builder&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-1367841162"&gt;How ABAP Integration with AI Works&lt;/H2&gt;
&lt;P&gt;The flow begins with a specification provided by the user. For example: &lt;EM&gt;“I need a report that shows pending sales orders.”&lt;/EM&gt;&lt;/P&gt;
&lt;P&gt;From this request, different AI tools are triggered (these are some examples):&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;ABAP Package Tool&lt;/STRONG&gt;: identifies the correct technical package where the application will be created.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Data Source Tool&lt;/STRONG&gt;: selects the best source of data, indicating one or more relevant CDS Views.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Field Retrieval Tool&lt;/STRONG&gt;: suggests the most appropriate fields to compose the application’s main list, based on the user’s description.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Floorplan Tool&lt;/STRONG&gt;: recommends the visual structure of the application (for example, &lt;EM&gt;Master-Detail&lt;/EM&gt;).&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;After these agents work together, a consolidated &lt;STRONG&gt;JSON&lt;/STRONG&gt; containing the full technical specification is generated. This artifact is then used by the application creation agent:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Application Creation Tool&lt;/STRONG&gt;: automatically builds the application according to the selected floorplan and the technical specifications provided by the other tools.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;This flow allows complete applications to be created without manual programming, while still adhering to SAP best practices and design standards.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-1171327657"&gt;Integration with the Tachyonix Low-Code Platform&lt;/H2&gt;
&lt;P&gt;The main differentiator lies in the integration of this automation with the Tachyonix low-code platform. The generated application is not delivered as rigid, hard-to-maintain source code. On the contrary — it remains fully editable and extensible, allowing ABAP developers to continue evolving the solution without dealing directly with SAPUI5 or JavaScript.&lt;/P&gt;
&lt;P&gt;This approach differs from what is sometimes called &lt;EM&gt;vibe-coding&lt;/EM&gt;, in which an LLM directly generates source code. In the Tachyonix model, the LLM does not generate code. Instead, it produces structured technical specifications, which are then processed by a creation agent. This design ensures:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Security and predictability&lt;/STRONG&gt; of the result.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Ease of maintenance and customization.&lt;/STRONG&gt;&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;No risks&lt;/STRONG&gt; associated with unreadable or unsupportable generated code.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;H2 id="toc-hId-974814152"&gt;Practical Advantages&lt;/H2&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Speed&lt;/STRONG&gt;: a process that could take weeks is reduced to minutes.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Productivity&lt;/STRONG&gt;: developers spend only a few hours making final adjustments and personalizations.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Accessibility&lt;/STRONG&gt;: even without SAPUI5 expertise, ABAP developers can deliver modern applications.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Flexibility&lt;/STRONG&gt;: applications evolve continuously within the low-code platform, without technical barriers.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-778300647"&gt;Knowledge Graph as AI Support&lt;/H2&gt;
&lt;P&gt;At the time of writing this article, SAP Joule does not yet provide a public API for external consumption. For this reason, Tachyonix developed its own &lt;STRONG&gt;Knowledge Graph&lt;/STRONG&gt;, which brings together SAP business scenarios.&lt;/P&gt;
&lt;P&gt;This repository is used as a &lt;STRONG&gt;Retrieval-Augmented Generation (RAG)&lt;/STRONG&gt; mechanism, ensuring that the LLM always has access to reliable, contextual information throughout the process.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-581787142"&gt;Conclusion&lt;/H2&gt;
&lt;P&gt;The combination of &lt;STRONG&gt;ABAP tools&lt;/STRONG&gt; with a &lt;STRONG&gt;low-code platform&lt;/STRONG&gt; represents a significant step forward for the ABAP community. This approach does not replace the developer — it empowers them. With it, value can be delivered faster, more securely, and more sustainably, even without SAPUI5 knowledge.&lt;/P&gt;
&lt;P&gt;In a market where &lt;STRONG&gt;time is a competitive advantage&lt;/STRONG&gt;, solutions like Tachyonix reduce development cycles from weeks to minutes and establish a new paradigm for SAP application development.&lt;BR /&gt;&lt;BR /&gt;As we are discussing AI, I leveraged HeyGen, an AI-based video creator, to demonstrate the process&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/reducing-weeks-to-minutes-ai-abap-and-low-code-in-sap-development/ba-p/14221758"/>
    <published>2025-09-18T20:55:01.913000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/improvements-on-adt-method-wizzard/ba-p/14223910</id>
    <title>Improvements on ADT method wizzard</title>
    <updated>2025-09-22T11:12:47.949000+02:00</updated>
    <author>
      <name>Timo_John1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/15452</uri>
    </author>
    <content>&lt;P&gt;Hello ABAPfreaks out there,&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;I raised a ticket at SAP regarding creation of methods using the #ADT wizzard.&lt;BR /&gt;During the creation of methods using the Quick Assistant ( Strg + 1 ) parameter types are not correctly computed.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Timo_John1_0-1758531906909.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317792iF4B7AE470DFB65E2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Timo_John1_0-1758531906909.png" alt="Timo_John1_0-1758531906909.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;Example:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Data: t100 type t100.

"Success Case: 
t100-msgnr = any_class_instance-&amp;gt;get_msgnr( ).     "Methode get_msgnr created using STRG+1 wizzard. Type detected correct

"Error cases - value Statement:
data: t100 type t100.

t100 = value #( msgnr = integra_file_dao-&amp;gt;get_msgnr( ) ).         "type of returning is not determined -&amp;gt; ANY.  
t100 = value t100( msgnr = integra_file_dao-&amp;gt;get_msgnr( ) ).  "type of returning is also not determined -&amp;gt; ANY. 


"Success Case 2

t100 = value t100( msgnr = conv msgnr( integra_file_dao-&amp;gt;get_msgnr( ) ) ). " Type is identified correctly&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;3655122 - ADT improve type determination for quickfix to create method from call&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://me.sap.com/notes/0003655122" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/0003655122&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;Note is available for:&lt;/P&gt;&lt;DIV class=""&gt;&lt;H3 id="__section13-title" id="toc-hId-1890012263"&gt;&lt;SPAN&gt;Support Package&lt;/SPAN&gt;&lt;/H3&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;SPAN class=""&gt;Software Component Version&lt;/SPAN&gt;&lt;SPAN class=""&gt;Support Package&lt;/SPAN&gt;&amp;nbsp; &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;SAP_BASIS 754&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;A class="" href="https://me.sap.com/supportpackage/SAPK-75413INSAPBASIS" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAPK-75413INSAPBASIS&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;SAP_BASIS 755&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;A class="" href="https://me.sap.com/supportpackage/SAPK-75511INSAPBASIS" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAPK-75511INSAPBASIS&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;SAP_BASIS 756&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;A class="" href="https://me.sap.com/supportpackage/SAPK-75609INSAPBASIS" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAPK-75609INSAPBASIS&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;SAP_BASIS 757&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;A class="" href="https://me.sap.com/supportpackage/SAPK-75707INSAPBASIS" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAPK-75707INSAPBASIS&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;SAP_BASIS 758&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;A class="" href="https://me.sap.com/supportpackage/SAPK-75805INSAPBASIS" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAPK-75805INSAPBASIS&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;SPAN class=""&gt;SAP_BASIS 816&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD&gt;&lt;A class="" href="https://me.sap.com/supportpackage/SAPK-81601INSAPBASIS" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAPK-81601INSAPBASIS&lt;/SPAN&gt;&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Enjoy better coding experience!&amp;nbsp;&lt;BR /&gt;Best Timo&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/improvements-on-adt-method-wizzard/ba-p/14223910"/>
    <published>2025-09-22T11:12:47.949000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-mathematical-instead-of-artificial-intelligence-in-the-abap/ba-p/14215884</id>
    <title>Using mathematical instead of artificial intelligence in the ABAP environments for 2508</title>
    <updated>2025-09-22T13:26:15.367000+02:00</updated>
    <author>
      <name>kilian_kilger</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/204709</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760064865"&gt;1. Introduction&lt;/H2&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Do all intelligent ABAP apps use AI?&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Although using AI for all intelligent functionality is tempting, other techniques exist to gain insight. One of these is &lt;STRONG&gt;statistics&lt;/STRONG&gt;. In contrast to AI, statistics is a mathematically sound science that will not produce fake answers and hallucinations but merely hard facts. These hard facts can then be used for operational decisions. I will call this &lt;STRONG&gt;mathematical&lt;/STRONG&gt;, not &lt;STRONG&gt;artificial&lt;/STRONG&gt; &lt;STRONG&gt;intelligence&lt;/STRONG&gt;.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Of course, there are new technologies like&amp;nbsp;&lt;A title="BDC" href="https://www.sap.com/products/data-cloud.html?campaigncode=crm-yj25-btp-3097595&amp;amp;source=ppc-de-googleads--22741048455-185762215630-bdci_bdci-x-x-aam&amp;amp;gclsrc=aw.ds&amp;amp;gad_source=1&amp;amp;gad_campaignid=22741048455&amp;amp;gbraid=0AAAABAUXsVQrP-kl-sYE9i_KlxUkBhq9N&amp;amp;gclid=Cj0KCQjw58PGBhCkARIsADbDilzUwPog1hQ-p2jsuqAWCR5iN_Dx3xqF-gQU0J-1UivT94Vy7BAx0VQaAoITEALw_wcB" target="_blank" rel="noopener noreferrer"&gt;BDC&lt;/A&gt;&amp;nbsp; for data warehousing. However, having statistics available in your transactional ABAP applications might also be of great value, as many transactional decisions might be driven by a dataset already available in ABAP.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;However, some foundations must be built to integrate statistical functions directly into the ABAP language. This blog post outlines these foundations and covers the integration of some new mathematical functions into the ABAP language in the ABAP environments for 2508.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;For a concrete example of applying these functions, see the following blog post, where these are used to compute random numbers or quantiles using a C1 released cloud API.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The now integrated functions are also part of an agenda to bring more built-in Python or Microsoft Excel functions into ABAP. A business analyst is expected to prepare a functionality in an Excel workspace or a Python script. Later on, this can be integrated into an ABAP app.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;This is currently planned to be available on-premise and in the private cloud with the upcoming major SAP S/4HANA release in 2025. Please note that this plan is subject to change by SAP without prior notice.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1563551360"&gt;2. Let's talk about data types&lt;/H2&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;When discussing mathematical functions in ABAP, we have to talk about datatypes. For statistics, the computation must be fast. At the end, we will often calculate a percentage or some other number where only the first two decimal places are relevant.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Implementing the float data type functionality, which provides 64 bits of binary precision and can represent up to 17 decimal places, is generally sufficient for most applications. We have also developed functions that utilize the DECFLOAT34 data type, offering 128 bits of precision. This level of precision exceeds what is readily available in most other programming languages. Yet, it integrates well within the ABAP type system, and some users might benefit from 128 bits of precision or larger numbers. Often, it is more relevant to support higher exponents than more digits of precision.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId-1367037855"&gt;3. Simple combinatoric functions: factorial( ) and binomial( )&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;The first two functions covered in this article are used for combinatorics. These are very basic and occur in a wide variety of settings. These are the factorial and binomial functions. Both take integer arguments and deliver a float or decfloat34 value. As factorials can be pretty large, the extended precision of decfloat34 is beneficial here.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Both functions return &lt;STRONG&gt;integers mathematically&lt;/STRONG&gt;, but in ABAP, they return F and DECFLOAT34 to support a wider range of input parameters.&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H3 id="toc-hId-1299607069"&gt;a) Factorial&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Description:&lt;/STRONG&gt;&amp;nbsp;Describes the number of ways in which n items can be ordered. Written n!.&lt;/P&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt; available in Microsoft Excel as FACT( )&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;This function appears in a wide variety of settings.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;So if we have Apple and Banana (two items), the factorial is also 2, as there are two possible orderings (Apple, Banana) and (Banana, Apple). For three items, Apple, Banana, and Orange, we have six orderings (Apple, Banana, Orange), (Apple, Orange, Banana), (Orange, Apple, Banana), (Orange, Banana, Apple), (Banana, Orange, Apple), (Banana, Apple, Orange).&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;The factorial has a simple formula:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;n! = n*(n-1)*(n-2)*...*1&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;For the first position, we have n possibilities to choose an item, for the second position only n-1, and so on.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Factorials can be pretty large. For example:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;50! = 30414093201713378043612608166064768844377641568960512000000000000&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;The ABAP kernel computes the factorials using a precomputed table for small values and the transcendental gamma function for large values. This is much faster than computing n * (n-1) * ... * 1.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;Here is the ABAP example:&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;data large type decfloat34.
large = factorial( 1000 ).
cl_demo_output=&amp;gt;display( large ).&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;ABAP correctly outputs: 4.023872600770937735437024339230040E+2567.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-1103093564"&gt;&lt;STRONG&gt;b.)&amp;nbsp;&lt;/STRONG&gt;Binomial coefficient&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;: Describes the number of ways in which k items can be chosen out of a total set of n items.&amp;nbsp;Written&amp;nbsp;C(n, k).&lt;/P&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Good to know&lt;/STRONG&gt;: available in Microsoft Excel as COMBIN( )&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;For example, C(5,1) equals 5, as there are five possibilities for choosing one item out of five. C(4,2) equals six, as if you have four items (1,2,3,4), you have the six possibilities {1,2}, {1,3}, {1,4}, {2,4}, {2,4}, and {3,4} to choose 2 items. Note here that the ordering is not considered, i.e., the binomial coefficient is not the number of ways to choose an ordered set of k items out of n items.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;There is a simple formula for the binomial coefficient as well:&lt;/DIV&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;C(n,k) = n! / ( k! * (n-k)! )&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here is a simple ABAP program to use the function:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;data large type decfloat34.
large = binomial( n = 20000 k = 5000 ).
cl_demo_output=&amp;gt;display( large ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This correctly outputs:&amp;nbsp;&lt;SPAN&gt;1.566362779957802233492978893365436E+4882, as you have many options to choose from, 5000 items out of 20,000 items.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Note that the binomial coefficient is typically not computed by the above formula, but by the transcendental beta function. This is also done in ABAP.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777497340"&gt;4. Basic transcendental functions: gamma( ) and log_gamma( )&lt;/H2&gt;&lt;P&gt;These basic transcendental functions appear everywhere in statistics, probability theory, and many other settings. If you don't know them, imagine them as similar to transcendental functions like sin(x), cos(x), and log(x).&lt;/P&gt;&lt;P&gt;The importance of the gamma function comes from the fact that it is defined on the whole range of real numbers (except -1, -2, ...) and that for positive integers n:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;n! = Gamma(n+1)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The gamma function is defined as an integral (for positive real numbers) as:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 221px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314456i8F1F7182DA5B5780/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is essential, as it defines the probability density of the &lt;STRONG&gt;gamma probability distribution&lt;/STRONG&gt; and some other probability distributions. Thus, it is often used in statistics.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As the gamma function grows rapidly, in practice, the function log_gamma(x) is often used, which is defined as:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;log_gamma(x) = log(abs(gamma(x))&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The computation of the log_gamma function is also more numerically stable.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Here is a picture of both functions:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313654i9E9FCDD77A85E0DB/image-dimensions/712x381/is-moderation-mode/true?v=v2" width="712" height="381" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The usage in ABAP is simple:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; data gamma_value type decfloat34.
 data log_gamma_value type decfloat34.
 data test_log_gamma type decfloat34.
 
 gamma_value = gamma( - 1 / 2 ).
 log_gamma_value = log_gamma( - 1 / 2 ).
 test_log_gamma = log( abs( gamma( -1 / 2 ) ) ).
 
 assert log_gamma_value = test_log_gamma.
 
 cl_demo_output=&amp;gt;write( gamma_value ).
 cl_demo_output=&amp;gt;write( log_gamma_value ).
 cl_demo_output=&amp;gt;write( test_log_gamma ).
 cl_demo_output=&amp;gt;display( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This correctly outputs:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;GAMMA_VALUE
-3.544907701811032054596334966682290

LOG_GAMMA_VALUE
1.265512123484645396488945797134706

TEST_LOG_GAMMA
1.265512123484645396488945797134706&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Good to know: &lt;/STRONG&gt;These&amp;nbsp;functions are available in Microsoft Excel as GAMMA( ) and GAMMALN( ).&lt;/P&gt;&lt;H2 id="toc-hId-580983835"&gt;&lt;STRONG&gt;5. Statistic functions: erf( ), erf_inv(), erfc(), erfc_inv()&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;error function&lt;/STRONG&gt; is another fundamental transcendental function. The importance of the error function erf(x) comes from the fact that it is related to the distribution function of the normal probability distribution.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314463i1DC884AC1A6FBCC7/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The area marked in yellow below the blue curve (which draws the probability density function of the standard normal distribution) is given by:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 205px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314466iF098B12381E4E6C8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The yellow area gives the probability that an event is smaller than or equal to some given value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;An integral again defines the error function:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 184px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314595iF481F1715B634B06/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The error function is available in Microsoft Excel as ERF().&lt;/P&gt;&lt;P&gt;The graph of the function erf(x) is simple:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314469i3A803CB2802302FD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As you can see from the graph, the error function is invertible on the interval (-1,1). The inverse function is called erf_inv(x) and is used to compute the &lt;STRONG&gt;quantile&lt;/STRONG&gt; of the &lt;STRONG&gt;normal distribution&lt;/STRONG&gt;. The graph of the inverse function looks like so:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314619i260476E559F615EF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The inverse error function is available in Microsoft Excel as ERFINV()&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In addition to the error and inverse error functions, there are the complementary error functions erfc(x) and inverse erfc_inv(x). The complementary error function is defined as:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 154px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314635i2442525ADCFC9A8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Why is this function needed? There are multiple reasons this function is used very often, as it appears naturally in statistics, but is also needed numerically to compute probabilities very close to 1, where erf(x) loses precision (floating point numbers are very precise around 0 and not very precise around 1).&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Good to know:&lt;/STRONG&gt;&amp;nbsp;The complementary error function is called ERFC() in Microsoft Excel.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here is a basic usage in ABAP:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; final(erf) = erf( 1 / 2 ).
 final(erfc) = erfc( 1 / 2 ).
 final(erf_inv) = erf_inv( 1 / 2 ).

 cl_demo_output=&amp;gt;write( erf ).
 cl_demo_output=&amp;gt;write( erfc ).
 cl_demo_output=&amp;gt;write( erf_inv ).
 cl_demo_output=&amp;gt;display( ).&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-384470330"&gt;6. Conclusion&lt;/H2&gt;&lt;P&gt;This article introduced 8 new mathematical functions in ABAP for the ABAP environments for 2508. These can be applied in a business context in statistical applications. A good example for this can be found in the following blog post:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributions-in-the-abap-environments-for/ba-p/14173266" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/random-numbers-and-probability-distributio...&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-mathematical-instead-of-artificial-intelligence-in-the-abap/ba-p/14215884"/>
    <published>2025-09-22T13:26:15.367000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/5-things-you-didn-t-know-about-sap-joule-for-developers-plus-an-exciting/ba-p/14224703</id>
    <title>5 Things You Didn’t Know About SAP Joule for Developers — Plus an Exciting Update</title>
    <updated>2025-09-23T01:53:30.531000+02:00</updated>
    <author>
      <name>HaHoang</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1673814</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Artificial intelligence is reshaping how we work, and developers are among the first to feel the impact. SAP Joule for Developers is&amp;nbsp;a collection of AI capabilities in SAP Build and ABAP Environment designed to help developers build smarter, faster, and more intuitively — whether you’re streamlining repetitive coding tasks or creating complex integrations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;And here’s the big news:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;The free promotion for SAP Joule for Developers has been extended.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;That means you now have even more time to explore Joule, experiment with projects, and see firsthand how it can transform your workflows — &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;all at no cost&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;We are hosting an engaging &lt;STRONG&gt;webinar&lt;/STRONG&gt; with demos, use cases and best practices on how to maximize value with Joule in SAP Build. Read till the end to find the registration link!&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Without further ado, here are five things you might not know about SAP Joule for Developers.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890040104"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;1. It’s More Than Just an AI Assistant&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_0-1758584515204.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318220i883D09392294E961/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_0-1758584515204.png" alt="HaHoang_0-1758584515204.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Many developers see Joule as just a chatbot. But it’s far more powerful. Joule for Developers goes beyond simple answers — it integrates into your workflow, generates context-aware code suggestions, and automates repetitive tasks. Whether you’re building in &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, working in &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ABAP&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, or connecting with third-party services, Joule is designed to keep your productivity high.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Learn more about capabilities via our &lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/artificial-intelligence/joule-for-developers.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;webpage&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1693526599"&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;2. &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;It Speaks “Developer” Fluently&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_1-1758584515206.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318221iA41684708356D4FF/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_1-1758584515206.png" alt="HaHoang_1-1758584515206.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Joule understands technical prompts and adapts its recommendations to your specific context. Describe what you want to create, and Joule can generate API calls, reusable code snippets, or even integration patterns tailored to your environment.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Explore a tutorial in ABAP &lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/abap-platform-rap120" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1497013094"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;3. Built-In Security and Compliance Awareness&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;SAP Build—with SAP Joule for Developers embedded—is built on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;enterprise-grade security&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. It adheres to SAP’s compliance standards, so your code and data are always protected. You can confidently experiment with AI in your workflows, backed by privacy, governance, and regulatory safeguards.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Read more about SAP’s approach to security and compliance in &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/build-service/build-service-guide/security" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Build&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://www.sap.com/documents/2024/06/e0f9895d-c47e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;SAP Business Technology Platform&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1429582308"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;4. It Helps You Learn as You Build&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_2-1758584515206.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318222i12E602C33728DA19/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_2-1758584515206.png" alt="HaHoang_2-1758584515206.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Joule isn’t just about solutions — it’s about learning. As you code, Joule explains the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;why&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt; behind its suggestions. This helps developers discover new frameworks, understand best practices, and ramp up on unfamiliar technologies faster.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Think of it as a mentor who’s always available, providing guidance while letting you stay in the driver’s seat.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Try a &lt;/SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4441/4727/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;tutorial&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; on how to create CAP application in SAP Build.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1103986084"&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;5. It Works Across Your Development Stack&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="HaHoang_3-1758584515207.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318223i82A8779797D32182/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="HaHoang_3-1758584515207.png" alt="HaHoang_3-1758584515207.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Joule isn’t limited to a single tool or environment. Whether you’re generating processes or building applications, SAP Joule for Developers can support you. This flexibility means you can bring AI assistance into the environments you already know — without having to change how you work.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Free Access to SAP Joule for Developers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;Now is the best time&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;to explore, innovate, and see how Joule can transform the way you build — without worrying about cost.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Get started &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlock-sap-joule-for-developers-claim-your-free-access-today/ba-p/14183158" target="_blank"&gt;&lt;SPAN&gt;today&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":calendar:"&gt;📅&lt;/span&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Mark your calendar&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Join our upcoming &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Build with Joule&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; webinar on &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;September 24th&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; to see live demos, best practices, and how to maximize the value of Joule in your projects. Register &lt;/SPAN&gt;&lt;A href="https://event.on24.com/eventRegistration/EventLobbyServlet?target=reg20.jsp&amp;amp;eventid=5051265&amp;amp;sessionid=1&amp;amp;key=A7AEB5FB1B797BB3D0785EA75BABB9C0&amp;amp;groupId=6301406&amp;amp;partnerref=multiregpage&amp;amp;sourcepage=register" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;here&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/5-things-you-didn-t-know-about-sap-joule-for-developers-plus-an-exciting/ba-p/14224703"/>
    <published>2025-09-23T01:53:30.531000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-cloud-number-ranges-the-abap-rap-commit-work-conflict-and-the-simple/ba-p/14221714</id>
    <title>ABAP Cloud Number Ranges: The ABAP RAP COMMIT WORK Conflict and the Simple Fix</title>
    <updated>2025-09-23T12:45:39.845000+02:00</updated>
    <author>
      <name>suzanne_alivand</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/848404</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Many business applications require unique numbers, for example, to complete the keys of data records. In order to get numbers from an interval, a number range object must be defined which can contain different properties. Standard Number ranges are typically maintained via customizing in each system (Test and Production). However, the process for&amp;nbsp;&lt;STRONG&gt;custom&lt;/STRONG&gt;&amp;nbsp;Number Range Objects in the S/4HANA Cloud Public Edition is different.&lt;/P&gt;&lt;P&gt;These custom objects must be created in the development environment, configured in the customizing client, and then transported through the landscape. This blog outlines that end-to-end process, including a frustrating short dump I encountered and the surprisingly simple configuration change that solved it.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 1: The Developer's Task - Defining the Blueprint in ADT&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Unlike the on-premises world, the process for a custom number range begins in the developer's toolkit: ABAP Development Tools (ADT). Here, you create the&amp;nbsp;&lt;EM&gt;definition&lt;/EM&gt;&amp;nbsp;or the&amp;nbsp;&lt;EM&gt;blueprint&lt;/EM&gt;&amp;nbsp;of your number range object.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In your ABAP package, right-click and choose&amp;nbsp;New&amp;nbsp;-&amp;gt;&amp;nbsp;Other ABAP Repository Object.&lt;/LI&gt;&lt;LI&gt;Search for&amp;nbsp;&lt;STRONG&gt;"Number Range Object"&lt;/STRONG&gt;, give it a name and a description.&lt;/LI&gt;&lt;LI&gt;Assign it to a&amp;nbsp;&lt;STRONG&gt;Workbench Transport&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;In the object editor, the most important property is the&amp;nbsp;&lt;STRONG&gt;Number Length Domain&lt;/STRONG&gt;. It’s a best practice to create a custom domain for this to define the length and type. For my&amp;nbsp;ZPO_RUN_ID, I used a domain of type&amp;nbsp;NUMC(10).&lt;/LI&gt;&lt;LI&gt;Save and&amp;nbsp;&lt;STRONG&gt;activate&lt;/STRONG&gt;&amp;nbsp;the object.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_7-1758216453231.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316647iBAD6D68F8E9EC235/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="suzanne_alivand_7-1758216453231.png" alt="suzanne_alivand_7-1758216453231.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The system now knows what a&amp;nbsp;ZPO_RUN_ID&amp;nbsp;is, but it has no actual number intervals defined.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 2: The Customizer's Task - Setting Intervals in Fiori&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This is where we move to the Fiori Launchpad, specifically in the&amp;nbsp;&lt;STRONG&gt;Customizing Client&lt;/STRONG&gt;.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Log in to your Customizing client and open the&amp;nbsp;&lt;STRONG&gt;"Manage Number Range Intervals"&lt;/STRONG&gt;&amp;nbsp;Fiori app.&lt;/LI&gt;&lt;LI&gt;Search for your newly created object,&amp;nbsp;ZPO_RUN_ID.&lt;/LI&gt;&lt;LI&gt;Navigate to the "Number Ranges" tab and click&amp;nbsp;&lt;STRONG&gt;"Create"&lt;/STRONG&gt;. Here you'll define your interval, for example,&amp;nbsp;01&amp;nbsp;with its lower and upper limits.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_8-1758216453232.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316646i0A9308E96CB6625D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="suzanne_alivand_8-1758216453232.png" alt="suzanne_alivand_8-1758216453232.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_13-1758216499507.png" style="width: 663px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316652i70CFA2444947FDD8/image-dimensions/663x226/is-moderation-mode/true?v=v2" width="663" height="226" role="button" title="suzanne_alivand_13-1758216499507.png" alt="suzanne_alivand_13-1758216499507.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 3: The Transport &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The system needs a&amp;nbsp;&lt;STRONG&gt;Customizing Transport&lt;/STRONG&gt;&amp;nbsp;to record this change.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In a new tab, open the&amp;nbsp;&lt;STRONG&gt;"Export Customizing Transports"&lt;/STRONG&gt;&amp;nbsp;Fiori app.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_10-1758216453236.png" style="width: 237px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316649iD7EFC91ECED66A4B/image-dimensions/237x191/is-moderation-mode/true?v=v2" width="237" height="191" role="button" title="suzanne_alivand_10-1758216453236.png" alt="suzanne_alivand_10-1758216453236.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a new&amp;nbsp;&lt;STRONG&gt;"Customizing Request"&lt;/STRONG&gt;&amp;nbsp;and give it a description. It's a good practice to set this as your "Default" request using the "Change Category" button.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_11-1758216453238.png" style="width: 734px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316650i3B8DE8A478A85F6C/image-dimensions/734x90/is-moderation-mode/true?v=v2" width="734" height="90" role="button" title="suzanne_alivand_11-1758216453238.png" alt="suzanne_alivand_11-1758216453238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go back to the Number Range app and save your interval again. This time, it will find your open request and save the change successfully.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="suzanne_alivand_12-1758216453239.png" style="width: 823px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316651i263BA5C692E50873/image-dimensions/823x99/is-moderation-mode/true?v=v2" width="823" height="99" role="button" title="suzanne_alivand_12-1758216453239.png" alt="suzanne_alivand_12-1758216453239.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now you have two transports: the Workbench TR from ADT with the object definition, and the Customizing TR from Fiori with the interval data. The Workbench TR should be a prerequisite for the Customizing TR when you import them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Part 4: The Payoff - Using the Number Range in RAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With everything configured, it was time to use it in my ABAP RAP application. The correct, released API is the class&amp;nbsp;CL_NUMBERRANGE_RUNTIME.&lt;/P&gt;&lt;P&gt;I had two main options for assigning an ID based on the business requirement:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;An&amp;nbsp;early numbering&amp;nbsp;determination, which runs before the save phase.&lt;/LI&gt;&lt;LI&gt;A&amp;nbsp;determination on save, which runs during the final save transaction.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I initially chose early numbering&amp;nbsp;determination. My&amp;nbsp;earlynumbering_create method was clean and used the correct class.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD earlynumbering_create.

    DATA: latest_num   TYPE cl_numberrange_runtime=&amp;gt;nr_number.

    DATA(All_entities) = entities.
    DELETE All_entities WHERE  RunId IS NOT INITIAL.

    TRY.
        cl_numberrange_runtime=&amp;gt;number_get(
          EXPORTING
            nr_range_nr = '01'
            object      = 'ZPO_RUN_ID'
            quantity = CONV #( lines( all_entities ) )
          IMPORTING
            number      = latest_num
            returncode = DATA(code)
            returned_quantity = DATA(return_qty) ).

      CATCH cx_nr_object_not_found INTO DATA(lx_obj_not_found).
      CATCH cx_number_ranges INTO DATA(lx_ranges_error).

        LOOP AT All_entities INTO DATA(entity_line).

          APPEND VALUE #( %cid = entity_line-%cid
                          %key  = entity_line-%key ) TO failed-run.
          APPEND VALUE #( %cid = entity_line-%cid
                          %key = entity_line-%key
                          %msg = lx_ranges_error ) TO reported-run.
        ENDLOOP.
        EXIT.
    ENDTRY.

    DATA(curr_num) = latest_num - return_qty.

    LOOP AT All_entities INTO entity_line.
      curr_num = curr_num + 1 .
      APPEND VALUE #( %cid = entity_line-%cid
      RunUuid = curr_num ) TO mapped-run.

    ENDLOOP.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;I ran the app, created an entry, clicked "Save," and was met with a short dump:&amp;nbsp;&lt;STRONG&gt;ABAP Runtime error 'BEHAVIOR_ILLEGAL_STATEMENT'&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The "Aha!" Moment: The&amp;nbsp;COMMIT WORK&amp;nbsp;Conflict and the Simple Fix&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;My code was correct. The class was correct. The configuration was correct. So, what was wrong?&lt;/P&gt;&lt;P&gt;The problem was my number range was&amp;nbsp;&lt;STRONG&gt;not buffered&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;After a long debugging session, I discovered that when&amp;nbsp;cl_numberrange_runtime&amp;nbsp;is called for a non-buffered number range, it&amp;nbsp;&lt;STRONG&gt;must&lt;/STRONG&gt;&amp;nbsp;perform an immediate database&amp;nbsp;UPDATE&amp;nbsp;and its own&amp;nbsp;COMMIT WORK&amp;nbsp;to guarantee the number is reserved. The RAP framework, in its strictly controlled Save phase, saw this independent&amp;nbsp;COMMIT&amp;nbsp;as a violation of its own transaction and triggered the dump to prevent data inconsistency.&lt;/P&gt;&lt;P&gt;The solution wasn't in my ABAP code at all. It was in the configuration.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enabling buffering solves this transactional conflict.&lt;/STRONG&gt;&amp;nbsp;Here’s why:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;With buffering, the class gets the next number from the application server's&amp;nbsp;&lt;STRONG&gt;memory&lt;/STRONG&gt;, not directly from the database.&lt;/LI&gt;&lt;LI&gt;Getting a number from memory requires&amp;nbsp;&lt;STRONG&gt;no immediate database update&lt;/STRONG&gt;&amp;nbsp;and, crucially,&amp;nbsp;&lt;STRONG&gt;no conflicting&amp;nbsp;COMMIT WORK&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;I edited the&amp;nbsp;&lt;STRONG&gt;Properties&lt;/STRONG&gt;&amp;nbsp;of my&amp;nbsp;ZPO_RUN_ID&amp;nbsp;object and changed the&amp;nbsp;&lt;STRONG&gt;Buffering&lt;/STRONG&gt;&amp;nbsp;type to&amp;nbsp;&lt;STRONG&gt;"Main Memory Buffering"&lt;/STRONG&gt;&amp;nbsp;with a size of 10.&lt;/P&gt;&lt;P&gt;With that one configuration change, everything worked perfectly. My&amp;nbsp;determination on save&amp;nbsp;now executes without any issues.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the ABAP Cloud, writing correct code is only half the battle. We also have to deeply understand and respect the strict transactional model of the RAP framework. A seemingly simple configuration choice, like buffering, can be the key to resolving what looks like a complex runtime error.&lt;/P&gt;&lt;P&gt;If you ever face an unexpected&amp;nbsp;BEHAVIOR_ILLEGAL_STATEMENT&amp;nbsp;dump, consider what your code might be doing that could be trying to interfere with the framework's unit of work.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-cloud-number-ranges-the-abap-rap-commit-work-conflict-and-the-simple/ba-p/14221714"/>
    <published>2025-09-23T12:45:39.845000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/validations-in-bopf-and-consistency-validation-in-bopf/ba-p/14214587</id>
    <title>Validations in BOPF and Consistency Validation in BOPF</title>
    <updated>2025-09-24T07:00:43.999000+02:00</updated>
    <author>
      <name>Krishna_karale</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451081</uri>
    </author>
    <content>&lt;P&gt;Hello Everyone,&lt;/P&gt;&lt;P&gt;In this blog we will be going to learn about the Validations in BOPF.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is Validation in BOPF?&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In BOPF, &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;a validation is a consistency check defined on a node of the business object that ensures the data fulfills specific business rules before it is saved or processed.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In BOPF, keeping the data clean and consistent is very important. Validations help achieve this by checking the data against specific rules. Just like determinations, validations are created on the node of the data model where they are needed. Today, we’ll walk you through how to create a validation and write the logic for it in the implementation class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Procedure &amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here we are defining a custom Travel table (zkk_dt_travel).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Data base table for Travel Details'
@AbapCatalog.enhancement.category : #EXTENSIBLE_ANY
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table zkk_dt_travel {

  key client     : abap.clnt not null;
  key travel_id  : zkk_de_travel_id not null;
  key user_email : zkk_de_email not null;
  start_date     : dats;
  destination    : zkk_de_destination;
  status         : zkk_de_status;
  expense_type   : zkk_de_item_type;
  @Semantics.amount.currencyCode : 'zkk_travel_hdr.curr_key'
  total_cost     : zkk_de_cost;
  curr_key       : zkk_de_cost_key;
  remarks        : zkk_de_remarks;
  created_by     : zkk_de_createdby;
  created_on     : datum;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;The above table has the below shown data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757594071182.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313058i31645446FA5AE134/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757594071182.png" alt="Krishna_karale_1-1757594071182.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the Database table we are defining the Basic view &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.sqlViewName: 'ZKK_DBV_TRAVEL'
@AbapCatalog.compiler.compareFilter: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for Travel details'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true


@ObjectModel:{
modelCategory: #BUSINESS_OBJECT,
compositionRoot: true,
transactionalProcessingEnabled: true,
writeActivePersistence: 'ZKK_dt_travel',

createEnabled: true,
updateEnabled: true,
deleteEnabled: true
}

@OData.publish: true
define view zi_kk_travel
  as select from zkk_dt_travel
{
  key travel_id,
      @ObjectModel.mandatory: true
  key user_email,
      start_date,
      destination,
      status,
      @ObjectModel.mandatory: true
      expense_type,
      @ObjectModel.mandatory: true
      total_cost,
      curr_key,
      remarks,
      created_by,
      created_on
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;For creating the Business object directly from the Eclipse editor, we have to make use of annotations which I have given with their functionality&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here’s the explanation of each annotation in your snippet:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;@ObjectModel: {&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;modelCategory: #BUSINESS_OBJECT,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;compositionRoot: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;transactionalProcessingEnabled: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;writeActivePersistence: 'ZKK_dt_travel',&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;createEnabled: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;updateEnabled: true,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;deleteEnabled: true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Explanation&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;modelCategory: #BUSINESS_OBJECT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Declares that the CDS view represents a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Business Object (BO)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. This means it can be used in BOPF to handle business logic and transactional operations.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;compositionRoot: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Defines this entity as the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;root node&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; of the Business Object. Other nodes (child entities) can be linked to it via composition relationships.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;transactionalProcessingEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enables &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;transactional behavior&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (create, update, delete, save, rollback) for the entity, making it suitable for business object processing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;writeActivePersistence: 'ZKK_dt_travel'&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Specifies the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;database table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; (&lt;/SPAN&gt;&lt;SPAN&gt;ZKK_DT_TRAVEL&lt;/SPAN&gt;&lt;SPAN&gt;) where the active (persisted) data of this entity is stored.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;createEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Allows the creation of new records in the entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;updateEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Allows modification of existing records.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;deleteEnabled: true&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Allows deletion of records.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1599241"&gt;@odata&lt;/a&gt;.publish: true&lt;/STRONG&gt;&lt;SPAN&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;turns your CDS view into an &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;OData service provider&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;, making its data available for consumption via OData protocols.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;In short:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This annotation block is used to define a CDS entity as a &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Business Object root node&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; with full CRUD (Create, Read, Update, Delete) support and persistence in the custom table &lt;/SPAN&gt;&lt;SPAN&gt;ZKK_DT_TRAVEL&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here I am creating the Metadata extension for the Basic view (ZI_KK_TRAVEL) for consuming it in the front end.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
@UI.headerInfo: {
    typeName: 'Travel',
    typeNamePlural: 'Travel Details'
}
annotate entity zi_kk_travel
    with 
{
@UI.facet: [{ 
id: 'Travel', 
purpose: #STANDARD, 
position: 10, 
label: 'Travel Details ', 
type: #IDENTIFICATION_REFERENCE 
} ]
 @UI.lineItem: [{ position: 10, label: 'Travel Id' }]
 @UI.identification: [{ position: 10 }]
    travel_id;
 @UI.lineItem: [{ position: 20, label: 'Email' }]
 @UI.identification: [{ position: 20 }]
    user_email;
 @UI.lineItem: [{ position: 30, label: 'Travel Date' }]
 @UI.identification: [{ position: 30 }]
    start_date;
 @UI.lineItem: [{ position: 40, label: 'Destination' }]
 @UI.identification: [{ position: 40 }]
    destination;
 @UI.lineItem: [{ position: 50, label: 'Status' }]
 @UI.identification: [{ position: 50 }]
    status;
 @UI.lineItem: [{ position: 60, label: 'Expense Type' }]
 @UI.identification: [{ position: 60 }]
    expense_type;
 @UI.lineItem: [{ position: 65, label: 'Amount' }]
 @UI.identification: [{ position: 65 }]
    total_cost;
 @UI.lineItem: [{ position: 70, label: 'Currency' }]
 @UI.identification: [{ position: 70 }]
    curr_key;
 @UI.lineItem: [{ position: 80, label: 'Remarks for Expense' }]
 @UI.identification: [{ position: 80 }]
    remarks;
 @UI.lineItem: [{ position: 85, label: 'Created By' }]
 @UI.identification: [{ position: 10 }]
    created_by;
 @UI.lineItem: [{ position: 90, label: 'Created Date' }]
 @UI.identification: [{ position: 90 }]
    created_on;   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Now activate the Basic view and the meta data extension, when it gets activated the Business Object get created implicitly.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now open the BOBX Transaction.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_0-1757592499811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313013iA3CE0EC7DAE390B8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Krishna_karale_0-1757592499811.png" alt="Krishna_karale_0-1757592499811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can search the business object in Home business objects or click on the below marked option.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757592499815.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313014iC696BF0CC68256E1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757592499815.png" alt="Krishna_karale_1-1757592499815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Provide the BO name which is our Basic View name (ZI_KK_TRAVEL)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_2-1757592550543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313015iEB32B50190C69B55/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_2-1757592550543.png" alt="Krishna_karale_2-1757592550543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_3-1757592550545.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313016i52BC1E6BA95F4920/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_3-1757592550545.png" alt="Krishna_karale_3-1757592550545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now to Implement the validations expand the Node Elements &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_4-1757592664872.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313018iAD4AC1A6BC6E15F5/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_4-1757592664872.png" alt="Krishna_karale_4-1757592664872.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Right Click on Validations will see the option to Create Validations&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_5-1757592664876.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313019iFE10A410C3DA9B77/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_5-1757592664876.png" alt="Krishna_karale_5-1757592664876.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Provide the Validation Name and Description and Class for implementing the validation logic.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_6-1757592724202.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313021iE409E1816592FD3A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_6-1757592724202.png" alt="Krishna_karale_6-1757592724202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Double click on Class Name, and create a class which will be having the super class implicitly&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_7-1757592724204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313022i60C54D71A4DAD6DC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_7-1757592724204.png" alt="Krishna_karale_7-1757592724204.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_8-1757592724206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313023i7D5C4DCD05FAB412/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_8-1757592724206.png" alt="Krishna_karale_8-1757592724206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now we have to provide Triggering conditions for the validations, so select the Node instance and tick on Create, Update, Delete and Check &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_9-1757592724208.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313025i9F8AA07FF69DD538/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_9-1757592724208.png" alt="Krishna_karale_9-1757592724208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Save it and check and generate it.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_10-1757592724210.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313024i2B58966A704D4508/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_10-1757592724210.png" alt="Krishna_karale_10-1757592724210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After this we have to go&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;to eclipse and &lt;/SPAN&gt;&lt;SPAN class=""&gt;create&lt;/SPAN&gt;&lt;SPAN class=""&gt; a service definition on basic &lt;/SPAN&gt;&lt;SPAN class=""&gt;view&lt;/SPAN&gt; &lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;SPAN class=""&gt;ZI_KK_TRAVEL)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_0-1757593000483.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313029i1C822052AE6EFECE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_0-1757593000483.png" alt="Krishna_karale_0-1757593000483.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now create a Service binding on top of Service definition and publish it &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757593000486.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313028i7CF7AC634D5DAC04/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757593000486.png" alt="Krishna_karale_1-1757593000486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When we preview it &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;It will be navigated to the frontend while navigating it will ask for your SAP GUI Credentials to login.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_2-1757594121268.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313059iAEC5D4AF3D524A70/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_2-1757594121268.png" alt="Krishna_karale_2-1757594121268.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now go to SE91 Transaction and create a message class &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_3-1757593000492.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313032iC0B1ADEA725893E0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_3-1757593000492.png" alt="Krishna_karale_3-1757593000492.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here, I am doing Validation for a Single status field only so i have passed only two messages &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_4-1757593127901.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313039iA7B37EE8E3E92A3F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_4-1757593127901.png" alt="Krishna_karale_4-1757593127901.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Now I want to provide the Validations for Status field, so go to our class which we have created in Validations&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_5-1757593127904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313040i39BD2E5B3B58359A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_5-1757593127904.png" alt="Krishna_karale_5-1757593127904.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;Implement our Custom login in this method.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD /bobf/if_frw_validation~execute.

    CLEAR : et_failed_key, eo_message.
    eo_message = /bobf/cl_frw_factory=&amp;gt;get_message( ).
    DATA : lt_data TYPE ztikk_travel,   " Table type for header node
           ls_msg  TYPE symsg.
    io_read-&amp;gt;retrieve(
      EXPORTING
        iv_node                 = is_ctx-node_key
        it_key                  = it_key
        iv_fill_data            = abap_true
        it_requested_attributes = VALUE #(
                                          (                 zif_i_kk_travel_c=&amp;gt;sc_node_attribute-zi_kk_travel-status )
                                         ) )
      IMPORTING
        et_data                 = lt_data
    ).
    LOOP AT lt_data REFERENCE INTO DATA(ls_data).
      IF ls_data-&amp;gt;status IS INITIAL .
        ls_msg-msgid = 'ZKK_MSG_BOPF'.
        ls_msg-msgno = '000'.
        ls_msg-msgty = 'E'.

        eo_message-&amp;gt;add_message(
          is_msg       = ls_msg                 " Message that is to be added to the message object
          iv_node      = is_ctx-node_key            " Node to be used in the origin location
          iv_key       = ls_data-&amp;gt;key            " Instance key to be used in the origin location
iv_attribute = zif_i_kk_travel_c=&amp;gt;sc_node_attribute-zi_kk_travel-status
          " Attribute to be used in the origin location
        ).

        INSERT VALUE #( key = ls_data-&amp;gt;key ) INTO TABLE et_failed_key.
      ENDIF.

      DATA(lv_status) = to_upper( condense( ls_data-&amp;gt;status ) ).
      IF lv_status NA 'ACCEPT' OR lv_status NA 'REJECT'.
        ls_msg-msgid = 'ZKK_MSG_BOPF'.
        ls_msg-msgno = '001'.
        ls_msg-msgty = 'E'.

        eo_message-&amp;gt;add_message(
          is_msg       = ls_msg
          iv_node      = is_ctx-node_key
          iv_key       = ls_data-&amp;gt;key
          iv_attribute = zif_i_kk_travel_c=&amp;gt;sc_node_attribute-zi_kk_travel-status
        ).

        INSERT VALUE #( key = ls_data-&amp;gt;key ) INTO TABLE et_failed_key.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Now go to service binding and preview it. Try to create a new record.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here I am keeping Status field as empty so it will throw error.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_0-1757593607942.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313054i8AFBB4A6CB13AC7F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_0-1757593607942.png" alt="Krishna_karale_0-1757593607942.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now Status should accept only ‘ACCEPT’ or ‘REJECT’. If I&amp;nbsp;try to give any other value it will throw error again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_1-1757593607945.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313055i5F011EB0883B6BFE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_1-1757593607945.png" alt="Krishna_karale_1-1757593607945.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you give the correct value ‘Accept’ or ‘Reject’.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Krishna_karale_2-1757593607947.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313053iAD827C3ADC2B81D1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Krishna_karale_2-1757593607947.png" alt="Krishna_karale_2-1757593607947.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1889114913"&gt;&lt;U&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/U&gt;&lt;/H3&gt;&lt;P&gt;Validations in BOPF play a vital role in safeguarding data quality and enforcing business rules at the framework level. By defining validations directly on the business object nodes, we ensure that only consistent and compliant data enters the system, regardless of whether it originates from an SAP UI, an external interface, or a background process. This not only strengthens the reliability of the application but also reduces the need for redundant checks across different layers. In short, validations serve as a powerful and centralized mechanism to guarantee data integrity within the BOPF model.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/validations-in-bopf-and-consistency-validation-in-bopf/ba-p/14214587"/>
    <published>2025-09-24T07:00:43.999000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/step-by-step-guide-to-creating-a-custom-business-object-in-bopf/ba-p/14219614</id>
    <title>Step-by-Step Guide to Creating a Custom Business Object in BOPF</title>
    <updated>2025-09-24T07:03:08.226000+02:00</updated>
    <author>
      <name>Naveen_n</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1388970</uri>
    </author>
    <content>&lt;P&gt;Introduction&amp;nbsp;&lt;/P&gt;&lt;P&gt;The Business Object Processing Framework (BOPF) is an SAP framework that simplifies the development of business objects by providing a standardized way to handle data persistence, business logic, validations, determinations, and actions. Instead of writing custom code for every use case, developers can rely on BOPF’s reusable building blocks, ensuring consistency and reducing development effort.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this guide, we will walk through the step-by-step process of creating a custom Business Object in BOPF. Starting with the creation of dictionary elements, moving through defining the root node and generating dictionary artifacts in transaction BOBX, and finally testing our object in BOBT, you’ll gain a clear understanding of how to set up and validate your first custom BO.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Steps to Create a Custom Business Object&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Create the Business Object in BOBX&amp;nbsp;&lt;BR /&gt;Go to transaction BOBX.&amp;nbsp;&lt;BR /&gt;Click on the Create menu option.&amp;nbsp;&lt;BR /&gt;Enter the Business Object name and description.&amp;nbsp;&lt;BR /&gt;In the Properties section, select Business Object.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_0-1758091096241.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315626i3A44179849257F89/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Naveen_n_0-1758091096241.png" alt="Naveen_n_0-1758091096241.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_1-1758091096243.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315628iD9E0E09A85F5E0B6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_1-1758091096243.png" alt="Naveen_n_1-1758091096243.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Define the Root Node&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Click on ROOT.&amp;nbsp;&lt;BR /&gt;Provide the following:&amp;nbsp;&lt;BR /&gt;Data Structure&amp;nbsp;&lt;BR /&gt;Combined Structure&amp;nbsp;&lt;BR /&gt;Combined Table Type&amp;nbsp;&lt;BR /&gt;Database Table Name&amp;nbsp;&lt;BR /&gt;Click Save.&amp;nbsp;&lt;BR /&gt;Double-click on the database table name. If it does not exist, create it explicitly in SE11.&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_2-1758091096245.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315627i7B4B1B40935345F6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_2-1758091096245.png" alt="Naveen_n_2-1758091096245.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_3-1758091096247.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315630i5C27FC11C41779A2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_3-1758091096247.png" alt="Naveen_n_3-1758091096247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Generate Dictionary Elements&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Once the database table is created, return to BOBX.&amp;nbsp;&lt;BR /&gt;Navigate to Extras → Generate Dictionary Elements.&amp;nbsp;&lt;BR /&gt;This will automatically generate the required structures and table types.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_4-1758091096250.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315629iEC7876C49A6C94C0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_4-1758091096250.png" alt="Naveen_n_4-1758091096250.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_5-1758091096252.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315631i0C4CBDF84A40FED0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_5-1758091096252.png" alt="Naveen_n_5-1758091096252.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_6-1758091096255.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315632iCAA7970C916FB817/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_6-1758091096255.png" alt="Naveen_n_6-1758091096255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Check and Generate&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Run Check and Correct in BOBX to validate your business object.&amp;nbsp;&lt;BR /&gt;Once validation is successful, click on the Generate button.&amp;nbsp;&lt;BR /&gt;The system generates the BOPF repository objects for your Business Object.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_7-1758091096257.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315635iFFE55E83ADF76943/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_7-1758091096257.png" alt="Naveen_n_7-1758091096257.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_8-1758091096259.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315633i52A439D4F0998E64/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_8-1758091096259.png" alt="Naveen_n_8-1758091096259.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_9-1758091096261.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315637i865A709F6A9D3865/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_9-1758091096261.png" alt="Naveen_n_9-1758091096261.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Test the Business Object in BOBT&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Go to transaction BOBT.&amp;nbsp;&lt;BR /&gt;Select your custom Business Object.&amp;nbsp;&lt;BR /&gt;Perform test operations such as Create, Update, and Delete.&amp;nbsp;&lt;BR /&gt;Verify that the database entries are updated correctly.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_10-1758091096262.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315636iA9479A9E4A8947A2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Naveen_n_10-1758091096262.png" alt="Naveen_n_10-1758091096262.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_11-1758091096262.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315638i892BDDD112E057F3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_11-1758091096262.png" alt="Naveen_n_11-1758091096262.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_12-1758091096263.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315639i5292754BBFC37B7A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_12-1758091096263.png" alt="Naveen_n_12-1758091096263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_n_13-1758091096265.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315640iEA3FD4682626123C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_n_13-1758091096265.png" alt="Naveen_n_13-1758091096265.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;By following the steps outlined in this guide, you can successfully create, configure, and test a custom Business Object in BOPF. Using BOBX for modeling and generation and BOBT for testing, you gain hands-on experience with one of the most powerful frameworks in SAP for managing business data and logic.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;BOPF not only reduces manual coding but also enforces a structured, model-driven development approach, making your applications easier to maintain and extend. Once you are comfortable with creating root nodes and dictionary elements, you can explore advanced topics such as actions, determinations, validations, and associations to implement complete business processes.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/step-by-step-guide-to-creating-a-custom-business-object-in-bopf/ba-p/14219614"/>
    <published>2025-09-24T07:03:08.226000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/working-with-internal-tables-parallel-cursor-control-break-statements/ba-p/14220084</id>
    <title>Working with Internal Tables, Parallel cursor, Control Break Statements, Messages</title>
    <updated>2025-09-24T07:10:34.969000+02:00</updated>
    <author>
      <name>mandanaveenofficial</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1975320</uri>
    </author>
    <content>&lt;P&gt;Working with internal Tables&lt;/P&gt;&lt;P&gt;Below topics we are going to discuss in detail&lt;/P&gt;&lt;P&gt;1.Types of Internal Tables&lt;/P&gt;&lt;P&gt;2.Creating Internal Tables&lt;/P&gt;&lt;P&gt;3.Populating and Processing Internal Tables&lt;/P&gt;&lt;P&gt;4.Usage of work area and Field-symbol&lt;/P&gt;&lt;P&gt;5.Data manipulation in Internal table&lt;/P&gt;&lt;P&gt;6.Parallel Cursor usage&lt;/P&gt;&lt;P&gt;7.Control Break Statements&lt;/P&gt;&lt;P&gt;8.Messages&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Types of Internal Tables&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In SAP ABAP (Advanced Business Application Programming),&amp;nbsp;Internal tables&amp;nbsp;are used to store temporary data during program execution.&lt;/P&gt;&lt;P&gt;There are&amp;nbsp;three main types of internal tables&amp;nbsp;in SAP:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Standard Internal Table&lt;/LI&gt;&lt;LI&gt;Sorted Internal Table&lt;/LI&gt;&lt;LI&gt;Hashed Internal Table&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Standard Internal Table &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This is default internal table type.&lt;/P&gt;&lt;P&gt;In Standard internal table, Table entries are stored in the order they are inserted.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Standard internal table are not sorted automatically. We have to use the SORT statement for sorting the table entries based on keys.&lt;/LI&gt;&lt;LI&gt;Standard internal table follows Linear search process for searching the records&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Here passing of data from work area to internal table is through APPEND keyword.&lt;/LI&gt;&lt;LI&gt;Standard internal table is not recommended for large datasets&lt;/LI&gt;&lt;LI&gt;Standard internal table accepts duplicate entries unless explicitly defined with a unique key.&lt;/LI&gt;&lt;LI&gt;Standard internal table is accessed by using index or key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Usage: Standard internal table is recommended only when sequence of fields are mattered or dealing with small datasets.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Example :&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;SPAN&gt;DATA: lt_standard TYPE STANDARD TABLE OF mara.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Sorted Internal Table&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Sorted internal table entries are automatically sorted based on a defined key.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Sorted internal table follows binary search process for searching of records&lt;/LI&gt;&lt;LI&gt;Here passing of data from work area to internal table is through INSERT keyword.&lt;/LI&gt;&lt;LI&gt;Can enforce unique keys or allow duplicates depending on declaration&lt;/LI&gt;&lt;LI&gt;Here we must specify at least one field as unique or non-unique&lt;/LI&gt;&lt;LI&gt;Cannot manually sort or insert at a specific position.&lt;/LI&gt;&lt;LI&gt;Sorted internal table is accessed by using index or key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Usage: Sorted internal table is recommended for reading the entries based on keys&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Example:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;DATA: lt_sorted TYPE SORTED TABLE OF mara WITH UNIQUE KEY matnr.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hashed Internal Table&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Hashed internal table uses a hashed algorithm for key-based access.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Hashed internal table follows Hashed Algorithm for searching of single record&lt;/LI&gt;&lt;LI&gt;Here passing of data from work area to internal table is through COLLECT keyword.&lt;/LI&gt;&lt;LI&gt;Fastest access for reading single entries using keys.&lt;/LI&gt;&lt;LI&gt;It does not accept duplicate records.&lt;/LI&gt;&lt;LI&gt;Only allows unique keys.&lt;/LI&gt;&lt;LI&gt;Hashed internal table is accessed by using key only&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Usage: Hashed internal table is recommended for reading single entry from table by using key&lt;/P&gt;&lt;P&gt;Example: DATA: lt_hashed TYPE HASHED TABLE OF mara WITH UNIQUE KEY matnr.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Decision Framework of Standard/ Sorted / Hashed Internal Tables&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_1-1758108428636.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315795i4B3AD60DEF73EAFE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_1-1758108428636.png" alt="Naveen_Manda1_1-1758108428636.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Creating Internal Tables &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Examples for creating Internal tables with type declarations and using standard table&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_2-1758108498709.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315797i20C5D42132B3D734/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_2-1758108498709.png" alt="Naveen_Manda1_2-1758108498709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.&amp;nbsp;Populating and processing Internal Table&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Example1: Standard table&amp;nbsp; Example with Reading data from table MARA (General Article Data)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_5-1758108565208.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315800i07F43B3015B3444E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_5-1758108565208.png" alt="Naveen_Manda1_5-1758108565208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example 2 : Appending the data to Internal table&amp;nbsp; and display.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_6-1758108591369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315801iC27F5A828CFE6413/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_6-1758108591369.png" alt="Naveen_Manda1_6-1758108591369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_7-1758108597174.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315802i8CFB1C940E01F24A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_7-1758108597174.png" alt="Naveen_Manda1_7-1758108597174.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example 3 : Sorted table data display&lt;/P&gt;&lt;P&gt;a&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_8-1758108617398.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315803i744932AF52C9AB10/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_8-1758108617398.png" alt="Naveen_Manda1_8-1758108617398.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_9-1758108631753.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315804i4CF92573B8037186/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_9-1758108631753.png" alt="Naveen_Manda1_9-1758108631753.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example 4: Hashed table&amp;nbsp; data display&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_10-1758108672712.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315805iA9B989EB62A85384/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_10-1758108672712.png" alt="Naveen_Manda1_10-1758108672712.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_11-1758108689703.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315807i1B32F244E7A80768/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_11-1758108689703.png" alt="Naveen_Manda1_11-1758108689703.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Usage of Work area and Field Symbol&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_12-1758108819570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315810i6088F94CA9FD4D8F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_12-1758108819570.png" alt="Naveen_Manda1_12-1758108819570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example on using work area&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_13-1758108882570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315811i0C6CD3EACF49B88C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_13-1758108882570.png" alt="Naveen_Manda1_13-1758108882570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Result:&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_14-1758108907551.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315813i4B682EB91466D706/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_14-1758108907551.png" alt="Naveen_Manda1_14-1758108907551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example on Field-symbol&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_15-1758108922544.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315814iCDF320D3C5141D49/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_15-1758108922544.png" alt="Naveen_Manda1_15-1758108922544.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Result&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_16-1758108929662.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315815i165752184CDAE54F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_16-1758108929662.png" alt="Naveen_Manda1_16-1758108929662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Data manipulation in Internal Table&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_17-1758109058950.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315817i1F85F4150C9451BA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_17-1758109058950.png" alt="Naveen_Manda1_17-1758109058950.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_18-1758109085277.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315818iDA339EB04ED374E2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_18-1758109085277.png" alt="Naveen_Manda1_18-1758109085277.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Result&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_19-1758109115211.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315819iDC4023D92A11BA63/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_19-1758109115211.png" alt="Naveen_Manda1_19-1758109115211.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.Parallel Cursor&lt;/P&gt;&lt;P class=""&gt;Parallel cursor is a performance optimization technique used primarily to enhance the efficiency of programs involving nested loops, especially when dealing with large internal tables.&lt;/P&gt;&lt;P class=""&gt;Improve the performance of program.&lt;/P&gt;&lt;P class=""&gt;Decreases the CPU and memory consumption associated with extensive loop iterations.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_20-1758109428852.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315820i5BB1970AFD925C9D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_20-1758109428852.png" alt="Naveen_Manda1_20-1758109428852.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.Control Break Statements&lt;/P&gt;&lt;P class=""&gt;Control break statements are events inside the loop statement.&lt;/P&gt;&lt;P class=""&gt;There are 5 control break statements in ABAP.&lt;/P&gt;&lt;P class=""&gt;They are used within loop.(Except ON CHANGE OF which can be used outside the loop as well)&lt;/P&gt;&lt;P class=""&gt;AT FIRST - ENDAT&lt;/P&gt;&lt;P class=""&gt;AT NEW - ENDAT&lt;/P&gt;&lt;P class=""&gt;AT END OF - ENDAT&lt;/P&gt;&lt;P class=""&gt;AT LAST - ENDAT&lt;/P&gt;&lt;P class=""&gt;ON CHANGE OF&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;AT FIRST&lt;/STRONG&gt;: Will trigger at the first run of the loop.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;AT LAST&lt;/STRONG&gt;: Will trigger at the last run of the loop.&lt;/P&gt;&lt;P class=""&gt;The below 3 events are normally used when the table is sorted.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;AT END OF&lt;/STRONG&gt; : When we use At end for a field, it will trigger whenever there is any change in any of the fields from the left to that of the particular field. The trigger point will be the at the last occurrence &amp;nbsp;of the same value for the field.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;AT NEW&lt;/STRONG&gt;: When we use At new for a field, it will trigger whenever there is any change in any of the fields from the left to that of the particular field.The trigger point will be the at the first occurrence of the new value for the field.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;ON CHANGE OF&lt;/STRONG&gt;: On change of it triggers only when there is any change in the particular field.&lt;/P&gt;&lt;P class=""&gt;On change of can be used outside the loop too&lt;/P&gt;&lt;P&gt;Example code on Control Break Statements&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_21-1758109691186.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315823iDEAFFD3B746EF711/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_21-1758109691186.png" alt="Naveen_Manda1_21-1758109691186.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_22-1758110343651.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315828i4CDFEE4F508E0DBA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_22-1758110343651.png" alt="Naveen_Manda1_22-1758110343651.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_23-1758111321451.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315852i3AB448A890E5644E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_23-1758111321451.png" alt="Naveen_Manda1_23-1758111321451.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_24-1758111355776.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315853i28009934266C83BD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_24-1758111355776.png" alt="Naveen_Manda1_24-1758111355776.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_25-1758111369241.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315854i0BE3F2E936081D6F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_25-1758111369241.png" alt="Naveen_Manda1_25-1758111369241.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_26-1758111436649.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315855i2FAC36A6D4FC8826/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_26-1758111436649.png" alt="Naveen_Manda1_26-1758111436649.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_27-1758111491119.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315856i1FA3F44601ACE936/image-size/large?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_27-1758111491119.png" alt="Naveen_Manda1_27-1758111491119.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_28-1758111523266.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315857iB2D4FD3C559C0DD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_28-1758111523266.png" alt="Naveen_Manda1_28-1758111523266.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8. Messages&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;In classical ABAP reports, messages are used to communicate information, warnings, errors, or success statuses to the user.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;These messages are typically displayed on the screen or in the status bar, and their behaviour depends on the message type.&lt;/LI&gt;&lt;LI&gt;Message Types in ABAP&lt;/LI&gt;&lt;OL class=""&gt;&lt;LI&gt;Success - Type S - Displays the status of the program. ( Success message)&lt;/LI&gt;&lt;LI&gt;Error - Type E - An error message appears and the program stops.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Information - Type I - &amp;nbsp;The program is executed and information message&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;is displayed&lt;/LI&gt;&lt;LI&gt;Warning - Type W - This is used to display warning information for the user, but they don’t stop the program&lt;/LI&gt;&lt;LI&gt;Exit - Type X - The program terminates and the detailed information can be found in transaction ST22&lt;/LI&gt;&lt;LI&gt;Abort - Type&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;A - The message appears in a dialog box and the program terminates.&lt;/LI&gt;&lt;/OL&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Success Message: &lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Syntax : MESSAGE 'Success message: Operation successful!' TYPE ’S'.&lt;/P&gt;&lt;P class=""&gt;Output :&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_29-1758111602739.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315859iCFB8ED678CE35C85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_29-1758111602739.png" alt="Naveen_Manda1_29-1758111602739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Information Message&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Syntax:&lt;SPAN class=""&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/SPAN&gt;MESSAGE 'Informational message.' TYPE ‘I'.&lt;/P&gt;&lt;P class=""&gt;Output:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_30-1758111655869.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315861i8EE1D08FA281776B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_30-1758111655869.png" alt="Naveen_Manda1_30-1758111655869.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Warning Message:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Syntax: MESSAGE 'Warning message: Data inconsistent' TYPE ‘W'.&lt;/P&gt;&lt;P class=""&gt;Output&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_31-1758111690871.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315862i4B03DC77D41F1276/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_31-1758111690871.png" alt="Naveen_Manda1_31-1758111690871.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;Syntax: MESSAGE 'Warning message: Data inconsistent' TYPE 'W' DISPLAY LIKE ‘I'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_32-1758111702506.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315863i6DA6088B0C583CF1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_32-1758111702506.png" alt="Naveen_Manda1_32-1758111702506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Error Message: &lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Syntax:&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;MESSAGE 'Error Message: An error occurred during processing.' TYPE ‘E'.&lt;/P&gt;&lt;P class=""&gt;Output&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_33-1758111708996.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315864iFCB248395F3ED57E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_33-1758111708996.png" alt="Naveen_Manda1_33-1758111708996.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Abort Message &lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Syntax: MESSAGE 'Abort Message:&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;Program terminated due to critical error.' TYPE 'A'.&lt;/P&gt;&lt;P class=""&gt;Output:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_34-1758111727927.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315865iFADD59F0A0BC5864/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_34-1758111727927.png" alt="Naveen_Manda1_34-1758111727927.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Exit Message&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Syntax:&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;MESSAGE 'Exit Message: Critical error encountered!' TYPE 'X'.&lt;/P&gt;&lt;P class=""&gt;Output:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_35-1758111752493.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315866i38166B74C653E46B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_35-1758111752493.png" alt="Naveen_Manda1_35-1758111752493.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Creating Message through text messages in report&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;SE38—&amp;gt; In Menu bar select&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;GOTO —&amp;gt; Select text symbols —&amp;gt; enter text name&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_36-1758111791162.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315867i0C49138BAEC9E99F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Naveen_Manda1_36-1758111791162.png" alt="Naveen_Manda1_36-1758111791162.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Code: Message text-001 type 'S'.&lt;/P&gt;&lt;P class=""&gt;Output:&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Naveen_Manda1_37-1758111819713.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315868i6C65BC343DD12EFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Naveen_Manda1_37-1758111819713.png" alt="Naveen_Manda1_37-1758111819713.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks!!&lt;/P&gt;&lt;P&gt;Finally we covered working with internal tables, creating and populating data in report , work area&amp;nbsp; and field symbol usage , Parallel cursor usage, Control break statements, Messages&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/working-with-internal-tables-parallel-cursor-control-break-statements/ba-p/14220084"/>
    <published>2025-09-24T07:10:34.969000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/brf-object-creation-using-abap-z-report/ba-p/14190153</id>
    <title>BRF+ Object Creation using ABAP Z-Report</title>
    <updated>2025-09-24T07:11:38.092000+02:00</updated>
    <author>
      <name>manoj_sm</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/151098</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1738668106"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;When working with SAP BRF+ (Business Rule Framework Plus), &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Elements&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; are the most basic building blocks. They represent data fields such as numbers, text, or dates, and act as reusable components for structures, tables, functions, and rules. Without elements, we cannot define or process rules effectively in BRF+.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, we will learn how to create &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;BRF+ Elements programmatically&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; using ABAP. This provides a scalable way to automate the creation of data objects and integrate them into larger rule frameworks.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1542154601"&gt;&lt;SPAN&gt;Why Elements?&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Describes data types of the variable. They are the data carriers helping in signature or context of a function,&amp;nbsp;variables in a rule or rulesets, building blocks for Decision tables, Etc. You can create data objects by defining&amp;nbsp;attributes like element type, length, decimals or you can directly bind to existing DDIC elements.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Reusability&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Once created, elements can be used in multiple structures and rules.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Flexibility&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Programmatic creation ensures consistency across environments.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1345641096"&gt;&lt;SPAN&gt;ABAP Program to Create Elements&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Below is a sample ABAP program (&lt;/SPAN&gt;&lt;SPAN&gt;ZDEMO_BRF_APP&lt;/SPAN&gt;&lt;SPAN&gt;) that:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;SPAN&gt;Creates a BRF+ Application.&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;SPAN&gt;Defines three Elements (&lt;/SPAN&gt;&lt;SPAN&gt;ELEMENT_1&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;ELEMENT_2&lt;/SPAN&gt;&lt;SPAN&gt;, and &lt;/SPAN&gt;&lt;SPAN&gt;CARRID&lt;/SPAN&gt;&lt;SPAN&gt;).&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*&amp;amp;---------------------------------------------------------------------*
*&amp;amp; Report ZDEMO_BRF_APP
*&amp;amp;---------------------------------------------------------------------*
*&amp;amp;
*&amp;amp;---------------------------------------------------------------------*
REPORT zdemo_brf_app.

DATA: lo_factory           TYPE REF TO if_fdt_factory,
      lo_application       TYPE REF TO if_fdt_application,
      lt_message           TYPE if_fdt_types=&amp;gt;t_message,
      lv_message           TYPE string,
      lv_boolean           TYPE abap_bool,
      lv_demo_appl_id      TYPE if_fdt_types=&amp;gt;id,
      lv_string            TYPE string,
      lo_element_1         TYPE REF TO if_fdt_element,
      lo_element_2         TYPE REF TO if_fdt_element,
      lo_element_3         TYPE REF TO if_fdt_element,
      lo_table             TYPE REF TO if_fdt_table,
      lo_table_1           TYPE REF TO if_fdt_table,
      lo_structure         TYPE REF TO if_fdt_structure,
      lv_element1_id       TYPE if_fdt_types=&amp;gt;id,
      lv_element2_id       TYPE if_fdt_types=&amp;gt;id,
      lv_element3_id       TYPE if_fdt_types=&amp;gt;id,
      lv_input_number_id   TYPE if_fdt_types=&amp;gt;id,
      lv_result_counter_id TYPE if_fdt_types=&amp;gt;id,
     

FIELD-SYMBOLS:
  &amp;lt;ls_message&amp;gt; TYPE if_fdt_types=&amp;gt;s_message,
  &amp;lt;lv_value&amp;gt;   TYPE any.


PARAMETERS: pv_lcl  TYPE abap_bool RADIOBUTTON GROUP r00 DEFAULT 'X',
            pv_sys  TYPE abap_bool RADIOBUTTON GROUP r00,
            pv_mstr TYPE abap_bool RADIOBUTTON GROUP r00,
            pv_name TYPE char30.
*           p_ele_01  TYPE i DEFAULT 5,
*            p_ele_02  TYPE i DEFAULT 4,
*            p_ele_03  TYPE i DEFAULT 8,
*            p_ele_04  TYPE i DEFAULT 3,
*            p_ele_05  TYPE i DEFAULT 13,
*            p_ele_06  TYPE i DEFAULT 2.
*           pv_ele   TYPE char20,
*           pv_str TYPE char20,
*           pv_tab TYPE char20.

IF pv_name IS NOT INITIAL AND pv_lcl IS NOT INITIAL OR pv_sys IS NOT INITIAL OR pv_mstr IS NOT INITIAL.

* get a reference to the instance of the factory
  lo_factory = cl_fdt_factory=&amp;gt;if_fdt_factory~get_instance( ).

* =============================================================
* definition of the new application:
* get an initial application object from the factory
  lo_application = lo_factory-&amp;gt;get_application( ).
  lo_application-&amp;gt;if_fdt_transaction~enqueue( ).
* set values for the application, especially the name is important
* You need to have a unique name for each application, here we use the
* FDT Service class method to get the unique name.
  lo_application-&amp;gt;set_application_component( 'BC' ).        "#EC NOTEXT
  lo_application-&amp;gt;set_software_component( 'SAP_BASIS' ).    "#EC NOTEXT
  lo_application-&amp;gt;set_development_package( '$TMP' ).        "#EC NOTEXT
*lo_application-&amp;gt;if_fdt_admin_data~set_name( cl_fdt_services=&amp;gt;get_unique_name( ) ).
  lo_application-&amp;gt;if_fdt_admin_data~set_name( pv_name ).


* In FDT terms there are 3 different type of Applications, Local application,
* system pplication and MasterData Application. The following lines shows how you
* can create local Application, masterdata Application and system Application.
  IF pv_lcl EQ abap_true.
    lo_application-&amp;gt;create_local_application( ).
  ELSEIF pv_sys EQ abap_true.
    lo_application-&amp;gt;create_system_application( ).
  ELSEIF pv_mstr EQ abap_true.
    lo_application-&amp;gt;create_masterdata_application( ).
  ENDIF.
  lo_application-&amp;gt;if_fdt_transaction~activate(
             IMPORTING et_message           = lt_message
                       ev_activation_failed = lv_boolean ).
  IF lv_boolean EQ abap_true.
*     for some reason the activation failed -&amp;gt; individual handling needed
    lo_application-&amp;gt;if_fdt_transaction~dequeue( ).
  ELSE.
    lo_application-&amp;gt;if_fdt_transaction~save( ).
    lo_application-&amp;gt;if_fdt_transaction~dequeue( ).
*     usually it makes sense to store the id for later access to the application
    lv_demo_appl_id = lo_application-&amp;gt;mv_id.
  ENDIF.
  WRITE: 'The ID of the application created is: ', lv_demo_appl_id. "#EC NOTEXT
ELSE.
  MESSAGE 'Provide all the required information' TYPE 'E'.
ENDIF.
*for creating Element,Structure,Table by Data Object


lo_factory = cl_fdt_factory=&amp;gt;if_fdt_factory~get_instance( lv_demo_appl_id ).
*                          if_fdt_constants=&amp;gt;gc_application_tmp  ).
* Note, that you are not required to use an application as input; however,
* we recommend to do so and work with a specific application instead of
* the generic local FDT applications.
*------------Element
lo_element_1 ?= lo_factory-&amp;gt;get_data_object(
    iv_data_object_type = if_fdt_constants=&amp;gt;gc_data_object_type_element ).
lo_element_1-&amp;gt;if_fdt_transaction~enqueue( ).
lo_element_1-&amp;gt;if_fdt_admin_data~set_name( 'ELEMENT_1' ).

* set the element-type (see if_fdt_constants=&amp;gt;gc_element_type_* for
* a list of available element types)
lo_element_1-&amp;gt;set_element_type( if_fdt_constants=&amp;gt;gc_element_type_number ).

******************************************************************************
* Alternately user can create an element using the service clas method
* CL_FDT_CONVENIENCE=&amp;gt;CREATE_ELEMENT as follows.
*
* cl_fdt_convenience=&amp;gt;create_element( EXPORTING iv_name = 'DEMO_ELEMENT_1'
*                                              iv_application_id = if_fdt_constants=&amp;gt;gc_application_tmp
*                                              iv_element_type   = if_fdt_constants=&amp;gt;gc_element_type_number
*                                              iv_activate       = ABAP_false
*                                    IMPORTING
*                                              eo_element        = lo_element ).
*******************************************************************************
* Set some attributes for the element.
lo_element_1-&amp;gt;set_element_type_attributes(
  EXPORTING
    iv_length        = 6
    iv_decimals      = 2
    iv_only_positive = abap_false ).

lo_element_1-&amp;gt;if_fdt_transaction~activate(
  IMPORTING
    et_message           = lt_message
    ev_activation_failed = lv_boolean ).
IF lv_boolean EQ abap_true.
* for some reason the activation failed -&amp;gt; individual handling needed
  lo_element_1-&amp;gt;if_fdt_transaction~dequeue( ).
ELSE.
  lo_element_1-&amp;gt;if_fdt_transaction~save( ).
  lo_element_1-&amp;gt;if_fdt_transaction~dequeue( ).
* usually it makes sense to store the id for later access
  lv_element1_id = lo_element_1-&amp;gt;mv_id.

  ls_element-position = 1.
  ls_element-element_id = lv_element1_id.
  APPEND ls_element TO lts_element.
ENDIF.

* Create another element
lo_element_2 ?= lo_factory-&amp;gt;get_data_object(
    iv_data_object_type = if_fdt_constants=&amp;gt;gc_data_object_type_element ).
lo_element_2-&amp;gt;if_fdt_transaction~enqueue( ).
lo_element_2-&amp;gt;if_fdt_admin_data~set_name( 'ELEMENT_2' ).



* set the element-type (see if_fdt_constants=&amp;gt;gc_element_type_* for
* a list of available element types)
lo_element_2-&amp;gt;set_element_type( if_fdt_constants=&amp;gt;gc_element_type_number ).

lo_element_2-&amp;gt;if_fdt_transaction~activate(
  IMPORTING
    et_message           = lt_message
    ev_activation_failed = lv_boolean ).
IF lv_boolean EQ abap_true.
* for some reason the activation failed -&amp;gt; individual handling needed
  lo_element_2-&amp;gt;if_fdt_transaction~dequeue( ).
ELSE.
  lo_element_2-&amp;gt;if_fdt_transaction~save( ).
  lo_element_2-&amp;gt;if_fdt_transaction~dequeue( ).
* usually it makes sense to store the id for later access to the application
  lv_element2_id = lo_element_2-&amp;gt;mv_id.
  ls_element-position = 2.
  ls_element-element_id = lv_element2_id.
  APPEND ls_element TO lts_element.
ENDIF.

* create a third element
lo_element_3 ?= lo_factory-&amp;gt;get_data_object(
    iv_data_object_type = if_fdt_constants=&amp;gt;gc_data_object_type_element ).
lo_element_3-&amp;gt;if_fdt_transaction~enqueue( ).
lo_element_3-&amp;gt;if_fdt_admin_data~set_name( ' CARRID ' ).
lo_element_3-&amp;gt;set_element_type( if_fdt_constants=&amp;gt;gc_element_type_number ).

lo_element_3-&amp;gt;if_fdt_transaction~activate(
  IMPORTING
    et_message           = lt_message
    ev_activation_failed = lv_boolean ).
IF lv_boolean EQ abap_true.
* for some reason the activation failed -&amp;gt; individual handling needed
  lo_element_3-&amp;gt;if_fdt_transaction~dequeue( ).
ELSE.
  lo_element_3-&amp;gt;if_fdt_transaction~save( ).
  lo_element_3-&amp;gt;if_fdt_transaction~dequeue( ).
* usually it makes sense to store the id for later access to the application
  lv_element3_id = lo_element_3-&amp;gt;mv_id.
  ls_element-position = 3.
  ls_element-element_id = lv_element3_id.
  APPEND ls_element TO lts_element.
ENDIF.
* WRITE: / lo_element-&amp;gt;mv_id .
lv_string = lo_element_1-&amp;gt;if_fdt_admin_data~to_string(  iv_mode = if_fdt_constants=&amp;gt;gc_tostring_mode_complete ).
WRITE : / 'The result of to string method call Element: ' , lv_string. "#EC NOTEXT&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1149127591"&gt;&lt;SPAN&gt;Execution &amp;amp; Output&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;When you execute the above ABAP report, the newly created &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Application and Elements&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; will immediately be reflected in the BRF+ Workbench (/nBRF+). You can navigate to the workbench to verify that the application &lt;/SPAN&gt;&lt;SPAN&gt;ZDEMO_APP&lt;/SPAN&gt;&lt;SPAN&gt; and its elements have been created successfully.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 183254.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315883iB6D2B340C3182643/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 183254.png" alt="Screenshot 2025-09-17 183254.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 183237.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315886i6FC868376F4CF813/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 183237.png" alt="Screenshot 2025-09-17 183237.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 183157.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315885i9101A9EC7B85CA3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 183157.png" alt="Screenshot 2025-09-17 183157.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 183106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315887iA7BBC93F259DB8BD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 183106.png" alt="Screenshot 2025-09-17 183106.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After running the program, you will see system-generated IDs for each element created. These IDs are crucial when referencing the elements in Structures, Rules, or Functions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-952614086"&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In the next part of this blog series, we will explore how to create &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Structures&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; using these Elements. Subsequent blogs will also cover &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Table, DB Lookup, Loop, Formula, Rule, and Function&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; in detail.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/brf-object-creation-using-abap-z-report/ba-p/14190153"/>
    <published>2025-09-24T07:11:38.092000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/maintain-file-in-web-repository/ba-p/14223659</id>
    <title>Maintain File In WEB Repository</title>
    <updated>2025-09-24T12:44:39.921000+02:00</updated>
    <author>
      <name>Nayanakumar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1490076</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Transaction code&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SMW0&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;in SAP ABAP is the&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Web Repository&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;. Its primary purpose is to&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;manage binary and text-based objects&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;that are used by various applications within the SAP system, particularly those related to web-based technologies and user interfaces.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Explanation&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The main types of objects you can manage with SMW0 are:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Binary Data for&amp;nbsp;WebRFC&amp;nbsp;Applications:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;This is the most common use case. It's for uploading and storing binary files like images, logos, sound files, or other media. These objects can then be referenced and displayed in ABAP programs, SAP GUI screens, or used in forms like Smart Forms.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;HTML Templates for&amp;nbsp;WebRFC&amp;nbsp;Applications:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;This allows developers to store HTML files or templates. These templates can be used to generate dynamic web pages or for sending rich HTML emails from ABAP programs.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;XSLT Programs for Transformation:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;You can also store XSLT (eXtensible&amp;nbsp;Stylesheet Language Transformations) files here, which are used to transform XML documents.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Common Use Cases for SMW0&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Uploading Company Logos:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;This is a very frequent use of SMW0. Developers upload a company logo (e.g., in&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.BMP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;or&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;.GIF&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;format) as binary data to the repository. The logo is then configured to appear on the SAP Easy Access screen or on reports and forms.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Displaying Images in ABAP Programs:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;You can use SMW0 to store images and then display them in your custom ABAP programs by referencing the stored object. This is typically done with ABAP GUI controls, such as&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;CL_GUI_PICTURE&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Creating Predefined Format Of Files:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;For eg. In the Excel file need to make few fields as char type in that case&amp;nbsp; we will use the web repository.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;Key Points for ABAP Developers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Object Naming:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Objects in SMW0 have a unique name. It's a best practice to use a customer namespace (starting with 'Z' or 'Y') to avoid conflicts with standard SAP objects.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;MIME Types:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Before uploading a file, you must ensure that its&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MIME type&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;(e.g.,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;image/jpeg&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;for a JPEG image) is maintained in the system settings within SMW0.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Transportability:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Objects created in SMW0 are transportable. You can assign them to a transport request to move them between development, quality assurance, and production systems.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Steps To add the File in Web repository.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Start the Transaction: Go to transaction code SMW0.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Select Binary Data: On the initial screen, select the radio button for "Binary data for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;WebRFC&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;applications" and click the Execute button.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_0-1758518731700.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317652i5873D615E60173C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_0-1758518731700.png" alt="Nayanakumar_0-1758518731700.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define Mime types.&lt;/P&gt;&lt;P&gt;In the Settings-&amp;gt;Define Mime Types&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_1-1758518952760.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317653i17915CD4AE3E99B8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_1-1758518952760.png" alt="Nayanakumar_1-1758518952760.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Click on create button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_3-1758519203728.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317655i1B6656F87306C8DD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_3-1758519203728.png" alt="Nayanakumar_3-1758519203728.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_4-1758519272477.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317656iF69911FD379115CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_4-1758519272477.png" alt="Nayanakumar_4-1758519272477.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Create a New Object: Click on the Create button (or press F5).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Define Object Details: A dialog box will appear where you'll need to enter the following information:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;OBJID: This is the unique identifier for your file, such as ZSO_UPLOAD_TEMPLATE.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Description: A short, descriptive text for the object .&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Save the Entry: Save the object definition.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_5-1758519355940.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317657iCBA701FABCCCADA8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_5-1758519355940.png" alt="Nayanakumar_5-1758519355940.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Import the File: With your newly created object selected, click the Import button.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Choose the File: A file selection dialog will pop up, allowing you to browse your local computer and choose the file you want to upload.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Save the Changes: After selecting the file, save your changes. The file content is now stored in the WWWDATA table and is linked to the OBJID you created.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_6-1758519486366.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317659iFDBAA248B76EF9F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_6-1758519486366.png" alt="Nayanakumar_6-1758519486366.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The entries are added in wwwdata table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_7-1758519645707.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317660i467504ED62843BF0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_7-1758519645707.png" alt="Nayanakumar_7-1758519645707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Download the Filed from WWWDATA Table Using report Program.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA: lv_objid   TYPE wwwdatatab-objid VALUE 'ZN_UPLOAD_TEMPLATE', 
      ls_objdata TYPE wwwdatatab, 
      lv_file    TYPE string, 
      lv_msg     TYPE string, 
      lv_file1   TYPE rlgrap-filename, 
      lv_subrc   TYPE sy-subrc. 
 
" Get desktop path 
CALL METHOD cl_gui_frontend_services=&amp;gt;get_desktop_directory 
  CHANGING 
    desktop_directory = lv_file. 
 
CONCATENATE lv_file 'C:\sales\order455.xlsx' INTO lv_file1. 

" Read object metadata 
SELECT SINGLE relid objid INTO CORRESPONDING FIELDS OF ls_objdata 
  FROM wwwdata 
  WHERE srtf2 = 0 AND relid = 'MI' AND objid = lv_objid. 
 
IF sy-subrc = 0. 
  " Download the file 
  CALL FUNCTION 'DOWNLOAD_WEB_OBJECT' 
    EXPORTING 
      key         = ls_objdata 
      destination = lv_file1 
    IMPORTING 
      rc          = lv_subrc. 

   IF lv_subrc = 0. 
     lv_msg =  'Template downloaded sucessfully'. 
     CONCATENATE lv_msg lv_file1 INTO lv_msg. 
     MESSAGE lv_msg TYPE 'S'. 
  ELSE. 
    MESSAGE 'Download failed.' TYPE 'E'. 
  ENDIF. 
ELSE. 
  MESSAGE 'Template not found in repository.' TYPE 'E'. 
ENDIF. &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_8-1758520006811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317661i6B865850387D2632/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_8-1758520006811.png" alt="Nayanakumar_8-1758520006811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Conclusion.&lt;/P&gt;&lt;P&gt;SMW0 is a specialized SAP transaction code for managing non-transactional files like images and HTML templates. Its primary use case is to store and make these files available for display and use across various SAP applications, particularly for branding and UI purposes.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/maintain-file-in-web-repository/ba-p/14223659"/>
    <published>2025-09-24T12:44:39.921000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/brf-object-creation-using-abap-z-report-part-2/ba-p/14220395</id>
    <title>BRF+ Object Creation using ABAP Z-Report, Part 2</title>
    <updated>2025-09-25T06:39:29.292000+02:00</updated>
    <author>
      <name>manoj_sm</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/151098</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;To create&amp;nbsp;&lt;STRONG&gt;BRF+ Elements programmatically&lt;/STRONG&gt;&amp;nbsp;using ABAP Refer Previous blog&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;BRF+ Object Creation using ABAP Z-Report&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, we will learn how to create&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;BRF+ Structures and Table type programmatically&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;using ABAP. This provides a scalable way to automate the creation of data objects and integrate them into larger rule frameworks.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Structure Creation:&lt;/STRONG&gt;&amp;nbsp;The same application should be used to create the structure.&lt;BR /&gt;It is not necessary to build a structure if our result contains just one column. There is also no need to create a structure if the output for a single condition is a single row.&amp;nbsp;If more than one column appears in our result, we should make a structure with all of those columns. Additionally, a structure must be shown if the output consists of multiple rows.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Table type Creation:&lt;/STRONG&gt;&amp;nbsp;In order to have multiple result rows based on a single condition in our decision table, we can create a table in the same application. Therefore, table creation is necessary in our case.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1345641096" id="toc-hId-1760834658"&gt;&lt;SPAN&gt;ABAP Program to Create Structure and Table type&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Below is a sample ABAP program (&lt;/SPAN&gt;&lt;SPAN&gt;ZDEMO_BRF_APP&lt;/SPAN&gt;&lt;SPAN&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT zdemo_brf_app.

DATA: lo_factory           TYPE REF TO if_fdt_factory,
      lo_application       TYPE REF TO if_fdt_application,
      lt_message           TYPE if_fdt_types=&amp;gt;t_message,
      lv_message           TYPE string,
      lv_boolean           TYPE abap_bool,
      lv_demo_appl_id      TYPE if_fdt_types=&amp;gt;id,
      lv_string            TYPE string,
      lo_element_1         TYPE REF TO if_fdt_element,
      lo_element_2         TYPE REF TO if_fdt_element,
      lo_element_3         TYPE REF TO if_fdt_element,
      lo_table             TYPE REF TO if_fdt_table,
      lo_table_1           TYPE REF TO if_fdt_table,
      lo_structure         TYPE REF TO if_fdt_structure,
      lv_element1_id       TYPE if_fdt_types=&amp;gt;id,
      lv_element2_id       TYPE if_fdt_types=&amp;gt;id,
      lv_element3_id       TYPE if_fdt_types=&amp;gt;id,
      lv_input_number_id   TYPE if_fdt_types=&amp;gt;id,
      lv_result_counter_id TYPE if_fdt_types=&amp;gt;id,
     

FIELD-SYMBOLS:
  &amp;lt;ls_message&amp;gt; TYPE if_fdt_types=&amp;gt;s_message,
  &amp;lt;lv_value&amp;gt;   TYPE any.


PARAMETERS: pv_lcl  TYPE abap_bool RADIOBUTTON GROUP r00 DEFAULT 'X',
            pv_sys  TYPE abap_bool RADIOBUTTON GROUP r00,
            pv_mstr TYPE abap_bool RADIOBUTTON GROUP r00,
            pv_name TYPE char30.
*           p_ele_01  TYPE i DEFAULT 5,
*            p_ele_02  TYPE i DEFAULT 4,
*            p_ele_03  TYPE i DEFAULT 8,
*            p_ele_04  TYPE i DEFAULT 3,
*            p_ele_05  TYPE i DEFAULT 13,
*            p_ele_06  TYPE i DEFAULT 2.
*           pv_ele   TYPE char20,
*           pv_str TYPE char20,
*           pv_tab TYPE char20.

IF pv_name IS NOT INITIAL AND pv_lcl IS NOT INITIAL OR pv_sys IS NOT INITIAL OR pv_mstr IS NOT INITIAL.

* get a reference to the instance of the factory
  lo_factory = cl_fdt_factory=&amp;gt;if_fdt_factory~get_instance( ).

* =============================================================
* definition of the new application:
* get an initial application object from the factory
  lo_application = lo_factory-&amp;gt;get_application( ).
  lo_application-&amp;gt;if_fdt_transaction~enqueue( ).
* set values for the application, especially the name is important
* You need to have a unique name for each application, here we use the
* FDT Service class method to get the unique name.
  lo_application-&amp;gt;set_application_component( 'BC' ).        "#EC NOTEXT
  lo_application-&amp;gt;set_software_component( 'SAP_BASIS' ).    "#EC NOTEXT
  lo_application-&amp;gt;set_development_package( '$TMP' ).        "#EC NOTEXT
*lo_application-&amp;gt;if_fdt_admin_data~set_name( cl_fdt_services=&amp;gt;get_unique_name( ) ).
  lo_application-&amp;gt;if_fdt_admin_data~set_name( pv_name ).


* In FDT terms there are 3 different type of Applications, Local application,
* system pplication and MasterData Application. The following lines shows how you
* can create local Application, masterdata Application and system Application.
  IF pv_lcl EQ abap_true.
    lo_application-&amp;gt;create_local_application( ).
  ELSEIF pv_sys EQ abap_true.
    lo_application-&amp;gt;create_system_application( ).
  ELSEIF pv_mstr EQ abap_true.
    lo_application-&amp;gt;create_masterdata_application( ).
  ENDIF.
  lo_application-&amp;gt;if_fdt_transaction~activate(
             IMPORTING et_message           = lt_message
                       ev_activation_failed = lv_boolean ).
  IF lv_boolean EQ abap_true.
*     for some reason the activation failed -&amp;gt; individual handling needed
    lo_application-&amp;gt;if_fdt_transaction~dequeue( ).
  ELSE.
    lo_application-&amp;gt;if_fdt_transaction~save( ).
    lo_application-&amp;gt;if_fdt_transaction~dequeue( ).
*     usually it makes sense to store the id for later access to the application
    lv_demo_appl_id = lo_application-&amp;gt;mv_id.
  ENDIF.
  WRITE: 'The ID of the application created is: ', lv_demo_appl_id. "#EC NOTEXT
ELSE.
  MESSAGE 'Provide all the required information' TYPE 'E'.
ENDIF.
*for creating Element,Structure,Table by Data Object


lo_factory = cl_fdt_factory=&amp;gt;if_fdt_factory~get_instance( lv_demo_appl_id ).
* =============================================================
* definition of a data object structure:
* get an initial data object structure from the factory
lo_structure ?= lo_factory-&amp;gt;get_data_object(
    iv_data_object_type = if_fdt_constants=&amp;gt;gc_data_object_type_structure ).
lo_structure-&amp;gt;if_fdt_transaction~enqueue( ).
lo_structure-&amp;gt;if_fdt_admin_data~set_name( 'STRUCTURE' ).
lo_structure-&amp;gt;set_elements( lts_element ).
**********************************************************************************
* Alternately user can create a structure by using the service class method,
* CL_FDT_CONVENIENCE=&amp;gt;CREATE_STRUCTURE as follows.
* Cl_fdt_convenience=&amp;gt;create_structure( EXPORTING iv_name = 'DEMO_STRUCTURE_1'
*                                                iv_application_id = if_fdt_constants=&amp;gt;gc_application_tmp
*                                                it_element        =  lts_element
*                                                iv_activate       = ABAP_false
*                                      IMPORTING
*                                                eo_structure      = lo_structure ).
***********************************************************************************

lo_structure-&amp;gt;if_fdt_transaction~activate(
  IMPORTING
    et_message           = lt_message
    ev_activation_failed = lv_boolean ).


IF lv_boolean EQ abap_true.
  LOOP AT lt_message ASSIGNING &amp;lt;ls_message&amp;gt;.
    MESSAGE ID &amp;lt;ls_message&amp;gt;-msgid TYPE &amp;lt;ls_message&amp;gt;-msgty NUMBER &amp;lt;ls_message&amp;gt;-msgno
        WITH &amp;lt;ls_message&amp;gt;-msgv1 &amp;lt;ls_message&amp;gt;-msgv2 &amp;lt;ls_message&amp;gt;-msgv3 &amp;lt;ls_message&amp;gt;-msgv4
        INTO lv_message.
  ENDLOOP.
  WRITE : lv_message.
*         for some reason the activation failed -&amp;gt; individual handling needed
  lo_structure-&amp;gt;if_fdt_transaction~dequeue( ).
ELSE.
  lo_structure-&amp;gt;if_fdt_transaction~save( ).
  lo_structure-&amp;gt;if_fdt_transaction~dequeue( ).
*         usually it makes sense to store the id for later access to the application
  lv_structure_id = lo_structure-&amp;gt;mv_id.
ENDIF.
*   WRITE: / lo_structure-&amp;gt;mv_id .
lv_string = lo_structure-&amp;gt;if_fdt_admin_data~to_string(  iv_mode = if_fdt_constants=&amp;gt;gc_tostring_mode_complete ).
WRITE : / 'The result of to string method call Structure: ' , lv_string. "#EC NOTEXT
* =============================================================
* definition of a data object table:
*     get an initial data object Table from the factory
lo_table ?= lo_factory-&amp;gt;get_data_object(
    iv_data_object_type = if_fdt_constants=&amp;gt;gc_data_object_type_table ).
lo_table-&amp;gt;if_fdt_transaction~enqueue( ).
lo_table-&amp;gt;if_fdt_admin_data~set_name( 'TABLE' ).
lo_table-&amp;gt;set_structure( lv_structure_id ).
INSERT lo_table-&amp;gt;mv_id INTO TABLE lts_context_id.
***********************************************************************
* Alternately user can create a Table by using the service class method,
* CL_FDT_CONVENIENCE=&amp;gt;CREATE_TABLE as follows.
* cl_fdt_convenience=&amp;gt;create_table( EXPORTING iv_name = 'DEMO_TABLE_1'
*                                            iv_structure_name = 'DEMO_STRUCTURE_1'
*                                            iv_application_id = if_fdt_constants=&amp;gt;gc_application_tmp
*                                            it_element        = its_element
*                                            iv_activate       = ABAP_false
*                                  IMPORTING
*                                            eo_table          = lo_table ).
***********************************************************************



lo_table-&amp;gt;if_fdt_transaction~activate(
  IMPORTING
    et_message           = lt_message
    ev_activation_failed = lv_boolean ).
IF lv_boolean EQ abap_true.
*        for some reason the activation failed -&amp;gt; individual handling needed
  lo_table-&amp;gt;if_fdt_transaction~dequeue( ).
ELSE.
  lo_table-&amp;gt;if_fdt_transaction~save( ).
  lo_table-&amp;gt;if_fdt_transaction~dequeue( ).
*        usually it makes sense to store the id for later access to the application

ENDIF.
*   WRITE: / lo_table-&amp;gt;mv_id .
lv_string = lo_table-&amp;gt;if_fdt_admin_data~to_string(  iv_mode = if_fdt_constants=&amp;gt;gc_tostring_mode_complete ).
WRITE : / 'The result of to_string method call Table: ' , lv_string. "#EC NOTEXT


* cl_fdt_convenience=&amp;gt;create_table( EXPORTING iv_application_id = if_fdt_constants=&amp;gt;gc_application_tmp
*                                                iv_element_type   = if_fdt_constants=&amp;gt;gc_data_object_type_table
*                                                iv_activate       = abap_false
*                                                iv_name           = 'RESULT_COUNTER'
*                                      IMPORTING eo_element        = lo_result_counter ).
*
*  INSERT lo_result_counter-&amp;gt;mv_id INTO TABLE lts_context_id.
*TYPES: BEGIN OF ty_element ,
*  name TYPE if_fdt_types=&amp;gt;name,
*  lv_element type if_fdt_types=&amp;gt;element_type,
*  END OF ty_element.
*DATA: lt_element TYPE TABLE OF ty_element,
*      lss_element TYPE ty_element.
*  lss_element-name = 'SFLIGHT_TAB'.
*  lss_element-lv_element = if_fdt_constants=&amp;gt;gc_data_object_type_table.
*  APPEND lss_element TO lt_element.


lo_table_1 ?= lo_factory-&amp;gt;get_data_object(
    iv_data_object_type = if_fdt_constants=&amp;gt;gc_data_object_type_table ).
lo_table_1-&amp;gt;if_fdt_transaction~enqueue( ).
lo_table_1-&amp;gt;if_fdt_admin_data~set_name( 'SFLIGHT_TAB' ).
lo_table_1-&amp;gt;set_structure( lv_result_table_id ).
APPEND lo_table_1-&amp;gt;mv_id TO lts_context_id.

lo_table_1-&amp;gt;if_fdt_transaction~activate(
  IMPORTING
    et_message           = lt_message
    ev_activation_failed = lv_boolean ).
IF lv_boolean EQ abap_true.
*        for some reason the activation failed -&amp;gt; individual handling needed
  lo_table_1-&amp;gt;if_fdt_transaction~dequeue( ).
ELSE.
  lo_table_1-&amp;gt;if_fdt_transaction~save( ).
  lo_table_1-&amp;gt;if_fdt_transaction~dequeue( ).
*        usually it makes sense to store the id for later access to the application

ENDIF.
*   WRITE: / lo_table-&amp;gt;mv_id .
lv_string = lo_table_1-&amp;gt;if_fdt_admin_data~to_string(  iv_mode = if_fdt_constants=&amp;gt;gc_tostring_mode_complete ).
WRITE : / 'The result of to_string method call Table: ' , lv_string. "#EC NOTEXT

*
*  cl_fdt_convenience=&amp;gt;create_table(
*    EXPORTING
*      iv_name           =  'RESULT_TABLE'                " Name
*      iv_structure_name = lv_name
*      iv_application_id = if_fdt_constants=&amp;gt;gc_application_tmp                " Universal Unique Identifier
*      it_element        = lt_element              " Elements
*      iv_activate       = abap_true        " Activate changes?
*    IMPORTING
**      ev_table_id       =                  " Universal Unique Identifier
*      eo_table          = lo_result_table                " FDT: Data Object of Type Table
*  ).
*  CATCH cx_fdt_input. " FDT: Invalid Input&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1149127591" id="toc-hId-1564321153"&gt;&lt;SPAN&gt;Execution &amp;amp; Output&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;When you execute the above ABAP report, the newly created&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Application , Structure and Table&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;will immediately be reflected in the BRF+ Workbench (/nBRF+). You can navigate to the workbench to verify that the application&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;ZDEMO_APP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;and its elements have been created successfully.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 183106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316035i340B5B5D75B3E0F2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 183106.png" alt="Screenshot 2025-09-17 183106.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 220313.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316034iB705E65CA51EB4DB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 220313.png" alt="Screenshot 2025-09-17 220313.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 220331.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316037iD47E80206F81B84C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 220331.png" alt="Screenshot 2025-09-17 220331.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-17 220409.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316038iCC9677B2BEC3EEAA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-17 220409.png" alt="Screenshot 2025-09-17 220409.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After running the program, you will see system-generated IDs for each element created. These IDs are crucial when referencing the elements in Structures, Rules, or Functions.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-952614086" id="toc-hId-1367807648"&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In the next part of this blog series, we will explore how to create&amp;nbsp;&lt;STRONG&gt;DB Lookup, Loop, Formula, Rule, and Function in&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;Subsequent blogs &lt;/SPAN&gt;&lt;SPAN&gt;in detail.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/brf-object-creation-using-abap-z-report-part-2/ba-p/14220395"/>
    <published>2025-09-25T06:39:29.292000+02:00</published>
  </entry>
</feed>
