<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Development-blog-posts.xml</id>
  <title>SAP Community - ABAP Development</title>
  <updated>2025-08-07T14:00:04.705842+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Development/pd-p/833755570260738661924709785639136" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Development blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/bdc-batch-data-communication-using-session-method-and-call-transaction/ba-p/14141453</id>
    <title>BDC Batch Data Communication using Session Method  And Call Transaction  Method</title>
    <updated>2025-07-02T14:14:43.654000+02:00</updated>
    <author>
      <name>manijangiti</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2174619</uri>
    </author>
    <content>&lt;P&gt;This Blog provides an overview of BDC (Batch Data Communication) using the Session Method. BDC is a classic data migration technique in SAP. The Session Method is suitable for large volumes of data and allows better error handling&lt;BR /&gt;&lt;BR /&gt;For Recording the Transaction T code: &lt;STRONG&gt;SHDB&lt;BR /&gt;&lt;/STRONG&gt;Batch Input Sessions&lt;STRONG&gt;:&amp;nbsp; SM35&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;1.Session Method&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZBDC_SESSIONMETHOD_MA.

"Type declaration for customer structure
TYPES: BEGIN OF ty_customer,
         kunnr TYPE kunnr,         " Customer Number
         name1 TYPE name1_gp,      " Name
         ort01 TYPE ort01,         " City
       END OF ty_customer.

"Internal tables and variables
DATA: it_customer TYPE TABLE OF ty_customer,  " Internal table to hold customer data
      wa_customer TYPE ty_customer,           " Work area
      it_bdcdata  TYPE TABLE OF bdcdata,      " BDC table
      wa_bdcdata  TYPE bdcdata,               " BDC work area
      v_file      TYPE string.                " File path variable

DATA: p_pp TYPE string.                       " Temporary file path variable

"BDC session name (used in SM35)
DATA: lv_group TYPE apqi-groupid VALUE 'ZCUS_UPLOAD'.

"Selection screen to get file path input
PARAMETERS: p_file TYPE rlgrap-filename OBLIGATORY.

"AT SELECTION SCREEN: F4 help to choose file
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING file_name = p_file.

"START OF SELECTION
START-OF-SELECTION.

"Move user-selected file to internal variable
p_pp = p_file.

"Upload flat file with customer data
CALL FUNCTION 'GUI_UPLOAD'
  EXPORTING
    filename            = p_pp
    filetype            = 'ASC'
    has_field_separator = '|'        " Pipe delimiter
  TABLES
    data_tab = it_customer.

"Check if file has data
IF it_customer IS INITIAL.
  WRITE: / 'No data found in file.'.
  EXIT.
ENDIF.

"Open BDC session
CALL FUNCTION 'BDC_OPEN_GROUP'
  EXPORTING
    client   = sy-mandt
    group    = lv_group
    user     = sy-uname
    keep     = 'X'            " Keep session after execution
    holddate = sy-datum.      " Process date

"Loop through uploaded customer data
LOOP AT it_customer INTO wa_customer.

  CLEAR it_bdcdata.

  "First screen entries
  PERFORM bdc_dynpro      USING 'ZBDC_SCREEN' '1000'.
  PERFORM bdc_field       USING 'BDC_CURSOR' 'P_ORT01'.
  PERFORM bdc_field       USING 'BDC_OKCODE' '=ONLI'.
  PERFORM bdc_field       USING 'P_KUNNR'    wa_customer-kunnr.
  PERFORM bdc_field       USING 'P_NAME'     wa_customer-name1.
  PERFORM bdc_field       USING 'P_ORT01'    wa_customer-ort01.

  "Exit screen to return
  PERFORM bdc_dynpro      USING 'ZBDC_SCREEN' '1000'.
  PERFORM bdc_field       USING 'BDC_OKCODE' '/EE'.
  PERFORM bdc_field       USING 'BDC_CURSOR' 'P_KUNNR'.

  "Insert transaction step into the BDC session
  CALL FUNCTION 'BDC_INSERT'
    EXPORTING tcode = 'ZBDC_CUS'
    TABLES   dynprotab = it_bdcdata.

ENDLOOP.

"Close the BDC session
CALL FUNCTION 'BDC_CLOSE_GROUP'.

"Success message
WRITE: / 'BDC Session created successfully. Use SM35 to process it.'.

"-----------------------------------------
" Subroutine to add dynpro screen
"-----------------------------------------
FORM bdc_dynpro USING program screen.
  CLEAR wa_bdcdata.
  wa_bdcdata-program  = program.
  wa_bdcdata-dynpro   = screen.
  wa_bdcdata-dynbegin = 'X'.
  APPEND wa_bdcdata TO it_bdcdata.
ENDFORM.

"-----------------------------------------
" Subroutine to add field values
"-----------------------------------------
FORM bdc_field USING fnam fval.
  CLEAR wa_bdcdata.
  wa_bdcdata-fnam = fnam.
  wa_bdcdata-fval = fval.
  APPEND wa_bdcdata TO it_bdcdata.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="manijangiti_1-1751363036602.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281199i79E6CB4545D21325/image-size/medium?v=v2&amp;amp;px=400" role="button" title="manijangiti_1-1751363036602.png" alt="manijangiti_1-1751363036602.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After execute&amp;nbsp; go to Sm35&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;2.Call Transaction Method&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZBDC_CALLTRAN_CUSTOMER.

"--- Structure Definition ---
TYPES: BEGIN OF ty_customer,
         kunnr TYPE kunnr,         " Customer Number
         name1 TYPE name1_gp,      " Name
         ort01 TYPE ort01,         " City
       END OF ty_customer.

"--- Data Declarations ---
DATA: p_file_s    TYPE string,              " To hold the selected file path
      it_customer TYPE TABLE OF ty_customer, " Internal table for uploaded data
      wa_customer TYPE ty_customer,          " Work area for one record
      it_bdcdata  TYPE TABLE OF bdcdata,     " BDC data table
      wa_bdcdata  TYPE bdcdata.              " BDC line

"--- File Input Parameter ---
PARAMETERS: p_file TYPE IBIPPARMS-PATH OBLIGATORY.

"--- F4 Help for File Selection ---
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file.
  CALL FUNCTION 'F4_FILENAME'
    IMPORTING
      file_name = p_file.

"--- Main Program Execution ---
START-OF-SELECTION.

  " Assign selected file to variable
  p_file_s = p_file.

  " Upload the customer data from text file
  CALL FUNCTION 'GUI_UPLOAD'
    EXPORTING
      filename            = p_file_s
      filetype            = 'ASC'
      has_field_separator = '|'              " Data separated by '|'
    TABLES
      data_tab            = it_customer
    EXCEPTIONS
      OTHERS              = 1.

  " Loop over each uploaded customer record
  LOOP AT it_customer INTO wa_customer.

    " Clear previous BDC data
    CLEAR it_bdcdata[].

    " Build BDC data for screen input
    PERFORM bdc_dynpro USING 'ZBDC_SCREEN' '1000'.
    PERFORM bdc_field  USING 'BDC_CURSOR' 'P_ORT01'.
    PERFORM bdc_field  USING 'BDC_OKCODE' '=ONLI'.        " Press Enter
    PERFORM bdc_field  USING 'P_KUNNR'    wa_customer-KUNNR.
    PERFORM bdc_field  USING 'P_NAME'     wa_customer-NAME1.
    PERFORM bdc_field  USING 'P_ORT01'    wa_customer-ORT01.

    " Optionally simulate pressing Exit or Back
    PERFORM bdc_dynpro USING 'ZBDC_SCREEN' '1000'.
    PERFORM bdc_field  USING 'BDC_OKCODE' '/EE'.           " Exit
    PERFORM bdc_field  USING 'BDC_CURSOR' 'P_KUNNR'.

    " Call transaction with built BDC data in background mode
    CALL TRANSACTION 'ZBDC_CUS' USING it_bdcdata
      MODE 'N'          " 'N' - Background, 'A' - Foreground, 'E' - Errors only
      UPDATE 'S'.       " Synchronous update

  ENDLOOP.

"--- Subroutine to declare dynpro screen ---
FORM bdc_dynpro USING program screen.
  CLEAR wa_bdcdata.
  wa_bdcdata-program  = program.
  wa_bdcdata-dynpro   = screen.
  wa_bdcdata-dynbegin = 'X'.
  APPEND wa_bdcdata TO it_bdcdata.
ENDFORM.

"--- Subroutine to assign value to a field ---
FORM bdc_field USING fnam fval.
  CLEAR wa_bdcdata.
  wa_bdcdata-fnam = fnam.
  wa_bdcdata-fval = fval.
  APPEND wa_bdcdata TO it_bdcdata.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;3. Difference Between CALL TRANSACTION and SESSION METHOD&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Aspect&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;CALL TRANSACTION&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;SESSION METHOD&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Execution&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Immediate&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Deferred via SM35&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Error Handling&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Manual/Error log&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;SM35 Session log&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Performance&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Faster, suitable for small data&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Better for large volumes&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Mode&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Foreground/Background/No Display&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Processes in background&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Data Volume&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Limited&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Handles large volumes efficiently&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/bdc-batch-data-communication-using-session-method-and-call-transaction/ba-p/14141453"/>
    <published>2025-07-02T14:14:43.654000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/recap-sql-selection-patterns-in-sap-hana-database-presented-at-sap-inside/ba-p/14135601</id>
    <title>Recap: SQL selection patterns in SAP HANA database, presented at SAP Inside Track Wroclaw 2025</title>
    <updated>2025-07-03T10:23:24.088000+02:00</updated>
    <author>
      <name>Bogdan7</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/171709</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;A couple of words about me:&lt;/SPAN&gt;&lt;/STRONG&gt;   &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;SPAN&gt;My name is Bogdan Brzozowski and I’m Managing Software Architect working for Capgemini Poland within&lt;/SPAN&gt;&amp;nbsp;more than 14 years. My current position encompasses the following responsibilities:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;Establishing architecture&lt;/STRONG&gt; (ERD, UML) for ABAP based custom solutions to be implemented for our customers by our developers.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Reverse engineering&lt;/STRONG&gt; of the legacy ABAP solutions belonging to our customers to take the full responsibility for their further development and maintenance.&lt;/LI&gt;
&lt;LI&gt;Conducting &lt;STRONG&gt;internal trainings&lt;/STRONG&gt; for our technical consultants to improve their technical skills.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Presentations for external audience&lt;/STRONG&gt; to make our company visible as top provider of SAP technology-based solutions.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Custom code conversion guidelines&lt;/STRONG&gt; – I am responsible for creation and keeping this document up to date.&lt;/LI&gt;
&lt;LI&gt;Spreading knowledge about &lt;STRONG&gt;internal Capgemini data migration tools&lt;/STRONG&gt; like Syniti or Concert Tool.&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bb.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282032i3DE7E9FB2A986A09/image-size/large?v=v2&amp;amp;px=999" role="button" title="bb.JPG" alt="bb.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;A couple of sentences about the event:&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;SPAN&gt;SAP Inside Track was held again in Wroclaw this year. That time we met on rainy Saturday day (7-JUNE-2025) in the premises of WBS Merito University - well known private university that was event co-organizer (together with Capgemini). We welcomed attendees from 9 countries, who were participating in the sessions conducted in English by 18 presenters. Most of the presentations were running in parallel split between 2 rooms.&amp;nbsp; Predominant topics shared with the audience were related to the use of genAI in the context of SAP technologies. But there were also few sessions focusing on modern aspects of ABAP programming, like the subject presented in this blog :-).&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="baner_SIT_2025.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282033iD3B4B7DE6B9AD9FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="baner_SIT_2025.png" alt="baner_SIT_2025.png" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;My Session:&lt;/SPAN&gt;&lt;/STRONG&gt;   &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;SPAN&gt;This year I had the opportunity to do a session called “ SQL selection patterns in CDS views examples”. Good practices are worth following and this is why design patterns like singleton, factory, prototype and many others became popular within object-oriented programming languages. The same may partially apply to data retrieval from any relational database. I noticed that there are typical&amp;nbsp;techniques of data selection, that are useful in different projects for the customers from various branches: pharma, retail, automotive, utility supply to name few of them. In this blog I will share those selection patterns using syntax from ABAP Advanced Open SQL, ABAP CDS view entities and SQL script. HANA database is compliant with standard SQL ANSI 2016, so the examples presented in this blog may be useful to retrieve the data from other relational databases, which are compliant with SQL standard.. Below I would like to share main highlights, insights and key takeaways from my presentation.&lt;/SPAN&gt; &amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="inside.JPG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281004i71E43FB345D7BED8/image-size/large?v=v2&amp;amp;px=999" role="button" title="inside.JPG" alt="inside.JPG" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;Entity Relationship Diagram of the data model used for the code presented later on this blog.&lt;/P&gt;
&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ERD.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279412i69CB84939E3C4E22/image-size/large?v=v2&amp;amp;px=999" role="button" title="ERD.png" alt="ERD.png" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;Sales Order header is kept in VBAK table, while its items in VBAP. Additionally all the changes within Sales Order data are recorded in so called Change Documents with 2 main tables: CDHDR as the change header and CDPOS that stores old and new value of a given field. ERD diagram above uses well known crow's foot notation - see more details &lt;A href="https://en.wikipedia.org/wiki/Entity%E2%80%93relationship_model#Crow's_foot_notation" target="_self" rel="nofollow noopener noreferrer"&gt;here.&lt;/A&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Main highlights and key takeaways :&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt; &lt;/STRONG&gt; &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt; I have presented 2 selection patterns for the &lt;STRONG&gt;performance&lt;/STRONG&gt; improvement:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;SPAN&gt;exclusion&lt;/SPAN&gt;&lt;/LI&gt;
&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;case vs union all&lt;/SPAN&gt;&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&lt;SPAN&gt;...plus 2 &lt;STRONG&gt;functional&lt;/STRONG&gt; patterns:&lt;/SPAN&gt;&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;SPAN&gt;predecessor and successor&lt;/SPAN&gt;&lt;/LI&gt;
&lt;LI&gt;&lt;SPAN&gt;data source determination during runtime.&lt;/SPAN&gt;&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;Performance pattern: Exclusion&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Let's take a look at ERD diagram again. Imagine the requirement to select all Sales Orders items (VBAP table), that do not refer to any material from MARA or they refer to materials of HAWA type only. (MARA-MTART = 'HAWA'). Additionally we are interested in Sales Orders of TA type only (VBAK-AUART = 'TA').&lt;/P&gt;
&lt;P&gt;The very first idea is the use of subquery embedded inside NOT EXISTS operator:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT
  vbak~vbeln,
  vbap~posnr,
  vbap~matnr,
  vbap~netwr,
  vbap~waerk
  FROM vbak
  INNER JOIN vbap
  ON vbap~vbeln = vbak~vbeln
  WHERE vbak~auart = @cv_sd_order_type_ta
  AND NOT EXISTS (
    SELECT @abap_true FROM mara AS subq
      WHERE subq~matnr = vbap~matnr
        AND subq~lvorm = @abap_false
        AND subq~mtart = @cv_material_type_hawa
  )
  ORDER BY vbak~vbeln, vbap~posnr
  INTO CORRESPONDING FIELDS OF TABLE @me-&amp;gt;mt_so_head_item[].&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;But subquery has 2 major disadvantages: it consumes a lot of database server resources (which is valid for any database provider: SAP, Oracle, MS, IBM, etc.) and it cannot be used in ABAP CDS view (valid for SAP HANA database only).&lt;/P&gt;
&lt;P&gt;The alternative offering much faster data retrieval is LEFT OUTER JOIN:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT
  vbak~vbeln,
  vbap~posnr,
  vbap~matnr,
  vbap~netwr,
  vbap~waerk,
  mara~mtart,
  mara~xchpf
  FROM vbak
  INNER JOIN vbap
  ON vbap~vbeln = vbak~vbeln
  LEFT OUTER JOIN mara
  ON  mara~matnr = vbap~matnr
  AND mara~lvorm = @ABAP_false "NOT in WHERE if OUTER join is expected
  WHERE vbak~auart = @CV_sd_order_type_ta
  AND (    mara~matnr IS NULL
        OR mara~mtart &amp;lt;&amp;gt; @CV_material_type_hawa
      )
   ORDER BY vbak~vbeln, vbap~posnr
  INTO CORRESPONDING FIELDS OF TABLE @ME-&amp;gt;mt_so_head_item[].&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;ATTENTION: any additional conditions against the data source from the left side of the outer join must be specified within ON operator, not as a part of WHERE clause. Otherwise you will transform your OUTER join (unintentionally) into the INNER join! You may get caught into this trap using&amp;nbsp;&lt;STRONG&gt;Advanced&lt;/STRONG&gt; Open SQL (with @ prefix when you refer to the variables declared in ABAP and residing on application server).&amp;nbsp; Old Open SQL flavor for ABAP programming on ECC system (predecessor of S/4HANA) did not allow such implicit (and most likely unwanted) conversion of OUTER join into the INNER one.&amp;nbsp;&lt;/P&gt;
&lt;P&gt;Association is not part of SQL standard, but it may be perceived like lazy outer join. This 'laziness' means that as long as ABAP app does not require the columns from the data source on the left side of the outer join, the database system does not perform outer join operation at all, saving some processing time and its resources. This is why we can use the similar technique to obtain data with our exclusion condition from the CDS view that uses association:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT
  SalesOrder AS vbeln,
  so~\_Item-SalesOrderItem AS posnr,
  so~\_Item-Product AS matnr,
  so~\_Item-NetAmount AS netwr,
  so~\_Item-TransactionCurrency AS waerk,
  so~\_Item\_Product-ProductType AS mtart,
  so~\_Item\_Product-IsBatchManagementRequired AS xchpf
  FROM R_SalesOrderTP AS so
  WHERE so~SalesOrderType = @cv_sd_order_type_ta
  AND so~\_Item-SalesOrderItem IS NOT NULL
  AND ( so~\_Item\_Product-ProductType IS NULL
        OR (     so~\_Item\_Product-ProductType &amp;lt;&amp;gt; @cv_material_type_hawa
             AND so~\_Item\_Product-IsMarkedForDeletion = @abap_false
           )
      )
  ORDER BY vbeln, posnr
  INTO TABLE @me-&amp;gt;mt_so_head_item[].&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;&lt;STRONG&gt;Performance pattern: Case vs Union all&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Imagine the following projection list using CASE operator:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT
  SalesDocument AS vbeln,
  so~\_ItemBasic-SalesDocumentItem AS posnr,
  so~\_ItemBasic-Material AS matnr,
  so~\_ItemBasic-NetAmount AS netwr,
  so~\_ItemBasic-TransactionCurrency AS waerk,
  so~\_ItemBasic\_Material-MaterialType AS mtart,
  so~\_ItemBasic\_Material-IsBatchManagementRequired AS xchpf,
  CASE
    WHEN so~\_ItemBasic\_Material-IsBatchManagementRequired IS NULL
      THEN 'Batch Managment is IRRELEVANT'
    WHEN so~\_ItemBasic\_Material-IsBatchManagementRequired = @abap_true
      THEN 'Batch Managment IS required'
    ELSE 'Batch Managment is NOT required'
  END AS IsBatchMgmtReq
  FROM I_SalesDocumentBasic AS so
  WHERE so~SalesDocumentType = @cv_sd_order_type_ta
  AND so~\_ItemBasic-SalesDocumentItem IS NOT NULL
  AND (   so~\_ItemBasic\_Material-MaterialType &amp;lt;&amp;gt; @cv_material_type_hawa
       OR so~\_ItemBasic\_Material-MaterialType IS NULL
      )
  ORDER BY vbeln, posnr
  INTO TABLE @me-&amp;gt;mt_so_descriptive[].&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;It may be time consuming to execute, as it runs as a single thread on HANA database server. The alternative is to split such single SELECT statement into as many SELECT statements as many CASE conditions are used. All these SELECT statements will be combined with UNION ALL operator, like in the code below:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT
  SalesDocument AS vbeln,
  so~\_ItemBasic-SalesDocumentItem AS posnr,
  so~\_ItemBasic-Material AS matnr,
  so~\_ItemBasic-NetAmount AS netwr,
  so~\_ItemBasic-TransactionCurrency AS waerk,
  so~\_ItemBasic\_Material-MaterialType AS mtart,
  so~\_ItemBasic\_Material-IsBatchManagementRequired AS xchpf,
  'Batch Managment is IRRELEVANT' AS IsBatchMgmtReq
  FROM I_SalesDocumentBasic AS so
  WHERE so~SalesDocumentType = @cv_sd_order_type_ta
  AND so~\_ItemBasic-SalesDocumentItem IS NOT NULL
  AND (    so~\_ItemBasic\_Material-MaterialType &amp;lt;&amp;gt; @cv_material_type_hawa
        OR so~\_ItemBasic\_Material-MaterialType IS NULL
      )
  AND so~\_ItemBasic\_Material-IsBatchManagementRequired IS NULL
UNION ALL
SELECT
  SalesDocument AS vbeln,
  so~\_ItemBasic-SalesDocumentItem AS posnr,
  so~\_ItemBasic-Material AS matnr,
  so~\_ItemBasic-NetAmount AS netwr,
  so~\_ItemBasic-TransactionCurrency AS waerk,
  so~\_ItemBasic\_Material-MaterialType AS mtart,
  so~\_ItemBasic\_Material-IsBatchManagementRequired AS xchpf,
  'Batch Managment IS required' AS IsBatchMgmtReq
  FROM I_SalesDocumentBasic AS so
  WHERE so~SalesDocumentType = @cv_sd_order_type_ta
  AND so~\_ItemBasic-SalesDocumentItem IS NOT NULL
  AND (    so~\_ItemBasic\_Material-MaterialType &amp;lt;&amp;gt; @cv_material_type_hawa
        OR so~\_ItemBasic\_Material-MaterialType IS NULL
      )
  AND so~\_ItemBasic\_Material-IsBatchManagementRequired = @abap_true
UNION ALL
SELECT
  SalesDocument AS vbeln,
  so~\_ItemBasic-SalesDocumentItem AS posnr,
  so~\_ItemBasic-Material AS matnr,
  so~\_ItemBasic-NetAmount AS netwr,
  so~\_ItemBasic-TransactionCurrency AS waerk,
  so~\_ItemBasic\_Material-MaterialType AS mtart,
  so~\_ItemBasic\_Material-IsBatchManagementRequired AS xchpf,
  'Batch Managment is NOT required' AS IsBatchMgmtReq
  FROM I_SalesDocumentBasic AS so
  WHERE so~SalesDocumentType = @cv_sd_order_type_ta
  AND so~\_ItemBasic-SalesDocumentItem IS NOT NULL
  AND (    so~\_ItemBasic\_Material-MaterialType &amp;lt;&amp;gt; @cv_material_type_hawa
        OR so~\_ItemBasic\_Material-MaterialType IS NULL
      )
  AND so~\_ItemBasic\_Material-IsBatchManagementRequired = @abap_false
  ORDER BY vbeln, posnr
INTO TABLE @me-&amp;gt;mt_so_descriptive[].&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;Each of 3 SELECT commands above contains respective conditions from the CASE operator used on the projection list of the single SELECT instruction. Such approach allows database system execute 3 separate threads in parallel and then combine their results via UNION ALL.&amp;nbsp;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;ATTENTION: do not use UNION without ALL keyword, because the advantage of parallel processing may be overshadowed with additional effort to eliminate duplicates from the result set (mt_so_descriptive[] internal table in our example).&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;Functional pattern: predecessor and successor&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Imagine the situation in which we need to provide old and new values of the given table field in chronological order. 2 main tables of Change Documents (CDHDR - header and CDPOS - position) store such information. Our goal is to retrieve the pairs of the values for a given field - the old value before the change (predecessor) and the new value saved as the result of the change (successor). Subquery seems to be inevitable option to achieve this functionality, so SQL script implemented in ABAP Managed Database Procedure (AMDP) global class is the way to go. But first let's prepare CDS view that joins CDHDR and CDPOS before programming in SQL script:&lt;/P&gt;
&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;define view entity Z_I_CD
with parameters
  iv_objclass : cdobjectcl,
  iv_tabname : tabname,
  iv_fldname : fieldname
as select from cdhdr as hdr
inner join cdpos as pos
on  pos.objectid = hdr.objectid
and pos.changenr = hdr.changenr
{
  key hdr.objectid,
  key hdr.changenr,
  key pos.tabkey,
  key pos.chngind,
  hdr.username,
  concat(hdr.udate, hdr.utime) as changed_on,
  pos.unit_old,
  pos.unit_new,
  pos.cuky_old,
  pos.cuky_new,
  pos.value_old,
  pos.value_new
}
where hdr.objectclas = $parameters.iv_objclass
and pos.tabname = $parameters.iv_tabname
and pos.fname = $parameters.iv_fldname&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;Another good practice used in the implementation above is the use of CDS view parameters: iv_objclass, iv_tabname and iv_fldname as we need to track the changes for the specific table field only. Concatenation of the date and time indicating when exactly the change occurred is crucial to build appropriate subquery in SQL script - see the field CHANGED_ON:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_amdp_sel_pattern DEFINITION
  PUBLIC FINAL CREATE PUBLIC .

PUBLIC SECTION.
  INTERFACES : if_amdp_marker_hdb.

  CLASS-METHODS:
    read_cd_pair FOR TABLE FUNCTION z_f_cd_pair,
    read_toax FOR TABLE FUNCTION z_f_toax.

  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.

CLASS zcl_amdp_sel_pattern IMPLEMENTATION.
  METHOD read_cd_pair
    BY DATABASE FUNCTION
    FOR HDB LANGUAGE SQLSCRIPT
    OPTIONS READ-ONLY
    USING z_i_cd.
    lt_result =
    select
      cd.mandt,
      cd.objectid,
      cd.tabkey,
      cd.changenr,
      cd.chngind,
      cd.username,
      cd.changed_on,
      cd.unit_old,
      cd.unit_new,
      cd.cuky_old,
      cd.cuky_new,
      cd.value_old,
      cd.value_new,
      pred.username as pred_username,
      pred.changed_on as pred_changed_on,
      pred.unit_old as pred_unit_old,
      pred.unit_new as pred_unit_new,
      pred.cuky_old as pred_cuky_old,
      pred.cuky_new as pred_cuky_new,
      pred.value_old as pred_value_old,
      pred.value_new pred_value_new
      from z_i_cd(
        iv_objclass =&amp;gt; :iv_objclass,
        iv_tabname =&amp;gt; :iv_tabname,
        iv_fldname =&amp;gt; :iv_fldname ) as cd
      left outer join z_i_cd(
        iv_objclass =&amp;gt; :iv_objclass,
        iv_tabname =&amp;gt; :iv_tabname,
        iv_fldname =&amp;gt; :iv_fldname ) as pred
      on pred.mandt = cd.mandt
      and pred.objectid = cd.objectid
      and pred.tabkey = cd.tabkey
      and pred.changed_on = (
        select MAX( cdlast.changed_on )
          from z_i_cd(
            iv_objclass =&amp;gt; :iv_objclass,
            iv_tabname =&amp;gt; :iv_tabname,
            iv_fldname =&amp;gt; :iv_fldname ) as cdlast
          where cdlast.objectid = cd.objectid
          and cdlast.tabkey = cd.tabkey
          and cdlast.changed_on &amp;lt; cd.changed_on );
    RETURN :lt_result;
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;Optional predecessor (see alias PRED for Z_I_CD in &lt;STRONG&gt;outer&lt;/STRONG&gt; join above) must have&amp;nbsp; the greatest available value of the field CHANGED_ON but still lower than CHANGED_ON in successor entry (alias CD). Code available in github.com contains testing console class&amp;nbsp; ZCL_SEL_PATTERN_TEST_CONSOLE that retrieves the pair of predecessor and successor with regard to the changes in VBAP-MATNR field (material of the Sales Order position).&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;Functional pattern: dynamic data source determination in CDS view&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Dynamic data source determination &lt;STRONG&gt;in ABAP&lt;/STRONG&gt; is a trivial task to implement:&lt;/P&gt;
&lt;DIV&gt;
&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;
&lt;/DIV&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA lt_toa01 TYPE STANDARD TABLE OF toa01.
DATA(lv_table_name) = 'TOA01'.

SELECT * FROM (lv_table_name) INTO TABLE @lt_toa01[].&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;Archive link tables like TOA01, TOA02, TOA03, etc. share identical structure, but based on the configuration each of these tables stores the links for the documents of different SAP objects. Implementing a similar solution in CDS view is not such straightforward topic. It is possible only via table function:&amp;nbsp;&lt;/P&gt;
&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;@EndUserText.label: 'Any TOA0x table'
define table function Z_F_TOAX
with parameters 
  iv_table_name : tabname16
returns {
  mandt : abap.clnt;
  sap_object : saeanwdid;
  object_id : saeobjid;
  archiv_id : saearchivi;
  arc_doc_id : saeardoid;
  ar_object : saeobjart;
  ar_date : saeabadate;
  del_date : saedeldate;
  reserve : saereserve;
}
implemented by method zcl_amdp_sel_pattern=&amp;gt;read_toax;&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;...and AMDP class:&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD read_toax
  BY DATABASE FUNCTION
  FOR HDB LANGUAGE SQLSCRIPT
  OPTIONS READ-ONLY
  USING toa01.

  DECLARE lv_query STRING;
  DECLARE lt_result TABLE LIKE toa01;

  lv_query = 'SELECT * FROM ' || :iv_table_name;

  EXECUTE IMMEDIATE lv_query INTO lt_result;

  RETURN :lt_result;
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;As we can see the whole trick is the use of EXECUTE IMMEDIATE command that SQL script offers. The source of data selection is delivered into AMDP method as input parameter iv_table_name.&lt;/P&gt;
&lt;P&gt; &amp;nbsp;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Recommended resources for your readers to continue with your learning journey:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt; &lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Working code presented in this blog can be downloaded from here:&lt;/P&gt;
&lt;P&gt;&lt;A href="https://github.com/brbogdan/SQL-selection-patterns-in-S4" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/brbogdan/SQL-selection-patterns-in-S4&lt;/A&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Related community &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/all-sap-managed-tags/ct-p/managed-tags" target="_blank"&gt;&lt;STRONG&gt;managed tags&lt;/STRONG&gt;&lt;/A&gt;&lt;STRONG&gt; you should subscribe to remain informed about this topic:&lt;/STRONG&gt;&lt;/SPAN&gt;   &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=""&gt;&lt;A title="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" target="_blank"&gt;&lt;SPAN&gt;ABAP Development&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;
&lt;P class=""&gt;&lt;A title="https://community.sap.com/t5/c-khhcw49343/SQL/pd-p/122888716930844301706258287775555" href="https://community.sap.com/t5/c-khhcw49343/SQL/pd-p/122888716930844301706258287775555" target="_blank"&gt;&lt;SPAN&gt;SQL&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;
&lt;P&gt;  &lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Related community blog posts:&lt;/SPAN&gt;&lt;/STRONG&gt;   &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P class=""&gt;&lt;A title="https://community.sap.com/t5/technology-blog-posts-by-members/cds-views-vs-traditional-abap-logic-performance/ba-p/14125726" href="https://community.sap.com/t5/technology-blog-posts-by-members/cds-views-vs-traditional-abap-logic-performance/ba-p/14125726" target="_blank"&gt;CDS Views Vs Traditional ABAP Logic Performance&lt;/A&gt;&lt;/P&gt;
&lt;P class=""&gt;&lt;SPAN&gt;&lt;A title="https://community.sap.com/t5/technology-blog-posts-by-members/sql-scripts-in-sap-hana/ba-p/13738376" href="https://community.sap.com/t5/technology-blog-posts-by-members/sql-scripts-in-sap-hana/ba-p/13738376" target="_blank"&gt;SQL Scripts in SAP HANA&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt; &lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;How was the event for you?:&lt;/SPAN&gt;&lt;/STRONG&gt;   &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt; My session&amp;nbsp; has gathered around 40 participants, who were acting interactively despite being a bit exhausted after big portion of the preceding sessions and rainy weather :-).&amp;nbsp; I hope that some of them will have a chance to implement the patterns I shared on their commercial projects for their real customers.&amp;nbsp;&lt;/P&gt;
&lt;P&gt;I have also benefited from this event taking part in some very impressive sessions:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;Level up your CAP skills by learning how to use the cds REPL presented by DJ Adams&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/53"&gt;@qmacro&lt;/a&gt;&amp;nbsp;&lt;/LI&gt;
&lt;LI&gt;AI agents collaboration for SAP business processes using Google A2A protocol by Igor Narodowy&amp;nbsp;&lt;/LI&gt;
&lt;LI&gt;Why is it becoming increasingly difficult to keep up with SAP? by Paweł Pawlak&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/136635"&gt;@PawelPawlak&lt;/a&gt;&lt;/LI&gt;
&lt;LI&gt;AI agents and SAP. What's the buzz? by Vitaliy Rudnytskiy&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/183"&gt;@Vitaliy-R&lt;/a&gt;&amp;nbsp;&lt;/LI&gt;
&lt;LI&gt;3D modeling in UI5 by Nico Schoenteich&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/898"&gt;@nicoschoenteich&lt;/a&gt;&amp;nbsp;&lt;/LI&gt;
&lt;LI&gt;SAPdalf Crafts AI agents by Łukasz Skorwider&lt;/LI&gt;
&lt;LI&gt;SAP migrations and GenAI: pioneering the path forward by Tomasz Wilk&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;Many thanks to these speakers from me!    &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt; &lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Now let’s hear from you:&lt;/SPAN&gt;&lt;/STRONG&gt;   &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&lt;SPAN&gt;Before ending the blog post I want to share that one of the things I enjoyed the most in SAP Inside Track Wroclaw 2025. It was meeting new people and old colleagues I haven't seen for a while . Who said this kind of fun needs to end in SAP Inside Track?:) Please introduce yourself in the comment’s section and share what you do in the world of SAP?&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/recap-sql-selection-patterns-in-sap-hana-database-presented-at-sap-inside/ba-p/14135601"/>
    <published>2025-07-03T10:23:24.088000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/splitstorm-a-generic-splitter-configuration-tool/ba-p/14143875</id>
    <title>Splitstorm - A Generic Splitter Configuration Tool</title>
    <updated>2025-07-03T17:51:47.033000+02:00</updated>
    <author>
      <name>EnnoWulff</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7046</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1734146665"&gt;Extracting and Restoring Splitter Container Configurations in SAP GUI with ABAP&lt;/H2&gt;&lt;P&gt;When working with complex SAP GUI applications, it's common to use CL_GUI_SPLITTER_CONTAINER to structure screens. These splitter configurations often evolve over time and differ between users, environments, or sSAPGUI-settings.&lt;/P&gt;&lt;P&gt;This article presents a simple but effective way to extract and later restore the current configuration of SAP splitter containers using a small local ABAP utility that I call &lt;STRONG&gt;SplitStorm&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;The core idea is not product-related. It's about treating layout configurations as &lt;STRONG&gt;data&lt;/STRONG&gt; that can be stored and restored. While SAP provides APIs to define and modify split containers, it lacks built-in support for introspection and persistence of these layout states.&lt;/P&gt;&lt;H3 id="toc-hId-1666715879"&gt;Problem Statement&lt;/H3&gt;&lt;P&gt;There are a few typical situations where this becomes relevant:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Users have different SAPGUI settings (theme, fonts or fontsize) which results in different output and hidden information.&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Different users have different interest on different areas. One user needs to have a bigger view on the global ALV-Grid, another colleague wants to see more of the detail view.&lt;/LI&gt;&lt;LI&gt;Different screen resolutions result in unused screen areas, e.g. when the ratio is set to 30% for the left object tree, what fits great on FullHD but is to much for higher resolutions or wide screens&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1470202374"&gt;Approach&lt;/H3&gt;&lt;P&gt;Using recursive traversal and some clever techniques, it’s possible to extract the layout structure and size ratios of a splitter hierarchy. The data is stored in a simple, format that can later be used to reconstruct the exact same configuration.&lt;/P&gt;&lt;P&gt;The main features include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Reading the layout hierarchy of nested CL_GUI_SPLITTER_CONTAINER instances&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Capturing the orientation, pane sizes, and nesting relationships&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Rebuilding the structure with the same layout at a later time&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1273688869"&gt;How does it work?&lt;/H3&gt;&lt;P&gt;The method ANALYZE_AND_SAVE analyzes the container hierarchy of the given main container. To retrieve the number of rows and columns of a splitter, I simply try to get all containers in a 20x20-Grid. If I do not get a valid container for row 3 and column 4 then I know that there are max 2 rows or max 3 columns.&lt;/P&gt;&lt;P&gt;The height and width for each pane will be read and stored in a simple matrix information&lt;/P&gt;&lt;P&gt;Data will be saved in the Index-Table INDX where data in any format can be stored easily. A better way would be to transform the data to JSON or serialize in a data object and store it in an own table. But for my purposes I think that INDX is okay.&lt;/P&gt;&lt;P&gt;Restoring the data reads the path to the current container and sets height and width.&amp;nbsp;&lt;/P&gt;&lt;P&gt;It's easy to build the standard layout and the restore the configuration from saved data.&lt;/P&gt;&lt;H3 id="toc-hId-1077175364"&gt;The Code&lt;/H3&gt;&lt;P&gt;The actual complete source code is available at github: &lt;A href="https://github.com/tricktresor/splitstorm" target="_self" rel="nofollow noopener noreferrer"&gt;Splitstorm&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1009744578"&gt;Demo report&lt;/H4&gt;&lt;P&gt;The Demo report builds a sample configuration using splitter containers without any controls in it.&lt;/P&gt;&lt;P&gt;You can save the current configuration, load or delete an existing layout.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT zt9r_splitstorm_demo01.

SELECTION-SCREEN PUSHBUTTON /1(20) TEXT-sav USER-COMMAND zsave.
SELECTION-SCREEN PUSHBUTTON /1(20) TEXT-lod USER-COMMAND zload.
SELECTION-SCREEN PUSHBUTTON /1(20) TEXT-del USER-COMMAND zdelete.

INITIALIZATION.

  DATA(docker) = NEW cl_gui_docking_container( ratio = 90 side = cl_gui_docking_container=&amp;gt;dock_at_bottom ).

  DATA(sca)   = NEW cl_gui_splitter_container( parent = docker rows = 2 columns = 2 ).
  DATA(sca1)  = NEW cl_gui_splitter_container( parent = sca-&amp;gt;get_container( row = 1 column = 1 ) rows = 1 columns = 2 ).
  DATA(sca2)  = NEW cl_gui_splitter_container( parent = sca-&amp;gt;get_container( row = 2 column = 1 ) rows = 2 columns = 1 ).
  DATA(scb1)  = NEW cl_gui_splitter_container( parent = sca2-&amp;gt;get_container( row = 1 column = 1 ) rows = 1 columns = 2 ).
  DATA(scb2)  = NEW cl_gui_splitter_container( parent = sca2-&amp;gt;get_container( row = 2 column = 1 ) rows = 2 columns = 1 ).


AT SELECTION-SCREEN.

  DATA(info) = NEW zt9r_splitstorm( sy-cprog ).

  CASE sy-ucomm.
    WHEN 'ZSAVE'.
      info-&amp;gt;analyze_and_save( docker ).
    WHEN 'ZLOAD'.
      info-&amp;gt;load_and_restore( docker ).
    WHEN 'ZDELETE'.
      info-&amp;gt;delete( ).
  ENDCASE.&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-813231073"&gt;Main class&lt;/H4&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zt9r_splitstorm DEFINITION PUBLIC.
  PUBLIC SECTION.
    TYPES: BEGIN OF ty_splitter_info,
             path          TYPE string,
             rows          TYPE i,
             columns       TYPE i,
             row_heights   TYPE STANDARD TABLE OF i WITH DEFAULT KEY,
             column_widths TYPE STANDARD TABLE OF i WITH DEFAULT KEY,
           END OF ty_splitter_info.

    TYPES ty_splitter_info_tab TYPE STANDARD TABLE OF ty_splitter_info WITH DEFAULT KEY.

    METHODS delete.

    METHODS load_and_restore
      IMPORTING
        i_container TYPE REF TO cl_gui_container.

    METHODS analyze_and_save
      IMPORTING
        i_container TYPE REF TO cl_gui_container.

    METHODS constructor
      IMPORTING
        repid TYPE clike.

  PRIVATE SECTION.
    METHODS save.
    METHODS load.

    CONSTANTS mc_root TYPE string VALUE `ROOT`.

    METHODS analyze_recursive
      IMPORTING
        i_container   TYPE REF TO cl_gui_control
        i_path        TYPE string
      RETURNING
        VALUE(result) TYPE abap_bool.

    METHODS get_row_count
      IMPORTING
        i_splitter    TYPE REF TO cl_gui_splitter_container
      RETURNING
        VALUE(result) TYPE i.

    METHODS get_column_count
      IMPORTING
        i_splitter    TYPE REF TO cl_gui_splitter_container
      RETURNING
        VALUE(result) TYPE i.

    METHODS restore_recursive
      IMPORTING
        i_container TYPE REF TO cl_gui_control
        i_path      TYPE string.

    METHODS get_splitter_row_height
      IMPORTING
        io_splitter   TYPE REF TO cl_gui_splitter_container
      RETURNING
        VALUE(r_size) TYPE i.

    METHODS get_splitter_col_width
      IMPORTING
        io_splitter   TYPE REF TO cl_gui_splitter_container
      RETURNING
        VALUE(r_size) TYPE i.

    METHODS analyze
      IMPORTING
        i_container   TYPE REF TO cl_gui_container
      RETURNING
        VALUE(result) TYPE ty_splitter_info_tab.

    METHODS restore_sizes
      IMPORTING
        i_container TYPE REF TO cl_gui_container.

    METHODS get_id
      RETURNING
        VALUE(r_id) TYPE char20.

    DATA size_info TYPE ty_splitter_info_tab.
    DATA repid     TYPE c LENGTH 40.
ENDCLASS.



CLASS ZT9R_SPLITSTORM IMPLEMENTATION.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;ANALYZE
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_CONTAINER                    TYPE REF TO CL_GUI_CONTAINER
* | [&amp;lt;-()] RESULT                         TYPE        TY_SPLITTER_INFO_TAB
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD analyze.
    LOOP AT i_container-&amp;gt;children INTO DATA(child).
      analyze_recursive( i_container = child
                         i_path      = mc_root ).
    ENDLOOP.

    result = size_info.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Public Method ZT9R_SPLITSTORM-&amp;gt;ANALYZE_AND_SAVE
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_CONTAINER                    TYPE REF TO CL_GUI_CONTAINER
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD analyze_and_save.
    analyze( i_container = i_container ).
    save( ).
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;ANALYZE_RECURSIVE
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_CONTAINER                    TYPE REF TO CL_GUI_CONTROL
* | [---&amp;gt;] I_PATH                         TYPE        STRING
* | [&amp;lt;-()] RESULT                         TYPE        ABAP_BOOL
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD analyze_recursive.
    TRY.
        DATA(lo_splitter) = CAST cl_gui_splitter_container( i_container ).
        result = abap_true.
      CATCH cx_sy_move_cast_error.
        result = abap_false.
        RETURN.
    ENDTRY.

    DATA(lv_rows)    = get_row_count( lo_splitter ).
    DATA(lv_columns) = get_column_count( lo_splitter ).

    DATA lt_row_heights TYPE STANDARD TABLE OF i WITH DEFAULT KEY.
    DATA lt_col_widths  TYPE STANDARD TABLE OF i WITH DEFAULT KEY.

    DO lv_rows TIMES.
      APPEND get_splitter_row_height( lo_splitter ) TO lt_row_heights.
    ENDDO.

    DO lv_columns TIMES.
      APPEND get_splitter_col_width( lo_splitter ) TO lt_col_widths.
    ENDDO.

    APPEND VALUE ty_splitter_info( path          = i_path
                                   rows          = lv_rows
                                   columns       = lv_columns
                                   row_heights   = lt_row_heights
                                   column_widths = lt_col_widths )
           TO size_info.

    DATA(index_row) = 0.
    DATA(index_col) = 0.
    DO lv_rows TIMES.
      index_col = 0.
      index_row = index_row + 1.
      DO lv_columns TIMES.
        index_col = index_col + 1.
        DATA(lo_container) = lo_splitter-&amp;gt;get_container( row    = index_row
                                                         column = index_col ).
        LOOP AT lo_container-&amp;gt;children INTO DATA(lo_child).
          IF NOT analyze_recursive(
                     i_container = lo_child
                     i_path      = |{ i_path }[{ index_row },{ index_col }]| ).
            EXIT. " from do
          ENDIF.
        ENDLOOP.
      ENDDO.
    ENDDO.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Public Method ZT9R_SPLITSTORM-&amp;gt;CONSTRUCTOR
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] REPID                          TYPE        CLIKE
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD constructor.
    me-&amp;gt;repid = repid.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Public Method ZT9R_SPLITSTORM-&amp;gt;DELETE
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD delete.
    DATA(id) = get_id( ).
    DELETE FROM DATABASE indx(z1) ID id.
    IF sy-subrc = 0 AND size_info IS NOT INITIAL.
      MESSAGE 'Splitter configuration deleted' TYPE 'S'.
    ENDIF.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;GET_COLUMN_COUNT
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_SPLITTER                     TYPE REF TO CL_GUI_SPLITTER_CONTAINER
* | [&amp;lt;-()] RESULT                         TYPE        I
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD get_column_count.
    result = 0.
    DO 20 TIMES.
      DATA(container) = i_splitter-&amp;gt;get_container( row    = 1
                                                   column = sy-index ).
      IF container IS INITIAL.
        RETURN.
      ELSE.
        result = result + 1.
      ENDIF.
    ENDDO.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;GET_ID
* +-------------------------------------------------------------------------------------------------+
* | [&amp;lt;-()] R_ID                           TYPE        CHAR20
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD get_id.
    r_id = |SPLITTER-{ repid }-{ sy-uname }|.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;GET_ROW_COUNT
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_SPLITTER                     TYPE REF TO CL_GUI_SPLITTER_CONTAINER
* | [&amp;lt;-()] RESULT                         TYPE        I
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD get_row_count.
    result = 0.
    DO 20 TIMES.
      DATA(container) = i_splitter-&amp;gt;get_container( row    = sy-index
                                                   column = 1 ).
      IF container IS INITIAL.
        RETURN.
      ELSE.
        result = result + 1.
      ENDIF.

    ENDDO.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;GET_SPLITTER_COL_WIDTH
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] IO_SPLITTER                    TYPE REF TO CL_GUI_SPLITTER_CONTAINER
* | [&amp;lt;-()] R_SIZE                         TYPE        I
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD get_splitter_col_width.
    io_splitter-&amp;gt;get_column_width( EXPORTING
                                     id     = sy-index
                                   IMPORTING
                                     result = r_size  ).
    cl_gui_cfw=&amp;gt;flush( ).
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;GET_SPLITTER_ROW_HEIGHT
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] IO_SPLITTER                    TYPE REF TO CL_GUI_SPLITTER_CONTAINER
* | [&amp;lt;-()] R_SIZE                         TYPE        I
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD get_splitter_row_height.
    io_splitter-&amp;gt;get_row_height( EXPORTING
                                   id     = sy-index
                                 IMPORTING
                                   result = r_size  ).
    cl_gui_cfw=&amp;gt;flush( ).
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;LOAD
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD load.
    DATA(id) = get_id( ).
    IMPORT splitter_info TO size_info FROM DATABASE indx(z1) ID id.
    IF sy-subrc = 0 AND size_info IS NOT INITIAL.
      MESSAGE 'Splitter configuration loaded' TYPE 'S'.
    ENDIF.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Public Method ZT9R_SPLITSTORM-&amp;gt;LOAD_AND_RESTORE
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_CONTAINER                    TYPE REF TO CL_GUI_CONTAINER
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD load_and_restore.
    load( ).
    restore_sizes( i_container = i_container ).
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;RESTORE_RECURSIVE
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_CONTAINER                    TYPE REF TO CL_GUI_CONTROL
* | [---&amp;gt;] I_PATH                         TYPE        STRING
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD restore_recursive.
    TRY.
        DATA(splitter) = CAST cl_gui_splitter_container( i_container ) ##NO_TEXT.
      CATCH cx_sy_move_cast_error.
        RETURN.
    ENDTRY.

    READ TABLE size_info INTO DATA(info) WITH KEY path = i_path.
    IF sy-subrc &amp;lt;&amp;gt; 0 OR splitter IS INITIAL.
      RETURN.
    ENDIF.

    DATA(idx) = 1.

    LOOP AT info-row_heights INTO DATA(lv_r).
      splitter-&amp;gt;set_row_height( id = idx height = lv_r ).
      idx = idx + 1.
    ENDLOOP.

    idx = 1.
    LOOP AT info-column_widths INTO DATA(lv_c).
      splitter-&amp;gt;set_column_width( id = idx width = lv_c ).
      idx = idx + 1.
    ENDLOOP.

    " Rekursiv weiter
    DATA(index_row) = 0.
    DATA(index_col) = 0.
    DO info-rows TIMES.
      index_col = 0.
      index_row = index_row + 1.
      DO info-columns TIMES.
        index_col = index_col + 1.
        DATA(lo_container) = splitter-&amp;gt;get_container( row    = index_row
                                                      column = index_col ).
        DATA(lv_subpath) = |{ i_path }[{ index_row },{ index_col }]|.
        LOOP AT lo_container-&amp;gt;children INTO DATA(lo_child).
          restore_recursive( i_container = lo_child
                             i_path      = lv_subpath ).
        ENDLOOP.
      ENDDO.
    ENDDO.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;RESTORE_SIZES
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] I_CONTAINER                    TYPE REF TO CL_GUI_CONTAINER
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD restore_sizes.
    IF size_info IS INITIAL.
      RETURN.
    ENDIF.

    LOOP AT i_container-&amp;gt;children INTO DATA(child).
      restore_recursive( i_container = child
                         i_path      = mc_root ).
    ENDLOOP.
  ENDMETHOD.


* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Instance Private Method ZT9R_SPLITSTORM-&amp;gt;SAVE
* +-------------------------------------------------------------------------------------------------+
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD save.
    IF size_info IS INITIAL.
      RETURN.
    ENDIF.

    DATA(id) = get_id( ).
    EXPORT splitter_info FROM size_info TO DATABASE indx(z1) ID id.
    MESSAGE 'Splitter configuration saved' TYPE 'S'.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/splitstorm-a-generic-splitter-configuration-tool/ba-p/14143875"/>
    <published>2025-07-03T17:51:47.033000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/replace-all-occurrences-in-multiple-fields-of-an-internal-table/ba-p/14137810</id>
    <title>Replace All Occurrences in Multiple Fields of an Internal Table</title>
    <updated>2025-07-04T18:13:43.456000+02:00</updated>
    <author>
      <name>manijangiti</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2174619</uri>
    </author>
    <content>&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/U&gt;This blog provides a smart way to clean special characters like @, #, !, and , from internal table data.&lt;BR /&gt;It helps when exporting data to CSV files, especially for AL11 directory usage.&lt;BR /&gt;Instead of writing code for each field, we clean all fields in one loop using field symbols.&lt;BR /&gt;RTTI (Runtime Type Info) is used to make it dynamic for any table.&lt;BR /&gt;This makes your exported data neat, clean, and ready for use.&lt;BR /&gt;&lt;U&gt;&lt;STRONG&gt;&lt;BR /&gt;Before Replacing&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2a8f888a-14ee-47a0-8ca4-938a766ae396.jpg" style="width: 800px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279339i76864E73FEF115C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="2a8f888a-14ee-47a0-8ca4-938a766ae396.jpg" alt="2a8f888a-14ee-47a0-8ca4-938a766ae396.jpg" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Code :&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZREPLACE_INTERNAL_TABLE.

"Define structure TY_DATA for sample person data
TYPES: BEGIN OF TY_DATA,
         NAME     TYPE STRING,
         CITY     TYPE STRING,
         EMAIL    TYPE STRING,
         ADDRESS  TYPE STRING,
         COMMENTS TYPE STRING,
       END OF TY_DATA.

"Internal table and work area to hold the data
DATA: LT_DATA TYPE TABLE OF TY_DATA,
      LS_DATA TYPE TY_DATA.

"Reference for SALV display
DATA: LT_FACTORTY  TYPE REF TO CL_SALV_TABLE.

"Sample data containing unwanted characters: @, #, !, ,
LT_DATA = VALUE #(
  ( name = 'Mani@ Yadav!' city = 'Hydera#bad' email = 'mani@yadav@example.com' address = 'Road No, 1, Banjara Hills' comments = 'Good@ Person!' )
  ( name = 'Anil Kumar' city = 'Mum#bai' email = 'anil.kumar@exa!mple.com' address = 'Apt@ 123, Green Society' comments = 'Very# Good, Employee' )
  ( name = 'Ravi Teja!' city = 'Hyder@abad' email = 'ravi.teja#@example.com' address = 'Street 45, Jubilee@ Hills' comments = 'Nice, and Reliable!' )
  ( name = 'Sushil Kumar' city = 'Chen@nai' email = 'sushil@kumar@example.com' address = 'Block 7, Ap@artment 3' comments = 'Great, Wo!rker' )
  ( name = 'Kavita@ Lal' city = 'Pune, City' email = 'kavita.lal#@example.com' address = 'MG Road@, Sector 2!' comments = 'Smart and@ Intellig!ent' )
  ( name = 'Arjun Mehta' city = 'Kolkata' email = 'arjun!mehta@example.com' address = 'Sector 9@, Block B' comments = 'Honest@ and Helpful!' )
  ( name = 'Deepa Agarwal#' city = 'Jai!pur' email = 'deepa@agarwal@example.com' address = 'Colony 5@, Lane 3' comments = 'Re#liable Friend!' )
  ( name = 'Vikrant Singh' city = 'Goa! Beach@' email = 'vikrant@singh#@example.com' address = 'Villa 22, P@alolem' comments = 'Social@ Worker#' )
  ( name = 'Neha Sharma' city = 'Ind@ore# MP!' email = 'neha@sharma@example.com' address = 'Home@ 98, New Town!' comments = 'Quick@ L!ear#ner' )
  ( name = 'Priya! Verma' city = 'De@lhi' email = 'priya.verma@example.com' address = 'Flat 12B, Lotus En@clave!' comments = 'Team, Play#er!' )
).

"Characters we want to remove from all fields
DATA: LT_UNWANTED TYPE STANDARD TABLE OF STRING WITH EMPTY KEY,
      LV_CHAR     TYPE STRING.

APPEND '@' TO LT_UNWANTED.
APPEND '#' TO LT_UNWANTED.
APPEND '!' TO LT_UNWANTED.
APPEND ',' TO LT_UNWANTED.

FIELD-SYMBOLS: &amp;lt;FS_DATA&amp;gt;  TYPE ANY,
               &amp;lt;FS_FIELD&amp;gt; TYPE ANY.

"Loop through each row in the internal table
LOOP AT LT_DATA ASSIGNING &amp;lt;FS_DATA&amp;gt;.

  "Get runtime structure description using RTTI
  DATA(LO_TABLE_DESCR) = CAST CL_ABAP_TABLEDESCR( CL_ABAP_TYPEDESCR=&amp;gt;DESCRIBE_BY_DATA( LT_DATA ) ).
  DATA(LO_LINE_DESCR)  = CAST CL_ABAP_STRUCTDESCR( LO_TABLE_DESCR-&amp;gt;GET_TABLE_LINE_TYPE( ) ).
  DATA(LT_COMPONENTS)  = LO_LINE_DESCR-&amp;gt;COMPONENTS.

  "Loop through each field in the structure
  LOOP AT LT_COMPONENTS INTO DATA(LS_COMPONENT).
    ASSIGN COMPONENT LS_COMPONENT-NAME OF STRUCTURE &amp;lt;FS_DATA&amp;gt; TO &amp;lt;FS_FIELD&amp;gt;.

    "Replace all unwanted characters with space
    IF SY-SUBRC = 0 AND &amp;lt;FS_FIELD&amp;gt; IS ASSIGNED.
      LOOP AT LT_UNWANTED INTO LV_CHAR.
        REPLACE ALL OCCURRENCES OF LV_CHAR IN &amp;lt;FS_FIELD&amp;gt; WITH ' '.
      ENDLOOP.
    ENDIF.
  ENDLOOP.
ENDLOOP.

"Display the cleaned internal table using SALV Grid
CALL METHOD CL_SALV_TABLE=&amp;gt;FACTORY
  IMPORTING
    R_SALV_TABLE = LT_FACTORTY
  CHANGING
    T_TABLE      = LT_DATA.

LT_FACTORTY-&amp;gt;DISPLAY( ).

"Debugger breakpoint for inspection (optional)
BREAK-POINT.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;U&gt;&lt;EM&gt;&lt;STRONG&gt;Final Output after Replacing&lt;/STRONG&gt;&lt;/EM&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ce85d46a-cb8e-4e6e-8755-ad6b2181d0b7.jpg" style="width: 800px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279341iD103B87DA4BC43CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="ce85d46a-cb8e-4e6e-8755-ad6b2181d0b7.jpg" alt="ce85d46a-cb8e-4e6e-8755-ad6b2181d0b7.jpg" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/replace-all-occurrences-in-multiple-fields-of-an-internal-table/ba-p/14137810"/>
    <published>2025-07-04T18:13:43.456000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/factory-alv-with-header-logo-and-footer-in-abap/ba-p/14145038</id>
    <title>FACTORY ALV with Header , Logo and Footer in ABAP</title>
    <updated>2025-07-05T11:39:33.748000+02:00</updated>
    <author>
      <name>vinodkumarreddyappannagari</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2174225</uri>
    </author>
    <content>&lt;P&gt;I’m excited to share my very first blog post on SAP ABAP programming! In this post, you'll learn how to create an &lt;STRONG&gt;ALV&lt;/STRONG&gt; report using the &lt;STRONG&gt;Factory Method&lt;/STRONG&gt;, complete with a custom header, logo, and footer to enhance your report’s appearance and professionalism.&lt;/P&gt;&lt;P&gt;1. Create Logo&amp;nbsp;&lt;/P&gt;&lt;P&gt;step1 : Go to &lt;STRONG&gt;OAER&lt;/STRONG&gt;&amp;nbsp; T code .&lt;/P&gt;&lt;P&gt;step2 :&amp;nbsp;&lt;SPAN&gt;Enter the following fields for your logo.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vinodkumarreddyappannagari_2-1751700892463.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282961iEEB213D2ED2C2DD8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vinodkumarreddyappannagari_2-1751700892463.png" alt="vinodkumarreddyappannagari_2-1751700892463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 3: Click on Execute.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Step 4: Below screen will displayed, double click on Standard Doc Types.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vinodkumarreddyappannagari_3-1751700948601.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282963i889F288020A41685/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vinodkumarreddyappannagari_3-1751700948601.png" alt="vinodkumarreddyappannagari_3-1751700948601.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 5: Double Click on a screen and select the picture from your files you want make logo.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZVA_HEADER_LOGO_FACTORY.
* Declare table reference
TABLES: ZVA_VENDOR_TA.
* Declare data references
DATA: LT_TABLE TYPE REF TO CL_SALV_TABLE, " Reference to ALV table object
      LV_TEXT  TYPE STRING.               " Text string for header

* Selection screen for Vendor Numbers
SELECT-OPTIONS: S_VENO FOR ZVA_VENDOR_TA-VENDERNO.

START-OF-SELECTION.

  * Select data from custom vendor table based on selection
  SELECT VENDERNO, NAME, CITY, POSTALCODE, EMAIL, ACCOUNTGROUP, PROCESSORGROUP, POSTINGBLOCK
    INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(LT_VENDOR)
    FROM ZVA_VENDOR_TA
    WHERE VENDERNO IN @S_VENO.

  * Proceed only if records are found
  IF LT_VENDOR IS NOT INITIAL.

    * Create the SALV (ALV) object using factory method
    CL_SALV_TABLE=&amp;gt;FACTORY(
      IMPORTING
        R_SALV_TABLE = LT_TABLE
      CHANGING
        T_TABLE      = LT_VENDOR
    ).

    * Create layout grids and logo objects for header and footer customization
    DATA(LT_LAYOUT)  = NEW CL_SALV_FORM_LAYOUT_GRID( ).
    DATA(LT_LAYOUT1) = NEW CL_SALV_FORM_LAYOUT_GRID( ).
    DATA(LT_LOGO)    = NEW CL_SALV_FORM_LAYOUT_LOGO( ).

    * Set the header title
    LV_TEXT = 'VINOD KUMAR REDDY'.
    LT_LAYOUT-&amp;gt;CREATE_HEADER_INFORMATION(
      EXPORTING
        ROW     = 3
        COLUMN  = 1
        TEXT    = LV_TEXT
    ).

    * Add user name label and text
    LT_LAYOUT-&amp;gt;CREATE_LABEL(
      EXPORTING
        ROW     = 5
        COLUMN  = 1
        TEXT    = 'User Name' ).

    LT_LAYOUT-&amp;gt;CREATE_TEXT(
      EXPORTING
        ROW     = 5
        COLUMN  = 2
        TEXT    = 'VINOD APPANNAGARI' ).

    * Add date label and current date value
    LT_LAYOUT-&amp;gt;CREATE_LABEL(
      EXPORTING
        ROW     = 3
        COLUMN  = 1
        TEXT    = 'Date' ).

    LT_LAYOUT-&amp;gt;CREATE_TEXT(
      EXPORTING
        ROW     = 3
        COLUMN  = 2
        TEXT    = SY-DATUM ).

    * Add time label and current system time
    LT_LAYOUT-&amp;gt;CREATE_LABEL(
      EXPORTING
        ROW     = 4
        COLUMN  = 1
        TEXT    = 'Time' ).

    LT_LAYOUT-&amp;gt;CREATE_TEXT(
      EXPORTING
        ROW     = 4
        COLUMN  = 2
        TEXT    = SY-UZEIT ).

    * Add footer layout - number of records found
    LT_LAYOUT1-&amp;gt;CREATE_LABEL(
      EXPORTING
        ROW     = 2
        COLUMN  = 1
        TEXT    = 'Number of records found' ).

    DATA: LV_COUNT TYPE INT4.
    DESCRIBE TABLE LT_VENDOR LINES LV_COUNT.

    LT_LAYOUT1-&amp;gt;CREATE_TEXT(
      EXPORTING
        ROW     = 2
        COLUMN  = 2
        TEXT    = LV_COUNT
        TOOLTIP = LV_COUNT ).

    * Set SAP logo on the right of the header
    LT_LOGO-&amp;gt;SET_RIGHT_LOGO( 'SAPLOGO1' ).
    * Set header and footer content
    LT_LOGO-&amp;gt;SET_LEFT_CONTENT( LT_LAYOUT ).
    LT_TABLE-&amp;gt;SET_TOP_OF_LIST( VALUE = LT_LOGO ).
    LT_TABLE-&amp;gt;SET_END_OF_LIST( VALUE = LT_LAYOUT1 ).
    * Display the ALV table
    LT_TABLE-&amp;gt;DISPLAY( ).
  ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Output:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cfc5871a-34dc-41eb-80e5-53adde9181b4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282954iE3A4C02EEF1754EF/image-size/large?v=v2&amp;amp;px=999" role="button" title="cfc5871a-34dc-41eb-80e5-53adde9181b4.png" alt="cfc5871a-34dc-41eb-80e5-53adde9181b4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/factory-alv-with-header-logo-and-footer-in-abap/ba-p/14145038"/>
    <published>2025-07-05T11:39:33.748000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-rap-events-custom-logic-without-badis-or-user-exits/ba-p/14146769</id>
    <title>🚀 SAP RAP Events: Custom Logic Without BAdIs or User Exits</title>
    <updated>2025-07-08T08:49:47.512000+02:00</updated>
    <author>
      <name>SimTshaba</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1693481</uri>
    </author>
    <content>&lt;P&gt;As SAP S/4HANA continues to evolve with &lt;STRONG&gt;clean core&lt;/STRONG&gt; principles, the &lt;STRONG&gt;ABAP RESTful Application Programming Model (RAP)&lt;/STRONG&gt; is taking center stage. One of the most &lt;STRONG&gt;underused but powerful features&lt;/STRONG&gt; of RAP is its &lt;STRONG&gt;event-based architecture&lt;/STRONG&gt;, which allows you to plug in custom logic in a clean and upgrade-safe way.&lt;/P&gt;&lt;P&gt;Today, I want to share how you can &lt;STRONG&gt;listen to standard RAP events and trigger your own custom events&lt;/STRONG&gt; — &lt;STRONG&gt;no BAdIs or user exits needed!&lt;/STRONG&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1734235050"&gt;🧠 The Concept: RAP Event Listeners&lt;/H2&gt;&lt;P&gt;In classic SAP ABAP, you’d typically write enhancements using:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt; BAdIs&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt; User exits&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt; Implicit enhancements&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;But in RAP, you can &lt;STRONG&gt;react to standard business behavior via events&lt;/STRONG&gt;. That means you can write your own &lt;STRONG&gt;custom logic&lt;/STRONG&gt; that responds when something happens in a &lt;STRONG&gt;standard RAP BO (Business Object)&lt;/STRONG&gt; — like a purchase order being approved — by &lt;STRONG&gt;listening to its published events&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This is &lt;STRONG&gt;cleaner, future-proof, and doesn't modify the standard codebase.&lt;/STRONG&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1537721545"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt; Real Use Case&lt;/H2&gt;&lt;P&gt;Let’s say SAP’s standard BO for PurchaseOrder publishes an event when a PO is &lt;STRONG&gt;approved&lt;/STRONG&gt;. You want to send a custom email, update another Z table, or trigger integration — &lt;EM&gt;only&lt;/EM&gt; when that event happens.&lt;/P&gt;&lt;H3 id="toc-hId-1470290759"&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; In RAP, you can do this like so:&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Step 1: The standard RAP object publishes the approval event (&lt;STRONG&gt;&lt;U&gt;R_PurchaseOrderTP&lt;/U&gt;&lt;/STRONG&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Step 2: Your &lt;STRONG&gt;custom RAP behavior definition&lt;/STRONG&gt; listens for that event.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Step 3: You trigger a &lt;STRONG&gt;custom implementation&lt;/STRONG&gt;, e.g., a mail sender class or integration call.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;No BAdI. No user exit. No modifications.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1144694535"&gt;&lt;span class="lia-unicode-emoji" title=":framed_picture:"&gt;🖼&lt;/span&gt;️ Illustration: RAP Event Flow&lt;/H2&gt;&lt;H3 id="toc-hId-1077263749"&gt;&lt;STRONG&gt;Figure 1: Listening to Standard RAP Events in a Custom BO&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ChatGPT Image Jul 8, 2025, 08_40_11 AM.png" style="width: 666px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283797i66EB5A340CAD1889/image-size/large?v=v2&amp;amp;px=999" role="button" title="ChatGPT Image Jul 8, 2025, 08_40_11 AM.png" alt="ChatGPT Image Jul 8, 2025, 08_40_11 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ How to Implement&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Here’s a simplified code sketch of how this works:&lt;/P&gt;&lt;H3 id="toc-hId-880750244"&gt;1. &lt;STRONG&gt;Listen to Standard Event in Custom BO&lt;/STRONG&gt;&lt;/H3&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;SPAN&gt;CLASS&lt;/SPAN&gt; &lt;SPAN&gt;zcl_po_ext&lt;/SPAN&gt;&lt;SPAN&gt; DEFINITION&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;PUBLIC ABSTRACT FINAL&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;FOR EVENTS OF &lt;/SPAN&gt;&lt;SPAN&gt;R_PurchaseOrderTP&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;PUBLIC SECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;PROTECTED SECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;PRIVATE SECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ENDCLASS&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId-684236739"&gt;2. &lt;STRONG&gt;Handle the Event in Your Class&lt;/STRONG&gt;&lt;/H3&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;SPAN&gt;CLASS&lt;/SPAN&gt; &lt;SPAN&gt;lhe_po_ext&lt;/SPAN&gt;&lt;SPAN&gt; DEFINITION INHERITING FROM &lt;/SPAN&gt;&lt;SPAN&gt;cl_abap_behavior_event_handler&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;PRIVATE SECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;METHODS &lt;/SPAN&gt;&lt;SPAN&gt;on_approved&lt;/SPAN&gt;&lt;SPAN&gt; FOR ENTITY EVENT&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;approved&lt;/SPAN&gt;&lt;SPAN&gt; FOR &lt;/SPAN&gt;&lt;SPAN&gt;purchaseorder&lt;/SPAN&gt;&lt;SPAN&gt;~&lt;/SPAN&gt;&lt;SPAN&gt;approved&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ENDCLASS.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H3 id="toc-hId-487723234"&gt;&lt;SPAN&gt;You’re done — and you didn’t need to touch a single line of standard code!&lt;/SPAN&gt;&lt;/H3&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-162127010"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt; Why This Matters&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":locked:"&gt;🔒&lt;/span&gt; &lt;STRONG&gt;Clean Core Compliant&lt;/STRONG&gt; – Stay upgrade-safe.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":high_voltage:"&gt;⚡&lt;/span&gt; &lt;STRONG&gt;No Enhancements or BAdIs Needed&lt;/STRONG&gt; – Simpler architecture.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;🧱 &lt;STRONG&gt;Composable&lt;/STRONG&gt; – Build logic modularly using RAP principles.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":repeat_button:"&gt;🔁&lt;/span&gt; &lt;STRONG&gt;Reusability&lt;/STRONG&gt; – Listen to multiple events, reuse handlers across objects.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--34386495"&gt;&lt;span class="lia-unicode-emoji" title=":megaphone:"&gt;📣&lt;/span&gt; Final Thoughts&lt;/H2&gt;&lt;P&gt;The RAP event mechanism offers a &lt;STRONG&gt;paradigm shift&lt;/STRONG&gt; in how we build custom logic in SAP. It allows us to be &lt;STRONG&gt;event-driven&lt;/STRONG&gt;, &lt;STRONG&gt;clean&lt;/STRONG&gt;, and &lt;STRONG&gt;compliant with SAP's future direction&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;If you’re developing on S/4HANA or looking to modernize your ABAP stack — &lt;STRONG&gt;RAP events are your secret weapon&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":eyes:"&gt;👀&lt;/span&gt; Have you tried this approach in your projects? I’d love to hear your experience. Let’s connect and share ideas!&lt;/P&gt;&lt;HR /&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; #SAPRAP #CleanCore #S4HANA #ABAP #SAPDevelopers #NoMoreBADIs #EventDrivenArchitecture&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-rap-events-custom-logic-without-badis-or-user-exits/ba-p/14146769"/>
    <published>2025-07-08T08:49:47.512000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/human-capital-management-blog-posts-by-members/modernizing-sap-hr-fin-integration-in-public-institutions-scalable-employee/ba-p/14145537</id>
    <title>Modernizing SAP HR-FIN Integration in Public Institutions: Scalable Employee-Vendor Migration in S/4</title>
    <updated>2025-07-10T14:36:23.943000+02:00</updated>
    <author>
      <name>abap_Sap</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1866490</uri>
    </author>
    <content>&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Background &amp;amp; Objective&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In SAP ECC, the Employee Vendor master is a key component for enabling travel reimbursements. Typically created via transaction &lt;STRONG&gt;PRAA&lt;/STRONG&gt;, these vendor records must be transformed into &lt;STRONG&gt;Business Partners (BPs)&lt;/STRONG&gt; prior to any S/4HANA upgrade using the &lt;STRONG&gt;Software Update Manager (SUM)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This transformation is not just a technical necessity; it is a critical process for ensuring &lt;STRONG&gt;financial and operational continuity&lt;/STRONG&gt; post-migration. The challenge is magnified in public sector environments where &lt;STRONG&gt;Concurrent Employment&lt;/STRONG&gt; is common and not fully supported by SAP’s standard programs.&lt;/P&gt;&lt;P&gt;The goal of this initiative was to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ensure &lt;STRONG&gt;accurate and compliant migration&lt;/STRONG&gt; of Employee Vendors to Employee BPs&lt;/LI&gt;&lt;LI&gt;Eliminate &lt;STRONG&gt;duplicate vendor records&lt;/STRONG&gt; stemming from concurrent employment&lt;/LI&gt;&lt;LI&gt;Design a &lt;STRONG&gt;replicable, scalable, and SAP-aligned model&lt;/STRONG&gt; that can benefit other public institutions across the U.S.&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Mandatory Enhancements in SAP ECC&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;A critical consideration in the ECC-to-S/4HANA migration is the assignment of the correct &lt;STRONG&gt;Business Partner category&lt;/STRONG&gt;. Employee vendors must be migrated with &lt;STRONG&gt;Category 1 (Person)&lt;/STRONG&gt;. Initially, Employee BPs were incorrectly created with &lt;STRONG&gt;Category 2 (Organization)&lt;/STRONG&gt;. To resolve this, we implemented &lt;STRONG&gt;SAP Note 3362655&lt;/STRONG&gt; – &lt;EM&gt;"Mapping of the Business Partner Category as Person during Employee Vendor Migration"&lt;/EM&gt;, ensuring that the correct category was consistently applied.&lt;/P&gt;&lt;P&gt;With &lt;STRONG&gt;SAP S/4HANA 2021&lt;/STRONG&gt;, a new Business Partner synchronization model is available via &lt;STRONG&gt;Business Function /SHCM/EE_BP_1/&lt;/STRONG&gt;. In this model:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;One BP with the &lt;STRONG&gt;Employee&lt;/STRONG&gt; role represents the central person (CP)&lt;/LI&gt;&lt;LI&gt;One or more BPs with the &lt;STRONG&gt;Employment&lt;/STRONG&gt; role represent individual contracts (PERNRs)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We utilized program &lt;STRONG&gt;/SHCM/R_EMPL_HANDLE_BPROLES&lt;/STRONG&gt; to assign vendor roles to Employment BPs. However, in environments with &lt;STRONG&gt;Concurrent Employment&lt;/STRONG&gt;, this standard logic assigns vendor roles to &lt;STRONG&gt;all assignments&lt;/STRONG&gt;, including secondary ones—creating duplicate vendors and risking payment errors.&lt;/P&gt;&lt;P&gt;To address this, we enhanced the program to &lt;STRONG&gt;exclude Employment BPs for secondary assignments&lt;/STRONG&gt; from vendor role mapping. This ensures that only the &lt;STRONG&gt;main assignment&lt;/STRONG&gt; is eligible for travel payments and vendor role assignment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_0-1751834681751.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283254i38CD0003752790D2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_0-1751834681751.png" alt="abap_Sap_0-1751834681751.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Migration of Employee Vendors in ECC&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The &lt;STRONG&gt;MDS_LOAD_COCKPIT&lt;/STRONG&gt; transaction was used to migrate employee vendors (ZEMPL) into Employee Business Partners. The same number range was maintained for both the Employee Vendor and the corresponding BP to ensure traceability and consistency.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_1-1751834681756.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283253iE3D38978D7C55B26/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_1-1751834681756.png" alt="abap_Sap_1-1751834681756.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Configurations after SAP S/4HANA migration and before releasing the system to users: &lt;/STRONG&gt;&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;a. Business Function Activation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Per SAP recommendation, business function /SHCM/EE_BP_1 is activated in S/4HANA to support the New Business partner Model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_2-1751834681759.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283252i66529A869681049B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_2-1751834681759.png" alt="abap_Sap_2-1751834681759.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Characteristics of the new employee business partner model&lt;/STRONG&gt;&lt;BR /&gt;• One business partner per central person with role Employee is created&lt;BR /&gt;• Separate business partners are created for every employment (every secondary assignment)&lt;BR /&gt;• Employment BP can have vendor or other roles assigned based on business requirement&lt;/P&gt;&lt;P&gt;b. Below config has been performed in the development system and then migrated along the landscape to production:&lt;/P&gt;&lt;P&gt;Table T77SO:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_3-1751834681761.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283255i458740B17E4EF56E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_3-1751834681761.png" alt="abap_Sap_3-1751834681761.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_4-1751834681762.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283256i9B96D4BCE71F64C9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_4-1751834681762.png" alt="abap_Sap_4-1751834681762.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_5-1751834681763.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283257iC6CD2B3B0C866DC9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_5-1751834681763.png" alt="abap_Sap_5-1751834681763.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_6-1751834681764.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283259i746EA459C8D26DAB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_6-1751834681764.png" alt="abap_Sap_6-1751834681764.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_7-1751834681765.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283260i786E94E5B45EA500/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_7-1751834681765.png" alt="abap_Sap_7-1751834681765.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For HRALX-ESUBG=AB, we need to maintain the number range. Please see below section&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;c. Define Number Ranges&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG-Cross-Application Components-&amp;gt;SAP Business Partner-&amp;gt;Business Partner-&amp;gt;Number Ranges and Groupings.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;d. Define Groupings and Assign Number Ranges&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG-Cross-Application Components-&amp;gt;SAP Business Partner-&amp;gt;Business Partner-&amp;gt; Define Groupings and Assign Number Ranges.&lt;/P&gt;&lt;P&gt;Maintained AB number range:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_8-1751834681766.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283258i1329BEA2E0EA3A82/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_8-1751834681766.png" alt="abap_Sap_8-1751834681766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;e. Create Number Ranges for Vendor Accounts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG-&amp;gt;Financial Accounting-&amp;gt;Accounts Receivable and Accounts Payable-&amp;gt;Supplier Accounts-&amp;gt;Master Data-&amp;gt;Preparations for Creating Supplier Master Data-&amp;gt; Create Number Ranges for Vendor Accounts&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;f. Assign Number Ranges to Vendor Account Groups&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG-&amp;gt;Financial Accounting-&amp;gt;Accounts Receivable and Accounts Payable-&amp;gt;Supplier Accounts-&amp;gt;Master Data-&amp;gt;Preparations for Creating Supplier Master Data-&amp;gt; Assign Number Ranges to Vendor Account Groups&lt;/P&gt;&lt;P&gt;Assign AB Number range to ZEMPL account group&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;g. Define Number Assignment for Direction BP to Vendor&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG Path- Cross-Application Components -&amp;gt; Master Data Synchronization -&amp;gt; Customer/Vendor Integration -&amp;gt; Business Partner Settings -&amp;gt; Settings for Vendor Integration -&amp;gt; Field Assignment for Vendor Integration -&amp;gt; Assign Keys -&amp;gt; Define Number Assignment for Direction BP to Vendor&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;h. Define Number Assignment for Direction Vendor to BP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG Path- Cross-Application Components -&amp;gt; Master Data Synchronization -&amp;gt; Customer/Vendor Integration -&amp;gt; Business Partner Settings -&amp;gt; Settings for Vendor Integration -&amp;gt; Field Assignment for Vendor Integration -&amp;gt; Assign Keys -&amp;gt; Define Number Assignment for Direction Vendor to BP&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;i. Define Address Types&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Cross-Application Components-&amp;gt;SAP Business Partner-&amp;gt;Business Partner-&amp;gt;Basic Settings-&amp;gt;Address Determination-&amp;gt;Define Address Types&lt;/P&gt;&lt;P&gt;Maintain HCM001 &amp;amp; HCM003&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HCM001 Employee Private Address&lt;/LI&gt;&lt;LI&gt;HCM003 Address of Main Employment&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_9-1751834681766.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283261iB6B131C8ACFB1AAF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_9-1751834681766.png" alt="abap_Sap_9-1751834681766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;j. Define Identification Types&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Cross-Application Components-&amp;gt;SAP Business Partner-&amp;gt;Business Partner-&amp;gt;Basic Settings -&amp;gt;Identification Numbers-&amp;gt;Define Identification Types&lt;/P&gt;&lt;P&gt;Maintain HCM001, HCM032 and HCM033&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HCM032 Personnel Number (Main Employment)&lt;/LI&gt;&lt;LI&gt;HCM033 Personnel Number (Employment)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_10-1751834681767.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283262iCFF68D8438752E82/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_10-1751834681767.png" alt="abap_Sap_10-1751834681767.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;k. Define BP Roles&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG-&amp;gt;Cross-Application Components -&amp;gt;SAP Business Partner -&amp;gt;Business Partner -&amp;gt;Basic Settings -&amp;gt;Define BP Roles.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_Sap_11-1751834681770.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283263i8517D3BEFC5D24F5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="abap_Sap_11-1751834681770.png" alt="abap_Sap_11-1751834681770.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;l. Define Reconciliation Accounts for Employees in Role FI Supplier&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;IMG-&amp;gt;Integration with Other SAP Components-&amp;gt;Integration with SAP Success Factors (Employee Central)-&amp;gt; Define Reconciliation Accounts for Employees in Role FI Supplier.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;m. PTRV_VENDOR_SYNC&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Launch SM30 and enter table PTRV_VENDOR_SYNC, also create a reference vendor in the development client and later this needs to be maintained in each client.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Initial HR Sync in SAP S/4HANA&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This report /SHCM/RH_SYNC_BUPA_EMPL_SINGLE must be executed before releasing the system to the users. This report is executed for all active and inactive employees:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;For pernrs with single employment- This report will create two BPs, one BP with employee role and another BP with employment role.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;For pernrs with multiple employment- This report will create one BP with employee role and one or more employment role (for each secondary assignment, an employment BP will be created)&lt;STRONG&gt;. &lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Post S/4HANA Employee Sync Jobs&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;After SAP S/4HANA GO-Live, report /SHCM/RH_SYNC_BUPA_FROM_EMPL must be scheduled in background. This report must run daily in production.&lt;/P&gt;&lt;P&gt;Note: when a new employee record is created, immediately system creates an employee BP and employment BP if the effective date = systems date. If the effective date is in future, this job /SHCM/RH_SYNC_BUPA_FROM_EMPL creates employee BP and employment BP based on effective date. Hence, it is essential to run this job daily.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;/SHCM/R_EMPL_HDLE_BPRLES_DELTA-Vendor Role Job&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This job adds a vendor role-FLVN00 to an employment BP. This report reads the data from table-/SHCM/D_RLE_SYNC. This report should run in production on daily basis.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important Note&lt;/STRONG&gt;: Program /SHCM/R_EMPL_HANDLE_BPROLES also adds vendor role to selected Pernrs with employment BP. This program has a selection screen to enter the Pernr. This program can be executed on an exceptional basis. We have modified this program to skip the vendor role addition for secondary assignments (as mentioned earlier).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8. Enhancements in /SHCM/R_EMPL_HDLE_BPRLES_DELTA&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enhancement #1&lt;/STRONG&gt;: If the report is mistakenly executed without a variant, this report can add vendor role to all employment BPs, hence an enhancement is added to run this job with Last sync date. An error message will be displayed to the users if this report is executed without Last sync date.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enhancement#2&lt;/STRONG&gt;: Since this report adds a vendor role to secondary assignment, an enhancement is needed to prevent the vendor role creation for secondary assignment. If a pernr in the table -/SHCM/D_RLE_SYNC is a secondary assignment, the enhancement will skip that pernr and vendor role will not be added.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enhancement #3&lt;/STRONG&gt;: An enhancement is done to modify the payment method and house bank information in employee vendor based on HR payment method and Bank information.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Employee Business Partner Overview Report&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The report /SHCM/R_EE_BP_RELATION_OVW (&lt;STRONG&gt;T.code-/SHCM/EE_BP_RLTN&lt;/STRONG&gt;) provides a relationship between User, employee BP, employment BP and vendor #. This report can be executed with Pernr or Business Partner # or User ID.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Troubleshooting Tips: &lt;/STRONG&gt;&lt;OL&gt;&lt;LI&gt;Table BUT000- this table provides creation and modifications date and time stamp for employee BP and employment BP.&lt;/LI&gt;&lt;LI&gt;SLG1 log to check all BP creation errors&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This document demonstrates a complete, end-to-end strategy for employee vendor migration during SAP S/4HANA implementation. Through custom enhancements and targeted configuration, we aligned the migration with SAP best practices while addressing unique institutional needs such as Concurrent Employment.&lt;/P&gt;&lt;P&gt;The solution is scalable and applicable to other &lt;STRONG&gt;U.S.-based public institutions&lt;/STRONG&gt;—ensuring reliable vendor synchronization, accurate travel payments, and reduced duplication in a highly regulated environment.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/human-capital-management-blog-posts-by-members/modernizing-sap-hr-fin-integration-in-public-institutions-scalable-employee/ba-p/14145537"/>
    <published>2025-07-10T14:36:23.943000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-prompt-templates-in-abap-ai-sdk-via-islm-scenario/ba-p/14150585</id>
    <title>How to use Prompt Templates in ABAP AI SDK via ISLM Scenario</title>
    <updated>2025-07-11T19:14:00.568000+02:00</updated>
    <author>
      <name>shahbhat</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/141164</uri>
    </author>
    <content>&lt;P&gt;Here it is:&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_down:"&gt;👇&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;Add Prompt Templates in the Intelligent Scenario Model artefact in Eclipse(ADT). If you need to pass an argument to the prompt, you can define the parameters using the following format '{&lt;STRONG&gt;ISLM_&lt;/STRONG&gt;&amp;lt;name of the variable&amp;gt;}', where '&lt;STRONG&gt;ISLM_&lt;/STRONG&gt;' is the prefix as shown in the second screenshot below.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="shahbhat_2-1752252411026.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285567i09065AF4EAE59B8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="shahbhat_2-1752252411026.png" alt="shahbhat_2-1752252411026.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="shahbhat_0-1752253845265.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285631i5E4050B7139C0BB0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="shahbhat_0-1752253845265.png" alt="shahbhat_0-1752253845265.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;Use the ABAP AI SDK classes to access prompt templates from the ISLM Scenario.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD generate_description.
    TRY.
        FINAL(api) = cl_aic_islm_compl_api_factory=&amp;gt;get( )-&amp;gt;create_instance( islm_scenario = 'Z_ISLM_SCEN_SB1' ).
      CATCH cx_aic_api_factory INTO DATA(lx_api).
        rv_description = ''.
    ENDTRY.

    TRY.
        FINAL(prompt_template_instance) = cl_aic_islm_prompt_tpl_factory=&amp;gt;get( )-&amp;gt;create_instance(
                                                                               islm_scenario = 'Z_ISLM_SCEN_SB1'
                                                                               template_id   = 'CITY_DESC' ).
        FINAL(prompt_template_instance2) = cl_aic_islm_prompt_tpl_factory=&amp;gt;get( )-&amp;gt;create_instance(
        islm_scenario = 'Z_ISLM_SCEN_SB1'
        template_id   = 'SYS_ROLE' ).

      CATCH cx_aic_api_factory INTO DATA(lx_api1).
        rv_description = ''.
    ENDTRY.

    IF ( prompt_template_instance IS BOUND ).

      TRY.
          FINAL(prompt) = prompt_template_instance-&amp;gt;get_prompt( parameters = VALUE #( ( name  = 'ISLM_city'
                                                                                value = iv_city ) ) ).
          FINAL(sys_role_prompt) = prompt_template_instance2-&amp;gt;get_prompt( ).
        CATCH cx_aic_prompt_template INTO DATA(lx_prompt_templ).
          "handle exception
      ENDTRY.

    ENDIF.

    IF ( api IS BOUND ).
      TRY.
          DATA(messages) = api-&amp;gt;create_message_container( ).
          messages-&amp;gt;set_system_role( sys_role_prompt ).
          messages-&amp;gt;add_user_message( prompt ).
          rv_description = api-&amp;gt;execute_for_messages( messages )-&amp;gt;get_completion( ).
        CATCH cx_aic_completion_api INTO DATA(lx_completion).
          rv_description = ''.
      ENDTRY.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-use-prompt-templates-in-abap-ai-sdk-via-islm-scenario/ba-p/14150585"/>
    <published>2025-07-11T19:14:00.568000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/yaai-amp-yaai-ui-open-source-ai-tools-for-abap-developers/ba-p/14145639</id>
    <title>yaai &amp; yaai_ui – Open-Source AI Tools for ABAP Developers</title>
    <updated>2025-07-13T13:14:42.960000+02:00</updated>
    <author>
      <name>ChristianSilva</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/608785</uri>
    </author>
    <content>&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Open-Source AI Tools for ABAP Developers&lt;/STRONG&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;SPAN&gt;&lt;BR /&gt;A few months ago, I embarked on a journey to learn about and explore large language models. After spending some time coding in Python and experimenting with Ollama, LangChain, LangGraph, and many other tools in the Python ecosystem, I decided to challenge myself to do similar things in ABAP, the programming language I've been working with for nearly two decades.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;SPAN&gt;Well, I'm still on this journey, and to be honest, as crazy as it might sound, I'm having a lot of fun&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-unicode-emoji" title=":nerd_face:"&gt;🤓&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;. I've lost count of how many times I've found myself laughing, hardly believing what I was seeing while testing features like function calling and retrieval-augmented generation. Honestly, developing AI-powered applications in ABAP is something that never crossed my mind. For someone who started with ABAP version 4.6C, it's quite mind-blowing.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;I think the tools I've been developing over the last few months might be of interest to other ABAP developers who want to dive into the rabbit hole of large language models and all the things they are capable of. The possibilities are endless.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;BR /&gt;So, it's time to share this with the ABAP community. I hope to see many of you having fun using AI right within ABAP, bringing new ideas, and hopefully contributing to these projects. &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Introducing yaai&amp;nbsp;&amp;amp; yaai_ui&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;I'm happy to share &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;yaai - ABAP AI tools&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;and its companion project, &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;yaai_ui - ABAP AI User Interface&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;with the ABAP community! These two open-source repositories are designed to equip ABAP developers to easily integrate Artificial Intelligence, specifically Large Language Models (LLMs), directly into their SAP systems using &lt;/SPAN&gt;&lt;SPAN&gt;only ABAP code&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;The goal of yaai and yaai_ui is to enable ABAP developers to learn and explore Artificial Intelligence capabilities within their familiar environment—at no cost. The only potential cost is for paid AI APIs (such as OpenAI), if you choose to use them. You can get started right away using free APIs like Google Gemini, or by running your own self-hosted LLMs with Ollama.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Introducing yaai - ABAP AI tools: &lt;/STRONG&gt;&lt;EM&gt;Your Backend AI Engine for ABAP&lt;/EM&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;The &lt;/SPAN&gt;&lt;A href="https://github.com/christianjianelli/yaai" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/christianjianelli/yaai&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;repository provides a set of tools focused on backend AI integration for ABAP environments. It's built to facilitate powerful AI capabilities that you can leverage directly within your SAP applications.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;Key Features of ABAP AI tools include:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Multi-Provider LLM API Support&lt;/STRONG&gt;&lt;SPAN&gt;: This is a core strength, offering flexibility in choosing your LLM provider and deployment model. Currently supported APIs include &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;OpenAI&lt;/STRONG&gt; (cloud-based)&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Ollama&lt;/STRONG&gt; (local/self-hosted)&lt;/SPAN&gt;&lt;SPAN&gt;, and &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Google Gemini&lt;/STRONG&gt; (cloud-based)&lt;/SPAN&gt;&lt;SPAN&gt;. The tools are also compatible with APIs from other providers, such as &lt;STRONG&gt;Nvidia&lt;/STRONG&gt;, that implement &lt;U&gt;OpenAI API standards&lt;/U&gt;, possibly with minor adjustments.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conversation Management&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: The tools allow you to maintain and manage multi-turn conversations, providing full access to conversation history for advanced chat scenarios directly within your ABAP applications.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Tool/Function Calling&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Integrate your existing &lt;/SPAN&gt;&lt;SPAN&gt;ABAP business logic with LLMs&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;using function/tool calling. This enables AI models to directly trigger ABAP methods, opening up new possibilities for intelligent automation and process enhancement.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Retrieval-Augmented Generation (RAG)&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Enhance the accuracy and relevance of LLM outputs by incorporating your &lt;/SPAN&gt;&lt;SPAN&gt;enterprise data&lt;/SPAN&gt;&lt;SPAN&gt;. This allows you to build applications that provide more context-aware and specific answers by pulling information from your SAP system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;SPAN&gt;These features collectively can help you to learn how to build &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;intelligent ABAP applications&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;that leverage the latest advancements in AI.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Meet yaai_ui - ABAP AI User Interface: &lt;/STRONG&gt;&lt;EM&gt;Bringing AI to the User's Fingertips&lt;/EM&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Complementing the backend tools, the &lt;/SPAN&gt;&lt;A href="https://github.com/christianjianelli/yaai_ui" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/christianjianelli/yaai_ui&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;repository provides ready-to-use user interface components to interact with LLMs directly from your SAP system. This project simplifies the creation of engaging AI-powered frontends in ABAP.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;The ABAP AI User Interface includes:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Chat Interface&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Enable conversational AI interactions directly within your SAP system, allowing users to engage with LLMs in a familiar chat window.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="abap_ai_ui_chat_anim" style="width: 800px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283324i14D099A806925A2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="abap_ai_ui_chat_anim" alt="abap_ai_ui_chat_anim" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;Code Assistant&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: Access &lt;/SPAN&gt;&lt;SPAN&gt;AI-powered code suggestions and assistance for ABAP development&lt;/SPAN&gt;&lt;SPAN&gt;, potentially boosting developer productivity and code quality.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="yaai_ui_code_assist_using_1" style="width: 600px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283327i8D0EEF56B4BF8D65/image-dimensions/600x396?v=v2" width="600" height="396" role="button" title="yaai_ui_code_assist_using_1" alt="yaai_ui_code_assist_using_1" /&gt;&lt;/span&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="yaai_ui_code_assist_using_2" style="width: 600px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283328i5B67CD743BBA4873/image-dimensions/600x363?v=v2" width="600" height="363" role="button" title="yaai_ui_code_assist_using_2" alt="yaai_ui_code_assist_using_2" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="yaai_ui_code_assist_using_3" style="width: 599px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283329i98A6EE23B2ACA3F2/image-dimensions/599x363?v=v2" width="599" height="363" role="button" title="yaai_ui_code_assist_using_3" alt="yaai_ui_code_assist_using_3" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Getting Started is Simple!&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;Both repositories can be easily installed into your SAP system using &lt;/SPAN&gt;&lt;A href="https://abapgit.org/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;abapGit&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;Prerequisites for installation include:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;An SAP system running &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;ABAP&lt;/STRONG&gt; version &lt;STRONG&gt;7.52 or higher&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;abapGit&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;installed and configured in your ABAP system&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Appropriate &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;developer authorizations&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;in your ABAP system&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;SPAN&gt;&lt;STRONG&gt;Important Note&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: To use the ABAP AI User Interface, the &lt;/SPAN&gt;&lt;SPAN&gt;ABAP AI Tools (&lt;/SPAN&gt;&lt;SPAN&gt;yaai&lt;/SPAN&gt;&lt;SPAN&gt;) &lt;U&gt;must be installed first&lt;/U&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;in your SAP system. Detailed installation steps are provided in each repository's documentation.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;You can find quickstart guides in the documentation to help you run your first simple LLM application or chat application.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Explore, Experiment, and Contribute!&lt;/STRONG&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;These tools are currently &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;experimental&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;and released under the &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;MIT License&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;. This means they are provided "as is" and you use them at your own risk. However, this also means they are open for community collaboration!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;SPAN&gt;I encourage you to:&lt;/SPAN&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Explore&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;the repositories on GitHub:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;yaai - ABAP AI tools&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://github.com/christianjianelli/yaai" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/christianjianelli/yaai&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;yaai_ui - ABAP AI User Interface&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://github.com/christianjianelli/yaai_ui" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/christianjianelli/yaai_ui&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Experiment&lt;SPAN&gt;&amp;nbsp;with the examples and integrate them into your own ABAP projects.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Provide &lt;/SPAN&gt;&lt;SPAN&gt;feedback&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;and &lt;/SPAN&gt;&lt;SPAN&gt;contribute&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;to the evolving project.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;SPAN&gt;Start building your intelligent ABAP applications today! &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;FONT size="2"&gt;&lt;EM&gt;This text was written with the help of Artificial Intelligence.&lt;BR /&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/yaai-amp-yaai-ui-open-source-ai-tools-for-abap-developers/ba-p/14145639"/>
    <published>2025-07-13T13:14:42.960000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/include-released-successor-objects-from-quot-cloudification-repo-quot-in/ba-p/14136908</id>
    <title>Include released successor objects from "cloudification repo" in your ABAP custom code migration</title>
    <updated>2025-07-17T15:35:03.728000+02:00</updated>
    <author>
      <name>lutzi3</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/168005</uri>
    </author>
    <content>&lt;P&gt;Many SAP customers are currently in the phase of migrating their SAP ERP systems to S/4HANA. For those who choose a brownfield or bluefield approach the old ERP system is converted and the customers extensions and own applications (Z* objects) become part of the new system.&lt;/P&gt;&lt;P&gt;Then, the process of Custom Code Adaptation kicks in where the ERP functionality is analyzed and corrected in a way that the objects run again in S/4HANA. See &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-started-with-the-abap-custom-code-migration-process/bc-p/14049622" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/get-started-with-the-abap-custom-code-migration-process/bc-p/14049622&lt;/A&gt; or &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-s-4hana-system-conversion-custom-code-adaptation-process/ba-p/13337309" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-s-4hana-system-conversion-custom-code-adaptation-process/ba-p/13337309&lt;/A&gt; for more details.&lt;/P&gt;&lt;P&gt;The custom code correction process can be time consuming and challenging depending on the size and complexity of the original ERP system. A big part of the custom code objects will be touched. The basis for the checks and corrections is the ABAP Test Cockpit (ATC) with the check variant for S/4HANA (e.g. S4HANA_READINESS_2023).&lt;/P&gt;&lt;P&gt;In case the customer wants to move functionality to SAP BTP ABAP or the S/4HANA (public) Cloud versions it is not sufficient to make the old ERP code just S/4HANA ready. The cloud versions have a heavily restricted set of the ABAP language (so called &lt;A href="https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/abenabap_versions.htm" target="_blank" rel="noopener noreferrer"&gt;language version 5&lt;/A&gt;&amp;nbsp;) and furthermore access to SAP standard objects is allowed to (relatively few) released objects only. For instance, you must not use the MARA table to read materials but the I_PRODUCT CDS. This information is stored in the so called cloudification repository (&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-to-check-your-custom-code-for-abap-cloud/ba-p/13567124" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-to-check-your-custom-code-for-abap-cloud/ba-p/13567124&lt;/A&gt; ) which is regularly updated. (See &lt;A href="https://github.com/SAP/abap-atc-cr-cv-s4hc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/abap-atc-cr-cv-s4hc&lt;/A&gt; for the Raw data).&lt;/P&gt;&lt;P&gt;It contains as well successor information for some of the old ERP objects in particular for the data base tables which makes it particularly interesting for the custom code migration process. See note &lt;A href="https://launchpad.support.sap.com/#/notes/3284711" target="_blank" rel="noopener noreferrer"&gt;https://launchpad.support.sap.com/#/notes/3284711&lt;/A&gt; for installation of the according ATC check / check "Usage of Released APIs (Cloudification Repository)" &amp;nbsp;in releases before 2023 FP 3.&lt;/P&gt;&lt;P&gt;The idea is now to use the &lt;STRONG&gt;officially released successors for the objects which need to be corrected&lt;/STRONG&gt; anyway during the migration ERP -&amp;gt; S/4HANA.&lt;/P&gt;&lt;P&gt;A (simple) example: When accessing table SKA1 corrections could be necessary because of the new account type attributes e.g. GLACCOUNT_TYPE in S/4; secondary cost elements are saved now as well. This is found by the S4HANA_READINESS_2023. The same access is found by the "Usage of Released APIs (Cloudification Repository)" check as well:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_1-1750868218556.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278795iABEA7BB84A2CEA10/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_1-1750868218556.png" alt="lutzi3_1-1750868218556.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The solution to solve both issues is to check if secondary cost elements are concerned and to follow the recommendation in the finding. In the correction the successor object (DDLS I_GLACCOUNTINCHARTOFACCOUNTS) should be used directly:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_2-1750868251695.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278796iC26AC3CAF29D6544/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_2-1750868251695.png" alt="lutzi3_2-1750868251695.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This combination approach makes a part of the own developments "cloud ready" and "S/4HANA ready" at the same time without a big additional effort. And anyway, it is better for upgrade stability to use officially released objects!&lt;/P&gt;&lt;P&gt;Here are 3 possible approaches to achieve this:&lt;/P&gt;&lt;H2 id="toc-hId-1733313264"&gt;Approach 1: Out of the box: Combined Check&lt;/H2&gt;&lt;P&gt;Create a Z ATC Check variant and select the checks from S4HANA_READINESS* and the check "Usage of Released APIs (Cloudification Repository)" . The easiest would be to copy S4HANA_READINESS* and then to select in the maintenance of the check variants (via transaction /nSCI):&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_0-1750869196948.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278802i1DD4B336CBE0FBB5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="lutzi3_0-1750869196948.png" alt="lutzi3_0-1750869196948.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Once you run the check you will see the result as in this example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_1-1750869196955.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278801iD2CC420733DC8702/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_1-1750869196955.png" alt="lutzi3_1-1750869196955.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The findings from the combined check contain already all needed information but there are two shortcomings: the list contains many irrelevant entries; not all check categories (only when the successor is defined) nor all findings are relevant in the context of S/4HANA custom code adoption (e.g. Successor I_COUNTRY for T005 table doesn’t solve a Custom Code Migration issue).&lt;/P&gt;&lt;H2 id="toc-hId-1536799759"&gt;Approach 2: Add information from Cloudification Repo manually&lt;/H2&gt;&lt;P&gt;Instead of a combined check variant the successor information could be added via Excel / VLOOKUP (SVERWEIS in German) as well using these steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Run the standard ATC check for Custom Code Analysis (e.g. S4HANA_READINESS_2023)&lt;/LI&gt;&lt;LI&gt;Download the detailed list from ATC to Excel (include in any case the field reference object / Referenzobjekt)&lt;/LI&gt;&lt;LI&gt;Download the cloudification repo from here &lt;A href="https://github.com/SAP/abap-atc-cr-cv-s4hc/blob/main/src/objectReleaseInfoLatest.csv" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/abap-atc-cr-cv-s4hc/blob/main/src/objectReleaseInfoLatest.csv&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Open the data in Excel and copy the sheet to your original excel in a new tab&lt;/LI&gt;&lt;LI&gt;Add a new column to the first tab from ATC data and combine the data via VLOOKUP: find a possible successor objects in the released objects for the reference objects&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;A possible result could look like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_0-1750917331297.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278960i007475D15532D91F/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_0-1750917331297.png" alt="lutzi3_0-1750917331297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;I added an example excel for convenience reasons to Github here:&amp;nbsp;&lt;A href="https://github.com/Lutzi3/cloud_mig_atc/blob/main/ATC_S4HANA_CLOUDIF_REPO_EXAMPLE.xlsx" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/Lutzi3/cloud_mig_atc/blob/main/ATC_S4HANA_CLOUDIF_REPO_EXAMPLE.xlsx&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Then, when processing the ATC findings, the successor objects from Excel can be used directly in the corrections.&lt;/P&gt;&lt;H2 id="toc-hId-1340286254"&gt;Approach 3: Using a custom enhancement to the SAP ATC S/4HANA: Released objects as additional information&lt;/H2&gt;&lt;P&gt;In order to avoid the manual Excel steps and to have a lean combined list of the relevant findings only there is also the possibility to enhance the "additional information" section via an implicit enhancement or via another copy of the standard check classes in the S/4HANA Custom Code area. If you decide for the enhancement you can use the methode GET_DETAIL_FROM_DATA_BUFFER &amp;nbsp;from the central utility class CL_CI_S4H_COMMON and add the successor object information there.&lt;/P&gt;&lt;P&gt;The result is that if there is the successor object available it will be put to the Additional Information Section of the findings as shows the following &amp;nbsp;example:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_0-1751026443405.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279803i0A0D2003AFA8C10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_0-1751026443405.png" alt="lutzi3_0-1751026443405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;There is an example version on Github for this as well:&amp;nbsp;&lt;A href="https://github.com/Lutzi3/cloud_mig_atc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/Lutzi3/cloud_mig_atc&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now the existing ATC S4HANA readiness check is enhanced by the new released object information such as that you can directly correct the old ERP object reference and replace it by the latest officially released SAP cloud ready object!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/include-released-successor-objects-from-quot-cloudification-repo-quot-in/ba-p/14136908"/>
    <published>2025-07-17T15:35:03.728000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915</id>
    <title>Exposing SAP S4 Onprem data to external System || Odata Service || BTP || Destination-Connectivity</title>
    <updated>2025-07-24T09:09:11.979000+02:00</updated>
    <author>
      <name>Ace_D</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1501366</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735011379"&gt;&lt;STRONG&gt;Prerequisites from BTP Side&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Account&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Access to SAP Business Technology Platform (BTP) with appropriate entitlements.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Cloud Connector Setup&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP Cloud Connector installed and configured to connect your on-premise S/4HANA system to SAP BTP.&lt;/LI&gt;&lt;LI&gt;Destination configured in BTP cockpit pointing to your on-premise system.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connectivity Service and Destination Service&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP BTP Connectivity service and destination service instance on the BTP account.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Environment&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Cloud Foundry space set up in your BTP subaccount to deploy the application.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets take a simple use case for creating a RAP service on S4, which is a wrapper API call on the reprocess IDOC function module.&lt;/P&gt;&lt;P&gt;For this we will create a RAP service on the S4 box, than activate the service with the &lt;STRONG&gt;/IWFND/MAINT_SERVICE&amp;nbsp;&lt;/STRONG&gt;and activate the &lt;STRONG&gt;ICF Node as well.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Note: In this blog we will not go through the steps of setting cloud connector and destination on the BTP account. We will assume that destination with cloud connector setup is already available on the BTP.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create and activate the RAP service on the S4 Box.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;We will create a unmanaged rap scenario with custom entity and than we will create a service definition and top of service definition we will create service binding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752479114889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286063i6147300A58FD94EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752479114889.png" alt="Ace_D_0-1752479114889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Lets create the class for the query implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752479219667.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286066i8FE4DD17F2125A3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752479219667.png" alt="Ace_D_1-1752479219667.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752479284513.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286068i7DF33D859E64B0B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752479284513.png" alt="Ace_D_3-1752479284513.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752479314425.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286069i1ADC607EAFF20853/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752479314425.png" alt="Ace_D_4-1752479314425.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We are calling the FM to reprocess the idoc and checking the relevant table to get the latest reprocessed idoc status for the same.&lt;/P&gt;&lt;P&gt;Now we will create a service definition and service binding for the custom entity created.&lt;/P&gt;&lt;P&gt;Service Definition&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752479854976.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286073i72B0728E2CDB8D9C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752479854976.png" alt="Ace_D_8-1752479854976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And overall project will look something like this.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752479511558.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286070iB8D8CB8704C75416/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752479511558.png" alt="Ace_D_5-1752479511558.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here i have created two types of service bindings v2 and v4 but we will be using only v2 for this.&lt;/P&gt;&lt;P&gt;So overall we created below 4 artifacts.&lt;/P&gt;&lt;P&gt;1. Custom entity&lt;/P&gt;&lt;P&gt;2. Class&lt;/P&gt;&lt;P&gt;3. Service definition&lt;/P&gt;&lt;P&gt;4. Service binding&lt;/P&gt;&lt;P&gt;Now to test the service we will publish the service first and than call the generated url&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752479816432.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286072iDC562CE467DBAAA5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752479816432.png" alt="Ace_D_7-1752479816432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;if you see the image, i have published the service and after publish we also got the custom entity that we have created, click on the &lt;STRONG&gt;service url&lt;/STRONG&gt; and it will open in browser asking for authentication of S4 user id and password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752480025822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286074iD29880ABB4A5E44A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752480025822.png" alt="Ace_D_9-1752480025822.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the authentication is successful you should be able to see this.&lt;/P&gt;&lt;P&gt;Now lets open the SAP GUI so that i can show you the ICF node activation, which is generally taken care by basis team.&lt;/P&gt;&lt;P&gt;Open the Tcode:&amp;nbsp;&lt;STRONG&gt;/IWFND/MAINT_SERVICE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_10-1752480290098.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286075i2C11D72626448B10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_10-1752480290098.png" alt="Ace_D_10-1752480290098.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here you can find your activated service binding and make sure all components of the service looks as it is in the image.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Assuming cloud connector and destination is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With this we completed the S4 box setup, now its ready to communicate with other external systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Creating the Destination service and Connectivity service on the BTP Account.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Login in to BTP account and lets create 2 service instances with service keys.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752483153170.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286097iDCC3A3321CE1ECB0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752483153170.png" alt="Ace_D_11-1752483153170.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1.&amp;nbsp;&lt;STRONG&gt;Destination service&lt;/STRONG&gt;, this will help us to get the destination details, Destination service gets all the registered destinations on the BTP, from which we can filter out the destination that is up for our S4 onprem box.&lt;/P&gt;&lt;P&gt;Destination service will give us all the relevant things like user id passwd, location and etc. for that destination.&lt;/P&gt;&lt;P&gt;Service key for the destination service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752483270245.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286098iBE180D64FD0F615E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752483270245.png" alt="Ace_D_12-1752483270245.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752483330309.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286099i127A1F287FB75995/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752483330309.png" alt="Ace_D_13-1752483330309.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. &lt;STRONG&gt;Connectivity Service,&amp;nbsp;&lt;/STRONG&gt;Since we are trying to get the data out of onprem system we will have to use connectivity service from btp, which will provide us proxies, this proxies will be use to call the onprem odata url.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752483491742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286106i3806395799EEF5CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752483491742.png" alt="Ace_D_14-1752483491742.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752483598535.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286107iCD11D07C5A492C3E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752483598535.png" alt="Ace_D_15-1752483598535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is important to paste here the service keys for better understanding since we will be using many things from the service key into our application&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Lets create a python application to call the onprem service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important things to consider here.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;By using destination and connectivity service we cannot test the application on local system, we will have to deploy our app on CF to test the same.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We will use the flask requests and certain other libraries for the python programming&lt;/P&gt;&lt;P&gt;file: .env file to store all the secrets this secrets are from the service keys only.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_2-1752492372749.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286202iF6300349E7896528/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_2-1752492372749.png" alt="Ace_D_2-1752492372749.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;File: Requirements.txt&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752492015085.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286200i27F53BD3C09B09AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752492015085.png" alt="Ace_D_0-1752492015085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;File: Runtime.txt&lt;/P&gt;&lt;P&gt;python-3.11.*&lt;/P&gt;&lt;P&gt;file: manifest.yaml&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752492157202.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286201iA56CB734CFA3967C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752492157202.png" alt="Ace_D_1-1752492157202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;file:idocapis.py (should be same as mentioned in Manifest.yml file&lt;/P&gt;&lt;P&gt;Load all the required libraries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752492555784.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286203iEB454EAAAAA7E66C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752492555784.png" alt="Ace_D_3-1752492555784.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;define the function to get the token&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752493129840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286204i152BA582C8BA1F8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752493129840.png" alt="Ace_D_4-1752493129840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get the list of all destinations on the BTP&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752493241781.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286205iA640B84C01B00E5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752493241781.png" alt="Ace_D_5-1752493241781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define the function to construct the URL for the odata call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_6-1752493319173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286206i83806D03EC8AE6C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_6-1752493319173.png" alt="Ace_D_6-1752493319173.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get token for the connectivity service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752493411094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286213i4C439E0B0047EB4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752493411094.png" alt="Ace_D_7-1752493411094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to call the odata service with connectivity things&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752493551879.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286242iDE3AED9EE0D95C35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752493551879.png" alt="Ace_D_8-1752493551879.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752493573946.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286243i670226B5E2674B07/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752493573946.png" alt="Ace_D_9-1752493573946.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now lets define the final route in flask to call this service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752494450583.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286281i0C7C7F657EECF5CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752494450583.png" alt="Ace_D_13-1752494450583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One thing to note here the&amp;nbsp;&lt;STRONG&gt;RESOURCE variable will depend on the destination url of the onprem that is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752494105816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286279i7A1D0EA83E29C50A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752494105816.png" alt="Ace_D_11-1752494105816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752494133009.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286280iBAC4EB399CB3AEFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752494133009.png" alt="Ace_D_12-1752494133009.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;STEP 4: Deployment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets deploy the app on the CF by pushing the app to the cloud foundry from the BAS&lt;/P&gt;&lt;P&gt;Use command &lt;STRONG&gt;cf push&lt;/STRONG&gt; after successful authentication for your cloud foundry space.&lt;/P&gt;&lt;P&gt;After the deployment on the cloud we can get the url that is generated on the cloud.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752495094785.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286283iF188D4ACAB2AC66A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752495094785.png" alt="Ace_D_14-1752495094785.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Testing the application:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets create a small python program to call this API in local now to test it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752495325813.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286284iA1C1678704489B7A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752495325813.png" alt="Ace_D_15-1752495325813.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should get response coming from your S4 onPrem system.&lt;/P&gt;&lt;P&gt;Thanks for staying till the end!!!&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915"/>
    <published>2025-07-24T09:09:11.979000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420</id>
    <title>A Step-by-Step Guide to Implementing an Excel Upload Button in a Fiori App using RAP</title>
    <updated>2025-07-24T09:18:19.224000+02:00</updated>
    <author>
      <name>KPShekhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1617455</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735155555"&gt;&lt;STRONG&gt;Live Demo&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Here is a short video demonstrating the final Excel upload functionality in action.&lt;/P&gt;&lt;P class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FcFcxJPgTAa8%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DcFcxJPgTAa8&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FcFcxJPgTAa8%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Excel Upload Button in SAP RAP Fiori Application Demo Run" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I've built a simple RAP application with a V4 UI. The application features an "Employee" table with three fields. The base of the application was created using the RAP generator, and I've also included early numbering logic for the&amp;nbsp;&lt;/SPAN&gt;Employee ID.&lt;/P&gt;&lt;H2 id="toc-hId-1538642050"&gt;&lt;STRONG&gt;Step 1: Create a Fiori Project&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;To begin, create a new SAP Fiori project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;List Report&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;template. This will serve as the foundation for our application.&lt;/P&gt;&lt;H2 id="toc-hId-1342128545"&gt;&lt;STRONG&gt;Step 2: Add a Custom Button&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;With the project set up, the next step is to add a custom button. You can do this by using the open guided development feature. From there, choose the option to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Add a Custom Action to a Page Using Extensions&lt;/STRONG&gt;. Follow the prompts in the guide to insert the necessary code snippets for the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.33.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288514i7A9DB78C413A5FF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.33.43 PM.png" alt="Screenshot 2025-07-18 at 12.33.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.36.47 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288515i92DDB5C0BBCE2331/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.36.47 PM.png" alt="Screenshot 2025-07-18 at 12.36.47 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;or&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1145615040"&gt;&lt;STRONG&gt;Step 2: Configure the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;File&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file is the application descriptor, defining its structure, data sources, and routing. To add the "Excel Upload" button, you need to modify this file to define a custom action and extend the standard List Report controller with our custom logic&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;You can either use the "Add a Custom Action to a Page Using Extensions" option in the guided development tool or update the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;manifest.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file directly with the following configuration&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Pay close attention to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;controlConfiguration&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;extends&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sections, which are key to enabling this functionality.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "_version": "1.53.0",
  "sap.app": {
    "id": "uploadempexcel",
    "type": "application",
    "i18n": "i18n/i18n.properties",
    "applicationVersion": {
      "version": "0.0.1"
    },
    "title": "{{appTitle}}",
    "description": "{{appDescription}}",
    "resources": "resources.json",
    "sourceTemplate": {
      "id": "@sap/generator-fiori:lrop",
      "version": "1.18.2",
      "toolsId": "f8a70d19-c3d7-40bf-9b4b-03ba34f86143"
    },
    "dataSources": {
      "mainService": {
        "uri": "/sap/opu/odata4/sap/zui_upload_emp_o4/srvd/sap/zui_upload_emp_o4/0001/",
        "type": "OData",
        "settings": {
          "annotations": ["annotation"],
          "localUri": "localService/mainService/metadata.xml",
          "odataVersion": "4.0"
        }
      }
    }
  },
  "sap.ui5": {
    "flexEnabled": true,
    "dependencies": {
      "minUI5Version": "1.114.9",
      "libs": {
        "sap.m": {},
        "sap.ui.core": {},
        "sap.fe.templates": {}
      }
    },
    "routing": {
      "routes": [
        {
          "pattern": ":?query:",
          "name": "ZC_UPLOAD_EMPList",
          "target": "ZC_UPLOAD_EMPList"
        }
      ],
      "targets": {
        "ZC_UPLOAD_EMPList": {
          "type": "Component",
          "id": "ZC_UPLOAD_EMPList",
          "name": "sap.fe.templates.ListReport",
          "options": {
            "settings": {
              "contextPath": "/ZC_UPLOAD_EMP",
              "controlConfiguration": {
                "@com.sap.vocabularies.UI.v1.LineItem": {
                  "actions": {
                    "uploadExcelController.controller": {
                      "press": ".extension.uploadempexcel.ext.controller.uploadExcelController.uploadExcel",
                      "visible": true,
                      "enabled": true,
                      "requiresSelection": false,
                      "text": "Upload Excel"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "extends": {
      "extensions": {
        "sap.ui.controllerExtensions": {
          "sap.fe.templates.ListReport.ListReportController": {
            "controllerName": "uploadempexcel.ext.controller.uploadExcelController"
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949101535"&gt;&lt;STRONG&gt;Step 3: Create a Fragment for the Pop-up Screen&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;You'll need to create a fragment in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;ext&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;folder. This fragment will define the pop-up screen that appears when a user clicks the "Excel Upload" button.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-18 at 12.43.56 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288516i792D93DDC3EE4AF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-18 at 12.43.56 PM.png" alt="Screenshot 2025-07-18 at 12.43.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns="sap.m" xmlns:core="sap.ui.core" xmlns:upload="sap.m.upload"&amp;gt;
    &amp;lt;Dialog id="uploadDialogSet" title="Excel Upload"&amp;gt;
        &amp;lt;content&amp;gt;
            &amp;lt;upload:UploadSet
                id="uploadSet"
                maxFileNameLength="200"
                fileTypes="xlsx, xls"
                afterItemAdded=".onAfterItemAdded"
                afterItemRemoved=".onAfterItemRemoved"
                uploadEnabled="true"
                /&amp;gt;
        &amp;lt;/content&amp;gt;
        &amp;lt;!-- CORRECTED: Changed from &amp;lt;buttons&amp;gt; to &amp;lt;beginButton&amp;gt; and &amp;lt;endButton&amp;gt; --&amp;gt;
        &amp;lt;beginButton&amp;gt;
            &amp;lt;Button id="idUploadB" text="Upload" press=".onUploadPress" type="Emphasized" enabled="false"/&amp;gt;
        &amp;lt;/beginButton&amp;gt;
        &amp;lt;endButton&amp;gt;
            &amp;lt;Button id="idCancelB" text="Cancel" press=".onCloseDialog" /&amp;gt;
        &amp;lt;/endButton&amp;gt;
    &amp;lt;/Dialog&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-752588030"&gt;&lt;STRONG&gt;Step 4: Implement the Controller Logic&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;The main logic for handling the file upload is contained within the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;uploadExcelController.controller.js&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;file. You can adapt the code below for your own application. Make sure to adjust the file name and payload column names to fit your specific needs.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define(
  [
    "sap/ui/core/mvc/ControllerExtension",
    "sap/m/MessageToast",
    "sap/ui/core/Fragment",
    "xlsx",
  ],
  function (ControllerExtension, MessageToast, Fragment, XLSX) {
    "use-strict";

    return ControllerExtension.extend(
      "uploadempexcel.ext.controller.uploadExcelController",
      {
        _pDialog: null,
        _file: null,

        uploadExcel: function () {
          if (!this._pDialog) {
            this._pDialog = Fragment.load({
              id: this.base.getView().getId(),
              name: "uploadempexcel.ext.fragment.uploadExcelFragment",
              controller: this,
            }).then(
              function (oDialog) {
                this.base.getView().addDependent(oDialog);
                return oDialog;
              }.bind(this)
            );
          }

          this._pDialog.then(
            function (oDialog) {
              oDialog.open();
              oDialog.getContent()[0].removeAllItems();
              this._file = null;
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(false);
              }
            }.bind(this)
          );
        },

        onCloseDialog: function () {
          this._pDialog.then(function (oDialog) {
            oDialog.close();
          });
        },

        onAfterItemAdded: function (oEvent) {
          this._file = oEvent.getParameter("item").getFileObject();
          if (this._file) {
            MessageToast.show(
              "File '" + this._file.name + "' is ready for upload."
            );
          }
          this._pDialog.then(
            function (oDialog) {
              var oUploadButton = oDialog.getBeginButton();
              if (oUploadButton) {
                oUploadButton.setEnabled(!!this._file);
              }
            }.bind(this)
          );
        },

        onAfterItemRemoved: function (oEvent) {
          this._file = null;
          this._pDialog.then(function (oDialog) {
            var oUploadButton = oDialog.getBeginButton();
            if (oUploadButton) {
              oUploadButton.setEnabled(false);
            }
          });
          MessageToast.show("File removed.");
        },

        onUploadPress: function () {
          if (!this._file) {
            MessageToast.show("Please select a file first.");
            return;
          }

          var oReader = new FileReader();
          oReader.onload = function (e) {
            try {
              var data = e.target.result;
              var workbook = XLSX.read(data, { type: "buffer" });
              var sheetName = workbook.SheetNames[0];
              var excelData = XLSX.utils.sheet_to_row_object_array(
                workbook.Sheets[sheetName]
              );

              if (excelData.length &amp;gt; 0) {
                this._callOdataService(excelData);
              } else {
                MessageToast.show("No data found in the Excel file.");
              }
            } catch (error) {
              MessageToast.show("Error reading Excel file: " + error.message);
            }
          }.bind(this);

          oReader.readAsArrayBuffer(this._file);
        },

        _callOdataService: function (excelData) {
          try {
            // --- START: FINAL CORRECTED CODE ---
            // Get the main OData V4 model from the view.
            var oModel = this.base.getView().getModel();

            // Create a ListBinding directly for the entity set of the List Report.
            // The path MUST match the 'contextPath' in your manifest.json for the List Report target.
            var oListBinding = oModel.bindList("/ZC_UPLOAD_EMP");
            // --- END: FINAL CORRECTED CODE ---

            if (!oListBinding) {
              // This error is now highly unlikely to occur.
              throw new Error(
                "Could not create a ListBinding for the path /ZC_UPLOAD_EMP."
              );
            }

            excelData.forEach(function (rowData) {
              // IMPORTANT: Make sure your Excel column headers match exactly
              var oPayload = {
                //EmpID: rowData.EmployeeID.toString(), auto generated by Early Numbering in RAP Application
                Empname: rowData.EmployeeName.toString(),
                Contact: rowData.Contact.toString(),
              };
              // The create operation is performed on the ListBinding instance.
              oListBinding.create(oPayload);
            });

            MessageToast.show("Uploading " + excelData.length + " records...");

            // The model holds the batch queue, so we submit the changes on the model.
            oModel
              .submitBatch("$auto")
              .then(
                function () {
                  MessageToast.show("Data uploaded successfully.");
                  this.base.getExtensionAPI().refresh(); // Refresh the table to show new data
                  this.onCloseDialog();
                }.bind(this)
              )
              .catch(function (oError) {
                MessageToast.show("Error during upload: " + oError.message);
              });
          } catch (error) {
            MessageToast.show("Error processing data: " + error.message);
          }
        },
      }
    );
  }
);&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-556074525"&gt;&lt;STRONG&gt;Dependencies&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;Before you can run the application, you'll need to install the necessary dependencies. You can do this by running the following commands in your terminal.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm i ui5-tooling-modules
npm i xlsx&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;&lt;SPAN&gt;We also need to update your&amp;nbsp;&lt;/SPAN&gt;ui5.yaml&lt;SPAN&gt;&amp;nbsp;file by adding the following custom tasks.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;builder:
customTasks:
- name: ui5-tooling-modules-task
afterTask: replaceVersion
- name: ui5-tooling-modules-middleware
afterMiddleware: compression&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-359561020"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class=""&gt;By following these steps, you can add a fully functional Excel upload feature to your SAP Fiori application. This enhancement provides a more convenient way for users to handle bulk data uploads, ultimately improving the user experience. I have also prepared a demo Excel file with sample data that you can use for testing purposes.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/a-step-by-step-guide-to-implementing-an-excel-upload-button-in-a-fiori-app/ba-p/14156420"/>
    <published>2025-07-24T09:18:19.224000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-custom-generic-class-for-developments/ba-p/14161559</id>
    <title>SAP MDG: Custom Generic Class for developments</title>
    <updated>2025-07-25T11:30:00.026000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;HI SCN Folks,&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;:&lt;BR /&gt;01. There are several ways to implement it, and the blog that's written is one of the ways.&lt;BR /&gt;02. There are no screenshots attached related to SAP Logon &amp;amp; SAP MDG UI Screens.&lt;BR /&gt;03. In this blog, example which i taken the development of one of the Enhancement UIBB &amp;amp; a Method is GET_DATA.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;Faced Problem&lt;/U&gt;:&lt;BR /&gt;&lt;/STRONG&gt;Every time i used to call the below program for different placeholders &amp;amp; for different requirements. In short, making use of the same code again &amp;amp; again.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;ZSU_MDG_CL_ENH_CUS_UIBB&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA :
  lv_cr_number TYPE usmd_crequest,
  lv_crtype    TYPE usmd_crequest_type,
  lv_process   TYPE usmd_process.

DATA(lo_context) = cl_usmd_app_context=&amp;gt;get_context( ).

IF lo_context IS BOUND.
  CALL METHOD lo_context-&amp;gt;get_attributes
    IMPORTING
      ev_crequest_id   = lv_cr_number
      ev_crequest_type = lv_crtype
      ev_process       = lv_process.
ENDIF.

IF lv_crtype EQ 'ZSUCRTYPE'.

      "Requirement Logic

ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;How to reduce this reusability? Please follow the below process&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;01. Create one custom class.&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;ZSU_MDG_CL_GENERIC (Class)&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;02. Create one Static Method (Level), Public (Visibility) &amp;amp; Exporting Parameters.&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; GET_CR_RELATED&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  class-methods GET_CR_RELATED
    exporting
      !EO_MODEL type ref to IF_USMD_MODEL_EXT
      !EV_PARENT_PROCESS type USMD_PROCESS
      !EV_PROCESS type USMD_PROCESS
      !EV_WI_ID type SWW_WIID
      !EV_CREQUEST_ID type USMD_CREQUEST
      !EV_CREQUEST_TYPE type USMD_CREQUEST_TYPE
      !EV_CREQUEST_STEP type USMD_CREQUEST_APPSTEP
      !EV_CREQUEST_INDEX type USMD_CREQUEST_WFINDEX
      !EV_EDITION type USMD_EDITION
      !EV_OTC type USMD_OTC .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;BR /&gt;03. Now enter the below code in the method (Source Code).&lt;/STRONG&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  method GET_CR_RELATED.

      DATA:
      lo_app_ctxt  TYPE REF TO  if_usmd_app_context.


    lo_app_ctxt = cl_usmd_app_context=&amp;gt;get_context( ).

    IF lo_app_ctxt IS BOUND.

      lo_app_ctxt-&amp;gt;get_attributes(
       IMPORTING
         eo_model          =  eo_model
         ev_process        =  ev_process
         ev_wi_id          =  ev_wi_id
         ev_crequest_id    =  ev_crequest_id
         ev_crequest_type  =  ev_crequest_type
         ev_crequest_step  =  ev_crequest_step
         ev_crequest_index =  ev_crequest_index
         ev_otc            =  ev_otc
     ).
    ENDIF.

  endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Done with part of this class (ZSU_MDG_CL_GENERIC).&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now It's time to use it in any development placeholder; in this blog, implementing it in (ZSU_MDG_CL_ENH_CUS_UIBB).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  DATA: lv_creq_type TYPE usmd_crequest_type,
          lv_wf_step   TYPE usmd_crequest_appstep.


    CALL METHOD ZSU_MDG_CL_GENERIC=&amp;gt;get_cr_related
      IMPORTING
        ev_crequest_type = lv_creq_type  " Type of Change Request
        ev_crequest_step = lv_wf_step.

IF lv_crtype EQ 'ZSUCRTYPE'.
       IF lv_wf_step = '00'.

      "Requirement Logic

ENDIF.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt; &amp;nbsp;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-custom-generic-class-for-developments/ba-p/14161559"/>
    <published>2025-07-25T11:30:00.026000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-remote-sap-hana-cloud-data-from-s-4hana-public-cloud-using-cds/ba-p/14166087</id>
    <title>Accessing Remote SAP HANA Cloud Data from S/4HANA Public Cloud using CDS External Entity</title>
    <updated>2025-07-30T04:58:51.636000+02:00</updated>
    <author>
      <name>veroni</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1592841</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736075425"&gt;Prerequisites&lt;/H2&gt;&lt;P&gt;Before starting, make sure you have:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP S/4HANA Public Cloud system&lt;/STRONG&gt; with developer access&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;SAP HANA Cloud instance&lt;/STRONG&gt; on BTP with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;SQL Endpoint enabled&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Allow All Access or trusted IP configuration&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Technical user in HANA Cloud with necessary privileges (e.g., CREATE REMOTE SOURCE, schema access)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;ABAP Development Tools (ADT) in Eclipse&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539561920"&gt;High-Level Concept And Reference&lt;/H2&gt;&lt;P&gt;Blog reference :&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-cds-release-news-2408-external-entities/ba-p/13784415" target="_blank"&gt;ABAP CDS Release News 2408 – External Entities - SAP Community&lt;/A&gt;&lt;BR /&gt;Help portal reference:&amp;nbsp;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-data-models/cds-external-entities?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;External Entities | SAP Help Portal&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;the workflow and artifacts for establishing an outbound SQL access with CDS external entities:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="veroni_0-1753803716253.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293555iF2BC67DE32676676/image-size/large?v=v2&amp;amp;px=999" role="button" title="veroni_0-1753803716253.png" alt="veroni_0-1753803716253.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;CDS External Entity&lt;/STRONG&gt;: Design-time ABAP artifact mapping to an external database object&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The following types of external entities are available:&lt;/SPAN&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Dynamic external entities&lt;/SPAN&gt;:&lt;/STRONG&gt; The logical external schema is bound to the external entity at runtime, when the entity is accessed with ABAP SQL&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;SELECT, using a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;PROVIDED BY&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;clause. Dynamic external entities can be accessed by ABAP SQL only. They cannot be used as a data source for other CDS entities.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Static external entities&lt;/SPAN&gt;:&lt;/STRONG&gt; The logical external schema is specified in the data definition of the external entity. Static external entities can be used as a data source in ABAP SQL, as a data source in other CDS entities, and in ABAP Managed Database Procedures (AMDP).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;Writable external entities&lt;/SPAN&gt;:&lt;/STRONG&gt; By default, external entities are read-only. An external entity can be defined as writable using the optional addition&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;writable. Writable external entities allow modifying data on external database systems using the ABAP SQL operations&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;INSERT,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;UPDATE,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;MODIFY, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;DELETE.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Logical External Schema&lt;/STRONG&gt;: Links external entity to outbound communication&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Communication Arrangement&lt;/STRONG&gt;: Defines connection to HANA Cloud via Outbound SQL Access&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1343048415"&gt;Implementation Steps&lt;/H2&gt;&lt;H3 id="toc-hId-1275617629"&gt;For Developer in&amp;nbsp; ABAP environment&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create CDS External Entity&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;In this scenario ,we use &lt;STRONG&gt;Writable external entity&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Core Data Services-Data Definition&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'External Entity'
define writable external entity (ENTITY NAME) external name (HANA DATABASE TABLE NAME)
{
  key ID       : abap.char(36) external name ID;
      TEST     : abap.int1     external name TEST;

}
with federated data provided at runtime
​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Logical External Schema&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Core Data Services - Logical External Schemas&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="veroni_1-1753804456433.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293561i123E50C720EB1140/image-size/large?v=v2&amp;amp;px=999" role="button" title="veroni_1-1753804456433.png" alt="veroni_1-1753804456433.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Communication scenario with outbound service&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;Cloud Communication Management-Communication Scenarios-outbound service&lt;BR /&gt;&amp;nbsp;Create Outbound Service Referring to&amp;nbsp; a Logical External Schemas&amp;nbsp; &amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="veroni_2-1753804924331.png" style="width: 632px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293565i024EE3FFE2C746B0/image-dimensions/632x170?v=v2" width="632" height="170" role="button" title="veroni_2-1753804924331.png" alt="veroni_2-1753804924331.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&amp;nbsp;Add outbound service to&amp;nbsp;Communication scenario&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;Cloud Communication Management-Communication Scenarios&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="veroni_3-1753805096502.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293566i200A9233FB768296/image-size/large?v=v2&amp;amp;px=999" role="button" title="veroni_3-1753805096502.png" alt="veroni_3-1753805096502.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;ABAP SQL statement&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;(SQL test should be used after communication configuration in SAP Fiori application)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;   SELECT * FROM （cds external entity)
      PROVIDED BY (logical external schema)
      INTO TABLE @FINAL(lt_federated_data)
      UP TO 10 ROWS.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1079104124"&gt;For SAP Fiori Application&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Create Communication System&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Host: SQL Endpoint of HANA Cloud&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Port: 443&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authentication: Technical User (HANA DB user)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Create Communication Arrangement&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Outbound Service: Outbound SQL Access&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Adapter: HANA (ODBC)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Adapter Configuration: &lt;STRONG&gt;this parameter is important ,or&amp;nbsp; you will get ping fail message.&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;ServerNode=&amp;lt;hana_sql_endpoint&amp;gt;:port&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Assign Outbound User (same as HANA DB user)&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Check Outbound Service Connection&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&lt;UL&gt;&lt;LI&gt;success message:&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="veroni_5-1753805829527.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293579i5758C85E24A41DB1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="veroni_5-1753805829527.png" alt="veroni_5-1753805829527.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Test SQL in ABAP Environment (see for developer part)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Using CDS External Entities with Outbound SQL Access provides a clean and ABAP-native way to query external SAP HANA Cloud data from S/4HANA Public Cloud.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-remote-sap-hana-cloud-data-from-s-4hana-public-cloud-using-cds/ba-p/14166087"/>
    <published>2025-07-30T04:58:51.636000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/excel-upload-download-for-custom-tables-with-check-table-validation/ba-p/14150894</id>
    <title>Excel Upload/Download for Custom Tables – With Check Table Validation</title>
    <updated>2025-08-03T09:07:14.145000+02:00</updated>
    <author>
      <name>Discoverer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/883399</uri>
    </author>
    <content>&lt;P&gt;Hi Community&lt;STRONG&gt;,&lt;/STRONG&gt;&lt;BR /&gt;In this blog, we’ll explore how to build a custom ABAP utility that enables Excel-based upload and download functionality for Z-tables, with real-time validation against check table entries. This solution allows users to generate Excel templates, validate input data during upload, and update custom tables dynamically all from a single report.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;In many SAP projects, business users request Excel-based upload and download features for ease of data entry and mass maintenance. However, ensuring &lt;STRONG&gt;data integrity&lt;/STRONG&gt; during uploads—especially for custom tables with check table dependencies—is crucial.&lt;BR /&gt;This blog showcases a utility report in ABAP that enables:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;Downloading a Z-table structure into Excel from Se16N&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Uploading Excel data back into SAP&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Validating data against defined check tables&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Updating the custom table only if validation passes&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;Let’s walk through the solution with modular&lt;STRONG&gt; includes, class-based design, and user-friendly error handling via SALV.&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;
&lt;H3 id="toc-hId-1864063593"&gt;&lt;STRONG&gt;Solution Overview&lt;/STRONG&gt;&lt;/H3&gt;
&lt;P&gt;The solution is built using:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Modular Includes&lt;/STRONG&gt;: Top declarations, selection screens, class definitions, and implementations are separated for clarity.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Dynamic Programming&lt;/STRONG&gt;: Internal tables and field symbols are generated at runtime based on the table name.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;SOI Interface&lt;/STRONG&gt;: SAP Office Integration is used to parse Excel.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Check Table Validation&lt;/STRONG&gt;: All dependent fields are validated using metadata (from DDIF_FIELDINFO_GET).&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;Error Handling&lt;/STRONG&gt;: Errors are displayed using SALV with row indicators.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;H3 id="toc-hId-1667550088"&gt;&lt;STRONG&gt;Selection Screen Design&lt;/STRONG&gt;&lt;/H3&gt;
&lt;P&gt;Two main modes:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Export&lt;/STRONG&gt;: Generates an Excel template based on a selected custom table and navigates to SE16N.&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;&lt;STRONG&gt;Import&lt;/STRONG&gt;: Reads and uploads validated Excel content into the corresponding Z-table.&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Below is the Report Program zcustom_excel&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT zcustom_excel.
INCLUDE zcust_excel_top.
INCLUDE zcust_excel_sel.
INCLUDE zcust_excel_cls_dfn.
INCLUDE zcust_excel_cls_dec.
INITIALIZATION.
  CLEAR: go_ref.
  go_ref = NEW lcl_header_values( ).
  go_ref-&amp;gt;initialize( ).
AT SELECTION-SCREEN OUTPUT.
  LOOP AT SCREEN INTO DATA(ls_screen).
    IF ls_screen-name CS 'PATH'.
      ls_screen-active = COND #( WHEN rb_exp = abap_true THEN 0 ELSE 1 ).
      MODIFY SCREEN FROM ls_screen.
    ENDIF.
  ENDLOOP.
AT SELECTION-SCREEN.
  go_ref-&amp;gt;file_import( ).
AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_path.
  go_ref-&amp;gt;pop_up_dialogue( ).
START-OF-SELECTION.
  go_ref-&amp;gt;operation( ).
​&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Top Declaration is done in &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;INCLUDE &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;zcust_excel_top&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;TYPES:BEGIN OF gty_msg, 
         lights(4) TYPE c, 
         row       TYPE i, 
         message   TYPE tdline, 
       END OF gty_msg. 
 DATA:gs_msg          TYPE gty_msg, 
      gt_msg          TYPE TABLE OF gty_msg, 
      gv_wtitle       TYPE string , 
      gv_format       TYPE string, 
      gt_dyn_tab      TYPE REF TO data, 
      gt_dyn_tab1     TYPE REF TO data, 
      go_salv         TYPE REF TO cl_salv_table, 
 ##NEEDED      gv_msg          TYPE REF TO cx_salv_msg, 
      gt_table_filds  TYPE TABLE OF dfies, 
      gt_table_filds1 TYPE TABLE OF dfies, 
      gs_dyn_tab      TYPE REF TO data, 
      gv_auth_result  TYPE c LENGTH 1. 
 FIELD-SYMBOLS:&amp;lt;fs_val&amp;gt;       TYPE any, 
               &amp;lt;fs_dyn&amp;gt;       TYPE STANDARD TABLE, 
               &amp;lt;fs_dyn1&amp;gt;      TYPE STANDARD TABLE, 
               &amp;lt;fs_dyns&amp;gt;      TYPE any, 
               &amp;lt;fs_dyn_field&amp;gt; TYPE any. &lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Parameter declaration is done in include &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ZCUST_EXCEL_SEL&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;PARAMETERS:p_tab TYPE zch_de_tabname OBLIGATORY. 
 SELECTION-SCREEN BEGIN OF BLOCK b1 WITH FRAME TITLE TEXT-006. 
   PARAMETERS:rb_exp RADIOBUTTON GROUP grp MODIF ID rb1 DEFAULT 'X' USER-COMMAND rb, 
              rb_imp RADIOBUTTON GROUP grp  MODIF ID rb2. 
  
SELECTION-SCREEN END OF BLOCK b1. 
 SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-007. 
   PARAMETERS: p_path TYPE ibipparms-path MODIF ID fil. 
 SELECTION-SCREEN END OF BLOCK b3. ​&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Class &lt;/SPAN&gt;&lt;SPAN class=""&gt;Definition&lt;/SPAN&gt;&lt;SPAN class=""&gt; is done in the include&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;INCLUDE&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;zcust_excel_cls_dfn&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS  lcl_header_values DEFINITION. 
   PUBLIC SECTION. 
     METHODS: file_import, 
       operation, 
       pop_up_dialogue, 
       initialize. 
  
ENDCLASS. 
 DATA go_ref TYPE REF TO  lcl_header_values. 

 &lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Class Implementation is done in include&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;INCLUDE&lt;/SPAN&gt; &lt;SPAN class=""&gt;zcust_excel_cls_dec&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;
&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; CLASS lcl_header_values IMPLEMENTATION.
 
"File_import method is used to do the validation based on Input table name in "selection screen.  
METHOD file_import.
 
    SELECT low FROM tvarvc WHERE name = 'ZCUST_TAB_TVARVC' AND low = @p_tab INTO TABLE (lt_tvarvc).
 
    CASE sy-ucomm.
 
      WHEN  'ONLI'.
 
        IF p_tab+0(1) &amp;lt;&amp;gt; 'Z'.
 
          MESSAGE 'Given table is not a custom table' TYPE 'E'.
 
        ELSEIF p_tab IS NOT INITIAL.
 
          SELECT tabname  FROM dd02l WHERE tabname LIKE 'Z%' AND tabclass = 'TRANSP'  AND    ##NEEDED
 
          tabname = @p_tab INTO TABLE (lt_tabname).
 
          IF sy-subrc NE 0.
 
            MESSAGE 'Given table is not existing in the system' TYPE 'E' .
 
          ENDIF.
 
        ENDIF.
 

    
 
        IF p_path IS INITIAL AND rb_imp EQ abap_true.
 
          MESSAGE 'table name Filed can''t be empty' TYPE 'E'.
 
        ENDIF.
 
    ENDCASE.
 

  ENDMETHOD.
 
  METHOD operation.
 
    DATA:lt_excel    TYPE TABLE OF alsmex_tabline,
 
         lv_col      TYPE i,
 
         lv_flag     TYPE abap_bool,
 
         lo_cols     TYPE REF TO cl_salv_columns_table,
 
         lo_column   TYPE REF TO cl_salv_column,
 
         lv_table    TYPE char50,
 
         lv_field    TYPE char50,
 
         lv_clause   TYPE char200,
 
         lt_tab      TYPE string_table,
 
       ##NEEDED ls_tab      LIKE LINE OF lt_tab,
 
         lv_transaction TYPE tstc-tcode VALUE 'SE16N',
 
         lv_count    TYPE i VALUE 0.
TYPES: BEGIN OF hex_record,
 
                 myhex TYPE x LENGTH 1024,
 
               END OF hex_record.
 
        DATA lt_upload     TYPE STANDARD TABLE OF hex_record.
 
        DATA lv_filelength TYPE i.
 
        DATA:gv_filename TYPE string.

 
"Based on custom table name it will navigate to se16n screen 
    IF rb_exp EQ abap_true.
 
      SET PARAMETER ID 'DTB' FIELD p_tab.
"Providing Authorization 
      AUTHORITY-CHECK OBJECT 'S_TCODE'
 
               ID 'TCD' FIELD 'SE16N'.
 
      IF sy-subrc EQ 0.
 
        CALL TRANSACTION  lv_transaction.
 
      ELSE.
 
        MESSAGE 'User dont have authorization for SE16N T-Code' TYPE 'E'.
 
      ENDIF.
 
    ELSEIF rb_imp EQ abap_true.
 "Here we are mainataining some custom table that supposed to insert the data 
      SELECT low FROM tvarvc WHERE name = 'ZCUST_TAB_TVARVC' AND low = @p_tab INTO TABLE (lt_tvarvc).
 
      IF lt_tvarvc IS NOT INITIAL.
 
"Here we are Creating the dynamic internal table based on the table we have "provided in the selection screen
        CREATE DATA gt_dyn_tab TYPE  TABLE OF (p_tab).
 
        CREATE DATA gs_dyn_tab TYPE (p_tab).
 
        CREATE DATA gt_dyn_tab1 TYPE  TABLE OF (p_tab).
 
        ASSIGN gt_dyn_tab-&amp;gt;* TO &amp;lt;fs_dyn&amp;gt;.
 
        ASSIGN gt_dyn_tab1-&amp;gt;* TO &amp;lt;fs_dyn1&amp;gt;.
 
        ASSIGN gs_dyn_tab-&amp;gt;* TO &amp;lt;fs_dyns&amp;gt;.
 
        
 
        gv_filename = p_path.
 


        cl_sovy_container_control=&amp;gt;get_container_control(
 
          EXPORTING
 
            office_integration_mode = cl_sovy_container_control=&amp;gt;soi_mode_import
 
*           config                  = VALUE #( enforce_new_integration = enforce )
 
          IMPORTING
 
            control                 = DATA(control) ).
 
        DATA(container) = NEW cl_gui_custom_container( container_name = 'CONTAINER' ).
 
        control-&amp;gt;init_control( r3_application_name = 'SHEET_IMPORT'
 
                               parent              = container ).
 
        control-&amp;gt;get_document_proxy( EXPORTING document_type  = 'Excel.Sheet'
 
                                     IMPORTING document_proxy = DATA(document_proxy) ).
 
        CALL FUNCTION 'GUI_UPLOAD'
           EXPORTING
             filename   = gv_filename
             filetype   = 'BIN'
           IMPORTING
             filelength = lv_filelength
           TABLES
             data_tab   = lt_upload.
 

        document_proxy-&amp;gt;open_document_from_table( document_size  = lv_filelength
 
                                                 document_table = lt_upload ).
 
        document_proxy-&amp;gt;get_spreadsheet_interface( IMPORTING sheet_interface = DATA(sheet) ).
 
        DATA sheetname TYPE soi_field_name.
 
        sheetname = 'Sheet1'.
 
        sheet-&amp;gt;get_active_sheet( IMPORTING sheetname = sheetname ).
 
        DATA(rangesdef) = VALUE soi_dimension_table( ( row     = 1
 
                                                    column  = 1
 
                                                    rows    = 1000
 
                                                    columns = 20 ) ).
 
        DATA ranges   TYPE soi_range_list.
 
        DATA : contents TYPE soi_generic_table,
 
               ls_data  TYPE soi_generic_item.
 
        sheet-&amp;gt;get_ranges_data( EXPORTING rangesdef = rangesdef
 
                                IMPORTING contents  = contents
 
                                CHANGING  ranges    = ranges ).
 
        IF sy-subrc EQ 0.
 
*** --- Sort
 
          SORT lt_excel BY row.
 

*          LOOP AT lt_excel INTO DATA(ls_excel).
 
          LOOP AT contents INTO ls_data.
 
*** --- Adding count to skip the mapping for MANDT field
 
*            lv_col = ls_excel-col + 1.
 
            lv_col = ls_data-column + 1.
 

            ASSIGN COMPONENT lv_col OF STRUCTURE &amp;lt;fs_dyns&amp;gt; TO &amp;lt;fs_dyn_field&amp;gt;.
 
            IF sy-subrc = 0.
 
***-- Compare Excel sheet column data and Dynamic table fields
 
*              IF ls_excel-row = 1.
 
              IF ls_data-row = 1.
 
                CALL FUNCTION 'DDIF_FIELDINFO_GET'      "#EC CI_SUBRC
                   EXPORTING
                     tabname        = p_tab
                   TABLES
                     dfies_tab      = gt_table_filds
                   EXCEPTIONS ##FM_SUBRC_OK
                     not_found      = 1
                     internal_error = 2
                     OTHERS         = 3.
 
                IF sy-subrc IS NOT INITIAL.
 
                  MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
 
                          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
 
                ENDIF.
 
                READ TABLE gt_table_filds INTO DATA(ls_table_fields) INDEX lv_col.
 
                IF sy-subrc = 0.
 

                  IF ls_table_fields-scrtext_m EQ ls_data-value OR ls_table_fields-scrtext_l EQ ls_data-value  .
 
                  ELSE.
 
                    MESSAGE 'Provided table is not matching with the Excel data ' TYPE 'E'.
 
                    LEAVE SCREEN.
 
                  ENDIF.
 
                ENDIF.
 
              ELSE.
 
*                &amp;lt;fs_dyn_field&amp;gt; = ls_excel-value.
                 &amp;lt;fs_dyn_field&amp;gt; = ls_data-value.
 
              ENDIF.
 
            ENDIF.
 
*            IF ls_excel-row GT 1.
 
            DATA(lv_val) = ls_data-value.
 
            IF ls_data-row GT 1.
 
              AT NEW row.
 
                IF lv_val IS INITIAL .
 
                  EXIT.
 
                ENDIF.
 
              ENDAT .
 
              AT END OF row.
 
                IF &amp;lt;fs_dyns&amp;gt;  IS ASSIGNED AND  &amp;lt;fs_dyn&amp;gt; IS ASSIGNED.
 
                  APPEND &amp;lt;fs_dyns&amp;gt; TO &amp;lt;fs_dyn&amp;gt;.
 
                ENDIF.
 
                CLEAR &amp;lt;fs_dyns&amp;gt;.
 
              ENDAT.
 
            ENDIF.
 
*            NEW
 
*            ENDIF.
 
*            end
 
          ENDLOOP.
 
        ENDIF.
 


        "Excel data to validate
 
        LOOP AT &amp;lt;fs_dyn&amp;gt; ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_dn1&amp;gt;).
 
          lv_count =  lv_count + 1.
 
          CLEAR:lv_flag.
 
          "Checking for any custom table is linked with Check table
 
          LOOP AT gt_table_filds ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_tab&amp;gt;) WHERE checktable IS NOT INITIAL. "#EC CI_NESTED
 
            "To fetch the Check table information
 
            ASSIGN COMPONENT &amp;lt;lfs_tab&amp;gt;-fieldname OF STRUCTURE &amp;lt;lfs_dn1&amp;gt; TO  &amp;lt;fs_val&amp;gt;.
 
            IF &amp;lt;fs_val&amp;gt; IS ASSIGNED AND &amp;lt;fs_val&amp;gt; IS NOT INITIAL.
 
              IF &amp;lt;lfs_tab&amp;gt;-fieldname EQ 'MATNR'.
 
                CALL FUNCTION 'CONVERSION_EXIT_MATN1_INPUT'     "#EC CI_SUBRC
                   EXPORTING
                     input        = &amp;lt;fs_val&amp;gt;
                   IMPORTING
                     output       = &amp;lt;fs_val&amp;gt;
                   EXCEPTIONS
                     length_error = 1
                     OTHERS       = 2.
 
                IF sy-subrc &amp;lt;&amp;gt; 0.
 
                  MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
 
                          WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
 
                ENDIF.
 
              ELSE.
                 &amp;lt;fs_val&amp;gt; = |{ &amp;lt;fs_val&amp;gt; ALPHA = IN }|.
 
              ENDIF.
 
              CALL FUNCTION 'DDIF_FIELDINFO_GET'  "#EC CI_SUBRC
                 EXPORTING
                   tabname        = &amp;lt;lfs_tab&amp;gt;-checktable
                 TABLES
                   dfies_tab      = gt_table_filds1
                 EXCEPTIONS
                   not_found      = 1
                   internal_error = 2
                   OTHERS         = 3.
 
              IF sy-subrc IS NOT INITIAL.
 
                MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
 
                        WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
 
              ENDIF.
 
              READ TABLE gt_table_filds1  INTO DATA(ls_fields1) WITH KEY domname = &amp;lt;lfs_tab&amp;gt;-domname."Reading the Check table field
 
              IF sy-subrc EQ 0.
 
                lv_field = ls_fields1-fieldname.   "check table field
 
                lv_table = &amp;lt;lfs_tab&amp;gt;-checktable.  "check table name
 
                "Comparing each Excel data with the check table value if it is exist or not
 
                lv_clause = |{ lv_field }| &amp;amp;&amp;amp; | = | &amp;amp;&amp;amp; |'| &amp;amp;&amp;amp; |{ &amp;lt;fs_val&amp;gt; }| &amp;amp;&amp;amp; |'| .
 
                SELECT SINGLE (lv_field)  FROM (lv_table) INTO ls_tab WHERE (lv_clause). "#EC CI_SUBRC
 
                CLEAR :ls_tab.
 
                IF sy-subrc NE 0.
 
                  gs_msg-message = TEXT-010. "text-010(Data has not updated)
 
                  gs_msg-row = lv_count.
 
                  gs_msg-lights = 1.
 
                  APPEND gs_msg TO gt_msg.
 
                  CLEAR:gs_msg.
 
                  lv_flag = abap_true.
 
                ENDIF.
 
              ENDIF.
 
            ENDIF.
 
          ENDLOOP.
 
*        IF sy-subrc NE 0.
 
          IF lv_flag EQ abap_false.
 
            gs_msg-message = TEXT-011 .
 
            gs_msg-row = lv_count.
 
            gs_msg-lights = 3.
 
            APPEND gs_msg TO gt_msg.
 
            CLEAR:gs_msg.
 
            APPEND &amp;lt;lfs_dn1&amp;gt; TO &amp;lt;fs_dyn1&amp;gt;.
 
            CLEAR: &amp;lt;lfs_dn1&amp;gt;.
 
          ENDIF.
 
        ENDLOOP.
//Locking the table.
        IF &amp;lt;fs_dyn1&amp;gt; IS ASSIGNED AND &amp;lt;fs_dyn1&amp;gt; IS NOT INITIAL.
 
          CALL FUNCTION 'ENQUEUE_E_TABLE'
             EXPORTING
               mode_rstable   = 'E'
               tabname        = p_tab
             EXCEPTIONS
               foreign_lock   = 1
               system_failure = 2
               OTHERS         = 3.
 
          IF sy-subrc EQ 0.
 
            MODIFY (p_tab) FROM TABLE &amp;lt;fs_dyn1&amp;gt;.
 
            IF sy-subrc EQ 0.
 
              COMMIT WORK.
 
            ELSE.
 
              ROLLBACK WORK.
 
            ENDIF.
 
            CALL FUNCTION 'DEQUEUE_E_TABLE'
               EXPORTING
                 mode_rstable = 'E'
                 tabname      = p_tab.
 
          ENDIF.
 
                                                          "#EC CI_SUBRC
 
        ENDIF.
 
*Data is updated succussfully without any interruption then display's below message
 
        IF gt_msg IS INITIAL.
 
          MESSAGE TEXT-008 TYPE 'S'.  "text-008(Data is Updated succussfully)
 
        ENDIF.
 
        IF gt_msg IS NOT INITIAL.
 
          TRY.
 
              cl_salv_table=&amp;gt;factory(
 
                IMPORTING
 
                  r_salv_table = go_salv                       " Basis Class Simple ALV Tables
 
                CHANGING
 
                  t_table      = gt_msg
 
              ).
 
            ##NO_HANDLER            CATCH cx_salv_msg INTO gv_msg.
 
          ENDTRY.
 
          TRY.
 
              lo_cols = go_salv-&amp;gt;get_columns( ).
 
              lo_cols-&amp;gt;set_exception_column(
 
                value = 'LIGHTS' ).
 
            ##NO_HANDLER  CATCH cx_salv_data_error.
 
          ENDTRY.
 
          TRY.
 
              lo_column = lo_cols-&amp;gt;get_column( columnname = 'ROW' ).
 
              lo_column-&amp;gt;set_long_text( ‘Row' ).
 
              lo_column-&amp;gt;set_medium_text( 'Row’ ).
 
              lo_column-&amp;gt;set_short_text( ‘Row’ ).
 
              lo_column-&amp;gt;set_output_length( 6 ).
 

              lo_column = lo_cols-&amp;gt;get_column( columnname = 'MESSAGE' ).
 
              lo_column-&amp;gt;set_long_text( ‘Message’ ).
 
              lo_column-&amp;gt;set_medium_text( ‘Message’ ).
 
              lo_column-&amp;gt;set_short_text( ‘Message' ).
 
              lo_column-&amp;gt;set_output_length( 15 ).
 
            ##NO_HANDLER           CATCH cx_salv_not_found.
 
          ENDTRY.
 

**Displaying the Error mesage in ouput
 
          go_salv-&amp;gt;display( ).
 
          CLEAR:gt_msg.
 
        ENDIF.
 
      ELSE.
 
        MESSAGE e242(zotc_r1_message) WITH p_tab.
 
      ENDIF.
 
    ENDIF.
 

  ENDMETHOD.
 
  METHOD pop_up_dialogue.
 
    DATA:lv_rc   TYPE i,
 
         lt_file TYPE TABLE OF file_table.
 
    TRY.
 
        gv_wtitle = ‘Please Select the file'.
 
        cl_gui_frontend_services=&amp;gt;file_open_dialog(       "#EC CI_SUBRC
 
          EXPORTING
 
            window_title            = gv_wtitle                 " Title Of File Open Dialog
 
            default_filename        = gv_format                 " Default File Name
 
            file_filter             = cl_gui_frontend_services=&amp;gt;filetype_excel                 " File Extension Filter String
 
          CHANGING
 
            file_table              = lt_file                 " Table Holding Selected Files
 
            rc                      = lv_rc              " Return Code, Number of Files or -1 If Error Occurred
 
          EXCEPTIONS
 
            file_open_dialog_failed = 1                " "Open File" dialog failed
 
            cntl_error              = 2                " Control error
 
            error_no_gui            = 3                " No GUI available
 
            not_supported_by_gui    = 4                " GUI does not support this
 
            OTHERS                  = 5
 
        ).
 

        IF sy-subrc &amp;lt;&amp;gt; 0.
 
          CASE sy-subrc.
 
            WHEN 1.
 
              MESSAGE ‘file_openDialog_failed’ TYPE 'E'.
 
            WHEN 2.
 
              MESSAGE ‘Control_Error' TYPE 'E'.
 
            WHEN 3.
 
              MESSAGE ‘Error_no_gui’ TYPE 'E'.
 
            WHEN 4.
 
              MESSAGE ‘Not supported by GUI’ TYPE 'E'.
 
            WHEN OTHERS.
 
              MESSAGE ‘Other issue’ TYPE 'E'.
 
          ENDCASE.
 
        ENDIF.
 
      CATCH cx_root INTO DATA(lx_error).
 
        MESSAGE lx_error-&amp;gt;get_text( ) TYPE 'E'.
 
    ENDTRY.
 


    IF lt_file IS NOT INITIAL.
 
      p_path = lt_file[ 1 ]-filename.
 
    ENDIF.
 
  ENDMETHOD.
 
  METHOD initialize.
 
    CLEAR: gs_msg, gt_msg, gv_wtitle       ,
 
     gv_format       ,
 
     gt_dyn_tab      ,
 
     gt_dyn_tab1     ,
 
     go_salv         ,
 
     gv_msg          ,
 
     gt_table_filds  ,
 
     gt_table_filds1 ,
 
     gs_dyn_tab    ,
 
     gv_auth_result.
 
  ENDMETHOD.
 
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;
&lt;P&gt;So ,The output Screen will be as below&amp;nbsp;&lt;BR /&gt;&lt;STRONG&gt;Screenshots / Walkthrough&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Export Mode (SE16N)&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Enter a valid custom table name&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Select &lt;STRONG&gt;Export&lt;/STRONG&gt; → Runs SE16N for the table&lt;/P&gt;
&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="select.png" style="width: 750px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285726iEEAEFACA303315F5/image-dimensions/750x347?v=v2" width="750" height="347" role="button" title="select.png" alt="select.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;
&lt;H4 id="toc-hId-1600119302"&gt;&lt;STRONG&gt;Download the Table Data&lt;/STRONG&gt;&lt;/H4&gt;
&lt;P&gt;Download data as Excel from SE16N and fill in the template&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Downloading SE16N to Local system.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285728i12F36AF0D696B9CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Downloading SE16N to Local system.png" alt="Downloading SE16N to Local system.png" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;H4 id="toc-hId-1403605797"&gt;&lt;STRONG&gt;Import Mode&lt;/STRONG&gt;&lt;/H4&gt;
&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; Select &lt;STRONG&gt;Import&lt;/STRONG&gt;, provide the Excel path&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt; The report validates each entry and updates records&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;Mismatch in fields shows error in SALV&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Valid data gets inserted, shown in success message table&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Selection_screen.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285729iCFAEC13EA6F6B6C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Selection_screen.png" alt="Selection_screen.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;If th&lt;FONT color="#000000"&gt;ere is mismatch between the table fields and excel fields we will get some validation error or else the data will be inserted &amp;amp; the output will be showed as below&lt;/FONT&gt;.&lt;/P&gt;
&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Sucuess_full_update_output.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285731i6D372F19B4652469/image-size/large?v=v2&amp;amp;px=999" role="button" title="Sucuess_full_update_output.png" alt="Sucuess_full_update_output.png" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;H3 id="toc-hId-1078009573"&gt;&lt;STRONG&gt;Important Notes&lt;/STRONG&gt;&lt;/H3&gt;
&lt;UL&gt;
&lt;LI&gt;
&lt;P&gt;This report is built to work only with &lt;STRONG&gt;custom transparent tables&lt;/STRONG&gt; (Z-tables)&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;Validation is driven by check tables defined in the Data Dictionary&lt;/P&gt;
&lt;/LI&gt;
&lt;LI&gt;
&lt;P&gt;DDIF_FIELDINFO_GET is used to fetch metadata dynamically&lt;/P&gt;
&lt;/LI&gt;
&lt;/UL&gt;
&lt;HR /&gt;
&lt;H3 id="toc-hId-881496068"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H3&gt;
&lt;P&gt;This utility provides a robust, flexible, and reusable solution for Excel-based data uploads and downloads involving custom Z-tables. By validating data against check tables and dynamically creating data structures, the tool ensures that only clean, consistent data is written to the database.&lt;/P&gt;
&lt;P&gt;Such a tool not only simplifies end-user data entry but also reduces manual effort and errors significantly.&lt;/P&gt;
&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/excel-upload-download-for-custom-tables-with-check-table-validation/ba-p/14150894"/>
    <published>2025-08-03T09:07:14.145000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-retro-gamers-solved-time-travel-debugging-in-1995-and-why-your/ba-p/14171020</id>
    <title>How Retro Gamers Solved Time-Travel Debugging in 1995 (And Why Your Enterprise Debugger Still Can't)</title>
    <updated>2025-08-04T14:49:47.702000+02:00</updated>
    <author>
      <name>Alice_V</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/609259</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1865932517"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="social_oisee_girl-hacker_typing_on_the_right_keybord_looking_then_ty_2159b60d-b7e2-4290-8f94-5f34d4e0ef55_11-ezgif.com-video-to-gif-converter (1).gif" style="width: 800px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296238i4E398B354CD0D961/image-size/large?v=v2&amp;amp;px=999" role="button" title="social_oisee_girl-hacker_typing_on_the_right_keybord_looking_then_ty_2159b60d-b7e2-4290-8f94-5f34d4e0ef55_11-ezgif.com-video-to-gif-converter (1).gif" alt="social_oisee_girl-hacker_typing_on_the_right_keybord_looking_then_ty_2159b60d-b7e2-4290-8f94-5f34d4e0ef55_11-ezgif.com-video-to-gif-converter (1).gif" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="ember1375" id="toc-hId-1669419012"&gt;A Tale of Two Debuggers&lt;/H3&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scene 1:&lt;/STRONG&gt; A modern enterprise developer in 2025, debugging a critical SAP integration. "&lt;STRONG&gt;&lt;EM&gt;If only I could go back in time and see what happened,&lt;/EM&gt;&lt;/STRONG&gt;" they sigh, adding another log statement.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scene 2:&lt;/STRONG&gt; A 14-year-old in 2005, playing Super Mario on ZSNES. They press F1 to save state, die horribly, press F3 to load state, try a different approach. "&lt;STRONG&gt;&lt;EM&gt;Cool&lt;/EM&gt;&lt;/STRONG&gt;," they say, taking it completely for granted.&lt;/P&gt;&lt;P class=""&gt;Welcome to the upside-down world where teenage gamers have better debugging tools than Fortune 500 companies.&lt;/P&gt;&lt;H2 id="ember1379" id="toc-hId-1343822788"&gt;TL;DR: github/ysichov/Smart-Debugger&lt;/H2&gt;&lt;P class=""&gt;&lt;A class="" href="https://github.com/ysichov/Smart-Debugger" target="_self" rel="nofollow noopener noreferrer"&gt;https://github.com/ysichov/Smart-Debugger&lt;/A&gt;&lt;/P&gt;&lt;H3 id="ember1381" id="toc-hId-1276392002"&gt;The Secret That Wasn't a Secret&lt;/H3&gt;&lt;P class=""&gt;Here's what the retro computing community figured out decades ago:&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Everything in a computer is deterministic except I/O.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;That's it. That's the whole secret. Let me explain why this changes everything.&lt;/P&gt;&lt;H3 id="ember1385" id="toc-hId-1079878497"&gt;The Beautiful Math of Determinism&lt;/H3&gt;&lt;PRE&gt;Same CPU state + Same memory + Same inputs = Same result
ALWAYS.&lt;/PRE&gt;&lt;P class=""&gt;This means you don't need to record everything. You only need to record:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Initial state (once)&lt;/LI&gt;&lt;LI&gt;External inputs (keyboard, interrupts, timers)&lt;/LI&gt;&lt;LI&gt;I/O responses&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;For a Z80 system, that's maybe 100 bytes per second of recording. For an hour of debugging? About 360KB. That's smaller than a single Slack emoji.&lt;/P&gt;&lt;H3 id="ember1389" id="toc-hId-883364992"&gt;The Timeline That Should Embarrass Us All&lt;/H3&gt;&lt;P class=""&gt;Let's put this in perspective with a side-by-side timeline:&lt;/P&gt;&lt;H3 id="ember1391" id="toc-hId-686851487"&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;Gaming/Emulator World vs &lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt; Enterprise World&lt;/H3&gt;&lt;P class=""&gt;&lt;STRONG&gt;1997&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;ZSNES&lt;/STRONG&gt;: Save states introduced. Gamers can save/load any moment instantly&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Have you tried adding more print statements?"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;1999&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;Nesticle&lt;/STRONG&gt;: Frame advance debugging. Step through games frame by frame&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Maybe we should standardize on log4j?"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2003&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;FCEU&lt;/STRONG&gt;: TAS* tools mainstream. Input recording, RAM watch, Lua scripting&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Distributed debugging is impossible"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2004&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;MAME&lt;/STRONG&gt;: Debugger with memory watchpoints, execution trace, state diffing&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Remote debugging sometimes works if you're lucky"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2006&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;DeSmuME&lt;/STRONG&gt;: Dual-screen debugging, touchscreen record/replay&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Have you tried turning on verbose logging?"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2010&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;MAME&lt;/STRONG&gt;: Full rewind feature. Go back in time at any moment&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Debugging microservices is hard"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2014&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;BizHawk&lt;/STRONG&gt;: Multi-system TAS suite. Deterministic replay across different CPUs&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Maybe we need more logs?"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2018&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;RetroArch&lt;/STRONG&gt;: Netplay with rollback, achievements system, shaders&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Debugging in production is scary"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2020&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;TAS Bot&lt;/STRONG&gt;: AI playing games frame-perfectly using debug tools&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "We added structured logging!"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2023&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;LibTAS&lt;/STRONG&gt;: TAS tools for native Linux games, not just emulators&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Time-travel debugging? Sounds futuristic!"&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2025&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;&lt;STRONG&gt;Every emulator&lt;/STRONG&gt;: Rewind, replay, Lua scripting, memory analysis standard&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":briefcase:"&gt;💼&lt;/span&gt;&lt;STRONG&gt;Enterprise&lt;/STRONG&gt;: "Our new &lt;STRONG&gt;AI&lt;/STRONG&gt; can analyze your logs!"&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="ember1414" id="toc-hId-490337982"&gt;The Tragedy in One Image&lt;/H3&gt;&lt;PRE&gt;Teenager in 2004: *casually rewinds Mega Man X, 
                   adjusts one frame, gets perfect run*

Senior Developer in 2025: "The bug only happens in production 
                          on Tuesdays. We'll never catch it."&lt;/PRE&gt;&lt;H3 id="ember1415" id="toc-hId-293824477"&gt;What Makes This Hilarious/Sad&lt;/H3&gt;&lt;P class=""&gt;A Nintendo emulator from 1998 can:&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Run Super Mario&lt;/LI&gt;&lt;LI&gt;Let you save at any millisecond&lt;/LI&gt;&lt;LI&gt;Rewind time&lt;/LI&gt;&lt;LI&gt;Record and replay any bug perfectly&lt;/LI&gt;&lt;LI&gt;Show you every memory change in real-time&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;Your enterprise debugger can:&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Set breakpoints (sometimes)&lt;/LI&gt;&lt;LI&gt;Print variables (if you're lucky)&lt;/LI&gt;&lt;LI&gt;Crash (frequently)&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="ember1420" id="toc-hId-97310972"&gt;Enter Tool-Assisted Speedrunning: Debugging as Art&lt;/H3&gt;&lt;P class=""&gt;TAS creators took these debugging tools and turned them into an art form. Watch this:&lt;/P&gt;&lt;P class=""&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FfxZuzos7Auk%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DfxZuzos7Auk&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FfxZuzos7Auk%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="Super Mario Bros. 3 - Wrong Warp" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;P class=""&gt;They're not just playing games. They're:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Analyzing frame-by-frame execution&lt;/LI&gt;&lt;LI&gt;Tracking memory corruption&lt;/LI&gt;&lt;LI&gt;Exploiting race conditions&lt;/LI&gt;&lt;LI&gt;Optimizing code paths&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Sound familiar? That's literally what we do when debugging, except they have better tools.&lt;/P&gt;&lt;H3 id="ember1425" id="toc-hId--174433902"&gt;The ABAP Revolution: Finally, Someone Gets It&lt;/H3&gt;&lt;P class=""&gt;&lt;A class="" href="https://www.linkedin.com/in/ysychov/" target="_blank" rel="noopener nofollow noreferrer"&gt;Yurii Sychov&lt;/A&gt; looked at ABAP debugging and had a radical thought: "What if we just... did what emulators do?"&lt;/P&gt;&lt;P class=""&gt;His Smart-Debugger implements what gamers take for granted:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Variable time travel&lt;/LI&gt;&lt;LI&gt;Execution recording&lt;/LI&gt;&lt;LI&gt;State comparison&lt;/LI&gt;&lt;LI&gt;Visual debugging&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;But here's where it gets REALLY interesting...&lt;/P&gt;&lt;H3 id="ember1431" id="toc-hId--370947407"&gt;The Memory Revolution: It's 2025, Not 1975&lt;/H3&gt;&lt;P class=""&gt;Modern servers have TERABYTES of RAM. An ABAP variable? Maybe 1KB. Even a complex object graph? Perhaps 1MB.&lt;/P&gt;&lt;P class=""&gt;This means we can store:&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Every variable change&lt;/LI&gt;&lt;LI&gt;Every method call&lt;/LI&gt;&lt;LI&gt;Every execution path&lt;/LI&gt;&lt;LI&gt;Multiple complete runs&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;Do the math:&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;1000 variables × 1KB each × 1000 changes = 1GB&lt;/LI&gt;&lt;LI&gt;Your server's RAM: 512GB&lt;/LI&gt;&lt;LI&gt;Percentage used: 0.2%&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;STRONG&gt;We're optimizing for constraints that haven't existed for 20 years.&lt;/STRONG&gt;&lt;/BLOCKQUOTE&gt;&lt;H3 id="ember1438" id="toc-hId--567460912"&gt;The Graph Diff Revolution&lt;/H3&gt;&lt;P class=""&gt;Now here's where it gets wild. Since we can store everything, we can:&lt;/P&gt;&lt;H3 id="ember1440" id="toc-hId--763974417"&gt;1. Record Multiple Executions&lt;/H3&gt;&lt;P class=""&gt;abap&lt;/P&gt;&lt;PRE&gt;" Run 1: Bug happens
execution_graph_1 = record_full_execution( buggy_input )

" Run 2: Bug doesn't happen  
execution_graph_2 = record_full_execution( good_input )&lt;/PRE&gt;&lt;H3 id="ember1442" id="toc-hId--960487922"&gt;2. Build Execution Graphs&lt;/H3&gt;&lt;PRE&gt;Graph 1 (Buggy):
main() → parse_input() → validate() → process() → CRASH
         ↓                ↓           ↓
      [user_id: 123]  [cache: empty] [null_ptr]

Graph 2 (Working):
main() → parse_input() → validate() → process() → success()
         ↓                ↓           ↓
      [user_id: 123]  [cache: valid] [object_ref]&lt;/PRE&gt;&lt;H3 id="ember1443" id="toc-hId--1157001427"&gt;3. Diff the Graphs&lt;/H3&gt;&lt;P class=""&gt;diff&lt;/P&gt;&lt;PRE&gt;@@ -15,7 +15,7 @@
 validate() {
   check_permission()
-  load_user_context()  // ← Returns null in buggy run
+  load_user_context()  // ← Returns valid object
   verify_data()
 }

Key difference: cache state at execution time
Buggy:   cache.contains(user_123) = false
Working: cache.contains(user_123) = true&lt;/PRE&gt;&lt;H3 id="ember1445" id="toc-hId--1353514932"&gt;4. Compare with Static Analysis&lt;/H3&gt;&lt;P class=""&gt;Your static analysis says load_user_context() can never return null. Your execution trace says it did. &lt;STRONG&gt;Boom.&lt;/STRONG&gt; Bug found.&lt;/P&gt;&lt;H3 id="ember1447" id="toc-hId--1550028437"&gt;The AI Cherry on Top&lt;/H3&gt;&lt;P class=""&gt;Now feed this to an LLM with structured data:&lt;/P&gt;&lt;PRE&gt;{
  "execution_diff": {
    "divergence_point": "load_user_context()",
    "buggy_state": {"cache": "empty", "result": "null"},
    "working_state": {"cache": "valid", "result": "user_object"},
    "static_analysis": "method cannot return null"
  },
  "context": {
    "method_signature": "load_user_context(): User",
    "cache_invalidation_log": ["14:23:15 - cache cleared", 
                               "14:23:16 - request received"]
  }
}

Prompt: "Based on execution diff, identify root cause"&lt;/PRE&gt;&lt;P class=""&gt;&lt;STRONG&gt;LLM&lt;/STRONG&gt;: "Race condition detected: Cache was invalidated at 14:23:15, but the null check in load_user_context() only verifies if cache exists, not if the specific key is present. The 1-second window allows requests to hit empty cache."&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Automated RCA achieved.&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="ember1451" id="toc-hId--1746541942"&gt;But Wait, What About Reality?&lt;/H3&gt;&lt;P class=""&gt;"Sure," you say, "but emulators work with closed systems. What about network calls? Databases? Microservices?"&lt;/P&gt;&lt;P class=""&gt;Fair point! Modern systems have more non-determinism. But that's exactly why we need BETTER recording, not worse:&lt;/P&gt;&lt;H3 id="ember1454" id="toc-hId--1943055447"&gt;The I/O Boundary Principle Still Applies&lt;/H3&gt;&lt;PRE&gt;" Instead of just keyboard input, modern I/O includes:
IO_Events = {
  network_responses,     " Record actual HTTP responses
  database_results,      " Record query results  
  timestamp_calls,       " Record time() returns
  random_values,         " Record RNG outputs
  thread_scheduling      " Record context switches
}&lt;/PRE&gt;&lt;P class=""&gt;Yes, it's more complex than a NES emulator. But the principle remains: &lt;STRONG&gt;Record at the boundaries, replay deterministically.&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="ember1456" id="toc-hId--1971385261"&gt;The Call to Revolution&lt;/H3&gt;&lt;P class=""&gt;Here's what we should be demanding:&lt;/P&gt;&lt;H3 id="ember1458" id="toc-hId-2127068530"&gt;For Every Debugger:&lt;/H3&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Time travel (perfected in emulators since ~2010)&lt;/LI&gt;&lt;LI&gt;Deterministic replay (standard in TAS tools since 2004)&lt;/LI&gt;&lt;LI&gt;State diffing (TAS creators do this manually)&lt;/LI&gt;&lt;LI&gt;Execution graphs (we have the memory!)&lt;/LI&gt;&lt;LI&gt;Automatic RCA (we have the LLMs!)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="ember1460" id="toc-hId-1930555025"&gt;The Technical Requirements:&lt;/H3&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Record I/O boundaries (a few KB/second)&lt;/LI&gt;&lt;LI&gt;Snapshot on demand (even 1GB is nothing)&lt;/LI&gt;&lt;LI&gt;Build execution graphs (basic CS)&lt;/LI&gt;&lt;LI&gt;Diff and analyze (solved problem)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="ember1462" id="toc-hId-1734041520"&gt;Start Today&lt;/H3&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;If you use ABAP&lt;/STRONG&gt;: Get Smart-Debugger now ^_^&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For other languages&lt;/STRONG&gt;: Demand better tools&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For tool creators&lt;/STRONG&gt;: Study emulators, not enterprise&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="ember1464" id="toc-hId-1537528015"&gt;The Future Is Already Here&lt;/H3&gt;&lt;P class=""&gt;It's just unevenly distributed. And ironically, it's been living in game emulators for 30 years.&lt;/P&gt;&lt;P class=""&gt;Next time someone tells you time-travel debugging is "too hard" or "too expensive," show them a 15-year-old speedrunner casually rewinding time to manipulate RNG in Pokémon. Then ask them why enterprise software can't do the same.&lt;/P&gt;&lt;P class=""&gt;Memory is cheap. CPU is fast. The algorithms are known. The only thing missing is the will to build it.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Welcome to 2025. It's time to debug like it.&lt;/STRONG&gt;&lt;/P&gt;&lt;HR /&gt;&lt;P class=""&gt;&lt;STRONG&gt;Your debugger doesn't suck because it's hard to build.&lt;/STRONG&gt; &lt;STRONG&gt;It sucks because the culture around it never thought like a gamer.&lt;/STRONG&gt; Time to change that.&lt;/P&gt;&lt;P class=""&gt;P.S. &lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;TAS (Tool-Assisted Speedrun) &lt;/STRONG&gt;A meticulously crafted playthrough of a video game using emulator tools like save states, slow motion, and frame-by-frame control. The goal: perfect execution—sometimes exploiting bugs—to achieve record-breaking performance or hilarious outcomes.&lt;/P&gt;&lt;HR /&gt;&lt;P class=""&gt;&lt;EM&gt;Alice Vinogradova is a Senior Software Engineer at Microsoft who thinks your debugger should be at least as good as a Super Nintendo emulator from 1998.&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-retro-gamers-solved-time-travel-debugging-in-1995-and-why-your/ba-p/14171020"/>
    <published>2025-08-04T14:49:47.702000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-26/ba-p/14171256</id>
    <title>Customer &amp; Partner Roundtable for SAP BTP ABAP Environment #26</title>
    <updated>2025-08-04T17:50:33.457000+02:00</updated>
    <author>
      <name>iwona_hahn</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4326</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1860394371" id="toc-hId-1865934538"&gt;&lt;STRONG&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;The call for contributions for one of the upcoming roundtables is open!&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;If you want to show a demo or share a use case scenario for SAP BTP ABAP Environment, send us an&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="mailto:sap_btp_abap_environment@sap.com" target="_blank" rel="noopener nofollow noreferrer"&gt;email&lt;/A&gt;&amp;nbsp;and we will get back to you.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1534798147" id="toc-hId-1540338314"&gt;Introduction&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN class=""&gt;A&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/abap/environment.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;BTP&amp;nbsp;ABAP&amp;nbsp;environment (aka Steampunk)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;and ABAP Cloud&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;became&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;more popular&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;inside and outside of SAP, there is a high demand for rolling out the latest product news and updates, asking questions, and showing demos.&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;You can find the slides presented, recordings, and further references from the previous roundtables in this&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/iwonahahn/SAP-BTP-ABAP-Environment-Roundtable/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_0-1751374366410.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281320iF5290A011527C9B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_0-1751374366410.jpeg" alt="iwona_hahn_0-1751374366410.jpeg" /&gt;&lt;/span&gt;&lt;H2 id="toc-hId-1338284642" id="toc-hId-1343824809"&gt;Meeting Information&lt;BR /&gt;&lt;BR /&gt;&lt;/H2&gt;&lt;STRONG&gt;When:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;August 19&lt;/SPAN&gt;&lt;/STRONG&gt;, 10:00 - 11:00 AM CEST&amp;nbsp; –&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://sap-se.zoom.us/meeting/register/DZh-JQ8wQm-rnynp9s4Ofw" target="_blank" rel="nofollow noopener noreferrer"&gt;Zoom Meeting&lt;/A&gt;&amp;nbsp;(&lt;STRONG&gt;please register&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in advance)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Who:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;customers, partners,&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join this roundtable&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP ABAP team&lt;/STRONG&gt;:&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4296" target="_blank"&gt;Frank Jentsch&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Lead for SAP BTP ABAP&amp;nbsp;Environment)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/1641196" target="_blank"&gt;Nora Klemp&lt;/A&gt; (Product Management)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4326" target="_self"&gt;&lt;SPAN class=""&gt;Iwona Hahn&lt;/SPAN&gt;&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Management)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Jörg-Michael Grassau (Development Expert)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Li Shuang (Senior Developer)&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Preliminary Agenda:&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Product update for SAP BTP ABAP Environment release 2508&lt;/LI&gt;&lt;LI&gt;Partner Engagement for SAP BTP ABAP Environment&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Live demos:&amp;nbsp;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;ABAP Developer Tools / Debugger -&amp;nbsp;New comparison tool for internal tables&lt;/LI&gt;&lt;LI&gt;XCO Library - Excel API: Text alignment, cell merging, tab color&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Q&amp;amp;A&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;SPAN&gt;Looking forward to meeting you!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;A href="https://sap-se.zoom.us/meeting/register/DZh-JQ8wQm-rnynp9s4Ofw" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_1-1751374366424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281321i39537B5D388BE6C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_1-1751374366424.png" alt="iwona_hahn_1-1751374366424.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Check out our&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/btp-abap-environment" target="_blank" rel="noopener noreferrer"&gt;SAP Business Technology ABAP Environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;page in SAP Community&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;product&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;updates&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;upcoming events.&lt;/SPAN&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-26/ba-p/14171256"/>
    <published>2025-08-04T17:50:33.457000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abapgit-how-to-use-practical-step-by-step-sap-btp-sap-logon-on-premise/ba-p/14172141</id>
    <title>abapGit: How to use ? Practical Step by step - SAP BTP, SAP Logon - On Premise</title>
    <updated>2025-08-05T14:04:06.968000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;HI SCN Folks,&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hope you guys are doing great &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&amp;nbsp;&lt;/STRONG&gt;In this blog, covers only scenarios which i actually worked on &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is abapGit?&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;abapGit is&amp;nbsp;an open-source Git client designed specifically for SAP's ABAP development environment.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;It allows ABAP developers to manage their code using Git, enabling features like version control, collaboration, and code transport alternatives.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Essentially, it bridges the gap between the SAP world and the popular Git version control system.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;abapGit Official SIte:&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;A href="https://abapgit.org/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://abapgit.org/&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;More Blog Posts for more info.:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/application-development-and-automation-blog-posts/abapgit-so-easy/ba-p/13321892" target="_blank"&gt;abapGit - so easy&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/application-development-and-automation-blog-posts/7-ways-abapgit-can-transform-your-development-approach-for-internal/ba-p/13565976" target="_blank"&gt;7 ways abapGit can transform your development approach for internal development&lt;/A&gt;&lt;BR /&gt;&amp;amp; Many More...in SAP Community: &lt;A href="https://community.sap.com/t5/forums/searchpage/tab/message?filter=includeBlogs&amp;amp;q=abapgit&amp;amp;sort_by=-topicPostDate&amp;amp;collapse_discussion=true&amp;amp;include_blogs=true" target="_blank"&gt;Link&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Below is the list of practical videos &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class="lia-align-left" style="text-align : left;"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;SAP BTP :&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;A class="" title="SAP BTP: How to Connect SAP BAS (Business Application Studio) x GitHub | 2024" href="https://www.youtube.com/watch?v=QducczbY-vk" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP BTP: How to Connect SAP BAS (Business Application Studio) x GitHub&amp;nbsp;&lt;/A&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;SAP Logon (On Premise):&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/DIV&gt;&lt;TABLE width="727"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="347"&gt;&lt;STRONG&gt;Title&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="380"&gt;&lt;STRONG&gt;Video url&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Gist Setup &amp;amp; Usage&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=6laKjoC1Jeo" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=6laKjoC1Jeo&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Remove &amp;amp; Uninstall&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=Xh-xQXCeZHM" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=Xh-xQXCeZHM&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Subpackage &amp;amp; Folder Logic&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=-Jb1So9M9ik" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=-Jb1So9M9ik&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Tracking Of Changes (Online)&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=e9hIwxeh4lU" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=e9hIwxeh4lU&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Offline Pull&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=zrgRppW81_4" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=zrgRppW81_4&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Offline Push&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=yy8baStu_DY" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=yy8baStu_DY&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Online Pull&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=rX44UJN6Ny0" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=rX44UJN6Ny0&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: Online Push&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=sTxdfG_EeeY" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=sTxdfG_EeeY&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: GitHub Repository Setup&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=JDR-n9PxkOM" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=JDR-n9PxkOM&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;abapGit: GitHub Setup &amp;amp; Token Generation&lt;/TD&gt;&lt;TD&gt;&lt;A href="https://www.youtube.com/watch?v=i8panMg2XNc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.youtube.com/watch?v=i8panMg2XNc&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;BR /&gt;&lt;DIV class=""&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+BTP+ABAP+environment/pd-p/73555000100800001164" class="lia-product-mention" data-product="11-1"&gt;SAP BTP ABAP environment&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/development+tools+for+SAP+BTP%25252C+Neo+environment/pd-p/67838200100800004383" class="lia-product-mention" data-product="362-1"&gt;development tools for SAP BTP, Neo environment&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+BTP+cockpit/pd-p/e6ab964e-18d4-49a1-b26b-46827aa6ca66" class="lia-product-mention" data-product="1245-1"&gt;SAP BTP cockpit&lt;/a&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;EM&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/EM&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abapgit-how-to-use-practical-step-by-step-sap-btp-sap-logon-on-premise/ba-p/14172141"/>
    <published>2025-08-05T14:04:06.968000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/insert-delete-data-in-exposed-cds-entities-via-odbc/ba-p/14172318</id>
    <title>INSERT/DELETE data in exposed CDS entities via ODBC</title>
    <updated>2025-08-05T15:48:46.370000+02:00</updated>
    <author>
      <name>Frank-Martin</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/179779</uri>
    </author>
    <content>&lt;P&gt;In previous blog posts (see links at the end), I described data integration scenarios where business users can access data in an ABAP system from an external consumer, using the ABAP SQL service and the ODBC driver for ABAP. In this scenario, can query data in exposed CDS view entities. So far, this was a read-only scenario, where SELECT statements were used.&lt;/P&gt;&lt;P&gt;Now, with the availability of &lt;STRONG&gt;writable&lt;/STRONG&gt; CDS view entities, the SQL service can also be used to change data in an ABAP system. The first supported SQL DML statements that allow to change data in an SAP system using the ABAP SQL service are INSERT and DELETE.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will describe an example where a writable ABAP CDS view entity is exposed, I will describe the supported INSERT and DELETE statement types and their restrictions, and provide a code sample that uses those statements on an exposed entity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Prerequisites:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;ABAP platform cloud 2508 or ABAP on-premise 2025 or higher&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;ODBC driver for ABAP version 01, &lt;/SPAN&gt;&lt;SPAN&gt;or higher&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The steps to expose a writable view entity are very similar to the steps described in this &lt;A href="https://blogs.sap.com/2021/08/25/consuming-cds-view-entities-using-odbc-based-client-tools/" target="_blank" rel="noopener noreferrer"&gt;blog&lt;/A&gt; post for read-only entities. I will try to keep the description in this blog post similar and only outline the differences for writable CDS view entities.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1736882449"&gt;Create a Writable CDS View Entity on Top of a Table&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;First, I create &lt;/SPAN&gt;&lt;SPAN&gt;a test table for this blog post and a writable CDS view entity on top of it. In my case, the writable view entity is a simple projection of a database test table containing all table columns.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'test table for SQL Service DMLs'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zsql_write_tab {
  key client : abap.clnt not null;
  key itemnr : abap.int4 not null;
  key idate  : abap.datn not null;
  @AbapCatalog.decfloat.outputStyle : #NORMAL
  amount     : abap.decfloat34;
}

@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'writable view entity for SQL service'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define writable view entity ZSQL_WRITE_VIEW
  as select from zsql_write_tab as TestTable
{
  key itemnr as ItemNr,
  key idate  as IDate,
  amount     as Amount
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1540368944"&gt;Create a service definition and binding containing the writable CDS view entity&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As a second step, define a service definition exposing the writable view entity:&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'service def with writable view entity'

define service ZWRITE
  provider contracts sql {
  expose ZSQL_WRITE_VIEW as WriteView;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;I create a service binding with the same name as the service definition and enable operations. Please note that I enabled operations SELECT, INSERT, and DELETE for this service binding:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="FrankMartin_0-1754397853139.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296702i208DABAE0D3992E6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="FrankMartin_0-1754397853139.png" alt="FrankMartin_0-1754397853139.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="FrankMartin_1-1754397853140.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296703i20563FB0AA62F119/image-size/medium?v=v2&amp;amp;px=400" role="button" title="FrankMartin_1-1754397853140.png" alt="FrankMartin_1-1754397853140.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343855439"&gt;Configure Privileged User Access with INSERT and DELETE Operations&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Next, I define the user access to the writable CDS view entities. Again, the configuration of privileged user access has already been described in this &lt;A href="https://blogs.sap.com/2021/08/25/consuming-cds-view-entities-using-odbc-based-client-tools/" target="_blank" rel="noopener noreferrer"&gt;blog&lt;/A&gt; post for a cloud system, or you can refer to the &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/4082fe1b66164eeb8aa41192166526af.html?locale=en-US&amp;amp;version=latest" target="_blank" rel="noopener noreferrer"&gt;onprem&lt;/A&gt; documentation. INSERT and DELETE statements are currently only allowed for privileged user access.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So, essentially, you can follow the previous blog post. The only difference is that you now need to add INSERT and DELETE as allowed SQL view operations to the S_SQL_VIEW authorization object, for example, with the following properties.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SQL_SCHEMA -&amp;gt; ZWRITE&lt;BR /&gt;SQL_VIEW -&amp;gt; *&lt;BR /&gt;SQL_VIEWOP -&amp;gt; SELECT, INSERT, DELETE&lt;BR /&gt;&lt;BR /&gt;Now, everything is set up to execute queries and INSERT and DELETE statements on our test entity.&lt;BR /&gt;I won’t repeat the description of how to install and configure the ODBC driver for ABAP here and for the next steps I will just assume that this is done and that you configured an ODBC DSN for your SAP system. For all details about installing and configuring the ODBC driver for ABAP, check my previous blog posts.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now let’s turn to the SQL statements INSERT and DELETE and how they are supported in the SQL service.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147341934"&gt;The INSERT Statement in the SQL Dialect of the ABAP SQL Service&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Compared to ABAP SQL, the SQL dialect of the SQL service has a few restrictions and specialties that&amp;nbsp; you must consider.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;INSERT … VALUES and INSERT … SELECT statements are supported.&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1208993867"&gt;&lt;SPAN&gt;&lt;SPAN&gt;The supported INSERT … VALUES statements have the following form:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;INSERT INTO &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt; VALUES ( &amp;lt;expression1&amp;gt;, &amp;lt;expression2&amp;gt;, …)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Compared to other databases, currently there is no column list clause supported. The maximum number of expressions in the VALUES clause is the number of columns in the exposed entity. If you provide fewer expressions, the last columns in the writable entity will be set to their default database values during INSERT.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Expressions can be simple literals, expressions containing functions, or parameter markers ( ‘?’ ) for prepared statements.&lt;BR /&gt;For literals or expressions, the types need to be compatible with the DDIC data types of &lt;/SPAN&gt;&lt;SPAN&gt;exposed entity. This requires CASTs in some cases.&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1012480362"&gt;&lt;SPAN&gt;INSERT … SELECT statements have the following form:&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;INSERT INTO &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt; &amp;lt;ABAP SQL service SQL query&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;where &amp;lt;ABAP SQL service SQL query&amp;gt; is a SELECT statement in the SQL dialect of the SQL service.&lt;BR /&gt;Currently, the &amp;lt;ABAP SQL service SQL query&amp;gt; cannot contain common table expressions (CTEs starting with the keyword “WITH”).&lt;BR /&gt;&lt;BR /&gt;Again, the number of columns in the result set of the SELECT statement must match the number of columns in the exposed entity, and the data types returned by the SELECT statement need to be compatible with the data types of the exposed entity.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;The following INSERT statements are equivalent:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;INSERT INTO &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt; VALUES ( &amp;lt;expression1&amp;gt;, &amp;lt;expression2&amp;gt;, …)

INSERT INTO &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt; SELECT &amp;lt;expression1&amp;gt;, &amp;lt;expression2&amp;gt;, … FROM SYS.DUMMY&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;The SYS.DUMMY trick can also be used to formulate some kind of simple &lt;/SPAN&gt;&lt;SPAN&gt;SQL array INSERT:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;INSERT INTO &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt;
  SELECT &amp;lt;expression1a&amp;gt;, &amp;lt;expression2a&amp;gt;, … FROM SYS.DUMMY
  UNION ALL
  SELECT &amp;lt;expression1b&amp;gt;, &amp;lt;expression2b&amp;gt;, … FROM SYS.DUMMY
  …&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;I will discuss the more efficient ODBC array input method using an INSERT statement with parameter markers later with a python ODBC code sample. However, keep in mind that some ODBC tools do not support SQL statements with parameter markers or some language plugins like the node.js ODBC plugin currently do not allow to use ODBC array INSERT.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557801419"&gt;The DELETE Statement in the SQL Dialect of the ABAP SQL Service&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Simple DELETE statements with or without WHERE clauses are supported.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;DELETE FROM  &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt;  &amp;lt;WHERE-clause&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;where&amp;nbsp; &amp;lt;WHERE-clause&amp;gt; can be any WHERE clause that can be used in a corresponding query (“SELECT FROM&amp;nbsp; &amp;lt;schema&amp;gt;.&amp;lt;view&amp;gt;&amp;nbsp; &amp;lt;WHERE-clause&amp;gt;”).&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-361287914"&gt;Bundling Multiple DML Statements in one Database Transaction&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;For the first time, the ABAB SQL service now supports DML&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;statements, but it still does not provide an option for explicit transaction handling. This means that the ODBC driver for ABAP always works in auto commit mode and does not support explicit commits and rollbacks. &lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;This implies that all DML statements are automatically committed after each successful execution. On the other hand, all changes of a DML statement execution are automatically rolled back after an error occurs.&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;The other way to bundle multiple row changes in a single database transaction is the use of array input for ODBC execution using DML statements with parameter markers. &amp;nbsp;Again, the ODBC execution with array input is atomically committed on success or rolled back after an error.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;Without explicit transaction handling, multiple different DML statements cannot be bundled in one database transaction.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-164774409"&gt;DML examples without Parameter Markers Using iusql&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;I will now provide some DML examples on our test entity using the simple iusql command line tool included in the Linux unixODBC package ( see my &lt;A href="https://blogs.sap.com/2021/08/31/using-the-odbc-driver-for-abap-on-linux/" target="_blank" rel="noopener noreferrer"&gt;Linux blog&lt;/A&gt; post). This is just an arbitrary example of a tool that does not support SQL statements with parameter markers. As an alternative, you could, for example, use a Java-based tool like DBeaver or Squirrel with a suitable JDBC/ODBC bridge for the ODBC driver for ABAP.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this example, the following happens:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;An INSERT … VALUES statement is used to insert the first row into our test entity&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Some INSERT … SELECT statements are used to generate more test data with ascending ItemNr and IDate&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;A DELETE … WHERE is used to delete a first set of rows&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;A subsequent DELETE is used to clean up the table&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;&amp;gt; iusql -v MYDSN

+---------------------------------------+
| Connected!                            |
|                                       |
| sql-statement                         |
| help [tablename]                      |
| quit                                  |
|                                       |
+---------------------------------------+

SQL&amp;gt; delete from ZWRITE.WriteView

SQLRowCount returns 0

SQL&amp;gt; insert into ZWRITE.WriteView
     values( 1 , date '2015-01-01' , CAST( 100 AS DECIMAL)  )

SQLRowCount returns 1

SQL&amp;gt; INSERT INTO ZWRITE.WriteView
     select MAX(VMAX.ItemNr) + V.ItemNr ,
     DATN_ADD_DAYS( V.IDate, MAX(VMAX.ItemNr) ) ,
     V.Amount
     from ZWRITE.WriteView V ,
          ZWRITE.WriteView VMAX
     group by V.ItemNr , V.IDate, V.Amount

SQLRowCount returns 1

SQL&amp;gt; repeat … INSERT INTO

SQLRowCount returns 2

SQL&amp;gt; repeat … INSERT INTO

SQLRowCount returns 4

SQL&amp;gt; repeat … INSERT INTO

SQLRowCount returns 8

SQL&amp;gt; repeat … INSERT INTO … make sure that you do not repeat this too often

SQLRowCount returns 16

SQL&amp;gt; select ItemNr, IDate FROM ZWRITE.WriteView

+------------+---------+
| ItemNr     | IDate   |
+------------+---------+
| 1          | 20150101|
| 2          | 20150102|
| 3          | 20150103|
| …                    |
| 19         | 20150119|
| 20         | 20150120|
| 21         | 20150121|
| …                    |
| 31         | 20150131|
| 32         | 20150201|
+------------+---------+

SQLRowCount returns 0

32 rows fetched

SQL&amp;gt; delete from ZWRITE.WriteView where IDate &amp;lt; date '2015-01-20'

SQLRowCount returns 19

SQL&amp;gt; delete from ZWRITE.WriteView

SQLRowCount returns 13&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--31739096"&gt;&lt;BR /&gt;DML Array Input Examples Using a Python Sample&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;ODBC supports using prepared statements multiple times. Prepared statements with parameter markers can be executed with an array input, allowing to execute the same prepared statement multiple times with a different set of input parameters in one network roundtrip. For the ODBC driver for ABAP, this also means that such statement executions with array input will be performed in one database transaction and all statement executions will be committed or rolled back together. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Native ODBC C code can easily become lengthy and is not well suited for demo purposes. Therefore, like in one of my previous blog posts about AMDP &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/expose-and-use-abap-managed-database-procedures-amdps-in-sql-services/ba-p/13992244" target="_blank"&gt;procedures, &lt;/A&gt;I will provide a Python code sample here. Python demo code is much more compact and easier to read and understand. The Python ODBC plugin called pyodbc supports ODBC array input. A more detailed introduction to this ODBC plugin has already been provided in this &lt;A href="https://community.sap.com/t5/supply-chain-management-blogs-by-sap/data-science-with-sap-s-4hana-how-to-connect-hana-ml-with-jupyter-notebooks/ba-p/13578429" target="_blank"&gt;Python blog post&lt;/A&gt; .&lt;BR /&gt;&lt;BR /&gt;The following Python sample code:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Inserts some rows with an INSERT … VALUES statement with parameter markers&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Doubles the number of rows with an INSERT … SELECT statement&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Deletes some rows with an array DELETE statement with parameter markers&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;A subsequent DELETE is used to clean up the table&lt;BR /&gt;&lt;BR /&gt;Please note fast_executemany=True used for the array statement. This ensures that the array data is sent to the ABAP backend in one package and that the array operation is performed in one database transaction.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import pyodbc
import getpass
import datetime
# some docu in
# https://code.google.com/archive/p/pyodbc/wikis/GettingStarted.wiki
# https://github.com/mkleehammer/pyodbc/wiki
#
# install pyodbc before running the program 
# "pip install pyodbc"
#
# run with
# "python3 "array_dml_demo.py"

dsn   = input("Your ODBC DSN? ")
user  = input("Your Connect User? ")
pwd   = getpass.getpass("Your Connect Password? ")

conn = pyodbc.connect('DSN=' + dsn + ';UID=' + user + ';PWD=' + pwd + ';Trace=none;' )

def truncate_data():
  truncate_curs = conn.cursor()
  sql_truncate = "DELETE FROM ZWRITE.WriteView"
  truncate_curs.execute(sql_truncate)
  row_count = truncate_curs.rowcount
  print('Number of truncated rows: ' + str(row_count) )
  truncate_curs.close()

truncate_data()

# The following test code runs on a writable view entity exposed as 
#   ZWRITE.WriteView 
# with columns
#   key itemnr : abap.int4 not null;
#   key idate  : abap.datn not null;
#   amount     : abap.decfloat34;

# array data for insert
array_data = [
    (1, datetime.date(2023, 12, 24), 17 ),
    (2, datetime.date(2023, 12, 25), 4711 ),
    (3, datetime.date(2023, 12, 26), 1995 )
]

insert_curs = conn.cursor()
insert_curs.fast_executemany = True
sql_insert_with_values_clause = "INSERT INTO ZWRITE.WriteView VALUES (?, ?, ?)"
insert_curs.executemany(sql_insert_with_values_clause, array_data)
print('Insert Array Size: ' + str(len(array_data)) )
# pyodbc always returns row_count=-1 for executemany() ?!
# https://github.com/mkleehammer/pyodbc/issues/481
# row_count = insert_curs.rowcount
# print('Number of inserted rows: ' + str(row_count) )

sql_insert_select = "INSERT INTO ZWRITE.WriteView SELECT itemnr+3, DATN_ADD_DAYS(idate , 3), amount FROM ZWRITE.WriteView"
insert_curs.execute(sql_insert_select)
row_count = insert_curs.rowcount
print('Number of inserted rows: ' + str(row_count) )
insert_curs.close()

query_cursor = conn.cursor()
sql_query = "SELECT * FROM ZWRITE.WriteView"
query_cursor.execute(sql_query)
for row in query_cursor.fetchall():
    print (row)
query_cursor.close()

delete_curs = conn.cursor()
delete_curs.fast_executemany = True
sql_delete = "DELETE FROM ZWRITE.WriteView WHERE itemnr = ? AND idate = ? AND amount = ?"
delete_curs.executemany(sql_delete, array_data)
print('Delete Array Size: ' + str(len(array_data)) )

truncate_data()

# clean up
conn.close()&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;The output of the program could look as follows:&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&amp;gt; python3 array_dml_demo.py&lt;/P&gt;&lt;P&gt;Your ODBC DSN? MYDSN&lt;BR /&gt;Your Connect User? MYUSER&lt;BR /&gt;Your Connect Password?&lt;/P&gt;&lt;P&gt;Number of truncated rows: 0&lt;/P&gt;&lt;P&gt;Insert Array Size: 3&lt;BR /&gt;Number of inserted rows: 3&lt;/P&gt;&lt;P&gt;(1, datetime.date(2023, 12, 24), Decimal('17'))&lt;BR /&gt;(2, datetime.date(2023, 12, 25), Decimal('4711'))&lt;BR /&gt;(3, datetime.date(2023, 12, 26), Decimal('1995'))&lt;BR /&gt;(4, datetime.date(2023, 12, 27), Decimal('17'))&lt;BR /&gt;(5, datetime.date(2023, 12, 28), Decimal('4711'))&lt;BR /&gt;(6, datetime.date(2023, 12, 29), Decimal('1995'))&lt;/P&gt;&lt;P&gt;Delete Array Size: 3&lt;/P&gt;&lt;P&gt;Number of truncated rows: 3&lt;/P&gt;&lt;H2 id="toc-hId-119001756"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The SQL service now allows to expose writable view entities and the blog has shown some examples of the INSERT and DELETE statements that are now supported using the ABAP SQL service.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please provide feedback if this information has been helpful for you. I am very curious about specific use cases and about the ODBC plugins/programs you have used to implement them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Other Blogs Related to the ABAP SQL Service or the ODBC Driver for ABAP&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;&lt;A href="https://blogs.sap.com/2021/08/25/consuming-cds-view-entities-using-odbc-based-client-tools/" target="_blank" rel="noopener noreferrer"&gt;Consuming CDS View Entities Using ODBC-Based Client Tools | SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://blogs.sap.com/2021/08/31/using-the-odbc-driver-for-abap-on-linux/" target="_blank" rel="noopener noreferrer"&gt;Using the ODBC driver for ABAP on Linux | SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://blogs.sap.com/2022/05/24/access-control-for-abaps-sql-service-1-3-set-the-scene/" target="_blank" rel="noopener noreferrer"&gt;Access Control for ABAP’s SQL Service (1/3) – Set the Scene | SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://blogs.sap.com/2022/12/09/sql-queries-on-cds-objects-exposed-as-sql-service/" target="_blank" rel="noopener noreferrer"&gt;SQL Queries on CDS objects Exposed as SQL Service | SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://blogs.sap.com/2023/03/02/access-cds-objects-exposed-as-sql-services-using-microsoft-sql-server/" target="_blank" rel="noopener noreferrer"&gt;Access CDS Objects Exposed as SQL Services Using Microsoft SQL Server | SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/supply-chain-management-blogs-by-sap/data-science-with-sap-s-4hana-how-to-connect-hana-ml-with-jupyter-notebooks/ba-p/13578429" target="_blank"&gt;Data Science with SAP S/4HANA – connect with Jupiter notebooks | SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/taking-data-federation-to-the-next-level-accessing-remote-abap-cds-view/ba-p/13635034" target="_blank"&gt;HANA SDA. Accessing ABAP CDS View entities in HANA cloud&amp;nbsp; - SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/build-an-azure-data-factory-pipeline-with-the-odbc-driver-for-abap/ba-p/13612960" target="_blank"&gt;Build an Azure Data Factory Pipeline with the ODBC driver for ABAP - SAP Blogs&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/expose-and-use-abap-managed-database-procedures-amdps-in-sql-services/ba-p/13992244" target="_blank"&gt;Expose and Use ABAP-Managed Database Procedures (A... - SAP Community&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rust-and-abap-odbc/ba-p/14118190" target="_blank"&gt;Rust and ABAP ODBC - SAP Community&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Links to SAP documentation&lt;BR /&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-integration-connectivity/data-integration" target="_blank" rel="noopener noreferrer"&gt;Data Integration&lt;/A&gt;&amp;nbsp;(in the ABAP Integration and Connectivity Guide)&lt;BR /&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/4082fe1b66164eeb8aa41192166526af.html?locale=en-US&amp;amp;version=latest" target="_blank" rel="noopener noreferrer"&gt;ODBC - ABAP Platform, On-Premise&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/insert-delete-data-in-exposed-cds-entities-via-odbc/ba-p/14172318"/>
    <published>2025-08-05T15:48:46.370000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/end-to-end-performance-testing-of-sap-btp-cloud-foundry-kyma-and-abap/ba-p/14171653</id>
    <title>End-to-End Performance Testing of SAP BTP Cloud Foundry, Kyma and ABAP Environment based Application</title>
    <updated>2025-08-06T06:13:58.360000+02:00</updated>
    <author>
      <name>praveen12</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/564924</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt; &lt;STRONG&gt;Heads-Up Before You Dive In!&lt;/STRONG&gt;&lt;BR /&gt;This is a &lt;EM&gt;lengthy and loaded technical blog&lt;/EM&gt; — We didn’t break it into a series or multiple posts (because performance testing doesn’t believe in short cuts &lt;span class="lia-unicode-emoji" title=":grinning_face_with_smiling_eyes:"&gt;😄&lt;/span&gt;). So, grab a coffee &lt;span class="lia-unicode-emoji" title=":hot_beverage:"&gt;☕&lt;/span&gt;, be patient, and absorb it all — it's worth every byte! &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In this technical article, our primary objective is to bridge the knowledge gap surrounding performance testing within the dynamic landscape of the SAP Business Technology Platform (BTP). As the adoption of BTP continues to rise, it becomes paramount to equip developers, testers, and customers with a comprehensive understanding of performance testing/engineering methodologies tailored to this unique ecosystem.&lt;/P&gt;&lt;P&gt;The realm of BTP presents distinct challenges and opportunities for application development, integration, and deployment. Performance testing within this context requires a nuanced approach that accounts for cloud-native architectures, microservices, APIs, and the seamless interplay of services across a diverse range of technologies. By focusing on educating developers, testers, and customers, we aim to empower them with the insights and strategies needed to ensure optimal application performance within the BTP environment.&lt;/P&gt;&lt;P&gt;Developers will gain a deeper understanding of designing and optimizing applications for responsiveness, scalability, and reliability. Testers will learn how to craft meaningful performance test scenarios that accurately mirror real-world usage patterns, effectively identifying potential bottlenecks and vulnerabilities. Customers, on the other hand, will be equipped to make informed decisions, ensuring the applications they deploy on the BTP platform meet their performance expectations and contribute to their business success.&lt;/P&gt;&lt;P&gt;Our technical article not only provides a comprehensive performance testing framework tailored for BTP but also offers practical guidance, best practices, and real-world case studies to illustrate the application of these methodologies. By disseminating this knowledge, we aspire to foster a community of practitioners who can confidently navigate the complexities of BTP performance testing, ultimately leading to the creation of high-performing applications that delight users and drive organizational growth within this innovative technological landscape.&lt;/P&gt;&lt;P&gt;In addition, we will discuss how SAP AI Core's service capabilities inside the BTP ecosystem give a systematic approach to increasing performance testing and analysis.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":bookmark_tabs:"&gt;📑&lt;/span&gt; &lt;STRONG&gt;Table of Contents&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="586"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="64"&gt;&lt;STRONG&gt;S.No&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="522"&gt;&lt;STRONG&gt;Section Title&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;1&lt;/TD&gt;&lt;TD width="522"&gt;Introduction&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;2&lt;/TD&gt;&lt;TD width="522"&gt;Objective and Scope&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;3&lt;/TD&gt;&lt;TD width="522"&gt;Monitoring Performance of BTP Cloud Foundry/Kyma Applications Using Dynatrace&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;4&lt;/TD&gt;&lt;TD width="522"&gt;Monitoring Performance of BTP ABAP Environment Applications&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;5&lt;/TD&gt;&lt;TD width="522"&gt;Performance Analysis of BTP Applications: Manual and Automated Approaches&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;6&lt;/TD&gt;&lt;TD width="522"&gt;Automated Monitoring for ABAP Environment Applications&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;7&lt;/TD&gt;&lt;TD width="522"&gt;Leveraging SAP AI Core for Performance Testing on SAP BTP&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="64"&gt;8&lt;/TD&gt;&lt;TD width="522"&gt;Conclusions and References&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;We shall discuss the SAP BTP introduction, purpose, and scope of this technical article.&lt;/P&gt;&lt;P&gt;SAP BTP is a collection of SAP solutions and services housed under one roof. These services and solutions assist organisations in developing a new cloud solution or expanding will discuss or expanding SAP systems.&lt;/P&gt;&lt;P&gt;SAP BTP's services and solutions are organised around four main pillars. They are as follows:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Database &amp;amp; Data Management&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;You can use this pillar to store, access, process, integrate, and interpret all of your landscape's data.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2.&amp;nbsp;&lt;STRONG&gt;Analytics&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The analytics pillar's products enable you to plan, forecast, and make quick, insight-driven decisions.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;3.&amp;nbsp;&lt;STRONG&gt;Application Development &amp;amp; Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The application development and integration pillar provide the core elements required to innovate, extend, and integrate agile business processes in the cloud and hybrid environments. You can rapidly integrate other systems, improve your current application, or create new business solutions.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 4.&amp;nbsp;&lt;STRONG&gt;Intelligent Technologies&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Artificial intelligence, machine learning, intelligent robotic process automation, blockchain, and the Internet of Things are all part of the intelligent technologies pillar. This will assist you in automating the difficult, repetitive decisions that comprise a substantial component of company processes.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Business Technology Platform is technically classified as a Platform-as-a-Service. SAP BTP offers three environments: Cloud Foundry, ABAP and Kyma. All of these environments allow you to use different programming language and provide a ready-made framework for building and deploying any cloud service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_0-1754368309251.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296290iB50BADF94233274E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_0-1754368309251.png" alt="praveen12_0-1754368309251.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP, links are provided in the reference section#SAP Business Technology Platform Concepts.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.1 Objective&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The objective of this technical article is to provide a comprehensive framework for performance testing/engineering of applications developed and integrated within the SAP Business Technology Platform (BTP). With the increasing adoption of BTP as a pivotal platform for application development and integration, it becomes essential to establish a robust performance testing process that addresses the unique challenges posed by this ecosystem. This article aims to outline the key pillars of the performance testing process while focusing on the application development and integration aspect of SAP BTP.&lt;/P&gt;&lt;P&gt;SAP BTP offers three key environments: Cloud Foundry, Kyma, and ABAP.&lt;/P&gt;&lt;P&gt;Each environment includes the tools, technologies, and runtimes required to build applications.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Environment&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;You can create business apps using the Cloud Foundry platform, which supports numerous runtimes, programming languages, libraries, and services.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2.&amp;nbsp;&lt;STRONG&gt;ABAP Environment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The ABAP environment enables you to construct new cloud apps and extensions for ABAP-based products such as SAP S/4HANA Cloud. Existing ABAP-based custom code or extensions can be converted to the cloud.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;3.&amp;nbsp;&lt;STRONG&gt;Kyma Environment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Kyma environment is a fully managed Kubernetes runtime that is based on the open-source project "Kyma" that enables developers to augment SAP systems with serverless functions and combine them with containerized microservices.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.2 Scope&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Performance testing for applications developed in different environments within the SAP Business Technology Platform (BTP) requires tailored approaches to address the distinct characteristics of each scenario. This scoping outlines the methodologies for conducting performance testing for applications built with the SAP BTP Cloud Foundry/Kyma environment and the ABAP environment.&lt;/P&gt;&lt;P&gt;This technical article will considerably add to the body of information addressing the performance characteristics of applications deployed on Cloud Foundry, Kyma, and the ABAP Environment within the SAP Business Technology Platform. The insights will assist enterprises in making educated decisions when picking the optimum runtime for their specific application workloads based on business requirements and performance optimization approaches.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Methodology to configure and monitor performance statistics of BTP Cloud Foundry/KYMA based application using Dynatrace.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Dynatrace provides a powerful APM (Application Performance Monitoring) solution that is perfectly suited to the dynamic and cloud-native nature of SAP Business Technology Platform applications. Its AI-powered insights, comprehensive monitoring capabilities, and ease of integration make it an excellent solution for assuring optimal performance.&lt;/P&gt;&lt;P&gt;Dynatrace allows you to monitor your entire infrastructure, including hosts, processes, and networks.&lt;/P&gt;&lt;P&gt;Dynatrace can monitor Microservices, Docker, Kubernetes, Cloud Foundry, and other technologies-based applications.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_1-1754368309255.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296289iFE52C771CDEEF938/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_1-1754368309255.png" alt="praveen12_1-1754368309255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_2-1754368309258.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296288i33EC0BE6B7786729/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_2-1754368309258.png" alt="praveen12_2-1754368309258.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP, links are provided in the reference section# Dynatrace Agent Activation for SAP BTP.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.1. Steps to Create a user provided Dynatrace service in your SAP BTP Environment:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Add the SAP Dynatrace Monitoring Service entitlement to your BTP Global Account.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_3-1754368309268.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296292i7864AB2719F832CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_3-1754368309268.png" alt="praveen12_3-1754368309268.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP BTP Control Center – My Global Account&lt;/P&gt;&lt;P&gt;2. Configure the SAP Dynatrace Monitoring Service entitlement at the Subaccount level.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_4-1754368309272.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296291i582E03A57E84A32B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_4-1754368309272.png" alt="praveen12_4-1754368309272.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Image Source: SAP BTP Cockpit - My Sub Account&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;3. Navigate to the Service Marketplace and look for SAP Dynatrace Monitoring Service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_5-1754368309280.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296293i5B9F67E0B023C4CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_5-1754368309280.png" alt="praveen12_5-1754368309280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: SAP BTP Cockpit - My Sub Account&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You must supply a valid JSON object containing at least the environmentid and apitoken(for Dynatrace SaaS). The API token relates to the PaaS token. For Dynatrace Managed, you must also include the apiurl argument, which specifies the Dynatrace API endpoint.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_6-1754368309300.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296296iC2BD3E0ADD340A9B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_6-1754368309300.png" alt="praveen12_6-1754368309300.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: Dynatrace, links are provided in the reference section# Dynatrace Agent Activation for SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Remark:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In case you face challenge to create Dynatrace service please see section&lt;STRONG&gt;#3.4: Real-time issues while creating a Dynatrace service.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAMPLE JSON:&lt;/P&gt;&lt;P&gt;All Dynatrace instances are linked with the SAP Cloud Access Manager (CAM) and Single-Sign On, in accordance with best practises and SAP-compliant access management systems.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A CAM Profile is a set of access levels to multiple SAP systems and environments.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can also create your own standard practice to safeguard your mission critical business data.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;{&lt;/P&gt;&lt;P&gt;&amp;nbsp; "apiurl": "&lt;A href="https://DYNATRACE" target="_blank" rel="noopener nofollow noreferrer"&gt;https://DYNATRACE&lt;/A&gt; HOST NAME/e/ENVIRONMENT ID/api",&lt;/P&gt;&lt;P&gt;&amp;nbsp; "apitoken": "YOUR PASS TOKEN",&lt;/P&gt;&lt;P&gt;&amp;nbsp; "environmentid": "ENVIRONMENT ID",&lt;/P&gt;&lt;P&gt;&amp;nbsp; "permission_assignments": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "name": "CAM1 Read-only access to the Dynatrace environment",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "roles": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "log_analytics",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "user"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; },&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "name": "CAM2 Read and Write access to the Dynatrace environment and all settings (except request attributes and sensitive data)",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "roles": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "admin",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "configure_sensitive",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "log_analytics",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "view_sensitive"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "name": "CAM3: Write access to request attribute settings and view permission of masked sensitive data",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "roles": [&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "configure_sensitive",&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; "view_sensitive"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; }&lt;/P&gt;&lt;P&gt;&amp;nbsp; ]&lt;/P&gt;&lt;P&gt;}&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Dynatrace Agent Activation:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_7-1754368309312.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296295iB1A958B6ED8F312D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_7-1754368309312.png" alt="praveen12_7-1754368309312.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: Dynatrace, links are provided in the reference section# Dynatrace Agent Activation for SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.2 Bind the Created Dynatrace service with the application deployed in BTP Environment (Cloud Foundry/KYMA – JAVA/SAP CAP/Microservice etc)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure service instance in application's mta.yaml/manifest.yml file&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Sample mta.yml file&lt;/P&gt;&lt;P&gt;Add following sample code in resources of modules&lt;/P&gt;&lt;P&gt;resources:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;- name: dynatrace-demo&lt;/P&gt;&lt;P&gt;&amp;nbsp; type: org.cloudfoundry.existing-service&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Add the service in requires section of the Modules to be monitored.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;requires:&lt;/P&gt;&lt;P&gt;&amp;nbsp; - name:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; dynatrace-monitor&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Sample manifest.yml file&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;P&gt;applications:&lt;/P&gt;&lt;P&gt;- name: spring-music&lt;/P&gt;&lt;P&gt;&amp;nbsp; memory: 768M&lt;/P&gt;&lt;P&gt;&amp;nbsp; instances: 1&lt;/P&gt;&lt;P&gt;&amp;nbsp; host: spring-music-somerandomstring&lt;/P&gt;&lt;P&gt;&amp;nbsp; path: spring-music.war&lt;/P&gt;&lt;P&gt;&amp;nbsp; buildpack: sap_java_buildpack&lt;/P&gt;&lt;P&gt;&amp;nbsp; services:&lt;/P&gt;&lt;P&gt;&amp;nbsp; &lt;STRONG&gt;- dynatraceservice&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.3 Restart your BTP deployed JAVA/SAP CAP etc application and login to Dynatrace environment and monitor/search your binded application&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_8-1754368309313.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296294iE868DB33F9AA69CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_8-1754368309313.png" alt="praveen12_8-1754368309313.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Image Source: DYNATRACE Managed - My Environment&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.4: Real-time issues while creating a Dynatrace service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Even after following all the above steps, sometimes you might face challenge to find your binded application name in the Dynatrace monitoring environment or you will not be able to create the Dynatrace service, please follow below steps using Cloud foundry CLI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&amp;nbsp;Sometimes a restart of the BTP deployed application (JAVA/SAP CAP) is not enough, it needs to be a restage (only during staging the Dynatrace agent will be downloaded). Please restage your application and see if the process shows up after maximum 3 minutes in the Dynatrace environment.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;You can try renaming/creating your Dynatrace service to something containing “dynatrace”, e.g.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;cf create-service dynatrace environment test-dynatrace -c &amp;lt;JSON&amp;gt; file //keep only relevant configuration in JSON file.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;and then bind the application and restage again.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; cf bind-service my-application test-dynatrace&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Methodology to configure and monitor performance statistics of BTP ABAP environment-based application. &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP introduced an exciting addition to SAP BTP, which they aptly named SAP BTP ABAP Environment or Steampunk or ABAP Cloud. This innovative feature opens a world of possibilities for customers, partners who are well-versed in ABAP:&lt;/P&gt;&lt;P&gt;With the ABAP Environment, they can effortlessly harness the power of ABAP Platform as a service within SAP BTP. This means they can:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Craft extensions for ABAP-based products like SAP S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;Pave the way for the creation of brand-new cloud applications.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now, let's delve into some key aspects of the ABAP Environment:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;This environment operates on the latest ABAP platform cloud release.&lt;/LI&gt;&lt;LI&gt;It boasts support for the ABAP RESTful Application Programming Model, which includes popular components like SAP Fiori and Core Data Services (CDS).&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now in order to monitor and analyse the performance of ABAP cloud-based application, you need to have the access of the Frontend (Say SAP Fiori), backend (say SAP ABAP GUI) and ADT(ABAP Development Tools)&lt;/P&gt;&lt;P&gt;Front End Access:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_9-1754368309315.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296299iB4E48E583EF080DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_9-1754368309315.png" alt="praveen12_9-1754368309315.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: developers.sap.com&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;You can login to the Fiori launchpad using Administrator user and access the Maintain employees/Maintain business users Fiori application to create a new user and also to assign a specific role to access the relevant application under performance evaluation.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Backend Access:&lt;/P&gt;&lt;P&gt;Now in order to access the backend, administrator should create a backend user and generate credentials for you.&lt;/P&gt;&lt;P&gt;Once the backend user is created in the ABAP cloud environment, you can access your application using SAP GUI(/NSTFK) or create your custom SAP GUI configuration file and save it locally with. sap extension.&lt;/P&gt;&lt;P&gt;YourApplicationSID.sap configuration:&lt;/P&gt;&lt;P&gt;Pass the required details and execute the file using double click to access your backend application with the created credentials:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_10-1754368309316.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296298i1C5BC2A23347B515/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_10-1754368309316.png" alt="praveen12_10-1754368309316.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;ABAP Development Tools (ADT)&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Install ADT&lt;/LI&gt;&lt;LI&gt;Add a new ABAP Cloud Project&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_11-1754368309317.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296297i68D69B0B36D014FF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_11-1754368309317.png" alt="praveen12_11-1754368309317.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Now you can make connection to ABAP service instance using any suitable mention ways:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_12-1754368309318.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296300iD2E70BA4E005EDB6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_12-1754368309318.png" alt="praveen12_12-1754368309318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;3.Pass the service key in JSON format:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_13-1754368309319.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296302i3C373BA7B9204C2C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_13-1754368309319.png" alt="praveen12_13-1754368309319.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;4. Open Logon in browser:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_14-1754368309320.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296301i844848FE8F729FD7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_14-1754368309320.png" alt="praveen12_14-1754368309320.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;5.Access with a valid sign in option:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_15-1754368309321.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296303i705D9F77E8FB05AF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_15-1754368309321.png" alt="praveen12_15-1754368309321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;6. You will receive success message in the browser:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_16-1754368309322.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296305i2AF2CB9E0D18BBA0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_16-1754368309322.png" alt="praveen12_16-1754368309322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;7.Now you can analyse your underlying ABAP model.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_17-1754368309322.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296304iBD76CD8CBCB439D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_17-1754368309322.png" alt="praveen12_17-1754368309322.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Remark: Sometimes you face challenge to access ABAP service instance through ADT, you can clear the browser cache or review your VPN settings to see if it is working or not, also you can refer the helpful blog mention in the reference section.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Performance analysis/engineering of BTP based applications: Automated/Manual Approach&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.1 BTP Applications running in Cloud Foundry / Kyma Environment (Runtime) and are binded with DYNATRACE APM tool:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let’s consider one scenario where one of the web application action - Click Go Operation was expensive (consuming higher response time/resource).&lt;/P&gt;&lt;P&gt;User Action: Click on Go with suitable Filter condition.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_18-1754368309324.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296308i34DD5776BB1C0A1F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_18-1754368309324.png" alt="praveen12_18-1754368309324.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Final Render Page:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_19-1754368309332.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296307i4B9FEB5B965998CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_19-1754368309332.png" alt="praveen12_19-1754368309332.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Chrome Developer Trace: F12-Network Trace-&amp;gt;We can see one expensive http request taking higher time.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_20-1754368309335.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296306iEBA724882EA30D3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_20-1754368309335.png" alt="praveen12_20-1754368309335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;Let see how we can analyse or do the root cause analysis of this expensive request.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Firstly, with the help of Chrome – Network/Profiling Developer Trace(F12), we can get more details about the request, response payload and API endpoint.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_21-1754368309336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296309iEF0917ED10B086C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_21-1754368309336.png" alt="praveen12_21-1754368309336.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2.Now login to your DYNATRACE cluster, and try to find your underlying service(let say OrderProposal* is my underlying microservice), you can see details about the health of your microservice&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_22-1754368309343.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296311iD75EAA039EBC54CC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_22-1754368309343.png" alt="praveen12_22-1754368309343.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 3. Now our task would be to identify the expensive request hitting to this microservice, you can get the details using View Distributed Traces/Pure Paths, filter the request based on service name and time frame of the test, you can configure column to get more information about the expensive application call(like &lt;STRONG&gt;getOrderProposal&lt;/STRONG&gt; calls for Go Operation)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_23-1754368309348.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296310i8C582D20295ACB1D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_23-1754368309348.png" alt="praveen12_23-1754368309348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 4. You have several features inside Dynatrace to perform root cause analysis for any application performance issues like:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View response time hotspots: Analyses the response time of each service per process.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View method hotspots: Shows the CPU level hotspots in your code.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View service flow: Shows the chain of service calls that each service request initiates.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View details of failures: Displays extensive statistics on site request failures.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;View Service backtrace: Displays which user actions and related services depend on this service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_24-1754368309350.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296312iED96325773CECA8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_24-1754368309350.png" alt="praveen12_24-1754368309350.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;5. Click on the request name (say getOrderProposals): Most of the time spent on execution&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_25-1754368309353.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296313i7541CDCF89E410B1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_25-1754368309353.png" alt="praveen12_25-1754368309353.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;6. Click Response time hotspots: Most of the time is spent on service interaction.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_26-1754368309357.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296314iFB3E1091CD16D921/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_26-1754368309357.png" alt="praveen12_26-1754368309357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 7. Click on Method Hotspots: OncePerRequestFilter is the Top method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_27-1754368309361.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296315i9161A3E49137D590/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_27-1754368309361.png" alt="praveen12_27-1754368309361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp; 8. You can click on source code to analyse it from code perspective:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_28-1754368309364.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296316i3E50A4E1E080B21C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_28-1754368309364.png" alt="praveen12_28-1754368309364.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_29-1754368309368.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296317i39C1F38E7632DAFC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_29-1754368309368.png" alt="praveen12_29-1754368309368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Remark:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Similarly, you can monitor all other important performance KPI’s for your Kubernetes, Cloud Foundry based application for all your single user and multiuser performance test.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_30-1754368309375.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296320i6D473F3091008E35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_30-1754368309375.png" alt="praveen12_30-1754368309375.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; Image Source: Internal Infrastructure&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5.2 BTP Applications running in ABAP Environment (Runtime)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s consider one scenario where one of the web application user action - Click Open App was expensive (consuming higher response time/resource).&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open App - User Action: Click on App Tile&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_31-1754368309376.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296318i9D0F021B346F3E83/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_31-1754368309376.png" alt="praveen12_31-1754368309376.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;2.&amp;nbsp;&amp;nbsp;Final Render Page Screen:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_32-1754368309378.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296319iC96A9601ED8F8D8C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_32-1754368309378.png" alt="praveen12_32-1754368309378.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;3. Take Chrome – Developer Trace(F12) -&amp;gt; Network Trace -&amp;gt;To understand the expensive request/response payload coming from Open App User Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_33-1754368309387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296322i6C15F41DFEB678F7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_33-1754368309387.png" alt="praveen12_33-1754368309387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;4. Now login to ABAP backend instance and use transaction /OSTATS_FE with Filter condition on Time, Fiori Frontend user name and system client.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_34-1754368309401.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296323i93D8796BA82ACEEC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_34-1754368309401.png" alt="praveen12_34-1754368309401.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Now you can find all the relevant expensive request and its key performance KPI’s made from the front-end web application (Check for column Frontend Step Name), you can double click on any expensive request to see further breakdown(server side metrics/expensive calls):&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_35-1754368309403.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296321i210ACCC2C7C390DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_35-1754368309403.png" alt="praveen12_35-1754368309403.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;6. Now we understood, Open App user action response time was higher due to one expensive http batch request.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_36-1754368309410.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296324iDFFC899A032F793C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_36-1754368309410.png" alt="praveen12_36-1754368309410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;7. As a next step we collected the ADT Trace (ABAP Profiler) to understand the issue from code perspective:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_37-1754368309415.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296325iC02B7BDA2B35B5F5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_37-1754368309415.png" alt="praveen12_37-1754368309415.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;8. We found that one expensive *query_provider* method causing higher response time.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_38-1754368309424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296326i29A9EEDC2640B22A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_38-1754368309424.png" alt="praveen12_38-1754368309424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_39-1754368309428.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296327i5179C15F22890529/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_39-1754368309428.png" alt="praveen12_39-1754368309428.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_40-1754368309440.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296328iBD520FDAA791CA9F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_40-1754368309440.png" alt="praveen12_40-1754368309440.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6. Proposed solution for automating the performance monitoring process of ABAP Environment based applications:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Architecture:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="praveen12_41-1754368309441.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296329i7B20B0FD6A05F9CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="praveen12_41-1754368309441.png" alt="praveen12_41-1754368309441.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Image Source: Self creation&lt;/P&gt;&lt;P&gt;Monitoring the ABAP environment can be integrated into your existing infrastructure if you utilise SAP Cloud ALM as your monitoring and alerting infrastructure. You may also use SAP Cloud ALM's health monitoring to see if your ABAP environment is still up and running and if any unusual events have occurred. Furthermore, you can utilise real-user monitoring to monitor requests from business users and integration monitoring to monitor interactions across integrated systems.&lt;/P&gt;&lt;P&gt;You can also look for other feasible solution available for specific ABAP environment-based application performance monitoring like Grafana/&lt;STRONG&gt;ABAP Open telemetry(data provider)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7. SAP AI Core service to assist customers and end-users with performance testing and analysis of applications built on SAP BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As organisations rely more on SAP Business Technology Platform (BTP) for application development, optimising performance becomes critical to providing a consistent user experience. Taking advantage of SAP AI Core's major features inside the BTP ecosystem provides a strategic approach to improving performance testing and analysis.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7.1 We can achieve this by building a ML Model/GenAI/Agents based PoC using SAP AI Core Services to have below functionalities:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;7.1.1.Data-Driven Performance Evaluation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Utilise the data intelligence of SAP AI Core to collect and analyse huge datasets relevant to application performance. This data-driven methodology enables comprehensive performance testing scenarios that consider a wide range of user interactions and usage patterns within the SAP BTP environment.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;7.1.2.&lt;/STRONG&gt; &lt;STRONG&gt;Anomaly Detection in Real-Time:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrate the anomaly detection capabilities of SAP AI Core to provide real-time monitoring of performance indicators. The technology may detect anomalous patterns automatically, offering rapid insight into potential bottlenecks or issues influencing the end-user experience.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;7.1.3. Scalability Predictive Analytics:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using historical data, use SAP AI Core's predictive analytics to forecast scaling difficulties. This proactive strategy supports in resource optimisation and minimising potential performance bottlenecks before they affect end users.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &lt;STRONG&gt;&amp;nbsp;7.1.4. Intelligent Testing Automation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use SAP AI Core's intelligent automation features to generate complicated test scenarios and scripts automatically. This shortens the performance testing lifecycle and allows for a more detailed examination of application performance under different conditions.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &lt;STRONG&gt;7.1.5. Simulation of User Behaviour:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using SAP AI Core's behaviour simulation, mimic real-world user behaviours. Performance testing becomes more typical of actual usage patterns when realistic user scenarios are created, enabling for the detection of performance issues that may affect end users.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; 7.1.6. AI-Assisted Root Cause Analysis:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the analytics tools in SAP AI Core for root cause analysis. When performance issues are found, the system may automatically analyse correlated data to determine the root causes, allowing for faster issue resolution and optimisation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;7.1.7. Continuous Optimisation and Adaptation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create a continuous improvement loop by upgrading AI models on a regular basis with new performance data. This guarantees that the system adapts to changing application parameters, ensuring consistency in performance testing and analysis.&lt;/P&gt;&lt;P&gt;Organisations may not only streamline their performance testing processes but also improve the overall reliability and responsiveness of SAP BTP-based applications by strategically combining SAP BTP with SAP AI Core's main capabilities. This strategy adds to a better user experience, which aligns with the SAP BTP platform's primary objectives of delivering high-quality, efficient solutions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8. Conclusions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Finally, this technical article has provided valuable insights into the realm of performance testing/engineering for individual developers, testers and customers within diverse Business Technology Platform (BTP) environments including Cloud Foundry, Kyma, and ABAP. The importance of performance testing cannot be overstated in today's dynamic digital landscape, where applications must deliver optimal user experiences to remain competitive.&lt;/P&gt;&lt;P&gt;We have not only defined the fundamental concepts and principles of performance testing through painstaking examination, but we have also provided practical advice on how individual developers, testers and customers can navigate the complexities of testing in these diverse BTP environments. Our findings highlight the need of customised performance testing methodologies, emphasising the necessity for a nuanced approach that matches with the unique characteristics and expectations of each platform.&lt;/P&gt;&lt;P&gt;Furthermore, this study showed the benefits and problems of performance testing on Cloud Foundry, Kyma, and ABAP, putting light on the unique characteristics and restrictions of each environment. We have provided developers, testers and customers with the information and resources needed to optimise application performance in these contexts by reviewing real-world case studies and best practises.&lt;/P&gt;&lt;P&gt;The ability to conduct efficient performance testing on various BTP platforms has become a vital talent in an era of constant technological innovation. As the enterprise solution landscape evolves, the insights presented in this article will be a valuable resource, empowering developers, testers and customers to improve the performance, reliability, and scalability of their applications and ensuring their continued success in a highly competitive marketplace. We can together design a future where applications running on Cloud Foundry, Kyma, ABAP environment and beyond continuously deliver great performance, promoting innovation and efficiency in the digital domain, through collaborative efforts and ongoing research.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP BTP Services:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog" target="_blank" rel="noopener nofollow noreferrer"&gt;https://discovery-center.cloud.sap/serviceCatalog&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Business Technology Platform Concepts:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/btp-basic-platform-concepts" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btp/sap-business-technology-platform/btp-basic-platform-concepts&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://d.dam.sap.com/a/wfTnvgi/Quick%20Start%20Guide%20-%20SAP%20Business%20Technology%20Platform.pdf" target="_blank" rel="noopener noreferrer"&gt;https://d.dam.sap.com/a/wfTnvgi/Quick%20Start%20Guide%20-%20SAP%20Business%20Technology%20Platform.pdf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/07/11/explaining-sap-business-technology-platform-sap-btp-to-a-beginner/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/07/11/explaining-sap-business-technology-platform-sap-btp-to-a-beginner/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/09/29/sap-btp-environments-cloud-foundry-vs-abap-vs-kyma/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/09/29/sap-btp-environments-cloud-foundry-vs-abap-vs-kyma/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/09/27/rap-vs-cap-key-differences-between-the-two-programming-models/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/09/27/rap-vs-cap-key-differences-between-the-two-programming-models/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/abap-environment-developer-user.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/abap-environment-developer-user.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2022/09/28/sap-btp-abap-environment-and-adt-troubleshooting-guide/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2022/09/28/sap-btp-abap-environment-and-adt-troubleshooting-guide/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Dynatrace Agent Activation for SAP BTP:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help/whats-new" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help/whats-new&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/b41af58634e54045a51379c311b2537d/Cloud/en-US/dynatrace.pdf" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/doc/b41af58634e54045a51379c311b2537d/Cloud/en-US/dynatrace.pdf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help/setup-and-configuration/setup-on-container-platforms/cloud-foundry/deploy-oneagent-on-sap-cloud-platform-for-application-only-monitoring" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help/setup-and-configuration/setup-on-container-platforms/cloud-foundry/deploy-oneagent-on-sap-cloud-platform-for-application-only-monitoring&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://pages.github.tools.sap/apm/docs/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://pages.github.tools.sap/apm/docs/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://sap.github.io/cloud-sdk/docs/java/guides/cf-cli" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/cloud-sdk/docs/java/guides/cf-cli&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help/platform-modules/applications-and-microservices/profiling-and-optimization/cpu-profiling" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help/platform-modules/applications-and-microservices/profiling-and-optimization/cpu-profiling&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP Development Tools:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://tools.eu1.hana.ondemand.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.eu1.hana.ondemand.com/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference documentation for doing root cause analysis of a cloud application using DYNATRACE:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SAP_COMMERCE_CLOUD_PUBLIC_CLOUD/6065ea129a544adba2c3e0791dc069f2/f1cbe8f5ce0743579b2c96d1476d7b18.html" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_COMMERCE_CLOUD_PUBLIC_CLOUD/6065ea129a544adba2c3e0791dc069f2/f1cbe8f5ce0743579b2c96d1476d7b18.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.dynatrace.com/support/help" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.dynatrace.com/support/help#&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Reference documentation for doing root cause analysis of an ABAP Cloud application:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2022/01/27/use-transaction-stats_fe-to-analyze-the-performance-of-your-web-application/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2022/01/27/use-transaction-stats_fe-to-analyze-the-performance-of-your-web-application/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2021/06/15/abap-adt-profilerperformance-analysis/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2021/06/15/abap-adt-profilerperformance-analysis/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal/setup-managed-services/setup-scp_abap.html?anchorId=section_copy_copy_co" target="_blank" rel="noopener noreferrer"&gt;https://support.sap.com/en/alm/sap-cloud-alm/operations/expert-portal/setup-managed-services/setup-scp_abap.html?anchorId=section_copy_copy_co&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://developers.sap.com/tutorials/abap-environment-monitoring-calm-health-monitoring.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/abap-environment-monitoring-calm-health-monitoring.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/central-health-monitoring-using-sap-focused-run-and-sap-cloud-alm" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btp/sap-business-technology-platform/central-health-monitoring-using-sap-focused-run-and-sap-cloud-alm&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP AI Core:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/doc/c31b38b32a5d4e07a4488cb0f8bb55d9/CLOUD/en-US/f17fa8568d0448c685f2a0301061a6ee.pdf" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/doc/c31b38b32a5d4e07a4488cb0f8bb55d9/CLOUD/en-US/f17fa8568d0448c685f2a0301061a6ee.pdf&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/08/10/discover-the-power-of-sap-ai-core-the-new-learning-journey-now-available/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/08/10/discover-the-power-of-sap-ai-core-the-new-learning-journey-now-available/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://discovery-center.cloud.sap/refArchCatalog/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center - Reference Architectures (cloud.sap)&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://blogs.sap.com/2023/08/10/sap-ai-core-scheduling-sap-hana-machine-learning/" target="_blank" rel="noopener noreferrer"&gt;https://blogs.sap.com/2023/08/10/sap-ai-core-scheduling-sap-hana-machine-learning/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/end-to-end-performance-testing-of-sap-btp-cloud-foundry-kyma-and-abap/ba-p/14171653"/>
    <published>2025-08-06T06:13:58.360000+02:00</published>
  </entry>
</feed>
