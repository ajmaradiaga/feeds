<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Development-blog-posts.xml</id>
  <title>SAP Community - ABAP Development</title>
  <updated>2025-10-23T08:00:08.752058+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Development/pd-p/833755570260738661924709785639136" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Development blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-how-to-grey-out-copy-button-in-erp-vendor-purchasing-organizations/ba-p/14235716</id>
    <title>SAP MDG: How to Grey Out Copy Button in ERP Vendor: Purchasing Organizations UIBB ?</title>
    <updated>2025-10-07T11:30:00.021000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi&amp;nbsp;SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great&lt;SPAN&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;This blog does not include execution screenshots.&lt;STRONG&gt;&lt;BR /&gt;Note 02:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;STRONG&gt;&lt;BR /&gt;Note 03:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;There are several ways; this blog is written about one of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create customizing or enhance UIBB.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Standard Feeder Class:&lt;/STRONG&gt;&amp;nbsp;CL_BS_SP_GUIBB_PURCH_ORGS.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create one custom class:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;ZCL_MDGS_GUIBB_PURCH_ORGS &amp;amp; do inherit above standard feeder class.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Now, utilize this method:&lt;/STRONG&gt;&amp;nbsp; METHOD if_fpm_guibb_list~get_data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Code:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CALL METHOD super-&amp;gt;if_fpm_guibb_list~get_data
      EXPORTING
        iv_eventid                = iv_eventid
        it_selected_fields        = it_selected_fields
        iv_raised_by_own_ui       = iv_raised_by_own_ui
        iv_visible_rows           = iv_visible_rows
        iv_edit_mode              = iv_edit_mode
        io_extended_ctrl          = io_extended_ctrl
      IMPORTING
        et_messages               = et_messages
        ev_data_changed           = ev_data_changed
        ev_field_usage_changed    = ev_field_usage_changed
        ev_action_usage_changed   = ev_action_usage_changed
        ev_selected_lines_changed = ev_selected_lines_changed
        ev_dnd_attr_changed       = ev_dnd_attr_changed
        eo_itab_change_log        = eo_itab_change_log
      CHANGING
        ct_data                   = ct_data
        ct_field_usage            = ct_field_usage
        ct_action_usage           = ct_action_usage
        ct_selected_lines         = ct_selected_lines
        cv_lead_index             = cv_lead_index
        cv_first_visible_row      = cv_first_visible_row
        cs_additional_info        = cs_additional_info
        ct_dnd_attributes         = ct_dnd_attributes.

DATA :
      lv_cr_number TYPE usmd_crequest,
      lv_crtype    TYPE usmd_crequest_type,
      lv_process   TYPE usmd_process.

DATA(lo_context) = cl_usmd_app_context=&amp;gt;get_context( ).

IF lo_context IS BOUND.
   CALL METHOD lo_context-&amp;gt;get_attributes
        IMPORTING
          ev_crequest_id   = lv_cr_number
          ev_crequest_type = lv_crtype
          ev_process       = lv_process.
ENDIF.

IF lv_crtype EQ 'ZMDGS01'.
  READ TABLE ct_action_usage ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_copy&amp;gt;) WITH KEY id = 'BOL_COPY'.
   &amp;lt;lfs_copy&amp;gt;-visible = '01'.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-how-to-grey-out-copy-button-in-erp-vendor-purchasing-organizations/ba-p/14235716"/>
    <published>2025-10-07T11:30:00.021000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/abap-code-to-wait-for-the-end-of-quot-inbound-bgrfc-type-q-quot-units/ba-p/14237566</id>
    <title>ABAP code to wait for the end of "inbound bgRFC type Q" units</title>
    <updated>2025-10-07T20:28:26.490000+02:00</updated>
    <author>
      <name>Sandra_Rossi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145194</uri>
    </author>
    <content>&lt;P&gt;I have a program which runs parallel tasks in the same system by using bgRFC and several qRFC queues: each queue runs tasks sequentially, but two queues run in parallel. With bgRFC, each task is called a unit. This scenario is called Inbound bgRFC type Q, see here for more information:&amp;nbsp;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/753088fc00704d0a80e7fbd6803c8adb/48927c2caa6b17cee10000000a421937.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;bgRFC (Background Remote Function Call) | SAP Help Portal&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Once all units are started, I want the program to wait for all units to finish.&lt;/P&gt;&lt;P&gt;I propose a simple ABAP method which should work for most of situations.&lt;/P&gt;&lt;P&gt;There are really very few posts about bgRFC and the official documentation is missing information too, so I hope it can help some people. Note: I don't even know if the classes I use are supported by SAP and if it's the right way to do it, so all comments are welcome, thank you.&lt;/P&gt;&lt;P&gt;Here is the context how this method is used (&lt;CODE&gt;WAIT_END_OF_QRFC_INBOUND_UNITS&lt;/CODE&gt;) :&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA(inbound_destination) = cl_bgrfc_destination_inbound=&amp;gt;create( 'ZZZ' ).

LOOP AT any_table INTO line.
  DATA(unit) = inbound_destination-&amp;gt;create_qrfc_unit( ).
  unit-&amp;gt;add_queue_name_inbound( line-queue_name ).

  CALL FUNCTION '...' 
     IN BACKGROUND UNIT unit
     EXPORTING ...

  INSERT unit INTO TABLE units.
ENDLOOP.

COMMIT WORK.

DATA(wait_results) = zcl_bgrfc_helper=&amp;gt;wait_end_of_qrfc_inbound_units(
                       i_watch_delay_seconds = 5
                       i_units               = units ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Little explanation: there's an internal table containing data which needs to be processed in parallel via a given RFC-enabled function module. The internal table assigns given queue names to each line of data in order to achieve the parallelization. For instance, one half of the table goes to the queue named Z1, all calls in Z1 will be executed sequentially, the other half goes to the queue named Z2, the calls in Z1 and Z2 will be executed in parallel).&lt;/P&gt;&lt;P&gt;&lt;CODE&gt;CALL FUNCTION ... IN BACKGROUND UNIT unit ...&lt;/CODE&gt;&amp;nbsp;registers a call in a given bgRFC unit. You may call several function modules in the same unit. The function modules are not called until &lt;CODE&gt;COMMIT WORK&lt;/CODE&gt; is reached.&lt;/P&gt;&lt;P&gt;&lt;CODE&gt;COMMIT WORK&lt;/CODE&gt; creates the inbound bgRFC units in the database (function module calls and parameters) and all the queues are started by the bgRFC scheduler. You can see the units via the transaction SBGRFCMON.&lt;/P&gt;&lt;P&gt;Prerequisite: the inbound destination ZZZ was created via the transaction SBGRFCCONF. Nothing else needed (no prefix, no RFC destination in SM59, queue names are assigned freely by the program, etc.)&lt;/P&gt;&lt;P&gt;Here's the code of the method &lt;CODE&gt;WAIT_END_OF_QRFC_INBOUND_UNITS&lt;/CODE&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_bgrfc_helper DEFINITION FINAL PUBLIC CREATE PRIVATE.
  PUBLIC SECTION.
    TYPES ty_qrfc_inbound_units TYPE STANDARD TABLE OF REF TO if_qrfc_unit_inbound WITH EMPTY KEY.
    TYPES:
      BEGIN OF ty_bgrfc_unit_state,
        unit         TYPE REF TO if_qrfc_unit_inbound,
        "! Time at which the information was collected
        timestamp    TYPE timestampl,
        unit_success TYPE abap_bool,
        unit_error   TYPE abap_bool,
        "! In case there's a unit error
        unit_state   TYPE bgrfc_unit_state,
        queue_error  TYPE abap_bool,
        "! In case there's a queue error
        queue_state  TYPE qrfc_queue_state,
      END OF ty_bgrfc_unit_state.
    TYPES ty_bgrfc_unit_states TYPE SORTED TABLE OF ty_bgrfc_unit_state WITH UNIQUE KEY unit.

    CLASS-METHODS wait_end_of_qrfc_inbound_units
      IMPORTING i_watch_delay_seconds      TYPE numeric DEFAULT 5
                i_units                    TYPE ty_qrfc_inbound_units
      RETURNING VALUE(r_bgrfc_unit_states) TYPE ty_bgrfc_unit_states.

    CLASS-METHODS get_timestamp
      RETURNING VALUE(r_result) TYPE timestampl.
ENDCLASS.

CLASS zcl_bgrfc_helper IMPLEMENTATION.
  METHOD wait_end_of_qrfc_inbound_units.
    TYPES:
      BEGIN OF ty_queue,
        queue_name TYPE qrfc_queue_name,
        dest_name  TYPE bgrfc_dest_name_inbound,
      END OF ty_queue.
    TYPES tt_queue TYPE SORTED TABLE OF ty_queue WITH UNIQUE KEY queue_name dest_name.
    TYPES:
      BEGIN OF ty_unit_and_queue,
        unit       TYPE REF TO if_qrfc_unit_inbound,
        queue_name TYPE qrfc_queue_name,
        dest_name  TYPE bgrfc_dest_name_inbound,
      END OF ty_unit_and_queue.
    TYPES tt_unit_and_queue TYPE SORTED TABLE OF ty_unit_and_queue WITH UNIQUE KEY unit
                            WITH NON-UNIQUE SORTED KEY by_inbound_queue COMPONENTS queue_name dest_name.

    DATA ls_unit_and_queue TYPE REF TO ty_unit_and_queue.

    DATA(lt_queue) = REDUCE #(
                    INIT lt_queue_2 = VALUE tt_queue( )
                    FOR &amp;lt;lv_unit&amp;gt; IN i_units
                    FOR &amp;lt;lv_queue_name&amp;gt; IN &amp;lt;lv_unit&amp;gt;-&amp;gt;get_queue_names_inbound( )
                    NEXT lt_queue_2 = COND #(
                         WHEN NOT line_exists( lt_queue_2[ queue_name = &amp;lt;lv_queue_name&amp;gt;
                                                           dest_name  = &amp;lt;lv_unit&amp;gt;-&amp;gt;destination-&amp;gt;dest_name ] )
                         THEN VALUE #( BASE lt_queue_2
                                       ( queue_name = &amp;lt;lv_queue_name&amp;gt;
                                         dest_name  = &amp;lt;lv_unit&amp;gt;-&amp;gt;destination-&amp;gt;dest_name )  )
                         ELSE lt_queue_2 ) ).

    DATA(lt_unit_and_queue) = VALUE tt_unit_and_queue( FOR &amp;lt;lv_unit&amp;gt; IN i_units
                                                       FOR &amp;lt;lv_queue_name&amp;gt; IN &amp;lt;lv_unit&amp;gt;-&amp;gt;get_queue_names_inbound( )
                                                       ( unit       = &amp;lt;lv_unit&amp;gt;
                                                         queue_name = &amp;lt;lv_queue_name&amp;gt;
                                                         dest_name  = &amp;lt;lv_unit&amp;gt;-&amp;gt;destination-&amp;gt;dest_name ) ).
    WHILE lt_unit_and_queue IS NOT INITIAL.

      WAIT UP TO i_watch_delay_seconds SECONDS.

      LOOP AT lt_unit_and_queue REFERENCE INTO ls_unit_and_queue.
        DATA(bgrfc_unit_state) = cl_qrfc_client_inbound=&amp;gt;get_unit_state( ls_unit_and_queue-&amp;gt;unit-&amp;gt;unit_id ).
        CASE bgrfc_unit_state.
          WHEN if_bgrfc_client=&amp;gt;unit_state_runnable
            OR if_bgrfc_client=&amp;gt;unit_state_in_execution
            OR if_bgrfc_client=&amp;gt;unit_state_blocked ##NO_HANDLER.
          WHEN if_bgrfc_client=&amp;gt;unit_state_executed.
            r_bgrfc_unit_states = VALUE #( BASE r_bgrfc_unit_states
                                           ( unit         = ls_unit_and_queue-&amp;gt;unit
                                             timestamp    = get_timestamp( )
                                             unit_state   = bgrfc_unit_state
                                             unit_success = abap_true ) ).
            DELETE lt_unit_and_queue USING KEY loop_key.
          WHEN OTHERS.
            r_bgrfc_unit_states = VALUE #( BASE r_bgrfc_unit_states
                                           ( unit       = ls_unit_and_queue-&amp;gt;unit
                                             timestamp  = get_timestamp( )
                                             unit_state = bgrfc_unit_state
                                             unit_error = abap_true ) ).
            DELETE lt_unit_and_queue USING KEY loop_key.
        ENDCASE.
      ENDLOOP.

      LOOP AT lt_queue REFERENCE INTO DATA(queue).
        DATA(bgrfc_queue_state) = cl_qrfc_client_inbound=&amp;gt;get_queue_state( queue_name = queue-&amp;gt;queue_name
                                                                           dest_name  = queue-&amp;gt;dest_name ).
        CASE bgrfc_queue_state.
          WHEN if_bgrfc_client=&amp;gt;queue_state_runnable
            OR if_bgrfc_client=&amp;gt;queue_state_in_execution
            OR if_bgrfc_client=&amp;gt;queue_state_empty ##NO_HANDLER.
          WHEN OTHERS.
            LOOP AT lt_unit_and_queue REFERENCE INTO ls_unit_and_queue
                 USING KEY by_inbound_queue
                 WHERE     queue_name = queue-&amp;gt;queue_name
                       AND dest_name  = queue-&amp;gt;dest_name.
              r_bgrfc_unit_states = VALUE #( BASE r_bgrfc_unit_states
                                             ( unit        = ls_unit_and_queue-&amp;gt;unit
                                               timestamp   = get_timestamp( )
                                               queue_state = bgrfc_queue_state
                                               queue_error = bgrfc_queue_state ) ).
              DELETE lt_unit_and_queue WHERE unit = ls_unit_and_queue-&amp;gt;unit.
            ENDLOOP.
            DELETE lt_queue USING KEY loop_key.
        ENDCASE.
      ENDLOOP.
    ENDWHILE.
  ENDMETHOD.

  METHOD get_timestamp.
    GET TIME STAMP FIELD r_result.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As I said, I don't know if these classes are released by SAP:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;cl_qrfc_client_inbound=&amp;gt;get_unit_state&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;cl_qrfc_client_inbound=&amp;gt;get_queue_state&lt;/CODE&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The method should support units which span other several inbound queues, but I didn't test it.&lt;/P&gt;&lt;P&gt;In my case, I could see that one unit has these states: runnable (briefly), in execution, executed. In a given queue, there's only one unit processed at a time. All the units instantiated after the one processed have the state blocked. Other states should be errors (e.g. short dump, uncaught exception, error message, etc.)&lt;/P&gt;&lt;P&gt;The queues have these states: empty if it doesn't contain any unit, runnable if it contains at least one unit to execute but it's not started yet, in execution when a unit is processed.&lt;/P&gt;&lt;P&gt;About the code, in case you want to ask: "DELETE itab USING KEY loop_key" is to delete the current line in the loop (LOOP AT itab), it corresponds to the old and less expressive syntax "DELETE itab". I used the pragma ##NO_HANDLER for CASE WHEN although it's not asked by the syntax check, the pragma is meant to be used for CATCH, when there's no code inside.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Any way, feel free to post any comment.&lt;/P&gt;&lt;P&gt;Thank you for reading.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/abap-code-to-wait-for-the-end-of-quot-inbound-bgrfc-type-q-quot-units/ba-p/14237566"/>
    <published>2025-10-07T20:28:26.490000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/steps-to-configure-aif-for-complex-structure-file-data-with-multiple-header/ba-p/14185594</id>
    <title>Steps to Configure AIF for Complex Structure File Data with Multiple Header-Item in Flat File</title>
    <updated>2025-10-08T06:18:42.007000+02:00</updated>
    <author>
      <name>pratik_shah9</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/421459</uri>
    </author>
    <content>&lt;P&gt;In this blog I'd like to share the Steps of integrating complex structured file data into SAP systems to dealing with nested formats like header-item-schedule line relationships.&amp;nbsp; Application Integration Framework (AIF) provides a powerful and flexible solution to address these challenges. By leveraging AIF’s capabilities, such as custom DDIC structures, composite data modeling, and robust file adapter configurations—organizations can streamline their file-based integrations, reduce custom coding efforts, and improve data accuracy. This guide walked through the essential steps to configure AIF for such scenarios, empowering SAP developers to build scalable and maintainable interfaces for enterprise data exchange.&lt;/P&gt;&lt;H4 id="toc-hId-1996062947"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In modern enterprise integration scenarios, organizations often exchange file-based data that includes multiple layers of structured information—typically comprising header records and their associated item records. Accurately processing these complex file formats is vital to ensure seamless and reliable data exchange between systems.&lt;/P&gt;&lt;P&gt;SAP’s Application Integration Framework (AIF) offers a comprehensive solution for managing such integrations. It supports the definition and handling of&amp;nbsp;complex data structures, including nested models where each header can be linked to multiple item records. This capability enables flexible interface design and robust data validation, making AIF an ideal choice for processing structured file content in SAP environments.&lt;/P&gt;&lt;P&gt;By utilizing AIF’s features, organizations can streamline file-based integrations and enhance data consistency across systems.&lt;/P&gt;&lt;H4 id="toc-hId-1799549442"&gt;&lt;STRONG&gt;Problem Description&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In enterprise integrations, companies often receive files from external systems that contain structured data—like sales orders with headers and related item details. These files can be complex, with multiple layers of information that need to be grouped and processed correctly.&lt;/P&gt;&lt;P&gt;Standard file processing in SAP can struggle with this kind of nested data. Common issues include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Difficulty linking items to the correct headers&lt;/LI&gt;&lt;LI&gt;Risk of data mismatches&lt;/LI&gt;&lt;LI&gt;Complicated custom code for parsing and validation&lt;/LI&gt;&lt;LI&gt;Limited tools for tracking and fixing errors&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Application Integration Framework (AIF) helps solve these problems by supporting complex data structures. It allows headers to be connected to multiple items and provides tools for parsing, validating, and monitoring the data. However, setting up AIF for this requires careful planning and configuration to ensure everything works smoothly.&lt;/P&gt;&lt;H4 id="toc-hId-1603035937"&gt;&lt;STRONG&gt;How does it work?&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;You need to perform the following steps to create an inbound file interface:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create the RAW structures for the interface&lt;/LI&gt;&lt;LI&gt;Develop the interface&lt;/LI&gt;&lt;LI&gt;Configure the file adapter settings for your interface&lt;/LI&gt;&lt;LI&gt;Upload File&lt;/LI&gt;&lt;LI&gt;Check Monitoring and Error Handling transaction&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;The following example will describe step-by-step how to Configure AIF for Complex File Data with Multiple Header-Item in Flat File&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Simple example of a&amp;nbsp;Sales Order&amp;nbsp;creation in SAP, showing how the&amp;nbsp;Header,&amp;nbsp;Item, and&amp;nbsp;Schedule Line&amp;nbsp;levels are organized&lt;/P&gt;&lt;H5 id="toc-hId-1535605151"&gt;&lt;STRONG&gt;Prepare the Flat File (CSV Format)&lt;/STRONG&gt;&lt;/H5&gt;&lt;H6 id="toc-hId-1468174365"&gt;&lt;STRONG&gt;Example: Sales Order Creation with Header, Item, and Schedule Line&lt;/STRONG&gt;&lt;/H6&gt;&lt;P&gt;Prepare a flat file in CSV format using a pipe (&lt;CODE&gt;|&lt;/CODE&gt;) as the delimiter.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Structure Explanation:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;CODE&gt;HEAD&lt;/CODE&gt; – Header line (Sales Order Number, Date, Customer, Sales Org, Currency)&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;ITEM&lt;/CODE&gt; – Item line (Item Number, Material, Material Description, Quantity, Price)&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;SCHD&lt;/CODE&gt; – Schedule line (Item Number, Schedule Line Item, Delivery Date, Quantity)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In order to execute this example, we require a file containing some test data and corresponding structures.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_25-1755709358100.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303139i2DF039866826164C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_25-1755709358100.png" alt="pratik_shah9_25-1755709358100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_26-1755709358101.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303136i63241580DD1B670D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_26-1755709358101.png" alt="pratik_shah9_26-1755709358101.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;1. Create Raw Structures for the interface&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&amp;nbsp;Step 1: Create DDIC Structures&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.1&amp;nbsp;Header Structure –&amp;nbsp;YAIF_ORDER_HDR&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Data Element&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ORDER_NO&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;VBELN&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales Order Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ORDER_DATE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;AUDAT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Document Date&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;CUSTOMER_ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;KUNNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Customer Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;VKORG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;VKORG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales Organization&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;CURRENCY&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;WAERS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Currency&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_27-1755709358103.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303138iC3AE0318BAF93B7B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_27-1755709358103.png" alt="pratik_shah9_27-1755709358103.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.2&amp;nbsp;Item Structure –&amp;nbsp;YAIF_ORDER_ITEM&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Data Element&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ITEM_NO&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;POSNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Item Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;MATNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;MATNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;MAKTX&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;MAKTX&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material Description&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;MENGE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;MENGE_D&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Quantity&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AMOUNT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;NETPR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Price&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_28-1755709358104.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303140i1E80168219A0EE6F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_28-1755709358104.png" alt="pratik_shah9_28-1755709358104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.3&amp;nbsp;Schedule Line Structure –&amp;nbsp;YAIF_ORDER_SCHEDULE_LINE&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Data Element&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;POSNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;POSNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Item Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ETENR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ETENR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Schedule Line Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;DELIVERY_DATE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;EDATU&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Delivery Date&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;BMENG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;BMENG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Delivery Quantity&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_29-1755709358106.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303143i1A41C2DB10E27C1C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_29-1755709358106.png" alt="pratik_shah9_29-1755709358106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":package:"&gt;📦&lt;/span&gt;&amp;nbsp;Step 2: Create Table Types&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.1&amp;nbsp;Item Table Type –&amp;nbsp;YAIF_ORDER_ITEM_TT&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Line Type:&amp;nbsp;YAIF_ORDER_ITEM&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;2.2&amp;nbsp;Schedule Line Table Type –&amp;nbsp;YAIF_ORDER_SCHEDULE_LINE_TT&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Line Type:&amp;nbsp;YAIF_ORDER_SCHEDULE_LINE&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;🧩&amp;nbsp;Step 3: Create Composite Structure&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.1&amp;nbsp;Detail Structure –&amp;nbsp;YAIF_ORDER_DTL&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;HEADER&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;YAIF_ORDER_HDR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Header Structure&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ITEM&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;YAIF_ORDER_ITEM_TT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Table of Items&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SCHEDULE_LINE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;YAIF_ORDER_SCHEDULE_LINE_TT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Table of Schedule Lines&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_30-1755709358108.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303142i119142AF630471C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_30-1755709358108.png" alt="pratik_shah9_30-1755709358108.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.2&amp;nbsp;Table Type –&amp;nbsp;YAIF_ORDER_DTL_TT&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Line Type:&amp;nbsp;YAIF_ORDER_DTL&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;3.3&amp;nbsp;RAW Structure –&amp;nbsp;YAIF_ORDER_DTL_S&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create the RAW structure for the interface. The structure contains only one component named&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Component Name:&amp;nbsp;ORDER&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Component Type:&amp;nbsp;YAIF_ORDER_DTL_TT&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_31-1755709358109.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303144iBB8F2AA2F1F1A1B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_31-1755709358109.png" alt="pratik_shah9_31-1755709358109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;U&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;2. Develop the interface&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&amp;nbsp;Step 4: Configure AIF Interface&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.1&amp;nbsp;Define Namespace&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use transaction&amp;nbsp;/AIF/CUST&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_32-1755709358114.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303146iB561D27B8CF27906/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_32-1755709358114.png" alt="pratik_shah9_32-1755709358114.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define namespace (e.g. YSALE)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_33-1755709358116.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303145i50899B6389B56CA6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_33-1755709358116.png" alt="pratik_shah9_33-1755709358116.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.2 Define Interfaces&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define Interface&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_34-1755709358121.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303149iD04A8A138CA8E889/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_34-1755709358121.png" alt="pratik_shah9_34-1755709358121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.3&amp;nbsp;Specify Interface Engines&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_35-1755709358125.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303147iD3FD373BCD4C8C49/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_35-1755709358125.png" alt="pratik_shah9_35-1755709358125.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Assign the SAP Application Engine&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Click-&amp;gt;Additional Interface Properties-&amp;gt;Specify Interface Engines&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_36-1755709358128.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303148i06378702EB0F0F60/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_36-1755709358128.png" alt="pratik_shah9_36-1755709358128.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.4 Assign Source Structure Line&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_0-1755711217761.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303180i362CE2B8C1551216/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_0-1755711217761.png" alt="pratik_shah9_0-1755711217761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define Structure Mappings&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_37-1755709358130.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303150iD708B829373C3656/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_37-1755709358130.png" alt="pratik_shah9_37-1755709358130.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.4.2&amp;nbsp;Assign Destination Structure&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Select source structure line-&amp;gt;Click-&amp;gt;Assign Destination Sturcture&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_50-1755710068080.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303175i13408F483045D0BE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_50-1755710068080.png" alt="pratik_shah9_50-1755710068080.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.4.3&amp;nbsp;Assign Actions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create an action (e.g. SALE_CREATE)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Click-&amp;gt;Assign Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_38-1755709358135.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303151i54CD822611264BC3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_38-1755709358135.png" alt="pratik_shah9_38-1755709358135.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click Enter on Action to create the action&amp;nbsp;if not already created&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_39-1755709358140.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303152iC6114D41D54A7F28/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_39-1755709358140.png" alt="pratik_shah9_39-1755709358140.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_40-1755709358144.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303154iCC3C1126DF109F57/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_40-1755709358144.png" alt="pratik_shah9_40-1755709358144.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define Function ( To assign Function Module )&lt;/P&gt;&lt;P&gt;Double-click to create the&amp;nbsp;Function Module&amp;nbsp;that processes the data if not created&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_41-1755709358147.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303153i60CCD992D9E22D9F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_41-1755709358147.png" alt="pratik_shah9_41-1755709358147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Navigate into the new function module by double clicking the name. In the function module call the follow up processing by inserting the coding displayed below&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*// Sample Logic
 CALL FUNCTION 'BAPI_CONTRACT_CREATE
  EXPORTING
    customer_data = CURR-HEADER
    customer_item = CURR-ITEM
    schedule_line = CURR-SCHEDULE_LINE
  TABLES
    return = return_tab.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Save and activate the function module.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;3. Configure the file adapter settings for your interface&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt; System Configuration-&amp;gt;Configure File Adapter&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_42-1755709358152.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303155iB2CDCC7C61F6F72E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_42-1755709358152.png" alt="pratik_shah9_42-1755709358152.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;File Type (ASC or BINARY)&lt;/LI&gt;&lt;LI&gt;File Content (Flat Structure, Complex Structure, XML, USER, XSLX )&lt;/LI&gt;&lt;LI&gt;Text Type (Fix char, Special Character Separator)&lt;/LI&gt;&lt;LI&gt;Offset Type Det Val (To Identify the record type from where it will start i.e HEAD, ITEM, SCHD line Details to prepare the data structure dynamically)&lt;/LI&gt;&lt;LI&gt;Length Type Det Val (Length of identity record type in i.e in our case first 4 character of new line)&lt;/LI&gt;&lt;LI&gt;Del Deter Val (True means ignore 1st Field separator immediately after the Det Value)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_43-1755709358156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303157iDBFDB028D5AB64E5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_43-1755709358156.png" alt="pratik_shah9_43-1755709358156.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Leading Type (If we mark the record type as 'true', it means a new record will start from the file)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_44-1755709358160.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303158i413EDF4CBA11ED22/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_44-1755709358160.png" alt="pratik_shah9_44-1755709358160.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_45-1755709358164.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303156i70E070B1CA7E6BF3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_45-1755709358164.png" alt="pratik_shah9_45-1755709358164.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_46-1755709358167.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303159iDAC0649586CC1997/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_46-1755709358167.png" alt="pratik_shah9_46-1755709358167.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_47-1755709358169.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303160iBF9942B698A8555E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_47-1755709358169.png" alt="pratik_shah9_47-1755709358169.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;4. Upload File&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;The final step is to select and upload the file. The AIF File Upload can be found in the SAP Menu under SAP Menu -&amp;gt; Cross-Application Components --&amp;gt; SAP Application Interface Framework --&amp;gt; File Upload (or directly via transaction /AIF/LFA_UPLOAD_FILE).&lt;/P&gt;&lt;P&gt;Select your File Adapter Configuration (Config. Namespace and Config ID created in step 3). In section Upload from select the path where your file is stored.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_0-1760033721504.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325286i948507876CFAEF46/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_0-1760033721504.png" alt="pratik_shah9_0-1760033721504.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Press executes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_4-1760034018279.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325291i23CEE97FAF54C844/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_4-1760034018279.png" alt="pratik_shah9_4-1760034018279.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;U&gt;&lt;STRONG&gt;5. Check Monitoring and Error Handling transaction&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;You will be forwarded to a log view where the log messages which have occurred during upload through below T-Code.&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;T-Code : /AIF/ERR ,&amp;nbsp; /AIF/IFMON&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-884412703"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;SAP’s Application Integration Framework (AIF) simplifies the integration of complex, structured file data by supporting nested formats like header-item-schedule line relationships. Through custom structures, composite modeling, and flexible configuration, AIF enables scalable, maintainable, and accurate file-based interfaces—reducing custom code and improving data reliability across systems.&lt;/P&gt;&lt;H3 id="toc-hId-687899198"&gt;&lt;STRONG&gt;Key Benefits of Using AIF for Complex File Integration&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Reduced Custom Coding&lt;/STRONG&gt;: Leverage AIF’s configuration-driven approach to minimize manual parsing and validation logic.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Support for Nested Structures&lt;/STRONG&gt;: Easily model and process multi-level data like headers, items, and schedule lines.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Improved Data Accuracy&lt;/STRONG&gt;: Built-in validation and mapping tools help ensure consistent and reliable data processing.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Enhanced Monitoring &amp;amp; Error Handling&lt;/STRONG&gt;: AIF provides robust tools for tracking, logging, and resolving integration issues.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&lt;STRONG&gt;Scalable Interface Design&lt;/STRONG&gt;: Composite structures and reusable components make it easier to extend and maintain interfaces.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/steps-to-configure-aif-for-complex-structure-file-data-with-multiple-header/ba-p/14185594"/>
    <published>2025-10-08T06:18:42.007000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958</id>
    <title>SAP Joule for Developers Expands to Private Cloud:  Accelerating ABAP Innovation and Transformation</title>
    <updated>2025-10-08T10:27:45.674000+02:00</updated>
    <author>
      <name>lienards</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/227111</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761972361"&gt;&lt;STRONG&gt;Key Highlights&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; are now available in &lt;STRONG&gt;SAP S/4HANA Private Cloud Edition &lt;/STRONG&gt;&lt;STRONG&gt;2025&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;New &lt;STRONG&gt;Custom Code Migration &lt;/STRONG&gt;capabilities accelerate the transformation of classic ERP code to &lt;STRONG&gt;S/4HANA Cloud Private Edition&lt;/STRONG&gt;, including:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Documentation Chat &lt;/STRONG&gt;- Get accurate answers on SAP S/4HANA simplifications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ABAP Program Explain &lt;/STRONG&gt;-&amp;nbsp;Understand the business purpose and logic of legacy code.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explain&lt;/STRONG&gt;&lt;STRONG&gt; for SAP S/4HANA Test Cockpit Issues &lt;/STRONG&gt;-&amp;nbsp;Diagnose and resolve S/4HANA-related Test Cockpit issues using context from simplification items and cookbooks.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Earlier this year, SAP introduced &lt;STRONG&gt;Joule for Developers&lt;/STRONG&gt; — a set of embedded artificial intelligence capabilities in SAP Build, including ABAP, that helps developers accelerate application and extension development, reduce costs, and boost productivity.&lt;/P&gt;&lt;P&gt;Joule for Developers, ABAP AI capabilities are now available for S/4HANA Private Cloud Edition, version 2025, providing comprehensive support for ABAP Cloud use cases. The release also introduces the first Custom Code Migration capabilities, bringing a powerful suite of AI-assisted capabilities purpose-built for ABAP development and cloud delivery.&lt;/P&gt;&lt;P&gt;Best of all, Joule for Developers remains free of charge, enabling customers and partners to integrate it into daily operations and accelerate innovation without commercial barriers.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1565458856"&gt;&lt;STRONG&gt;What’s Included&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This release for Private Cloud delivers AI-powered support for the core development scenarios ABAP developers rely on every day. Key capabilities include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;inline code completion,&lt;/LI&gt;&lt;LI&gt;ABAP/CDS code explanation,&lt;/LI&gt;&lt;LI&gt;automated unit test generation for ABAP and ABAP core data services (CDS),&lt;/LI&gt;&lt;LI&gt;RAP business objects generation,&lt;/LI&gt;&lt;LI&gt;RAP predictive business logic, and&lt;/LI&gt;&lt;LI&gt;OData consumption.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All capabilities are designed to accelerate development, improve code quality, and boost productivity from day one. Additionally, this release introduces the first wave of&lt;STRONG&gt; Custom Code Migration capabilities&lt;/STRONG&gt;, designed to accelerate the move from classic SAP ERP to &lt;STRONG&gt;SAP S/4HANA Cloud Private Cloud Edition&lt;/STRONG&gt;. These AI-powered features simplify code analysis and adaptation by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Providing &lt;STRONG&gt;Documentation Chat&lt;/STRONG&gt; for quick answers on SAP S/4HANA simplifications:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_0-1759907233424.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324475i606AD92C02DAE239/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_0-1759907233424.png" alt="lienards_0-1759907233424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Using &lt;STRONG&gt;ABAP Program Explain&lt;/STRONG&gt; to clarify the business purpose and implementation logic of legacy code:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_1-1759907233436.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324473iC9A1BA70B925AFD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_1-1759907233436.png" alt="lienards_1-1759907233436.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Explaining &lt;STRONG&gt;ABAP Test Cockpit (ATC) findings&lt;/STRONG&gt; with step-by-step guidance on how to fix the issues, based on simplification items and technical documentation:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_2-1759907233449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324474i74D164B2F8FB58F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_2-1759907233449.png" alt="lienards_2-1759907233449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;All capabilities are designed to reduce manual effort, speed up migration projects, and help your teams to modernize their ABAP landscapes with great confidence.&lt;/P&gt;&lt;P&gt;The ABAP AI software development kit, powered by Intelligent Scenario Lifecycle Management, is now available and offers centralized access to the generative AI hub in SAP AI Core. It leverages the same robust platform SAP uses internally, delivering proven, production-grade infrastructure to customer landscapes. With simplified configuration and governance, development teams can adopt AI capabilities quickly, providing a significant boost to integration efforts.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1368945351"&gt;&lt;STRONG&gt;Why This Matters &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Private cloud customers require strict governance, security, and operational control - yet they also seek the speed and innovation modern AI-driven development delivers. This release addresses both priorities by enabling:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;faster development cycles&lt;/STRONG&gt; with AI-assisted coding and test generation,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;stronger knowledge transfer&lt;/STRONG&gt; through automated code explanations and copilot interactions,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;higher delivery quality&lt;/STRONG&gt; with automated testing and code migration support, and&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;secure innovation&lt;/STRONG&gt; within controlled environments.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1172431846"&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;We’re building on this momentum with a series of targeted deliveries aligned to upcoming releases across the BTP ABAP Environment and S/4HANA Cloud Public Edition. Planned updates for &lt;STRONG&gt;BTP ABAP Environment 2511, 2602&lt;/STRONG&gt;, and &lt;STRONG&gt;S/4HANA Cloud Public Edition 2602&lt;/STRONG&gt; include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;documentation generation capabilities,&lt;/LI&gt;&lt;LI&gt;enhanced explanations for reports in the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;AI-enabled insights on Clean Core–related ATC findings directly within the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;code migration and adaptation proposals to support developers working on RISE code adaptation,&lt;/LI&gt;&lt;LI&gt;ABAP CDS annotation and metadata extension generation, and&lt;/LI&gt;&lt;LI&gt;ABAP CDS analytical model generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These enhancements will extend Joule’s impact beyond code completion and test generation, supporting documentation, migration and Clean Core compliance, analytical use cases, and addressing more stages of the end-to-end development lifecycle.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-975918341"&gt;&lt;STRONG&gt;Free Offer Extended&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers will remain &lt;STRONG&gt;free of charge.&lt;/STRONG&gt; The extended promotion ensures that all customers and partners can continue to use Joule for Developers capabilities for free.&lt;/P&gt;&lt;P&gt;Access can be requested using the material numbers &lt;STRONG&gt;8019124&lt;/STRONG&gt; (customers) and &lt;STRONG&gt;8019541&lt;/STRONG&gt; (TDD partners). This offer now extends beyond the BTP ABAP environment and SAP Cloud ERP Public Edition to include &lt;STRONG&gt;SAP Cloud ERP Private Edition&lt;/STRONG&gt; customers running the latest 2025 release.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-779404836"&gt;&lt;STRONG&gt;Closing Remarks&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers’ delivery for Private Cloud is a significant milestone — combining end-to-end ABAP Cloud with AI use cases, innovative code migration scenarios, and a standardized ABAP AI SDK to bring practical AI assistance directly into everyday development workflows.&lt;/P&gt;&lt;P&gt;With extended free of charge access, we invite every customer and partner to explore SAP Joule for Developers, push its boundaries, and help shape the future of AI-assisted ABAP development.&lt;/P&gt;&lt;P&gt;Start using SAP Joule for Developers today and join us in building the next generation of intelligent, AI-driven ABAP innovation.&lt;/P&gt;&lt;P&gt;For a deeper dive, read the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073" target="_blank"&gt;blog post&lt;/A&gt; by Simona Marincei, head of ABAP AI.&lt;/P&gt;&lt;P&gt;Learn more about SAP Joule for Developers capabilities &lt;A href="https://www.sap.com/products/artificial-intelligence/joule-for-developers.html" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958"/>
    <published>2025-10-08T10:27:45.674000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-auto-fill-cr-description-by-data-model-and-cr-type-description/ba-p/14235813</id>
    <title>SAP MDG: Auto-fill CR Description by Data Model and CR Type Description</title>
    <updated>2025-10-08T11:30:00.053000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi&amp;nbsp;SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great&lt;SPAN&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;This blog does not include execution screenshots.&lt;STRONG&gt;&lt;BR /&gt;Note 02:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;STRONG&gt;&lt;BR /&gt;Note 03:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;There are several ways; this blog is written about one of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;BADI Responsible:&amp;nbsp;&lt;/STRONG&gt;USMD_CREQUEST_INTEGRATION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Auto-populate the Change Request Description with the Data Model’s CR Type Description so every MDG CR is consistently and meaningfully described.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create Custom implementation &amp;amp; assign Data model filter values.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Method Responsible:&amp;nbsp;&lt;/STRONG&gt;if_ex_usmd_crequest_integr~get_crequest_attributes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Code:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_ex_usmd_crequest_integr~get_crequest_attributes.

    SELECT SINGLE a~usmd_creq_type, a~usmd_model,  b~txtmi        
             FROM usmd110c AS a INNER JOIN
                  usmd110t AS b ON a~usmd_creq_type = b~usmd_creq_type
                               AND a~usmd_model EQ &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/591350"&gt;@iv&lt;/a&gt;_model
             INTO  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(ls_cr_types)
            WHERE b~langu      EQ &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/4244"&gt;@SY&lt;/a&gt;-langu AND
                  a~usmd_creq_type = &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/591350"&gt;@iv&lt;/a&gt;_crequest_type.

    IF sy-subrc IS INITIAL.
      cv_description = ls_cr_types-txtmi.
    ENDIF.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-auto-fill-cr-description-by-data-model-and-cr-type-description/ba-p/14235813"/>
    <published>2025-10-08T11:30:00.053000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954</id>
    <title>SAP Joule for Developers, ABAP AI capabilities for SAP S/4HANA Cloud Private Edition 2025</title>
    <updated>2025-10-08T12:44:10.622000+02:00</updated>
    <author>
      <name>SebastianBaskovich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10947</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hi folks, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Joule for Developers, ABAP AI capabilities are now also available for SAP S/4HANA Cloud Private Edition 2025.&lt;BR /&gt;The ABAP AI license materials for SAP S/4HANA Cloud Private Edition 2025 are the same as for SAP BTP ABAP Environment &amp;amp; SAP S/4HANA Public Cloud. For more information, please check out the following SAP Note&amp;nbsp;&lt;A href="https://me.sap.com/notes/3571857" target="_blank" rel="noopener noreferrer"&gt;3571857&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below, you can find a step-by-step guide on how to activate SAP Joule for Developers, ABAP AI capabilities in your SAP S/4HANA Cloud Private Edition 2025 system. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Have fun and stay tuned for TechEd soon!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Best,&lt;BR /&gt;Sebastian&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761942566"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1565429061"&gt;Prerequisites&lt;/H2&gt;&lt;P&gt;You have a customer account on &lt;STRONG&gt;SAP Business Technology Platform (BTP) &lt;/STRONG&gt;and a development system on &lt;STRONG&gt;SAP&lt;/STRONG&gt; &lt;STRONG&gt;S/4HANA Cloud Private Edition 2025&lt;/STRONG&gt; and you have prepared the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Cloud Identity Services&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Established trust to your &lt;STRONG&gt;SAP Cloud Identity Services tenant &lt;/STRONG&gt;in your BTP Subaccount, see this &lt;A href="•https:/help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers?locale=en-US" target="_blank" rel="noopener nofollow noreferrer"&gt;link&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Your user needs Administrator access to your &lt;STRONG&gt;SAP Cloud Identity Services tenant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Your system needs to be configured so that it trusts server certificates according to the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your system needs to use a client certificate issued by a CA listed in the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;. One way to obtain a client certificate can be found on &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/use-destination-certificates?version=Cloud#procedure" target="_blank" rel="noopener noreferrer"&gt;Manage Destination Certificates&lt;/A&gt;&lt;/SPAN&gt; (under "Generate a Certificate").&lt;/LI&gt;&lt;LI&gt;You've successfully applied SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3627794" target="_blank" rel="noopener noreferrer"&gt;3627794 &lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your ABAP system needs to support TLS 1.3. If TLS 1.3 is not enabled, refer to SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3318423" target="_blank" rel="noopener noreferrer"&gt;3318423 &lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;to activate it.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1368915556"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1172402051"&gt;Configuration steps in your SAP BTP subaccount&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;In your BTP subaccount, navigate to &lt;STRONG&gt;Entitlements&lt;/STRONG&gt;. You’ll see a table with all entitlements it already has.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Configure Entitlements&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;. A popover appears with all entitlements available for your directory/subaccount.&lt;/LI&gt;&lt;LI&gt;Select the service &lt;EM&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/EM&gt; and then the plan “default”&lt;/LI&gt;&lt;LI&gt;Select the amount of quota&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 14.22.42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323868iDD900DFB152B439E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 14.22.42.png" alt="Screenshot 2025-10-06 at 14.22.42.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Services &amp;gt; Service Marketplace&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Choose &lt;STRONG&gt;Create&lt;/STRONG&gt; and select Plan &lt;EM&gt;default&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.48.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323870i4553F8A79364BEF0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.48.40.png" alt="Screenshot 2025-10-06 at 13.48.40.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.49.01.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323871i40511D518B24DB2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.49.01.png" alt="Screenshot 2025-10-06 at 13.49.01.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Once the service is created, go to your IAS and navigate to &lt;STRONG&gt;Users &amp;amp; Authorizations &amp;gt; Groups &lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Check that the group&lt;EM&gt; j4d-admin&lt;/EM&gt; was successfully created&lt;/LI&gt;&lt;LI&gt;Add your admin user to the created &lt;EM&gt;j4a-admin&lt;/EM&gt; group&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 16.58.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323874iEDFF6732B4938C19/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 16.58.21.png" alt="Screenshot 2025-10-06 at 16.58.21.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;In the navigation go to &lt;STRONG&gt;Services&lt;/STRONG&gt; &amp;gt;&lt;STRONG&gt;Instances &amp;amp; Subscriptions&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Click on &lt;STRONG&gt;&lt;STRONG&gt;Go to Application&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 17.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323877i61DEF73A53C3F81A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 17.28.39.png" alt="Screenshot 2025-10-06 at 17.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; app should be opened&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.56.56.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323878iD40F97D4176DFD17/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.56.56.png" alt="Screenshot 2025-10-06 at 13.56.56.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;H2 id="toc-hId-975888546"&gt;Configuration steps in your SAP S/4HANA Cloud Private Edition 2025 system&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Go to your ABAP system, open the transaction &lt;STRONG&gt;APPLDESTCC&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Select &lt;EM&gt;scenario HTTP - Application Destination &lt;/EM&gt;and click on &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.19.37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323881i91B18A87610C7552/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.19.37.png" alt="Screenshot 2025-10-07 at 13.19.37.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Next, select &lt;EM&gt;AIC_ADT_HTTP_PROXY&lt;/EM&gt; and open the context menu. Choose &lt;STRONG&gt;Create New Application Destination&lt;/STRONG&gt;. Now, you're asked to enter the details of your application destination.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.20.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323882i741A6289B0CC9B4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.20.21.png" alt="Screenshot 2025-10-07 at 13.20.21.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Enter an &lt;STRONG&gt;Application Destination Name&lt;/STRONG&gt; of your choice and select the check mark.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.21.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323886i24AFC5D420577B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.21.49.png" alt="Screenshot 2025-10-07 at 13.21.49.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Now, first enter a &lt;STRONG&gt;Description&lt;/STRONG&gt; and select the checkboxes &lt;STRONG&gt;Active&lt;/STRONG&gt; and &lt;STRONG&gt;Default&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323887iF167EBE198EF10A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Fill in the information in the &lt;STRONG&gt;Technical Settings&lt;/STRONG&gt; tab:&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Target System Settings: In the Host field, enter &lt;EM&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your region&amp;gt;.hub.j4a.services.sap.&lt;/EM&gt; As &lt;STRONG&gt;Protocol&lt;/STRONG&gt;, select &lt;STRONG&gt;HTTPS&lt;/STRONG&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;(Optional) HTTP Proxy Options: This information is not mandatory.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt; &lt;EM&gt;The region you enter in &lt;SPAN&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your&lt;/SPAN&gt; region&amp;gt;.hub.j4a.services.sap must be the same region (not technical key) that you chose for your subaccount, for example "eu10". See &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/regions-and-api-endpoints-for-abap-environment?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Regions and API Endpoints for the ABAP Environment&lt;/A&gt;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323890iEAC270D856B43D0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Logon&lt;/STRONG&gt; tab&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;General Settings: Select &lt;STRONG&gt;Connection to External Server&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Logon Procedure: Select &lt;STRONG&gt;Client Certificate&lt;/STRONG&gt; and choose the certificate you wish to use from the dropdown menu&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;. You've successfully maintained the connection.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.25.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323892i5826C527B8DBAD8C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.25.26.png" alt="Screenshot 2025-10-07 at 13.25.26.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Now, continue in your subaccount in the SAP BTP Cockpit&lt;BR /&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Select the &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; subscription you have just created (see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/subscribing-to-joule-for-developers-abap-ai-capabilities?locale=en-US&amp;amp;state=DRAFT&amp;amp;version=ADT_SHIP_Previews" target="_blank" rel="noopener noreferrer"&gt;Subscribing to SAP Joule for Developers, ABAP AI Capabilities&lt;/A&gt;&lt;/SPAN&gt;), or open its details and select &lt;STRONG&gt;Go to Application&lt;/STRONG&gt;. You are forwarded to the &lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; page.&lt;/LI&gt;&lt;LI&gt;In the Certificate Mappings section, select &lt;STRONG&gt;Create&lt;/STRONG&gt; to receive a one-time password (OTP).&lt;/LI&gt;&lt;LI&gt;Copy the OTP.&lt;BR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;: the OTP is valid for five minutes. If you need a new one, close the pop-up and click on Create again.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.26.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323896iC87A756A333E09AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.26.55.png" alt="Screenshot 2025-10-07 at 13.26.55.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Go to your corresponding ABAP system and run report &lt;EM&gt;AIC_ADT_PROXY_CERTIFICATE&lt;/EM&gt;. Select &lt;STRONG&gt;Execute&lt;/STRONG&gt;.&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Paste the one-time password that you've copied in the previous step&lt;/LI&gt;&lt;LI&gt;(Optional) If you wish to use a new certificate that you haven't used in step 1, select Use Custom SSL Client PSE ID. Click in the Client PSE ID field and choose the new certificate from the value help. Now, you can go back to step 1 and switch to the new certificate.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323897i7D16DCB9D4AC4E94/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.39.png" alt="Screenshot 2025-10-07 at 13.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;You've successfully registered your certificate!&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323898i164769C8E47F1AEC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.57.png" alt="Screenshot 2025-10-07 at 13.28.57.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;You can now create a new ABAP Project in ADT (using its latest version) and check out SAP Joule for developers, ABAP AI capabilities&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Screenshot 2025-10-07 at 13.43.28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323900iCE484B1826E38612/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.43.28.png" alt="Screenshot 2025-10-07 at 13.43.28.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954"/>
    <published>2025-10-08T12:44:10.622000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/anatomy-of-a-function-module-popup-to-confirm/ba-p/14240105</id>
    <title>Anatomy of a Function Module: POPUP_TO_CONFIRM</title>
    <updated>2025-10-10T09:53:50.016000+02:00</updated>
    <author>
      <name>serkansaglam</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/123447</uri>
    </author>
    <content>&lt;P&gt;&lt;EM&gt;This is a four-part series about the function module &lt;STRONG&gt;POPUP_TO_CONFIRM&lt;/STRONG&gt;, originally published in the Application Development and Automation Blog Posts group. The series includes six campfire stories, with two stories featured in each of the following posts.&lt;/EM&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/anatomy-of-a-function-module-popup-to-confirm-part-1/ba-p/13562360" target="_blank"&gt;Part 1&lt;/A&gt;&amp;nbsp;- Introduction, Discovery, Function Interface, Flow Logic&lt;UL&gt;&lt;LI&gt;What is POPUP_TO_CONFIRM?&lt;/LI&gt;&lt;LI&gt;The Moment I Feel a Journey Approaching&lt;/LI&gt;&lt;LI&gt;Experiment: Newline Character and HTML &amp;lt;br&amp;gt; Tag&lt;/LI&gt;&lt;LI&gt;Function Interface (Parameters)&lt;/LI&gt;&lt;LI&gt;Flow Logic&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/anatomy-of-a-function-module-popup-to-confirm-part-2/ba-p/13562403" target="_blank"&gt;Part 2&lt;/A&gt;&amp;nbsp;- Stories: Changing the Popup Icon, Customizing the Icons and Quick Info Buttons&lt;UL&gt;&lt;LI&gt;Story 1: Changing the Popup Icon&lt;/LI&gt;&lt;LI&gt;Story 2: Customizing the Icons and Quick Info of Buttons&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/anatomy-of-a-function-module-popup-to-confirm-part-3/ba-p/13562428" target="_blank"&gt;Part 3&lt;/A&gt;&amp;nbsp;- Stories: Splitting Text into 48- and 57-Char Sentences and Starting on New Lines&lt;UL&gt;&lt;LI&gt;Story 3: Splitting Text into 48-Char Sentences and Starting on New Lines&lt;/LI&gt;&lt;LI&gt;Story 4: Splitting Text into 57-Char Sentences and Starting on New Lines&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/anatomy-of-a-function-module-popup-to-confirm-part-4/ba-p/13562505" target="_blank"&gt;Part 4&lt;/A&gt;&amp;nbsp;- Stories: Displaying an Unordered List, Displaying Longer Text Using a Document Object&lt;UL&gt;&lt;LI&gt;Story 5: Displaying an Unordered List&lt;/LI&gt;&lt;LI&gt;Story 6: Displaying Longer Text Using a Document Object&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/anatomy-of-a-function-module-popup-to-confirm/ba-p/14240105"/>
    <published>2025-10-10T09:53:50.016000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/mastering-total-etag-in-rap-a-practical-guide/ba-p/14227417</id>
    <title>Mastering Total ETag in RAP , A Practical Guide.</title>
    <updated>2025-10-13T07:44:59.204000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog I have explained the mechanism of total etag&amp;nbsp; and also differnce between&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;E-TAG and total etag in RAP in restful abap programming model&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Introduction :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;ETAG: the etag concept ensures that&amp;nbsp; the end user of an Odata service only changes instances with the state that is displayed on the UI&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Hence , the etag prevents changes of the BO that are not noticed by the Odata consumers&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.W&lt;/SPAN&gt;&lt;SPAN&gt;ith Etag master each BO&amp;nbsp; entity can be checked independently.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;TOTAL E-TAG:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;It enables optimistic concurrency checks durig the transition from draft to active data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This total etag field on the database table is updated by the RAP runtime framework as soon as an active instance is changed&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Its value is compared when resuming a draft instance to ensure that the active data has not been changed after the exclusive lock has expired&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The total E-tag is used for edit-drafts, a draft that has a corresponding active instance .&lt;/SPAN&gt;&lt;SPAN&gt;As soon as the exclusive lock expires and&amp;nbsp; an edit-draft is resumed , the total etag value of the draft is compared to the total ETAG value of the active instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The total etag is compared for all entities of BO&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Total e-tag is useful when we are changing draft data to active data .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_0-1758777107961.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319637iDB81940A0646880F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Pradeep555_0-1758777107961.png" alt="Pradeep555_0-1758777107961.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;why total etag? and scenario&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose an application is not using draft concepts ,&amp;nbsp; if it is only using e-tag then that application is also modifying the same table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;E-tag will work whenever we are loading the data in the front end , someone else changes the data&amp;nbsp; and&amp;nbsp; unknowingly&amp;nbsp; saving the data – etag will be compered&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In&amp;nbsp; order to save the data and override we use etag&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SCENARIO:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When we start working on a draft table , we will put exclusive lock on active instance (say BOOKING ID-1)so that nobody can change the data.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Active data base--&amp;gt;it will become active instance--&amp;gt; active instance to it will become draft instance&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose&amp;nbsp; I&amp;nbsp; have made some changes in active instance and – forgot to save it ,&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;But it will be automatically saved in draft instance – as we are working on draft&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;Chages made will be automatically saved in draft table&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As soon as we stop working – the exclusve lock will be removed from active instance (BOOKING ID-1)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So now&amp;nbsp; the I&amp;nbsp; will come again ad start working on the draft instance which&amp;nbsp; have&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Saved , again&amp;nbsp; I will put exclusive lock and make some changes in the data and save it .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;As soon as we save – draft instance will be converted into active instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;What happens if we don't use total eTag?&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Suppose somebody else did some changes and those changes are not saved in draft&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;(&lt;/SPAN&gt;&lt;SPAN&gt;the app is not using draft )&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&lt;/SPAN&gt;&lt;SPAN&gt;And we will be overwriting those changes with our changes, since we don't exactly now&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; w&lt;/SPAN&gt;&lt;SPAN&gt;hether someone eles has changed the data or not&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Total etag will be matched automatically based on the field &lt;/SPAN&gt;&lt;SPAN&gt;@Semantics.systemDateTime.lastChangedAt: true&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We need to match these field in behaviour definition&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The framework will update total etag field each time --&amp;gt; whenever we are converting draft into&amp;nbsp; active data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Example :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1.create the table&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1758777516837.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319638iBA50C280B96C856A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1758777516837.png" alt="Pradeep555_1-1758777516837.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;2.create a consumption view and provide the necessary annotation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_2-1758777601278.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319639iC5FD3820E1DB68BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_2-1758777601278.png" alt="Pradeep555_2-1758777601278.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;3.&lt;/SPAN&gt;&lt;SPAN&gt;create behaviour definition and provide total Etag and respective field.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1758777648461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319642i24CEFCC17BCB1020/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1758777648461.png" alt="Pradeep555_3-1758777648461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;4. create draft table&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1758777676405.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319643i715C25FB8A7E1322/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1758777676405.png" alt="Pradeep555_4-1758777676405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;create service def.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_5-1758777706631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319645i36372182CFD9F5AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_5-1758777706631.png" alt="Pradeep555_5-1758777706631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.Create&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;service binding.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_6-1758777736935.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319646i83155EF51634578F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_6-1758777736935.png" alt="Pradeep555_6-1758777736935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7.OUTPUT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_7-1758777788413.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319647i5818315A1846CC63/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_7-1758777788413.png" alt="Pradeep555_7-1758777788413.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8.now&amp;nbsp; user 1 opens the data&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_8-1758777841691.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319648i25DC4171796D1C7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_8-1758777841691.png" alt="Pradeep555_8-1758777841691.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9.user 2 has the same data&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_9-1758777887709.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319649i6B063E5B03A49A2D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_9-1758777887709.png" alt="Pradeep555_9-1758777887709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10.now user 1 starts editing the data&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_10-1758777929109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319652i91F42FE09E418B7B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_10-1758777929109.png" alt="Pradeep555_10-1758777929109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11.suppose the user 2 trying to edit the same data--&amp;gt; he will get an error&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_11-1758777971032.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319656iC79AADF91C9F4BFF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_11-1758777971032.png" alt="Pradeep555_11-1758777971032.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_12-1758777991719.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319657i0883C4CDE67D4E2B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_12-1758777991719.png" alt="Pradeep555_12-1758777991719.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;13.we can see the entry in the dradft table&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_13-1758778026503.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319658i44DE883A4568A852/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_13-1758778026503.png" alt="Pradeep555_13-1758778026503.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14.now the active draft is&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_14-1758778067261.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319659i78779C02AB84DA77/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_14-1758778067261.png" alt="Pradeep555_14-1758778067261.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;15.User2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Trying to edit active draft with different value-&amp;gt;g&lt;/SPAN&gt;&lt;SPAN class=""&gt;etting error-&amp;gt;No data found&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_15-1758778105887.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319660i1614DD58FD8874E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_15-1758778105887.png" alt="Pradeep555_15-1758778105887.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;16.Now user2&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;trying&lt;/SPAN&gt;&lt;SPAN class=""&gt; to edit&amp;nbsp; with&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Same value-&amp;gt;updated&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_16-1758778144031.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319661i81539FD8305AC09E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_16-1758778144031.png" alt="Pradeep555_16-1758778144031.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So total etag comes into picture&amp;nbsp;!!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Conclusion:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;lt;&amp;lt; Whenever we wil save the data&amp;nbsp; from active to draft instance – before saving I will compare total e-tag&amp;nbsp; value&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If it matches --&amp;gt; I&amp;nbsp;shall save the data&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If it does not match --&amp;gt; i shall not save&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Whenever we change the&amp;nbsp; active data --&amp;gt; total etag changes each time .&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If nobody changes the data&amp;nbsp; ---&amp;gt; total etag will be matched&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If somebody changes the data--&amp;gt; total&amp;nbsp; etag will not be matched , we need to discrad the current draft and&amp;nbsp; we need to load the current data&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;NOTE: whenever we change the draft data into active data we need total etag&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;thank you !&lt;/P&gt;&lt;P&gt;- Pradeep Ishwar Devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-total-etag-in-rap-a-practical-guide/ba-p/14227417"/>
    <published>2025-10-13T07:44:59.204000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957</id>
    <title>File upload for items in Fiori Elements List Report</title>
    <updated>2025-10-13T12:30:19.100000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;In this blog, we'll show you how to upload, browse, and delete files on a row-by-line basis by having each row (item) have an item like an "attachment" in the SAP Fiori Elements List Report.&lt;BR /&gt;The data source for the List Report covers OData V4 services developed using the ABAP RESTful Application Programming Model (RAP) framework, and provides information about the implementation required to achieve file upload in RAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091120"&gt;2. Key points for implementing file upload&lt;/H1&gt;&lt;P&gt;In the file upload implementation, two points are required: (1) define the table items required for file storage, and (2) provide appropriate annotations for file object storage fields and file type storage fields.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Defining the table items required to store files&lt;P&gt;Set the following three fields in the custom table (the field names are samples).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;File object storage field (abap.rawstring(0) if file size is not specified)&lt;UL&gt;&lt;LI&gt;example：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file name&lt;UL&gt;&lt;LI&gt;example：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;example：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Proper Annotation of File Object and File Type Fields in CDS View&lt;UL&gt;&lt;LI&gt;File object storage field&lt;UL&gt;&lt;LI&gt;example：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;Field for file Type&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577615"&gt;3. Implementation sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use the RAP Generator to simplify RAP development. RAP Generator is a tool that allows you to generate RAP objects such as CDS View and Behavior Definition from custom tables using only wizard settings. When using the RAP Generator to generate a RAP object, a service is generated that supports the Managed Runtime with a draft function. Therefore, the table definition must define the required fields for drafting functions and update processing. For more information about RAP Generator, please check the following SAP Help.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog is an example implementation based on the &lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229548"&gt;1. Create a package to store objects by the RAP Generator.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105716043"&gt;2. Create a custom table inside the package you created in 1.&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202538"&gt;3. Run the RAP Generator and follow the wizard to configure it.&lt;/H3&gt;&lt;P&gt;Right-click on the target custom table → run it with "Generate ABAP Repository Objects..."&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a Service Type&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Selecting a package for storing generated objects&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Review the generated object and rename or alias it as needed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712689033"&gt;4. Add annotations for file upload to the generated data model (CDS View) and enable the CDS View.&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175528"&gt;5. Publish the service binding.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319662023"&gt;6. Select the entity and preview it.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148518"&gt;7. From the "Create" button, perform data registration and file upload.&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209658"&gt;4. Summary&lt;/H1&gt;&lt;P&gt;By implementing the above, using the OData V4 service using the ABAP RESTful Application Programming Model (RAP), you can use the "Attachment" for each row (item) in the SAP Fiori Elements List Report. It is possible to upload, read, and delete files on a line-by-line basis. Please take advantage of it.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696153"&gt;References&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/file-upload-for-items-in-fiori-elements-list-report/ba-p/14240957"/>
    <published>2025-10-13T12:30:19.100000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/dynamically-making-a-field-read-only-in-sap-rap/ba-p/14225542</id>
    <title>Dynamically Making a Field Read-Only in SAP RAP</title>
    <updated>2025-10-14T11:19:32.771000+02:00</updated>
    <author>
      <name>Faizan_khan1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451076</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Making a field read-only or non-editable dependent on the value of another field is a frequent requirement. This blog post will explain how to use the RAP model to accomplish this.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The scenario we'll cover is making the &lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field read-only based on the value of the &lt;/SPAN&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; field.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Setting Up the RAP Application&lt;/STRONG&gt;&amp;nbsp;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before implementing the dynamic behavior, we need a basic RAP application structure.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Database Table&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Data base Table for sales order'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zdemo_dt_so {
  key vbeln : vbeln_va not null;
  erdat     : erdat;
  ernam     : ernam;
  vbtyp     : vbtypl;
  auart     : auart;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; 2 . &lt;STRONG&gt;Interface View&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for sales order'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root view entity ZDEMO_I_SO as select from zdemo_dt_so
{
    key vbeln as Vbeln,
    erdat as Erdat,
    ernam as Ernam,
    vbtyp as Vbtyp,
    auart as Auart
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;3 .&amp;nbsp;&lt;STRONG&gt;&lt;SPAN&gt;Projection View&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Projection view for Sales order'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@Metadata.allowExtensions: true
define root view entity ZDEMO_P_SO as projection on ZDEMO_I_SO
{
    key Vbeln,
    Erdat,
    Ernam,
    Vbtyp,
    Auart
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; 4 .&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;Behavior Definition&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_demo_i_so unique;
strict ( 2 );
define behavior for ZDEMO_I_SO //alias &amp;lt;alias_name&amp;gt;
persistent table zdemo_dt_so
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
field (features : instance ) Vbtyp ;
validation vbtyp_valid on save { field Auart , Vbtyp ; }
  create;
  update;
  delete;
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );
define behavior for ZDEMO_P_SO //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;STRONG&gt; 5 .Service Definition and Binding&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service def SO'
define service ZDEMO_P_SO {
  expose ZDEMO_P_SO;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1758626719811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318831i36BA6EF83B11D5D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1758626719811.png" alt="Faizan_khan1_1-1758626719811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Once you click on preview you can see the application and create a record&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_2-1758626761985.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318832i87B00A509503C3FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_2-1758626761985.png" alt="Faizan_khan1_2-1758626761985.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_3-1758626769228.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318833iC5D4AF65B649F8AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_3-1758626769228.png" alt="Faizan_khan1_3-1758626769228.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Implementing Dynamic Feature Control&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Our goal is to make the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;,&lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field read-only if the &lt;/SPAN&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; field has a specific value, like 'KA'.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For Achieving this scenario first we need to Define a Dynamic feature control for the field 'VBTYP'&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758626860646.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318837i82B7069BF5FA3D0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758626860646.png" alt="Faizan_khan1_0-1758626860646.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The logic for making the field read-only&amp;nbsp; presents in the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;get_instance_features&lt;/SPAN&gt;&lt;SPAN&gt; method of your behavior implementation class. This method is automatically created&amp;nbsp; by the RAP framework. Here's the code you'll need to write:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD get_instance_features.

  READ ENTITIES OF ZDEMO_I_SO IN LOCAL MODE
   ENTITY zdemo_i_so FIELDS ( Vbeln  Auart )
   WITH CORRESPONDING #( keys )
   RESULT data(lt_result).
        LOOP AT lt_result INTO data(ls_result).
        if ls_result-Auart = 'KA'.
        result = VALUE #(
        (
        %tky = ls_result-%tky
        %features-%field-Vbtyp = if_abap_behv=&amp;gt;fc-f-read_only
        ) ).
        ELSE.
        result = VALUE #(
        (
        %tky = ls_result-%tky
        %features-%field-Vbtyp = if_abap_behv=&amp;gt;fc-f-unrestricted
        ) ).
        ENDIF.
        ENDLOOP.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After implementing the logic, activate your behavior implementation class. Now, when you refresh your&amp;nbsp; application, the changes will be applied&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758627133505.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318841i9C3E65A60324E488/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758627133505.png" alt="Faizan_khan1_0-1758627133505.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In your application, you can create a few records with different&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; values, such as 'KA' and 'OR'. When you try to edit the record where&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AUART&lt;/SPAN&gt;&lt;SPAN&gt; is 'KA', you will notice that the &lt;/SPAN&gt;&lt;SPAN&gt;VBTYP&lt;/SPAN&gt;&lt;SPAN&gt; field is grayed out and you are unable to change its value. However, if you edit a record where&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_1-1758627174853.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318842iD3CAFC6AD77B3851/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_1-1758627174853.png" alt="Faizan_khan1_1-1758627174853.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;AUART&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; is 'OR', the &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;VBTYP&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; field will remain editable, allowing you to change its value freely.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Faizan_khan1_0-1758627257369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318867i9986E801A5B8F789/image-size/large?v=v2&amp;amp;px=999" role="button" title="Faizan_khan1_0-1758627257369.png" alt="Faizan_khan1_0-1758627257369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This &lt;/SPAN&gt;&lt;SPAN class=""&gt;demonstrates&lt;/SPAN&gt;&lt;SPAN class=""&gt; how the field's behavior is dynamically controlled.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Conclusion&amp;nbsp; :&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;The blog post effectively demonstrates how to &lt;/SPAN&gt;&lt;SPAN class=""&gt;dynamically make a field read-only&lt;/SPAN&gt;&lt;SPAN class=""&gt; within the &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP RAP.&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;The core method involves using&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;dynamic feature control&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/dynamically-making-a-field-read-only-in-sap-rap/ba-p/14225542"/>
    <published>2025-10-14T11:19:32.771000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap-event-consume-sap-standard-event-and-trigger-custom-rap-event/ba-p/14241235</id>
    <title>RAP Event: consume SAP standard event and trigger custom RAP event</title>
    <updated>2025-10-14T18:00:00.028000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633627625"&gt;1. Introduction&lt;/H1&gt;&lt;P&gt;Event-driven architecture (EDA) is an integrated model that detects critical business "events" and responds to them in real time. As modern businesses seek real-time operations and flexible, responsive systems, EDA has become an essential technology.&lt;BR /&gt;Many standard RAP events are provided for the implementation of the event-driven architecture in SAP S/4HANA, but the standard event payload may not meet business requirements and require customization. In particular, there is a use case where SAP standard events are extended with Derived Events for the purpose of filtering by event data and payload completion of standard events.&lt;BR /&gt;Derived Event is available in S/4HANA Cloud, private edition &amp;amp; S/4HANA 2023 / S/4HANA Cloud, public edition Introduced in the 2308 release, this feature allows you to define new events with custom payloads based on existing SAP standard events. This allows you to reuse standard event implementations while creating events with additional fields and filtering criteria that you need for your business.&lt;BR /&gt;SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/derived-events-how-to-trigger-custom-event-from-an-sap-standard-event/ba-p/13955193" target="_blank"&gt;Derived Events- How to Trigger Custom Event from an SAP Standard Event&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;On the other hand, a Derived Event requires that the SAP Standard object to be extended meets the following conditions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The business object containing the referring event must be extensible.&lt;/LI&gt;&lt;LI&gt;The referenced event must be published on the C0 and C1 released RAP BO interfaces&lt;/LI&gt;&lt;LI&gt;The CDS view entity used as the data source for the Derived Event payload must have been released in C1&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Therefore, some objects do not support extensibility with Derived Events in SAP Standard RAP BO. In this case, there may be cases where the requirements that should be solved by Derived Events cannot be realized.&lt;BR /&gt;So, in this blog, we will introduce a workaround approach that enables payload expansion with custom RAP BO for SAP standard events that cannot be extended with Derived Events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437114120"&gt;2. Workaround Solutions&lt;/H1&gt;&lt;P&gt;If Derived Events are not available, a workaround approach that combines Local Event Consumption with custom RAP events can be an effective approach. This approach involves consuming SAP standard events locally (custom ABAP classes) and using them as triggers to raise custom RAP events. By setting the payload of a custom event to meet your business requirements, you can use event filters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760225484634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326000i65E19ECBA8BC68CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760225484634.png" alt="hironobu_nakayama_1-1760225484634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1240600615"&gt;3. Implementation Sample&lt;/H1&gt;&lt;P&gt;In this blog, we will use a non-extensible r_purchaseordertp as the target object to extend the event payload for data changes in a PO document. SAP standard events have a payload of only the purchase order document number, whereas custom events have a purchase order document number and purchase order type as the payload. For more information on Event Binding and channel configuration with Event Mesh, please visit the SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312&lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;. Please note that the RAP BO in the implementation sample in this blog does not implement CRUD or save processing other than events.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302252548"&gt;(1) Local Consumer (Custom ABAP Class for Local Event Consumption)&lt;/H3&gt;&lt;H5 id="toc-hId-1363904481"&gt;Global class: zcl_event_consump&lt;/H5&gt;&lt;P&gt;In the Global class, the definition FOR EVENTS OF r_purchaseordertp sets the standard events to be consumed.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_event_consump DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR EVENTS OF r_purchaseordertp.

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_event_consump IMPLEMENTATION.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1167390976"&gt;Local class: zcl_event_consump&lt;/H5&gt;&lt;P&gt;The Local class performs additional data retrieval based on the data from the standard event payload consumed to trigger a custom RAP event.&lt;BR /&gt;It is important to note that triggering events is only possible in the RAP framework with a Save Sequence, so you must explicitly change it to Save Sequence by cl_abap_tx=&amp;gt;save( ).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lcl_event_consump DEFINITION INHERITING FROM cl_abap_behavior_event_handler.
  PRIVATE SECTION.
    METHODS:
      consume_changed FOR ENTITY EVENT changed_instances FOR purchaseorder~changed.
ENDCLASS.

CLASS lcl_event_consump IMPLEMENTATION.

  METHOD consume_changed.
    cl_abap_tx=&amp;gt;save(  ).

    DATA lv_potype TYPE mm_purchaseordertype.

    CHECK changed_instances IS NOT INITIAL.

    LOOP AT changed_instances INTO DATA(changed_instance).

      SELECT SINGLE purchaseordertype
      FROM c_purchaseordertp
      INTO _potype
      WHERE purchaseorder = @changed_instance-purchaseorder.

      DATA(et_events) = VALUE zbp_i_purchseorder_test=&amp;gt;tt_events(
        (
        purchaseorder = changed_instance-purchaseorder
        purchaseordertype = lv_potype
        )
      ).

      zbp_i_purchseorder_event=&amp;gt;raise_po_changed_event( it_events = et_events ).

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712712033"&gt;(2) Custom RAP BO (Custom Event)&lt;/H3&gt;&lt;H5 id="toc-hId-774363966"&gt;CDS View: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;In the CDS View, I define only the purchase order.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consume purchase order event'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define root view entity ZI_purchseorder_event as select from I_PurchaseOrder
{
  key PurchaseOrder
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-577850461"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId-381336956"&gt;Behavior Definition: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Custom RAP BO for event triggers does not define the create/update/delete function.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_i_purchseorder_event unique;
strict ( 2 );

define behavior for ZI_purchseorder_event //alias &amp;lt;alias_name&amp;gt;
//persistent table ekko
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  //  create;
  //  update;
  //  delete;
  event purchaseorder_changed parameter ZAB_PO_changed_event;

  field ( readonly ) PurchaseOrder;
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--735379370"&gt;Behavior Implementation (Global class) : &lt;SPAN&gt;zbp_i_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;In the Global class, I define a method for triggering events.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_i_purchseorder_event DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zi_purchseorder_event.

  TYPES tt_events TYPE TABLE FOR EVENT zi_purchseorder_event~purchaseorder_changed.

  PUBLIC SECTION.
        CLASS-METHODS raise_po_changed_event
            IMPORTING it_events TYPE tt_events.

ENDCLASS.

CLASS zbp_i_purchseorder_event IMPLEMENTATION.
METHOD raise_po_changed_event.
  lcl_event_handler=&amp;gt;on_po_changed_event( it_events ).
endmethod.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--931892875"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1128406380"&gt;Behavior Implementation (Local class) : &lt;SPAN&gt;lhc_zi_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;The Local class does not implement save processing, etc., but only implements methods for triggering events.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_purchseorder_event RESULT result.

ENDCLASS.

CLASS lhc_zi_purchseorder_event IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zi_purchseorder_event IMPLEMENTATION.

  METHOD save_modified.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_handler DEFINITION FRIENDS zbp_i_purchseorder_event.
  PUBLIC SECTION.
    CLASS-METHODS on_po_changed_event IMPORTING it_events TYPE zbp_i_purchseorder_event=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_po_changed_event.

    RAISE ENTITY EVENT ZI_purchseorder_event~purchaseorder_changed FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--1324919885"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1521433390"&gt;Abstract Entity: &lt;SPAN&gt;ZAB_PO_changed_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Abstract entity adds a purchase order document type. This results in the payload of the custom RAP event being the purchase order document number and the purchase order document type.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abastract entity for po changed event'
define abstract entity ZAB_PO_changed_event
  //  with parameters parameter_name : parameter_type
{
  PurchaseOrderType : mm_purchaseordertype;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--544334867"&gt;4. Implementation Results&lt;/H1&gt;&lt;P&gt;Modify and save an existing purchase order document from the Manage Purchase Orders (F0842A) app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760229645619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326001iA137C622300D0D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760229645619.png" alt="hironobu_nakayama_0-1760229645619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can receive custom events triggered from S/4HANA in SAP Event Mesh.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760229707438.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326002i776A835D573B8867/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760229707438.png" alt="hironobu_nakayama_1-1760229707438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--740848372"&gt;5. Summary&lt;/H1&gt;&lt;P&gt;When it is not possible to scale with Derived Events in implementing an event-driven architecture, a workaround approach that combines Local Event Consumption with custom RAP events is an effective approach.&lt;BR /&gt;This approach enables custom payloads and filtering capabilities based on business requirements, providing event consumers with the data they need to optimize cross-system integration.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937361877"&gt;References&lt;/H1&gt;&lt;P&gt;SAP Learning：&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/explaining-event-driven-architecture_d02a51bb-1ce4-4c2d-a25d-8b9c9198ffd2" target="_blank" rel="noopener noreferrer"&gt;Explaining Event-Driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/integration-architecture-guide/event-driven-architecture?amp;state=PRODUCTION&amp;amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Event-driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-event-consume-sap-standard-event-and-trigger-custom-rap-event/ba-p/14241235"/>
    <published>2025-10-14T18:00:00.028000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/how-to-create-trigger-and-test-rap-based-event-via-event-mesh/ba-p/14244440</id>
    <title>How to create , trigger and test RAP based event via Event Mesh</title>
    <updated>2025-10-15T09:39:13.246000+02:00</updated>
    <author>
      <name>vimal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3165</uri>
    </author>
    <content>&lt;P&gt;Hello,&lt;/P&gt;&lt;P&gt;This blog is an attempt to show steps to &lt;STRONG&gt;create RAP based events and how to trigger events via ABAP in Event Mesh&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This blog is written on S/4 HANA 2023 private cloud . Also it assumes that you know the basics of RAP ABAP.&lt;/P&gt;&lt;P&gt;Let's start !&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a Root Entity:&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_1-1760512693489.png" style="width: 263px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327742i1138D611360E8599/image-dimensions/263x195?v=v2" width="263" height="195" role="button" title="vimal_1-1760512693489.png" alt="vimal_1-1760512693489.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Create behaviour definition of above root entity. Raise an event as shown below , Parameter is optional if you just want to trigger an event&amp;nbsp; you can do so but if you have to send some value to CPI alongwith event ,you will raise it with Parameter and will pass the parameter. Here we want to send timestamp , so we have created similar parameter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_2-1760512778949.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327743i1919153BF987F945/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_2-1760512778949.png" alt="vimal_2-1760512778949.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3.&amp;nbsp;Once we have passed the parameter , we will create an abstract entity for same parameter(with same name of entity). Though the name is hidden below but it has to be same as parameter name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_3-1760512832461.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327745i12796F0151BA3147/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_3-1760512832461.png" alt="vimal_3-1760512832461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.&amp;nbsp;Once you are done with above , you will also create your class in Behaviour definition and in tab “Global Class” , we will declare static method as well(Declaration and Implementation). The lhc_i_hubtr_out mentioned below is local handler class and it’s method “Trigger event” we will create in next step.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_4-1760512937654.png" style="width: 308px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327747i98DC8F1E241A010C/image-dimensions/308x258?v=v2" width="308" height="258" role="button" title="vimal_4-1760512937654.png" alt="vimal_4-1760512937654.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.&amp;nbsp;Now , we will go to “Local types” tab as shown below and will create our “trigger_event” method as shown below to call RAISE ENTITY and call the event which we created in 2nd step along with Parameter. Activate behavior definition , Root and abstract entities once done.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_5-1760513003830.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327748iAABD60A2E5FB01B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_5-1760513003830.png" alt="vimal_5-1760513003830.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.&amp;nbsp;Now, we will call method in ABAP . The method created in “global class” section will be called and in turn it will call “trigger_event”. We cannot do RAISE ENTITY EVENT from ABAP because it can only be called from Behaviour definition, So that is why we created a global method and then calling that global method in ABAP .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_6-1760513196719.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327754i94D765879E3E1B21/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_6-1760513196719.png" alt="vimal_6-1760513196719.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After calling this method, Don’t forget to write “&lt;STRONG&gt;COMMIT &amp;nbsp;WORK&lt;/STRONG&gt;” , otherwise your event will not be registered.&lt;/P&gt;&lt;P&gt;7.&amp;nbsp;We will also create an event binding as shown below. You can provide any Namespace, Object type and Operation. But you need to choose your root entity and event name which you created in earlier steps by clicking on Add button.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_7-1760513289707.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327755iEE97E84EBE4FE890/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_7-1760513289707.png" alt="vimal_7-1760513289707.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8.&amp;nbsp;Once done with above steps, last step is to configure the namespace as shown below in tcode /n/IWXBE/CONFIG. Select the channel and click on “Outbound Bindings”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_8-1760513324289.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327757iCB61726C665A6109/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_8-1760513324289.png" alt="vimal_8-1760513324289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on below highlighted “Create” button&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_9-1760513343292.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327758i7A2431761CE418FB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_9-1760513343292.png" alt="vimal_9-1760513343292.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After this a popup of Topic will be populated, in f4 select the event binding created in 7th Step as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_10-1760513360808.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327759iEC6A377E7A24071B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_10-1760513360808.png" alt="vimal_10-1760513360808.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once you add it , it will be added to outbound channel. This channel will be visible to CPI and then see it in their queue , how many records have come via this channel.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_11-1760513379909.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327760i4C856B88D54D0D5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_11-1760513379909.png" alt="vimal_11-1760513379909.png" /&gt;&lt;/span&gt;&lt;BR /&gt;9. Now as soon as you trigger this event(By running your ABAP report), you can check via t-code /n/IWXBE/EVENT_MONITOR that whether those events are triggered or not. There are 2 tabs – Inbound &amp;amp; Outbound and we can check as per our event raised. Below is the screenshot of our event raised.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_12-1760513423864.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327761iCBA2F5C39CCD5FB8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_12-1760513423864.png" alt="vimal_12-1760513423864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on AEM_BROKER and below is the screenshot showing 2 records triggered.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_13-1760513438735.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327762iA0182F67FFC6A7EC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vimal_13-1760513438735.png" alt="vimal_13-1760513438735.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you click on link on Topic , you will get to see the payload which is going to CPI as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vimal_0-1760710392182.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/329248iDA25A1E05FF7B26E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="vimal_0-1760710392182.png" alt="vimal_0-1760710392182.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P data-unlink="true"&gt;This is the end of this blog and if there are any questions or something missing, please comment on the blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks,&lt;/P&gt;&lt;P&gt;Vimal&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/how-to-create-trigger-and-test-rap-based-event-via-event-mesh/ba-p/14244440"/>
    <published>2025-10-15T09:39:13.246000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/f4-search-help-not-working-in-application-jobs-fiori-app-in-s4-hana-2023/ba-p/14244453</id>
    <title>F4 Search help not working in Application Jobs fiori app in S4/HANA 2023</title>
    <updated>2025-10-15T09:51:59.199000+02:00</updated>
    <author>
      <name>vimal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3165</uri>
    </author>
    <content>&lt;P&gt;If you are in S/4 HANA 2023 and working with &lt;STRONG&gt;Application jobs&lt;/STRONG&gt; fiori app and trying to put F4 search help to parameters but it's not working then make sure below notes are implemented in your system:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3564773 - Application Jobs: Value help does not working&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3558502 &amp;nbsp; Application Jobs: missing functionality for class based job catalogs in transaction SAPJ&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks,&lt;/P&gt;&lt;P&gt;Vimal&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/f4-search-help-not-working-in-application-jobs-fiori-app-in-s4-hana-2023/ba-p/14244453"/>
    <published>2025-10-15T09:51:59.199000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cell-color-and-highlight-in-fiori-list-report-using-cds-views/ba-p/14243157</id>
    <title>Cell Color and Highlight In Fiori  list Report using CDS Views.</title>
    <updated>2025-10-16T09:50:02.390000+02:00</updated>
    <author>
      <name>Nayanakumar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1490076</uri>
    </author>
    <content>&lt;P&gt;A Purchase Order (PO) List Report to monitor the status of deliveries. It is critical that immediately identify which POs are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Overdue: The delivery date is in the past, and the status is still "Open." (Highlight: Red/Negative)&lt;/LI&gt;&lt;LI&gt;Due Soon: The delivery date is within the next 7 days. (Highlight: Orange/Critical)&lt;/LI&gt;&lt;LI&gt;On Track: The PO is open but not due soon. (Highlight: Green/Positive)&lt;/LI&gt;&lt;LI&gt;Completed/Cancelled: PO is closed. (Highlight: Grey/Neutral)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In this scenario, a calculated field is used to assign a Criticality Code to each record, which the Fiori UI consumes to apply the correct color-coding.&lt;/P&gt;&lt;P&gt;The solution involves two main steps:&lt;/P&gt;&lt;P&gt;Backend (CDS View): Define a transient field that calculates the numeric criticality code based on business logic (e.g., date difference, status).&lt;/P&gt;&lt;P&gt;Frontend (Metadata Extension/MDE): Use the Criticality annotation to link the field you want to color (e.g., DeliveryStatusText) to the calculated criticality code field.&lt;/P&gt;&lt;P&gt;Interface View.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'INTERFACE VIEW PO'
@Metadata.ignorePropagatedAnnotations: true
define root view entity ZNP_I_PO1 as select from znp_dt_po1
{
  key po_id as PoID,
  po_desc as PoDesc,
  status_text as StatusText,
  delivery_date as DeliveryDate,
  vendor_id as VendorID,
  @Semantics.amount.currencyCode: 'Currency'
  total_amount as TotalAmount,
  @Consumption.valueHelpDefinition: [ {
    entity.name: 'I_CurrencyStdVH', 
    entity.element: 'Currency', 
    useForValidation: true
  } ]
  currency as Currency,
    case 
 when znp_dt_po1.status_text = 'Open' and znp_dt_po1.delivery_date &amp;lt;  $session.system_date then 1   // Overdue 
 when znp_dt_po1.status_text = 'Open' 
 and znp_dt_po1.delivery_date &amp;lt;= dats_add_days($session.system_date,
 7 ,'UNCHANGED') then 2   // Due Soon 
when znp_dt_po1.status_text = 'Open' then 3   // On Track 
 else 0 // Closed 
end as DeliveryCriticality, 
case 
when status_text = 'Open' and delivery_date &amp;lt; $session.system_date then 'Overdue'
 when status_text = 'Open' and delivery_date &amp;lt;= dats_add_days($session.system_date,7 ,'UNCHANGED')  then 'Due Soon'
when status_text = 'Open' then 'On Track'
 else 'Closed'
end as DeliveryCriticalityText,
  
  @Semantics.user.createdBy: true
  created_by as CreatedBy,
  @Semantics.systemDateTime.createdAt: true
  created_at as CreatedAt,
  @Semantics.user.localInstanceLastChangedBy: true
  last_changed_by as LastChangedBy,
  @Semantics.systemDateTime.localInstanceLastChangedAt: true
  last_changed_at as LastChangedAt
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Updating the status based on the Delivery date.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_0-1760427791787.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327093i1DBDBE668C06D2F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_0-1760427791787.png" alt="Nayanakumar_0-1760427791787.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Metadata Extension.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity ZNP_C_PO1
    with 
{
     @EndUserText.label: 'PoID'
  .facet: [ {
    label: 'General Information', 
    id: 'GeneralInfo', 
    purpose: #STANDARD, 
    position: 10 , 
    type: #IDENTIFICATION_REFERENCE
  } ]
  .identification: [ {
    position: 10 , 
    label: 'PoID'
  } ]
  .lineItem: [ {
    position: 10 , 
    label: 'PoID'
  } ,{ type :  #FOR_ACTION , dataAction: 'copy_po' , label : 'Copy PO' }]
  .selectionField: [ {
    position: 10 
  } ]
  PoID;
  
  @EndUserText.label: 'PoDesc'
  .identification: [ {
    position: 20 , 
    label: 'PoDesc'
  } ]
  .lineItem: [ {
    position: 20 , 
    label: 'PoDesc'
  } ]
  .selectionField: [ {
    position: 20 
  } ]
  PoDesc;
  
  @EndUserText.label: 'StatusText'
  .identification: [ {
    position: 30 , 
    label: 'StatusText'
  } ]
  .lineItem: [ {
    position: 30 , 
    label: 'StatusText'
  } ,{ type: #FOR_ACTION , dataAction: 'set_delivered' , label: 'Set Delivered'}]
  .selectionField: [ {
    position: 30 
  } ]
  StatusText;
  
  @EndUserText.label: 'DeliveryDate'
  .identification: [ {
    position: 40 , 
    label: 'DeliveryDate'
  } ]
  .lineItem: [ {
    position: 40 , 
    label: 'DeliveryDate'
  } ]
  .selectionField: [ {
    position: 40 
  } ]
  DeliveryDate;
  
  @EndUserText.label: 'VendorID'
  .identification: [ {
    position: 50 , 
    label: 'VendorID'
  } ]
  .lineItem: [ {
    position: 50 , 
    label: 'VendorID'
  } ]
  .selectionField: [ {
    position: 50 
  } ]
  VendorID;
  
  @EndUserText.label: 'TotalAmount'
  .identification: [ {
    position: 60 , 
    label: 'TotalAmount'
  } ]
  .lineItem: [ {
    position: 60 , 
    label: 'TotalAmount'
  } ]
  .selectionField: [ {
    position: 60 
  } ]
  TotalAmount;
 
  .lineItem: [
  {
    position: 65,
    label: 'Delivery Status',
    criticality: 'DeliveryCriticality',   // use numeric field for color
    importance: #HIGH
  }
]
DeliveryCriticalityText;

  .identification: [ {
    position: 70 
  } ]
  .lineItem: [ {
    position: 70 
  } ]
  .selectionField: [ {
    position: 70 
  } ]
  CreatedBy;
  
  .identification: [ {
    position: 80 
  } ]
  .lineItem: [ {
    position: 80 
  } ]
  .selectionField: [ {
    position: 80 
  } ]
  CreatedAt;
  
  .identification: [ {
    position: 90 
  } ]
  .lineItem: [ {
    position: 90 
  } ]
  .selectionField: [ {
    position: 90 
  } ]
  LastChangedBy;
  
  .identification: [ {
    position: 100 
  } ]
  .lineItem: [ {
    position: 100 
  } ]
  .selectionField: [ {
    position: 100 
  } ]
  LastChangedAt;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;add the Criticality Field in the annotation For Delivery Criticality text.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_1-1760427886941.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327095i84FABACDE40FF4B8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_1-1760427886941.png" alt="Nayanakumar_1-1760427886941.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Output.&lt;/P&gt;&lt;P&gt;1.When the status is open and Delivery date is not due soon .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_2-1760427940717.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327096i9736099A3BD5F275/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_2-1760427940717.png" alt="Nayanakumar_2-1760427940717.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.When the Status is open and Delivery date is&amp;nbsp; within the next 7 days.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_3-1760427987583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327097iC4391F28EAC1DBAD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_3-1760427987583.png" alt="Nayanakumar_3-1760427987583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3.When Status is open and Delivery date is in past.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_4-1760428032818.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327098iDC84C4D103E28FCD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_4-1760428032818.png" alt="Nayanakumar_4-1760428032818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.When the Order is delivered.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Nayanakumar_5-1760428065191.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/327099i467C95F10B29BCD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Nayanakumar_5-1760428065191.png" alt="Nayanakumar_5-1760428065191.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Conclusion:&lt;/P&gt;&lt;P&gt;This scenario helps to quickly assess the delivery status of purchase orders using color-coded criticality indicators. Overdue, due soon, on-track, and completed POs are visually highlighted, allowing faster identification of issues. It improves visibility, reduces manual tracking, and supports proactive decision-making in the procurement process.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cell-color-and-highlight-in-fiori-list-report-using-cds-views/ba-p/14243157"/>
    <published>2025-10-16T09:50:02.390000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/custom-business-configurations-f4579-controlling-the-visibility-of-bc/ba-p/14247015</id>
    <title>Custom Business Configurations (F4579): Controlling the visibility of BC Objects using authorization</title>
    <updated>2025-10-17T13:28:18.345000+02:00</updated>
    <author>
      <name>patrick_winkler</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/729521</uri>
    </author>
    <content>&lt;H1 id="toc-hId-887480474" id="toc-hId-1633804387"&gt;Introduction&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/custom-business-configurations-app" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;Custom Business Configurations&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;(CUBCO) app serves as an entry point to the&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" title="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/business-configuration-maintenance-object?version=Cloud" href="https://help.sap.com/docs/sap-btp-abap-environment/abap-environment/business-configuration-maintenance-object?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Business Configuration Maintenance Object&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;provided by custom applications or partners.&lt;BR /&gt;Depending on the respective role the user should only be able to edit certain business configurations.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This blog is relevant for&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Public+Edition/pd-p/08e2a51b-1ce5-4367-8b33-4ae7e8b702e0" target="_blank"&gt;SAP S/4HANA Cloud Public Edition&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Private+Edition/pd-p/5c26062a-9855-4f39-8205-272938b6882f" target="_blank"&gt;SAP S/4HANA Cloud Private Edition&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/c-khhcw49343/SAP+BTP+ABAP+environment/pd-p/73555000100800001164" target="_blank"&gt;SAP BTP ABAP environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Further reading:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/tag/business%20configuration%20maintenance%20object/tg-p/board-id/technology-blog-sap" target="_blank"&gt;Related blog posts&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Learn how you can use&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap?url_id=text-sapcommunity-prdteng-ABAP" target="_blank" rel="noopener noreferrer"&gt;ABAP technology&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to develop innovative applications and business solutions across SAP’s portfolio on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/business-technology-platform/development/abap" target="_blank" rel="noopener noreferrer"&gt;SAP Learning Site&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1437290882"&gt;Basic Concept&lt;/H1&gt;&lt;P&gt;An OData V4 service is assigned to each business configuration object (SMBC). The corresponding service binding is based on a RAP BO.&lt;BR /&gt;The list of available business configuration objects in the CUBCO app is restricted to those where the user has the start authorization for the service binding (authorization object S_START,&amp;nbsp; see access control object I_SMBC_CONFIGURATION_TP).&amp;nbsp; The application-specific authorizations are not checked until an SMBC object has been selected. That is, authorization control implemented in the RAP BO. Normally, the authorization object S_TABU_NAM is used, but you can also &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-implement-additional-authorization-objects-for-the-rap-bo-of-a/ba-p/13710852" target="_blank"&gt;use any other authorization object&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Therefore, you can create business roles in which only a subset of all business configuration objects can be used.&lt;/P&gt;&lt;H1 id="toc-hId-1240777377"&gt;SAP BTP ABAP environment, SAP S/4HANA Cloud Public Edition&lt;/H1&gt;&lt;P&gt;IAM apps are the smallest building block for creating business roles. For a business configuration object, you &lt;A href="https://developers.sap.com/tutorials/abap-environment-authorization-control.html" target="_blank" rel="noopener noreferrer"&gt;assign&lt;/A&gt; the OData service binding and the application relevant authorization objects to it. You then create a business catalog to collect IAM apps and finally assign business catalogs to business roles.&lt;/P&gt;&lt;P&gt;Example:&lt;BR /&gt;You have four SMBC objects A, B, C, D in the system and a different OData service binding for each SMBC object. The authorization object S_TABU_NAM is used in all RAP BOs. You create four IAM apps A, B, C, D, each containing the OData service of a different SMBC object and the authorization object S_TABU_NAM. You create a business catalog BC1 that contains the IAM apps A, B, and a business catalog BC2 that contains the IAM apps B, C, D.&lt;/P&gt;&lt;P&gt;You assign a business role containing the business catalog BC1 to a user. This user can work with the SMBC objects A, B. The user cannot see or edit the SMBC objects C and D.&lt;BR /&gt;You assign a business role containing the business catalog BC2 to a user. This user can work with the SMBC objects B, C, D. The user cannot see or work with the SMBC object A.&lt;/P&gt;&lt;H1 id="toc-hId-1044263872"&gt;SAP S/4HANA Private Cloud Edition&lt;/H1&gt;&lt;P&gt;IAM apps are not available. You &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/61159c4dc45b45619b46b4620615c357.html?version=202510.000#provide-authorizations-for-a-business-configuration" target="_blank" rel="noopener noreferrer"&gt;add the application relevant authorization&lt;/A&gt; objects to the authorization default of the OData service assigned to the SMBC object. In the PFCG role you then add the authorization default.&lt;/P&gt;&lt;P&gt;Example:&lt;BR /&gt;You have four SMBC objects A, B, C, D in the system&amp;nbsp;and a different OData service binding for each SMBC object. You assign a PFCG role containing the authorization default for the OData services of SMBC objects A, B to a user. This user can work with the SMBC objects A, B. The user cannot see or edit the SMBC objects C and D.&lt;/P&gt;&lt;P&gt;Note that roles that contain the Custom Business Configurations Fiori app do not automatically derive the required authorization for the SMBC objects. You need to add the authorization default of the OData service manually.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/custom-business-configurations-f4579-controlling-the-visibility-of-bc/ba-p/14247015"/>
    <published>2025-10-17T13:28:18.345000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/fiori-elements-list-report%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89/ba-p/14240934</id>
    <title>Fiori Elements List Reportでのファイルアップロード</title>
    <updated>2025-10-17T18:00:00.031000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633604560"&gt;1. はじめに&lt;/H1&gt;&lt;P&gt;このブログでは、SAP Fiori ElementsのList Reportで、各行（アイテム）に対して“添付ファイル“のような項目を持たせ、行単位でファイルのアップロード・参照・削除の実現方法を紹介します。&lt;BR /&gt;List Reportのデータソースは、ABAP RESTful Application Programming Model（RAP）フレームワークを使用して開発したOData V4サービスを対象とし、RAP開発においてファイルアップロードを実現するために必要な実装についての内容となっています。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437091055"&gt;2. ファイルアップロード実装のポイント&lt;/H1&gt;&lt;P&gt;ファイルアップロード実装においては、①ファイル格納に必要なテーブル項目の定義、および、②ファイルオブジェクト格納用項目とファイルタイプ格納用項目への適切なアノテーション付与の2点が必要となります。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;ファイル格納に必要なテーブル項目の定義&lt;P&gt;カスタムテーブルに以下の3つの項目を設定します（項目名は、サンプルです。）&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;ファイルオブジェクト格納用項目（ファイルサイズを指定しない場合、abap.rawstring(0)とする）&lt;UL&gt;&lt;LI&gt;例：attachment: abap.rawstring(0);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;ファイル名格納用項目&lt;UL&gt;&lt;LI&gt;例：filename: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;ファイルタイプ格納用項目&lt;UL&gt;&lt;LI&gt;例：mimetype: abap.char(128);&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;CDS Viewでのファイルオブジェクト格納用項目とファイルタイプ格納用項目への適切なアノテーション付与&lt;UL&gt;&lt;LI&gt;ファイルオブジェクト格納用項目&lt;UL&gt;&lt;LI&gt;例：&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Semantics.largeObject : {
mimeType: 'Mimetype',
fileName: 'Filename',
contentDispositionPreference: #INLINE
}​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;ファイルタイプ格納用項目&lt;UL&gt;&lt;LI&gt;@Semantics.mimeType: true&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1240577550"&gt;3. 実装例&lt;/H1&gt;&lt;P&gt;本ブログでは、RAP開発の簡略化のため、RAP Generatorを使用します。RAP Generatorは、カスタムテーブルからCDS ViewやBehavior Definition等のRAP オブジェクト群をウィザードによる設定のみで生成可能なツールです。RAP Generator を利用して RAP オブジェクトを生成する場合、ドラフト機能を持つ更新処理（Managed Runtime）に対応したサービスが生成されます。そのため、テーブル定義にドラフト機能や更新処理に利用するための必須項目を定義している必要があります。RAP Generatorについては、以下のSAP Helpをご確認ください。&lt;/P&gt;&lt;P&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/generating-rap-business-service-with-generate-abap-repository-objects-wizard" target="_blank" rel="noopener noreferrer"&gt;Generating a RAP Business Service with the Generate ABAP Repository Objects Wizards&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;以下の実装手順は、&lt;SPAN&gt;SAP Help: &lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-cloud/abap-rap/example-rap-business-service-generation" target="_blank" rel="noopener noreferrer"&gt;Example: OData UI Service Generation Based on a Database Table&lt;/A&gt;のサンプルをベースとした実装例となります。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302229483"&gt;1. RAP Generatorによるオブジェクトを格納するためのパッケージを作成します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760157013761.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325823iFF67EF8A7D119B10/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760157013761.png" alt="hironobu_nakayama_0-1760157013761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1105715978"&gt;2. １で作成したパッケージ内にカスタムテーブルを作成します。&lt;/H3&gt;&lt;P&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760157057491.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325824i82D4DF7B553C56CD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_1-1760157057491.png" alt="hironobu_nakayama_1-1760157057491.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_2-1760157071905.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325825i0DDC00E4250B93BB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_2-1760157071905.png" alt="hironobu_nakayama_2-1760157071905.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Custom Table for file upload test'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zpt_file_upload {

  key client            : abap.clnt not null;
  key customer_id       : /dmo/customer_id not null;
  first_name            : /dmo/first_name;
  last_name             : /dmo/last_name;
  title                 : /dmo/title;
  street                : /dmo/street;
  postal_code           : /dmo/postal_code;
  city                  : /dmo/city;
  country_code          : land1;
  phone_number          : /dmo/phone_number;
  email_address         : /dmo/email_address;
  attachment            : abap.rawstring(0);
  filename              : abap.char(128);
  mimetype              : abap.char(128);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-909202473"&gt;3. RAP Generatorを実行し、ウィザードに沿って設定します。&lt;/H3&gt;&lt;P&gt;対象のカスタムテーブルを右クリック→”Generate ABAP Repository Objects…” で実行&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_3-1760157422206.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325826iC928155A8BCFAE9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_3-1760157422206.png" alt="hironobu_nakayama_3-1760157422206.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;サービスタイプの選択&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_4-1760157441952.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325827iF0BB085AA624F8A4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_4-1760157441952.png" alt="hironobu_nakayama_4-1760157441952.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;生成オブジェクト格納用パッケージの選択&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_5-1760157464387.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325828iCA1BEBBB2C283DDC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_5-1760157464387.png" alt="hironobu_nakayama_5-1760157464387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;生成されるオブジェクトを確認し、必要に応じて名称変更やエイリアス名を設定&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_6-1760157482071.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325829i0F2526AA45703F9D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_6-1760157482071.png" alt="hironobu_nakayama_6-1760157482071.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_7-1760157495656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325830i9C6952F5528E2BD6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_7-1760157495656.png" alt="hironobu_nakayama_7-1760157495656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712688968"&gt;4. 生成されたデータモデル（CDS View）へファイルアップロードのためのアノテーションを追加し、有効化します。&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #CHECK
@EndUserText.label: '##GENERATED ZPT_FILE_UPLOAD'
define root view entity ZR_PT_FILE_UPLOAD
  as select from zpt_file_upload
{
  key customer_id           as CustomerID,
      first_name            as FirstName,
      last_name             as LastName,
      title                 as Title,
      street                as Street,
      postal_code           as PostalCode,
      city                  as City,
      country_code          as CountryCode,
      phone_number          as PhoneNumber,
      email_address         as EmailAddress,
      @Semantics.largeObject : {
            mimeType: 'Mimetype',
            fileName: 'Filename',
            contentDispositionPreference: #INLINE
          }
      attachment            as Attachment,
      filename              as Filename,
      @Semantics.mimeType: true
      mimetype              as Mimetype,
      @Semantics.user.createdBy: true
      local_created_by      as LocalCreatedBy,
      @Semantics.systemDateTime.createdAt: true
      local_created_at      as LocalCreatedAt,
      @Semantics.user.localInstanceLastChangedBy: true
      local_last_changed_by as LocalLastChangedBy,
      @Semantics.systemDateTime.localInstanceLastChangedAt: true
      local_last_changed_at as LocalLastChangedAt,
      @Semantics.systemDateTime.lastChangedAt: true
      last_changed_at       as LastChangedAt

}&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-516175463"&gt;5. サービスバインディングを公開します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_8-1760157523686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325831i4F5DCB4410845F5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_8-1760157523686.png" alt="hironobu_nakayama_8-1760157523686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-319661958"&gt;6. エンティティを選択して、プレビューします。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_9-1760157563744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325832iC927D9BEF8566E34/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_9-1760157563744.png" alt="hironobu_nakayama_9-1760157563744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-123148453"&gt;7. “Create”ボタンからデータの登録およびファイルのアップロードを実行します。&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_10-1760157593131.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325833i2D10826CA744794B/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_10-1760157593131.png" alt="hironobu_nakayama_10-1760157593131.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_11-1760157628831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325834iCBF6028E63ADA10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_11-1760157628831.png" alt="hironobu_nakayama_11-1760157628831.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_12-1760157647311.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325835iC7286B9648C140C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_12-1760157647311.png" alt="hironobu_nakayama_12-1760157647311.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_13-1760157663896.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325836i33B8FE451D47FCBE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="hironobu_nakayama_13-1760157663896.png" alt="hironobu_nakayama_13-1760157663896.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_14-1760157681275.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325837i22D13F546974AC37/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_14-1760157681275.png" alt="hironobu_nakayama_14-1760157681275.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_15-1760157702526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325838iBABEDFAC843FB59D/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_15-1760157702526.png" alt="hironobu_nakayama_15-1760157702526.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_16-1760157721073.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/325839i9A80962EABEC37F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_16-1760157721073.png" alt="hironobu_nakayama_16-1760157721073.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-438209593"&gt;4. まとめ&lt;/H1&gt;&lt;P&gt;上記の実装により、ABAP RESTful Application Programming Model（RAP）を用いたOData V4サービスを利用し、SAP Fiori ElementsのList Reportで各行（アイテム）ごとに“添付ファイル”項目を持たせ、行単位でファイルのアップロード・参照・削除を実現することが可能です。是非ご活用下さい。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-241696088"&gt;参考情報&lt;/H1&gt;&lt;P&gt;SAPUI5 Document: &lt;A href="https://sapui5.hana.ondemand.com/#/topic/b236d32d48b74304887b3dd5163548c1" target="_blank" rel="noopener nofollow noreferrer"&gt;Enabling Stream Support&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/fiori-elements-list-report%E3%81%A7%E3%81%AE%E3%83%95%E3%82%A1%E3%82%A4%E3%83%AB%E3%82%A2%E3%83%83%E3%83%97%E3%83%AD%E3%83%BC%E3%83%89/ba-p/14240934"/>
    <published>2025-10-17T18:00:00.031000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/abap-code-to-transport-many-packages-in-one-transport-request/ba-p/14247391</id>
    <title>ABAP code to transport many packages in one transport request</title>
    <updated>2025-10-18T09:00:00.037000+02:00</updated>
    <author>
      <name>Sandra_Rossi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145194</uri>
    </author>
    <content>&lt;P&gt;I have created this program in a system with ABAP 7.58 to transport the objects from many packages + include objects from additional transport requests.&lt;/P&gt;&lt;P&gt;For one or few packages, it's best to transport manually via official SE80 &amp;gt; Select package &amp;gt; Context menu "Write transport request".&lt;/P&gt;&lt;P&gt;It was developed quick &amp;amp; dirty.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;It's not using any official API, so use it at your own risk.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The only screen:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sandra_Rossi_3-1760711732980.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/329270iA4E55B5CDA598777/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Sandra_Rossi_3-1760711732980.png" alt="Sandra_Rossi_3-1760711732980.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For information, this program relies on the code triggered via SE80 for one package:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Sandra_Rossi_0-1760708594427.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/329240i34B30BA9B326FC2A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Sandra_Rossi_0-1760708594427.png" alt="Sandra_Rossi_0-1760708594427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Happy transport!&lt;/P&gt;&lt;P&gt;Sandra&lt;/P&gt;&lt;P&gt;Here is the code. I have indicated from which subroutines I have copied the code.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT z_transport_many_packages.

DATA gv_devclass TYPE tadir-devclass.
DATA gv_trkorr   TYPE e070-trkorr.

SELECTION-SCREEN BEGIN OF BLOCK source WITH FRAME TITLE text_001.
  SELECT-OPTIONS s_devcla FOR gv_devclass.
  SELECT-OPTIONS s_trkorr FOR gv_trkorr.
SELECTION-SCREEN END OF BLOCK source.

SELECTION-SCREEN BEGIN OF BLOCK target WITH FRAME TITLE text_002.
  PARAMETERS p_trkorr TYPE trkorr.
SELECTION-SCREEN END OF BLOCK target.

INITIALIZATION.
  text_001 = 'Source'(001).
  text_002 = 'Target'(002).
  %_S_DEVCLA_%_APP_%-TEXT = 'Packages to transport'(003).
  %_S_TRKORR_%_APP_%-TEXT = 'TRs to include in transport'(004).
  %_P_TRKORR_%_APP_%-TEXT = 'Target Transport Request'(005).

START-OF-SELECTION.
  IF s_devcla IS NOT INITIAL.
    SELECT devclass
      FROM tdevc
      WHERE devclass IN @s_devcla
      INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(gt_tdevc).
  ENDIF.

  IF s_trkorr IS NOT INITIAL.
    SELECT trkorr
      FROM e070
      WHERE trkorr IN @s_trkorr
      INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(gt_e070).
  ENDIF.

  LOOP AT gt_tdevc REFERENCE INTO DATA(ls_tdevc).

    " Code from subroutine TRANSPORT_DEVCLASS_OBJECTS of program SAPLSEAP
    " (called by subroutine TRANSPORT_OBJECT_PART_2 of program SAPLSEAP,
    "  itself called by subroutine TRANSPORT_OBJECT_PART_1 of program SAPLSEAP)
    DATA(l_tadir_objs) = VALUE scts_tadir( ).
    CALL FUNCTION 'TRINT_SELECT_OBJECTS'
      EXPORTING  iv_devclass              = ls_tdevc-&amp;gt;devclass
                 iv_only_existing_objects = abap_false
                 iv_via_selscreen         = abap_false
      IMPORTING
                 et_objects_tadir         = l_tadir_objs
      EXCEPTIONS cancelled_by_user        = 1
                 invalid_input            = 2
                 OTHERS                   = 3.
    IF sy-subrc &amp;lt;&amp;gt; 0.
      MESSAGE 'Error in TRINT_SELECT_OBJECTS' TYPE 'S' DISPLAY LIKE 'E'.
      STOP.
    ENDIF.
    DATA l_e071_obj TYPE trwbo_s_e071.
    DATA l_ddlname  TYPE ddlname.
    DATA l_objects  TYPE trwbo_t_e071.
    LOOP AT l_tadir_objs ASSIGNING FIELD-SYMBOL(&amp;lt;l_tadir_obj&amp;gt;) WHERE object &amp;lt;&amp;gt; 'STOB'.
      IF &amp;lt;l_tadir_obj&amp;gt;-object = 'VIEW'.
        CLEAR l_ddlname.
        PERFORM get_ddl_source USING    &amp;lt;l_tadir_obj&amp;gt;-obj_name
                               CHANGING l_ddlname.
        IF l_ddlname IS NOT INITIAL.
          CONTINUE.
        ENDIF.
      ENDIF.

      l_e071_obj-pgmid    = &amp;lt;l_tadir_obj&amp;gt;-pgmid.
      l_e071_obj-object   = &amp;lt;l_tadir_obj&amp;gt;-object.
      l_e071_obj-obj_name = &amp;lt;l_tadir_obj&amp;gt;-obj_name.
      APPEND l_e071_obj TO l_objects.
    ENDLOOP.
  ENDLOOP.

  " Code from TRANSPORT_OBJECT_PART_1
  IF l_objects IS NOT INITIAL.
    DATA l_suppress_dialog TYPE trparflag VALUE space.
    DATA l_es_request      TYPE trwbo_request_header.

    IF p_trkorr IS NOT INITIAL.
      l_suppress_dialog = 'X'.
    ENDIF.
    CALL FUNCTION 'TR_REQUEST_CHOICE'
      EXPORTING
                 iv_suppress_dialog   = l_suppress_dialog
                 it_e071              = l_objects
                 iv_request           = p_trkorr
      IMPORTING
                 es_request           = l_es_request
      EXCEPTIONS
                 invalid_request      = 1
                 invalid_request_type = 2
                 user_not_owner       = 3
                 no_objects_appended  = 4
                 enqueue_error        = 5
                 cancelled_by_user    = 6
                 recursive_call       = 7
                 OTHERS               = 8.
    IF sy-subrc = 0.
      p_trkorr = l_es_request-trkorr.
      IF l_suppress_dialog IS NOT INITIAL.
        MESSAGE s033(to) WITH l_es_request-trkorr.
      ENDIF.
    ELSE.
      IF p_trkorr IS NOT INITIAL.
        " do it again with dialog enabled:
        CALL FUNCTION 'TR_REQUEST_CHOICE'
          EXPORTING
                     it_e071              = l_objects
                     iv_request           = p_trkorr
          IMPORTING
                     es_request           = l_es_request
          EXCEPTIONS
                     invalid_request      = 1
                     invalid_request_type = 2
                     user_not_owner       = 3
                     no_objects_appended  = 4
                     enqueue_error        = 5
                     cancelled_by_user    = 6
                     recursive_call       = 7
                     OTHERS               = 8.
      ENDIF.
      IF sy-subrc = 0.
        p_trkorr = l_es_request-trkorr.
        MESSAGE s033(to) WITH l_es_request-trkorr.
      ELSE.
        MESSAGE ID sy-msgid TYPE 'S' NUMBER sy-msgno
                WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
        STOP.
      ENDIF.
    ENDIF.
  ELSE.
    MESSAGE s604(eu).
  ENDIF.

  " Subroutine COPY_OBJECT_LIST of program SAPLSTRH
  LOOP AT gt_e070 REFERENCE INTO DATA(ls_e070).
    CALL FUNCTION 'TR_COPY_COMM'
      EXPORTING  wi_dialog                = 'X'
                 wi_trkorr_from           = ls_e070-&amp;gt;trkorr
                 wi_trkorr_to             = p_trkorr
                 wi_without_documentation = abap_false
      EXCEPTIONS OTHERS                   = 1.
    IF sy-subrc &amp;lt;&amp;gt; 0.
      MESSAGE 'Error in TR_COPY_COMM' TYPE 'S' DISPLAY LIKE 'E'.
      STOP.
    ENDIF.
  ENDLOOP.

  COMMIT WORK.

FORM get_ddl_source USING    p_viewname TYPE csequence
                    CHANGING p_ddlname  TYPE ddlname.

  DATA handler TYPE REF TO if_dd_ddl_handler.

  TRY.
      handler = cl_dd_ddl_handler_factory=&amp;gt;create( ).
      p_ddlname = handler-&amp;gt;get_ddl_name_4_dd_artefact( CONV ddobjname( p_viewname ) ).
    CATCH cx_dd_ddl_exception ##NO_HANDLER.
  ENDTRY.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/abap-code-to-transport-many-packages-in-one-transport-request/ba-p/14247391"/>
    <published>2025-10-18T09:00:00.037000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88-sap%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E6%B6%88%E8%B2%BB%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC/ba-p/14241240</id>
    <title>RAPイベント：SAP標準イベントの消費とカスタムRAPイベントのトリガー</title>
    <updated>2025-10-18T18:00:00.033000+02:00</updated>
    <author>
      <name>hironobu_nakayama</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/781777</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1633627651"&gt;1. はじめに&lt;/H1&gt;&lt;P&gt;イベント駆動アーキテクチャ（&lt;SPAN&gt;EDA&lt;/SPAN&gt;）は、ビジネスにおける重要な“イベント”を検出し、リアルタイムで対応する統合モデルです。現代の企業がリアルタイム運用と柔軟で応答性の高いシステムを求める中で、&lt;SPAN&gt;EDA&lt;/SPAN&gt;は不可欠な技術となっています。&lt;BR /&gt;SAP S/4HANAにおけるイベント駆動アーキテクチャの実装において、標準&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントが多数提供されていますが、標準イベントのペイロードでは、業務要件に対応できず、カスタマイズが必要となる場合があります。特に、イベントデータによるフィルタリングや標準イベントのペイロード補完を目的として、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントを&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;により拡張するユースケースがございます。&lt;BR /&gt;Derived Eventは、&lt;SPAN&gt;S/4HANA Cloud, private edition &amp;amp; S/4HANA 2023 / S/4HANA Cloud, public edition 2308&lt;/SPAN&gt;リリースで導入された機能で、既存の&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントをベースに、カスタムペイロードを持つ新しいイベントを定義できる機能です。これにより、標準イベントの実装を再利用しながら、業務に必要な追加フィールドやフィルタリング条件を適用したイベントを作成することが可能になります。&lt;BR /&gt;SAP Community Blog: &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/derived-events-how-to-trigger-custom-event-from-an-sap-standard-event/ba-p/13955193" target="_blank"&gt;Derived Events- How to Trigger Custom Event from an SAP Standard Event&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;一方、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;は、拡張対象の&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準オブジェクトが以下の条件を満たしている必要があります。&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;参照元イベントを含むビジネスオブジェクトが拡張可能&lt;SPAN&gt;(extensible)&lt;/SPAN&gt;であること&lt;/LI&gt;&lt;LI&gt;参照されるイベントが&lt;SPAN&gt;C0&lt;/SPAN&gt;および&lt;SPAN&gt;C1&lt;/SPAN&gt;リリースされた&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;インターフェースで公開されている必要があること&lt;/LI&gt;&lt;LI&gt;Derived Eventのペイロードのデータソースとして使用される&lt;SPAN&gt;CDS&lt;/SPAN&gt;ビューエンティティが&lt;SPAN&gt;C1&lt;/SPAN&gt;リリースされている必要があること&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;そのため、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;では、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張に対応していないオブジェクトも存在します。この場合、本来であれば&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;で解決できるはずの要件が実現できないケースが発生します。&lt;BR /&gt;そこで本ブログでは、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張が不可能な&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントに対して、カスタム&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;によるペイロードの拡張を実現するワークアラウンドアプローチについて紹介します。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1437114146"&gt;2. ワークアラウンドソリューション&lt;/H1&gt;&lt;P&gt;Derived Eventが使用できない場合、&lt;SPAN&gt;Local Event Consumption&lt;/SPAN&gt;とカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを組み合わせたワークアラウンドアプローチが有効な手段となります。このアプローチは、&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントをローカル（カスタム&lt;SPAN&gt;ABAP&lt;/SPAN&gt;クラス）で消費し、それをトリガーとしてカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを発生させる手法です。カスタムイベントのペイロードを業務要件に合わせたペイロードとすることで、イベントフィルタの利用等が可能となります。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760225484634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326000i65E19ECBA8BC68CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760225484634.png" alt="hironobu_nakayama_1-1760225484634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1240600641"&gt;3. 実装サンプル&lt;/H1&gt;&lt;P&gt;本ブログでは、拡張不可な&lt;SPAN&gt;r_purchaseordertp&lt;/SPAN&gt;を対象オブジェクトとし、購買発注伝票のデータ変更に対するイベントペイロードの拡張を実現します。&lt;SPAN&gt;SAP&lt;/SPAN&gt;標準イベントでは、購買発注伝票番号のみのペイロードあるのに対し、カスタムイベントでは、購買発注伝票番号と購買発注伝票タイプをペイロードとします。Event Bindingおよび&lt;SPAN&gt;Event Mesh&lt;/SPAN&gt;とのチャンネル設定等は、&lt;SPAN&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-rap-business-events-in-sap-s-4hana-on-premise-2022/ba-p/13553312&lt;/A&gt; &lt;/SPAN&gt;をご確認ください。本ブログの実装サンプルでの&lt;SPAN&gt;RAP BO&lt;/SPAN&gt;では、イベント以外の&lt;SPAN&gt;CRUD&lt;/SPAN&gt;や保存等の処理は、実装していない点にご注意ください。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1302252574"&gt;(1) Local Consumer (ローカルイベントハンドリングのためのカスタムABAPクラス)&lt;/H3&gt;&lt;H5 id="toc-hId-1363904507"&gt;グローバルクラス: zcl_event_consump&lt;/H5&gt;&lt;P&gt;グローバルクラスでは、&lt;SPAN&gt;FOR EVENTS OF r_purchaseordertp&lt;/SPAN&gt;の定義により、消費する標準イベントを設定します。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_event_consump DEFINITION
  PUBLIC
  ABSTRACT
  FINAL
  FOR EVENTS OF r_purchaseordertp.

  PUBLIC SECTION.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_event_consump IMPLEMENTATION.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId-1167391002"&gt;ローカルクラス: zcl_event_consump&lt;/H5&gt;&lt;P&gt;ローカルクラスでは、消費した標準イベントのペイロードのデータをもとに追加のデータ取得を行い、カスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントをトリガーします。イベントのトリガーは、&lt;SPAN&gt;RAP&lt;/SPAN&gt;フレームワークにおいて、&lt;SPAN&gt;Save Sequence&lt;/SPAN&gt;でのみ可能なため、&lt;SPAN&gt;cl_abap_tx=&amp;gt;save(&amp;nbsp; ). &lt;/SPAN&gt;により、明示的に&lt;SPAN&gt;Save Sequence&lt;/SPAN&gt;に変更する必要がある点に注意が必要です。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*"* use this source file for the definition and implementation of
*"* local helper classes, interface definitions and type
*"* declarations
CLASS lcl_event_consump DEFINITION INHERITING FROM cl_abap_behavior_event_handler.
  PRIVATE SECTION.
    METHODS:
      consume_changed FOR ENTITY EVENT changed_instances FOR purchaseorder~changed.
ENDCLASS.

CLASS lcl_event_consump IMPLEMENTATION.

  METHOD consume_changed.
    cl_abap_tx=&amp;gt;save(  ).

    DATA lv_potype TYPE mm_purchaseordertype.

    CHECK changed_instances IS NOT INITIAL.

    LOOP AT changed_instances INTO DATA(changed_instance).

      SELECT SINGLE purchaseordertype
      FROM c_purchaseordertp
      INTO _potype
      WHERE purchaseorder = @changed_instance-purchaseorder.

      DATA(et_events) = VALUE zbp_i_purchseorder_test=&amp;gt;tt_events(
        (
        purchaseorder = changed_instance-purchaseorder
        purchaseordertype = lv_potype
        )
      ).

      zbp_i_purchseorder_event=&amp;gt;raise_po_changed_event( it_events = et_events ).

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-712712059"&gt;(2) Custom RAP BO (Custom Event)&lt;/H3&gt;&lt;H5 id="toc-hId-774363992"&gt;CDS View: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;CDS Viewでは、購買発注伝票番号のみ定義しています。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Consume purchase order event'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
  serviceQuality: #X,
  sizeCategory: #S,
  dataClass: #MIXED
}
define root view entity ZI_purchseorder_event as select from I_PurchaseOrder
{
  key PurchaseOrder
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId-577850487"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId-381336982"&gt;Behavior Definition: &lt;SPAN&gt;ZI_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;イベントトリガのためのカスタム&lt;SPAN&gt;RAP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;BO&lt;/SPAN&gt;では、&lt;SPAN&gt;create / update / delete &lt;/SPAN&gt;機能を定義していません。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed with unmanaged save implementation in class zbp_i_purchseorder_event unique;
strict ( 2 );

define behavior for ZI_purchseorder_event //alias &amp;lt;alias_name&amp;gt;
//persistent table ekko
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  //  create;
  //  update;
  //  delete;
  event purchaseorder_changed parameter ZAB_PO_changed_event;

  field ( readonly ) PurchaseOrder;
}&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--735379344"&gt;Behavior Implementation (Global class) : &lt;SPAN&gt;zbp_i_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;グローバルクラスでは、イベントトリガー用のメソッドを定義します。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zbp_i_purchseorder_event DEFINITION PUBLIC ABSTRACT FINAL FOR BEHAVIOR OF zi_purchseorder_event.

  TYPES tt_events TYPE TABLE FOR EVENT zi_purchseorder_event~purchaseorder_changed.

  PUBLIC SECTION.
        CLASS-METHODS raise_po_changed_event
            IMPORTING it_events TYPE tt_events.

ENDCLASS.

CLASS zbp_i_purchseorder_event IMPLEMENTATION.
METHOD raise_po_changed_event.
  lcl_event_handler=&amp;gt;on_po_changed_event( it_events ).
endmethod.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--931892849"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1128406354"&gt;Behavior Implementation (Local class) : &lt;SPAN&gt;lhc_zi_purchseorder_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;ローカルクラスでは、保存処理等は実装せず、イベントトリガー用のメソッドのみ実装しています。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zi_purchseorder_event RESULT result.

ENDCLASS.

CLASS lhc_zi_purchseorder_event IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

ENDCLASS.

CLASS lsc_zi_purchseorder_event DEFINITION INHERITING FROM cl_abap_behavior_saver.
  PROTECTED SECTION.

    METHODS save_modified REDEFINITION.

    METHODS cleanup_finalize REDEFINITION.

ENDCLASS.

CLASS lsc_zi_purchseorder_event IMPLEMENTATION.

  METHOD save_modified.
  ENDMETHOD.

  METHOD cleanup_finalize.
  ENDMETHOD.

ENDCLASS.

CLASS lcl_event_handler DEFINITION FRIENDS zbp_i_purchseorder_event.
  PUBLIC SECTION.
    CLASS-METHODS on_po_changed_event IMPORTING it_events TYPE zbp_i_purchseorder_event=&amp;gt;tt_events.
ENDCLASS.

CLASS lcl_event_handler IMPLEMENTATION.
   METHOD on_po_changed_event.

    RAISE ENTITY EVENT ZI_purchseorder_event~purchaseorder_changed FROM it_events.

   ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H5 id="toc-hId--1324919859"&gt;&amp;nbsp;&lt;/H5&gt;&lt;H5 id="toc-hId--1521433364"&gt;Abstract Entity: &lt;SPAN&gt;ZAB_PO_changed_event&lt;/SPAN&gt;&lt;/H5&gt;&lt;P&gt;Abstract entityにより、購買発注伝票タイプを追加しています。これにより、カスタムRAPイベントのペイロードは、購買発注伝票番号と購買発注伝票タイプとなります。&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abastract entity for po changed event'
define abstract entity ZAB_PO_changed_event
  //  with parameters parameter_name : parameter_type
{
  PurchaseOrderType : mm_purchaseordertype;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--544334841"&gt;4. 実装結果&lt;/H1&gt;&lt;P&gt;Manage Purchase Orders (F0842A) アプリから既存の購買発注伝票を変更して、保存します。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_0-1760229645619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326001iA137C622300D0D19/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_0-1760229645619.png" alt="hironobu_nakayama_0-1760229645619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Event Meshで&lt;SPAN&gt;S/4HANA&lt;/SPAN&gt;からトリガされたカスタムイベントを受け取ることができます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hironobu_nakayama_1-1760229707438.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/326002i776A835D573B8867/image-size/large?v=v2&amp;amp;px=999" role="button" title="hironobu_nakayama_1-1760229707438.png" alt="hironobu_nakayama_1-1760229707438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--740848346"&gt;5. まとめ&lt;/H1&gt;&lt;P&gt;イベント駆動アーキテクチャの実現において、&lt;SPAN&gt;Derived Event&lt;/SPAN&gt;による拡張が不可能な場合、&lt;SPAN&gt;Local Event Consumption&lt;/SPAN&gt;とカスタム&lt;SPAN&gt;RAP&lt;/SPAN&gt;イベントを組み合わせたワークアラウンドアプローチが有効な手段となります。&lt;BR /&gt;こちらのアプローチにより、業務要件に応じたカスタムペイロードとフィルタリング機能を実現することで、必要なデータをイベントコンシューマに提供し、システム間連携の最適化を図ることが可能です。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--937361851"&gt;参考情報&lt;/H1&gt;&lt;P&gt;SAP Learning：&lt;SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/explaining-event-driven-architecture_d02a51bb-1ce4-4c2d-a25d-8b9c9198ffd2" target="_blank" rel="noopener noreferrer"&gt;Explaining Event-Driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Help: &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/integration-architecture-guide/event-driven-architecture?amp;state=PRODUCTION&amp;amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Event-driven Architecture&lt;/A&gt;&lt;/SPAN&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-2-creating-custom-business/ba-p/13914171" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [2]: Creating custom business events&lt;/A&gt;&lt;BR /&gt;SAP Community Blog: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap-business-events-with-advanced-event-mesh-5-consuming-a-local-business/ba-p/13915138" target="_blank"&gt;RAP Business Events with Advanced Event Mesh [5]: Consuming a local business event&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88-sap%E6%A8%99%E6%BA%96%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E6%B6%88%E8%B2%BB%E3%81%A8%E3%82%AB%E3%82%B9%E3%82%BF%E3%83%A0rap%E3%82%A4%E3%83%99%E3%83%B3%E3%83%88%E3%81%AE%E3%83%88%E3%83%AA%E3%82%AC%E3%83%BC/ba-p/14241240"/>
    <published>2025-10-18T18:00:00.033000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/download-smart-form-as-pdf-using-rap-action-in-on-premises/ba-p/14244826</id>
    <title>Download Smart form as PDF using RAP action in On-premises</title>
    <updated>2025-10-22T07:43:37.130000+02:00</updated>
    <author>
      <name>chandana9269</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1470141</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog I need to demonstrate the process of enabling a smart form PDF download within a RAP application using a custom action button in an on-premises setup.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;This is a common requirement for generating and downloading documents like invoices, Purchase orders etc., from a Fiori elements app.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;In classic ABAP, generating and downloading files was often done using methods like GUI_DOWNLOAD, but this approach is not compatible with RAP.&amp;nbsp;&lt;BR /&gt;In RAP, the recommended way to implement download functionality is by using streams, combined with additional logic to handle the pdf generation and delivery to the front-end.&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;Step 1 :&amp;nbsp; Create Database Tables &amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;First we will be creating a database table to store the sales header(ZCH_DT_SALES_HED) and sales item (ZCH_DT_SALES_IT)data.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'sales header table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zch_dt_sales_hed 
{
  key sid         : abap.char(10) not null;
  created_on      : abap.dats;
  document_type   : abap.char(4);
  customer        : abap.char(10);
  attachment      : abap.rawstring(0);
  mimetype        : abap.char(128);
  filename        : abap.char(128);
  last_changed_at : abp_lastchange_tstmpl;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Item table&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'sales item table'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zch_dt_sales_it 
{
  key sid       : abap.char(10) not null;
  key sdoc_item : abap.numc(6) not null;
  material_no   : abap.char(40);
  @Semantics.quantity.unitOfMeasure : 'zch_dt_sales_it.unit'
  quantity      : abap.quan(15,3);
  unit          : abap.unit(3);
  @Semantics.amount.currencyCode : 'zch_dt_sales_it.currency'
  net_value     : abap.curr(15,2);
  currency      : abap.cuky;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step &lt;/SPAN&gt;&lt;SPAN class=""&gt;2 :&lt;/SPAN&gt;&lt;SPAN class=""&gt; Define Interface view on top of Sales Header and item tables&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'base view for sales header'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define root view entity zch_i_saleshed
  as select from zch_dt_sales_hed
  composition [0..*] of zch_i_salesit as _sitem
{
  key sid             as Sid,
      created_on      as CreatedOn,
      document_type   as DocumentType,
      customer        as Customer,
      @Semantics.largeObject : { fileName: 'filename' , mimeType: 'Mimetype' , 
      contentDispositionPreference: #ATTACHMENT}
      attachment      as Attachment,
      @Semantics.mimeType: true
      mimetype        as Mimetype,
      filename        as Filename,
      last_changed_at as LastChangedAt,
      _sitem
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'base view for sales item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity zch_i_salesit as select from zch_dt_sales_it
association to parent zch_i_saleshed as _sheader on $projection.Sid = _sheader.Sid
{
    key sid as Sid,
    key sdoc_item as SdocItem,
    material_no as MaterialNo,
    @Semantics.quantity.unitOfMeasure : 'Unit'
    quantity as Quantity,
    unit as Unit,
    @Semantics.amount.currencyCode : 'Currency'
    net_value as NetValue,
    currency as Currency,
    _sheader
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step &lt;/SPAN&gt;&lt;SPAN class=""&gt;3 :&lt;/SPAN&gt;&lt;SPAN class=""&gt; Define Consumption view on top of &lt;/SPAN&gt;&lt;SPAN class=""&gt;header and item &lt;/SPAN&gt;&lt;SPAN class=""&gt;interface views&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'projection view for sales header'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define root view entity zch_c_saleshed
  provider contract transactional_query
  as projection on zch_i_saleshed
{
  key Sid,
      CreatedOn,
      DocumentType,
      Customer,
      @Semantics.largeObject : { fileName: 'filename' , mimeType: 'Mimetype' , 
      contentDispositionPreference: #ATTACHMENT}
      Attachment,
      @Semantics.mimeType: true
      Mimetype,
      Filename,
      LastChangedAt,
      /* Associations */
      _sitem : redirected to composition child zch_c_salesit
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'projection view for sales item'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define view entity zch_c_salesit 
as  projection on  zch_i_salesit
{
    key Sid,
    key SdocItem,
    MaterialNo,
    @Semantics.quantity.unitOfMeasure : 'unit'
    Quantity,
    Unit,
    @Semantics.amount.currencyCode: 'Currency'
    NetValue,
    Currency,
    /* Associations */
    _sheader : redirected to parent zch_c_saleshed
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step &lt;/SPAN&gt;&lt;SPAN class=""&gt;4 :&lt;/SPAN&gt;&lt;SPAN class=""&gt; Define &lt;/SPAN&gt;&lt;SPAN class=""&gt;Metadata Extension for Header and item data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer:#CORE
annotate entity zch_c_saleshed
    with 
{
     .facet: [
    {
      id:       'SalesDocHeader',
      purpose:  #STANDARD,
      position: 10,
      label:    'Header',
      type:     #IDENTIFICATION_REFERENCE
    },
    {
      id:            'SalesDocItem',
      purpose:       #STANDARD,
      type:          #LINEITEM_REFERENCE,
      label:         'Items',
      position:      20,
      targetElement: '_sitem'
    }
  ]
     : { lineItem: [{position: 10 , label: 'Salesorder Id' }],
    identification: [{ position: 10 ,label :'Salesorder Id' },
    { type: #FOR_ACTION, position:10 ,dataAction: 'download', label: 'Download Invoice' }] } 
    Sid;
     : { lineItem: [{position: 20 , label: 'Created on' }], 
    identification: [{ position: 20 ,label :'Created on' }] } 
    CreatedOn;
     : { lineItem: [{position: 30 , label: 'Document type' }], 
    identification: [{ position: 30 ,label :'Document type' }] } 
    DocumentType;
     : { lineItem: [{position: 40 , label: 'Customer id' }], 
    identification: [{ position: 40 ,label :'Customer id' }] } 
    Customer;
    .identification: [
    { position: 60, label: 'Attachment'   }
    ]
    Attachment;
}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity zch_c_salesit
    with 
{
    .facet: [
    {
      id:       'SalesDocItem',
      purpose:  #STANDARD,
      position: 10,
      label:    'Header',
      type:     #IDENTIFICATION_REFERENCE
    }]
@UI : { lineItem: [{position: 10 , label: 'Salesorder Id' }], 
     identification: [{ position: 10 , label :'Salesorder Id' }] } 
    Sid;
     : { lineItem: [{position: 20 , label: 'Sales Document Item' }], 
identification: [{ position: 20 ,label :'Sales Document Item' }] } 
    SdocItem;
     : { lineItem: [{position: 30 , label: 'Material no' }], 
identification: [{ position: 30 ,label :'Material no' }] } 
    MaterialNo;
     : { lineItem: [{position: 40 , label: 'Quantity' }], 
identification: [{ position: 40 ,label :'Quantity' }] } 
    Quantity;
     : { lineItem: [{position: 50 , label: 'Unit' }], 
identification: [{ position: 50 ,label :'Unit' }] } 
    Unit;
     : { lineItem: [{position: 60 , label: 'Net value' }], 
identification: [{ position: 60 ,label :'Net value' }] } 
    NetValue;
     : { lineItem: [{position: 70 , label: 'Currency' }], 
identification: [{ position: 70 ,label :'Currency' }] } 
    Currency;    
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step 5: Define &lt;/SPAN&gt;&lt;SPAN class=""&gt;Behavior Definitions&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;W&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt; nee&lt;/SPAN&gt;&lt;SPAN class=""&gt;d to define the behavior &lt;/SPAN&gt;&lt;SPAN class=""&gt;definition &lt;/SPAN&gt;&lt;SPAN class=""&gt;for &lt;/SPAN&gt;&lt;SPAN class=""&gt;sales order &lt;/SPAN&gt;&lt;SPAN class=""&gt;header&lt;/SPAN&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;SPAN class=""&gt;item&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;SPAN class=""&gt;This includes setting up &lt;/SPAN&gt;&lt;SPAN class=""&gt;the managed implementation, defining standard CRUD &lt;/SPAN&gt;&lt;SPAN class=""&gt;operations, defining early numbering for header and item&lt;/SPAN&gt; &lt;SPAN class=""&gt;key&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt; &lt;SPAN class=""&gt;and defining the Download action&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;*Here Download action button returns the abstract entity instead of sales order &lt;/SPAN&gt;&lt;SPAN class=""&gt;itself. This&lt;/SPAN&gt;&lt;SPAN class=""&gt; abstract entity is used only &lt;/SPAN&gt;&lt;SPAN class=""&gt;for transferring the file back to the UI.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class zbp_ch_i_saleshed unique;
strict ( 2 );

define behavior for zch_i_saleshed //alias salesheader
persistent table zch_dt_sales_hed
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
early numbering
{
  create;
  update;
  delete;
  action download result [1]  zch_download_file;
  side effects { action download affects $self ;}
  association _sitem { create; }
  field ( readonly ) Sid,Attachment, Mimetype, Filename;

  mapping for zch_dt_sales_hed
  {
    Sid = sid;
    CreatedOn = created_on;
    DocumentType = document_type;
    Customer = customer;
    Filename = filename;
    Mimetype = mimetype;
    Attachment = attachment;
    LastChangedAt = last_changed_at;
  }
}

define behavior for zch_i_salesit //alias salesitem
persistent table zch_dt_sales_it
lock dependent by _sheader
authorization dependent by _sheader
//etag master &amp;lt;field_name&amp;gt;
early numbering
{
  update;
  delete;
  field ( readonly ) sid,SdocItem ;
  association _sheader;

  mapping for zch_dt_sales_it
  {
    Sid = sid;
    SdocItem = sdoc_item;
    MaterialNo = material_no;
    Quantity = quantity;
    Unit = unit;
    NetValue = net_value;
    Currency = currency;
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Abstract Entity :&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'abstract entity for file download'
define root abstract entity Zch_Download_File
{
  @Semantics.largeObject : { fileName: 'filename' , mimeType: 'Mimetype' , 
  contentDispositionPreference: #ATTACHMENT }
  attachment      : abap.rawstring(0);
  @Semantics.mimeType: true
  mimetype        : abap.char(128);
  filename        : abap.char(128);
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define behavior definition on top of projection view&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection;
strict ( 2 );

define behavior for zch_c_saleshed //alias &amp;lt;alias_name&amp;gt;
{
  use create;
  use update;
  use delete;

  use action download ;
  use association _sitem { create; }
}

define behavior for zch_c_salesit //alias &amp;lt;alias_name&amp;gt;
{
  use update;
  use delete;

  use association _sheader;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Step 6: &lt;/SPAN&gt;&lt;SPAN class=""&gt;I&lt;/SPAN&gt;&lt;SPAN class=""&gt;mplement the &lt;/SPAN&gt;&lt;SPAN class=""&gt;Be&lt;/SPAN&gt;&lt;SPAN class=""&gt;havior handler class &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In this step we will be implementing the behavior handler for our sales order &lt;/SPAN&gt;&lt;SPAN class=""&gt;RAP BO.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;This class takes care of early numbering as well as the download action which generates and s&lt;/SPAN&gt;&lt;SPAN class=""&gt;treams the invoice pdf back to UI.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc_zch_i_saleshed DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR zch_i_saleshed RESULT result.
    METHODS download FOR MODIFY
      IMPORTING keys FOR ACTION zch_i_saleshed~download RESULT result.
    METHODS earlynumbering_cba_sitem FOR NUMBERING
      IMPORTING entities FOR CREATE zch_i_saleshed\_sitem.
    METHODS earlynumbering_create FOR NUMBERING
      IMPORTING entities FOR CREATE zch_i_saleshed.

ENDCLASS.

CLASS lhc_zch_i_saleshed IMPLEMENTATION.

  METHOD get_instance_authorizations.
  ENDMETHOD.

  METHOD earlynumbering_create.
    select max( sid ) from zch_dt_sales_hed
    into (lv_max_id).
    data(lv_num) = CONV numc08( lv_max_id ).
    if lv_num is initial.
        lv_max_id = 'SO00000001'.
    else.
        lv_num += 1.
        lv_max_id = |SO{ lv_num }|.
    ENDIF.

data(ls_entity) = entities[ 1 ].
APPEND VALUE #( %cid = ls_entity-%cid
                sid = lv_max_id ) to mapped-zch_i_saleshed.
  ENDMETHOD.

  METHOD earlynumbering_cba_Sitem.
              data lv_number(6) type n.

  select max( sdoc_item ) from zch_dt_sales_it
  into (lv_max_id).
  if sy-subrc = 0.
    lv_number = lv_max_id + 1.
  else.
    lv_number = 1.
  ENDIF.
  loop at entities into data(ls_entities).
    loop at ls_entities-%target ASSIGNING FIELD-SYMBOL(&amp;lt;fs_target&amp;gt;).
   APPEND CORRESPONDING #( &amp;lt;fS_target&amp;gt; ) to mapped-zch_i_salesit ASSIGNING FIELD-SYMBOL(&amp;lt;ls_item&amp;gt;).
   &amp;lt;ls_item&amp;gt;-SdocItem = lv_number.
   ENDLOOP.
  ENDLOOP.
  ENDMETHOD.

  METHOD download.
   data: lt_salesi type ZCH_T_SALESI.

  loop at keys into data(ls_keys).
   READ ENTITIES OF zch_i_saleshed IN LOCAL MODE
      ENTITY zch_i_saleshed
        ALL FIELDS WITH CORRESPONDING #( keys )
      RESULT DATA(lt_sales_header).

   data(ls_salesh) = CORRESPONDING zch_i_saleshed( lt_sales_header[ 1 ] ).

   READ ENTITIES OF zch_i_saleshed IN LOCAL MODE
      ENTITY zch_i_saleshed by \_sitem
       ALL FIELDS WITH CORRESPONDING #( keys )
      RESULT DATA(lt_sales_item).

   LOOP AT lt_sales_item INTO DATA(ls_item).
      APPEND CORRESPONDING zch_i_salesit( ls_item ) TO lt_salesi.
    ENDLOOP.

   DATA(lv_pdf_xstring) = NEW ZCL_CH_HELPER_CLS( )-&amp;gt;generate_form(
                                                   is_sales_header = ls_salesh
                                                   it_sales_items  = lt_salesi ).

APPEND VALUE #(
      %tky              = ls_keys-%tky
      %param-attachment = lv_pdf_xstring
      %param-mimetype   = 'application/pdf'
      %param-filename   = |Invoice_{ ls_salesh-sid }.pdf|
    ) TO result.

  ENDLOOP.
  
  MODIFY ENTITY IN LOCAL MODE zch_i_saleshed
   UPDATE FIELDS  (  Attachment Mimetype Filename )
   WITH value #( (  %key = ls_keys-%key
                    Attachment = lv_pdf_xstring
                    Filename = |Invoice_{ ls_salesh-sid }.pdf|
                    Mimetype = 'application/pdf' ) )
                    REPORTED reported
                    FAILED failed.
 ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The following helper&lt;/SPAN&gt; &lt;SPAN class=""&gt;class&lt;/SPAN&gt; &lt;SPAN class=""&gt;generates the&lt;/SPAN&gt; &lt;SPAN class=""&gt;Smart form &lt;/SPAN&gt;&lt;SPAN class=""&gt;output &lt;/SPAN&gt;&lt;SPAN class=""&gt;as&lt;/SPAN&gt;&lt;SPAN class=""&gt; an&lt;/SPAN&gt; &lt;SPAN class=""&gt;X&lt;/SPAN&gt;&lt;SPAN class=""&gt;STRING .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_ch_helper_cls DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES: ty_sales_items_tt TYPE STANDARD TABLE OF zch_i_salesit.

    METHODS generate_form
      IMPORTING
        is_sales_header TYPE zch_i_saleshed
        it_sales_items  TYPE ty_sales_items_tt
      RETURNING
        VALUE(rv_pdf)   TYPE xstring.
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.


CLASS zcl_ch_helper_cls IMPLEMENTATION.
  METHOD generate_form.

    data : lv_fm_name type RS38L_FNAM,
       lv_ctr_par type ssfctrlop,
       lv_output_options type SSFCOMPOP,
       lv_job_output type SSFCRESCL,
       Gt_pdf_lines type table of tline,
       lv_size type i,
       lv_pdf_xstring type xstring.


CALL FUNCTION 'SSF_FUNCTION_MODULE_NAME'
  EXPORTING
    formname                 = 'ZCH_INVOICE'
*   VARIANT                  = ' '
*   DIRECT_CALL              = ' '
 IMPORTING
   FM_NAME                  =  lv_fm_name
 EXCEPTIONS
   NO_FORM                  = 1
   NO_FUNCTION_MODULE       = 2
   OTHERS                   = 3
          .

lv_ctr_par-no_dialog = 'X'.
lv_ctr_par-preview = 'X'.
lv_ctr_par-getotf = 'X'.
lv_output_options-TDDEST = 'LP01'.

CALL FUNCTION lv_fm_name
  EXPORTING
   CONTROL_PARAMETERS         = lv_ctr_par
   OUTPUT_OPTIONS             = lv_output_options
   USER_SETTINGS              = ''
    im_sales                   = is_sales_header-Sid
 IMPORTING
   JOB_OUTPUT_INFO            = lv_job_output
 EXCEPTIONS
   FORMATTING_ERROR           = 1
   INTERNAL_ERROR             = 2
   SEND_ERROR                 = 3
   USER_CANCELED              = 4
   OTHERS                     = 5
          .

CALL FUNCTION 'CONVERT_OTF'
 EXPORTING
   FORMAT                      = 'PDF'
 IMPORTING
    bin_filesize          = lv_size
    bin_file              = lv_pdf_xstring
  TABLES
    otf                         = lv_job_output-otfdata
    lines                       = Gt_pdf_lines
 EXCEPTIONS
   ERR_MAX_LINEWIDTH           = 1
   ERR_FORMAT                  = 2

   ERR_CONV_NOT_POSSIBLE       = 3
   ERR_BAD_OTF                 = 4
   OTHERS                      = 5.
          
 rv_pdf = lv_pdf_xstring.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define Service definition&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition for sales header' 

define service Zch_srv_saleshed { 

expose zch_c_saleshed; 

expose zch_c_salesit; 

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Define Service &lt;/SPAN&gt;&lt;SPAN class=""&gt;binding&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt; and&lt;/SPAN&gt;&lt;SPAN class=""&gt; preview the application&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_0-1760687945765.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328880i6F009A4D9C91932C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_0-1760687945765.png" alt="chandana9269_0-1760687945765.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create Sales Header data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_1-1760688020461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328881i46F0EDB66AD5B776/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_1-1760688020461.png" alt="chandana9269_1-1760688020461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Cr&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;ate item data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_2-1760688059366.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328883i3F157670405C85CD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_2-1760688059366.png" alt="chandana9269_2-1760688059366.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Click on the Download invoice button and refresh&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_3-1760688089159.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328884i930843A5CF426181/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_3-1760688089159.png" alt="chandana9269_3-1760688089159.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Now Click on Open &lt;/SPAN&gt;&lt;SPAN class=""&gt;file ,the&lt;/SPAN&gt;&lt;SPAN class=""&gt; form will be downloaded&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_4-1760688126961.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328885iF31635F0E2B884F4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_4-1760688126961.png" alt="chandana9269_4-1760688126961.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chandana9269_5-1760688144980.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/328886iED3E9E4EA4389C97/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="chandana9269_5-1760688144980.png" alt="chandana9269_5-1760688144980.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion :&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;This approach enables seamless Smart Form PDF generation and download within RAP, combining classic ABAP capabilities with modern Fiori user experience in an on-premise setup.&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/download-smart-form-as-pdf-using-rap-action-in-on-premises/ba-p/14244826"/>
    <published>2025-10-22T07:43:37.130000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/writable-entity-in-cds/ba-p/14249189</id>
    <title>Writable Entity in CDS</title>
    <updated>2025-10-22T07:56:59.929000+02:00</updated>
    <author>
      <name>kalmesh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1490139</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction to writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;CDS provides a powerful way to define and consume data models.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Traditionally, CDS views were read-only, used primarily for data retrieval.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;However, with the evolution of SAP's ABAP platform, Writable CDS Entities were introduced to enable direct data manipulation (Update, modify).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Types of Writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;1.Writable CDS View Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; - Wrap DDIC tables for direct writing access.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; 2.Writable External Entities &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;- Enable write access to eternal database.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, we are going to focus on CDS Writable Entities. I will walk you through the concept step-by-step, using a practical example to demonstrate how it works and what operations—such as&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt; INSERT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;UPDATE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;—we can perform using a writable entity. Let's dive into the example.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create a Table&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_0-1761035674723.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330139i0E91AC394DB0288C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_0-1761035674723.png" alt="kalmesh_0-1761035674723.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next, we will create a writable CDS entity on top of the database table &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ZTRL_T_AIRPORT, &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Using the writable CDS entity, we can perform &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;update &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;operations directly, and we can also &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;insert&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; new records by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; statement. We will explore how to implement these operations in the upcoming steps.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_1-1761035762682.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330140i8F18A3F4D2C62746/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_1-1761035762682.png" alt="kalmesh_1-1761035762682.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;In the next step, we will create a class to perform all the required operations. We will use standard interface methods to execute these operations and display the output in the console for better visibility and testing.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_2-1761035834570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330141i6A6F1BD2A833069C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_2-1761035834570.png" alt="kalmesh_2-1761035834570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Let’s&lt;/SPAN&gt;&lt;SPAN class=""&gt; insert some data into the database table. Since we cannot perform insert operation directly through a writable CDS entity, I will &lt;/SPAN&gt;&lt;SPAN class=""&gt;proceed&lt;/SPAN&gt;&lt;SPAN class=""&gt; with inserting data into the underlying database &lt;/SPAN&gt;&lt;SPAN class=""&gt;table.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_3-1761035898193.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330142i477E22022DB56E99/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_3-1761035898193.png" alt="kalmesh_3-1761035898193.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Fetch &lt;/SPAN&gt;&lt;SPAN class=""&gt;the data from the database table to verify whether the records were successfully inserted, as performed in the &lt;/SPAN&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;SPAN class=""&gt;revious&lt;/SPAN&gt; &lt;SPAN class=""&gt;step.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_4-1761035941906.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330143i0ADEFA20BA444649/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_4-1761035941906.png" alt="kalmesh_4-1761035941906.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;UPDATE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, let’s perform an update operation using the writable CDS entity (&lt;STRONG&gt;ZTRL&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;_I_WRENT_DEMO&lt;/STRONG&gt;)&lt;SPAN&gt;. In this example, we will update the name field to demonstrate how data can be modified through the entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_5-1761036054229.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330145i4019B9CCE92DA46E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_5-1761036054229.png" alt="kalmesh_5-1761036054229.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;INSERT&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We will insert a new record by using the &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; statement, which allows us to perform insert operations through the writable CDS entity.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_6-1761036103280.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330146iF60E2A1020E11868/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_6-1761036103280.png" alt="kalmesh_6-1761036103280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;DELETE&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Direct delete operations are not supported through writable CDS entities. If attempted, the system will raise an error, as shown below.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_7-1761036149147.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330147i142A233FDCF4405F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_7-1761036149147.png" alt="kalmesh_7-1761036149147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="kalmesh_8-1761036170936.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/330148i289A85701DAF27DC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="kalmesh_8-1761036170936.png" alt="kalmesh_8-1761036170936.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Writable CDS Entities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; offer a powerful and flexible way to interact with database tables in SAP. Through these entities, we can perform &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;update operations &lt;/SPAN&gt;&lt;/STRONG&gt;and&lt;SPAN&gt;&amp;nbsp;even &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;insert new records&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; using the &lt;/SPAN&gt;&lt;SPAN&gt;MODIFY&lt;/SPAN&gt;&lt;SPAN&gt; statement.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Keep experimenting, keep learning—and happy coding! &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/writable-entity-in-cds/ba-p/14249189"/>
    <published>2025-10-22T07:56:59.929000+02:00</published>
  </entry>
</feed>
