<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Development-blog-posts.xml</id>
  <title>SAP Community - ABAP Development</title>
  <updated>2025-10-09T08:00:03.961564+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Development/pd-p/833755570260738661924709785639136" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Development blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/smart-debugger/ba-p/14231014</id>
    <title>Smart Debugger</title>
    <updated>2025-09-29T23:51:26.297000+02:00</updated>
    <author>
      <name>yury_sichov</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/200363</uri>
    </author>
    <content>&lt;P&gt;Hello everyone. I invented a new&lt;A href="https://github.com/ysichov/Smart-Debugger" target="_self" rel="nofollow noopener noreferrer"&gt; Abap debugger&lt;/A&gt; ) This is an &lt;A href="https://github.com/ysichov/Smart-Debugger/blob/master/src/z_smart_debugger_test.prog.abap" target="_self" rel="nofollow noopener noreferrer"&gt;ABAP Script&lt;/A&gt; which can be used like addon to the standard debugger.&lt;/P&gt;&lt;P&gt;The main feature is that&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;it can work as debugger time machine which store every variables changes on every steps and show it in convenient format. Usuful to analyse deep structures, several tables simultaneously and search changes in the past!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Instance variables, structures and deep structures are shown as&amp;nbsp; hierarchi—Åal trees so we can have a 'helicopter view' for all variables at any step! Double-click on any table variable or table inside a deep structure will show it in separate window! And we don't have no limitations for windows quantity. If you have a big display you can open more then 10 tables simultaneously and analyse it!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="deep.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321385i2DD6CDE8A9D9199E/image-size/large?v=v2&amp;amp;px=999" role="button" title="deep.png" alt="deep.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Also it can show &lt;A href="https://github.com/WegnerDan/abapMermaid" target="_self" rel="nofollow noopener noreferrer"&gt;mermaid&lt;/A&gt; diagram with calls execution or draw execution flow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Stack calls" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321372i4CC82D2F14B0A223/image-size/large?v=v2&amp;amp;px=999" role="button" title="ice.jfif" alt="Stack calls" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Stack calls&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After double-click on any variable it works as watchpoint and collects not only selected variables but dependents also (forms/methods/functions call). Button "Calculation Flow" will paint all steps in the code where variables were changed and paints Mermaid diagram for it.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The main profit for me is to getting calculation history quick. As I am an HR developer I tested salary calculations cases. In the classic debugger I can set a watchpoint. But in real program variables names are altered by calls. I name it outer and inners names. And in real debugging I should find manually all that altering to get the origin of all calculations. With Smart Debugger I get calculations history immediately because it can track all that names changes and can collect history path for selected variable by me.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="calc.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321376i361A8008B388948E/image-size/large?v=v2&amp;amp;px=999" role="button" title="calc.png" alt="calc.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/ysichov/Smart-Debugger/blob/master/Z_SDDE_mermaid" target="_self" rel="nofollow noopener noreferrer"&gt;Mermaid version is here&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;We can Set/Delete Session/External breakpoints and run standard debug buttons( F5. F6, F7, F8). Also we can get back to the past steps and see variables state at that moment.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So set break-points in any abap code and run. After break-point is triggered, go to the last tab "script" and paste the script.&amp;nbsp;Choose radio button "Execute directly" and press "Start Script" button.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="start.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321386i676776CC08C8038A/image-size/large?v=v2&amp;amp;px=999" role="button" title="start.png" alt="start.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="http://zevolving.com/2012/01/iterator-design-pattern-to-access-linked-list/" target="_self" rel="nofollow noopener noreferrer"&gt;Iterators example&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iter.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321438iC40BE2DC5803F2E1/image-size/large?v=v2&amp;amp;px=999" role="button" title="iter.png" alt="iter.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Feel free to open any issue or Idea/requests for changes.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/smart-debugger/ba-p/14231014"/>
    <published>2025-09-29T23:51:26.297000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/basic-code-s-of-abap/ba-p/14231152</id>
    <title>Basic code's of ABAP</title>
    <updated>2025-09-30T06:38:10.002000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;This blog consists of Basic code's of ABAP which can help most of the Beginner to understand and use it with simple replacements.....&lt;/P&gt;&lt;P&gt;Content of the post.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Display of Data using&amp;nbsp;REUSE_ALV_GRID&lt;/LI&gt;&lt;LI&gt;Display of data using Class method and also screen validation error&lt;/LI&gt;&lt;LI&gt;Modify Table in runtime using&amp;nbsp;REUSE_ALV_GRID_DISPLAY.&lt;/LI&gt;&lt;LI&gt;Error handling using message class code.&lt;/LI&gt;&lt;LI&gt;Spool Generation code.&lt;/LI&gt;&lt;LI&gt;Selection Screen code for visibility of parameters according to requirements.&lt;/LI&gt;&lt;LI&gt;Excel upload using&amp;nbsp;TEXT_CONVERT_XLS_TO_SAP&lt;/LI&gt;&lt;LI&gt;Table Maintenance code for Create, display and update data without SM30 and excel upload of data to create data using FM 'ALSM_EXCEL_TO_INTERNAL_TABLE'&lt;/LI&gt;&lt;LI&gt;Send Mail with Excel and PDF attachments.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;BR /&gt;1. Display of Data using&amp;nbsp;REUSE_ALV_GRID&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT1.

TABLES : BSEG, MARA, MARD.

TYPE-POOLS : SLIS.

*INPUTS
PARAMETERS : R_ACCNO TYPE BSEG-BELNR,
R_FYEAR TYPE BSEG-GJAHR.

*DECLARATIONS OF NEEDED COMPONENTS
DATA : IT_BSEG TYPE STANDARD TABLE OF BSEG,
WA_BSEG TYPE BSEG,
IT_MARA TYPE STANDARD TABLE OF MARA,
WA_MARA TYPE MARA,
IT_MARD TYPE STANDARD TABLE OF MARD,
WA_MARD TYPE MARD.

*CREATING TABLE STRUCTURE FOR FINAL OUTPUT
TYPES : BEGIN OF TY_STRUC,

MATNR TYPE BSEG-MATNR,
BELNR TYPE BSEG-BELNR,
GJAHR TYPE BSEG-GJAHR,
ERNAM TYPE MARA-ERNAM,
AENAM TYPE MARA-AENAM,
LGORT TYPE MARD-LGORT,
END OF TY_STRUC.

DATA : IT_FINAL TYPE STANDARD TABLE OF TY_STRUC,
WA_FINAL TYPE TY_STRUC.

DATA : IT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
WA_FIELDCAT LIKE LINE OF IT_FIELDCAT.

*CONDITION FOR TAKING INPUTS AND ALSO ADDING DATA OF BSEG IN THE INTERNAL TABLE.
IF R_ACCNO IS NOT INITIAL AND R_FYEAR IS NOT INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE BELNR = R_ACCNO AND GJAHR = R_FYEAR.

ELSEIF R_ACCNO IS NOT INITIAL AND R_FYEAR IS INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE BELNR = R_ACCNO.

ELSEIF R_ACCNO IS INITIAL AND R_FYEAR IS NOT INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE GJAHR = R_FYEAR.

ELSEIF R_ACCNO IS INITIAL AND R_FYEAR IS INITIAL.

SELECT BELNR MATNR GJAHR FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG.

ENDIF.

*DELETING THE DUPLICATES WITH RESPECT TO MATNR
*DELETE ADJACENT DUPLICATES FROM IT_BSEG COMPARING MATNR.

*NOW ADDING CONTENT OF MARA AND MARD INTO THE INTERNAL TABLE RESPECTIVELY USING MATNR AS FOREIGN KEY
SELECT MATNR ERNAM AENAM FROM MARA INTO CORRESPONDING FIELDS OF TABLE IT_MARA FOR ALL ENTRIES IN IT_BSEG WHERE MATNR = IT_BSEG-MATNR.

SELECT MATNR LGORT FROM MARD INTO CORRESPONDING FIELDS OF TABLE IT_MARD FOR ALL ENTRIES IN IT_MARA WHERE MATNR = IT_MARA-MATNR.

*MERGING ALL THE DATA INTO FINAL INTERNAL TABLE
LOOP AT IT_BSEG INTO WA_BSEG.

READ TABLE IT_MARA INTO WA_MARA WITH KEY MATNR = WA_BSEG-MATNR .

READ TABLE IT_MARD INTO WA_MARD WITH KEY MATNR = WA_MARA-MATNR.

WA_FINAL-MATNR = WA_MARA-MATNR.
WA_FINAL-BELNR = WA_BSEG-BELNR.
WA_FINAL-GJAHR = WA_BSEG-GJAHR.
WA_FINAL-ERNAM = WA_MARA-ERNAM.
WA_FINAL-AENAM = WA_MARA-AENAM.
WA_FINAL-LGORT = WA_MARD-LGORT.

APPEND WA_FINAL TO IT_FINAL.

ENDLOOP.

*DELETING THE DUPLICATES WITH RESPECT TO MATNR
DELETE ADJACENT DUPLICATES FROM IT_FINAL COMPARING MATNR.

WA_FIELDCAT-FIELDNAME = 'MATNR'.
WA_FIELDCAT-SELTEXT_M = 'MATERIAL NUMBER'.
WA_FIELDCAT-OUTPUTLEN = '18'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'BELNR'.
WA_FIELDCAT-SELTEXT_M = 'ACCOUNT DOCUMENT NUMBER'.
WA_FIELDCAT-OUTPUTLEN = '10'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'GJAHR'.
WA_FIELDCAT-SELTEXT_M = 'FISCAL YEAR'.
WA_FIELDCAT-OUTPUTLEN = '4'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'ERNAM'.
WA_FIELDCAT-SELTEXT_M = 'CREATED BY'.
WA_FIELDCAT-OUTPUTLEN = '12'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'AENAM'.
WA_FIELDCAT-SELTEXT_M = 'CHANGED BY'.
WA_FIELDCAT-OUTPUTLEN = '12'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-FIELDNAME = 'LGORT'.
WA_FIELDCAT-SELTEXT_M = 'STORAGE LOCATION'.
WA_FIELDCAT-OUTPUTLEN = '4'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.




CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
IT_FIELDCAT = IT_FIELDCAT
TABLES
T_OUTTAB = IT_FINAL
* EXCEPTIONS
* PROGRAM_ERROR = 1
* OTHERS = 2
.
IF SY-SUBRC &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
* WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;2. Display of data using Class method and also screen validation error&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT2.

PARAMETERS : EMP_ID TYPE PA0000-PERNR.

DATA: WA_PA00 TYPE PA0000,
WA_PA2 TYPE PA0002.

AT SELECTION-SCREEN .

SELECT SINGLE * FROM PA0000 INTO WA_PA00 WHERE PERNR = EMP_ID.
SELECT SINGLE * FROM PA0002 INTO WA_PA2 WHERE PERNR = WA_PA00-PERNR.

IF WA_PA2-PERNR IS INITIAL.
MESSAGE 'EMPLOYEE NOT PRESENT' TYPE 'E'.

ENDIF.

CLASS EMP_MAIN DEFINITION.
PUBLIC SECTION.
METHODS : GET_DATA,
DISPLAY.

PRIVATE SECTION.
DATA: IT_PA02 TYPE STANDARD TABLE OF PA0002,
WA_PA02 TYPE PA0002.


TYPES: BEGIN OF TY_STRUC,
EMP_ID TYPE PA0002-PERNR,
LAST_NAME TYPE PA0002-NACHN,
FIRST_NAME TYPE PA0002-VORNA,
DOB TYPE PA0002-GBDAT,
GENDER TYPE ZGENDER,

END OF TY_STRUC.


DATA : IT_ANS TYPE STANDARD TABLE OF TY_STRUC,
WA_ANS TYPE TY_STRUC.

ENDCLASS.

CLASS EMP_MAIN IMPLEMENTATION.
METHOD GET_DATA.


SELECT PERNR NACHN VORNA GBDAT GESCH FROM PA0002 INTO CORRESPONDING FIELDS OF TABLE ME-&amp;gt;IT_PA02 WHERE PERNR = EMP_ID.

LOOP AT ME-&amp;gt;IT_PA02 INTO ME-&amp;gt;WA_PA02.
ME-&amp;gt;WA_ANS-EMP_ID = ME-&amp;gt;WA_PA02-PERNR.
ME-&amp;gt;WA_ANS-LAST_NAME = ME-&amp;gt;WA_PA02-NACHN.
ME-&amp;gt;WA_ANS-FIRST_NAME = ME-&amp;gt;WA_PA02-VORNA.
ME-&amp;gt;WA_ANS-DOB = ME-&amp;gt;WA_PA02-GBDAT.

IF ME-&amp;gt;WA_PA02-GESCH = 1.
ME-&amp;gt;WA_ANS-GENDER = 'M-YES'.
ELSE.
ME-&amp;gt;WA_ANS-GENDER = 'F-YES'.
ENDIF.

APPEND ME-&amp;gt;WA_ANS TO ME-&amp;gt;IT_ANS.

ENDLOOP.

ENDMETHOD.

METHOD DISPLAY.
DATA : LR_TABLE TYPE REF TO CL_SALV_TABLE.
CL_SALV_TABLE=&amp;gt;FACTORY( IMPORTING R_SALV_TABLE = LR_TABLE
CHANGING T_TABLE = ME-&amp;gt;IT_ANS ).
LR_TABLE-&amp;gt;DISPLAY( ).
ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.

DATA LR_MAIN TYPE REF TO EMP_MAIN.

CREATE OBJECT LR_MAIN.
LR_MAIN-&amp;gt;GET_DATA( ).

LR_MAIN-&amp;gt;DISPLAY( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;3. Modify Table in runtime using&amp;nbsp;REUSE_ALV_GRID_DISPLAY.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT3.

DATA WA_MS TYPE ZMATERIAL_SALES.

TYPE-POOLS : SLIS.

SELECT-OPTIONS: DATE FOR WA_MS-C_DATE.

DATA: IT_SO TYPE TABLE OF ZMATERIAL_SALES,
IT_CY TYPE TABLE OF ZMATERIAL_SALES,
WA_SO TYPE ZMATERIAL_SALES,
WA_CY TYPE ZMATERIAL_SALES.


DATA : IT_FIELDCAT TYPE SLIS_T_FIELDCAT_ALV,
WA_FIELDCAT LIKE LINE OF IT_FIELDCAT.

START-OF-SELECTION.

IF DATE IS NOT INITIAL.
PERFORM FETCH USING DATE[] CHANGING IT_SO.
ELSE.
SELECT * FROM ZMATERIAL_SALES INTO TABLE IT_SO.
ENDIF.

IT_CY = IT_SO.

PERFORM FIELD_CATALOG.



CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY'
EXPORTING
I_CALLBACK_PROGRAM = SY-REPID
I_CALLBACK_USER_COMMAND = 'SAVE'
IT_FIELDCAT = IT_FIELDCAT
TABLES
T_OUTTAB = IT_SO
EXCEPTIONS
PROGRAM_ERROR = 1
OTHERS = 2
.
IF SY-SUBRC &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
* WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.



FORM FETCH USING P_DATE LIKE DATE[]
CHANGING P_IT_SO LIKE IT_SO.
SELECT * FROM ZMATERIAL_SALES INTO TABLE P_IT_SO WHERE C_DATE IN P_DATE.

ENDFORM. " FETCH




FORM FIELD_CATALOG .

WA_FIELDCAT-COL_POS = 1.
WA_FIELDCAT-FIELDNAME = 'MATNR'.
WA_FIELDCAT-SELTEXT_M = 'Material no.'.
WA_FIELDCAT-OUTPUTLEN = '18'.
WA_FIELDCAT-KEY = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 2.
WA_FIELDCAT-FIELDNAME = 'VBELN'.
WA_FIELDCAT-SELTEXT_M = 'Sales Doc no.'.
WA_FIELDCAT-OUTPUTLEN = '10'.
WA_FIELDCAT-KEY = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 3.
WA_FIELDCAT-FIELDNAME = 'MAT_DESC'.
WA_FIELDCAT-SELTEXT_M = 'Material Discription'.
WA_FIELDCAT-OUTPUTLEN = '40'.
WA_FIELDCAT-EDIT = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 4.
WA_FIELDCAT-FIELDNAME = 'SAL_DESC'.
WA_FIELDCAT-SELTEXT_M = 'Sales DiscrIption'.
WA_FIELDCAT-OUTPUTLEN = '40'.
WA_FIELDCAT-EDIT = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 5.
WA_FIELDCAT-FIELDNAME = 'QUANT'.
WA_FIELDCAT-SELTEXT_M = 'Quantity'.
WA_FIELDCAT-OUTPUTLEN = '12'.
WA_FIELDCAT-EDIT = 'X'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 6.
WA_FIELDCAT-FIELDNAME = 'PRICE'.
WA_FIELDCAT-SELTEXT_M = 'Price'.
WA_FIELDCAT-OUTPUTLEN = '4'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

WA_FIELDCAT-COL_POS = 7.
WA_FIELDCAT-FIELDNAME = 'C_DATE'.
WA_FIELDCAT-SELTEXT_M = 'Date Of Creation'.
WA_FIELDCAT-OUTPUTLEN = '8'.
APPEND WA_FIELDCAT TO IT_FIELDCAT.
CLEAR WA_FIELDCAT.

ENDFORM.


FORM SAVE USING RCOMM TYPE SY-UCOMM
SEL TYPE SLIS_SELFIELD.

CASE SY-UCOMM.
WHEN '&amp;amp;DATA_SAVE'.
LOOP AT IT_SO INTO WA_SO.
CLEAR WA_CY.
READ TABLE IT_CY INTO WA_CY INDEX SY-TABIX.

IF WA_SO NE WA_CY.
WA_CY-MAT_DESC = WA_SO-MAT_DESC.
WA_CY-SAL_DESC = WA_SO-SAL_DESC.
WA_CY-QUANT = WA_SO-QUANT.

MODIFY ZMATERIAL_SALES FROM WA_CY.

IF SY-SUBRC = 0.
MESSAGE 'RECORD HAS BEEN SAVED SUCCESSFULY' TYPE 'S'.
ENDIF.
ENDIF.

CLEAR WA_SO.
ENDLOOP.

ENDCASE.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. Error handling using message class code.&lt;/P&gt;&lt;P&gt;Firstly create msg class using se91 Tcode and then we can use in our code&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT4.

TABLES: BSEG,MSEG.

PARAMETERS C_CODE TYPE BSEG-BUKRS.

TYPES: BEGIN OF TY_BM,
BUKRS TYPE BSEG-BUKRS,
GJAHR TYPE BSEG-GJAHR,
MATNR TYPE BSEG-MATNR,
BELNR TYPE BSEG-BELNR,
MBLNR TYPE MSEG-MBLNR,
ZEILE TYPE MSEG-ZEILE,
END OF TY_BM.

DATA: IT_BM TYPE TABLE OF TY_BM,
WA_BM TYPE TY_BM.

DATA: IT_MSEG TYPE STANDARD TABLE OF MSEG,
WA_MSEG TYPE MSEG.

DATA: IT_BSEG TYPE STANDARD TABLE OF BSEG,
WA_BSEG TYPE BSEG.

DATA OBJ TYPE REF TO ZCX_K_ERRORHANDLE.

AT SELECTION-SCREEN.
TRY.
IF C_CODE IS NOT INITIAL.
SELECT GJAHR MATNR BELNR BUKRS FROM BSEG INTO CORRESPONDING FIELDS OF TABLE IT_BSEG WHERE BUKRS = C_CODE.

IF IT_BSEG IS NOT INITIAL.
SELECT MBLNR ZEILE FROM MSEG INTO CORRESPONDING FIELDS OF TABLE IT_MSEG FOR ALL ENTRIES IN IT_BSEG WHERE MBLNR = IT_BSEG-BELNR.
ENDIF.

IF IT_MSEG IS INITIAL.
RAISE EXCEPTION TYPE ZCX_K_ERRORHANDLE
EXPORTING
TEXTID = ZCX_K_ERRORHANDLE=&amp;gt;ZCX_K_ERRORHANDLE.
ENDIF.
ELSE.
RAISE EXCEPTION TYPE ZCX_K_ERRORHANDLE
EXPORTING
TEXTID = ZCX_K_ERRORHANDLE=&amp;gt;INPUT_ERROR.
ENDIF.

CATCH ZCX_K_ERRORHANDLE INTO OBJ.

MESSAGE OBJ TYPE 'E'.

ENDTRY.



CLASS LCL_MAIN DEFINITION.
PUBLIC SECTION.
METHODS : DISPLAY.


ENDCLASS.

CLASS LCL_MAIN IMPLEMENTATION.

METHOD DISPLAY.
DATA : LR_TABLE TYPE REF TO CL_SALV_TABLE.
CL_SALV_TABLE=&amp;gt;FACTORY( IMPORTING R_SALV_TABLE = LR_TABLE
CHANGING T_TABLE = IT_BM ).
LR_TABLE-&amp;gt;DISPLAY( ).
ENDMETHOD.
ENDCLASS.

START-OF-SELECTION.

LOOP AT IT_BSEG INTO WA_BSEG.
READ TABLE IT_MSEG INTO WA_MSEG WITH KEY MBLNR = WA_BSEG-BELNR.

WA_BM-MATNR = WA_BSEG-MATNR.
WA_BM-BUKRS = WA_BSEG-BUKRS.
WA_BM-GJAHR = WA_BSEG-GJAHR.
WA_BM-BELNR = WA_BSEG-BELNR.
WA_BM-MBLNR = WA_MSEG-MBLNR.
WA_BM-ZEILE = WA_MSEG-ZEILE.
APPEND WA_BM TO IT_BM.
CLEAR WA_BM.

ENDLOOP.

DATA LR_MAIN TYPE REF TO LCL_MAIN.

CREATE OBJECT LR_MAIN.

LR_MAIN-&amp;gt;DISPLAY( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;5. Spool Generation code.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT5.

DATA: IT_MS LIKE ZMATERIAL_SALES OCCURS 0 WITH HEADER LINE,
C_DATE LIKE ZMATERIAL_SALES-C_DATE.

DATA: IT_SP LIKE ZSPOOLTABLE OCCURS 0 WITH HEADER LINE.

DATA: GD_SPOOL_NR LIKE TSP01-RQIDENT.

START-OF-SELECTION.

SELECT C_DATE FROM ZMATERIAL_SALES INTO CORRESPONDING FIELDS OF TABLE IT_MS.

DELETE ADJACENT DUPLICATES FROM IT_MS COMPARING C_DATE.

LOOP AT IT_MS.

CLEAR: C_DATE.

C_DATE = IT_MS-C_DATE.

WAIT UP TO 1 SECONDS.


PERFORM SUBMIT_PROGRAM.
PERFORM GET_SPOOL_NUMBER.
PERFORM ADD_SPOOL_NUMBER.

ENDLOOP.



FORM SUBMIT_PROGRAM .

SUBMIT ZASSESSMENT3 WITH DATE = C_DATE
TO SAP-SPOOL
WITHOUT SPOOL DYNPRO
AND RETURN.


ENDFORM. " SUBMIT_PROGRAM



FORM GET_SPOOL_NUMBER .

CLEAR GD_SPOOL_NR.
SELECT SINGLE RQIDENT INTO GD_SPOOL_NR FROM TSP01
WHERE RQCRETIME = ( SELECT MAX( RQCRETIME ) FROM TSP01 WHERE RQCLIENT = SY-MANDT
AND RQOWNER = SY-UNAME ).




ENDFORM. " GET_SPOOL_NUMBER



FORM ADD_SPOOL_NUMBER .

IT_SP-C_DATE = C_DATE.
IT_SP-SPOOL_NO = GD_SPOOL_NR.

APPEND IT_SP.

MODIFY ZSPOOLTABLE FROM IT_SP.
COMMIT WORK.

ENDFORM. " ADD_SPOOL_NUMBER&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;6. Selection Screen code for visibility of parameters according to requirements.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT7.

INCLUDE ZSELECTION_SCREEN.


**&amp;amp;---------------------------------------------------------------------*
**&amp;amp; Include ZSELECTION_SCREEN
**&amp;amp;---------------------------------------------------------------------*
*DATA: BELNR TYPE BSEG-BELNR,
* GJAHR TYPE BSEG-GJAHR,
* BUKRS TYPE BSEG-BUKRS.
*
*SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.
* SELECT-OPTIONS: ACC_NO FOR BELNR NO INTERVALS NO-EXTENSION,
* F_YEAR FOR GJAHR MODIF ID P1 NO INTERVALS NO-EXTENSION,
* C_CODE FOR BUKRS MODIF ID P2 NO INTERVALS NO-EXTENSION.
*
* SELECTION-SCREEN SKIP 1.
*
* SELECTION-SCREEN BEGIN OF LINE.
*
*
* PARAMETERS C1 RADIOBUTTON GROUP RAD1 USER-COMMAND R1 DEFAULT 'X'.
* SELECTION-SCREEN COMMENT 3(26) TEXT-021.
* SELECTION-SCREEN POSITION 30.
* PARAMETERS C2 RADIOBUTTON GROUP RAD1.
* SELECTION-SCREEN COMMENT 32(29) TEXT-022.
* SELECTION-SCREEN END OF LINE.
*
* SELECTION-SCREEN SKIP 1.
*
* SELECTION-SCREEN BEGIN OF BLOCK B2 WITH FRAME TITLE TEXT-002.
* PARAMETERS: V2 AS CHECKBOX MODIF ID VW USER-COMMAND COMM2.
* PARAMETERS: V3 AS CHECKBOX MODIF ID VW USER-COMMAND COMM2.
* PARAMETERS: V4 AS CHECKBOX MODIF ID VW USER-COMMAND COMM2.
* SELECTION-SCREEN END OF BLOCK B2.
*
*SELECTION-SCREEN BEGIN OF BLOCK B3 WITH FRAME TITLE TEXT-003.
* PARAMETERS: V5 AS CHECKBOX MODIF ID VW1.
*
* SELECTION-SCREEN END OF BLOCK B3.
*
* SELECTION-SCREEN END OF BLOCK B1.




AT SELECTION-SCREEN OUTPUT.

IF C1 = 'X'.
SET CURSOR FIELD 'C2'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = 'VW1'.
SCREEN-ACTIVE = '0'.

MODIFY SCREEN.
ENDIF.


IF V4 = 'X' AND ( V3 = 'X' OR V2 = 'X') .

IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.

ENDIF.
IF SCREEN-GROUP1 = 'P1'.
SCREEN-ACTIVE = '1'.
MODIFY SCREEN.
ENDIF.


ELSEIF V4 = 'X'.

IF SCREEN-GROUP1 = 'P1'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.

ENDIF.
IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '1'.
MODIFY SCREEN.

ENDIF.
ELSE.

IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.

ENDIF.
ENDIF.
ENDLOOP.

ENDIF.

IF C2 = 'X'.
SET CURSOR FIELD 'C1'.
LOOP AT SCREEN.
IF SCREEN-GROUP1 = 'VW'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.
ENDIF.

IF SCREEN-GROUP1 = 'P2'.
SCREEN-ACTIVE = '0'.
MODIFY SCREEN.
ENDIF.

ENDLOOP.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;7. Excel upload using&amp;nbsp;TEXT_CONVERT_XLS_TO_SAP&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ZASSESSMENT10.

DATA: IT_TAB TYPE STANDARD TABLE OF ZASSESS10.

DATA: WA_TAB TYPE ZASSESS10.

DATA IT_TYPE(4096) type c occurs 0.

SELECTION-SCREEN BEGIN OF BLOCK B1 WITH FRAME TITLE TEXT-001.

PARAMETERS: P_FILE TYPE RLGRAP-FILENAME.

SELECTION-SCREEN END OF BLOCK B1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR P_FILE.
PERFORM GET_FILE.


START-OF-SELECTION.

PERFORM EXCEL_TO_IT_TAB.
PERFORM UPLOAD_DATA.

END-OF-SELECTION.

FORM GET_FILE .

CALL FUNCTION 'F4_FILENAME' "POP UP FOR FETCH
EXPORTING
PROGRAM_NAME = SYST-CPROG
DYNPRO_NUMBER = SYST-DYNNR
* FIELD_NAME = ' '
IMPORTING
FILE_NAME = P_FILE
.

ENDFORM. " GET_FILE




FORM EXCEL_TO_IT_TAB .



CALL FUNCTION 'TEXT_CONVERT_XLS_TO_SAP'
EXPORTING
* I_FIELD_SEPERATOR =
I_LINE_HEADER = 'X'
I_TAB_RAW_DATA = IT_TYPE
I_FILENAME = P_FILE
TABLES
I_TAB_CONVERTED_DATA = IT_TAB
EXCEPTIONS
CONVERSION_FAILED = 1
OTHERS = 2
.
IF SY-SUBRC &amp;lt;&amp;gt; 0.
MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.




ENDFORM. " EXCEL_TO_IT_TAB




FORM UPLOAD_DATA .

LOOP AT IT_TAB INTO WA_TAB.

MODIFY ZASSESS10 FROM WA_TAB.
COMMIT WORK.
ENDLOOP.

ENDFORM. " UPLOAD_data&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. Table Maintenance code for Create, display and update data without SM30 and excel upload of data to create data using FM 'ALSM_EXCEL_TO_INTERNAL_TABLE'&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;REPORT ztable_update.

TYPES : BEGIN OF ty_ztable,
sel TYPE char1.
INCLUDE STRUCTURE ztable.
TYPES : END OF ty_ztable.

DATA : gs_ztable TYPE ty_ztable,
gt_file_data TYPE TABLE OF ztable,
gob_table TYPE REF TO cl_salv_table,
gt_ztable1 TYPE TABLE OF ztable,
gt_ztable TYPE TABLE OF ty_ztable,
gs_zzpp_ztable TYPE ztable,
gv_mark TYPE char01,
gv_field1 TYPE ztable-field1,
gv_field2 TYPE ztable-field2,
gv_field3 TYPE ztable-field3,
gt_excel TYPE TABLE OF alsmex_tabline.

DATA: gs_excel TYPE ole2_object, " Excel object
gs_mapl TYPE ole2_object, " list of workbooks
gs_map TYPE ole2_object, " workbook
gs_zl TYPE ole2_object, " cell
gs_f TYPE ole2_object, " font
gs_column TYPE ole2_object. " Column

CONTROLS: t_tab TYPE TABLEVIEW USING SCREEN 9000.

SELECTION-SCREEN BEGIN OF BLOCK b2 WITH FRAME TITLE TEXT-501.
PARAMETERS : p_rb1 RADIOBUTTON GROUP grp1 DEFAULT 'X' USER-COMMAND usr1 MODIF ID r1,
p_rb2 RADIOBUTTON GROUP grp1 MODIF ID r1,
p_rb3 RADIOBUTTON GROUP grp1 MODIF ID r1.


SELECTION-SCREEN BEGIN OF BLOCK t11 WITH FRAME TITLE TEXT-502.
PARAMETERS : p_file1 TYPE rlgrap-filename MODIF ID z1.
SELECTION-SCREEN: BEGIN OF LINE,
PUSHBUTTON 1(24) TEXT-105 USER-COMMAND form MODIF ID z1,
END OF LINE.
SELECTION-SCREEN END OF BLOCK t11.


SELECTION-SCREEN BEGIN OF BLOCK t12 WITH FRAME TITLE TEXT-503.
SELECT-OPTIONS :so_pc1 FOR gv_field1 NO-EXTENSION NO INTERVALS MODIF ID z2 ,
so_fpc1 FOR gv_field3 NO-EXTENSION NO INTERVALS MODIF ID z2 ,
so_cc1 FOR gv_field2 NO-EXTENSION NO INTERVALS MODIF ID z2 .
SELECTION-SCREEN END OF BLOCK t12.

SELECTION-SCREEN BEGIN OF BLOCK t13 WITH FRAME TITLE TEXT-504.
SELECT-OPTIONS : so_pc2 FOR gv_field1 NO-EXTENSION NO INTERVALS MODIF ID z3,
so_fpc2 FOR gv_field3 NO-EXTENSION NO INTERVALS MODIF ID z3,
so_cc2 FOR gv_field2 NO-EXTENSION NO INTERVALS MODIF ID z3.
SELECTION-SCREEN END OF BLOCK t13.
SELECTION-SCREEN END OF BLOCK b2.

SELECTION-SCREEN BEGIN OF SCREEN 500 AS WINDOW.
SELECTION-SCREEN BEGIN OF BLOCK b3 WITH FRAME TITLE TEXT-008 .

SELECTION-SCREEN BEGIN OF LINE.
* YES
PARAMETERS p_y RADIOBUTTON GROUP rad2 USER-COMMAND r1 DEFAULT 'X'.
SELECTION-SCREEN COMMENT 3(10) TEXT-027.
SELECTION-SCREEN POSITION 15.
* NO
PARAMETERS p_n RADIOBUTTON GROUP rad2.
SELECTION-SCREEN COMMENT 18(10) TEXT-028.
SELECTION-SCREEN END OF LINE.
SELECTION-SCREEN END OF BLOCK b3.
SELECTION-SCREEN END OF SCREEN 500.

AT SELECTION-SCREEN.
IF sy-ucomm EQ 'FORM'.
PERFORM download_format.
ENDIF.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR p_file1.
PERFORM f4_filename USING p_file1.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_pc1-low.
PERFORM Param_F4_help_pc USING so_pc1-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_fpc1-low.
PERFORM Param_F4_help_fpc USING so_fpc1-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_cc1-low.
PERFORM Param_F4_help_cc USING so_cc1-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_pc2-low.
PERFORM Param_F4_help_pc USING so_pc2-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_fpc2-low.
PERFORM Param_F4_help_fpc USING so_fpc2-low.

AT SELECTION-SCREEN ON VALUE-REQUEST FOR so_cc2-low.
PERFORM Param_F4_help_cc USING so_cc2-low.

AT SELECTION-SCREEN OUTPUT.
LOOP AT SCREEN.
IF screen-group1 = 'Z1'.
screen-active = COND #( WHEN p_rb1 = 'X' THEN 1
WHEN p_rb2 = 'X' THEN 0
WHEN p_rb3 = 'X' THEN 0 ).
ENDIF.
IF screen-group1 = 'Z2'.
screen-active = COND #( WHEN p_rb1 = 'X' THEN 0
WHEN p_rb2 = 'X' THEN 1
WHEN p_rb3 = 'X' THEN 0 ).
ENDIF.
IF screen-group1 = 'Z3'.
screen-active = COND #( WHEN p_rb1 = 'X' THEN 0
WHEN p_rb2 = 'X' THEN 0
WHEN p_rb3 = 'X' THEN 1 ).
ENDIF.

IF screen-group1 = 'V0' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'V1' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'V2' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'V3' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C0' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C1' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C2' .
screen-active = 0.
ENDIF.
IF screen-group1 = 'C3' .
screen-active = 0.
ENDIF.
MODIFY SCREEN.
ENDLOOP.

START-OF-SELECTION.
IF p_rb1 = 'X'.
PERFORM Create_data.

ELSEIF p_rb2 = 'X'.
PERFORM Update_data.

ELSEIF p_rb3 = 'X'.
PERFORM Display_data.
ENDIF.

END-OF-SELECTION.

FORM Create_data .

DATA: ls_temp_data TYPE ztable,
lt_temp_tab TYPE TABLE OF ztable,
lv_cont TYPE char1.

IF p_file1 IS NOT INITIAL.
IF ( p_file1 CP '*xls' OR p_file1 CP '*xlsx' ).
TRY.
CALL FUNCTION 'ALSM_EXCEL_TO_INTERNAL_TABLE'
EXPORTING
filename = p_file1
i_begin_col = 1
i_begin_row = 2
i_end_col = '30'
i_end_row = '999999'
TABLES
intern = gt_excel
EXCEPTIONS
inconsistent_parameters = 1
upload_ole = 2
OTHERS = 3.
IF sy-subrc &amp;lt;&amp;gt; 0.
MESSAGE 'Excel File Conversion Error' TYPE 'S' DISPLAY LIKE 'E'.
EXIT.
ENDIF.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.

LOOP AT gt_excel ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_excel&amp;gt;).
IF ls_temp_data-field1 IS NOT INITIAL
AND ls_temp_data-field3 IS NOT INITIAL
AND ls_temp_data-field2 IS NOT INITIAL
AND &amp;lt;lfs_excel&amp;gt;-col &amp;lt;&amp;gt; 1
AND line_exists( lt_temp_tab[ field1 = ls_temp_data-field1
field3 = ls_temp_data-field3
field2 = ls_temp_data-field2 ] ).
MESSAGE |Duplicate Entry found in Excel at Row number : | &amp;amp;&amp;amp; |{ &amp;lt;lfs_excel&amp;gt;-row + 1 }| TYPE 'S' DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.
CASE &amp;lt;lfs_excel&amp;gt;-col.
WHEN 1.
CLEAR ls_temp_data.
ls_temp_data-field1 = &amp;lt;lfs_excel&amp;gt;-value.
CONDENSE ls_temp_data-field1.
WHEN 2.
ls_temp_data-field3 = &amp;lt;lfs_excel&amp;gt;-value.
CONDENSE ls_temp_data-field3.
WHEN 3.
ls_temp_data-field2 = &amp;lt;lfs_excel&amp;gt;-value.
CONDENSE ls_temp_data-field2.
ENDCASE.
AT END OF row.
ls_temp_data-client = sy-mandt.
APPEND ls_temp_data TO lt_temp_tab.
ENDAT.
ENDLOOP.
ENDIF.

IF lt_temp_tab IS NOT INITIAL.
DELETE FROM ztable.
IF sy-subrc = 0.
COMMIT WORK.
ELSE.
ROLLBACK WORK.
ENDIF.
INSERT ztable FROM TABLE lt_temp_tab .
IF sy-subrc = 0.
COMMIT WORK.
MESSAGE 'Data inserted successfully' TYPE 'S'.
ELSE.
ROLLBACK WORK.
MESSAGE 'Data not inserted' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.
ELSE.
MESSAGE 'Entry already exists' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.
ENDIF.

ENDFORM.


FORM Update_data .

SELECT *
FROM ztable
INTO CORRESPONDING FIELDS OF TABLE @gt_ztable
WHERE field1 IN _pc1
AND field3 IN _fpc1
AND field2 IN _cc1.

IF gt_ztable IS NOT INITIAL.
CALL SCREEN 9000.
ELSE.
MESSAGE 'No Data Found' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.
ENDFORM.


FORM Display_data .

SELECT *
FROM ztable
INTO TABLE (lt_ztable)
WHERE field1 IN _pc2
AND field3 IN _fpc2
AND field2 IN _cc2.

IF lt_ztable IS NOT INITIAL.
TRY.
CALL METHOD cl_salv_table=&amp;gt;factory
IMPORTING
r_salv_table = gob_table
CHANGING
t_table = lt_ztable.
CATCH cx_salv_msg .
ENDTRY.
CALL METHOD gob_table-&amp;gt;display.
ELSE.
MESSAGE 'No data found' TYPE 'S' DISPLAY LIKE 'E'.
LEAVE LIST-PROCESSING.
ENDIF.
ENDFORM.


FORM download_format .

CREATE OBJECT gs_excel 'EXCEL.APPLICATION'.
SET PROPERTY OF gs_excel 'Visible' = 1.
* get list of workbooks, initially empty
CALL METHOD OF
gs_excel
'Workbooks' = gs_mapl.
PERFORM err_hdl.

* add a new workbook
CALL METHOD OF
gs_mapl
'Add' = gs_map.
PERFORM err_hdl.

* Output column headings to active Excel sheet
PERFORM fill_cell USING 1 1 1 'Field 1' .
PERFORM fill_cell USING 1 2 1 'Field 2' .
PERFORM fill_cell USING 1 3 1 'Field 3' .

CALL METHOD OF
gs_excel
'Columns' = gs_column.

CALL METHOD OF
gs_column
'Autofit'.

CALL METHOD OF
gs_excel
'Worksheets' = gs_mapl.
PERFORM err_hdl.

SET PROPERTY OF gs_map 'NAME' = 'COPY'.

FREE OBJECT: gs_excel,
gs_mapl,
gs_map,
gs_zl,
gs_f,
gs_column.


ENDFORM.



FORM f4_filename USING p_file.
TRY.
CALL FUNCTION 'F4_FILENAME'
EXPORTING
field_name = 'P_FILE '
IMPORTING
file_name = p_file.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.

ENDFORM.

FORM Param_F4_help_pc USING
p_so_pc.
DATA: lt_return TYPE STANDARD TABLE OF ddshretval.

SELECT DISTINCT field1
FROM ztable
INTO TABLE (lt_value).

TRY.
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
retfield = 'field1'
value_org = 'S'
TABLES
value_tab = lt_value
return_tab = lt_return
EXCEPTIONS
parameter_error = 1
no_values_found = 2
OTHERS = 3.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.

READ TABLE lt_return INTO DATA(ls_return) INDEX 1.
IF sy-subrc = 0.
p_so_pc = ls_return-fieldval.
ENDIF.
ENDFORM.

FORM Param_F4_help_Fpc USING
p_so_Fpc.
DATA: lt_return TYPE STANDARD TABLE OF ddshretval.

SELECT DISTINCT field3
FROM ztable
INTO TABLE (lt_value).
TRY.
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
retfield = 'field3'
value_org = 'S'
TABLES
value_tab = lt_value
return_tab = lt_return
EXCEPTIONS
parameter_error = 1
no_values_found = 2
OTHERS = 3.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.
READ TABLE lt_return INTO DATA(ls_return) INDEX 1.
IF sy-subrc = 0.
p_so_fpc = ls_return-fieldval.
ENDIF.
ENDFORM.

FORM Param_F4_help_cc USING
p_so_cc.
DATA: lt_return TYPE STANDARD TABLE OF ddshretval.

SELECT DISTINCT field2
FROM ztable
INTO TABLE (lt_value).
TRY.
CALL FUNCTION 'F4IF_INT_TABLE_VALUE_REQUEST'
EXPORTING
retfield = 'field2'
value_org = 'S'
TABLES
value_tab = lt_value
return_tab = lt_return
EXCEPTIONS
parameter_error = 1
no_values_found = 2
OTHERS = 3.
CATCH cx_root INTO DATA(lob_oref).
MESSAGE lob_oref-&amp;gt;get_text( ) TYPE 'S' DISPLAY LIKE 'E'.
ENDTRY.
READ TABLE lt_return INTO DATA(ls_return) INDEX 1.
IF sy-subrc = 0.
p_so_cc = ls_return-fieldval.
ENDIF.
ENDFORM.


FORM err_hdl .
IF sy-subrc &amp;lt;&amp;gt; 0.
MESSAGE 'Worksheet not created' TYPE 'S' DISPLAY LIKE 'E'.
STOP.
ENDIF.
ENDFORM.


FORM fill_cell USING i TYPE any
j TYPE any
bold TYPE any
val TYPE any.
CALL METHOD OF
gs_excel
'Cells' = gs_zl
EXPORTING
#1 = i
#2 = j.

PERFORM err_hdl.
SET PROPERTY OF gs_zl 'Value' = val.
PERFORM err_hdl.
GET PROPERTY OF gs_zl 'Font' = gs_f.
PERFORM err_hdl.
SET PROPERTY OF gs_f 'Bold' = bold.
PERFORM err_hdl.

ENDFORM.


MODULE status_9000 OUTPUT.
SET PF-STATUS 'PF_STATUS_9000'.
SET TITLEBAR 'TITLE1'.
ENDMODULE.


MODULE user_command_9000 INPUT.
CASE sy-ucomm.
WHEN 'BACK'.
LEAVE TO SCREEN 0.
WHEN 'CANCEL' OR 'EXIT'.
LEAVE PROGRAM.
WHEN 'SAVE'.
MOVE-CORRESPONDING gt_ztable TO gt_ztable1.
LOOP AT gt_ztable1 ASSIGNING FIELD-SYMBOL(&amp;lt;gfs_zrm&amp;gt;).
&amp;lt;gfs_zrm&amp;gt;-client = sy-mandt.
ENDLOOP.
UPDATE ztable FROM TABLE gt_ztable1.
IF sy-subrc = 0.
COMMIT WORK.
MESSAGE 'Data updated successfully' TYPE 'S'.
ELSE.
ROLLBACK WORK.
MESSAGE 'Data not updated ' TYPE 'S'.
ENDIF.
WHEN '%DEL'.
IF line_exists( gt_ztable[ sel = 'X' ] ).
CALL SELECTION-SCREEN 500 STARTING AT 5 5.
IF sy-subrc = 0.
IF p_y = 'X'.
gt_ztable1 = VALUE #( FOR gs_z IN gt_ztable
WHERE ( sel = 'X' )
( CORRESPONDING #( gs_z ) ) ).
IF gt_ztable1 IS NOT INITIAL.
DELETE ztable FROM TABLE gt_ztable1 .
IF sy-subrc = 0.
COMMIT WORK.
DELETE gt_ztable WHERE sel = 'X'.
MESSAGE 'Selected Data deleted' TYPE 'S'.
ELSE.
ROLLBACK WORK.
MESSAGE 'Data not deleted' TYPE 'S'.
ENDIF.
ENDIF.
ENDIF.
ENDIF.
ELSE.
MESSAGE 'Select Data' TYPE 'S' DISPLAY LIKE 'E'.
ENDIF.

WHEN '%SEL'. "Select all
gs_ztable-sel = 'X'.
MODIFY gt_ztable FROM gs_ztable TRANSPORTING sel WHERE sel &amp;lt;&amp;gt; 'X'.

WHEN '%DSE'. "Deselect ALl
gs_ztable-sel = ' '.
MODIFY gt_ztable FROM gs_ztable TRANSPORTING sel WHERE sel = 'X'.

ENDCASE.
ENDMODULE.


MODULE t_tab_change_tc_attr OUTPUT.
DESCRIBE TABLE gt_ztable LINES t_tab-lines.
ENDMODULE.

MODULE t_tab_modify INPUT.
MODIFY gt_ztable
FROM gs_ztable
INDEX t_tab-current_line.
ENDMODULE.
Flow Logic - Screen 9000

PROCESS BEFORE OUTPUT.
MODULE t_tab_change_tc_attr.

LOOP AT gt_ztable
INTO gs_ztable
WITH CONTROL t_tab
CURSOR t_tab-current_line.
ENDLOOP.


MODULE status_9000.
*
PROCESS AFTER INPUT.
LOOP AT gt_ztable.
CHAIN.
FIELD gs_ztable-sel.
FIELD gs_ztable-field1.
FIELD gs_ztable-field2.
FIELD gs_ztable-field3.
MODULE t_tab_modify ON CHAIN-REQUEST.
ENDCHAIN.
ENDLOOP.

MODULE user_command_9000.
 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. Send Mail with Excel and PDF attachments.&lt;/P&gt;&lt;P&gt;data declarations...&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA: BEGIN OF PDF_OUTPUT OCCURS 0.
          INCLUDE STRUCTURE TLINE.
  DATA: END OF PDF_OUTPUT.

  DATA : I_RECLIST  LIKE SOMLRECI1.
  DATA : I_OBJTXT   LIKE SOLISTI1,
         I_OBJPACK  LIKE SOPCKLSTI1,
         I_OBJBIN   LIKE SOLISTI1,
         WA_OBJHEAD LIKE SOLISTI1.

  DATA : V_LINES_TXT LIKE SY-TABIX,
         V_LINES_BIN LIKE SY-TABIX,
         WA_DOC_CHNG LIKE SODOCCHGI1.
  DATA : T_OBJECTDATA LIKE CLOBJDAT ,
         TAB_CLASS LIKE SCLASS .
  DATA : SEND_REQUEST TYPE REF TO CL_BCS.
  DATA : TEXT TYPE BCSY_TEXT.
  DATA : DOCUMENT TYPE REF TO CL_DOCUMENT_BCS.
  DATA : RECIPIENT TYPE REF TO IF_RECIPIENT_BCS.
  DATA : SENDER TYPE REF TO CL_SAPUSER_BCS.
  DATA : BCS_EXCEPTION TYPE REF TO CX_BCS.
  DATA : SENT_TO_ALL TYPE OS_BOOLEAN.
  DATA : MSTR_PRINT_PARMS LIKE PRI_PARAMS.
  DATA : SOLI_TAB TYPE SOLI_TAB.
  DATA : E_XSTRING TYPE XSTRING.
  DATA : G_XSTRING TYPE XSTRING.
  DATA : LT_SOLIX TYPE SOLIX_TAB.
  DATA : BINARY_CONTENT TYPE SOLIX_TAB.
  DATA : LV_SUBJECT(50) TYPE C.
  DATA :  LV_SUBJ_FILE   TYPE SO_OBJ_DES .
  DATA : LT_ATT_HEAD    TYPE SOLI_TAB.
  DATA : LV_FILENAME    TYPE STRING.
  DATA : LV_TEXT_LINE    TYPE SOLI.
  DATA : CONTENT TYPE STRING.
  DATA : VAL TYPE STRING.

  DATA : GD_SPOOL_NR LIKE TSP01-RQIDENT,
         GD_BYTECOUNT LIKE TST01-DSIZE.

  DATA : IT_CONTENTS TYPE STANDARD TABLE OF SOLISTI1,
         WA_CONTENTS TYPE SOLISTI1.

* EXCEL
  DATA : MT_FCAT        TYPE LVC_T_FCAT,
         MT_DATA        TYPE REF TO DATA,
         M_FLAVOUR      TYPE STRING,
         M_VERSION      TYPE STRING,
         MO_RESULT_DATA TYPE REF TO CL_SALV_EX_RESULT_DATA_TABLE,
         MO_COLUMNS     TYPE REF TO CL_SALV_COLUMNS_TABLE,
         MO_AGGREG      TYPE REF TO CL_SALV_AGGREGATIONS,
         MO_SALV_TABLE  TYPE REF TO CL_SALV_TABLE,
         M_FILE_TYPE    TYPE SALV_BS_CONSTANT.
  FIELD-SYMBOLS : &amp;lt;TAB&amp;gt; TYPE ANY TABLE.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;I. Create Excel&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;GET REFERENCE OF IT_EXCEL INTO mt_data. "IT_EXCEL consists of data which need to in excel

*if we didn't pass fieldcatalog we need to create it
  ASSIGN mt_data-&amp;gt;* TO &amp;lt;tab&amp;gt;.
  TRY .
      cl_salv_table=&amp;gt;factory(
      EXPORTING
      list_display = abap_false
      IMPORTING
      r_salv_table = mo_salv_table
      CHANGING
      t_table      = &amp;lt;tab&amp;gt; ).
    CATCH cx_salv_msg.

  ENDTRY.

  "get colums &amp;amp; aggregation infor to create fieldcat
  mo_columns  = mo_salv_table-&amp;gt;get_columns( ).
  mo_aggreg   = mo_salv_table-&amp;gt;get_aggregations( ).
  mt_fcat     =  cl_salv_controller_metadata=&amp;gt;get_lvc_fieldcatalog(
    r_columns      = mo_columns
    r_aggregations = mo_aggreg ).

  IF cl_salv_bs_a_xml_base=&amp;gt;get_version( ) EQ
  if_salv_bs_xml=&amp;gt;version_25 OR
  cl_salv_bs_a_xml_base=&amp;gt;get_version( ) EQ
  if_salv_bs_xml=&amp;gt;version_26.



    mo_result_data = cl_salv_ex_util=&amp;gt;factory_result_data_table(
    r_data                      = mt_data
*        s_layout                    = is_layout
    t_fieldcatalog              = mt_fcat
*        t_sort                      = it_sort
*        t_filter                    = it_filt
    ).

    CASE cl_salv_bs_a_xml_base=&amp;gt;get_version( ).
      WHEN if_salv_bs_xml=&amp;gt;version_25.
        m_version = if_salv_bs_xml=&amp;gt;version_25.
      WHEN if_salv_bs_xml=&amp;gt;version_26.
        m_version = if_salv_bs_xml=&amp;gt;version_26.
    ENDCASE.

    m_file_type = if_salv_bs_xml=&amp;gt;C_TYPE_EXCEL_XML.

    m_flavour = if_salv_bs_c_tt=&amp;gt;c_tt_xml_flavour_export.


    "transformation of data to excel
    CALL METHOD cl_salv_bs_tt_util=&amp;gt;if_salv_bs_tt_util~transform
      EXPORTING
        xml_type      = m_file_type
        xml_version   = m_version
        r_result_data = mo_result_data
        xml_flavour   = m_flavour
        gui_type      = if_salv_bs_xml=&amp;gt;c_gui_type_gui
      IMPORTING
        xml           = g_xstring.
  ENDIF.


  CALL METHOD cl_bcs_convert=&amp;gt;xstring_to_solix
    EXPORTING
      iv_xstring = g_xstring
    RECEIVING
      et_solix   = binary_content.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;II. Create PDF&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*for fetching print parameters and then changing according to file format
  CALL FUNCTION 'GET_PRINT_PARAMETERS'
    EXPORTING
      NO_DIALOG      = 'X'
    IMPORTING
      OUT_PARAMETERS = MSTR_PRINT_PARMS.

  MSTR_PRINT_PARMS-PAART = 'X_65_230'.

*Submit ZProgram whose output should be the content need to be in PDF
*for creating spool
  SUBMIT ZPROGRAM  WITH C_CODE = C_CODE
                          WITH C_NAME = C_NAME
  TO SAP-SPOOL
   SPOOL PARAMETERS MSTR_PRINT_PARMS
   WITHOUT SPOOL DYNPRO
   AND RETURN.

  CLEAR GD_SPOOL_NR.

*fetching spool id
  SELECT SINGLE RQIDENT INTO GD_SPOOL_NR  FROM TSP01
        WHERE RQCRETIME = ( SELECT MAX( RQCRETIME ) FROM TSP01 WHERE RQCLIENT = SY-MANDT
      AND RQOWNER = SY-UNAME ).

*converting spool content into pdf
  CLEAR :GD_BYTECOUNT .
  CALL FUNCTION 'CONVERT_ABAPSPOOLJOB_2_PDF'
    EXPORTING
      SRC_SPOOLID              = GD_SPOOL_NR
      NO_DIALOG                = ' '
    IMPORTING
      PDF_BYTECOUNT            = GD_BYTECOUNT
    TABLES
      PDF                      = PDF_OUTPUT
    EXCEPTIONS
      ERR_NO_ABAP_SPOOLJOB     = 1
      ERR_NO_SPOOLJOB          = 2
      ERR_NO_PERMISSION        = 3
      ERR_CONV_NOT_POSSIBLE    = 4
      ERR_BAD_DESTDEVICE       = 5
      USER_CANCELLED           = 6
      ERR_SPOOLERROR           = 7
      ERR_TEMSEERROR           = 8
      ERR_BTCJOB_OPEN_FAILED   = 9
      ERR_BTCJOB_SUBMIT_FAILED = 10
      ERR_BTCJOB_CLOSE_FAILED  = 11
      OTHERS                   = 12.

  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

* convert attachment
  CALL FUNCTION 'SX_TABLE_LINE_WIDTH_CHANGE'
    TABLES
      CONTENT_IN  = PDF_OUTPUT
      CONTENT_OUT = SOLI_TAB
    EXCEPTIONS
      OTHERS      = 4.

  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  CALL FUNCTION 'SCMS_BINARY_TO_XSTRING'
    EXPORTING
      INPUT_LENGTH = GD_BYTECOUNT
    IMPORTING
      BUFFER       = E_XSTRING
    TABLES
      BINARY_TAB   = SOLI_TAB
    EXCEPTIONS
      OTHERS       = 2.

  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE ID sy-msgid TYPE sy-msgty NUMBER sy-msgno
    WITH sy-msgv1 sy-msgv2 sy-msgv3 sy-msgv4.
  ENDIF.

  LT_SOLIX = CL_DOCUMENT_BCS=&amp;gt;XSTRING_TO_SOLIX( IP_XSTRING = E_XSTRING ).
"LT_SOLIX is the string format of pdf which is use in attachment of mail&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;III. Send Mail&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Try.
* create persistent send request
      SEND_REQUEST = CL_BCS=&amp;gt;CREATE_PERSISTENT( ).

* create and set document
      CLEAR: TEXT, TEXT[], CONTENT, LV_SUBJECT.

* Email Subject
      CLEAR: LV_SUBJECT.

        LV_SUBJECT =  'Subject of the mail.'.

      CLEAR: LV_SUBJ_FILE.
        lV_SUBJ_FILE = 'File_name'

* Body
      CLEAR : IT_CONTENTS[].

  "email body
  WA_CONTENTS-LINE = 'Greetings,'.
  APPEND WA_CONTENTS TO IT_CONTENTS.
  CLEAR : WA_CONTENTS.

  WA_CONTENTS-LINE = 'This is the mail body'.
  APPEND WA_CONTENTS TO IT_CONTENTS.
  CLEAR : WA_CONTENTS.
  
  APPEND WA_CONTENTS TO IT_CONTENTS.
  WA_CONTENTS-LINE = 'Thanks'.
  APPEND WA_CONTENTS TO IT_CONTENTS.
  CLEAR : WA_CONTENTS.
  
      DOCUMENT = CL_DOCUMENT_BCS=&amp;gt;CREATE_DOCUMENT(
      I_TYPE = 'HTM'
      I_TEXT = IT_CONTENTS
      I_SUBJECT = LV_SUBJECT ).

* add document to send request
      CALL METHOD SEND_REQUEST-&amp;gt;SET_DOCUMENT( DOCUMENT ).

** add attachment for pdf
      TRY.
          CALL METHOD DOCUMENT-&amp;gt;ADD_ATTACHMENT
            EXPORTING
              I_ATTACHMENT_TYPE    = 'PDF'
              I_ATTACHMENT_SUBJECT = LV_SUBJ_FILE
              I_ATT_CONTENT_HEX    = LT_SOLIX.
        CATCH cx_document_bcs.
      ENDTRY.


* add attachment for excel

      TRY.
          CALL METHOD DOCUMENT-&amp;gt;ADD_ATTACHMENT(
            i_attachment_type = 'XLS'
            i_attachment_subject = LV_SUBJ_FILE
            i_att_content_hex = binary_content ).
        CATCH cx_document_bcs.
      ENDTRY.


      data : MAIL_TO  TYPE AD_SMTPADR.

    
* create recipient (e-mail address)

            CLEAR: MAIL_TO.
            MAIL_TO = 'abc@xyz.com'.

            RECIPIENT = CL_CAM_ADDRESS_BCS=&amp;gt;CREATE_INTERNET_ADDRESS(
            MAIL_TO ).


*   add recipient with its respective attributes to send request
            CALL METHOD SEND_REQUEST-&amp;gt;ADD_RECIPIENT
              EXPORTING
                I_RECIPIENT = RECIPIENT
                I_EXPRESS   = 'X'.
*            i_copy      = 'X'.

* If wants to add CC mail id
            CLEAR: MAIL_TO.
            MAIL_TO = 'cc@xyz.com'.


            RECIPIENT = CL_CAM_ADDRESS_BCS=&amp;gt;CREATE_INTERNET_ADDRESS(
            MAIL_TO ).


*   add recipient with its respective attributes to send request
            CALL METHOD SEND_REQUEST-&amp;gt;ADD_RECIPIENT
              EXPORTING
                I_RECIPIENT = RECIPIENT
*            I_EXPRESS   = 'X'.
                i_copy      = 'X'.
         

* send document
      CALL METHOD SEND_REQUEST-&amp;gt;SEND(
      EXPORTING
      I_WITH_ERROR_SCREEN = 'X'
      RECEIVING
      RESULT = SENT_TO_ALL ).

      COMMIT WORK.

      MESSAGE 'Mail Send Successfully' TYPE 'S'.

      DATA:   BCS_EXCEPTION TYPE REF TO CX_BCS.

    CATCH CX_BCS INTO BCS_EXCEPTION.
      MESSAGE 'Mail Not sent' TYPE 'E'.


  ENDTRY.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/basic-code-s-of-abap/ba-p/14231152"/>
    <published>2025-09-30T06:38:10.002000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467</id>
    <title>Customer &amp; Partner Roundtable for SAP BTP ABAP Environment #28</title>
    <updated>2025-09-30T11:14:17.098000+02:00</updated>
    <author>
      <name>iwona_hahn</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4326</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1860394371" id="toc-hId-1890871559"&gt;&lt;STRONG&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;üëâ&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;The call for contributions for one of the upcoming roundtables is open!&amp;nbsp;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;If you want to show a demo or share a use case scenario for SAP BTP ABAP Environment, send us an&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="mailto:sap_btp_abap_environment@sap.com" target="_blank" rel="noopener nofollow noreferrer"&gt;email&lt;/A&gt;&amp;nbsp;and we will get back to you.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId-1534798147" id="toc-hId-1565275335"&gt;Introduction&lt;/H2&gt;&lt;DIV&gt;&lt;SPAN class=""&gt;A&lt;/SPAN&gt;&lt;SPAN class=""&gt;s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A href="https://www.sap.com/products/technology-platform/abap/environment.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN class=""&gt;SAP&amp;nbsp;BTP&amp;nbsp;ABAP&amp;nbsp;environment (aka Steampunk)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/A&gt;and ABAP Cloud&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;became&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;more popular&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;inside and outside of SAP, there is a high demand for rolling out the latest product news and updates, asking questions, and showing demos.&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;üí°&lt;/span&gt;&lt;/SPAN&gt;&amp;nbsp;You can find the slides presented, recordings, and further references from the previous roundtables in this&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/iwonahahn/SAP-BTP-ABAP-Environment-Roundtable/tree/main" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub repository&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_0-1751374366410.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281320iF5290A011527C9B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_0-1751374366410.jpeg" alt="iwona_hahn_0-1751374366410.jpeg" /&gt;&lt;/span&gt;&lt;H2 id="toc-hId-1338284642" id="toc-hId-1368761830"&gt;Meeting Information&lt;BR /&gt;&lt;BR /&gt;&lt;/H2&gt;&lt;STRONG&gt;When:&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;October 30&lt;/SPAN&gt;&lt;/STRONG&gt;, 2:00 - 3:00 PM CET&amp;nbsp; ‚Äì &lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;Zoom Meeting&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;STRONG&gt;please register&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in advance)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Who:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;All interested&amp;nbsp;&lt;STRONG&gt;customers, partners,&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;stakeholders&lt;/STRONG&gt;&amp;nbsp;are invited to join this roundtable&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP ABAP team&lt;/STRONG&gt;:&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4296" target="_blank"&gt;Frank Jentsch&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Lead for SAP BTP ABAP&amp;nbsp;Environment)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/4326" target="_self"&gt;&lt;SPAN class=""&gt;Iwona Hahn&lt;/SPAN&gt;&lt;/A&gt;&amp;nbsp;&lt;SPAN class=""&gt;(Product Management)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;Jan Ole Skirke (Development Expert)&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Preliminary Agenda:&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Product update for SAP BTP ABAP Environment&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Downtime-optimized hotfix collection updates for SAP BTP ABAP Environment &lt;STRONG&gt;including demo&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Q&amp;amp;A&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;SPAN&gt;Looking forward to meeting you!&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;A href="https://sap-se.zoom.us/meeting/register/BNTQg36rTgWstLMzArws0g" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iwona_hahn_1-1751374366424.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/281321i39537B5D388BE6C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="iwona_hahn_1-1751374366424.png" alt="iwona_hahn_1-1751374366424.png" /&gt;&lt;/span&gt;&lt;/A&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Check out‚ÄØour&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://pages.community.sap.com/topics/btp-abap-environment" target="_blank" rel="noopener noreferrer"&gt;SAP Business Technology ABAP Environment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;page in SAP Community&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;for&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;product&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;updates&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;upcoming events.&lt;/SPAN&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-amp-partner-roundtable-for-sap-btp-abap-environment-28/ba-p/14231467"/>
    <published>2025-09-30T11:14:17.098000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-based-on-grouping-tax-number-is-mandatory/ba-p/14231728</id>
    <title>SAP MDG: Based on Grouping, Tax Number is Mandatory</title>
    <updated>2025-09-30T15:37:27.383000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;üôÇ&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note: This blog does not include execution screenshots.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This post outlines a custom development approach in &lt;STRONG&gt;SAP Master Data Governance (MDG) to make the Tax Number field mandatory for specific Groupings. The logic is implemented using the enhancement framework via BADI: &lt;CODE&gt;USMD_RULE_SERVICE, specifically through the method CHECK_ENTITY.&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisite: A working knowledge of BADI &lt;CODE&gt;USMD_RULE_SERVICE and ABAP development is required to follow this implementation.&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;!--   StartFragment    --&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Development Details&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Target Groupings: &lt;CODE&gt;ZSGP, ZSGC&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Class: &lt;CODE&gt;ZMDGS_MSG_CLASS&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Number: &lt;CODE&gt;001&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Type: &lt;CODE&gt;E&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Text: &lt;CODE&gt;Tax Number is Mandatory !!!&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BADI Method Implemented: &lt;CODE&gt;IF_EX_USMD_RULE_SERVICE~CHECK_ENTITY&amp;nbsp;&lt;/CODE&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;The validation logic is written directly in the method &lt;CODE&gt;CHECK_ENTITY&lt;/CODE&gt;&lt;P&gt;&lt;!--   EndFragment    --&gt;&lt;/P&gt;&lt;P&gt;This ensures that when the specified groupings are selected, the system enforces the presence of a Tax Number and raises a custom message if it's missing.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Code:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD if_ex_usmd_rule_service~check_entity.
    CALL METHOD io_model-&amp;gt;read_entity_data_all
      EXPORTING
        i_fieldname    = 'BP_HEADER'            
        if_active      = abap_false            
        i_crequest     = id_crequest            " Change Request
      IMPORTING
        et_data_entity = DATA(lt_data).        " Data for Entity Types
    .
    READ TABLE lt_data INTO DATA(ls_data) WITH KEY usmd_entity = 'BP_HEADER' usmd_entity_cont = ' ' struct = 'KATTR'.
    ASSIGN ls_data-r_t_data-&amp;gt;* TO FIELD-SYMBOL(&amp;lt;lt_data&amp;gt;).
    LOOP AT &amp;lt;lt_data&amp;gt; ASSIGNING FIELD-SYMBOL(&amp;lt;ls_data&amp;gt;).
      ASSIGN COMPONENT 'BU_GROUP' OF STRUCTURE &amp;lt;ls_data&amp;gt; TO FIELD-SYMBOL(&amp;lt;lv_group&amp;gt;).
      IF &amp;lt;lv_group&amp;gt; IS ASSIGNED AND
         &amp;lt;lv_group&amp;gt; EQ 'ZSGP' OR
         &amp;lt;lv_group&amp;gt; EQ 'ZSGC'.
        READ TABLE lt_data INTO ls_data WITH KEY usmd_entity = 'BP_HEADER' usmd_entity_cont = 'BP_TAXNUM' struct = 'KATTR'.
        IF sy-subrc &amp;lt;&amp;gt; 0.
          et_message = VALUE #( ( msgid = 'ZMDGS_MSG_CLASS' msgty = 'E' msgno = '001' ) ).
        ENDIF.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-based-on-grouping-tax-number-is-mandatory/ba-p/14231728"/>
    <published>2025-09-30T15:37:27.383000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-validation-no-special-characters-in-account-holder-field/ba-p/14232445</id>
    <title>SAP MDG: Validation - No Special Characters in Account Holder Field</title>
    <updated>2025-10-01T11:30:00.034000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;Hi&lt;STRONG&gt; SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great&lt;SPAN&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;üôÇ&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01: This blog does not include execution screenshots.&lt;BR /&gt;Note 02: The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This post outlines a custom development approach in SAP Master Data Governance (MDG) to restrict the use of special characters in the Account Holder field. The validation logic is implemented using the enhancement framework via BADI: &lt;STRONG&gt;&lt;CODE&gt;USMD_RULE_SERVICE, specifically through the method CHECK_ENTITY. This ensures data consistency and compliance with formatting standards during master data creation and change processes.&lt;/CODE&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisite: A working knowledge of BADI&lt;SPAN&gt;&amp;nbsp;&lt;CODE&gt;USMD_RULE_SERVICE and ABAP development is required to follow this implementation.&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Development Details&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Message Class:&lt;SPAN&gt;&amp;nbsp;&lt;CODE&gt;ZMDGS_MSG_CLASS&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Number:&lt;SPAN&gt;&amp;nbsp;&lt;CODE&gt;002&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Type:&lt;SPAN&gt;&amp;nbsp;&lt;CODE&gt;E&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Text:&lt;SPAN&gt;&amp;nbsp;&lt;CODE&gt;The Account Holder field must not contain any special characters&lt;BR /&gt;&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BADI Method Implemented:&lt;SPAN&gt;&amp;nbsp;&lt;CODE&gt;IF_EX_USMD_RULE_SERVICE~CHECK_ENTITY&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;The validation logic is written directly in the method&amp;nbsp;CHECK_ENTITY&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;P&gt;This ensures that when the Account Holder field is entered, the system validates the content to ensure it does not contain any special characters, and raises a custom message if invalid characters are found&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Code:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD if_ex_usmd_rule_service~check_entity.
   DATA: lt_data        TYPE usmd_ts_data_entity,
         lt_bank_data   TYPE REF TO data,
         lt_msg         TYPE usmd_t_message,
         ls_msg         TYPE usmd_s_message,
         lv_fieldname   TYPE bu_koinh,
         lv_acc_holder TYPE char20.
   FIELD-SYMBOLS:
     &amp;lt;lt_bank&amp;gt;        TYPE SORTED TABLE,
     &amp;lt;ls_bank&amp;gt;        TYPE any,
     &amp;lt;lv_acc_holder&amp;gt; TYPE any.
   io_model-&amp;gt;get_changed_fields(
     IMPORTING	
       et_entity_fieldname =  DATA(lt_fieldname)               
   )
   .
   LOOP AT lt_fieldname INTO DATA(ls_fieldname).
     lv_fieldname = ls_fieldname-fieldname.
     IF lv_fieldname = 'KOINH'.
       lv_acc_holder = lv_fieldname.
     ENDIF.
   ENDLOOP.
   IF lv_acc_holder = 'KOINH'.
     io_model-&amp;gt;read_entity_data_all(
      EXPORTING
        i_fieldname      =       'BP_HEADER'           " Financial MDM: Field Name
        if_active        =         abap_false          " Financial MDM: General Indicator
    i_crequest       =            id_crequest          " Change Request
      IMPORTING
    et_message       =        lt_msg          " Messages
        et_data_entity   =      lt_data            " Data for Entity Types
    ).
     lt_bank_data = VALUE #( lt_data[ usmd_entity = 'BP_HEADER' usmd_entity_cont = 'BP_BKDTL' struct = 'KATTR' ]-r_t_data  OPTIONAL ).
     IF lt_bank_data IS NOT INITIAL.
       ASSIGN lt_bank_data-&amp;gt;* TO &amp;lt;lt_bank&amp;gt;.
       IF &amp;lt;lt_bank&amp;gt; IS ASSIGNED.
         LOOP AT &amp;lt;lt_bank&amp;gt; ASSIGNING &amp;lt;ls_bank&amp;gt;.
           ASSIGN COMPONENT 'KOINH' OF STRUCTURE &amp;lt;ls_bank&amp;gt; TO &amp;lt;lv_acc_holder&amp;gt;.
           IF &amp;lt;lv_acc_holder&amp;gt; IS ASSIGNED AND
              &amp;lt;lv_acc_holder&amp;gt; IS NOT INITIAL AND                        
             &amp;lt;lv_acc_holder&amp;gt; CA '~`!@#$%^&amp;amp;*()-_+={}[]|\:;"&amp;lt;,&amp;gt;.?/'.
             et_message = VALUE #( BASE et_message ( fieldname = 'KOINH' msgid = 'ZMDGS_MESSAGE_CLS' msgno = '002' msgty = 'E' ) ).
           ENDIF.
         ENDLOOP.
       ENDIF.
     ENDIF.
   ENDIF.
 ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-validation-no-special-characters-in-account-holder-field/ba-p/14232445"/>
    <published>2025-10-01T11:30:00.034000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/exploring-cds-based-analytical-models-with-the-relation-explorer-analytical/ba-p/14229070</id>
    <title>Exploring CDS based Analytical Models with the Relation Explorer - analytical view/perspective</title>
    <updated>2025-10-01T16:39:40.313000+02:00</updated>
    <author>
      <name>martin_mayer</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191669</uri>
    </author>
    <content>&lt;P&gt;Relation explorer &lt;STRONG&gt;analytical view / analytical perspective&lt;/STRONG&gt; makes it easy to get an&amp;nbsp;overview of the analytical model with very less clicks.&amp;nbsp;No need to open all the views to understands details.&lt;/P&gt;&lt;P&gt;We start small , looking to a branch of a star schema , &lt;STRONG&gt;dimension&lt;/STRONG&gt; Connection (&amp;nbsp;/DMO/ANA_I_Connection ) which is part of the flight data model.&amp;nbsp; After calling the relation explorer we see the Relation Explorer Tab in the below section of the screenshot.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_1-1759323592595.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322013iB6966D0C878BC05F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="martin_mayer_1-1759323592595.png" alt="martin_mayer_1-1759323592595.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Relation Explorer tab shows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;in the left pane the associations from the dimension to other CDS views &lt;U&gt;over all levels&lt;/U&gt; are&amp;nbsp;visualizes . It starts fully expanded!&lt;BR /&gt;next to the CDS view name we see the view type. E.g. /DMO/ANA_I_CARRIER is of type [Dimension]&lt;/LI&gt;&lt;LI&gt;in the right pane one can see all the elements of current view. As&amp;nbsp;/DMO/ANA_I_Connection is selected all elements of this dimension are displayed.&lt;UL&gt;&lt;LI&gt;One can select (single click) any other view e.g. /DMO/ANA_I_CARRIER and the right pane get updated with the elements of that view.&lt;/LI&gt;&lt;LI&gt;double clicking the view will directly open the view&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;the right pane displays all elements grouped by roles.&lt;UL&gt;&lt;LI&gt;In this example we have 2 keys and e.g. expanding AirlineID show label and additional details about association and InfoObject. In case of compounded parent we would have seen the Parent element.&lt;/LI&gt;&lt;LI&gt;double clicking AirlineID highlight the element in the source ( see line 21 )&lt;/LI&gt;&lt;LI&gt;[Text] gives a hint that AirlineID has text,&amp;nbsp;this is missing for ConnetionID -&amp;gt; no Text supported&lt;/LI&gt;&lt;LI&gt;Attributes list all dimension attributes. Last one, DistanceUnit is a Unit element.&lt;/LI&gt;&lt;LI&gt;the Unit group show all unit related elements.&lt;/LI&gt;&lt;LI&gt;other group are shown if relevant.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;One can also start the analytical Relation Explorer based on query or cube view.&lt;BR /&gt;In both cases the cube view is opened and visualizes the cube with all associations .&lt;/P&gt;&lt;P&gt;We change focus and look to the example of a &lt;STRONG&gt;query&lt;/STRONG&gt;&amp;nbsp;- starting relation explorer shows the cube definition including dimension Connection from above.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_0-1759325206609.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322016i9D9521200352EC39/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="martin_mayer_0-1759325206609.png" alt="martin_mayer_0-1759325206609.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;with one view&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;in the left pane we get all associations visualizes. View names are shown with the view types&lt;/LI&gt;&lt;LI&gt;in the right pane we can see all 13 dimensions of the cube and get if dimension support Text, have Attributes or Hierarchies&lt;UL&gt;&lt;LI&gt;from 1st screenshot we already know that Text, Attributes and Hierarchies are available for AirlineID&lt;/LI&gt;&lt;LI&gt;expanding ConnectionID show that it is compounded to AirlineID&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;we see all 5 measures with additional details like aggregation method and unit&lt;/LI&gt;&lt;LI&gt;with " Units (2) " we see the unit related dimensions. This section only list those dimension that are unit relevant.&amp;nbsp; Expanding the dimension like CurrencyCode lists all related measures.&amp;nbsp;&lt;BR /&gt;( Both dimension are also listed in dimension section. )&lt;/LI&gt;&lt;LI&gt;for time based dimension one can directly understand the base dimension and wherefrom it is derived without looking into the source ( see below snippet with FiscalYearMonth )&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_0-1759322874979.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322010i53240695CD5E5697/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="martin_mayer_0-1759322874979.png" alt="martin_mayer_0-1759322874979.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;How to start the &lt;A href="https://help.sap.com/docs/abap-cloud/abap-development-tools-user-guide/relation-explorer" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Relation Explorer&lt;/STRONG&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_1-1758891540834.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320499i4A0D737B505A0062/image-size/medium?v=v2&amp;amp;px=400" role="button" title="martin_mayer_1-1758891540834.png" alt="martin_mayer_1-1758891540834.png" /&gt;&lt;/span&gt;call relation explorer to see the view&lt;/P&gt;&lt;P&gt;right click somewhere in the CDS view&amp;nbsp;&lt;/P&gt;&lt;P&gt;(&amp;nbsp;in case of CDS view type cube, dimension or query the analytical view is the default view )&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If the view is not shown, choose &lt;STRONG&gt;Configure Context&lt;/STRONG&gt; and activate it.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;one can switch any time to different perspective / context if needed&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="martin_mayer_1-1759325661029.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322021i11B35C6E5358E291/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="martin_mayer_1-1759325661029.png" alt="martin_mayer_1-1759325661029.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Release Info:&lt;/STRONG&gt;&amp;nbsp; analytical view / analytical perspective started with&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;BW/4HANA 2023 FP 04&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;S/4HANA Public Cloud and Privat Cloud OP2023&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/exploring-cds-based-analytical-models-with-the-relation-explorer-analytical/ba-p/14229070"/>
    <published>2025-10-01T16:39:40.313000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-validation-notes-mandatory/ba-p/14232849</id>
    <title>SAP MDG: Validation - Notes Mandatory</title>
    <updated>2025-10-01T17:58:56.527000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi&amp;nbsp;SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great&lt;SPAN&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;üôÇ&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01: This blog does not include execution screenshots.&lt;BR /&gt;Note 02: The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;!--  StartFragment   --&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This post outlines a custom development approach in SAP Master Data Governance (MDG) to enforce mandatory entry of &lt;EM&gt;Notes&lt;/EM&gt; during master data processes. The validation logic is implemented using the enhancement framework via:&lt;BR /&gt;&lt;STRONG&gt;BADI:&lt;CODE&gt;USMD_RULE_SERVICE&lt;/CODE&gt;&lt;/STRONG&gt;, specifically through the method&amp;nbsp;&lt;STRONG&gt;&lt;CODE&gt;CHECK_ENTITY&lt;/CODE&gt;&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This ensures that users provide the required notes, thereby improving data completeness, auditability, and compliance during master data creation and change activities.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Code:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA:
  lv_cr_number TYPE usmd_crequest,
  lv_crtype    TYPE usmd_crequest_type,
  lv_process   TYPE usmd_process.

DATA(lo_context) = cl_usmd_app_context=&amp;gt;get_context( ).

IF lo_context IS BOUND.
  CALL METHOD lo_context-&amp;gt;get_attributes
    IMPORTING
      ev_crequest_id   = lv_cr_number
      ev_crequest_type = lv_crtype
      ev_process       = lv_process.
ENDIF.

IF lv_crtype EQ 'ZSUCRTYPE'.
  DATA(lv_s_notes) = cl_usmd_conv_som_gov_api=&amp;gt;get_instance( )-&amp;gt;get_notes( ).
       IF lv_s_notes IS INITIAL.
          APPEND cl_usmd_message=&amp;gt;convert_text2message(
          EXPORTING
          iv_message_text = 'Please Maintain Notes, It''s Mandatory !!!'.
          iv_message_type = 'E' ) to et_message.
       ENDIF.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;!--  EndFragment   --&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-validation-notes-mandatory/ba-p/14232849"/>
    <published>2025-10-01T17:58:56.527000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901</id>
    <title>RAP Using Custom Entity with load multiple data using Pagination and Preview using UI annotations</title>
    <updated>2025-10-03T06:01:53.175000+02:00</updated>
    <author>
      <name>RakeshZore</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1759317</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This blog covers RAP development using a custom entity, showcasing data with UI annotations, and surpassing the standard SAP data preview limit through the use of pagination.&lt;/P&gt;&lt;P&gt;Lets Start....&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create a custom entity with the fields that need to be displayed or sent to the frontend.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom entity for fetching data'
@ObjectModel.query.implementedBy: 'ABAP:ZCL_IMPLEMENT_EXT' //This is the class where the data is handle and processed
@UI:{ headerInfo:{  typeName: 'RAP Learn',
                             typeNamePlural: 'RAP Learn',
                             title: { label: 'RAP Learn',
                                       type: #STANDARD,
                                       value: 'component'
                                     },
                             description: { value: 'obj_desc' },
                                     typeImageUrl: 'sap-icon://activity-items' //Show Icon image on header of object layout
                           }
               }
@Search.searchable: true //for Searching the data from the output which is also need to implement in the implemented class above 
define root custom entity ZCE_MAIN
{
      .facet   : [{
                      id: 'ID1',
                      purpose: #STANDARD,
                      type: #IDENTIFICATION_REFERENCE,
                      label : 'Component detail',
                      position: 10
                    },
                    {
                id: 'FG1',
                purpose: #STANDARD,
                type: #FIELDGROUP_REFERENCE,
                label : 'Validity Date',
                targetQualifier: 'FG1',
                position: 10
              }]
               : {  selectionField: [{ position: 10 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                            entity : { name: 'ZIV_F4MATNR' , element: 'matnr'   } ,
                            additionalBinding: [{ localElement: 'werks', element: 'werks' },
                                                         {  localElement: 'stlan' , element: 'stlan' },
                                                         {  localElement: 'stlal' , element: 'stlal' }]}]
      @Consumption.filter.selectionType: #SINGLE
  key matnr       : matnr;
               : {  selectionField: [{ position: 20 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                      entity : { name: 'ZIV_F4WERKS', element: 'werks' }
                                                         }]
      @Consumption.filter.selectionType: #SINGLE
  key werks       : werks_d;
               : {  selectionField: [{ position: 30 }]}
      @Consumption.filter.mandatory: true
      @Consumption.valueHelpDefinition: [{
                entity : { name: 'ZIV_F4STLAN' , element: 'stlan' }
                                                   }]
      @Consumption.filter.selectionType: #SINGLE
  key stlan       : stlan;
               : {  selectionField: [{ position: 40 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
  key stlal       : stlal;
               : { lineItem: [{ position: 10 }], identification: [{ position: 10 }]}
      @EndUserText.label: 'Level'
  key bom_level   : abap.dec( 2, 0 );
               : { lineItem: [{ position: 20 }], identification: [{ position: 20 }]}
      @EndUserText.label: 'Component'
      .defaultSearchElement: true
  key component   : idnrk;
               : {  selectionField: [{ position: 50 }]}
      @Consumption.filter.mandatory: true
      @Consumption.filter.selectionType: #SINGLE
      @EndUserText.label: 'Date'
      zdate       : abap.dats;
               : { lineItem: [{ position: 30, cssDefault: { width: '13rem' }  }], identification: [{ position: 30 }]}
      @EndUserText.label: 'Object Description'
      .defaultSearchElement: true
      obj_desc    : maktx;
               : { lineItem: [{ position: 35, cssDefault: { width: '8rem' } }], identification: [{ position: 35 }]}
      @EndUserText.label: 'Quantity'
      comp_qty    : kmpmg_bi;
               : { lineItem: [{ position: 45 }], identification: [{ position: 45 }]}
      @EndUserText.label: 'Unit'
      comp_unit   : kmpme;
               : { lineItem: [{ position: 55 }], fieldGroup: [{ position: 10 , qualifier: 'FG1', label: 'Valid From' }]}
      @EndUserText.label: 'Valid from'
      valid_from  : datuv_bi;
               : { lineItem: [{ position: 65 }], fieldGroup: [{ position: 11 , qualifier: 'FG1', label: 'Valid To' }]}
      @EndUserText.label: 'Valid to'
      valid_to    : datub_bi;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;While using the RAP framework, metadata extensions cannot be created for custom entities. Therefore, annotations must be directly included in the custom entity code itself for UI purposes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 : Create an implementation class for the custom entity mentioned above and name it&amp;nbsp;ZCL_IMPLEMENT_EXT&amp;nbsp;or use the custom name specified in the second line of the code.&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_implement_ext DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC
  SHARED MEMORY ENABLED .

  PUBLIC SECTION.
    DATA : et_final TYPE TABLE OF zce_main.
    INTERFACES if_rap_query_provider .

  PROTECTED SECTION.
  PRIVATE SECTION.

ENDCLASS.



CLASS ZCL_IMPLEMENT_EXT IMPLEMENTATION.

  METHOD if_rap_query_provider~select.
    CASE io_request-&amp;gt;get_entity_id( ).
      WHEN 'ZCE_MAIN'.
        TRY.
            DATA(lv_skip) = io_request-&amp;gt;get_paging( )-&amp;gt;get_offset( ). "gets the skip part from URL which means number of data to be skipped and default is 0 but later on it gets add by 20... till last data not get fetched
            DATA(lv_top) = io_request-&amp;gt;get_paging( )-&amp;gt;get_page_size( ). "gets the top part from URL which means number of data required and default is 20
            DATA(lt_filter) = io_request-&amp;gt;get_filter( )-&amp;gt;get_as_ranges( ). "gets the input value which is either pass in our filters or when click on single data line item
           
          CATCH cx_rap_query_filter_no_range.
            "handle exception
        ENDTRY.

        IF lv_top &amp;lt; 0.
*********** Start Logic
"Put logic for single data fetch in which it will trigger when you are going for object page while clicking on single item from display table
"Take inputs from LT_filter table for sending that particular data click 
*********** End Logic
            IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
              io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ).
            ENDIF.
            IF io_request-&amp;gt;is_data_requested(  ).
              io_response-&amp;gt;set_data( et_final ).
            ENDIF.
        ELSE.
*********** Start Logic
"Put logic for actual multiple data fetch in which it will trigger when you click go button or any sort of actions like search, sort, excel download....
"Take inputs from LT_filter table for required data fetch 
*********** End Logic
          ENDIF.
********** Searching Logic
        DATA(lv_search) = io_request-&amp;gt;get_search_expression( ). "gets the value from Search field in the UI
          IF lv_search IS NOT INITIAL.
            DATA lt_search LIKE et_final.

            lv_search = |*{ lv_search }*|.
            lt_search = VALUE #( BASE lt_search
                          FOR ls_f IN et_final
                          WHERE ( field1 CP lv_search OR  "Put required field to be search instead of field1,field2.....
                                  field2 CP lv_search  OR
                                  field3 cp lv_search OR
                                  field4 cp lv_search OR                                                                
                                                       ( ls_f ) ).
            et_final = lt_search.
          ENDIF.
***********End of Searching logic
***********Sorting logic
        DATA(lt_sort_elements) = io_request-&amp;gt;get_sort_elements( ). "gets the detail table of ascending and descending of field we wants to be sorted from UI
          IF lt_sort_elements IS NOT INITIAL.
            LOOP AT lt_sort_elements INTO DATA(ls_sort).
              IF ls_sort-descending &amp;lt;&amp;gt; 'X'.
                SORT et_final BY (ls_sort-element_name) ASCENDING.
              ELSE.
                SORT et_final BY (ls_sort-element_name) DESCENDING.
              ENDIF.
            ENDLOOP.
          ENDIF.
**********End of sorting logic
**********Paging- logic for loading more data wrt Standard set amount of data
          IF lv_top IS NOT INITIAL OR lv_skip IS NOT INITIAL.
            /iwbep/cl_mgw_data_util=&amp;gt;paging( EXPORTING is_paging = VALUE #( top  = lv_top
                                                                            skip = lv_skip )
                                             CHANGING  ct_data   = et_final ).
          ENDIF.
*********End of Pagination

          IF io_request-&amp;gt;is_total_numb_of_rec_requested( ).
            io_response-&amp;gt;set_total_number_of_records( lines( et_final ) ). "set number of initial data to display overall
          ENDIF.

          IF io_request-&amp;gt;is_data_requested(  ).
            io_response-&amp;gt;set_data( et_final ). "Set data into the entity
          ENDIF.

        ENDIF.
    ENDCASE.
  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;The aforementioned class plays a crucial role as it encapsulates the entire logic for data processing, including searching, sorting, and most importantly, setting data for our custom entity.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Create Service Definition of the Custom entity&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service definition, simply right-click the custom entity in the Project Explorer, click 'New Service Definition', fill in the required inputs, and your service definition will be created.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service definition'
define service ZSD_MAIN {
  expose ZCE_MAIN;
  expose ZIV_F4MATNR; "This is for ValueHelp Definition, and it's okay not to expose it.
  expose ZIV_F4WERKS;
  expose ZIV_F4STLAN;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;Let's take a look at one of the interface views of the ValueHelpDefinition.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Interface view for ValueHelpDefinition - MATNR'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity ZIV_F4MATNR
  as select distinct from mast
    left outer join       makt on makt.matnr = mast.matnr
{
         : {  selectionField: [{ position: 10 }] , lineItem: [{ position: 10 }]}
      @EndUserText.label: 'Material No'
  key mast.matnr,
      @Consumption.filter.hidden: true
  key mast.werks,
      @Consumption.filter.hidden: true
  key mast.stlan,
      @Consumption.filter.hidden: true
  key mast.stlal,
      @Consumption.filter.hidden: true
         : {   lineItem: [{ position: 20 }]}
      @EndUserText.label: 'Material Desc'
      makt.maktx
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4 : Create a Service Binding for the aforementioned service definition.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To create a service binding, simply right-click the created service definition in the Project Explorer, click 'New Service Binding', fill in the required inputs, and your service binding will be created. While creating the Service Binding, I selected OData V2 - UI. Then, activate and publish the service. To view the UI output, you can use the Preview option in Eclipse to see the output as shown in the image below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-02 211818.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322447iD800178661F5E9F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-02 211818.png" alt="Screenshot 2025-10-02 211818.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In conclusion, using RAP with custom entities and pagination facilitates efficient data handling. With UI annotations, you can easily preview and refine the user interface. We hope this guide has been helpful. Stay tuned for more tips!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note: This program is created for a remote system. For cloud environments, you can use a service consumption model or access data through a remote system API in the implementation class.&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/rap-using-custom-entity-with-load-multiple-data-using-pagination-and/ba-p/14233901"/>
    <published>2025-10-03T06:01:53.175000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696</id>
    <title>Collective Search Help Using Abstract Entity in RAP</title>
    <updated>2025-10-03T11:51:37.840000+02:00</updated>
    <author>
      <name>sanjay22</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1535416</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Collective Value Help with Abstract Entity in SAP RAP&lt;/SPAN&gt;&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;SPAN class=""&gt; you can define a Collective Search Help&amp;nbsp;that combines multiple elementary &lt;/SPAN&gt;&lt;SPAN class=""&gt;search&lt;/SPAN&gt;&lt;SPAN class=""&gt; helps. This allows users to choose between different search paths and fetch values from various sources in a single dialog. The same concept is available in SAP Fiori through a Collective Value Help&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;It is implemented using an Abstract &lt;/SPAN&gt;&lt;SPAN class=""&gt;Entity that&lt;/SPAN&gt;&lt;SPAN class=""&gt; aggregates multiple elementary value helps and defines potential field mappings&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An Abstract Entity does not hold data. Instead, it acts as a container for the Collective Search Help. This means it only groups together multiple elementary value helps and defines how they are mapped, without storing any business data itself.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The Collective Value Help shall be annotated with &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.collectiveValueHelp.for.element&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; pointing to the field for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The referenced field must be assigned at least one elementary value help using the annotation &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;@Consumption.valueHelpDefinition.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;This setup ensures that your Collective Value Help aggregates multiple search options seamlessly for end-users.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Only specific keywords are allowed in a collective value help:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity.name&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Entity. Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding local Element&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;additional Binding. Element qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Qualifier&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create a&amp;nbsp;Abstract Entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abstract entity'
@ObjectModel.supportedCapabilities: [ #COLLECTIVE_VALUE_HELP ]
@ObjectModel.collectiveValueHelp.for.element: 'Country'
define abstract entity ZSM_ABSTRACT_CDS_ENTITY

{
  @Consumption.valueHelpDefinition: [
  {
       entity: { name: 'I_Country' },
       label: 'Search by Country'
  },
   {
      entity: {
      name: 'I_RegionVH',
      element: 'Country'
  },
  additionalBinding: [{ localElement: 'Region', element: 'Region' }],
  label   : 'Search by Region',
  qualifier: 'Regionsearch'
   }
   ]
  Country : land1;
  Region  : regio;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758879930864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320249i89C882018112B8B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758879930864.png" alt="sanjay22_0-1758879930864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;@ObjectModel.CollectiveValueHelp.for.element &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Üí&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;Specifies the field (Country) for which the collective value help is defined.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;The Abstract Entity (&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;zsm_abstract_cds_entity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;) &amp;nbsp;acts as a container, not holding data itself. acts as a Consumption value Help Definition search paths Defines multiple Search by Country (default value help) (alternative path with additional Search by Region binding to Region.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;@&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Consumption.valueHelpDefintion &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;‚Üí Defines multiple search paths :&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Country( default Value Help )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Search by Region( Alternate path with additional binding to Region )&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Create an Interface View&lt;/SPAN&gt;&lt;SPAN class=""&gt; on Database Table&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880109210.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320250i35C6CA50B680760A/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880109210.png" alt="sanjay22_0-1758880109210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Assign a Value Help for the Country field inside a &lt;/SPAN&gt;&lt;SPAN class=""&gt;Metadata Extension&lt;/SPAN&gt;&lt;SPAN class=""&gt; CDS.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880183958.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320251iCD87357B0371C953/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880183958.png" alt="sanjay22_1-1758880183958.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Here Country field uses Collective search &lt;/SPAN&gt;&lt;SPAN class=""&gt;help( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_I_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL) &lt;/SPAN&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;SPAN class=""&gt; binding to &lt;/SPAN&gt;&lt;SPAN class=""&gt;Region&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the above Interface View.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880250069.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320252i495BFA8BE3403846/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880250069.png" alt="sanjay22_2-1758880250069.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Projection View for the Above Interface view&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_0-1758880409200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320255iBBBDF9FB40C44CFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_0-1758880409200.png" alt="sanjay22_0-1758880409200.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Behavior Definition for the Interface View&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_1-1758880499246.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320256i0DAD0BA5C278B5F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_1-1758880499246.png" alt="sanjay22_1-1758880499246.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Service Binding &lt;/SPAN&gt;&lt;SPAN class=""&gt;( OData&lt;/SPAN&gt;&lt;SPAN class=""&gt; ‚Äì V&lt;/SPAN&gt;&lt;SPAN class=""&gt;4 )&lt;/SPAN&gt;&lt;SPAN class=""&gt; to expose the Entity &lt;/SPAN&gt;&lt;SPAN class=""&gt;( ZSM&lt;/SPAN&gt;&lt;SPAN class=""&gt;_C_&lt;/SPAN&gt;&lt;SPAN class=""&gt;TRAVEL )&lt;/SPAN&gt; &lt;SPAN class=""&gt;to the front end.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_2-1758880554639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320257i45126292733C4314/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_2-1758880554639.png" alt="sanjay22_2-1758880554639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;F4 for Country Field ‚Äì Search by Country&lt;/SPAN&gt;&lt;SPAN class=""&gt;, Search by region two value help screen.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sanjay22_3-1758880593273.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320258i131D140173B03D26/image-size/large?v=v2&amp;amp;px=999" role="button" title="sanjay22_3-1758880593273.png" alt="sanjay22_3-1758880593273.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/collective-search-help-using-abstract-entity-in-rap/ba-p/14228696"/>
    <published>2025-10-03T11:51:37.840000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872</id>
    <title>ABAP RAP : Excel upload through custom action popup ( No UI5 Extension , No Object Page workaround )</title>
    <updated>2025-10-05T00:52:51.623000+02:00</updated>
    <author>
      <name>Ramjee_korada</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10276</uri>
    </author>
    <content>&lt;P&gt;A frequent business requirement involves enabling mass changes to business objects via&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Excel uploads&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;executed through a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;custom action popup&lt;/STRONG&gt;. Historically, achieving this functionality has necessitated various workarounds, often involving&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 extensions&lt;/STRONG&gt;,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;third-party solutions&lt;/STRONG&gt;, or&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Object Page manipulations&lt;/STRONG&gt;, all of which present specific implementation challenges.&lt;/P&gt;&lt;P&gt;The existing workaround approaches present several drawbacks:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Custom UI Extensions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Require specialized&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;UI5 development expertise&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Third-Party Solutions:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Introduce risks related to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;licensing compliance&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and potential&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;security vulnerabilities&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Object Page Manipulations:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Involve complex, multi-step processes, such as creating a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;dummy object page&lt;/STRONG&gt;, facilitating file upload, temporarily&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;storing the file data in a table field&lt;/STRONG&gt;, and requiring a final user action (a button press) to initiate processing. This temporary data storage is often&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;unnecessary&lt;/STRONG&gt;, complicating the data model.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, SAP has recently introduced&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;ABAP / CAP annotations&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;that offer a cloud-ready solution, potentially&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;eliminating approximately 95% of the development effort&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;typically associated with integrating an Excel upload into the backend. This innovation allows developers to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;prioritize implementing core business logic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;over developing reusable technical artifacts.&lt;/P&gt;&lt;P&gt;I will now detail the implementation steps.&lt;/P&gt;&lt;P&gt;A business requirement to manage &lt;STRONG&gt;mass processing listings for a library&lt;/STRONG&gt; was selected to demonstrate this use case. The implementation requires several steps, with steps 3 through 6 being the &lt;STRONG&gt;special or additional configurations&lt;/STRONG&gt; needed, while all others are considered routine.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759618459647.png" style="width: 691px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322875i27F4B6363B99B5FA/image-dimensions/691x376?v=v2" width="691" height="376" role="button" title="Ramjee_korada_0-1759618459647.png" alt="Ramjee_korada_0-1759618459647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1890964802"&gt;Implementation Steps&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;A database table for the &lt;STRONG&gt;listing entity&lt;/STRONG&gt; is created. This involves fields such as &lt;CODE&gt;Id&lt;/CODE&gt;, &lt;CODE&gt;Title&lt;/CODE&gt;, &lt;CODE&gt;Type&lt;/CODE&gt;, and &lt;CODE&gt;Author&lt;/CODE&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'Library Listings'
@AbapCatalog.enhancement.category : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #RESTRICTED
define table zrk_lib_listings {

  key client            : abap.clnt not null;
  key listing_uuid      : sysuuid_x16 not null;
  id                    : abap.numc(10);
  title                 : abap.char(40);
  type                  : abap.char(5);
  author                : abap.char(40);
  publisher_studio      : abap.char(40);
  isbn_ean              : abap.char(40);
  language_code         : abap.lang;
  publication_year      : abap.numc(4);
  description           : abap.char(40);
  totalcopies           : abap.int2;
  available_copies      : abap.int2;
  location_shelf_id     : abap.char(40);
  lending_duration_days : abap.int2;
  status                : abap.char(40);
  cover_image_url       : abap.char(100);
  local_created_by      : abp_creation_user;
  local_created_at      : abp_creation_tstmpl;
  local_last_changed_by : abp_locinst_lastchange_user;
  local_last_changed_at : abp_locinst_lastchange_tstmpl;
  last_changed_at       : abp_lastchange_tstmpl;

}‚Äã&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;A &lt;STRONG&gt;RAP Business Object (BO)&lt;/STRONG&gt;&lt;SPAN&gt; is generated, followed by the requisite &lt;/SPAN&gt;&lt;STRONG&gt;UI artifacts&lt;/STRONG&gt;&lt;SPAN&gt;. The specific RAP BO scenario (Managed, Unmanaged, Draft, or Non-Draft) is noted as not influencing the core Excel upload use case. The &lt;/SPAN&gt;&lt;STRONG&gt;RAP Generator is used&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt; to simplify the demonstration.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_0-1759617725687.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322874iBDE9FF5181449404/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ramjee_korada_0-1759617725687.png" alt="Ramjee_korada_0-1759617725687.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. A &lt;STRONG&gt;root&amp;nbsp;abstract entity&lt;/STRONG&gt; is created for the file to be uploaded. (This entity is highly reusable and can be applied across different RAP BOs).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Abs. Entity For Attachment'
define root abstract entity ZRK_D_FILE_STREAM
{
  @Semantics.largeObject.mimeType: 'MimeType'
  @Semantics.largeObject.fileName: 'FileName'
  @Semantics.largeObject.contentDispositionPreference: #INLINE
  @EndUserText.label: 'Select Excel file'
  StreamProperty : abap.rawstring(0);
  
  .hidden: true
  MimeType : abap.char(128);
  
  .hidden: true
  FileName : abap.char(128);   
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the file entity is implemented.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict(2);
with hierarchy;
define behavior for ZRK_D_FILE_STREAM {
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;5. A second &lt;STRONG&gt;abstract entity is created&lt;/STRONG&gt; to serve as an action parameter. This entity includes an association to the file abstract entity (from Step 3).&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Action Param for Uploading Excel'
define root abstract entity ZRK_D_UPLOAD_EXCEL
{
// Dummy is a dummy field
@UI.hidden: true
dummy : abap_boolean;
     _StreamProperties : association [1] to ZRK_D_FILE_STREAM on 1 = 1;
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6. The &lt;STRONG&gt;abstract behavior definition&lt;/STRONG&gt; for the action parameter is implemented, including the association to the earlier entity.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;abstract;
strict ( 2 );
with hierarchy;
define behavior for ZRK_D_UPLOAD_EXCEL //alias &amp;lt;alias_name&amp;gt;
{
association _StreamProperties with hierarchy;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;7. An &lt;STRONG&gt;action is defined&lt;/STRONG&gt; on the RAP BO Behavior definition, with the parameter specified in Step 5.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;managed implementation in class ZRK_BP_R_LIB_LISTINGS unique;
strict ( 2 );
with draft;
extensible;
define behavior for ZRK_R_LIB_LISTINGS alias Listings
persistent table ZRK_LIB_LISTINGS
extensible
draft table ZRK_LIB_LSTNGS_D
etag master LocalLastChangedAt
lock master total etag LastChangedAt
authorization master( global )
{
  field ( readonly )
   ListingUUID,
   LocalCreatedBy,
   LocalCreatedAt,
   LocalLastChangedBy,
   LocalLastChangedAt,
   LastChangedAt;

  field ( numbering : managed )
   ListingUUID;


  create;
  update;
  delete;

  draft action Activate optimized;
  draft action Discard;
  draft action Edit;
  draft action Resume;
  draft determine action Prepare;

  static action ExcelUpload deep parameter ZRK_D_UPLOAD_EXCEL ;

  mapping for ZRK_LIB_LISTINGS corresponding extensible
  {
    ListingUUID = listing_uuid;
    ID = id;
    Title = title;
    Type = type;
    Author = author;
    PublisherStudio = publisher_studio;
    IsbnEan = isbn_ean;
    LanguageCode = language_code;
    PublicationYear = publication_year;
    Description = description;
    Totalcopies = totalcopies;
    AvailableCopies = available_copies;
    LocationShelfID = location_shelf_id;
    LendingDurationDays = lending_duration_days;
    Status = status;
    CoverImageUrl = cover_image_url;
    LocalCreatedBy = local_created_by;
    LocalCreatedAt = local_created_at;
    LocalLastChangedBy = local_last_changed_by;
    LocalLastChangedAt = local_last_changed_at;
    LastChangedAt = last_changed_at;
  }

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;8. The &lt;STRONG&gt;business logic is implemented&lt;/STRONG&gt; to read the Excel content. A released API, XCO_CP_XLSX&amp;nbsp;&lt;FONT color="#000000"&gt;,&lt;/FONT&gt; is used for this demonstration.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; METHOD ExcelUpload.
    TYPES : BEGIN OF ty_sheet_data,
              id                  TYPE zrk_r_lib_listings-id,
              title               TYPE zrk_r_lib_listings-title,
              type                TYPE zrk_r_lib_listings-Type,
              author              TYPE zrk_r_lib_listings-author,
              PublisherStudio     TYPE zrk_r_lib_listings-PublisherStudio,
              IsbnEan             TYPE zrk_r_lib_listings-IsbnEan,
              LanguageCode        TYPE zrk_r_lib_listings-LanguageCode,
              PublicationYear     TYPE zrk_r_lib_listings-PublicationYear,
              description         TYPE zrk_r_lib_listings-Description,
              Totalcopies         TYPE zrk_r_lib_listings-Totalcopies,
              AvailableCopies     TYPE zrk_r_lib_listings-AvailableCopies,
              LocationShelfID     TYPE zrk_r_lib_listings-LocationShelfID,
              LendingDurationDays TYPE zrk_r_lib_listings-LendingDurationDays,
              status              TYPE zrk_r_lib_listings-Status,
            END OF ty_sheet_data.

    DATA lv_file_content   TYPE xstring.
    DATA lt_sheet_data     TYPE STANDARD TABLE OF ty_sheet_data.
    DATA lt_listing_create TYPE TABLE FOR CREATE zrk_r_lib_listings.

    lv_file_content = VALUE #( keys[ 1 ]-%param-_streamproperties-StreamProperty OPTIONAL ).

    " Error handling in case file content is initial

    DATA(lo_document) = xco_cp_xlsx=&amp;gt;document-&amp;gt;for_file_content( lv_file_content )-&amp;gt;read_access( ).

    DATA(lo_worksheet) = lo_document-&amp;gt;get_workbook( )-&amp;gt;worksheet-&amp;gt;at_position( 1 ).

    DATA(o_sel_pattern) = xco_cp_xlsx_selection=&amp;gt;pattern_builder-&amp;gt;simple_from_to(
      )-&amp;gt;from_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'A' )  " Start reading from Column A
      )-&amp;gt;to_column( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_alphabetic_value( 'N' )   " End reading at Column N
      )-&amp;gt;from_row( xco_cp_xlsx=&amp;gt;coordinate-&amp;gt;for_numeric_value( 2 )    " *** Start reading from ROW 2 to skip the header ***
      )-&amp;gt;get_pattern( ).

    lo_worksheet-&amp;gt;select( o_sel_pattern
                                     )-&amp;gt;row_stream(
                                     )-&amp;gt;operation-&amp;gt;write_to( REF #( lt_sheet_data )
                                     )-&amp;gt;set_value_transformation(
                                         xco_cp_xlsx_read_access=&amp;gt;value_transformation-&amp;gt;string_value
                                     )-&amp;gt;execute( ).

    lt_listing_create = CORRESPONDING #( lt_sheet_data ).

    MODIFY ENTITIES OF zrk_r_lib_listings IN LOCAL MODE
           ENTITY Listings
           CREATE AUTO FILL CID FIELDS ( Id Title Type author PublisherStudio IsbnEan LanguageCode PublicationYear description Totalcopies AvailableCopies LocationShelfID LendingDurationDays status )
           WITH lt_listing_create
           " TODO: variable is assigned but never used (ABAP cleaner)
           MAPPED DATA(lt_mapped)
           " TODO: variable is assigned but never used (ABAP cleaner)
           REPORTED DATA(lt_reported)
           " TODO: variable is assigned but never used (ABAP cleaner)
           FAILED DATA(lt_failed).

    " Communicate the messages to UI - not in scope of this demo
    IF lt_failed IS INITIAL.
      APPEND VALUE #( %msg = new_message_with_text( severity = if_abap_behv_message=&amp;gt;severity-success
                                                    text     = 'Listings have been uploaded - please refresh the list!!' ) )
             TO reported-listings.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;9. The action is utilized on the &lt;STRONG&gt;projection behavior&lt;/STRONG&gt; and subsequently exposed in the &lt;STRONG&gt;metadata extension&lt;/STRONG&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  use action ExcelUpload;&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;projection implementation in class ZRK_BP_C_LIB_LISTINGS unique;
strict ( 2 );
extensible;
use draft;
use side effects;
define behavior for ZRK_C_LIB_LISTINGS alias Listings
extensible
use etag
{
  use create;
  use update;
  use delete;

  use action Edit;
  use action Activate;
  use action Discard;
  use action Resume;
  use action Prepare;

  use action ExcelUpload;

}&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;.lineItem: [{ type:#FOR_ACTION , dataAction: 'ExcelUpload' , label: 'Upload Excel' }]&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;10. The &lt;STRONG&gt;service binding is published&lt;/STRONG&gt;, and the application is then ready for execution.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_2-1759616768674.png" style="width: 739px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322868iF1985AA5BDD03A2A/image-dimensions/739x181?v=v2" width="739" height="181" role="button" title="Ramjee_korada_2-1759616768674.png" alt="Ramjee_korada_2-1759616768674.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_3-1759616871331.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322869i040F7DA1CC5515C5/image-dimensions/721x392?v=v2" width="721" height="392" role="button" title="Ramjee_korada_3-1759616871331.png" alt="Ramjee_korada_3-1759616871331.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_4-1759616921974.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322870i5364BBC5623F81B7/image-dimensions/720x117?v=v2" width="720" height="117" role="button" title="Ramjee_korada_4-1759616921974.png" alt="Ramjee_korada_4-1759616921974.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_5-1759617464764.png" style="width: 743px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322872i185A7C14C9E33C7E/image-dimensions/743x390?v=v2" width="743" height="390" role="button" title="Ramjee_korada_5-1759617464764.png" alt="Ramjee_korada_5-1759617464764.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ramjee_korada_6-1759617503382.png" style="width: 736px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322873iF922947957F6C08B/image-dimensions/736x407?v=v2" width="736" height="407" role="button" title="Ramjee_korada_6-1759617503382.png" alt="Ramjee_korada_6-1759617503382.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1694451297"&gt;Note:&lt;/H3&gt;&lt;P&gt;This feature is currently &lt;STRONG&gt;functional on the BTP ABAP Environment&lt;/STRONG&gt;. However, an issue appears to exist with metadata generation on &lt;STRONG&gt;S/4HANA 2023 On-Premise&lt;/STRONG&gt; deployments, even though the objects are syntactically correct. It is anticipated that this constraint will be addressed in the &lt;STRONG&gt;S/4HANA 2025 release&lt;/STRONG&gt;, making the full feature set available on the S/4HANA On-Premise version following a brief waiting period.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-excel-upload-through-custom-action-popup-no-ui5-extension-no/ba-p/14234872"/>
    <published>2025-10-05T00:52:51.623000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/reusing-data-nodes-to-display-a-table-more-than-once-in-adobe-forms/ba-p/14234246</id>
    <title>Reusing Data Nodes to Display a Table More Than Once in Adobe Forms</title>
    <updated>2025-10-06T06:40:17.153000+02:00</updated>
    <author>
      <name>Shubham162</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1624114</uri>
    </author>
    <content>&lt;P&gt;Sometimes the developers come across a situation where they need to use the same data node more than once in the SAP adobe form layout. This seems to be simple but just merely copy pasting the same table in the layout won't print the data again because the data node can be consumed only once i.e. it can have only 1:1 relation with the table. But displaying the data again on the layout can be achieved with the help of scripting language(in my case I prefer Javascript).&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Assumption:-&amp;nbsp;&lt;/STRONG&gt;You have already created the Adobe Form and implemented the relevant ABAP logic to fetch data into an internal table for display in the layout output.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1866087211" id="toc-hId-1890958947"&gt;&lt;STRONG&gt;Scenario&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;For simplicity, let‚Äôs select a small dataset from the &lt;STRONG&gt;MARA&lt;/STRONG&gt; table and display it in the Adobe Form layout.&lt;/P&gt;&lt;P&gt;The following steps were followed to create this example:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;A structure and a global internal table were defined to hold the data.&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_1-1759481641757.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322539iEA595966D4CAF5B6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_1-1759481641757.png" alt="Shubham162_1-1759481641757.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_3-1759481683406.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322541iF0A6663AC6B96525/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_3-1759481683406.png" alt="Shubham162_3-1759481683406.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;A simple &lt;CODE&gt;SELECT&lt;/CODE&gt; query was written to fetch data from MARA into the internal table.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_4-1759481751257.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322542i6046088BBF2BFF80/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_4-1759481751257.png" alt="Shubham162_4-1759481751257.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;The internal table was then bound to a &lt;STRONG&gt;data node&lt;/STRONG&gt; in the layout to print the records.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_6-1759481807472.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322544iFDC9049673D263C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_6-1759481807472.png" alt="Shubham162_6-1759481807472.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Now, the data node has been used in the layout to print the records. The internal table has been put on the design view page in order to see the output.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_7-1759481976789.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322545i622588AADAC041EC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_7-1759481976789.png" alt="Shubham162_7-1759481976789.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's generate the pdf and see the output. We can see that the pdf is generated and it is printing all the 20 records.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_8-1759482082657.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322547i6AD75DF4F4BF392A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_8-1759482082657.png" alt="Shubham162_8-1759482082657.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694445442"&gt;Challenge&lt;/H3&gt;&lt;P&gt;Now, let‚Äôs assume we need to print only &lt;STRONG&gt;MATNR, MBRSH, and MEINS&lt;/STRONG&gt; as a second table.&lt;/P&gt;&lt;P&gt;To achieve this, we created another table (say, &lt;STRONG&gt;GT_MARA_1&lt;/STRONG&gt;) in the layout and bound it to the same data node as GT_MARA, but restricted the fields.&lt;/P&gt;&lt;P&gt;However, when we generated the PDF, the second table &lt;STRONG&gt;did not print any data&lt;/STRONG&gt;, even though the correct binding was done.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_9-1759482526279.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322552iE447CA389F2C5048/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_9-1759482526279.png" alt="Shubham162_9-1759482526279.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_10-1759482811635.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322553i615E89F0C6C22582/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_10-1759482811635.png" alt="Shubham162_10-1759482811635.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1497931937"&gt;Solution&lt;/H3&gt;&lt;P&gt;Reusing the same data node requires a slightly different approach. Below are the steps to make it work:&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 1:-&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;Remove all the bindings from the second table (&lt;STRONG&gt;GT_MARA_1&lt;/STRONG&gt;).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_11-1759485448217.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322574i5A36755CE81C52C2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_11-1759485448217.png" alt="Shubham162_11-1759485448217.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_12-1759485474016.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322575i0F8E4A9FA6A67C6D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_12-1759485474016.png" alt="Shubham162_12-1759485474016.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_13-1759485516353.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322577iFD08B4EAB59721EC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_13-1759485516353.png" alt="Shubham162_13-1759485516353.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:-&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Wrap &lt;STRONG&gt;GT_MARA_1&lt;/STRONG&gt; inside a repeating &lt;STRONG&gt;subform&lt;/STRONG&gt; and mark it as &lt;EM&gt;Repeat Subform for Each Data Item&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_14-1759485621991.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322580iBFAA109C6F71A368/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_14-1759485621991.png" alt="Shubham162_14-1759485621991.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3:-&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create an instance of the subform (say &lt;STRONG&gt;Sub1&lt;/STRONG&gt;) for each record of GT_MARA.&lt;/P&gt;&lt;P&gt;To do this:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Wrap &lt;STRONG&gt;Sub1&lt;/STRONG&gt; inside another subform called &lt;STRONG&gt;ParentSubform&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Write a JavaScript snippet in the &lt;STRONG&gt;Calculate&lt;/STRONG&gt; event of ParentSubform to dynamically create instances.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Ensure that &lt;EM&gt;Repeat Subform for Each Data Item&lt;/EM&gt; is &lt;STRONG&gt;unchecked&lt;/STRONG&gt; for ParentSubform.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_20-1759486429473.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322594i6783D1902FDC58C9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_20-1759486429473.png" alt="Shubham162_20-1759486429473.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:-&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Write JavaScript at the &lt;STRONG&gt;field level&lt;/STRONG&gt; to fetch values from GT_MARA for each index.&lt;BR /&gt;For example, for fields MATNR, MBRSH, and MEINS, write JS code that accesses the data from GT_MARA row by row.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_16-1759486116496.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322587iA58201D1F2876FF4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_16-1759486116496.png" alt="Shubham162_16-1759486116496.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_17-1759486172683.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322588i0B969619BAB44016/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_17-1759486172683.png" alt="Shubham162_17-1759486172683.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_19-1759486217403.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322590iB92BA4CF097B8514/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_19-1759486217403.png" alt="Shubham162_19-1759486217403.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 5:-&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;Run the PDF.&lt;BR /&gt;You‚Äôll notice that the output is correct, but the &lt;STRONG&gt;header row of GT_MARA_1 is repeated for every record&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_21-1759487110019.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322597iEDA0D09DF77CBD6A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_21-1759487110019.png" alt="Shubham162_21-1759487110019.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:-&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Suppress the repeated header using a small JavaScript snippet in the &lt;STRONG&gt;Calculate&lt;/STRONG&gt; event of the header.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_22-1759487290052.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322598i37A7799248756F55/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_22-1759487290052.png" alt="Shubham162_22-1759487290052.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:-&lt;BR /&gt;&lt;/STRONG&gt;Generate the PDF again.&lt;BR /&gt;Now the second table prints correctly with a single header and the expected data.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Shubham162_23-1759487544881.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322601i8E1C4DBC1FFC7846/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Shubham162_23-1759487544881.png" alt="Shubham162_23-1759487544881.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Explanation of the Javascript&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Field-level code (example: MATNR):&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;var oFields = xfa.resolveNodes("GT_MARA.DATA[*].MATNR");&amp;nbsp; &amp;nbsp; &lt;FONT color="#000000"&gt;"-&amp;gt; Access to the MATNR field of GT_MARA table&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;var currIndex = this.parent.parent.parent.index;&amp;nbsp; &amp;nbsp;&lt;FONT color="#000000"&gt;"-&amp;gt; Get the current index of the repeating subform Sub1.&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;this.rawValue = oFields.item(currIndex).rawValue;&amp;nbsp; &lt;FONT color="#000000"&gt;"-&amp;gt; Get the actual value of MATNR in GT_MARA for the current index&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;ParentSubform (to create instances of Sub1):&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;var oRecords = xfa.resolveNodes("GT_MARA.DATA[*]").length; &lt;FONT color="#000000"&gt;"-&amp;gt; Get the total number of records in GT_MARA&lt;/FONT&gt;&amp;nbsp;&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;for ( var i = 0; i&amp;lt;=oRecords; i++ ){&amp;nbsp; &amp;nbsp; &lt;FONT color="#000000"&gt;" -&amp;gt; Iteration till the number of records of GT_MARA&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;if ( i &amp;gt; 0 ) {&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;this._Sub1.addInstance(1);&amp;nbsp; &amp;nbsp; &lt;FONT color="#000000"&gt;" Create a new instance of subform Sub1 for each iteration&lt;/FONT&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;}&lt;/EM&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;}&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Header suppression (in GT_MARA_1 header):&lt;/EM&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;EM&gt;if ( this.parent.parent.index != '0' ){&lt;BR /&gt;this.presence = "hidden";&lt;BR /&gt;}&lt;BR /&gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1301418432"&gt;Final Result&lt;/H3&gt;&lt;P&gt;The second table (GT_MARA_1) is successfully printed using the same data node, without duplicated headers.&lt;/P&gt;&lt;H3 id="toc-hId-1104904927"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Reusing the same data node in multiple tables within an Adobe Form is not straightforward. However, with subforms and some JavaScript logic, we can achieve the desired result.&lt;/P&gt;&lt;P&gt;If you have other suggestions or alternative solutions to reuse the data node in Adobe Forms, feel free to share!&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Thanks,&lt;BR /&gt;Shubham&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/reusing-data-nodes-to-display-a-table-more-than-once-in-adobe-forms/ba-p/14234246"/>
    <published>2025-10-06T06:40:17.153000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-accessing-change-request-data-by-business-activity-amp-change/ba-p/14235529</id>
    <title>SAP MDG : Accessing Change Request Data by Business Activity &amp; Change Request Type</title>
    <updated>2025-10-06T10:49:48.157000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi&amp;nbsp;SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;üôÇ&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01: &lt;/STRONG&gt;This blog does not include execution screenshots.&lt;STRONG&gt;&lt;BR /&gt;Note 02: &lt;/STRONG&gt;The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;STRONG&gt;&lt;BR /&gt;Note 03:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;There are several ways; this blog is written about one of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Create one custom class, with 02 methods:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ZCL_MDGS_ASSISTIVE&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;GET_INSTANCE_GOV_API&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Static Public Method ZCL_MDGS_ASSISTIVE=&amp;gt;GET_INSTANCE_GOV_API
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] IV_MODEL                       TYPE        USMD_MODEL
* | [&amp;lt;---] EV_INSTANCE_EXISTS             TYPE        ABAP_BOOL
* | [&amp;lt;---] EO_GOV_API                     TYPE REF TO CL_USMD_GOV_API
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
  METHOD get_instance_gov_api.
    DATA: lo_gov_api   TYPE REF TO if_usmd_gov_api,
          lo_cx_root   TYPE REF TO cx_root,
          lv_exception TYPE        string.
    IF cl_usmd_gov_api=&amp;gt;check_instance_exists( iv_model_name = iv_model ) EQ abap_false.
      ev_instance_exists = abap_false.
      TRY.
          cl_usmd_gov_api=&amp;gt;get_instance(
            EXPORTING
              iv_model_name = iv_model
            RECEIVING
              ro_gov_api    = lo_gov_api
          ).
        CATCH cx_usmd_gov_api INTO lo_cx_root.
          lv_exception = lo_cx_root-&amp;gt;get_text( ).
      ENDTRY.
      IF lv_exception IS INITIAL AND
         lo_gov_api   IS BOUND.
        eo_gov_api ?= lo_gov_api.
      ENDIF.
    ELSE.
      ev_instance_exists = abap_true.
      TRY.
          cl_usmd_gov_api=&amp;gt;get_instance(
            EXPORTING
              iv_model_name = iv_model
            RECEIVING
              ro_gov_api    = lo_gov_api
          ).
        CATCH cx_usmd_gov_api INTO lo_cx_root.
          lv_exception = lo_cx_root-&amp;gt;get_text( ).
      ENDTRY.
      IF lv_exception IS INITIAL AND
         lo_gov_api   IS BOUND.
        eo_gov_api ?= lo_gov_api.
      ENDIF.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;GET_CR_DATA&amp;nbsp;&lt;BR /&gt;(***Note: above method making use in this method)&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;* &amp;lt;SIGNATURE&amp;gt;---------------------------------------------------------------------------------------+
* | Static Public Method ZCL_MDGS_ASSISTIVE=&amp;gt;GET_CR_DATA
* +-------------------------------------------------------------------------------------------------+
* | [---&amp;gt;] IV_CR_ID                       TYPE        USMD_CREQUEST
* | [&amp;lt;--&amp;gt;] CS_CR_ATTRIBUTES               TYPE        USMD_S_CREQUEST(optional)
* | [&amp;lt;--&amp;gt;] CV_MODEL                       TYPE        USMD_MODEL(optional)
* | [&amp;lt;--&amp;gt;] CV_CR_TYPE_PROCESS             TYPE        USMD_PROCESS(optional)
* | [&amp;lt;-()] RT_CR_DATA                     TYPE        USMD_TS_ENTITY_DATA_ALL
* +--------------------------------------------------------------------------------------&amp;lt;/SIGNATURE&amp;gt;
    METHOD get_cr_data.
    DATA: lo_gov_api     TYPE REF TO  cl_usmd_gov_api,
          lt_cr_data     TYPE         usmd_ts_entity_data_all,
          lv_model       TYPE         usmd_model,
          lv_inst_exists TYPE         abap_bool.
    " Determine the  model from CR ID to get the instance of
    " Goverance API.
    CHECK IV_CR_ID IS NOT INITIAL.
    IF NOT cv_model IS INITIAL.
      lv_model = cv_model.
    ELSE.
      cl_usmd_crequest_util=&amp;gt;get_model_by_cr(
        EXPORTING
          i_crequest = iv_cr_id
        IMPORTING
          e_model    = cv_model
      ).
    ENDIF.
    " Get the instance of the governance API
    IF NOT cv_model IS INITIAL.
      ZCL_MDGS_ASSISTIVE=&amp;gt;get_instance_gov_api(
        EXPORTING
          iv_model           = cv_model
        IMPORTING
          ev_instance_exists = lv_inst_exists
          eo_gov_api         = lo_gov_api
      ).
      " Read the data of the CR data using the Governance API
      IF lo_gov_api IS BOUND.
        lo_gov_api-&amp;gt;if_usmd_gov_api_cr_data~get_crequest_data(
          EXPORTING
            iv_crequest_id          = iv_cr_id
          IMPORTING
            et_entity_data_inactive = rt_cr_data
        ).
        " CR Header Data
        cs_cr_attributes = lo_gov_api-&amp;gt;if_usmd_gov_api_cr_data~get_crequest_attributes( iv_crequest_id = iv_cr_id  ).
        " CR Business activity or Business Process ID
        SELECT SINGLE usmd_process
                 FROM usmd1601
                 INTO _cr_type_process
                WHERE usmd_creq_type = _cr_attributes-usmd_creq_type.
      ENDIF.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, Making use of ZCL_MDGS_ASSISTIVE in system method caller implementation (if_usmd_ssw_syst_method_caller~call_system_method)&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA: 
ls_crequest     TYPE usmd_s_crequest,
lv_model        TYPE usmd_model,
lv_cr_process   TYPE usmd_process,
lt_cr_data      TYPE usmd_ts_entity_data_all,
lt_supp_data  TYPE REF TO data.

FIELD-SYMBOLS:
&amp;lt;lt_supp_data&amp;gt; TYPE SORTED TABLE,
&amp;lt;ls_supp_data&amp;gt; TYPE any,
&amp;lt;lv_fno&amp;gt; TYPE any.

CALL METHOD zcl_mdgs_assistive=&amp;gt;get_cr_data
      EXPORTING
        iv_cr_id           = iv_cr_number
      CHANGING
        cs_cr_attributes   = ls_crequest
        cv_model           = lv_model
        cv_cr_type_process = lv_cr_process
      RECEIVING
        rt_cr_data         = lt_cr_data.

IF ls_crequest-usmd_creq_type = 'ZMDGS01',
 IF lv_cr_process = 'SUP1'.
  lt_supp_data = VALUE #( lt_cr_data[ usmd_entity = 'BP_HEADER' usmd_entity_cont = 'BP_CENTRL' struct = 'KATTR' ]-r_data  OPTIONAL ). 
   IF lt_supp_data IS BOUND .
    ASSIGN lt_supp_data-&amp;gt;* TO &amp;lt;lt_supp_data&amp;gt;.
     IF &amp;lt;lt_supp_data&amp;gt; IS ASSIGNED.
      LOOP AT &amp;lt;lt_supp_data&amp;gt; ASSIGNING &amp;lt;ls_supp_data&amp;gt;.
       ASSIGN COMPONENT 'NAME_ORG1' OF STRUCTURE &amp;lt;ls_supp_data&amp;gt; TO &amp;lt;lv_fno&amp;gt;.
        IF &amp;lt;lv_fno&amp;gt; IS ASSIGNED AND &amp;lt;lv_fno&amp;gt; IS NOT INITIAL.
         .
         . "Requirement Logic etc...
         .
        ENDIF.
       ENDLOOP.
     ENDIF.
    ENDIF.
   ENDIF.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-accessing-change-request-data-by-business-activity-amp-change/ba-p/14235529"/>
    <published>2025-10-06T10:49:48.157000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/spatial-functions-in-abap-sql/ba-p/14179920</id>
    <title>Spatial Functions in ABAP SQL</title>
    <updated>2025-10-07T08:00:00.032000+02:00</updated>
    <author>
      <name>lenapadeken</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/6859</uri>
    </author>
    <content>&lt;P&gt;Why is the coffee shop &lt;EM&gt;Coffee for You&lt;/EM&gt; in street X more popular than &lt;EM&gt;Coffee Beans&lt;/EM&gt; in street Y? It could be that the coffee is just better in street X or that they have special offers that bind their customers. But it could also be as simple as the location. If you want to set up a store, it‚Äôs helpful to know if customers would come by or if there are competitors that could threaten your business. To find the best location, you can get help using spatial data.&lt;/P&gt;&lt;P&gt;Spatial data gives you information about the location of an object or event on the surface of the Earth. Other attributes, such as timestamps, can also be linked to the object or event. Doing so gives more opportunities to analyze the data and even predict behaviors. Representing spatial data is often done using 2D geometries, but can also take other forms. The typical geometrical forms are points, lines, and polygons.&lt;/P&gt;&lt;H3 id="toc-hId-1866179494"&gt;&lt;STRONG&gt;Working with Spatial Data in ABAP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;With ABAP Release 9.15, SAP BTP ABAP Environment 2505 functions were added to ABAP SQL to access, manipulate, and analyze &lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/index.htm?file=abensql_spatial_func.htm" target="_blank" rel="noopener noreferrer"&gt;spatial data in ABAP&lt;/A&gt;.&amp;nbsp;These implemented functions are mapped to methods, functions, and constructors in &lt;A href="https://help.sap.com/docs/SAP_HANA_PLATFORM/cbbbfc20871e4559abfd45a78ad58c02/e1c934157bd14021a3b43b5822b2cbe9.html" target="_blank" rel="noopener noreferrer"&gt;SAP HANA&lt;/A&gt;. In the following demo, you will learn how to use ABAP SQL spatial functions.&lt;/P&gt;&lt;H4 id="toc-hId-1798748708"&gt;&lt;STRONG&gt;Use Case: EMODnet Maps&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;The European Marine Observation and Data Network (&lt;A href="https://emodnet.ec.europa.eu/en" target="_blank" rel="noopener nofollow noreferrer"&gt;EMODnet&lt;/A&gt;) offers maps like the vessel density map to visualize, for example, movement patterns and maritime traffic distribution. In a press release, EOMDnet explains the map's importance by, for example, ‚Äúmonitoring shipping emissions‚Äù and ‚Äúplanning offshore wind farms‚Äù (&lt;A href="https://emodnet.ec.europa.eu/en/new-insights-european-maritime-traffic-emodnet-vessel-density-maps" target="_blank" rel="noopener nofollow noreferrer"&gt;https://emodnet.ec.europa.eu/en/new-insights-european-maritime-traffic-emodnet-vessel-density-maps&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;For the demo, we will extract the vessel density map's geometry data in JSON format using an Open Geospatial Consortium &lt;A href="https://emodnet.ec.europa.eu/en/emodnet-web-service-documentation#tutorials" target="_blank" rel="noopener nofollow noreferrer"&gt;web service&lt;/A&gt;. In particular, we will examine the port locations in Europe using the following URL:&lt;/P&gt;&lt;P&gt;&lt;A href="https://ows.emodnet-humanactivities.eu/wfs?service=WFS&amp;amp;version=2.0.0&amp;amp;request=GetFeature&amp;amp;typeNames=emodnet:portlocations&amp;amp;outputFormat=application/json" target="_blank" rel="noopener nofollow noreferrer"&gt;https://ows.emodnet-humanactivities.eu/wfs?service=WFS&amp;amp;version=2.0.0&amp;amp;request=GetFeature&amp;amp;typeNames=emodnet:portlocations&amp;amp;outputFormat=application/json&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;This request returns the geometry data for each port. One entry is, for example:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
   "type":"Feature",
   "id":"portlocations.16",
   "geometry":
   {
    "type":"Point",
    "coordinates":
    [
     4.40815,
     51.24165
    ]
   },
   "geometry_name":"the_geom",
   "properties":
   {
    "port_id":"BE003",
    "data_src_c":"0",
    "port_coor_":null,
    "country":"BE",
    "portname":null,
    "port":"Antwerp-Bruges",
    "source":"Port of Antwerp-Bruges",
    "pointx":4.40815,
    "pointy":51.24165,
    "traffic":"1"
   }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Having retrieved this information, we want to&amp;nbsp;display all the ports in an SVG graphic.&lt;/P&gt;&lt;H4 id="toc-hId-1602235203"&gt;&lt;STRONG&gt;Visualizing Spatial Data as SVG&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;To visualize all the European ports as SVG, the geodata must be available in a database table. You can do so by uploading the JSON file or calling the web service API in ABAP. The second solution can look like this:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;method return_wfs_getfeature.
  DATA(wfs_features_url) = `https://ows.emodnet-humanactivities.eu/wfs?service=WFS&amp;amp;version=2.0.0` &amp;amp;&amp;amp;
                           `&amp;amp;request=GetFeature&amp;amp;typeNames=emodnet:portlocations&amp;amp;outputFormat=application/json`.

  cl_http_client=&amp;gt;create_by_url( exporting url  = wfs_features_url
                                 importing client = DATA(client) ).

  client-&amp;gt;request-&amp;gt;set_method( if_rest_message=&amp;gt;gc_method_get ).
  client-&amp;gt;send( ).
  client-&amp;gt;receive( exceptions http_communication_failure = 1
                              http_invalid_state         = 2
                              http_processing_failed     = 3
                              others                     = 4 ).

  response = client-&amp;gt;response-&amp;gt;get_cdata( ).

  out-&amp;gt;write_json( response ).

  client-&amp;gt;close( ).
endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Afterwards, the required data must be extracted from JSON. A simple transformation can be used for this.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?sap.transform simple?&amp;gt;
&amp;lt;tt:transform xmlns:tt="http://www.sap.com/transformation-templates"&amp;gt;

&amp;lt;tt:root name="PORTS"/&amp;gt;

&amp;lt;tt:template&amp;gt;
  &amp;lt;object&amp;gt;
    &amp;lt;str name="type"&amp;gt;FeatureCollection&amp;lt;/str&amp;gt;
    &amp;lt;array name="features"&amp;gt;
      &amp;lt;tt:loop ref=".PORTS"&amp;gt;
        &amp;lt;object&amp;gt;
          &amp;lt;str name="type"&amp;gt;Feature&amp;lt;/str&amp;gt;
          &amp;lt;tt:group&amp;gt;
            &amp;lt;tt:cond&amp;gt;
              &amp;lt;str name="id"&amp;gt;&amp;lt;tt:value ref="ID"/&amp;gt;&amp;lt;/str&amp;gt;
            &amp;lt;/tt:cond&amp;gt;
            &amp;lt;tt:cond&amp;gt;
              &amp;lt;object name="geometry"&amp;gt;
                &amp;lt;tt:value ref="POINT" option="format(geo=4326)"/&amp;gt;
              &amp;lt;/object&amp;gt;
            &amp;lt;/tt:cond&amp;gt;
            &amp;lt;tt:cond&amp;gt;
              &amp;lt;object name="properties"&amp;gt;
                &amp;lt;tt:group&amp;gt;
                  &amp;lt;tt:cond&amp;gt;
                    &amp;lt;str name="port_id"&amp;gt;&amp;lt;tt:skip/&amp;gt;&amp;lt;/str&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                  &amp;lt;tt:cond&amp;gt;
                    &amp;lt;str name="data_src_c"&amp;gt;&amp;lt;tt:skip/&amp;gt;&amp;lt;/str&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                  &amp;lt;tt:cond frq="?"&amp;gt;
                    &amp;lt;str name="port_coor_"&amp;gt;&amp;lt;tt:skip/&amp;gt;&amp;lt;/str&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                  &amp;lt;tt:cond frq="?"&amp;gt;
                    &amp;lt;str name="country"&amp;gt;&amp;lt;tt:value ref="COUNTRY"/&amp;gt;&amp;lt;/str&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                  &amp;lt;tt:cond frq="?"&amp;gt;
                    &amp;lt;str name="portname"&amp;gt;&amp;lt;tt:skip/&amp;gt;&amp;lt;/str&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                  &amp;lt;tt:cond frq="?"&amp;gt;
                    &amp;lt;str name="port"&amp;gt;&amp;lt;tt:value ref="PORT"/&amp;gt;&amp;lt;/str&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                  &amp;lt;tt:cond&amp;gt;
                    &amp;lt;tt:skip/&amp;gt;
                  &amp;lt;/tt:cond&amp;gt;
                &amp;lt;/tt:group&amp;gt;
              &amp;lt;/object&amp;gt;
            &amp;lt;/tt:cond&amp;gt;
            &amp;lt;tt:cond&amp;gt;
              &amp;lt;str name="geometry_name"&amp;gt;&amp;lt;tt:skip/&amp;gt;&amp;lt;/str&amp;gt;
            &amp;lt;/tt:cond&amp;gt;
          &amp;lt;/tt:group&amp;gt;
        &amp;lt;/object&amp;gt;
      &amp;lt;/tt:loop&amp;gt;
    &amp;lt;/array&amp;gt;
    &amp;lt;tt:skip/&amp;gt;
  &amp;lt;/object&amp;gt;
&amp;lt;/tt:template&amp;gt;

&amp;lt;/tt:transform&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The result can then be appended to an existing database table.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;method modify_db_tab.
  data ports type standard table of my_ports_db with key id.

  try.
      call transformation my_ports_st
        source json feature_selection
        result ports = ports.
    catch cx_transformation_error into final(transformation_error).
      out-&amp;gt;write( transformation_error-&amp;gt;get_text( ) ).
  endtry.

  delete ports where country is initial or port is initial.
  modify my_ports_db from table ports.
endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The geodata is now available in the database table &lt;EM&gt;my_ports_db&lt;/EM&gt;. A point characterizes each port. These points can be aggregated using the ABAP SQL function &lt;EM&gt;ST_ASSVGAGG&lt;/EM&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;select from my_ports_db
  fields st_assvgaggr( point )
  into table (svg_graphic).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;To display all the ports as SVG in a browser, you can use ICF.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;method if_http_extension~handle_request.

  select from my_ports_db
    fields st_assvgaggr( point )
    into table &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(svg_graphic).

  data svg_data type string.
  svg_data = svg_graphic[ 1 ].

  server-&amp;gt;response-&amp;gt;set_header_field(
    name  = 'Content-Type' "#EC NOTEXT
    value = 'image/svg+xml' ).

  server-&amp;gt;response-&amp;gt;set_header_field(
    name  = 'Expires' "#EC NOTEXT
    value = '0' ).

  server-&amp;gt;response-&amp;gt;set_cdata( svg_data ).

endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The result looks as follows:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Points of  Ports in Europe" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320240i1EF6C316E38D6F95/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-26 at 11.25.58.png" alt="Points of  Ports in Europe" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Points of  Ports in Europe&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To give these points more context, we can add a European map. Several land maps are available on the web. For this demo, we use the &lt;A href="https://www.naturalearthdata.com/downloads/10m-cultural-vectors/10m-admin-0-countries/" target="_blank" rel="noopener nofollow noreferrer"&gt;Natural Earth&lt;/A&gt; map&lt;/SPAN&gt;&lt;SPAN&gt;. Given the extracted files, geoJSON can be retrieved using &lt;A href="https://geopandas.org/en/stable/" target="_blank" rel="noopener nofollow noreferrer"&gt;GeoPandas&lt;/A&gt;. Using the following Python script, a JSON file is created.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import geopandas as gpd

# Load shapefile
gdf = gpd.read_file("ne_10m_admin_0_countries.shp")

# Ensure it's in 4326
gdf = gdf.to_crs(epsg=4326)

# Convert geometries to EWKT
gdf['ewkt'] = gdf['geometry'].apply(lambda geom: f"SRID=4326;{geom.wkt}")

# Save as TXT with EWKT
gdf[['CONTINENT', 'NAME', 'ewkt']].to_json("continent_name_ewkt.json", index=False)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;You can then upload the JSON file to the system and prepare the data for inserting into a new database.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;method load_europe_map.
  data file_data type table of string.
  data filename type string.

  filename = '/my_file_path/ne_10m_admin_0_countries/continent_name_ewkt.json'.

  cl_gui_frontend_services=&amp;gt;gui_upload(
     exporting
       filename                 = filename
       filetype                 = 'ASC'
     changing
        data_tab                = file_data
      exceptions
        file_open_error         = 1
        file_read_error         = 2
        no_batch                = 3
        gui_refuse_filetransfer = 4
        invalid_type            = 5
        no_authority            = 6
        unknown_error           = 7
        others                  = 8
  ).

  data string_json type string.
    
  concatenate lines of file_data into string_json.

  data map_struc type my_map_db.
  data map_tab type standard table of my_map_db.
    
  data(json) = new cl_abap_json( string_json ).
  map_struc-id = 0.
  do.
    map_struc-name = json-&amp;gt;get_value( |NAME.{ map_struc-id }| ).
    if map_struc-name is not initial.
      map_struc-continent = json-&amp;gt;get_value( |CONTINENT.{ map_struc-id }| ).
      map_struc-geo_ewkt = json-&amp;gt;get_value( |GEO_EWKT.{ map_struc-id }| ).
      append map_struc to map_tab.
      map_struc-id += 1.
    else.
      exit.
    endif.
  enddo.
    
  delete map_tab where continent &amp;lt;&amp;gt; 'Europe'.
  modify my_map_db from table &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1418957"&gt;@MAP&lt;/a&gt;_tab.
   
  commit work.

  update my_map_db set geometry4326 = st_geomfromewkt( geo_ewkt ) where length( geo_ewkt ) &amp;gt; 50.
  update my_map_db set geometry = st_geomfromwkt( st_aswkt( geometry4326 ), 0 ) where length( geo_ewkt ) &amp;gt; 50.
endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The database is now filled with the geodata needed to display the European map. With this underlying map, the ports are set into context.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;method if_http_extension~handle_request.
  select from my_map_db
    fields st_assvgaggr( geometry4326 )
    where name &amp;lt;&amp;gt; 'Russia'
    union all
      select from my_ports_db
        fields st_assvgaggr( point )
  into table (svg_graphic).

  data svg_data type string.
  svg_data = svg_graphic[ 1 ].

  replace all occurrences of `grey` in svg_data with `#89D1FF`.
  replace all occurrences of `black` in svg_data with `#1B90FF`.

  server-&amp;gt;response-&amp;gt;set_header_field(
    name  = 'Content-Type' "#EC NOTEXT
    value = 'image/svg+xml' ).

  server-&amp;gt;response-&amp;gt;set_header_field(
    name  = 'Expires' "#EC NOTEXT
    value = '0' ).

  server-&amp;gt;response-&amp;gt;set_cdata( svg_data ).
endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The result now looks like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Points of Ports in a European Map" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320474i6C6C3E29E4002975/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-26 at 13.36.08.png" alt="Points of Ports in a European Map" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Points of Ports in a European Map&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;That's it. You have now seen one possible use case for displaying geodata using spatial data in ABAP SQL.&lt;/P&gt;&lt;P&gt;If you want to learn more about spatial data in ABAP SQL, explore the &lt;A href="https://help.sap.com/doc/abapdocu_cp_index_htm/CLOUD/en-US/ABENSQL_SPATIAL_FUNC.html" target="_blank" rel="noopener noreferrer"&gt;documentation&lt;/A&gt;. Additionally, a &lt;A href="https://community.sap.com/t5/devtoberfest/discover-the-latest-innovations-in-the-abap-language/ev-p/14187754" target="_blank"&gt;Devtober session&lt;/A&gt; about spatial functions in ABAP SQL is offered on 13 October 2025.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/spatial-functions-in-abap-sql/ba-p/14179920"/>
    <published>2025-10-07T08:00:00.032000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/new-cloudification-repository-viewer-for-clean-core-governance-and/ba-p/14236110</id>
    <title>New Cloudification Repository Viewer for Clean Core Governance and Development</title>
    <updated>2025-10-07T10:21:10.443000+02:00</updated>
    <author>
      <name>Rundong_Liu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/147757</uri>
    </author>
    <content>&lt;P&gt;This blog is meant to be a &lt;STRONG&gt;quick read&lt;/STRONG&gt; ‚Äî the idea is to cover the new Clean Core&lt;STRONG&gt; Cloudification Repository Viewer&lt;/STRONG&gt; (CRV) features over your morning coffee&lt;span class="lia-unicode-emoji" title=":hot_beverage:"&gt;‚òï&lt;/span&gt;, and kick off a new day of your SAP Clean Core journey.&lt;/P&gt;&lt;P&gt;&lt;A href="https://sap.github.io/abap-atc-cr-cv-s4hc/" target="_blank" rel="nofollow noopener noreferrer"&gt;https://sap.github.io/abap-atc-cr-cv-s4hc/&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;I am an SAP Clean Core and Extensibility Lifecycle consultant, and I have supported many RISE with SAP customers in establishing Clean Core governance models, solution standardization boards (SSB), and extensibility development guidelines. Through various concrete &lt;STRONG&gt;use cases&lt;/STRONG&gt;, I have gained extensive hands-on experience.&lt;/P&gt;&lt;P&gt;From the perspective of Clean Core development and governance, having a unified API repository is of critical importance.&lt;/P&gt;&lt;P&gt;After SAP released the Clean Core Extensibility White Paper and the New Clean Core Level concept, the Cloudification Repository Viewer has now also been updated with a new version, and I am very excited to share its &lt;STRONG&gt;new features&lt;/STRONG&gt; with you right away.&lt;/P&gt;&lt;H4 id="toc-hId-2020100188"&gt;SAP Product&lt;/H4&gt;&lt;P&gt;In the filter bar, we will see the &lt;STRONG&gt;SAP Products&lt;/STRONG&gt;: SAP Cloud ERP, SAP Cloud ERP Private, and SAP BTP ABAP Environment. If the system is SAP Cloud ERP Private, we select SAP Cloud ERP Private.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rundong_Liu_2-1759823565056.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323570iF8EF0E29E714E4E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rundong_Liu_2-1759823565056.png" alt="Rundong_Liu_2-1759823565056.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1823586683"&gt;Release&lt;/H4&gt;&lt;P&gt;After selecting SAP Cloud ERP Private, we will then see a &lt;STRONG&gt;Release option&lt;/STRONG&gt;. Here, we can choose the Cloud ERP release version and the corresponding SP level. It is worth noting that as the Cloud ERP evolves, the number of available APIs is steadily increasing.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rundong_Liu_1-1759823523449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323568i89E6698CBD07EAB8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rundong_Liu_1-1759823523449.png" alt="Rundong_Liu_1-1759823523449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1627073178"&gt;Partner Namespace&lt;/H4&gt;&lt;P&gt;One particularly exciting development is the introduction of the ‚Äú&lt;STRONG&gt;Partner Namespace&lt;/STRONG&gt;.‚Äù With SAP Clean Core‚Äôs certification for partners, certified partners are now able to publish released APIs as well. In my view, this represents a significant step forward for the entire &lt;STRONG&gt;extensibility ecosystem&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rundong_Liu_0-1759822810739.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323563i9BFFC3801D2BBB38/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rundong_Liu_0-1759822810739.png" alt="Rundong_Liu_0-1759822810739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1430559673"&gt;State&lt;/H4&gt;&lt;P&gt;Next is the ‚ÄúState‚Äù field, which is the most interesting part because the &lt;STRONG&gt;Clean Core levels&lt;/STRONG&gt; are ‚Äúhidden‚Äù here. This allows us to easily and clearly identify whether an API is categorized as Level A, B, C, or D.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rundong_Liu_0-1759827103410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323582i5D04C72CFCDA61C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rundong_Liu_0-1759827103410.png" alt="Rundong_Liu_0-1759827103410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1234046168"&gt;Object Type / Software Component / Application Component&lt;/H4&gt;&lt;P&gt;As in the previous version, filtering objects by Object Type, Software Component, or Application Component is also supported.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rundong_Liu_5-1759823792199.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323574i12921AB2A0562CE7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rundong_Liu_5-1759823792199.png" alt="Rundong_Liu_5-1759823792199.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1037532663"&gt;Label&lt;/H4&gt;&lt;P&gt;Within the final Label field, additional details are available ‚Äî for instance, APIs marked as ‚Äútransactional-consistent‚Äù are suitable for use in RAP-based applications.&lt;/P&gt;&lt;H4 id="toc-hId-841019158"&gt;&lt;STRONG&gt;To summarize:&lt;/STRONG&gt;&lt;/H4&gt;&lt;OL&gt;&lt;LI&gt;The new CRV interface has a &lt;STRONG&gt;clearer layout&lt;/STRONG&gt; ‚Äî first select the Cloud ERP version, then the release version, and then the state/level, which makes the process straightforward.&lt;/LI&gt;&lt;LI&gt;Released APIs, classic APIs, not-to-be-released APIs, and NO APIs can be presented in a single view, distinguished and filtered by &lt;EM&gt;State&lt;/EM&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Clean Core levels&lt;/STRONG&gt; are shown explicitly, which makes identifying the classification of each API much simpler.&lt;/LI&gt;&lt;LI&gt;The Clean Core API framework is becoming increasingly standardized, with more and more Level A and B APIs available.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Partner APIs&lt;/STRONG&gt; that have been certified are also being included, further expanding the extensibility ecosystem.&lt;/LI&gt;&lt;LI&gt;Object Type, Software Component, Application Component, and Label are still retained.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;With the release of the new CRV version, I‚Äôm delighted to have another handy tool added to my Clean Core governance and extensibility development arsenal.&lt;/P&gt;&lt;H4 id="toc-hId-644505653"&gt;Of course, a single weapon is not enough ‚Äî we also need to leverage all the Clean Core tools to deliver a true &lt;STRONG&gt;combination punch&lt;/STRONG&gt;:&lt;/H4&gt;&lt;P data-unlink="true"&gt;For Clean Core extensibility White paper, please refer to &lt;A href="https://d.dam.sap.com/a/juG2xVj/Clean_core_extensibility_white_paper_Final8.pdf?rc=10&amp;amp;inline=true" target="_self" rel="noopener noreferrer"&gt;Whitepaper&amp;nbsp;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For Clean Core ATC Checks, please refer to &lt;A href="https://me.sap.com/notes/3565942" target="_blank" rel="noopener noreferrer"&gt;note 3565942&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For Clean Core frameworks, technologies and development patterns, please refer to &lt;A href="https://me.sap.com/notes/3578329" target="_blank" rel="noopener noreferrer"&gt;note 3578329&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For SAP Build on BTP, please refer to &lt;A href="https://learning.sap.com/products/sap-build" target="_blank" rel="noopener noreferrer"&gt;SAP Build&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For Clean Core Extensibility Guide, please refer to &lt;A href="https://www.sap.com/documents/2022/10/52e0cd9b-497e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Extensibility Guide&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For &lt;STRONG&gt;Clean Core governance services, intelligent custom code analysis and transformation, extensibility lifecycle management, and AI tools,&lt;/STRONG&gt; please don‚Äôt hesitate to reach out to me. I‚Äôll be more than happy to share more real project use cases!&lt;/P&gt;&lt;P&gt;Now you‚Äôve probably finished your coffee. And I hope this quick overview has given you a clear taste of the new CRV features.&lt;/P&gt;&lt;H4 id="toc-hId-447992148"&gt;As a final note, please&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;don‚Äôt forget to upskill on &lt;STRONG&gt;SAP Build&lt;/STRONG&gt; on BTP,&lt;/LI&gt;&lt;LI&gt;establish&amp;nbsp;Clean Core &lt;STRONG&gt;Measurement &lt;/STRONG&gt;&lt;SPAN&gt;&lt;STRONG&gt;Framework&lt;/STRONG&gt; and &lt;STRONG&gt;KPIs&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;and always prioritize &lt;STRONG&gt;Fit-to-Standard&lt;/STRONG&gt; and extension on &lt;STRONG&gt;Level A&lt;/STRONG&gt; for new development use cases!&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Let‚Äôs keep moving forward on the Clean Core journey ‚Äî learning, improving, and building smarter together! &lt;span class="lia-unicode-emoji" title=":clinking_beer_mugs:"&gt;üçª&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thanks! &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;üòä&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/new-cloudification-repository-viewer-for-clean-core-governance-and/ba-p/14236110"/>
    <published>2025-10-07T10:21:10.443000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-how-to-grey-out-copy-button-in-erp-vendor-purchasing-organizations/ba-p/14235716</id>
    <title>SAP MDG: How to Grey Out Copy Button in ERP Vendor: Purchasing Organizations UIBB ?</title>
    <updated>2025-10-07T11:30:00.021000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi&amp;nbsp;SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great&lt;SPAN&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;üôÇ&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;This blog does not include execution screenshots.&lt;STRONG&gt;&lt;BR /&gt;Note 02:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;STRONG&gt;&lt;BR /&gt;Note 03:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;There are several ways; this blog is written about one of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create customizing or enhance UIBB.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Standard Feeder Class:&lt;/STRONG&gt;&amp;nbsp;CL_BS_SP_GUIBB_PURCH_ORGS.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create one custom class:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;ZCL_MDGS_GUIBB_PURCH_ORGS &amp;amp; do inherit above standard feeder class.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Now, utilize this method:&lt;/STRONG&gt;&amp;nbsp; METHOD if_fpm_guibb_list~get_data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Code:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CALL METHOD super-&amp;gt;if_fpm_guibb_list~get_data
      EXPORTING
        iv_eventid                = iv_eventid
        it_selected_fields        = it_selected_fields
        iv_raised_by_own_ui       = iv_raised_by_own_ui
        iv_visible_rows           = iv_visible_rows
        iv_edit_mode              = iv_edit_mode
        io_extended_ctrl          = io_extended_ctrl
      IMPORTING
        et_messages               = et_messages
        ev_data_changed           = ev_data_changed
        ev_field_usage_changed    = ev_field_usage_changed
        ev_action_usage_changed   = ev_action_usage_changed
        ev_selected_lines_changed = ev_selected_lines_changed
        ev_dnd_attr_changed       = ev_dnd_attr_changed
        eo_itab_change_log        = eo_itab_change_log
      CHANGING
        ct_data                   = ct_data
        ct_field_usage            = ct_field_usage
        ct_action_usage           = ct_action_usage
        ct_selected_lines         = ct_selected_lines
        cv_lead_index             = cv_lead_index
        cv_first_visible_row      = cv_first_visible_row
        cs_additional_info        = cs_additional_info
        ct_dnd_attributes         = ct_dnd_attributes.

DATA :
      lv_cr_number TYPE usmd_crequest,
      lv_crtype    TYPE usmd_crequest_type,
      lv_process   TYPE usmd_process.

DATA(lo_context) = cl_usmd_app_context=&amp;gt;get_context( ).

IF lo_context IS BOUND.
   CALL METHOD lo_context-&amp;gt;get_attributes
        IMPORTING
          ev_crequest_id   = lv_cr_number
          ev_crequest_type = lv_crtype
          ev_process       = lv_process.
ENDIF.

IF lv_crtype EQ 'ZMDGS01'.
  READ TABLE ct_action_usage ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_copy&amp;gt;) WITH KEY id = 'BOL_COPY'.
   &amp;lt;lfs_copy&amp;gt;-visible = '01'.
ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-how-to-grey-out-copy-button-in-erp-vendor-purchasing-organizations/ba-p/14235716"/>
    <published>2025-10-07T11:30:00.021000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/abap-blog-posts/abap-code-to-wait-for-the-end-of-quot-inbound-bgrfc-type-q-quot-units/ba-p/14237566</id>
    <title>ABAP code to wait for the end of "inbound bgRFC type Q" units</title>
    <updated>2025-10-07T20:28:26.490000+02:00</updated>
    <author>
      <name>Sandra_Rossi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145194</uri>
    </author>
    <content>&lt;P&gt;I have a program which runs parallel tasks in the same system by using bgRFC and several qRFC queues: each queue runs tasks sequentially, but two queues run in parallel. With bgRFC, each task is called a unit. This scenario is called Inbound bgRFC type Q, see here for more information:&amp;nbsp;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/753088fc00704d0a80e7fbd6803c8adb/48927c2caa6b17cee10000000a421937.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;bgRFC (Background Remote Function Call) | SAP Help Portal&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Once all units are started, I want the program to wait for all units to finish.&lt;/P&gt;&lt;P&gt;I propose a simple ABAP method which should work for most of situations.&lt;/P&gt;&lt;P&gt;There are really very few posts about bgRFC and the official documentation is missing information too, so I hope it can help some people. Note: I don't even know if the classes I use are supported by SAP and if it's the right way to do it, so all comments are welcome, thank you.&lt;/P&gt;&lt;P&gt;Here is the context how this method is used (&lt;CODE&gt;WAIT_END_OF_QRFC_INBOUND_UNITS&lt;/CODE&gt;) :&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA(inbound_destination) = cl_bgrfc_destination_inbound=&amp;gt;create( 'ZZZ' ).

LOOP AT any_table INTO line.
  DATA(unit) = inbound_destination-&amp;gt;create_qrfc_unit( ).
  unit-&amp;gt;add_queue_name_inbound( line-queue_name ).

  CALL FUNCTION '...' 
     IN BACKGROUND UNIT unit
     EXPORTING ...

  INSERT unit INTO TABLE units.
ENDLOOP.

COMMIT WORK.

DATA(wait_results) = zcl_bgrfc_helper=&amp;gt;wait_end_of_qrfc_inbound_units(
                       i_watch_delay_seconds = 5
                       i_units               = units ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Little explanation: there's an internal table containing data which needs to be processed in parallel via a given RFC-enabled function module. The internal table assigns given queue names to each line of data in order to achieve the parallelization. For instance, one half of the table goes to the queue named Z1, all calls in Z1 will be executed sequentially, the other half goes to the queue named Z2, the calls in Z1 and Z2 will be executed in parallel).&lt;/P&gt;&lt;P&gt;&lt;CODE&gt;CALL FUNCTION ... IN BACKGROUND UNIT unit ...&lt;/CODE&gt;&amp;nbsp;registers a call in a given bgRFC unit. You may call several function modules in the same unit. The function modules are not called until &lt;CODE&gt;COMMIT WORK&lt;/CODE&gt; is reached.&lt;/P&gt;&lt;P&gt;&lt;CODE&gt;COMMIT WORK&lt;/CODE&gt; creates the inbound bgRFC units in the database (function module calls and parameters) and all the queues are started by the bgRFC scheduler. You can see the units via the transaction SBGRFCMON.&lt;/P&gt;&lt;P&gt;Prerequisite: the inbound destination ZZZ was created via the transaction SBGRFCCONF. Nothing else needed (no prefix, no RFC destination in SM59, queue names are assigned freely by the program, etc.)&lt;/P&gt;&lt;P&gt;Here's the code of the method &lt;CODE&gt;WAIT_END_OF_QRFC_INBOUND_UNITS&lt;/CODE&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_bgrfc_helper DEFINITION FINAL PUBLIC CREATE PRIVATE.
  PUBLIC SECTION.
    TYPES ty_qrfc_inbound_units TYPE STANDARD TABLE OF REF TO if_qrfc_unit_inbound WITH EMPTY KEY.
    TYPES:
      BEGIN OF ty_bgrfc_unit_state,
        unit         TYPE REF TO if_qrfc_unit_inbound,
        "! Time at which the information was collected
        timestamp    TYPE timestampl,
        unit_success TYPE abap_bool,
        unit_error   TYPE abap_bool,
        "! In case there's a unit error
        unit_state   TYPE bgrfc_unit_state,
        queue_error  TYPE abap_bool,
        "! In case there's a queue error
        queue_state  TYPE qrfc_queue_state,
      END OF ty_bgrfc_unit_state.
    TYPES ty_bgrfc_unit_states TYPE SORTED TABLE OF ty_bgrfc_unit_state WITH UNIQUE KEY unit.

    CLASS-METHODS wait_end_of_qrfc_inbound_units
      IMPORTING i_watch_delay_seconds      TYPE numeric DEFAULT 5
                i_units                    TYPE ty_qrfc_inbound_units
      RETURNING VALUE(r_bgrfc_unit_states) TYPE ty_bgrfc_unit_states.

    CLASS-METHODS get_timestamp
      RETURNING VALUE(r_result) TYPE timestampl.
ENDCLASS.

CLASS zcl_bgrfc_helper IMPLEMENTATION.
  METHOD wait_end_of_qrfc_inbound_units.
    TYPES:
      BEGIN OF ty_queue,
        queue_name TYPE qrfc_queue_name,
        dest_name  TYPE bgrfc_dest_name_inbound,
      END OF ty_queue.
    TYPES tt_queue TYPE SORTED TABLE OF ty_queue WITH UNIQUE KEY queue_name dest_name.
    TYPES:
      BEGIN OF ty_unit_and_queue,
        unit       TYPE REF TO if_qrfc_unit_inbound,
        queue_name TYPE qrfc_queue_name,
        dest_name  TYPE bgrfc_dest_name_inbound,
      END OF ty_unit_and_queue.
    TYPES tt_unit_and_queue TYPE SORTED TABLE OF ty_unit_and_queue WITH UNIQUE KEY unit
                            WITH NON-UNIQUE SORTED KEY by_inbound_queue COMPONENTS queue_name dest_name.

    DATA ls_unit_and_queue TYPE REF TO ty_unit_and_queue.

    DATA(lt_queue) = REDUCE #(
                    INIT lt_queue_2 = VALUE tt_queue( )
                    FOR &amp;lt;lv_unit&amp;gt; IN i_units
                    FOR &amp;lt;lv_queue_name&amp;gt; IN &amp;lt;lv_unit&amp;gt;-&amp;gt;get_queue_names_inbound( )
                    NEXT lt_queue_2 = COND #(
                         WHEN NOT line_exists( lt_queue_2[ queue_name = &amp;lt;lv_queue_name&amp;gt;
                                                           dest_name  = &amp;lt;lv_unit&amp;gt;-&amp;gt;destination-&amp;gt;dest_name ] )
                         THEN VALUE #( BASE lt_queue_2
                                       ( queue_name = &amp;lt;lv_queue_name&amp;gt;
                                         dest_name  = &amp;lt;lv_unit&amp;gt;-&amp;gt;destination-&amp;gt;dest_name )  )
                         ELSE lt_queue_2 ) ).

    DATA(lt_unit_and_queue) = VALUE tt_unit_and_queue( FOR &amp;lt;lv_unit&amp;gt; IN i_units
                                                       FOR &amp;lt;lv_queue_name&amp;gt; IN &amp;lt;lv_unit&amp;gt;-&amp;gt;get_queue_names_inbound( )
                                                       ( unit       = &amp;lt;lv_unit&amp;gt;
                                                         queue_name = &amp;lt;lv_queue_name&amp;gt;
                                                         dest_name  = &amp;lt;lv_unit&amp;gt;-&amp;gt;destination-&amp;gt;dest_name ) ).
    WHILE lt_unit_and_queue IS NOT INITIAL.

      WAIT UP TO i_watch_delay_seconds SECONDS.

      LOOP AT lt_unit_and_queue REFERENCE INTO ls_unit_and_queue.
        DATA(bgrfc_unit_state) = cl_qrfc_client_inbound=&amp;gt;get_unit_state( ls_unit_and_queue-&amp;gt;unit-&amp;gt;unit_id ).
        CASE bgrfc_unit_state.
          WHEN if_bgrfc_client=&amp;gt;unit_state_runnable
            OR if_bgrfc_client=&amp;gt;unit_state_in_execution
            OR if_bgrfc_client=&amp;gt;unit_state_blocked ##NO_HANDLER.
          WHEN if_bgrfc_client=&amp;gt;unit_state_executed.
            r_bgrfc_unit_states = VALUE #( BASE r_bgrfc_unit_states
                                           ( unit         = ls_unit_and_queue-&amp;gt;unit
                                             timestamp    = get_timestamp( )
                                             unit_state   = bgrfc_unit_state
                                             unit_success = abap_true ) ).
            DELETE lt_unit_and_queue USING KEY loop_key.
          WHEN OTHERS.
            r_bgrfc_unit_states = VALUE #( BASE r_bgrfc_unit_states
                                           ( unit       = ls_unit_and_queue-&amp;gt;unit
                                             timestamp  = get_timestamp( )
                                             unit_state = bgrfc_unit_state
                                             unit_error = abap_true ) ).
            DELETE lt_unit_and_queue USING KEY loop_key.
        ENDCASE.
      ENDLOOP.

      LOOP AT lt_queue REFERENCE INTO DATA(queue).
        DATA(bgrfc_queue_state) = cl_qrfc_client_inbound=&amp;gt;get_queue_state( queue_name = queue-&amp;gt;queue_name
                                                                           dest_name  = queue-&amp;gt;dest_name ).
        CASE bgrfc_queue_state.
          WHEN if_bgrfc_client=&amp;gt;queue_state_runnable
            OR if_bgrfc_client=&amp;gt;queue_state_in_execution
            OR if_bgrfc_client=&amp;gt;queue_state_empty ##NO_HANDLER.
          WHEN OTHERS.
            LOOP AT lt_unit_and_queue REFERENCE INTO ls_unit_and_queue
                 USING KEY by_inbound_queue
                 WHERE     queue_name = queue-&amp;gt;queue_name
                       AND dest_name  = queue-&amp;gt;dest_name.
              r_bgrfc_unit_states = VALUE #( BASE r_bgrfc_unit_states
                                             ( unit        = ls_unit_and_queue-&amp;gt;unit
                                               timestamp   = get_timestamp( )
                                               queue_state = bgrfc_queue_state
                                               queue_error = bgrfc_queue_state ) ).
              DELETE lt_unit_and_queue WHERE unit = ls_unit_and_queue-&amp;gt;unit.
            ENDLOOP.
            DELETE lt_queue USING KEY loop_key.
        ENDCASE.
      ENDLOOP.
    ENDWHILE.
  ENDMETHOD.

  METHOD get_timestamp.
    GET TIME STAMP FIELD r_result.
  ENDMETHOD.
ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;As I said, I don't know if these classes are released by SAP:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;cl_qrfc_client_inbound=&amp;gt;get_unit_state&lt;/CODE&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;CODE&gt;cl_qrfc_client_inbound=&amp;gt;get_queue_state&lt;/CODE&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The method should support units which span other several inbound queues, but I didn't test it.&lt;/P&gt;&lt;P&gt;In my case, I could see that one unit has these states: runnable (briefly), in execution, executed. In a given queue, there's only one unit processed at a time. All the units instantiated after the one processed have the state blocked. Other states should be errors (e.g. short dump, uncaught exception, error message, etc.)&lt;/P&gt;&lt;P&gt;The queues have these states: empty if it doesn't contain any unit, runnable if it contains at least one unit to execute but it's not started yet, in execution when a unit is processed.&lt;/P&gt;&lt;P&gt;About the code, in case you want to ask: "DELETE itab USING KEY loop_key" is to delete the current line in the loop (LOOP AT itab), it corresponds to the old and less expressive syntax "DELETE itab". I used the pragma ##NO_HANDLER for CASE WHEN although it's not asked by the syntax check, the pragma is meant to be used for CATCH, when there's no code inside.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Any way, feel free to post any comment.&lt;/P&gt;&lt;P&gt;Thank you for reading.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/abap-blog-posts/abap-code-to-wait-for-the-end-of-quot-inbound-bgrfc-type-q-quot-units/ba-p/14237566"/>
    <published>2025-10-07T20:28:26.490000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/steps-to-configure-aif-for-complex-structure-file-data-with-multiple-header/ba-p/14185594</id>
    <title>Steps to Configure AIF for Complex Structure File Data with Multiple Header-Item in Flat File</title>
    <updated>2025-10-08T06:18:42.007000+02:00</updated>
    <author>
      <name>pratik_shah9</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/421459</uri>
    </author>
    <content>&lt;P&gt;In this blog I'd like to share the Steps of integrating complex structured file data into SAP systems to dealing with nested formats like header-item-schedule line relationships.&amp;nbsp; Application Integration Framework (AIF) provides a powerful and flexible solution to address these challenges. By leveraging AIF‚Äôs capabilities, such as custom DDIC structures, composite data modeling, and robust file adapter configurations‚Äîorganizations can streamline their file-based integrations, reduce custom coding efforts, and improve data accuracy. This guide walked through the essential steps to configure AIF for such scenarios, empowering SAP developers to build scalable and maintainable interfaces for enterprise data exchange.&lt;/P&gt;&lt;H4 id="toc-hId-1996062947"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In modern enterprise integration scenarios, organizations often exchange file-based data that includes multiple layers of structured information‚Äîtypically comprising header records and their associated item records. Accurately processing these complex file formats is vital to ensure seamless and reliable data exchange between systems.&lt;/P&gt;&lt;P&gt;SAP‚Äôs Application Integration Framework (AIF) offers a comprehensive solution for managing such integrations. It supports the definition and handling of&amp;nbsp;complex data structures, including nested models where each header can be linked to multiple item records. This capability enables flexible interface design and robust data validation, making AIF an ideal choice for processing structured file content in SAP environments.&lt;/P&gt;&lt;P&gt;By utilizing AIF‚Äôs features, organizations can streamline file-based integrations and enhance data consistency across systems.&lt;/P&gt;&lt;H4 id="toc-hId-1799549442"&gt;&lt;STRONG&gt;Problem Description&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;In enterprise integrations, companies often receive files from external systems that contain structured data‚Äîlike sales orders with headers and related item details. These files can be complex, with multiple layers of information that need to be grouped and processed correctly.&lt;/P&gt;&lt;P&gt;Standard file processing in SAP can struggle with this kind of nested data. Common issues include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Difficulty linking items to the correct headers&lt;/LI&gt;&lt;LI&gt;Risk of data mismatches&lt;/LI&gt;&lt;LI&gt;Complicated custom code for parsing and validation&lt;/LI&gt;&lt;LI&gt;Limited tools for tracking and fixing errors&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Application Integration Framework (AIF) helps solve these problems by supporting complex data structures. It allows headers to be connected to multiple items and provides tools for parsing, validating, and monitoring the data. However, setting up AIF for this requires careful planning and configuration to ensure everything works smoothly.&lt;/P&gt;&lt;H4 id="toc-hId-1603035937"&gt;&lt;STRONG&gt;How does it work?&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;You need to perform the following steps to create an inbound file interface:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create the RAW structures for the interface&lt;/LI&gt;&lt;LI&gt;Develop the interface&lt;/LI&gt;&lt;LI&gt;Configure the file adapter settings for your interface&lt;/LI&gt;&lt;LI&gt;Upload File&lt;/LI&gt;&lt;LI&gt;Check Monitoring and Error Handling transaction&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;The following example will describe step-by-step how to Configure AIF for Complex File Data with Multiple Header-Item in Flat File&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Simple example of a&amp;nbsp;Sales Order&amp;nbsp;creation in SAP, showing how the&amp;nbsp;Header,&amp;nbsp;Item, and&amp;nbsp;Schedule Line&amp;nbsp;levels are organized&lt;/P&gt;&lt;H5 id="toc-hId-1535605151"&gt;&lt;STRONG&gt;Prepare the Flat File (CSV Format)&lt;/STRONG&gt;&lt;/H5&gt;&lt;P&gt;Create a&amp;nbsp;.csv&amp;nbsp;file using a pipe (|) as the delimiter. Here's a simple structure:&lt;/P&gt;&lt;P&gt;In order to execute this example, we require a file containing some test data and corresponding structures.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_25-1755709358100.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303139i2DF039866826164C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_25-1755709358100.png" alt="pratik_shah9_25-1755709358100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_26-1755709358101.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303136i63241580DD1B670D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_26-1755709358101.png" alt="pratik_shah9_26-1755709358101.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Explanation:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HEAD&amp;nbsp;= Header line (Sales Order Number, Date, Customer, Sales Org, Currency)&lt;/LI&gt;&lt;LI&gt;ITEM&amp;nbsp;= Item line (Item Number, Material, Material Description, Quantity, Price)&lt;/LI&gt;&lt;LI&gt;SCHD&amp;nbsp;= Schedule line (Item Number, Schedule Line Item, Delivery Date, Quantity)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;U&gt;&lt;STRONG&gt;1. Create Raw Structures for the interface&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;üîß&lt;/span&gt;&amp;nbsp;Step 1: Create DDIC Structures&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.1&amp;nbsp;Header Structure ‚Äì&amp;nbsp;YAIF_ORDER_HDR&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Data Element&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ORDER_NO&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;VBELN&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales Order Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ORDER_DATE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;AUDAT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Document Date&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;CUSTOMER_ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;KUNNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Customer Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;VKORG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;VKORG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales Organization&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;CURRENCY&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;WAERS&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Currency&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_27-1755709358103.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303138iC3AE0318BAF93B7B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_27-1755709358103.png" alt="pratik_shah9_27-1755709358103.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.2&amp;nbsp;Item Structure ‚Äì&amp;nbsp;YAIF_ORDER_ITEM&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Data Element&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ITEM_NO&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;POSNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Item Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;MATNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;MATNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;MAKTX&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;MAKTX&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material Description&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;MENGE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;MENGE_D&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Quantity&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;AMOUNT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;NETPR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Price&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_28-1755709358104.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303140i1E80168219A0EE6F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_28-1755709358104.png" alt="pratik_shah9_28-1755709358104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1.3&amp;nbsp;Schedule Line Structure ‚Äì&amp;nbsp;YAIF_ORDER_SCHEDULE_LINE&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Data Element&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;POSNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;POSNR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Item Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ETENR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ETENR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Schedule Line Number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;DELIVERY_DATE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;EDATU&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Delivery Date&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;BMENG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;BMENG&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Delivery Quantity&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_29-1755709358106.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303143i1A41C2DB10E27C1C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_29-1755709358106.png" alt="pratik_shah9_29-1755709358106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":package:"&gt;üì¶&lt;/span&gt;&amp;nbsp;Step 2: Create Table Types&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.1&amp;nbsp;Item Table Type ‚Äì&amp;nbsp;YAIF_ORDER_ITEM_TT&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Line Type:&amp;nbsp;YAIF_ORDER_ITEM&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;2.2&amp;nbsp;Schedule Line Table Type ‚Äì&amp;nbsp;YAIF_ORDER_SCHEDULE_LINE_TT&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Line Type:&amp;nbsp;YAIF_ORDER_SCHEDULE_LINE&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;üß©&amp;nbsp;Step 3: Create Composite Structure&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.1&amp;nbsp;Detail Structure ‚Äì&amp;nbsp;YAIF_ORDER_DTL&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;HEADER&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;YAIF_ORDER_HDR&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Header Structure&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ITEM&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;YAIF_ORDER_ITEM_TT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Table of Items&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;SCHEDULE_LINE&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;YAIF_ORDER_SCHEDULE_LINE_TT&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Table of Schedule Lines&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_30-1755709358108.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303142i119142AF630471C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_30-1755709358108.png" alt="pratik_shah9_30-1755709358108.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3.2&amp;nbsp;Table Type ‚Äì&amp;nbsp;YAIF_ORDER_DTL_TT&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Line Type:&amp;nbsp;YAIF_ORDER_DTL&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;3.3&amp;nbsp;RAW Structure ‚Äì&amp;nbsp;YAIF_ORDER_DTL_S&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create the RAW structure for the interface. The structure contains only one component named&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Component Name:&amp;nbsp;ORDER&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Component Type:&amp;nbsp;YAIF_ORDER_DTL_TT&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_31-1755709358109.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303144iBB8F2AA2F1F1A1B9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_31-1755709358109.png" alt="pratik_shah9_31-1755709358109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;U&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;2. Develop the interface&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;üöÄ&lt;/span&gt;&amp;nbsp;Step 4: Configure AIF Interface&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.1&amp;nbsp;Define Namespace&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use transaction&amp;nbsp;/AIF/CUST&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_32-1755709358114.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303146iB561D27B8CF27906/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_32-1755709358114.png" alt="pratik_shah9_32-1755709358114.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define namespace (e.g. YSALE)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_33-1755709358116.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303145i50899B6389B56CA6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_33-1755709358116.png" alt="pratik_shah9_33-1755709358116.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.2 Define Interfaces&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define Interface&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_34-1755709358121.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303149iD04A8A138CA8E889/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_34-1755709358121.png" alt="pratik_shah9_34-1755709358121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.3&amp;nbsp;Specify Interface Engines&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_35-1755709358125.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303147iD3FD373BCD4C8C49/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_35-1755709358125.png" alt="pratik_shah9_35-1755709358125.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Assign the SAP Application Engine&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Click-&amp;gt;Additional Interface Properties-&amp;gt;Specify Interface Engines&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_36-1755709358128.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303148i06378702EB0F0F60/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_36-1755709358128.png" alt="pratik_shah9_36-1755709358128.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.4 Assign Source Structure Line&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_0-1755711217761.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303180i362CE2B8C1551216/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_0-1755711217761.png" alt="pratik_shah9_0-1755711217761.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define Structure Mappings&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_37-1755709358130.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303150iD708B829373C3656/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_37-1755709358130.png" alt="pratik_shah9_37-1755709358130.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.4.2&amp;nbsp;Assign Destination Structure&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Select source structure line-&amp;gt;Click-&amp;gt;Assign Destination Sturcture&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_50-1755710068080.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303175i13408F483045D0BE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_50-1755710068080.png" alt="pratik_shah9_50-1755710068080.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4.4.3&amp;nbsp;Assign Actions&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create an action (e.g. SALE_CREATE)&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Click-&amp;gt;Assign Action&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_38-1755709358135.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303151i54CD822611264BC3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_38-1755709358135.png" alt="pratik_shah9_38-1755709358135.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click Enter on Action to create the action is action is not created&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_39-1755709358140.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303152iC6114D41D54A7F28/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_39-1755709358140.png" alt="pratik_shah9_39-1755709358140.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_40-1755709358144.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303154iCC3C1126DF109F57/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_40-1755709358144.png" alt="pratik_shah9_40-1755709358144.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt;Define Function ( To assign Function Module )&lt;/P&gt;&lt;P&gt;Double-click to create the&amp;nbsp;Function Module&amp;nbsp;that processes the data if not created&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_41-1755709358147.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303153i60CCD992D9E22D9F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_41-1755709358147.png" alt="pratik_shah9_41-1755709358147.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Navigate into the new function module by double clicking the name. In the function module call the follow up processing by inserting the coding displayed below&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*// Sample Logic
 CALL FUNCTION 'BAPI_CUSTOMER_CREATE
  EXPORTING
    customer_data = CURR-HEADER
    customer_item = CURR-ITEM
    schedule_line = CURR-SCHEDULE_LINE
  TABLES
    return = return_tab.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Save and activate the function module.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;3. Configure the file adapter settings for your interface&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;Click-&amp;gt; System Configuration-&amp;gt;Configure File Adapter&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_42-1755709358152.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303155iB2CDCC7C61F6F72E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_42-1755709358152.png" alt="pratik_shah9_42-1755709358152.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;File Type (ASC or BINARY)&lt;/LI&gt;&lt;LI&gt;File Content (Flat Structure, Complex Structure, XML, USER, XSLX )&lt;/LI&gt;&lt;LI&gt;Text Type (Fix char, Special Character Separator)&lt;/LI&gt;&lt;LI&gt;Offset Type Det Val (To Identify the record type from where it will start i.e HEAD, ITEM, SCHD line Details to prepare the data structure dynamically)&lt;/LI&gt;&lt;LI&gt;Length Type Det Val (Length of identity record type in i.e in our case first 4 character of new line)&lt;/LI&gt;&lt;LI&gt;Del Deter Val (True means ignore 1st Field separator immediately after the Det Value)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_43-1755709358156.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303157iDBFDB028D5AB64E5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_43-1755709358156.png" alt="pratik_shah9_43-1755709358156.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Leading Type (If we mark the record type as 'true', it means a new record will start from the file)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_44-1755709358160.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303158i413EDF4CBA11ED22/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_44-1755709358160.png" alt="pratik_shah9_44-1755709358160.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_45-1755709358164.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303156i70E070B1CA7E6BF3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_45-1755709358164.png" alt="pratik_shah9_45-1755709358164.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_46-1755709358167.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303159iDAC0649586CC1997/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_46-1755709358167.png" alt="pratik_shah9_46-1755709358167.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_47-1755709358169.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303160iBF9942B698A8555E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_47-1755709358169.png" alt="pratik_shah9_47-1755709358169.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT color="#339966"&gt;&lt;STRONG&gt;4. Upload File&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;The final step is to select and upload the file. The AIF File Upload can be found in the SAP Menu under SAP Menu -&amp;gt; Cross-Application Components --&amp;gt; SAP Application Interface Framework --&amp;gt; File Upload (or directly via transaction /AIF/LFA_UPLOAD_FILE).&lt;BR /&gt;&lt;BR /&gt;Select your File Adapter Configuration (Config. Namespace and Config ID created in step 3). In section Upload from select the path where your file is stored.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_48-1755709358173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303161i94B07E0E97E03347/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_48-1755709358173.png" alt="pratik_shah9_48-1755709358173.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pratik_shah9_49-1755709358177.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303162i0778070DC9485855/image-size/medium?v=v2&amp;amp;px=400" role="button" title="pratik_shah9_49-1755709358177.png" alt="pratik_shah9_49-1755709358177.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Press executes.&lt;/P&gt;&lt;P&gt;&lt;FONT color="#339966"&gt;&lt;U&gt;&lt;STRONG&gt;5. Check Monitoring and Error Handling transaction&lt;/STRONG&gt;&lt;/U&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;You will be forwarded to a log view where the log messages which have occurred during upload through below T-Code.&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;T-Code : /AIF/ERR ,&amp;nbsp; /AIF/IFMON&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080926208"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;SAP‚Äôs Application Integration Framework (AIF) simplifies the integration of complex, structured file data by supporting nested formats like header-item-schedule line relationships. Through custom structures, composite modeling, and flexible configuration, AIF enables scalable, maintainable, and accurate file-based interfaces‚Äîreducing custom code and improving data reliability across systems.&lt;/P&gt;&lt;H3 id="toc-hId-884412703"&gt;&lt;STRONG&gt;Key Benefits of Using AIF for Complex File Integration&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt; &lt;STRONG&gt;Reduced Custom Coding&lt;/STRONG&gt;: Leverage AIF‚Äôs configuration-driven approach to minimize manual parsing and validation logic.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt; &lt;STRONG&gt;Support for Nested Structures&lt;/STRONG&gt;: Easily model and process multi-level data like headers, items, and schedule lines.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt; &lt;STRONG&gt;Improved Data Accuracy&lt;/STRONG&gt;: Built-in validation and mapping tools help ensure consistent and reliable data processing.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt; &lt;STRONG&gt;Enhanced Monitoring &amp;amp; Error Handling&lt;/STRONG&gt;: AIF provides robust tools for tracking, logging, and resolving integration issues.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;‚úÖ&lt;/span&gt; &lt;STRONG&gt;Scalable Interface Design&lt;/STRONG&gt;: Composite structures and reusable components make it easier to extend and maintain interfaces.&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/steps-to-configure-aif-for-complex-structure-file-data-with-multiple-header/ba-p/14185594"/>
    <published>2025-10-08T06:18:42.007000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958</id>
    <title>SAP Joule for Developers Expands to Private Cloud:  Accelerating ABAP Innovation and Transformation</title>
    <updated>2025-10-08T10:27:45.674000+02:00</updated>
    <author>
      <name>lienards</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/227111</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761972361"&gt;&lt;STRONG&gt;Key Highlights&lt;/STRONG&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; are now available in &lt;STRONG&gt;SAP S/4HANA Private Cloud Edition &lt;/STRONG&gt;&lt;STRONG&gt;2025&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;New &lt;STRONG&gt;Custom Code Migration &lt;/STRONG&gt;capabilities accelerate the transformation of classic ERP code to &lt;STRONG&gt;S/4HANA Cloud Private Edition&lt;/STRONG&gt;, including:&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Documentation Chat &lt;/STRONG&gt;- Get accurate answers on SAP S/4HANA simplifications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;ABAP Program Explain &lt;/STRONG&gt;-&amp;nbsp;Understand the business purpose and logic of legacy code.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Explain&lt;/STRONG&gt;&lt;STRONG&gt; for SAP S/4HANA Test Cockpit Issues &lt;/STRONG&gt;-&amp;nbsp;Diagnose and resolve S/4HANA-related Test Cockpit issues using context from simplification items and cookbooks.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Earlier this year, SAP introduced &lt;STRONG&gt;Joule for Developers&lt;/STRONG&gt; ‚Äî a set of embedded artificial intelligence capabilities in SAP Build, including ABAP, that helps developers accelerate application and extension development, reduce costs, and boost productivity.&lt;/P&gt;&lt;P&gt;Joule for Developers, ABAP AI capabilities are now available for S/4HANA Private Cloud Edition, version 2025, providing comprehensive support for ABAP Cloud use cases. The release also introduces the first Custom Code Migration capabilities, bringing a powerful suite of AI-assisted capabilities purpose-built for ABAP development and cloud delivery.&lt;/P&gt;&lt;P&gt;Best of all, Joule for Developers remains free of charge, enabling customers and partners to integrate it into daily operations and accelerate innovation without commercial barriers.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1565458856"&gt;&lt;STRONG&gt;What‚Äôs Included&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This release for Private Cloud delivers AI-powered support for the core development scenarios ABAP developers rely on every day. Key capabilities include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;inline code completion,&lt;/LI&gt;&lt;LI&gt;ABAP/CDS code explanation,&lt;/LI&gt;&lt;LI&gt;automated unit test generation for ABAP and ABAP core data services (CDS),&lt;/LI&gt;&lt;LI&gt;RAP business objects generation,&lt;/LI&gt;&lt;LI&gt;RAP predictive business logic, and&lt;/LI&gt;&lt;LI&gt;OData consumption.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All capabilities are designed to accelerate development, improve code quality, and boost productivity from day one. Additionally, this release introduces the first wave of&lt;STRONG&gt; Custom Code Migration capabilities&lt;/STRONG&gt;, designed to accelerate the move from classic SAP ERP to &lt;STRONG&gt;SAP S/4HANA Cloud Private Cloud Edition&lt;/STRONG&gt;. These AI-powered features simplify code analysis and adaptation by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Providing &lt;STRONG&gt;Documentation Chat&lt;/STRONG&gt; for quick answers on SAP S/4HANA simplifications:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_0-1759907233424.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324475i606AD92C02DAE239/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_0-1759907233424.png" alt="lienards_0-1759907233424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Using &lt;STRONG&gt;ABAP Program Explain&lt;/STRONG&gt; to clarify the business purpose and implementation logic of legacy code:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_1-1759907233436.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324473iC9A1BA70B925AFD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_1-1759907233436.png" alt="lienards_1-1759907233436.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Explaining &lt;STRONG&gt;ABAP Test Cockpit (ATC) findings&lt;/STRONG&gt; with step-by-step guidance on how to fix the issues, based on simplification items and technical documentation:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lienards_2-1759907233449.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/324474i74D164B2F8FB58F9/image-size/large?v=v2&amp;amp;px=999" role="button" title="lienards_2-1759907233449.png" alt="lienards_2-1759907233449.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;All capabilities are designed to reduce manual effort, speed up migration projects, and help your teams to modernize their ABAP landscapes with great confidence.&lt;/P&gt;&lt;P&gt;The ABAP AI software development kit, powered by Intelligent Scenario Lifecycle Management, is now available and offers centralized access to the generative AI hub in SAP AI Core. It leverages the same robust platform SAP uses internally, delivering proven, production-grade infrastructure to customer landscapes. With simplified configuration and governance, development teams can adopt AI capabilities quickly, providing a significant boost to integration efforts.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1368945351"&gt;&lt;STRONG&gt;Why This Matters &lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Private cloud customers require strict governance, security, and operational control - yet they also seek the speed and innovation modern AI-driven development delivers. This release addresses both priorities by enabling:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;faster development cycles&lt;/STRONG&gt; with AI-assisted coding and test generation,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;stronger knowledge transfer&lt;/STRONG&gt; through automated code explanations and copilot interactions,&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;higher delivery quality&lt;/STRONG&gt; with automated testing and code migration support, and&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;secure innovation&lt;/STRONG&gt; within controlled environments.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1172431846"&gt;&lt;STRONG&gt;Looking Ahead&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;We‚Äôre building on this momentum with a series of targeted deliveries aligned to upcoming releases across the BTP ABAP Environment and S/4HANA Cloud Public Edition. Planned updates for &lt;STRONG&gt;BTP ABAP Environment 2511, 2602&lt;/STRONG&gt;, and &lt;STRONG&gt;S/4HANA Cloud Public Edition 2602&lt;/STRONG&gt; include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;documentation generation capabilities,&lt;/LI&gt;&lt;LI&gt;enhanced explanations for reports in the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;AI-enabled insights on Clean Core‚Äìrelated ATC findings directly within the Custom Code Migration application,&lt;/LI&gt;&lt;LI&gt;code migration and adaptation proposals to support developers working on RISE code adaptation,&lt;/LI&gt;&lt;LI&gt;ABAP CDS annotation and metadata extension generation, and&lt;/LI&gt;&lt;LI&gt;ABAP CDS analytical model generation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These enhancements will extend Joule‚Äôs impact beyond code completion and test generation, supporting documentation, migration and Clean Core compliance, analytical use cases, and addressing more stages of the end-to-end development lifecycle.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-975918341"&gt;&lt;STRONG&gt;Free Offer Extended&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers will remain &lt;STRONG&gt;free of charge.&lt;/STRONG&gt; The extended promotion ensures that all customers and partners can continue to use Joule for Developers capabilities for free.&lt;/P&gt;&lt;P&gt;Access can be requested using the material numbers &lt;STRONG&gt;8019124&lt;/STRONG&gt; (customers) and &lt;STRONG&gt;8019541&lt;/STRONG&gt; (TDD partners). This offer now extends beyond the BTP ABAP environment and SAP Cloud ERP Public Edition to include &lt;STRONG&gt;SAP Cloud ERP Private Edition&lt;/STRONG&gt; customers running the latest 2025 release.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-779404836"&gt;&lt;STRONG&gt;Closing Remarks&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;SAP Joule for Developers‚Äô delivery for Private Cloud is a significant milestone ‚Äî combining end-to-end ABAP Cloud with AI use cases, innovative code migration scenarios, and a standardized ABAP AI SDK to bring practical AI assistance directly into everyday development workflows.&lt;/P&gt;&lt;P&gt;With extended free of charge access, we invite every customer and partner to explore SAP Joule for Developers, push its boundaries, and help shape the future of AI-assisted ABAP development.&lt;/P&gt;&lt;P&gt;Start using SAP Joule for Developers today and join us in building the next generation of intelligent, AI-driven ABAP innovation.&lt;/P&gt;&lt;P&gt;For a deeper dive, read the &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-ai-revolution-accelerates-the-abap-developer-who-built-enterprise-apps/ba-p/14216073" target="_blank"&gt;blog post&lt;/A&gt; by Simona Marincei, head of ABAP AI.&lt;/P&gt;&lt;P&gt;Learn more about SAP Joule for Developers capabilities &lt;A href="https://www.sap.com/products/artificial-intelligence/joule-for-developers.html" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-expands-to-private-cloud-accelerating-abap/ba-p/14237958"/>
    <published>2025-10-08T10:27:45.674000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-auto-fill-cr-description-by-data-model-and-cr-type-description/ba-p/14235813</id>
    <title>SAP MDG: Auto-fill CR Description by Data Model and CR Type Description</title>
    <updated>2025-10-08T11:30:00.053000+02:00</updated>
    <author>
      <name>sandeep_suggu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/11644</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Hi&amp;nbsp;SCN Folks,&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Hope you guys are doing great&lt;SPAN&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;üôÇ&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note 01:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;This blog does not include execution screenshots.&lt;STRONG&gt;&lt;BR /&gt;Note 02:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;The entire code was developed and validated in the SANDBOX system, with results meeting expectations.&lt;STRONG&gt;&lt;BR /&gt;Note 03:&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;There are several ways; this blog is written about one of them.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;BADI Responsible:&amp;nbsp;&lt;/STRONG&gt;USMD_CREQUEST_INTEGRATION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Auto-populate the Change Request Description with the Data Model‚Äôs CR Type Description so every MDG CR is consistently and meaningfully described.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create Custom implementation &amp;amp; assign Data model filter values.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Method Responsible:&amp;nbsp;&lt;/STRONG&gt;if_ex_usmd_crequest_integr~get_crequest_attributes.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Code:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD if_ex_usmd_crequest_integr~get_crequest_attributes.

    SELECT SINGLE a~usmd_creq_type, a~usmd_model,  b~txtmi        
             FROM usmd110c AS a INNER JOIN
                  usmd110t AS b ON a~usmd_creq_type = b~usmd_creq_type
                               AND a~usmd_model EQ &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/591350"&gt;@iv&lt;/a&gt;_model
             INTO  &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(ls_cr_types)
            WHERE b~langu      EQ &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/4244"&gt;@SY&lt;/a&gt;-langu AND
                  a~usmd_creq_type = &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/591350"&gt;@iv&lt;/a&gt;_crequest_type.

    IF sy-subrc IS INITIAL.
      cv_description = ls_cr_types-txtmi.
    ENDIF.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA/pd-p/73554900100800000266" class="lia-product-mention" data-product="799-1"&gt;SAP S/4HANA&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Master+Data+Governance/pd-p/67837800100800004488" class="lia-product-mention" data-product="697-1"&gt;SAP Master Data Governance&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/ABAP+Development/pd-p/833755570260738661924709785639136" class="lia-product-mention" data-product="314-1"&gt;ABAP Development&lt;/a&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Thank You,&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Sandeep Suggu.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/11644" target="_blank"&gt;SAP Community Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://profile.sap.com/u/sandeep_suggu" target="_blank" rel="noopener noreferrer"&gt;SAP Profile&lt;/A&gt;&amp;nbsp;|&amp;nbsp;&lt;A href="https://in.linkedin.com/in/suggu-sandeep" target="_blank" rel="noopener nofollow noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-mdg-auto-fill-cr-description-by-data-model-and-cr-type-description/ba-p/14235813"/>
    <published>2025-10-08T11:30:00.053000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954</id>
    <title>SAP Joule for Developers, ABAP AI capabilities for SAP S/4HANA Cloud Private Edition 2025</title>
    <updated>2025-10-08T12:44:10.622000+02:00</updated>
    <author>
      <name>sebastian_baskovich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10947</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hi folks, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Joule for Developers, ABAP AI capabilities are now also available for SAP S/4HANA Cloud Private Edition 2025.&lt;BR /&gt;The ABAP AI license materials for SAP S/4HANA Cloud Private Edition 2025 are the same as for SAP BTP ABAP Environment &amp;amp; SAP S/4HANA Public Cloud. For more information, please check out the following SAP Note&amp;nbsp;&lt;A href="https://me.sap.com/notes/3571857" target="_blank" rel="noopener noreferrer"&gt;3571857&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below, you can find a step-by-step guide on how to activate SAP Joule for Developers, ABAP AI capabilities in your SAP S/4HANA Cloud Private Edition 2025 system. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Have fun and stay tuned for TechEd soon!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Best,&lt;BR /&gt;Sebastian&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761942566"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1565429061"&gt;Prerequisites&lt;/H2&gt;&lt;P&gt;You have a customer account on &lt;STRONG&gt;SAP Business Technology Platform (BTP) &lt;/STRONG&gt;and a development system on &lt;STRONG&gt;SAP&lt;/STRONG&gt; &lt;STRONG&gt;S/4HANA Cloud Private Edition 2025&lt;/STRONG&gt; and you have prepared the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Cloud Identity Services&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Subscription to &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Established trust to your &lt;STRONG&gt;SAP Cloud Identity Services tenant &lt;/STRONG&gt;in your BTP Subaccount, see this &lt;A href="‚Ä¢https:/help.sap.com/docs/btp/sap-business-technology-platform/trust-and-federation-with-identity-providers?locale=en-US" target="_blank" rel="noopener nofollow noreferrer"&gt;link&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Your user needs Administrator access to your &lt;STRONG&gt;SAP Cloud Identity Services tenant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Your system needs to be configured so that it trusts server certificates according to the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your system needs to use a client certificate issued by a CA listed in the "required" section of the &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https%3A%2F%2Fgithub.com%2Fsap-software%2Fbtp-trust-store" target="_blank" rel="noopener noreferrer"&gt;BTP Trust Store&lt;/A&gt;&lt;/SPAN&gt;. One way to obtain a client certificate can be found on &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/use-destination-certificates?version=Cloud#procedure" target="_blank" rel="noopener noreferrer"&gt;Manage Destination Certificates&lt;/A&gt;&lt;/SPAN&gt; (under "Generate a Certificate").&lt;/LI&gt;&lt;LI&gt;You've successfully applied SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3627794" target="_blank" rel="noopener noreferrer"&gt;3627794 &lt;/A&gt;&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;Your ABAP system needs to support TLS 1.3. If TLS 1.3 is not enabled, refer to SAP Note &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/link-disclaimer?site=https://me.sap.com/notes/3318423" target="_blank" rel="noopener noreferrer"&gt;3318423 &lt;/A&gt;&lt;/SPAN&gt;&amp;nbsp;to activate it.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1368915556"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1172402051"&gt;Configuration steps in your SAP BTP subaccount&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;In your BTP subaccount, navigate to &lt;STRONG&gt;Entitlements&lt;/STRONG&gt;. You‚Äôll see a table with all entitlements it already has.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Configure Entitlements&lt;/STRONG&gt; &amp;gt; &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;. A popover appears with all entitlements available for your directory/subaccount.&lt;/LI&gt;&lt;LI&gt;Select the service &lt;EM&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/EM&gt; and then the plan ‚Äúdefault‚Äù&lt;/LI&gt;&lt;LI&gt;Select the amount of quota&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Add Service Plans&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 14.22.42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323868iDD900DFB152B439E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 14.22.42.png" alt="Screenshot 2025-10-06 at 14.22.42.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;Go to &lt;STRONG&gt;Services &amp;gt; Service Marketplace&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Choose &lt;STRONG&gt;Create&lt;/STRONG&gt; and select Plan &lt;EM&gt;default&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.48.40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323870i4553F8A79364BEF0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.48.40.png" alt="Screenshot 2025-10-06 at 13.48.40.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.49.01.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323871i40511D518B24DB2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.49.01.png" alt="Screenshot 2025-10-06 at 13.49.01.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;Once the service is created, go to your IAS and navigate to &lt;STRONG&gt;Users &amp;amp; Authorizations &amp;gt; Groups &lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Check that the group&lt;EM&gt; j4d-admin&lt;/EM&gt; was successfully created&lt;/LI&gt;&lt;LI&gt;Add your admin user to the created &lt;EM&gt;j4a-admin&lt;/EM&gt; group&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 16.58.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323874iEDFF6732B4938C19/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 16.58.21.png" alt="Screenshot 2025-10-06 at 16.58.21.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to your subaccount in the SAP BTP cockpit&lt;/LI&gt;&lt;LI&gt;In the navigation go to &lt;STRONG&gt;Services&lt;/STRONG&gt; &amp;gt;&lt;STRONG&gt;Instances &amp;amp; Subscriptions&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;EM&gt;SAP Joule for developers, ABAP AI capabilities&lt;/EM&gt; tile.&lt;/LI&gt;&lt;LI&gt;Click on &lt;STRONG&gt;&lt;STRONG&gt;Go to Application&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 17.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323877i61DEF73A53C3F81A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 17.28.39.png" alt="Screenshot 2025-10-06 at 17.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; app should be opened&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-06 at 13.56.56.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323878iD40F97D4176DFD17/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-06 at 13.56.56.png" alt="Screenshot 2025-10-06 at 13.56.56.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;H2 id="toc-hId-975888546"&gt;Configuration in your SAP S/4HANA Cloud Private Edition 2025 system&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Go to your ABAP system, open the transaction &lt;STRONG&gt;APPLDESTCC&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Select &lt;EM&gt;scenario HTTP - Application Destination &lt;/EM&gt;and click on &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.19.37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323881i91B18A87610C7552/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.19.37.png" alt="Screenshot 2025-10-07 at 13.19.37.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Next, select &lt;EM&gt;AIC_ADT_HTTP_PROXY&lt;/EM&gt; and open the context menu. Choose &lt;STRONG&gt;Create New Application Destination&lt;/STRONG&gt;. Now, you're asked to enter the details of your application destination.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.20.21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323882i741A6289B0CC9B4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.20.21.png" alt="Screenshot 2025-10-07 at 13.20.21.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Enter an &lt;STRONG&gt;Application Destination Name&lt;/STRONG&gt; of your choice and select the check mark.&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.21.49.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323886i24AFC5D420577B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.21.49.png" alt="Screenshot 2025-10-07 at 13.21.49.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;Now, first enter a &lt;STRONG&gt;Description&lt;/STRONG&gt; and select the checkboxes &lt;STRONG&gt;Active&lt;/STRONG&gt; and &lt;STRONG&gt;Default&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323887iF167EBE198EF10A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Fill in the information in the &lt;STRONG&gt;Technical Settings&lt;/STRONG&gt; tab:&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Target System Settings: In the Host field, enter &lt;EM&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your region&amp;gt;.hub.j4a.services.sap.&lt;/EM&gt; As &lt;STRONG&gt;Protocol&lt;/STRONG&gt;, select &lt;STRONG&gt;HTTPS&lt;/STRONG&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;(Optional) HTTP Proxy Options: This information is not mandatory.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt; &lt;EM&gt;The region you enter in &lt;SPAN&gt;&lt;A href="https://proxy" target="_blank" rel="noopener nofollow noreferrer"&gt;https://proxy&lt;/A&gt;.&amp;lt;your&lt;/SPAN&gt; region&amp;gt;.hub.j4a.services.sap must be the same region (not technical key) that you chose for your subaccount, for example "eu10". See &lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/regions-and-api-endpoints-for-abap-environment?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Regions and API Endpoints for the ABAP Environment&lt;/A&gt;&lt;/EM&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.24.31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323890iEAC270D856B43D0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.24.31.png" alt="Screenshot 2025-10-07 at 13.24.31.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Logon&lt;/STRONG&gt; tab&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;General Settings: Select &lt;STRONG&gt;Connection to External Server&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Logon Procedure: Select &lt;STRONG&gt;Client Certificate&lt;/STRONG&gt; and choose the certificate you wish to use from the dropdown menu&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Save&lt;/STRONG&gt;. You've successfully maintained the connection.&lt;BR /&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.25.26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323892i5826C527B8DBAD8C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.25.26.png" alt="Screenshot 2025-10-07 at 13.25.26.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;Now, continue in your subaccount in the SAP BTP Cockpit&lt;BR /&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Select the &lt;STRONG&gt;SAP Joule for Developers, ABAP AI capabilities&lt;/STRONG&gt; subscription you have just created (see &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/abap-ai/generative-ai-in-abap-cloud/subscribing-to-joule-for-developers-abap-ai-capabilities?locale=en-US&amp;amp;state=DRAFT&amp;amp;version=ADT_SHIP_Previews" target="_blank" rel="noopener noreferrer"&gt;Subscribing to SAP Joule for Developers, ABAP AI Capabilities&lt;/A&gt;&lt;/SPAN&gt;), or open its details and select &lt;STRONG&gt;Go to Application&lt;/STRONG&gt;. You are forwarded to the &lt;STRONG&gt;Maintain Certificate Mappings&lt;/STRONG&gt; page.&lt;/LI&gt;&lt;LI&gt;In the Certificate Mappings section, select &lt;STRONG&gt;Create&lt;/STRONG&gt; to receive a one-time password (OTP).&lt;/LI&gt;&lt;LI&gt;Copy the OTP.&lt;BR /&gt;&lt;P&gt;&lt;STRONG&gt;&lt;EM&gt;Note&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;: the OTP is valid for five minutes. If you need a new one, close the pop-up and click on Create again.&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.26.55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323896iC87A756A333E09AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.26.55.png" alt="Screenshot 2025-10-07 at 13.26.55.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Go to your corresponding ABAP system and run report &lt;EM&gt;AIC_ADT_PROXY_CERTIFICATE&lt;/EM&gt;. Select &lt;STRONG&gt;Execute&lt;/STRONG&gt;.&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Paste the one-time password that you've copied in the previous step&lt;/LI&gt;&lt;LI&gt;(Optional) If you wish to use a new certificate that you haven't used in step 1, select Use Custom SSL Client PSE ID. Click in the Client PSE ID field and choose the new certificate from the value help. Now, you can go back to step 1 and switch to the new certificate.&lt;/LI&gt;&lt;LI&gt;Select &lt;STRONG&gt;Execute&lt;BR /&gt;&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323897i7D16DCB9D4AC4E94/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.39.png" alt="Screenshot 2025-10-07 at 13.28.39.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;You've successfully registered your certificate!&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-10-07 at 13.28.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323898i164769C8E47F1AEC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.28.57.png" alt="Screenshot 2025-10-07 at 13.28.57.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;You can now create a new ABAP Project in ADT (using its latest version) and check out SAP Joule for developers, ABAP AI capabilities&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Screenshot 2025-10-07 at 13.43.28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/323900iCE484B1826E38612/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-10-07 at 13.43.28.png" alt="Screenshot 2025-10-07 at 13.43.28.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-joule-for-developers-abap-ai-capabilities-for-sap-s-4hana-cloud-private/ba-p/14236954"/>
    <published>2025-10-08T12:44:10.622000+02:00</published>
  </entry>
</feed>
