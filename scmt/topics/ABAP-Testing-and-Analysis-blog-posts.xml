<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/ABAP-Testing-and-Analysis-blog-posts.xml</id>
  <title>SAP Community - ABAP Testing and Analysis</title>
  <updated>2025-07-31T23:10:00.712596+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/ABAP Testing and Analysis/pd-p/808952988084195139233186926963168" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>ABAP Testing and Analysis blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-test-cockpit-in-the-cloud-how-to-schedule-atc-runs/ba-p/13787252</id>
    <title>ABAP Test Cockpit in the Cloud – How to schedule ATC runs</title>
    <updated>2024-08-12T10:53:14.823000+02:00</updated>
    <author>
      <name>OlgaDolinskaja</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/6638</uri>
    </author>
    <content>&lt;P&gt;It is now possible to schedule mass ABAP Test Cockpit (ATC) runs on SAP BTP via &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/application-jobs?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Application Jobs&lt;/A&gt;&lt;/SPAN&gt; using a predefined custom code analysis application job template. With scheduling ATC runs can be executed once or periodically.&lt;/P&gt;&lt;P&gt;The scheduling of ATC runs on SAP BTP is based on the projects of the &lt;EM&gt;Custom Code Migration&lt;/EM&gt; app and can be done using the SAP Fiori app &lt;EM&gt;Schedule Custom Code Analysis&lt;/EM&gt;. To use the &lt;EM&gt;Schedule Custom Code Analysis&lt;/EM&gt; app you need access to the Custom Code Migration app and the &lt;EM&gt;Project Manager – IT business&lt;/EM&gt; role.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule_app.png" style="width: 191px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148444i8F4F30FC51562C6B/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_schedule_app.png" alt="atc_schedule_app.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;EM&gt;Schedule Custom Code Analysis&lt;/EM&gt; app just click on the &lt;EM&gt;Create&lt;/EM&gt; button in the &lt;EM&gt;Jobs&lt;/EM&gt; overview. The &lt;EM&gt;Job Template&lt;/EM&gt; for “Custom Code Analysis” will be filled out automatically and you can adjust the &lt;EM&gt;Job Name&lt;/EM&gt;:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule_select_template.jpg" style="width: 591px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148451iE648D3990D7DC801/image-dimensions/591x217?v=v2" width="591" height="217" role="button" title="atc_schedule_select_template.jpg" alt="atc_schedule_select_template.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the Step 2 plan the start time and recurrency (use &lt;EM&gt;Define Recurrence Pattern&lt;/EM&gt; button if needed):&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule_options.jpg" style="width: 637px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148452iD844EAA34D82ABDD/image-dimensions/637x494?v=v2" width="637" height="494" role="button" title="atc_schedule_options.jpg" alt="atc_schedule_options.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the Step 3 select your custom code analysis project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;button&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule_button.png" style="width: 34px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148463i38E807FB4234809B/image-size/small?v=v2&amp;amp;px=200" role="button" title="atc_schedule_button.png" alt="atc_schedule_button.png" /&gt;&lt;/span&gt;&amp;nbsp;and click on the &lt;EM&gt;Schedule&lt;/EM&gt; button:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule.jpg" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148457i85245DA1F9FDA9E3/image-dimensions/687x348?v=v2" width="687" height="348" role="button" title="atc_schedule.jpg" alt="atc_schedule.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;EM&gt;Jobs&lt;/EM&gt; overview you can take a look at the status of your job (add &lt;EM&gt;Status&lt;/EM&gt;, &lt;EM&gt;Duration&lt;/EM&gt; and &lt;EM&gt;End&lt;/EM&gt; columns using the &lt;EM&gt;Settings of &lt;/EM&gt;the table):&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule_status.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148458i6CA9D07054B5FDCE/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_schedule_status.jpg" alt="atc_schedule_status.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The ATC result is available in the Custom Code Migration app in the respective custom code analysis project:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_schedule_finished.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148460iBF982A6C2247EF69/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_schedule_finished.jpg" alt="atc_schedule_finished.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;See also the SAP Help Portal documentation &lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/schedule-custom-code-analysis?&amp;amp;version=Cloud" target="_blank" rel="noopener noreferrer"&gt;Schedule Custom Code Analysis&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-test-cockpit-in-the-cloud-how-to-schedule-atc-runs/ba-p/13787252"/>
    <published>2024-08-12T10:53:14.823000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/abap-test-cockpit-in-the-cloud-how-to-use-baseline/ba-p/13787006</id>
    <title>ABAP Test Cockpit in the Cloud – How to use baseline</title>
    <updated>2024-08-16T10:54:56.490000+02:00</updated>
    <author>
      <name>OlgaDolinskaja</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/6638</uri>
    </author>
    <content>&lt;P&gt;Many of you are certainly already familiar with the baseline concept in the SAPGUI-based ABAP Test Cockpit (ATC). Baseline offers you the possibility to exclude the well-known or legacy ATC findings from the ATC result to focus your quality assurance efforts only on the new or recently changed code. See also the blog post &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-blog-posts/remote-code-analysis-in-atc-working-with-baseline-to-suppress-findings-in/ba-p/13308684" target="_blank"&gt;Remote Code Analysis in ATC - Working with Baseline to suppress findings in old legacy code&lt;/A&gt;&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;With SAP BTP ABAP Environment 2408 (August 2024 release) we have enabled the baseline also for ATC on SAP BTP for checking of your private cloud (or on-premise) developments. The overview of the central ATC quality system based on SAP BTP ABAP Environment can be found in the blog post &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/usage-of-abap-test-cockpit-atc-in-the-cloud-for-on-premise-developments/ba-p/13576887" target="_blank"&gt;Usage of ABAP Test Cockpit (ATC) in the cloud for on-premise developments&lt;/A&gt;&lt;/SPAN&gt;. Please note that, in order to use the baseline, you also need the &lt;EM&gt;Quality Manager – Software Development&lt;/EM&gt; business role.&lt;/P&gt;&lt;P&gt;Baseline can be created in the &lt;EM&gt;Custom Code Migration&lt;/EM&gt; app. After execution of the ATC run by the custom code analysis project just use the button &lt;EM&gt;Add Findings to Baseline&lt;/EM&gt; to take all ATC findings of this ATC run into the baseline. Thereby you have different options how to proceed with the ATC findings:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Exempt Findings&lt;/STRONG&gt; will indicate the findings as exempted (our recommendation)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Suppress Findings&lt;/STRONG&gt; will exclude findings from the ATC result list.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reduce Findings‘ Priority&lt;/STRONG&gt; will assign the low priority 3 (Information) to the findings&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_options_1.jpg" style="width: 837px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148300i8AF6FCE8085FBA85/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_options_1.jpg" alt="atc_base_options_1.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s check out how to work with baseline based on a couple of examples.&lt;/P&gt;&lt;H3 id="toc-hId-1151305953"&gt;&lt;FONT color="#3366FF"&gt;Example 1: Take over all findings into baseline as exempted&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;After execution of the ATC check run by the custom code analysis project use the button &lt;EM&gt;Add Findings to Baseline&lt;/EM&gt; and choose the option &lt;EM&gt;…to Exempt Findings&lt;/EM&gt;:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_options_findings.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148304i6592F86E557A0F9B/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_options_findings.jpg" alt="atc_base_options_findings.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After this you can display the status of the custom code analysis project with regard to the baseline in the projects overview by adding the column &lt;EM&gt;Findings Added To Baseline&lt;/EM&gt;. All findings in the baseline are exempted now:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_find_added.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148402iD6003018CDD60549/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_find_added.jpg" alt="atc_base_find_added.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After a renewed ATC check run (create the new custom code analysis project with the same parameters), all findings that are included in the related ATC check result will be treated as exempted and will not appear in the custom code analysis project result:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_no_findings.jpg" style="width: 858px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148315iC70655D79B73E34D/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_no_findings.jpg" alt="atc_base_no_findings.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If developers run ATC checks during development, the findings of the baseline will also not appear in their ATC results. You can remove the findings of the ATC check run from the baseline using the respective custom code analysis project and the &lt;EM&gt;Remove Findings From Baseline&lt;/EM&gt; button:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_remove.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148317iB95EA023C3D4B2FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_remove.jpg" alt="atc_base_remove.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-954792448"&gt;&lt;FONT color="#3366FF"&gt;Example 2: Assign the lower priority to the findings and developer perspective&lt;/FONT&gt;&lt;/H3&gt;&lt;P&gt;Now imagine you as developer in your on-premise (or private cloud) system use the central ATC on BTP (see also the blog post &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/how-to-use-abap-test-cockpit-atc-in-the-cloud-as-a-developer-in-an-on/ba-p/13574060" target="_blank"&gt;How to use ABAP Test Cockpit (ATC) in the cloud as a developer in an on-premise system&lt;/A&gt;&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;After execution of the ATC check run for cloud readiness in your ABAP development tools for Eclipse you get the ATC error about the usage of the API that will not be released: &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_adt_error.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148327i463DEFCE19D4D27F/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_adt_error.jpg" alt="atc_base_adt_error.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You want to take care of this ATC error later and to do so you can take it into the baseline and reduce the priority. After execution of the ATC run by the custom code analysis project you will see this ATC error in the custom code analysis project result:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_error_ccm_prj.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148328i5AA1923679F1CBAA/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_error_ccm_prj.jpg" alt="atc_error_ccm_prj.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the project view just use the button &lt;EM&gt;Add Findings to Baseline&lt;/EM&gt; and choose the option &lt;EM&gt;…to Reduce Findings‘ Priority:&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_reduce_prio.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148329i632FC41C3349EFB0/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_reduce_prio.jpg" alt="atc_base_reduce_prio.jpg" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;After a renewed ATC check run (create the new custom code analysis project with the same parameters), you will get for this ATC finding information message instead of error in the custom code analysis project result:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_ccm_prio_3.jpg" style="width: 813px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148330i60460F34BA082CF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_ccm_prio_3.jpg" alt="atc_base_ccm_prio_3.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you now as developer in your ABAP development tools for Eclipse recheck your source code with ATC you will also get the information message instead of the error for this finding in your ATC result:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="atc_base_adt_no_error.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/148331i0C57D789C22B3C3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="atc_base_adt_no_error.jpg" alt="atc_base_adt_no_error.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;NOTE:&lt;/STRONG&gt; please consider that ATC baseline is effective as long as the related code sections remain unchanged. If the code is changed or a new code is added, the unique identifier for each ATC finding changes so that it does not match any more with the finding that has been added to the baseline. Therefore you will get the findings again if you add new code lines to your source code.&lt;/P&gt;&lt;P&gt;Please be aware that after you added the findings of the custom code analysis project to the baseline this project can not be deleted. Only after removing the findings of the project from the baseline you can delete this project.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/abap-test-cockpit-in-the-cloud-how-to-use-baseline/ba-p/13787006"/>
    <published>2024-08-16T10:54:56.490000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/generative-ai-use-cases-for-sap-abap/ba-p/13885926</id>
    <title>Generative AI use cases for SAP ABAP</title>
    <updated>2024-10-04T15:44:36.720000+02:00</updated>
    <author>
      <name>kash-yap</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/383585</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;Organizations that use SAP are familiar with flexibility as well as challenges associated with custom code. According to SAP’s review, &lt;A href="https://news.sap.com/2024/06/sap-sapphire-sap-customers-drive-business-transformation/" target="_blank" rel="noopener noreferrer"&gt;65% of custom code has not been used&lt;/A&gt; in past 12 months by several organizations. So, with SAP’s direction for organizations to move to a Clean Core, this is the right time to evaluate your custom code and understand the impact and opportunity going forward.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;With considering move to S/4HANA and Clean Core, SAP customers are looking at following areas as priorities:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;SAP Custom code understanding&lt;/STRONG&gt;: people who originally wrote the code may not be accessible anymore and robust documentation doesn’t exist, so understanding the custom is one of the first steps towards a clean core future&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Custom code decommissioning&lt;/STRONG&gt;: purging code that is either not used anymore or for functionality that comes standard with S4HANA&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Code transformation&lt;/STRONG&gt;: transform SAP ECC code to S4HANA and decide which tools and technologies to use for extensions&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Code Optimization&lt;/STRONG&gt;: optimize for performance, efficiency, or resources&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Code Review for best practices&lt;/STRONG&gt;: ensuring new code meets organizational coding best practices, does not have any sensitive information, and follows SAP ABAP Cloud guidelines such as access only SAP Public APIs&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Without talking about any company or model, we wanted to focus on whether Generative AI models are positioned to help with any of the above. With the disclaimer that &lt;EM&gt;Gen AI can hallucinate, and general training doesn’t imply that it would understand SAP ABAP code, we think of this as an experiment to talk about direction rather thanks absolute solution&lt;/EM&gt;. So, we don’t recommend relying solely on the results of Gen AI and prefer to always have a human in the loop.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Gartner also has an insightful article that talks about &lt;A href="https://www.gartner.com/en/articles/when-not-to-use-generative-ai" target="_blank" rel="nofollow noopener noreferrer"&gt;when not to use Generative AI&lt;/A&gt;.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;Definitions&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;This section defines some of the Generative AI related terminologies we’ll be using in this article&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Foundation Models (FM): &lt;/STRONG&gt;Machine learning models that are trained on large amount of general unlabeled data set and can perform wide variety of tasks such as new text and image generation and natural language conversation. Transformer model used in Generative AI is capable of learning context and sequence of words.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Prompt&lt;/STRONG&gt;: A question or set of instructions that you provide to AI to generate usable answer from an FM&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Hallucination: &lt;/STRONG&gt;Whether an FM knows the right answer or not, it produces some answer; hallucination is when it generates inaccurate or inconsistent answer&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Retrieval Augmented Generation (RAG)&lt;/STRONG&gt;: It is a way of grounding the response of the model by providing a knowledge base as input along with the prompt&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;To test the use cases highlighted in this article, you can use any IDE and connect it to an FM such as Visual Studio (VS) code with &lt;A href="https://marketplace.visualstudio.com/items?itemName=Continue.continue" target="_blank" rel="nofollow noopener noreferrer"&gt;Open Source Continue addon&lt;/A&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;Prompt’s impact on output&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;You may already be familiar that the prompts guide the behavior of the FM and leading providers of FM such as &lt;A href="https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/overview" target="_blank" rel="nofollow noopener noreferrer"&gt;Anthropic&lt;/A&gt; and &lt;A href="https://help.openai.com/en/articles/6654000-best-practices-for-prompt-engineering-with-the-openai-api" target="_blank" rel="nofollow noopener noreferrer"&gt;OpenAI&lt;/A&gt; have published guidance about it.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;So, we know that prompts matter and can be used to refine and customize the output. This article uses this idea to explore persona-based ABAP code documentation.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;Persona based code documentation &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;If you are an ABAP programmer, you want more detailed explanation of the code including each class or function vs program manager who wants to understand what the code does at a higher level.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Examples of code explanation based upon these 2 personas (code is supplied as part of prompt)&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Program Manager Persona&lt;/STRONG&gt;:&amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;Prompt: Following is a custom SAP ABAP code. The person who wrote this left the organization and we are trying to figure out what this code does.

Output:  Here's a summary of what this custom SAP ABAP code does:

1. It's a report named ZPREDACCT_MOVE_RECORDS that handles data movement for predictive accounting.
2. The program takes a date input (FOR_DATE) from the user.
3. It checks if predictive accounting is enabled by querying the ZPA_SWITCH table.
4. If enabled, it retrieves percentage data from ZPA_PERCENTAGE table for the current month and next 6 months.
5. Based on the input date, it determines the current and next month for processing.
6. For each month (current + 6 future months), it:
   a. Retrieves data from ZDEMO_DATA table for that month.
   b. Calculates how many records to move based on percentages from ZPA_PERCENTAGE.
   c. Checks if records have already been moved for that month in ZPREDACCT_DATA.
   d. Randomly selects the calculated number of records from ZDEMO_DATA.
   e. Moves these records to ZPREDACCT_DATA and updates their status in ZDEMO_DATA.
7. After processing all months, it updates both ZPREDACCT_DATA and ZDEMO_DATA tables.
8. The program includes a helper function GET_NEXT_PERIOD to calculate next month's dates.

In essence, this program moves a configured percentage of records from ZDEMO_DATA to ZPREDACCT_DATA for predictive accounting purposes, doing so for the current month and 6 months into the future. The percentages vary by month based on the ZPA_PERCENTAGE table configuration.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;EM&gt;Tip&lt;/EM&gt;&lt;/STRONG&gt;&lt;EM&gt;: Based on above output, it wouldn’t be a stretch to suggest that it can also be used to evaluate whether the code is needed going forward or not, thus accelerating your &lt;STRONG&gt;clean core&lt;/STRONG&gt; initiative.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;ABAP Programmer Persona&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Prompt: You are an SAP ABAP coding expert, and following is a custom SAP ABAP code. The person who wrote this left the organization and we are trying to understand what this code does. The result will be reviewed by a programmer, so provide detailed technical output.

Output: This ABAP code appears to be a report program named ZPREDACCT_MOVE_RECORDS. Its main purpose is to move records from a source table (ZDEMO_DATA) to a target table (ZPREDACCT_DATA) for predictive accounting purposes. Here's a detailed breakdown of what the code does:

1. Program Initialization:
   - Defines a selection screen with a parameter FOR_DATE (default is current date).
   - Declares various internal tables and structures.

2. Selection Screen Validation:
   - Checks if the entered date is not in the future.

3. Main Processing:
   - Checks if Predictive Accounting (PA) is enabled by querying the ZPA_SWITCH table.
   - If enabled, it proceeds with the following steps:

4. Date Calculations:
   - Determines the current period and processing date based on the input date.
   - Calculates future months (up to 6 months ahead).

5. Percentage Retrieval:
   - Fetches percentage values for each future month from the ZPA_PERCENTAGE table.

6. Record Processing (for each future month):
   - Retrieves records from ZDEMO_DATA for the specific month.
   - Calculates the number of records to be moved based on the percentage.
   - Checks for existing records in ZPREDACCT_DATA for the same period.
   - Randomly selects records from ZDEMO_DATA to be moved, up to the calculated number.
   - Moves selected records to ZPREDACCT_DATA, updating their status in ZDEMO_DATA.

7. Data Updates:
   - Updates ZPREDACCT_DATA with the new records.
   - Updates ZDEMO_DATA to mark processed records.

8. Helper Function:
   - FORM get_next_period: Calculates the next period and its start/end dates.

Key Points:
- The program uses several custom tables: ZDEMO_DATA, ZPREDACCT_DATA, ZPA_SWITCH, ZPA_PERCENTAGE.
- It implements a predictive accounting scenario, moving a percentage of records to a future period.
- The process is repeated for up to 6 future months.
- Random selection is used to choose which records to move.
- The code includes both interactive and batch processing logic.

Potential Improvements:
1. Error handling could be enhanced, especially for database operations.
2. The code could benefit from modularization into smaller, more manageable functions.
3. Some hardcoded values (like 6 for future months) could be made configurable.
4. Performance optimization might be needed for large datasets.

This code appears to be part of a custom predictive accounting solution, likely used for financial forecasting or planning purposes within an SAP system.
&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;Code review against organization’s standards&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;You can use this technique as a quality check for code review by supplying both code and your organizational guidance. Depending on your choice of tool, you can either upload these documents or provide as a prompt.&lt;/FONT&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;Prompt: You are SAP ABAP Coding guide. File ZPREDACCT_MOVE_RECORDS.txt has the SAP ABAP Code and file Org-Standard-guidance.pdf has the organization guideline. Can you review the code against the guideline and provide the compliance report

Output: Based on the review of the ABAP code in ZPREDACCT_MOVE_RECORDS.txt and the organizational guideline in Org-Standard-guidance.pdf, here is the compliance report:
1. Naming Conventions:
   - The program name ZPREDACCT_MOVE_RECORDS follows the standard naming convention for customer programs (starting with Z).
   - Variable names like ls_sales_order, lt_sales_order, lt_dbupdate_so, etc. follow the standard naming conventions for local and internal tables.
2. Code Structure:
   - The code is well-structured with proper event blocks (START-OF-SELECTION, AT SELECTION-SCREEN, etc.).
   - The code is modularized with the use of FORM routines (e.g., get_next_period).
3. Comments:
   - The code has adequate comments explaining the purpose and functionality of the program, as well as individual sections and routines.
4. Data Declarations:
   - Data types are explicitly defined for variables (e.g., TYPE dats, TYPE zdemo_data, etc.).
   - Internal tables are declared with proper data types (TYPE TABLE OF abaplist, TYPE TABLE OF zdemo_data, etc.).
5. Error Handling:
   - The code includes error handling and logging mechanisms using MESSAGE statements.
   - Appropriate system fields (sy-subrc) are checked for errors.
6. Performance:
   - The code appears to be following best practices for performance, such as using internal tables, avoiding unnecessary loops, and utilizing SAP standard functions (e.g., CALL FUNCTION).
7. Coding Standards:
   - The code follows the SAP coding standards for indentation, blank lines, and code formatting.
   - The code uses SAP standard constructs and statements (e.g., DATA, TYPE, PARAMETERS, CALL FUNCTION, etc.).
8. Alignments with Functional Requirements:
   - The code appears to be aligned with the functional requirements outlined in the Org-Standard-guidance.pdf guideline.
   - The code includes functionality for calculation, posting, and reversal, as well as portfolio movements and other specific requirements mentioned in the guideline.
Overall, the ABAP code in ZPREDACCT_MOVE_RECORDS.txt generally complies with the organizational guideline provided in Org-Standard-guidance.pdf. The code follows SAP coding standards, includes proper error handling and logging, and aligns with the functional requirements outlined in the guideline. However, it's important to note that a comprehensive code review would require additional checks, such as testing, code coverage analysis, and adherence to specific organizational coding guidelines (if any), which are not available in the provided files.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;Improving output and accuracy&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;The outputs shown above are examples of what an output may look like, changing based upon your persona’s prompt. There are several techniques to improve the output, as follows:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Prompting techniques&lt;/STRONG&gt;: Improving prompts using techniques such as &lt;A href="https://docs.anthropic.com/en/docs/build-with-claude/prompt-engineering/multishot-prompting" target="_blank" rel="nofollow noopener noreferrer"&gt;multi-shot prompting&lt;/A&gt; (providing example to the model) has shown to provide better output and reduce hallucinations. Experiment with different prompts to find out which one matches your use case the best.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Model Evaluation&lt;/STRONG&gt;: Evaluating the output of different FMs allows you to not only select the best model for the use case, but also decide about tradeoffs among output, price, and latency. &lt;A href="https://docs.anthropic.com/en/docs/test-and-evaluate/eval-tool" target="_blank" rel="nofollow noopener noreferrer"&gt;Anthropic provides an evaluation tool&lt;/A&gt; allowing you to test different prompts, which you can use for metrics such as accuracy, robustness, and safety.&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Model Customization&lt;/STRONG&gt;: this is a technique that lets you customize general FMs with your own data for specific domain. Model customization is generally time and cost intensive and we recommend extensive testing using prompting and model evaluation before you think about this option&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#800080"&gt;&lt;STRONG&gt;What’s next&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;There is a lot more that goes into solving a real-world problem than this article talks about, and we wanted to provide our point of view about where and how to get started and how to think about using Gen AI for SAP Code. &amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Feel free to add your feedback and experience in the comments!&lt;/FONT&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/generative-ai-use-cases-for-sap-abap/ba-p/13885926"/>
    <published>2024-10-04T15:44:36.720000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/release-of-new-podcast-episode-sap-r-3-port-to-linux/ba-p/13918445</id>
    <title>Release of new Podcast Episode “SAP R/3 Port to Linux”</title>
    <updated>2024-10-25T09:41:44.320000+02:00</updated>
    <author>
      <name>Fempel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/10046</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;4th Anniversary of “The Open Source Way” Podcast &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With an interesting new episode taking you three decades back in time, we would like to celebrate the 4th anniversary of the &lt;A href="https://podcast.opensap.info/open-source-way/" target="_blank" rel="noopener nofollow noreferrer"&gt;open source podcast&lt;/A&gt; series hosted by the SAP Open Source Program Office. Reflecting on this milestone for 'The Open Source Way' podcast, the OSPO team would like to thank all the contributors and listeners, and extend a big kudos to &lt;A href="https://de.linkedin.com/in/karsten-hohage-0180312?trk=public_post-text" target="_self" rel="nofollow noopener noreferrer"&gt;Karsten Hohage&lt;/A&gt; for moderating the series since its inception! We would also like to express our gratitude to &lt;A href="https://www.linkedin.com/in/sezgin-devran-a8b64717b/" target="_self" rel="nofollow noopener noreferrer"&gt;Sezgin Devran&lt;/A&gt;, who had the initial idea and started this podcast in 2020.&lt;/P&gt;&lt;P&gt;The experts talking to Karsten have shared very personal stories, expertise, and insights into their activities in open source. The topics of the &lt;STRONG&gt;45 episodes&lt;/STRONG&gt; are as diverse as the field of open source itself – from open-source projects to compliance and security, collaboration models, and global initiatives such as foundations. We look forward to many more engaging episodes and conversations in the future.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP R/3 Port to Linux (October 2024 episode)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the latest &lt;A href="https://podcast.opensap.info/open-source-way/2024/10/24/sap-r3-port-to-linux/" target="_blank" rel="noopener nofollow noreferrer"&gt;podcast episode&lt;/A&gt;, we take a fascinating journey back to the 1990s – a pivotal time in the world of technology – when the SAP software stack was first ported to Linux. Two industry pioneers, &lt;A href="https://de.linkedin.com/in/hcrohland?trk=public_post-text" target="_self" rel="nofollow noopener noreferrer"&gt;Christoph Rohland&lt;/A&gt; (former SAP, now at Software AG) and &lt;A href="https://www.linkedin.com/in/harald-kuck-2863b0153?miniProfileUrn=urn%3Ali%3Afs_miniProfile%3AACoAACTmUIYBWkr3GyxK4rtluI0D8JNGdV4NtyA&amp;amp;lipi=urn%3Ali%3Apage%3Ad_flagship3_search_srp_all%3BHcl%2Bb7ZYS4ONbl0p72GEwA%3D%3D" target="_self" rel="nofollow noopener noreferrer"&gt;Harald Kuck&lt;/A&gt; (SAP, ABAP Platform) discuss the challenges, triumphs, and transformative moments of this significant transition. They offer very personal insights into how they led the transition of R/3 and its stack to run on Linux.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Picture1.png" style="width: 698px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/183271iB62560113519E837/image-dimensions/698x256?v=v2" width="698" height="256" role="button" title="Picture1.png" alt="Picture1.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why this episode matters&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Today, Linux serves as the backbone of many SAP solutions, providing a robust open-source operating system infrastructure. However, the path to this point was anything but straightforward. Christoph and Harald share their first-hand experiences from the early days of open source at SAP, shedding light on how their innovative efforts laid the groundwork for the collaborative software landscape we enjoy today. They take us to the early years of Linux, when 8 CPUs were still a really big thing for a developer, when you tested external software on CDs, and when using fax for sending personal documents was still the modus operandi.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Key highlights from the episode:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Anecdotes from the frontlines:&lt;/STRONG&gt; Listen to unique stories and insights from Christoph and Harald about the challenges they faced while porting the SAP software stack to Linux.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP’s role for Linux:&amp;nbsp;&lt;/STRONG&gt;You might be surprised to hear how some essential parts of the Linux kernel were really contributed by SAP in the late 1990s.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;The evolution of Open Source:&lt;/STRONG&gt; Hear about the times when open source began to play a role within SAP and the broader tech community and how these early efforts have influenced our approach to software development and collaboration.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;The future of Linux and SAP solutions:&lt;/STRONG&gt; Christoph and Harald discuss the ongoing relevance of Linux in the SAP ecosystem, and what the future may hold for open-source initiatives at SAP.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;The key to driving innovation:&lt;/STRONG&gt; Harald and Christoph emphasize the importance of developer initiative, a supportive management, and listening to your customers when pursuing innovative ideas.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Tune In Now!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Whether you're an SAP user, an open-source enthusiast, or simply curious about the technological advancements that shaped our current landscape, this &lt;A href="https://podcast.opensap.info/open-source-way/2024/10/24/sap-r3-port-to-linux/" target="_blank" rel="noopener nofollow noreferrer"&gt;episode&lt;/A&gt; is a must-watch. Join us as we celebrate the pioneers of open source at SAP and explore the impact of their work on the industry.&lt;/P&gt;&lt;P&gt;"Would you rather have Bill Gates know your name or an Email discussion with Linus Torvalds" (feel free to comment) was one question to Harald and Christoph. Hear the answer in the &lt;A href="https://podcast.opensap.info/open-source-way/2024/10/24/sap-r3-port-to-linux/" target="_blank" rel="noopener nofollow noreferrer"&gt;podcast&lt;/A&gt;. Let us know in the comments, if you have any particular topic of interest for future episodes or reach out to the &lt;A href="mailto:ospo@sap.com" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP OSPO team&lt;/A&gt; directly.&lt;/P&gt;&lt;P&gt;_____________________________________________________________________________&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;About the authors&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ulrike Fempel, SAP Open Source Program Office&lt;/LI&gt;&lt;LI&gt;Ajinkya Patil, SAP Open Source Program Office, responsible for the podcast production&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;More information / links&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://opensource.sap.com/" target="_blank" rel="noopener noreferrer"&gt;Open Source @ SAP&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://github.com/sap" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP GitHub&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://github.com/SAP/open-source-manifesto" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Open Source Manifesto&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://pages.community.sap.com/topics/open-source" target="_blank" rel="noopener noreferrer"&gt;Open Source Community @ SAP&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://podcast.opensap.info/open-source-way/" target="_blank" rel="noopener nofollow noreferrer"&gt;Podcast series "The Open Source Way"&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://webinars.sap.com/ospo-webinar-series/en/home" target="_blank" rel="noopener noreferrer"&gt;Webinar series "SAP Open Source"&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/release-of-new-podcast-episode-sap-r-3-port-to-linux/ba-p/13918445"/>
    <published>2024-10-25T09:41:44.320000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/reformatted-code-gt-using-classic-activex-controls-in-the-abap-control/ba-p/13944159</id>
    <title>reformatted Code: =&gt; Using Classic ActiveX Controls in the ABAP Control Framework</title>
    <updated>2024-11-22T10:59:46.689000+01:00</updated>
    <author>
      <name>Dennis_Knause</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1742321</uri>
    </author>
    <content>&lt;P&gt;I took the time to reformat some of the code in the thread&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/additional-blogs-by-sap/using-classic-activex-controls-in-the-abap-control-framework/ba-p/12844206" target="_blank"&gt;Using Classic ActiveX Controls in the ABAP Control Framework&lt;/A&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;I post it here because the original thread was locked, at least I was unable to post comments.&lt;BR /&gt;to get around the class he used in his project and also the db tab he used, i replaced those with placeholders.&lt;BR /&gt;&lt;BR /&gt;I was looking for a way to use com objects in abap when i came acroos his project, so&lt;BR /&gt;here ja go:&lt;/P&gt;&lt;P&gt;Note: If you cannot open the spoiler, remove the # symbol at the end of your current broser url., this is a bug with this forum sadly&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Program Name: KEG MP3 Player                    Creation: 09/28/2001"
""
"                                                                      ""
" SAP Name    : ZESU_MP3_PLAYER                   Application: U       ""
"                                                                      ""
" Author      : Thomas Jung                       Type: 1              ""
"______________________________________________________________________""
" Description :  This program is a technology example program.  It"
" allows you to play MP3's just like Winamp or MusicMatch.  However"
" the real purpose of this program is given an example of a control"
" wrapper and event processing.  There is also an example of recursive"
" processing."
"______________________________________________________________________""
" Inputs:                                                              ""
"                                                                      ""
" Outputs:                                                             ""
"______________________________________________________________________""
" External Routines"
" Classes:"
"   zcl_es_gui_multimedia_viewer"
"   cl_gui_custom_container"
"   cl_gui_alv_grid"
""
" Function Modules:"
"   POPUP_TO_CONFIRM_LOSS_OF_DATA"
"   RANDOM_I4"
"______________________________________________________________________""
" Return Codes:"
"______________________________________________________________________""
" Ammendments:                                                         ""
"    Programmer        Date     Req. #            Action               ""
" ================  ==========  ======  ===============================""
" Thomas Jung       09/28/2001  ------  Initial Program.               ""
"                                                                      ""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"----""
"
" DATA DICTIONARY TABLES                                               ""
"----""
CLASS zcl_es_gui_multimedia_viewer DEFINITION.

  PUBLIC SECTION.
    CONSTANTS true            TYPE abap_bool VALUE abap_true.
    CONSTANTS false           TYPE abap_bool VALUE abap_false.
    CONSTANTS evt_endofstream TYPE char2     VALUE 'AB'.
    CONSTANTS mp_clip_author  TYPE string    VALUE 'IWOSA'.
    CONSTANTS mp_clip_title   TYPE string    VALUE 'adasdasd'.

    CLASS-METHODS create_instance IMPORTING !parent       TYPE REF TO cl_gui_custom_container
                                  RETURNING VALUE(result) TYPE REF TO zcl_es_gui_multimedia_viewer
                                  RAISING   cx_static_check.

    METHODS constructor           IMPORTING  !parent           TYPE any
                                  EXCEPTIONS error_cntl_create
                                             error_cntl_init
                                             error_cntl_link
                                             error_dp_create
                                             gui_type_not_supported.

    METHODS play.
    METHODS pause.
    METHODS stop.
    METHODS set_filename          IMPORTING  file_name         TYPE any.

    METHODS get_media_info_string IMPORTING  media_info_type   TYPE any
                                  EXPORTING  media_info_string TYPE string.

    METHODS set_registered_events IMPORTING  !events           TYPE any
                                  EXCEPTIONS illegal_event_combination.

    METHODS set_show_display      IMPORTING  show_display      TYPE any.
    METHODS set_show_status_bar   IMPORTING  show_status_bar   TYPE any.
    METHODS set_auto_start        IMPORTING  auto_start        TYPE abap_bool.
    METHODS free.

    EVENTS endofstream.
ENDCLASS.




CLASS zcl_es_gui_multimedia_viewer IMPLEMENTATION.

  METHOD set_registered_events.
  ENDMETHOD.


  METHOD create_instance.
  ENDMETHOD.


  METHOD get_media_info_string.
  ENDMETHOD.


  METHOD pause.
  ENDMETHOD.


  METHOD play.
  ENDMETHOD.


  METHOD set_filename.
  ENDMETHOD.


  METHOD stop.
  ENDMETHOD.


  METHOD constructor.
  ENDMETHOD.


  METHOD set_show_display.
  ENDMETHOD.


  METHOD set_show_status_bar.
  ENDMETHOD.


  METHOD set_auto_start.
  ENDMETHOD.


  METHOD free.
  ENDMETHOD.

ENDCLASS.
" tables: zes_mp3_playlist. "KEG MP3 Player - Playlists
TYPES : BEGIN OF helper,
          author     TYPE char40,
          title      TYPE char80,
          playlist   TYPE char50,
          linecolor  TYPE char5,
          filename   TYPE string,
          delete1    TYPE abap_bool,
          list_index TYPE i,
          user_id    TYPE char20.
TYPES : END OF helper.
TYPES zes_mp3_playlist TYPE STANDARD TABLE OF helper INITIAL SIZE 1.
"----""
"
" TYPE POOLS                                                           ""
"----""

TYPE-POOLS icon. " Zuordnung: Ikonenbezeichner in Listen zu ASCII-Codes
TYPE-POOLS abap. " ABAP Language Type-Pool

"----""
"
" CLASS REFERENCES                                                     ""
"----""

DATA mp3_player        TYPE REF TO zcl_es_gui_multimedia_viewer.
DATA custom_container  TYPE REF TO cl_gui_custom_container.
DATA custom_container2 TYPE REF TO cl_gui_custom_container.
DATA alv               TYPE REF TO cl_gui_alv_grid.

"----""
"
" VARIABLES                                                            ""
"----""

DATA ok_code           TYPE sy-ucomm.
DATA global_author     TYPE helper-author.
DATA global_title      TYPE helper-title.
DATA gs_variant        TYPE disvariant.
DATA play_index        TYPE n LENGTH 5.
DATA layout            TYPE lvc_s_layo.

"----""
"
" INTERNAL TABLES                                                      ""
"----""

DATA imp3_list         TYPE helper OCCURS 0 WITH HEADER LINE.

"----""
"
" CONSTANTS                                                            ""
"----""

CONSTANTS cnst_open_video TYPE c LENGTH 132 VALUE 'nts81\Videos\abap_mp3.avi'.

"----""
"
" SELECTION SCREEN LAYOUT                                              ""
"----""

SELECTION-SCREEN BEGIN OF SCREEN 2500 AS WINDOW TITLE TEXT-456.
  SELECTION-SCREEN BEGIN OF BLOCK bl1 WITH FRAME TITLE TEXT-bl1
                                      NO INTERVALS.
    PARAMETERS playlist TYPE helper-playlist OBLIGATORY.

    PARAMETERS recurs AS CHECKBOX.

  SELECTION-SCREEN END OF BLOCK bl1.
SELECTION-SCREEN END OF SCREEN 2500.


"----""
"
"       CLASS lcl_application DEFINITION"
"----""
"
"       ........                                                      ""
"----""

CLASS lcl_application DEFINITION.

  PUBLIC SECTION.
    METHODS handle_end_of_stream FOR EVENT endofstream
              OF zcl_es_gui_multimedia_viewer.

    CLASS-METHODS handle_double_click FOR EVENT double_click OF cl_gui_alv_grid IMPORTING e_row e_column.

    CLASS-METHODS handle_toolbar FOR EVENT toolbar OF cl_gui_alv_grid      IMPORTING e_object e_interactive.

    CLASS-METHODS handle_user_command FOR EVENT user_command OF cl_gui_alv_grid IMPORTING e_ucomm.
ENDCLASS.

"----""
"
"       CLASS lcl_application IMPLEMENTATION"
"----""
"
"       ........                                                      ""
"----""

CLASS lcl_application IMPLEMENTATION.

  METHOD handle_end_of_stream.
    """"This is the event handler that is called by CFW when it receives
    """"the end of stream event from the Windows Media Player - See Method
    """"Dispatch in the zcl_es_gui_multimedia_viewer class.

    DATA line1          TYPE i.
    DATA imp3_list_line LIKE LINE OF imp3_list.
    DATA index_row      TYPE lvc_t_row.
    DATA index_row_line LIKE LINE OF index_row.
    DATA rc             TYPE i.

    """"Read the current playlist index
    line1 = LINES( imp3_list ).
    """"Move to the next item in the playlist
    play_index = play_index + 1.
    """"Check to see if we are at the end of the playlist
    IF line1 &amp;lt; play_index.
      RETURN.
    ENDIF.

    """"Read the Record in the playlist for the new index
    READ TABLE imp3_list INDEX play_index
         INTO imp3_list_line.

    """"Validate that this is a good MP3
    PERFORM validate_filename USING imp3_list_line-filename.

    """"Set the new global variables - For creation of the title bar
    global_author = imp3_list_line-author.
    global_title = imp3_list_line-title.

    """"Pass the filename to the Frontend control
    mp3_player-&amp;gt;set_filename( file_name = imp3_list_line-filename ).

    """"Start Playing
    mp3_player-&amp;gt;play( ).

    """"Set the color and position in the ALV for the currently playing
    """"Item
    LOOP AT imp3_list INTO imp3_list_line.
      CLEAR imp3_list_line-linecolor.
      IF sy-tabix = play_index.
        imp3_list_line-linecolor = 'C610'.
      ENDIF.
      MODIFY imp3_list FROM imp3_list_line.
    ENDLOOP.

    """"Refresh the ALV Grid
    alv-&amp;gt;refresh_table_display( ).

    """"Set the cursor position in the ALV Grid
    index_row_line-index = play_index.
    APPEND index_row_line TO index_row.

    alv-&amp;gt;set_selected_rows( it_index_rows = index_row ).

    """"Trigger an OK_Code - This will cause the PBO/PAI to
    """"fire.  Otherwise the title bar doesn't get updated.
    cl_gui_cfw=&amp;gt;set_new_ok_code( EXPORTING new_code = 'ENT'
                                 IMPORTING rc       = rc ).
  ENDMETHOD.


  METHOD handle_double_click.
    """"Resond to the double click on an item in the ALV Grid -
    """"Start Playing the song that the user selected.

    DATA imp3_list_line LIKE LINE OF imp3_list.
    DATA rc             TYPE i.

    play_index = e_row.

    """"Read the details of the line the user selected
    READ TABLE imp3_list INDEX play_index
         INTO imp3_list_line.

    """"Validate that the selected file is a good MP3
    PERFORM validate_filename USING imp3_list_line-filename.

    """"Set the new global variables - For creation of the title bar
    global_author = imp3_list_line-author.
    global_title = imp3_list_line-title.

    """"Pass the filename to the Frontend control
    mp3_player-&amp;gt;set_filename( file_name = imp3_list_line-filename ).

    """"Start Playing
    mp3_player-&amp;gt;play( ).

    LOOP AT imp3_list INTO imp3_list_line.
      CLEAR imp3_list_line-linecolor.
      IF sy-tabix = play_index.
        imp3_list_line-linecolor = 'C610'.
      ENDIF.
      MODIFY imp3_list FROM imp3_list_line.
    ENDLOOP.

    """"Set the color and position in the ALV for the currently playing
    """"Item
    alv-&amp;gt;refresh_table_display( ).

    """"Trigger an OK_Code - This will cause the PBO/PAI to
    """"fire.  Otherwise the title bar doesn't get updated.
    cl_gui_cfw=&amp;gt;set_new_ok_code( EXPORTING new_code = 'ENT'
                                 IMPORTING rc       = rc ).
  ENDMETHOD.


  METHOD handle_toolbar.
    " In event handler method for event TOOLBAR: Append own functions
    " by using event parameter E_OBJECT.

    DATA ls_toolbar TYPE stb_button. "

    " E_OBJECT of event TOOLBAR is of type REF TO CL_ALV_EVENT_TOOLBAR_SET."
    " This class has got one attribute, namly MT_TOOLBAR, which"
    " is a table of type TTB_BUTTON. One line of this table is"
    " defined by the Structure STB_BUTTON (see data deklaration above)."
    " A remark to the flag E_INTERACTIVE:"
    "         'e_interactive' is set, if this event is raised due to"
    "         the call of 'set_toolbar_interactive' by the user."
    "         You can distinguish this way if the event was raised"
    "         by yourself or by ALV"
    "         (e.g. in method 'refresh_table_display')."
    "         An application of this feature is still unknown... "
    "
    " append a separator to normal toolbar"
    ls_toolbar-butn_type = 3.
    APPEND ls_toolbar TO e_object-&amp;gt;mt_toolbar.
    "
    " append an icon to Delete the Playlist Item"
    CLEAR ls_toolbar.
    ls_toolbar-function  = 'DEL_PLIST'.
    ls_toolbar-icon      = icon_delete.
    ls_toolbar-quickinfo = TEXT-015.
    ls_toolbar-text      = ''.
    ls_toolbar-disabled  = ' '.
    APPEND ls_toolbar TO e_object-&amp;gt;mt_toolbar.
    "
    " append an icon to Randomize the Playlist"
    CLEAR ls_toolbar.
    ls_toolbar-function  = 'RANDOM'.
    ls_toolbar-icon      = icon_sort_up.
    ls_toolbar-quickinfo = TEXT-016.
    ls_toolbar-text      = ''.
    ls_toolbar-disabled  = ' '.
    APPEND ls_toolbar TO e_object-&amp;gt;mt_toolbar.
  ENDMETHOD.


  METHOD handle_user_command.
    " In event handler method for event USER_COMMAND: Query your
    " function codes defined previously and react accordingly.

    DATA lt_rows          TYPE lvc_t_row.
    DATA ls_selected_line TYPE lvc_s_row.
    DATA imp3_list_line   LIKE LINE OF imp3_list.
    DATA rnd_value        TYPE int4.

    CASE e_ucomm.

      """"User has selected to delete certain items from their playlist
      WHEN 'DEL_PLIST'.
        """"read which rows the user has selected
        alv-&amp;gt;get_selected_rows( IMPORTING et_index_rows = lt_rows ).

        """"Mark those items for deletion
        LOOP AT lt_rows INTO ls_selected_line.
          READ TABLE imp3_list
               INTO imp3_list_line INDEX ls_selected_line-index.

          imp3_list_line-delete1 = 'X'.
          MODIFY imp3_list FROM imp3_list_line
                 INDEX ls_selected_line-index.
        ENDLOOP.

        """"Actually delete the items
        DELETE imp3_list WHERE delete1 = 'X'.

        """"Refresh the Playlist index
        PERFORM refresh_playlist_index.

        """"Refresh the ALV Grid
        alv-&amp;gt;refresh_table_display( ).

      """"User has selected to randomly sort the ALV Grid
      WHEN 'RANDOM'.
        """"Loop at the playlist, assigning a random number
        """"in the playlist index
        LOOP AT imp3_list INTO imp3_list_line.
          CLEAR rnd_value.
          CLEAR imp3_list_line-list_index.
          CALL FUNCTION 'RANDOM_I4'
            EXPORTING rnd_min   = 0
                      rnd_max   = 10000
            IMPORTING rnd_value = rnd_value.
          imp3_list_line-list_index = rnd_value.
          MODIFY imp3_list FROM imp3_list_line.
        ENDLOOP.

        """"Sort by the random number
        SORT imp3_list BY list_index.

        """"Create a new playlist index based on the random sort order
        PERFORM refresh_playlist_index.

        """"Refresh the ALV Grid Display
        alv-&amp;gt;refresh_table_display( ).

    ENDCASE.
  ENDMETHOD.

ENDCLASS.

DATA g_application TYPE REF TO lcl_application.

"----""
"
" START-OF-SELECTION                                                   ""
"----""

START-OF-SELECTION.
  CALL SCREEN 100.

  "&amp;amp;----""

  "&amp;amp;      Module  STATUS_0100  OUTPUT
  "&amp;amp;----""
  "
  "       PBO - Screen 100 Output processing - Create title and controls"
  "----""

MODULE status_0100 OUTPUT.
  SET PF-STATUS 'MAIN'.

  """"If a song is playing set the author and title into the
  """"Title bar, otherwise give a generic title
  IF     global_author IS INITIAL
     AND global_title  IS INITIAL.
    SET TITLEBAR '101'.
  ELSE.
    SET TITLEBAR '100' WITH global_author global_title.
  ENDIF.

  """"If this is the first output of the screen, we need to
  """"create our frontend controls.
  IF custom_container IS INITIAL.
    PERFORM create_controls.
  ENDIF.
ENDMODULE.

"&amp;amp;----""

"&amp;amp;      Form  create_controls
"&amp;amp;----""
"
"       Create frontend Active X controls"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM create_controls.
  """"Create the local event callback class

  DATA my_simple_event  TYPE cntl_simple_event.
  DATA my_simple_events TYPE cntl_simple_events.
  DATA filename_local   TYPE string.
  DATA result           TYPE abap_bool.

  IF g_application IS INITIAL.
    g_application = NEW #( ).
  ENDIF.

  """"Create the container for the Media Player
  custom_container = NEW #( container_name = 'CUSTOM_CONTAINER' ).

  """"Create the container for the ALV Grid
  custom_container2 = NEW #( container_name = 'CUSTOM_CONTAINER2' ).

  """"Create the Windows Media Player
  CREATE OBJECT mp3_player
    EXPORTING  parent                 = custom_container
    EXCEPTIONS error_cntl_create      = 1
               error_cntl_init        = 2
               error_cntl_link        = 3
               error_dp_create        = 4
               gui_type_not_supported = 5
               OTHERS                 = 6.

  """"If we can't create the Media Player, Free other controls and
  """"Exit with an error message.
  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE 'AAAH0' TYPE 'I'.
    PERFORM free_controls.
    LEAVE TO SCREEN 0.
  ENDIF.

  """"Set Event handler for Media Player
  SET HANDLER g_application-&amp;gt;handle_end_of_stream FOR mp3_player.

  """"Register Media Player Events with CFW
  my_simple_event-eventid    = mp3_player-&amp;gt;evt_endofstream. "
  " Specify that it's an application event"
  my_simple_event-appl_event = ''.
  APPEND my_simple_event TO my_simple_events.
  "
  " Redefine SET_REGISTERED_EVENTS"
  mp3_player-&amp;gt;set_registered_events( EXPORTING  events                    = my_simple_events
                                     EXCEPTIONS illegal_event_combination = 1
                                                OTHERS                    = 2 ).

  """"Set Show Display = true on Media Player
  mp3_player-&amp;gt;set_show_display( show_display = mp3_player-&amp;gt;true ).

  """"Set Show Status Bar = True on Media Player
  mp3_player-&amp;gt;set_show_status_bar( show_status_bar = mp3_player-&amp;gt;true ).

  """"Set Auto Start = False on Media Player
  mp3_player-&amp;gt;set_auto_start( auto_start = mp3_player-&amp;gt;false ).

  """"We want to play a little opening video on creation.
  """"However first we should validate that the opening video
  """"is available to the user"
  " PERFORM validate_filename USING cnst_open_video."

  filename_local = cnst_open_video.

  """"Call File Exist - this also verifies access to the file
  result = cl_gui_frontend_services=&amp;gt;file_exist( file = filename_local ).

  IF result = abap_true.
    """"Set the opening video into the media player
    mp3_player-&amp;gt;set_filename( file_name = cnst_open_video ).

    """"Start playing the opening video
    mp3_player-&amp;gt;play( ).
  ENDIF.

  """"Create the ALV Grid Object - We will display the Playlist in it.
  alv = NEW #( i_parent = custom_container2 ).

  " Set Events and Handlers for ALV Grids
  SET HANDLER lcl_application=&amp;gt;handle_double_click
      FOR alv.
  SET HANDLER lcl_application=&amp;gt;handle_user_command
      FOR alv.
  SET HANDLER lcl_application=&amp;gt;handle_toolbar
      FOR alv.

  """"Itialize variables for ALV Grid - Set the report name
  """"into the ALV Grid so that we can save variants for ALV
  gs_variant-report = sy-repid.

  """"Set the field name in the output structure that will have
  """"the line color
  layout-info_fname = 'LINECOLOR'.

  """"Allow Multi-line selection in the Grid
  layout-sel_mode   = 'C'.

  """"Start the ALV Grid - Create the pointer to the internal table
  """"that will hold the ALV Grid Data.  Also set all the initialization
  """"stuff
  alv-&amp;gt;set_table_for_first_display( EXPORTING "
                                    "      I_BYPASSING_BUFFER            ="
                                    "      I_BUFFER_ACTIVE               ="
                                    "      I_CONSISTENCY_CHECK           ="
                                              i_structure_name = 'ZES_MP3_PLAYLIST'
                                              is_variant       = gs_variant
                                              i_save           = 'A' "
                                    "     I_DEFAULT        = 'X'"
                                              is_layout        = layout "
                                    "      IS_PRINT                      ="
                                    "      IT_SPECIAL_GROUPS             ="
                                    "      IT_TOOLBAR_EXCLUDING          ="
                                    "      IT_HYPERLINK                  ="
                                    "      IT_ALV_GRAPHICS               ="
                                    CHANGING  it_outtab        = imp3_list[] "
                                    "      IT_FIELDCATALOG               ="
                                    "      IT_SORT                       ="
                                    "      IT_FILTER                     ="
                                    "    EXCEPTIONS"
                                    "     INVALID_PARAMETER_COMBINATION = 1"
                                    "     PROGRAM_ERROR    = 2"
                                    "     TOO_MANY_LINES   = 3"
                                    "     others           = 4"
                                        ).
  IF sy-subrc &amp;lt;&amp;gt; 0. "
    "   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO"
    "              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4."
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Module  USER_COMMAND_0100  INPUT
"&amp;amp;----""
"
"       PAI - Screen 100 Respond to user input"
"----""

MODULE user_command_0100 INPUT.

  """"Case for possible user input commands
  CASE ok_code.

    WHEN 'BACK' OR
         'CANCEL' OR
         'EXIT'.
      CLEAR ok_code.
      PERFORM free_controls.
      LEAVE TO SCREEN 0.

    WHEN 'CREATE'.
      CLEAR ok_code.
      PERFORM create_new_playlist.

    WHEN 'START'.
      CLEAR ok_code.
      PERFORM start_playing.

    WHEN 'ADD'.
      CLEAR ok_code.
      PERFORM load_files USING ' '.

    WHEN 'SAVE'.
      CLEAR ok_code.
      PERFORM save_playlist.

    WHEN 'LOAD'.
      CLEAR ok_code.
      PERFORM load_playlist.

    WHEN 'DELETE'.
      CLEAR ok_code.
      PERFORM delete_playlist.

  ENDCASE.


ENDMODULE.
"&amp;amp;----""

"&amp;amp;      Form  free_controls
"&amp;amp;----""
"
"       Destroy all frontend controls before you exit."
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM free_controls.
  IF alv IS INITIAL.
  ELSE.
    alv-&amp;gt;free( ).
    CLEAR alv.
  ENDIF.

  IF mp3_player IS INITIAL.
  ELSE.
    mp3_player-&amp;gt;free( ).
    CLEAR mp3_player.
  ENDIF.

  IF custom_container2 IS INITIAL.
  ELSE.
    custom_container2-&amp;gt;free( ).
    CLEAR custom_container2.
  ENDIF.

  IF custom_container IS INITIAL.
  ELSE.
    custom_container-&amp;gt;free( ).
    CLEAR custom_container.
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Module  exit_special  INPUT
"&amp;amp;----""
"
"       Exit Special - Overrides any pending activity"
"----""

MODULE exit_special INPUT.
  CLEAR ok_code.
  PERFORM free_controls.
  LEAVE TO SCREEN 0.
ENDMODULE.

"&amp;amp;----""

"&amp;amp;      Form  create_new_playlist
"&amp;amp;----""
"
"       User has selected to create a new playlist"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM create_new_playlist.
  """"Call the selection screen to ask the user to name the new
  """"playlist and give them an option to use recursive directory
  """"Search.
  CALL SELECTION-SCREEN 2500 STARTING AT 5 20.

  """"Sy-subrc is non zero if the user canceled out of the selection
  """"Screen
  IF sy-subrc = 0.
    """"Did the user choose Recursive directory search or single directory
    IF recurs &amp;lt;&amp;gt; 'X'.
      PERFORM load_files USING 'X'.
    ELSE.
      PERFORM recursive_directory_search.
    ENDIF.
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  load_files
"&amp;amp;----""
"
"       Load a single directories worth of files into a playlist"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM load_files USING clear_list.
  """"List of possible filenames.

  DATA file_tab  TYPE filetable.
  """"File Open Return Code
  DATA rc        TYPE i.
  DATA file_line LIKE LINE OF file_tab.
  DATA author    TYPE string.
  DATA title     TYPE string.

  """"Call the file open dialog only showing MP3
  cl_gui_frontend_services=&amp;gt;file_open_dialog( EXPORTING "
                                              "      WINDOW_TITLE            ="
                                                        default_extension = '".MP3' "
                                              "      DEFAULT_FILENAME        ="
                                                        file_filter       = 'MP3 (".MP3)|".MP3|' "
                                              "      INITIAL_DIRECTORY       ="
                                                        multiselection    = abap_true
                                              CHANGING  file_table        = file_tab[]
                                                        rc                = rc "
                                              "      USER_ACTION             ="
                                              "    EXCEPTIONS"
                                              "     FILE_OPEN_DIALOG_FAILED = 1"
                                              "     CNTL_ERROR        = 2"
                                              "     ERROR_NO_GUI      = 3"
                                              "     others            = 4"
                                                  ).
  IF sy-subrc &amp;lt;&amp;gt; 0 OR rc = 0.
    RETURN.
  ENDIF.

  CLEAR imp3_list.

  """"Is this a new list - if so clear the current list
  """"otherwise we are appending to the current list.
  IF clear_list = 'X'.
    REFRESH imp3_list.
  ENDIF.

  """"For each new Item - Move the data we have to the playlist
  """"Ask the media player for details on the item.
  LOOP AT file_tab INTO file_line.
    CLEAR imp3_list.
    CLEAR author.
    CLEAR title.
    imp3_list-user_id    = sy-uname.
    imp3_list-playlist   = playlist.
    imp3_list-list_index = sy-tabix.
    imp3_list-filename   = file_line-filename.

    """"Pass the new file to the Media Player
    mp3_player-&amp;gt;set_filename( file_name = imp3_list-filename ).

    """"Ask Media Player for Author
    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_author
                                       IMPORTING media_info_string = author ).

    """"Ask the Media Player for Title
    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_title
                                       IMPORTING media_info_string = title ).

    """"Flush to get the import values from the frontend calls
    cl_gui_cfw=&amp;gt;flush( ).

    imp3_list-author = author.
    imp3_list-title  = title.
    APPEND imp3_list.
  ENDLOOP.

  """"Rebuild the playlist index
  PERFORM refresh_playlist_index.

  """"Refresh the alv grid display
  alv-&amp;gt;refresh_table_display( ).
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  start_playing
"&amp;amp;----""
"
"       Begin playing the current playlist"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM start_playing.
  DATA line1(5) TYPE i.

  """"Make sure that there is at least one item in the playlist
  line1 = LINES( imp3_list ).
  IF line1 &amp;lt;= 0.
    RETURN.
  ENDIF.

  CLEAR play_index.

  """"Read the first item in the playlist
  READ TABLE imp3_list INDEX 1.
  play_index = 1.

  """"Validate that this file is a good MP3
  PERFORM validate_filename USING imp3_list-filename.

  """"Set the global author and title for use in the title bar
  global_author = imp3_list-author.
  global_title = imp3_list-title.

  """"Pass the filename to the Media Player
  mp3_player-&amp;gt;set_filename( file_name = imp3_list-filename ).

  """"Start Playing this file
  mp3_player-&amp;gt;play( ).

  """"Set this line to the selected color in the ALV
  LOOP AT imp3_list.
    CLEAR imp3_list-linecolor.
    IF sy-tabix = play_index.
      imp3_list-linecolor = 'C610'.
    ENDIF.
    MODIFY imp3_list.
  ENDLOOP.

  """"Refresh the display of the ALV
  alv-&amp;gt;refresh_table_display( ).
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  validate_filename
"&amp;amp;----""
"
"       Validate that the input filename is good and accessible"
"----""
"
"      --&amp;gt;P_IMP3_LIST_FILENAME  Filename"
"----""

FORM validate_filename USING filename.
  DATA filename_local TYPE string.
  DATA result         TYPE abap_bool.

  filename_local = filename.

  """"Call File Exist - this also verifies access to the file
  result = cl_gui_frontend_services=&amp;gt;file_exist( file = filename_local ).

  """"Error if not accessible
  IF result = abap_false.
    IF filename = cnst_open_video.
      MESSAGE ' WITH filename' TYPE 'E'.
    ELSE.
      MESSAGE 'e079 WITH filename' TYPE 'E'.
    ENDIF.
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  save_playlist
"&amp;amp;----""
"
"       Save the current playlist to the database"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM save_playlist.
  DATA line1   TYPE n LENGTH 9.
  DATA answer1 TYPE c LENGTH 1.

  """"Make sure that there is data in the playlist
  line1 = LINES( imp3_list ).

  IF line1 &amp;lt;= 0.
    RETURN.
  ENDIF.

  READ TABLE imp3_list INDEX 1.

  """"check to see if this playlist already exsist.
*  SELECT SINGLE playlist FROM zes_mp3_playlist
*         INTO zes_mp3_playlist-playlist
*         WHERE user_id = sy-uname
*           AND playlist = imp3_list-playlist.

  """"If it does, ask the user if they want to overwrite the existing one
  IF sy-subrc = 0.
    """Make the user understand that they will loose any unsaved data
    CALL FUNCTION 'POPUP_TO_CONFIRM_LOSS_OF_DATA'
      EXPORTING  textline1 = TEXT-005 "
      "       textline2 = text-006"
                 titel     = TEXT-007 "
      "       START_COLUMN = 25"
      "       START_ROW = 6"
      IMPORTING  answer    = answer1
      EXCEPTIONS OTHERS    = 1.
  ENDIF.

  IF answer1 = 'N'.
    RETURN.
  ENDIF.

  """"Delete the current playlist
*  DELETE FROM zes_mp3_playlist
*         WHERE user_id = sy-uname
*           AND playlist = imp3_list-playlist.

*  COMMIT WORK.

  """"Write the new playlist into the database
*  LOOP AT imp3_list.
*    MOVE-CORRESPONDING imp3_list TO zes_mp3_playlist.
*    INSERT zes_mp3_playlist.
*  ENDLOOP.

*  COMMIT WORK.

*  MESSAGE i080 WITH playlist.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  load_playlist
"&amp;amp;----""
"
"       Load a playlist from the database"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM load_playlist.
  DATA answer1 TYPE c LENGTH 1.

  """"check to see if a playlist is already loaded
  IF playlist IS INITIAL.
  ELSE.
    """"If so make the sure the user doesn't want to save it first.
    """Make the user understand that they will loose any unsaved data
    CALL FUNCTION 'POPUP_TO_CONFIRM_LOSS_OF_DATA'
      EXPORTING  textline1 = TEXT-008
                 textline2 = TEXT-010
                 titel     = TEXT-009 "
      "       START_COLUMN = 25"
      "       START_ROW = 6"
      IMPORTING  answer    = answer1
      EXCEPTIONS OTHERS    = 1.
  ENDIF.

  IF answer1 = 'N'.
    RETURN.
  ENDIF.

  """"Ask the user for the name of the playlist they want to load
  CALL SELECTION-SCREEN 2500 STARTING AT 5 20.
*  IF sy-subrc = 0.
*
*    CLEAR global_author.
*    CLEAR global_title.
*    CLEAR play_index.
*    CLEAR imp3_list.
*    REFRESH imp3_list.
*
**    """"Read the playlist from the database
**    SELECT " from zes_mp3_playlist
**           into corresponding fields of table imp3_list
**           where user_id  = sy-uname
**             and playlist = playlist.
**
**      """"Refresh the ALV Grid
**      CALL METHOD alv-&amp;gt;refresh_table_display.
**
**    ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  delete_playlist
"&amp;amp;----""
"
"       Delete a Playlist from the database"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM delete_playlist.
  """"Check to see if a playlist has been loaded
  IF playlist IS INITIAL.
  ELSE.
*    """"Give the user a chance to change their mind
*    """Make the user understand that they will loose any unsaved data
*    CALL FUNCTION 'POPUP_TO_CONFIRM_LOSS_OF_DATA'
*      EXPORTING
*        textline1 = TEXT-013
*        textline2 = TEXT-012
*        titel     = TEXT-011 "
*"       START_COLUMN = 25"
*"       START_ROW = 6"
*      IMPORTING
*        answer    = answer1
*      EXCEPTIONS
*        OTHERS    = 1.
*
*
*    CHECK answer1 NE 'N'.
*
*    """"Delete the playlist
*    DELETE FROM zes_mp3_playlist
*           WHERE user_id = sy-uname
*             AND playlist = playlist.
*
*    COMMIT WORK.
*
**    MESSAGE i081 WITH playlist.
*
*    """"Clear all global variables
*    CLEAR playlist.
*    CLEAR global_author.
*    CLEAR global_title.
*    CLEAR play_index.
*    CLEAR imp3_list.
*    REFRESH imp3_list.
*
*    """"Refresh ALV Grid
*    CALL METHOD alv-&amp;gt;refresh_table_display.

  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  REFRESH_PLAYLIST_INDEX
"&amp;amp;----""
"
"       Recalculate the Playlist index. - Must be unique and begin with"
"       one and have no gaps."
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM refresh_playlist_index.
  """"Loop at the playlist - use the loop index as the new playlist index
  LOOP AT imp3_list.
    CLEAR imp3_list-list_index.
    imp3_list-list_index = sy-tabix.
    MODIFY imp3_list.
  ENDLOOP.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  recursive_directory_search
"&amp;amp;----""
"
"      Perform a recursive directory search - look for a MP3s in the"
"      selected directory - also search all subdirectories under the"
"      selected directory."
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM recursive_directory_search.
  DATA file_tab        TYPE STANDARD TABLE OF file_info.
  DATA window_title    TYPE string.
  DATA selected_folder TYPE string.
  DATA count           TYPE i.
  DATA temp_folder     TYPE c LENGTH 1024.
  DATA len             TYPE i.

  window_title = TEXT-020.

  """"Ask the user for the directory they want to use
  cl_gui_frontend_services=&amp;gt;directory_browse( EXPORTING window_title    = window_title
                                              CHANGING  selected_folder = selected_folder ).

  cl_gui_cfw=&amp;gt;flush( ).

  """"Get a list of all files and directories under the choose directory
  cl_gui_frontend_services=&amp;gt;directory_list_files( EXPORTING  directory                   = selected_folder "
                                                  "    filter                      = 'MP3 (".MP3)|".MP3|'"
                                                  CHANGING   file_table                  = file_tab[]
                                                             count                       = count
                                                  EXCEPTIONS cntl_error                  = 1
                                                             directory_list_files_failed = 2
                                                             wrong_parameter             = 3
                                                             error_no_gui                = 4
                                                             OTHERS                      = 5 ).
  IF sy-subrc &amp;lt;&amp;gt; 0.
*    MESSAGE i038 WITH selected_folder.
  ENDIF.

  cl_gui_cfw=&amp;gt;flush( ).

  """"If the selected directory has a '\' on the end of it
  """"take it off - for consistent processing
  temp_folder = selected_folder.
  len = strlen( temp_folder ).
  len = len - 1.
  IF len &amp;lt; 1.
  ELSE.
    IF temp_folder+len(1) = '\'.
      CLEAR temp_folder+len(1).
    ENDIF.
  ENDIF.
  selected_folder = temp_folder.

  """"Process all the files in the selected folder
  PERFORM process_files TABLES file_tab
                        USING  selected_folder.

  """"Process all subdirectories
  PERFORM process_directories TABLES file_tab
                              USING  selected_folder.

  """"Rebuild the Playlist index
  PERFORM refresh_playlist_index.

  """"Refresh the ALV
  alv-&amp;gt;refresh_table_display( ).
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  process_files
"&amp;amp;----""
"
"       Process File during the recursive search"
"----""
"
"      --&amp;gt;P_FILE_TAB  text"
"----""

FORM process_files TABLES file_tab        STRUCTURE file_info
                   USING  selected_folder TYPE string.

  DATA file_line LIKE LINE OF file_tab.
  DATA len       TYPE i.
  DATA author    TYPE string.
  DATA title     TYPE string.

  """"Look at all files that were read from the selected directory
  LOOP AT file_tab INTO file_line
       WHERE isdir &amp;lt;&amp;gt; '1'.
    CLEAR len.
    len = strlen( file_line-filename ).
    len = len - 4.
    """"Read the file extension - make sure it is MP3
    IF NOT (    file_line-filename+len(4) = '.MP3'
             OR file_line-filename+len(4) = '.mp3' ).
      CONTINUE.
    ENDIF.

    """"Create the full filename
    CONCATENATE selected_folder
             '\'
             file_line-filename
                INTO file_line-filename.

    """"Save this info into the playlist
    CLEAR imp3_list.
    CLEAR author.
    CLEAR title.
    imp3_list-user_id  = sy-uname.
    imp3_list-playlist = playlist. "
    "     MOVE sy-tabix TO imp3_list-list_index."
    imp3_list-filename = file_line-filename.

    """"Ask Media Player for the Author and Title
    mp3_player-&amp;gt;set_filename( file_name = imp3_list-filename ).

    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_author
                                       IMPORTING media_info_string = author ).

    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_title
                                       IMPORTING media_info_string = title ).

    cl_gui_cfw=&amp;gt;flush( ).

    imp3_list-author = author.
    imp3_list-title  = title.
    APPEND imp3_list.
  ENDLOOP.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  process_directories
"&amp;amp;----""
"
"       Process Directories during the recursive search"
"----""
"
"      --&amp;gt;P_FILE_TAB  text"
"----""

FORM process_directories TABLES file_tab        STRUCTURE file_info
                         USING  selected_folder TYPE string.

  DATA file_line    LIKE LINE OF file_tab.
  DATA temp_folder  TYPE string.
  DATA temp_folder2 TYPE string.
  DATA file_tab2    TYPE STANDARD TABLE OF file_info.
  DATA count        TYPE i.

  """"Look at all the directories in the current selection
  LOOP AT file_tab INTO file_line
       WHERE isdir = '1'.

    CLEAR temp_folder.
    CLEAR temp_folder2.
    """"Create the full Path
    CONCATENATE selected_folder
                '\'
                file_line-filename
                INTO temp_folder.

    CLEAR file_tab2.
    REFRESH file_tab2.

    """"Get a list of all files and directories in this new path
    cl_gui_frontend_services=&amp;gt;directory_list_files( EXPORTING  directory                   = temp_folder
                                                    CHANGING   file_table                  = file_tab2[]
                                                               count                       = count
                                                    EXCEPTIONS cntl_error                  = 1
                                                               directory_list_files_failed = 2
                                                               wrong_parameter             = 3
                                                               error_no_gui                = 4
                                                               OTHERS                      = 5 ).

    IF sy-subrc &amp;lt;&amp;gt; 0.
*      MESSAGE i038 WITH temp_folder.
    ENDIF.

    cl_gui_cfw=&amp;gt;flush( ).

    temp_folder2 = temp_folder.

    """"Look at all the files in this new Path
    PERFORM process_files TABLES file_tab2
                          USING  temp_folder2.

    """"Look at all the subdirectories of this new path
    PERFORM process_directories TABLES file_tab2
                                USING  temp_folder.
  ENDLOOP.
ENDFORM.&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Program Name: KEG MP3 Player                    Creation: 09/28/2001"
""
"                                                                      ""
" SAP Name    : ZESU_MP3_PLAYER                   Application: U       ""
"                                                                      ""
" Author      : Thomas Jung                       Type: 1              ""
"______________________________________________________________________""
" Description :  This program is a technology example program.  It"
" allows you to play MP3's just like Winamp or MusicMatch.  However"
" the real purpose of this program is given an example of a control"
" wrapper and event processing.  There is also an example of recursive"
" processing."
"______________________________________________________________________""
" Inputs:                                                              ""
"                                                                      ""
" Outputs:                                                             ""
"______________________________________________________________________""
" External Routines"
" Classes:"
"   zcl_es_gui_multimedia_viewer"
"   cl_gui_custom_container"
"   cl_gui_alv_grid"
""
" Function Modules:"
"   POPUP_TO_CONFIRM_LOSS_OF_DATA"
"   RANDOM_I4"
"______________________________________________________________________""
" Return Codes:"
"______________________________________________________________________""
" Ammendments:                                                         ""
"    Programmer        Date     Req. #            Action               ""
" ================  ==========  ======  ===============================""
" Thomas Jung       09/28/2001  ------  Initial Program.               ""
"                                                                      ""
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
"----""
"
" DATA DICTIONARY TABLES                                               ""
"----""
CLASS zcl_es_gui_multimedia_viewer DEFINITION.

  PUBLIC SECTION.
    CONSTANTS true            TYPE abap_bool VALUE abap_true.
    CONSTANTS false           TYPE abap_bool VALUE abap_false.
    CONSTANTS evt_endofstream TYPE char2     VALUE 'AB'.
    CONSTANTS mp_clip_author  TYPE string    VALUE 'IWOSA'.
    CONSTANTS mp_clip_title   TYPE string    VALUE 'adasdasd'.

    CLASS-METHODS create_instance IMPORTING !parent       TYPE REF TO cl_gui_custom_container
                                  RETURNING VALUE(result) TYPE REF TO zcl_es_gui_multimedia_viewer
                                  RAISING   cx_static_check.

    METHODS constructor           IMPORTING  !parent           TYPE any
                                  EXCEPTIONS error_cntl_create
                                             error_cntl_init
                                             error_cntl_link
                                             error_dp_create
                                             gui_type_not_supported.

    METHODS play.
    METHODS pause.
    METHODS stop.
    METHODS set_filename          IMPORTING  file_name         TYPE any.

    METHODS get_media_info_string IMPORTING  media_info_type   TYPE any
                                  EXPORTING  media_info_string TYPE string.

    METHODS set_registered_events IMPORTING  !events           TYPE any
                                  EXCEPTIONS illegal_event_combination.

    METHODS set_show_display      IMPORTING  show_display      TYPE any.
    METHODS set_show_status_bar   IMPORTING  show_status_bar   TYPE any.
    METHODS set_auto_start        IMPORTING  auto_start        TYPE abap_bool.
    METHODS free.

    EVENTS endofstream.
ENDCLASS.




CLASS zcl_es_gui_multimedia_viewer IMPLEMENTATION.

  METHOD set_registered_events.
  ENDMETHOD.


  METHOD create_instance.
  ENDMETHOD.


  METHOD get_media_info_string.
  ENDMETHOD.


  METHOD pause.
  ENDMETHOD.


  METHOD play.
  ENDMETHOD.


  METHOD set_filename.
  ENDMETHOD.


  METHOD stop.
  ENDMETHOD.


  METHOD constructor.
  ENDMETHOD.


  METHOD set_show_display.
  ENDMETHOD.


  METHOD set_show_status_bar.
  ENDMETHOD.


  METHOD set_auto_start.
  ENDMETHOD.


  METHOD free.
  ENDMETHOD.

ENDCLASS.
" tables: zes_mp3_playlist. "KEG MP3 Player - Playlists
TYPES : BEGIN OF helper,
          author     TYPE char40,
          title      TYPE char80,
          playlist   TYPE char50,
          linecolor  TYPE char5,
          filename   TYPE string,
          delete1    TYPE abap_bool,
          list_index TYPE i,
          user_id    TYPE char20.
TYPES : END OF helper.
TYPES zes_mp3_playlist TYPE STANDARD TABLE OF helper INITIAL SIZE 1.
"----""
"
" TYPE POOLS                                                           ""
"----""

TYPE-POOLS icon. " Zuordnung: Ikonenbezeichner in Listen zu ASCII-Codes
TYPE-POOLS abap. " ABAP Language Type-Pool

"----""
"
" CLASS REFERENCES                                                     ""
"----""

DATA mp3_player        TYPE REF TO zcl_es_gui_multimedia_viewer.
DATA custom_container  TYPE REF TO cl_gui_custom_container.
DATA custom_container2 TYPE REF TO cl_gui_custom_container.
DATA alv               TYPE REF TO cl_gui_alv_grid.

"----""
"
" VARIABLES                                                            ""
"----""

DATA ok_code           TYPE sy-ucomm.
DATA global_author     TYPE helper-author.
DATA global_title      TYPE helper-title.
DATA gs_variant        TYPE disvariant.
DATA play_index        TYPE n LENGTH 5.
DATA layout            TYPE lvc_s_layo.

"----""
"
" INTERNAL TABLES                                                      ""
"----""

DATA imp3_list         TYPE helper OCCURS 0 WITH HEADER LINE.

"----""
"
" CONSTANTS                                                            ""
"----""

CONSTANTS cnst_open_video TYPE c LENGTH 132 VALUE 'nts81\Videos\abap_mp3.avi'.

"----""
"
" SELECTION SCREEN LAYOUT                                              ""
"----""

SELECTION-SCREEN BEGIN OF SCREEN 2500 AS WINDOW TITLE TEXT-456.
  SELECTION-SCREEN BEGIN OF BLOCK bl1 WITH FRAME TITLE TEXT-bl1
                                      NO INTERVALS.
    PARAMETERS playlist TYPE helper-playlist OBLIGATORY.

    PARAMETERS recurs AS CHECKBOX.

  SELECTION-SCREEN END OF BLOCK bl1.
SELECTION-SCREEN END OF SCREEN 2500.


"----""
"
"       CLASS lcl_application DEFINITION"
"----""
"
"       ........                                                      ""
"----""

CLASS lcl_application DEFINITION.

  PUBLIC SECTION.
    METHODS handle_end_of_stream FOR EVENT endofstream
              OF zcl_es_gui_multimedia_viewer.

    CLASS-METHODS handle_double_click FOR EVENT double_click OF cl_gui_alv_grid IMPORTING e_row e_column.

    CLASS-METHODS handle_toolbar FOR EVENT toolbar OF cl_gui_alv_grid      IMPORTING e_object e_interactive.

    CLASS-METHODS handle_user_command FOR EVENT user_command OF cl_gui_alv_grid IMPORTING e_ucomm.
ENDCLASS.

"----""
"
"       CLASS lcl_application IMPLEMENTATION"
"----""
"
"       ........                                                      ""
"----""

CLASS lcl_application IMPLEMENTATION.

  METHOD handle_end_of_stream.
    """"This is the event handler that is called by CFW when it receives
    """"the end of stream event from the Windows Media Player - See Method
    """"Dispatch in the zcl_es_gui_multimedia_viewer class.

    DATA line1          TYPE i.
    DATA imp3_list_line LIKE LINE OF imp3_list.
    DATA index_row      TYPE lvc_t_row.
    DATA index_row_line LIKE LINE OF index_row.
    DATA rc             TYPE i.

    """"Read the current playlist index
    line1 = LINES( imp3_list ).
    """"Move to the next item in the playlist
    play_index = play_index + 1.
    """"Check to see if we are at the end of the playlist
    IF line1 &amp;lt; play_index.
      RETURN.
    ENDIF.

    """"Read the Record in the playlist for the new index
    READ TABLE imp3_list INDEX play_index
         INTO imp3_list_line.

    """"Validate that this is a good MP3
    PERFORM validate_filename USING imp3_list_line-filename.

    """"Set the new global variables - For creation of the title bar
    global_author = imp3_list_line-author.
    global_title = imp3_list_line-title.

    """"Pass the filename to the Frontend control
    mp3_player-&amp;gt;set_filename( file_name = imp3_list_line-filename ).

    """"Start Playing
    mp3_player-&amp;gt;play( ).

    """"Set the color and position in the ALV for the currently playing
    """"Item
    LOOP AT imp3_list INTO imp3_list_line.
      CLEAR imp3_list_line-linecolor.
      IF sy-tabix = play_index.
        imp3_list_line-linecolor = 'C610'.
      ENDIF.
      MODIFY imp3_list FROM imp3_list_line.
    ENDLOOP.

    """"Refresh the ALV Grid
    alv-&amp;gt;refresh_table_display( ).

    """"Set the cursor position in the ALV Grid
    index_row_line-index = play_index.
    APPEND index_row_line TO index_row.

    alv-&amp;gt;set_selected_rows( it_index_rows = index_row ).

    """"Trigger an OK_Code - This will cause the PBO/PAI to
    """"fire.  Otherwise the title bar doesn't get updated.
    cl_gui_cfw=&amp;gt;set_new_ok_code( EXPORTING new_code = 'ENT'
                                 IMPORTING rc       = rc ).
  ENDMETHOD.


  METHOD handle_double_click.
    """"Resond to the double click on an item in the ALV Grid -
    """"Start Playing the song that the user selected.

    DATA imp3_list_line LIKE LINE OF imp3_list.
    DATA rc             TYPE i.

    play_index = e_row.

    """"Read the details of the line the user selected
    READ TABLE imp3_list INDEX play_index
         INTO imp3_list_line.

    """"Validate that the selected file is a good MP3
    PERFORM validate_filename USING imp3_list_line-filename.

    """"Set the new global variables - For creation of the title bar
    global_author = imp3_list_line-author.
    global_title = imp3_list_line-title.

    """"Pass the filename to the Frontend control
    mp3_player-&amp;gt;set_filename( file_name = imp3_list_line-filename ).

    """"Start Playing
    mp3_player-&amp;gt;play( ).

    LOOP AT imp3_list INTO imp3_list_line.
      CLEAR imp3_list_line-linecolor.
      IF sy-tabix = play_index.
        imp3_list_line-linecolor = 'C610'.
      ENDIF.
      MODIFY imp3_list FROM imp3_list_line.
    ENDLOOP.

    """"Set the color and position in the ALV for the currently playing
    """"Item
    alv-&amp;gt;refresh_table_display( ).

    """"Trigger an OK_Code - This will cause the PBO/PAI to
    """"fire.  Otherwise the title bar doesn't get updated.
    cl_gui_cfw=&amp;gt;set_new_ok_code( EXPORTING new_code = 'ENT'
                                 IMPORTING rc       = rc ).
  ENDMETHOD.


  METHOD handle_toolbar.
    " In event handler method for event TOOLBAR: Append own functions
    " by using event parameter E_OBJECT.

    DATA ls_toolbar TYPE stb_button. "

    " E_OBJECT of event TOOLBAR is of type REF TO CL_ALV_EVENT_TOOLBAR_SET."
    " This class has got one attribute, namly MT_TOOLBAR, which"
    " is a table of type TTB_BUTTON. One line of this table is"
    " defined by the Structure STB_BUTTON (see data deklaration above)."
    " A remark to the flag E_INTERACTIVE:"
    "         'e_interactive' is set, if this event is raised due to"
    "         the call of 'set_toolbar_interactive' by the user."
    "         You can distinguish this way if the event was raised"
    "         by yourself or by ALV"
    "         (e.g. in method 'refresh_table_display')."
    "         An application of this feature is still unknown... "
    "
    " append a separator to normal toolbar"
    ls_toolbar-butn_type = 3.
    APPEND ls_toolbar TO e_object-&amp;gt;mt_toolbar.
    "
    " append an icon to Delete the Playlist Item"
    CLEAR ls_toolbar.
    ls_toolbar-function  = 'DEL_PLIST'.
    ls_toolbar-icon      = icon_delete.
    ls_toolbar-quickinfo = TEXT-015.
    ls_toolbar-text      = ''.
    ls_toolbar-disabled  = ' '.
    APPEND ls_toolbar TO e_object-&amp;gt;mt_toolbar.
    "
    " append an icon to Randomize the Playlist"
    CLEAR ls_toolbar.
    ls_toolbar-function  = 'RANDOM'.
    ls_toolbar-icon      = icon_sort_up.
    ls_toolbar-quickinfo = TEXT-016.
    ls_toolbar-text      = ''.
    ls_toolbar-disabled  = ' '.
    APPEND ls_toolbar TO e_object-&amp;gt;mt_toolbar.
  ENDMETHOD.


  METHOD handle_user_command.
    " In event handler method for event USER_COMMAND: Query your
    " function codes defined previously and react accordingly.

    DATA lt_rows          TYPE lvc_t_row.
    DATA ls_selected_line TYPE lvc_s_row.
    DATA imp3_list_line   LIKE LINE OF imp3_list.
    DATA rnd_value        TYPE int4.

    CASE e_ucomm.

      """"User has selected to delete certain items from their playlist
      WHEN 'DEL_PLIST'.
        """"read which rows the user has selected
        alv-&amp;gt;get_selected_rows( IMPORTING et_index_rows = lt_rows ).

        """"Mark those items for deletion
        LOOP AT lt_rows INTO ls_selected_line.
          READ TABLE imp3_list
               INTO imp3_list_line INDEX ls_selected_line-index.

          imp3_list_line-delete1 = 'X'.
          MODIFY imp3_list FROM imp3_list_line
                 INDEX ls_selected_line-index.
        ENDLOOP.

        """"Actually delete the items
        DELETE imp3_list WHERE delete1 = 'X'.

        """"Refresh the Playlist index
        PERFORM refresh_playlist_index.

        """"Refresh the ALV Grid
        alv-&amp;gt;refresh_table_display( ).

      """"User has selected to randomly sort the ALV Grid
      WHEN 'RANDOM'.
        """"Loop at the playlist, assigning a random number
        """"in the playlist index
        LOOP AT imp3_list INTO imp3_list_line.
          CLEAR rnd_value.
          CLEAR imp3_list_line-list_index.
          CALL FUNCTION 'RANDOM_I4'
            EXPORTING rnd_min   = 0
                      rnd_max   = 10000
            IMPORTING rnd_value = rnd_value.
          imp3_list_line-list_index = rnd_value.
          MODIFY imp3_list FROM imp3_list_line.
        ENDLOOP.

        """"Sort by the random number
        SORT imp3_list BY list_index.

        """"Create a new playlist index based on the random sort order
        PERFORM refresh_playlist_index.

        """"Refresh the ALV Grid Display
        alv-&amp;gt;refresh_table_display( ).

    ENDCASE.
  ENDMETHOD.

ENDCLASS.

DATA g_application TYPE REF TO lcl_application.

"----""
"
" START-OF-SELECTION                                                   ""
"----""

START-OF-SELECTION.
  CALL SCREEN 100.

  "&amp;amp;----""

  "&amp;amp;      Module  STATUS_0100  OUTPUT
  "&amp;amp;----""
  "
  "       PBO - Screen 100 Output processing - Create title and controls"
  "----""

MODULE status_0100 OUTPUT.
  SET PF-STATUS 'MAIN'.

  """"If a song is playing set the author and title into the
  """"Title bar, otherwise give a generic title
  IF     global_author IS INITIAL
     AND global_title  IS INITIAL.
    SET TITLEBAR '101'.
  ELSE.
    SET TITLEBAR '100' WITH global_author global_title.
  ENDIF.

  """"If this is the first output of the screen, we need to
  """"create our frontend controls.
  IF custom_container IS INITIAL.
    PERFORM create_controls.
  ENDIF.
ENDMODULE.

"&amp;amp;----""

"&amp;amp;      Form  create_controls
"&amp;amp;----""
"
"       Create frontend Active X controls"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM create_controls.
  """"Create the local event callback class

  DATA my_simple_event  TYPE cntl_simple_event.
  DATA my_simple_events TYPE cntl_simple_events.
  DATA filename_local   TYPE string.
  DATA result           TYPE abap_bool.

  IF g_application IS INITIAL.
    g_application = NEW #( ).
  ENDIF.

  """"Create the container for the Media Player
  custom_container = NEW #( container_name = 'CUSTOM_CONTAINER' ).

  """"Create the container for the ALV Grid
  custom_container2 = NEW #( container_name = 'CUSTOM_CONTAINER2' ).

  """"Create the Windows Media Player
  CREATE OBJECT mp3_player
    EXPORTING  parent                 = custom_container
    EXCEPTIONS error_cntl_create      = 1
               error_cntl_init        = 2
               error_cntl_link        = 3
               error_dp_create        = 4
               gui_type_not_supported = 5
               OTHERS                 = 6.

  """"If we can't create the Media Player, Free other controls and
  """"Exit with an error message.
  IF sy-subrc &amp;lt;&amp;gt; 0.
    MESSAGE 'AAAH0' TYPE 'I'.
    PERFORM free_controls.
    LEAVE TO SCREEN 0.
  ENDIF.

  """"Set Event handler for Media Player
  SET HANDLER g_application-&amp;gt;handle_end_of_stream FOR mp3_player.

  """"Register Media Player Events with CFW
  my_simple_event-eventid    = mp3_player-&amp;gt;evt_endofstream. "
  " Specify that it's an application event"
  my_simple_event-appl_event = ''.
  APPEND my_simple_event TO my_simple_events.
  "
  " Redefine SET_REGISTERED_EVENTS"
  mp3_player-&amp;gt;set_registered_events( EXPORTING  events                    = my_simple_events
                                     EXCEPTIONS illegal_event_combination = 1
                                                OTHERS                    = 2 ).

  """"Set Show Display = true on Media Player
  mp3_player-&amp;gt;set_show_display( show_display = mp3_player-&amp;gt;true ).

  """"Set Show Status Bar = True on Media Player
  mp3_player-&amp;gt;set_show_status_bar( show_status_bar = mp3_player-&amp;gt;true ).

  """"Set Auto Start = False on Media Player
  mp3_player-&amp;gt;set_auto_start( auto_start = mp3_player-&amp;gt;false ).

  """"We want to play a little opening video on creation.
  """"However first we should validate that the opening video
  """"is available to the user"
  " PERFORM validate_filename USING cnst_open_video."

  filename_local = cnst_open_video.

  """"Call File Exist - this also verifies access to the file
  result = cl_gui_frontend_services=&amp;gt;file_exist( file = filename_local ).

  IF result = abap_true.
    """"Set the opening video into the media player
    mp3_player-&amp;gt;set_filename( file_name = cnst_open_video ).

    """"Start playing the opening video
    mp3_player-&amp;gt;play( ).
  ENDIF.

  """"Create the ALV Grid Object - We will display the Playlist in it.
  alv = NEW #( i_parent = custom_container2 ).

  " Set Events and Handlers for ALV Grids
  SET HANDLER lcl_application=&amp;gt;handle_double_click
      FOR alv.
  SET HANDLER lcl_application=&amp;gt;handle_user_command
      FOR alv.
  SET HANDLER lcl_application=&amp;gt;handle_toolbar
      FOR alv.

  """"Itialize variables for ALV Grid - Set the report name
  """"into the ALV Grid so that we can save variants for ALV
  gs_variant-report = sy-repid.

  """"Set the field name in the output structure that will have
  """"the line color
  layout-info_fname = 'LINECOLOR'.

  """"Allow Multi-line selection in the Grid
  layout-sel_mode   = 'C'.

  """"Start the ALV Grid - Create the pointer to the internal table
  """"that will hold the ALV Grid Data.  Also set all the initialization
  """"stuff
  alv-&amp;gt;set_table_for_first_display( EXPORTING "
                                    "      I_BYPASSING_BUFFER            ="
                                    "      I_BUFFER_ACTIVE               ="
                                    "      I_CONSISTENCY_CHECK           ="
                                              i_structure_name = 'ZES_MP3_PLAYLIST'
                                              is_variant       = gs_variant
                                              i_save           = 'A' "
                                    "     I_DEFAULT        = 'X'"
                                              is_layout        = layout "
                                    "      IS_PRINT                      ="
                                    "      IT_SPECIAL_GROUPS             ="
                                    "      IT_TOOLBAR_EXCLUDING          ="
                                    "      IT_HYPERLINK                  ="
                                    "      IT_ALV_GRAPHICS               ="
                                    CHANGING  it_outtab        = imp3_list[] "
                                    "      IT_FIELDCATALOG               ="
                                    "      IT_SORT                       ="
                                    "      IT_FILTER                     ="
                                    "    EXCEPTIONS"
                                    "     INVALID_PARAMETER_COMBINATION = 1"
                                    "     PROGRAM_ERROR    = 2"
                                    "     TOO_MANY_LINES   = 3"
                                    "     others           = 4"
                                        ).
  IF sy-subrc &amp;lt;&amp;gt; 0. "
    "   MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO"
    "              WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4."
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Module  USER_COMMAND_0100  INPUT
"&amp;amp;----""
"
"       PAI - Screen 100 Respond to user input"
"----""

MODULE user_command_0100 INPUT.

  """"Case for possible user input commands
  CASE ok_code.

    WHEN 'BACK' OR
         'CANCEL' OR
         'EXIT'.
      CLEAR ok_code.
      PERFORM free_controls.
      LEAVE TO SCREEN 0.

    WHEN 'CREATE'.
      CLEAR ok_code.
      PERFORM create_new_playlist.

    WHEN 'START'.
      CLEAR ok_code.
      PERFORM start_playing.

    WHEN 'ADD'.
      CLEAR ok_code.
      PERFORM load_files USING ' '.

    WHEN 'SAVE'.
      CLEAR ok_code.
      PERFORM save_playlist.

    WHEN 'LOAD'.
      CLEAR ok_code.
      PERFORM load_playlist.

    WHEN 'DELETE'.
      CLEAR ok_code.
      PERFORM delete_playlist.

  ENDCASE.


ENDMODULE.
"&amp;amp;----""

"&amp;amp;      Form  free_controls
"&amp;amp;----""
"
"       Destroy all frontend controls before you exit."
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM free_controls.
  IF alv IS INITIAL.
  ELSE.
    alv-&amp;gt;free( ).
    CLEAR alv.
  ENDIF.

  IF mp3_player IS INITIAL.
  ELSE.
    mp3_player-&amp;gt;free( ).
    CLEAR mp3_player.
  ENDIF.

  IF custom_container2 IS INITIAL.
  ELSE.
    custom_container2-&amp;gt;free( ).
    CLEAR custom_container2.
  ENDIF.

  IF custom_container IS INITIAL.
  ELSE.
    custom_container-&amp;gt;free( ).
    CLEAR custom_container.
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Module  exit_special  INPUT
"&amp;amp;----""
"
"       Exit Special - Overrides any pending activity"
"----""

MODULE exit_special INPUT.
  CLEAR ok_code.
  PERFORM free_controls.
  LEAVE TO SCREEN 0.
ENDMODULE.

"&amp;amp;----""

"&amp;amp;      Form  create_new_playlist
"&amp;amp;----""
"
"       User has selected to create a new playlist"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM create_new_playlist.
  """"Call the selection screen to ask the user to name the new
  """"playlist and give them an option to use recursive directory
  """"Search.
  CALL SELECTION-SCREEN 2500 STARTING AT 5 20.

  """"Sy-subrc is non zero if the user canceled out of the selection
  """"Screen
  IF sy-subrc = 0.
    """"Did the user choose Recursive directory search or single directory
    IF recurs &amp;lt;&amp;gt; 'X'.
      PERFORM load_files USING 'X'.
    ELSE.
      PERFORM recursive_directory_search.
    ENDIF.
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  load_files
"&amp;amp;----""
"
"       Load a single directories worth of files into a playlist"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM load_files USING clear_list.
  """"List of possible filenames.

  DATA file_tab  TYPE filetable.
  """"File Open Return Code
  DATA rc        TYPE i.
  DATA file_line LIKE LINE OF file_tab.
  DATA author    TYPE string.
  DATA title     TYPE string.

  """"Call the file open dialog only showing MP3
  cl_gui_frontend_services=&amp;gt;file_open_dialog( EXPORTING "
                                              "      WINDOW_TITLE            ="
                                                        default_extension = '".MP3' "
                                              "      DEFAULT_FILENAME        ="
                                                        file_filter       = 'MP3 (".MP3)|".MP3|' "
                                              "      INITIAL_DIRECTORY       ="
                                                        multiselection    = abap_true
                                              CHANGING  file_table        = file_tab[]
                                                        rc                = rc "
                                              "      USER_ACTION             ="
                                              "    EXCEPTIONS"
                                              "     FILE_OPEN_DIALOG_FAILED = 1"
                                              "     CNTL_ERROR        = 2"
                                              "     ERROR_NO_GUI      = 3"
                                              "     others            = 4"
                                                  ).
  IF sy-subrc &amp;lt;&amp;gt; 0 OR rc = 0.
    RETURN.
  ENDIF.

  CLEAR imp3_list.

  """"Is this a new list - if so clear the current list
  """"otherwise we are appending to the current list.
  IF clear_list = 'X'.
    REFRESH imp3_list.
  ENDIF.

  """"For each new Item - Move the data we have to the playlist
  """"Ask the media player for details on the item.
  LOOP AT file_tab INTO file_line.
    CLEAR imp3_list.
    CLEAR author.
    CLEAR title.
    imp3_list-user_id    = sy-uname.
    imp3_list-playlist   = playlist.
    imp3_list-list_index = sy-tabix.
    imp3_list-filename   = file_line-filename.

    """"Pass the new file to the Media Player
    mp3_player-&amp;gt;set_filename( file_name = imp3_list-filename ).

    """"Ask Media Player for Author
    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_author
                                       IMPORTING media_info_string = author ).

    """"Ask the Media Player for Title
    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_title
                                       IMPORTING media_info_string = title ).

    """"Flush to get the import values from the frontend calls
    cl_gui_cfw=&amp;gt;flush( ).

    imp3_list-author = author.
    imp3_list-title  = title.
    APPEND imp3_list.
  ENDLOOP.

  """"Rebuild the playlist index
  PERFORM refresh_playlist_index.

  """"Refresh the alv grid display
  alv-&amp;gt;refresh_table_display( ).
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  start_playing
"&amp;amp;----""
"
"       Begin playing the current playlist"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM start_playing.
  DATA line1(5) TYPE i.

  """"Make sure that there is at least one item in the playlist
  line1 = LINES( imp3_list ).
  IF line1 &amp;lt;= 0.
    RETURN.
  ENDIF.

  CLEAR play_index.

  """"Read the first item in the playlist
  READ TABLE imp3_list INDEX 1.
  play_index = 1.

  """"Validate that this file is a good MP3
  PERFORM validate_filename USING imp3_list-filename.

  """"Set the global author and title for use in the title bar
  global_author = imp3_list-author.
  global_title = imp3_list-title.

  """"Pass the filename to the Media Player
  mp3_player-&amp;gt;set_filename( file_name = imp3_list-filename ).

  """"Start Playing this file
  mp3_player-&amp;gt;play( ).

  """"Set this line to the selected color in the ALV
  LOOP AT imp3_list.
    CLEAR imp3_list-linecolor.
    IF sy-tabix = play_index.
      imp3_list-linecolor = 'C610'.
    ENDIF.
    MODIFY imp3_list.
  ENDLOOP.

  """"Refresh the display of the ALV
  alv-&amp;gt;refresh_table_display( ).
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  validate_filename
"&amp;amp;----""
"
"       Validate that the input filename is good and accessible"
"----""
"
"      --&amp;gt;P_IMP3_LIST_FILENAME  Filename"
"----""

FORM validate_filename USING filename.
  DATA filename_local TYPE string.
  DATA result         TYPE abap_bool.

  filename_local = filename.

  """"Call File Exist - this also verifies access to the file
  result = cl_gui_frontend_services=&amp;gt;file_exist( file = filename_local ).

  """"Error if not accessible
  IF result = abap_false.
    IF filename = cnst_open_video.
      MESSAGE ' WITH filename' TYPE 'E'.
    ELSE.
      MESSAGE 'e079 WITH filename' TYPE 'E'.
    ENDIF.
  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  save_playlist
"&amp;amp;----""
"
"       Save the current playlist to the database"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM save_playlist.
  DATA line1   TYPE n LENGTH 9.
  DATA answer1 TYPE c LENGTH 1.

  """"Make sure that there is data in the playlist
  line1 = LINES( imp3_list ).

  IF line1 &amp;lt;= 0.
    RETURN.
  ENDIF.

  READ TABLE imp3_list INDEX 1.

  """"check to see if this playlist already exsist.
*  SELECT SINGLE playlist FROM zes_mp3_playlist
*         INTO zes_mp3_playlist-playlist
*         WHERE user_id = sy-uname
*           AND playlist = imp3_list-playlist.

  """"If it does, ask the user if they want to overwrite the existing one
  IF sy-subrc = 0.
    """Make the user understand that they will loose any unsaved data
    CALL FUNCTION 'POPUP_TO_CONFIRM_LOSS_OF_DATA'
      EXPORTING  textline1 = TEXT-005 "
      "       textline2 = text-006"
                 titel     = TEXT-007 "
      "       START_COLUMN = 25"
      "       START_ROW = 6"
      IMPORTING  answer    = answer1
      EXCEPTIONS OTHERS    = 1.
  ENDIF.

  IF answer1 = 'N'.
    RETURN.
  ENDIF.

  """"Delete the current playlist
*  DELETE FROM zes_mp3_playlist
*         WHERE user_id = sy-uname
*           AND playlist = imp3_list-playlist.

*  COMMIT WORK.

  """"Write the new playlist into the database
*  LOOP AT imp3_list.
*    MOVE-CORRESPONDING imp3_list TO zes_mp3_playlist.
*    INSERT zes_mp3_playlist.
*  ENDLOOP.

*  COMMIT WORK.

*  MESSAGE i080 WITH playlist.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  load_playlist
"&amp;amp;----""
"
"       Load a playlist from the database"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM load_playlist.
  DATA answer1 TYPE c LENGTH 1.

  """"check to see if a playlist is already loaded
  IF playlist IS INITIAL.
  ELSE.
    """"If so make the sure the user doesn't want to save it first.
    """Make the user understand that they will loose any unsaved data
    CALL FUNCTION 'POPUP_TO_CONFIRM_LOSS_OF_DATA'
      EXPORTING  textline1 = TEXT-008
                 textline2 = TEXT-010
                 titel     = TEXT-009 "
      "       START_COLUMN = 25"
      "       START_ROW = 6"
      IMPORTING  answer    = answer1
      EXCEPTIONS OTHERS    = 1.
  ENDIF.

  IF answer1 = 'N'.
    RETURN.
  ENDIF.

  """"Ask the user for the name of the playlist they want to load
  CALL SELECTION-SCREEN 2500 STARTING AT 5 20.
*  IF sy-subrc = 0.
*
*    CLEAR global_author.
*    CLEAR global_title.
*    CLEAR play_index.
*    CLEAR imp3_list.
*    REFRESH imp3_list.
*
**    """"Read the playlist from the database
**    SELECT " from zes_mp3_playlist
**           into corresponding fields of table imp3_list
**           where user_id  = sy-uname
**             and playlist = playlist.
**
**      """"Refresh the ALV Grid
**      CALL METHOD alv-&amp;gt;refresh_table_display.
**
**    ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  delete_playlist
"&amp;amp;----""
"
"       Delete a Playlist from the database"
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM delete_playlist.
  """"Check to see if a playlist has been loaded
  IF playlist IS INITIAL.
  ELSE.
*    """"Give the user a chance to change their mind
*    """Make the user understand that they will loose any unsaved data
*    CALL FUNCTION 'POPUP_TO_CONFIRM_LOSS_OF_DATA'
*      EXPORTING
*        textline1 = TEXT-013
*        textline2 = TEXT-012
*        titel     = TEXT-011 "
*"       START_COLUMN = 25"
*"       START_ROW = 6"
*      IMPORTING
*        answer    = answer1
*      EXCEPTIONS
*        OTHERS    = 1.
*
*
*    CHECK answer1 NE 'N'.
*
*    """"Delete the playlist
*    DELETE FROM zes_mp3_playlist
*           WHERE user_id = sy-uname
*             AND playlist = playlist.
*
*    COMMIT WORK.
*
**    MESSAGE i081 WITH playlist.
*
*    """"Clear all global variables
*    CLEAR playlist.
*    CLEAR global_author.
*    CLEAR global_title.
*    CLEAR play_index.
*    CLEAR imp3_list.
*    REFRESH imp3_list.
*
*    """"Refresh ALV Grid
*    CALL METHOD alv-&amp;gt;refresh_table_display.

  ENDIF.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  REFRESH_PLAYLIST_INDEX
"&amp;amp;----""
"
"       Recalculate the Playlist index. - Must be unique and begin with"
"       one and have no gaps."
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM refresh_playlist_index.
  """"Loop at the playlist - use the loop index as the new playlist index
  LOOP AT imp3_list.
    CLEAR imp3_list-list_index.
    imp3_list-list_index = sy-tabix.
    MODIFY imp3_list.
  ENDLOOP.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  recursive_directory_search
"&amp;amp;----""
"
"      Perform a recursive directory search - look for a MP3s in the"
"      selected directory - also search all subdirectories under the"
"      selected directory."
"----""
"
"  --&amp;gt;  p1        text"
"  &amp;lt;--  p2        text"
"----""

FORM recursive_directory_search.
  DATA file_tab        TYPE STANDARD TABLE OF file_info.
  DATA window_title    TYPE string.
  DATA selected_folder TYPE string.
  DATA count           TYPE i.
  DATA temp_folder     TYPE c LENGTH 1024.
  DATA len             TYPE i.

  window_title = TEXT-020.

  """"Ask the user for the directory they want to use
  cl_gui_frontend_services=&amp;gt;directory_browse( EXPORTING window_title    = window_title
                                              CHANGING  selected_folder = selected_folder ).

  cl_gui_cfw=&amp;gt;flush( ).

  """"Get a list of all files and directories under the choose directory
  cl_gui_frontend_services=&amp;gt;directory_list_files( EXPORTING  directory                   = selected_folder "
                                                  "    filter                      = 'MP3 (".MP3)|".MP3|'"
                                                  CHANGING   file_table                  = file_tab[]
                                                             count                       = count
                                                  EXCEPTIONS cntl_error                  = 1
                                                             directory_list_files_failed = 2
                                                             wrong_parameter             = 3
                                                             error_no_gui                = 4
                                                             OTHERS                      = 5 ).
  IF sy-subrc &amp;lt;&amp;gt; 0.
*    MESSAGE i038 WITH selected_folder.
  ENDIF.

  cl_gui_cfw=&amp;gt;flush( ).

  """"If the selected directory has a '\' on the end of it
  """"take it off - for consistent processing
  temp_folder = selected_folder.
  len = strlen( temp_folder ).
  len = len - 1.
  IF len &amp;lt; 1.
  ELSE.
    IF temp_folder+len(1) = '\'.
      CLEAR temp_folder+len(1).
    ENDIF.
  ENDIF.
  selected_folder = temp_folder.

  """"Process all the files in the selected folder
  PERFORM process_files TABLES file_tab
                        USING  selected_folder.

  """"Process all subdirectories
  PERFORM process_directories TABLES file_tab
                              USING  selected_folder.

  """"Rebuild the Playlist index
  PERFORM refresh_playlist_index.

  """"Refresh the ALV
  alv-&amp;gt;refresh_table_display( ).
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  process_files
"&amp;amp;----""
"
"       Process File during the recursive search"
"----""
"
"      --&amp;gt;P_FILE_TAB  text"
"----""

FORM process_files TABLES file_tab        STRUCTURE file_info
                   USING  selected_folder TYPE string.

  DATA file_line LIKE LINE OF file_tab.
  DATA len       TYPE i.
  DATA author    TYPE string.
  DATA title     TYPE string.

  """"Look at all files that were read from the selected directory
  LOOP AT file_tab INTO file_line
       WHERE isdir &amp;lt;&amp;gt; '1'.
    CLEAR len.
    len = strlen( file_line-filename ).
    len = len - 4.
    """"Read the file extension - make sure it is MP3
    IF NOT (    file_line-filename+len(4) = '.MP3'
             OR file_line-filename+len(4) = '.mp3' ).
      CONTINUE.
    ENDIF.

    """"Create the full filename
    CONCATENATE selected_folder
             '\'
             file_line-filename
                INTO file_line-filename.

    """"Save this info into the playlist
    CLEAR imp3_list.
    CLEAR author.
    CLEAR title.
    imp3_list-user_id  = sy-uname.
    imp3_list-playlist = playlist. "
    "     MOVE sy-tabix TO imp3_list-list_index."
    imp3_list-filename = file_line-filename.

    """"Ask Media Player for the Author and Title
    mp3_player-&amp;gt;set_filename( file_name = imp3_list-filename ).

    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_author
                                       IMPORTING media_info_string = author ).

    mp3_player-&amp;gt;get_media_info_string( EXPORTING media_info_type   = mp3_player-&amp;gt;mp_clip_title
                                       IMPORTING media_info_string = title ).

    cl_gui_cfw=&amp;gt;flush( ).

    imp3_list-author = author.
    imp3_list-title  = title.
    APPEND imp3_list.
  ENDLOOP.
ENDFORM.
"&amp;amp;----""

"&amp;amp;      Form  process_directories
"&amp;amp;----""
"
"       Process Directories during the recursive search"
"----""
"
"      --&amp;gt;P_FILE_TAB  text"
"----""

FORM process_directories TABLES file_tab        STRUCTURE file_info
                         USING  selected_folder TYPE string.

  DATA file_line    LIKE LINE OF file_tab.
  DATA temp_folder  TYPE string.
  DATA temp_folder2 TYPE string.
  DATA file_tab2    TYPE STANDARD TABLE OF file_info.
  DATA count        TYPE i.

  """"Look at all the directories in the current selection
  LOOP AT file_tab INTO file_line
       WHERE isdir = '1'.

    CLEAR temp_folder.
    CLEAR temp_folder2.
    """"Create the full Path
    CONCATENATE selected_folder
                '\'
                file_line-filename
                INTO temp_folder.

    CLEAR file_tab2.
    REFRESH file_tab2.

    """"Get a list of all files and directories in this new path
    cl_gui_frontend_services=&amp;gt;directory_list_files( EXPORTING  directory                   = temp_folder
                                                    CHANGING   file_table                  = file_tab2[]
                                                               count                       = count
                                                    EXCEPTIONS cntl_error                  = 1
                                                               directory_list_files_failed = 2
                                                               wrong_parameter             = 3
                                                               error_no_gui                = 4
                                                               OTHERS                      = 5 ).

    IF sy-subrc &amp;lt;&amp;gt; 0.
*      MESSAGE i038 WITH temp_folder.
    ENDIF.

    cl_gui_cfw=&amp;gt;flush( ).

    temp_folder2 = temp_folder.

    """"Look at all the files in this new Path
    PERFORM process_files TABLES file_tab2
                          USING  temp_folder2.

    """"Look at all the subdirectories of this new path
    PERFORM process_directories TABLES file_tab2
                                USING  temp_folder.
  ENDLOOP.
ENDFORM.&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;also, please note, that i commented all code that interactedwith the db.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/reformatted-code-gt-using-classic-activex-controls-in-the-abap-control/ba-p/13944159"/>
    <published>2024-11-22T10:59:46.689000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-gen-ai-can-supercharge-the-quality-of-your-erp-migration/ba-p/13955512</id>
    <title>How Gen AI can supercharge the quality of your ERP migration</title>
    <updated>2024-12-04T15:33:38.344000+01:00</updated>
    <author>
      <name>Jeba_Abraham</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1874723</uri>
    </author>
    <content>&lt;P&gt;Our research&lt;A href="#_ftn1" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;[1]&lt;/SPAN&gt;&lt;/A&gt; shows that over 93% of organizations that haven’t upgraded to SAP S/4HANA have already started or plan to migrate within the next 24 months. Yet these organizations will naturally face a number of transitional challenges – ranging from security risks and lack of in-house expertise to customer dissatisfaction and possible financial impact. In order to succeed, organizations must implement robust continuous testing methods that will minimize this risk and deliver uninterrupted business outcomes, while managing the additional changes and updates demanded after the transition. Technology will inevitably play a critical role in executing this strategy effectively, and the rise of new technologies - like Generative AI - must be embraced in future approaches. [removed by moderator]&lt;/P&gt;
&lt;P&gt;&lt;A href="#_ftnref1" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;[1]&lt;/SPAN&gt;&lt;/A&gt; State of Worldwide Business Assurance for SAP Solutions 2023&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;
&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-gen-ai-can-supercharge-the-quality-of-your-erp-migration/ba-p/13955512"/>
    <published>2024-12-04T15:33:38.344000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/enhancing-abap-code-security-during-migration-from-ecc-to-s-4hana/ba-p/13971117</id>
    <title>Enhancing ABAP Code Security During Migration from ECC to S/4HANA</title>
    <updated>2024-12-24T08:51:17.795000+01:00</updated>
    <author>
      <name>vahagn1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/760188</uri>
    </author>
    <content>&lt;P&gt;Migrating from SAP ECC to S/4HANA isn’t just a technical upgrade—it’s a complete reboot of your system. Developing and refining ABAP code becomes a key part of the process, as the entire logic of your business processes relies on it. But alongside the updated functionality, new potential vulnerabilities often emerge that could compromise security and even derail the successful launch of S/4HANA.&lt;/P&gt;
&lt;P&gt;If you’re planning or already in the middle of migration, don’t overlook code security. In new scenarios—whether integrating with external services, updating custom modules, or building unique logic—one missed vulnerability can expose your sensitive data to significant risk.&lt;/P&gt;
&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abap_scan.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/204917i26246BB4389B499C/image-size/large?v=v2&amp;amp;px=999" role="button" title="abap_scan.gif" alt="abap_scan.gif" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;H2 id="toc-hId-1078380262"&gt;Where the Risks Lie&lt;/H2&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;New and adapted programs.&lt;/STRONG&gt; When transferring legacy Z-programs or writing new ABAP code, it’s easy to miss SQL injections, backdoors, or other vulnerabilities.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Third-party components.&lt;/STRONG&gt; If you’re implementing add-ons developed by external vendors, their code must also be thoroughly reviewed.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Integrations and extensions.&lt;/STRONG&gt; Connecting to external services or integrating with SAP BTP increases the likelihood of potential security gaps.&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;During large-scale migrations to S/4HANA, there often isn’t enough time or resources to manually review every piece of code—especially when your developers are already knee-deep in deadlines.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-881866757"&gt;How RedRays Can Help&lt;/H2&gt;
&lt;P&gt;&lt;STRONG&gt;RedRays&lt;/STRONG&gt; has developed an AI-powered solution specifically designed to identify vulnerabilities in ABAP code. Its standout feature is the so-called “AIR mode,” where code analysis runs entirely in-memory.&lt;/P&gt;
&lt;P&gt;What does this mean?&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;No traces.&lt;/STRONG&gt; The scanner doesn’t store logs or export your source code, so your data remains completely confidential.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Real-time analysis.&lt;/STRONG&gt; Results are available almost instantly, allowing developers to fix critical issues immediately.&lt;/LI&gt;
&lt;/UL&gt;
&lt;H3 id="toc-hId-814435971"&gt;Types of Vulnerabilities It Detects&lt;/H3&gt;
&lt;UL&gt;
&lt;LI&gt;Open SQL / Native SQL Injection&lt;/LI&gt;
&lt;LI&gt;Directory Traversal&lt;/LI&gt;
&lt;LI&gt;ABAP Command Injection&lt;/LI&gt;
&lt;LI&gt;Operating System Command Injection&lt;/LI&gt;
&lt;LI&gt;Unauthorized entry points and access&lt;/LI&gt;
&lt;LI&gt;Various backdoors and logic errors&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;With RedRays, you won’t miss critical vulnerabilities—its AI excels at identifying patterns and risks that might seem harmless at first glance.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId-488839747"&gt;A Simple Start: Integration and Workflow&lt;/H2&gt;
&lt;H3 id="toc-hId-421408961"&gt;Seamless Integration with Your Tools&lt;/H3&gt;
&lt;P&gt;RedRays easily integrates with the IDEs you already use, including:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;Eclipse&lt;/STRONG&gt; (commonly used for ABAP development)&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;VS Code&lt;/STRONG&gt; (a versatile, cross-platform IDE)&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;SAP Business Application Studio&lt;/STRONG&gt; (SAP BTP’s native environment)&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;Once the plugin is installed, simply configure the URL and API key, and you’re ready to start scanning your code.&lt;/P&gt;
&lt;H3 id="toc-hId-224895456"&gt;For Developers&lt;/H3&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;Instant Feedback.&lt;/STRONG&gt; After scanning, you’ll immediately receive a list of vulnerabilities along with recommendations for resolving them.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Prioritization.&lt;/STRONG&gt; Issues are categorized by severity (Critical, High, Medium, Low), so you know what to address first.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;User-Friendly Interface.&lt;/STRONG&gt; RedRays provides step-by-step guidance for fixing each identified issue.&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;By embedding security checks directly into your daily workflow, you can proactively eliminate risks without waiting for something to break in production.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId--100700768"&gt;Why This Is Crucial During Migration to S/4HANA&lt;/H2&gt;
&lt;P&gt;Migrating to S/4HANA often brings significant changes to architecture and business processes. This means:&lt;/P&gt;
&lt;UL&gt;
&lt;LI&gt;&lt;STRONG&gt;Data breach risks.&lt;/STRONG&gt; Any vulnerabilities in new modules can lead to unauthorized access to sensitive information.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Compliance issues.&lt;/STRONG&gt; Regulatory requirements like GDPR, SOX, and others can result in hefty fines if your system is not secure.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Reputation damage.&lt;/STRONG&gt; Failures and security incidents can undermine trust with clients, partners, and investors.&lt;/LI&gt;
&lt;/UL&gt;
&lt;P&gt;Code security is often one of those aspects remembered “last minute,” but it’s the foundation of stable and secure operations in your S/4HANA environment.&lt;/P&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId--297214273"&gt;How to Get Started with RedRays&lt;/H2&gt;
&lt;OL&gt;
&lt;LI&gt;&lt;STRONG&gt;Install the plugin&lt;/STRONG&gt; for your IDE (Eclipse, VS Code, or SAP Business Application Studio).&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Set up&lt;/STRONG&gt; the URL and API key to activate the scanner.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Run a scan.&lt;/STRONG&gt; Select the code you need to analyze and get a detailed report in just one click.&lt;/LI&gt;
&lt;LI&gt;&lt;STRONG&gt;Fix vulnerabilities.&lt;/STRONG&gt; Follow the recommendations provided by RedRays to patch issues before deployment.&lt;/LI&gt;
&lt;/OL&gt;
&lt;HR /&gt;
&lt;H2 id="toc-hId--493727778"&gt;Conclusion&lt;/H2&gt;
&lt;P&gt;Migrating to S/4HANA is not just about new functionality and optimization—it’s also about adopting updated security practices. The earlier you begin analyzing and improving your ABAP code, the fewer unpleasant surprises you’ll encounter down the line.&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;RedRays&lt;/STRONG&gt; makes this process faster and easier. Its “AIR mode” ensures your code remains private, while intelligent algorithms detect even the trickiest vulnerabilities.&lt;/P&gt;
&lt;P&gt;[removed by moderator]&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/enhancing-abap-code-security-during-migration-from-ecc-to-s-4hana/ba-p/13971117"/>
    <published>2024-12-24T08:51:17.795000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/defining-a-basic-cds-view/ba-p/13996477</id>
    <title>Defining a Basic CDS View</title>
    <updated>2025-01-25T10:58:50.521000+01:00</updated>
    <author>
      <name>mickaelquesnot</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150004</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;P&gt;Defining a basic Core Data Services (CDS) view in SAP involves creating a data model on the database layer rather than the application layer. This offers significant advantages in terms of performance, data access, and reusability. Here's a breakdown of how to define a basic CDS view:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Development Environment:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You'll typically use the ABAP Development Tools (ADT) in Eclipse to create CDS views. This provides a modern and integrated development environment.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. CDS View Syntax:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The basic syntax for defining a CDS view is as follows:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.sqlViewName: &lt;SPAN class=""&gt;'SQL_VIEW_NAME'&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.compiler.compareFilter: &lt;SPAN class=""&gt;true&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AccessControl&lt;/SPAN&gt;.authorizationCheck: #&lt;SPAN class=""&gt;CHECK&lt;/SPAN&gt;
&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; VIEW_NAME
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; DATABASE_TABLE &lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;SPAN class=""&gt;VIEW&lt;/SPAN&gt;
{
  element1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; alias1,
  element2 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; alias2,
  ...
  elementN &lt;SPAN class=""&gt;as&lt;/SPAN&gt; aliasN
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Let's break down each part:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;@AbapCatalog.sqlViewName: 'SQL_VIEW_NAME':&lt;/STRONG&gt; This annotation is mandatory. It defines the name of the corresponding SQL view that will be created in the database. This is the name you'll use when accessing the view from standard SQL.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;@AbapCatalog.compiler.compareFilter: true:&lt;/STRONG&gt; This annotation is recommended. It ensures that filter conditions are pushed down to the database level for better performance.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;@AccessControl.authorizationCheck: #CHECK:&lt;/STRONG&gt; This annotation is crucial for security. It enforces authorization checks based on the defined authorization objects.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;define view VIEW_NAME:&lt;/STRONG&gt; This keyword starts the definition of the CDS view, followed by the name you want to give to the CDS entity. This is the name used within ABAP programs.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;as select from DATABASE_TABLE or VIEW:&lt;/STRONG&gt; This specifies the data source for the view. You can select from database tables, database views, or other CDS views.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;{ element1 as alias1, ... }:&lt;/STRONG&gt; This is the element list. It defines the fields you want to include in the view. You can rename fields using aliases (as alias).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;3. Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's say you have a database table SCARR (Carrier) and you want to create a CDS view that includes the carrier ID and name:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.sqlViewName: &lt;SPAN class=""&gt;'Z_CARRIER_VIEW'&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.compiler.compareFilter: &lt;SPAN class=""&gt;true&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AccessControl&lt;/SPAN&gt;.authorizationCheck: #&lt;SPAN class=""&gt;CHECK&lt;/SPAN&gt;
&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZCarrierView
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; SCARR
{
  carrid &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CarrierID,
  carrname &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CarrierName
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;In this example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Z_CARRIER_VIEW is the name of the SQL view.&lt;/LI&gt;&lt;LI&gt;ZCarrierView is the name of the CDS view.&lt;/LI&gt;&lt;LI&gt;carrid is renamed to CarrierID.&lt;/LI&gt;&lt;LI&gt;carrname is renamed to CarrierName.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;4. Key Concepts and Enhancements:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Aliases:&lt;/STRONG&gt; Using aliases makes your code more readable and can be essential when joining tables with fields that have the same name.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Types:&lt;/STRONG&gt; The data types of the elements in the view are derived from the underlying database table or view.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Expressions:&lt;/STRONG&gt; You can use expressions in the element list to create calculated fields. For example:&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZSalesOrderValue
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; VBAK
{
  vbeln &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrder,
  netwr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; NetValue,
  waerk &lt;SPAN class=""&gt;as&lt;/SPAN&gt; Currency,
  netwr &lt;SPAN class=""&gt;*&lt;/SPAN&gt; &lt;SPAN class=""&gt;1.19&lt;/SPAN&gt; &lt;SPAN class=""&gt;as&lt;/SPAN&gt; GrossValue &lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt; Calculated field
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joins:&lt;/STRONG&gt; You can join multiple tables or views in the FROM clause.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZCustomerOrders
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; KNA1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; Customer
    &lt;SPAN class=""&gt;inner&lt;/SPAN&gt; &lt;SPAN class=""&gt;join&lt;/SPAN&gt; VBAK &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrder
      &lt;SPAN class=""&gt;on&lt;/SPAN&gt; Customer.kunnr &lt;SPAN class=""&gt;=&lt;/SPAN&gt; SalesOrder.kunnr
{
  Customer.kunnr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerID,
  Customer.name1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerName,
  SalesOrder.vbeln &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrderNumber
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;WHERE Clause:&lt;/STRONG&gt; You can use a WHERE clause to filter the data.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZActiveCustomers
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; KNA1
{
  kunnr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerID,
  name1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerName
} &lt;SPAN class=""&gt;where&lt;/SPAN&gt; kunnr &lt;SPAN class=""&gt;like&lt;/SPAN&gt; &lt;SPAN class=""&gt;'1000%'&lt;/SPAN&gt;; &lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt; &lt;SPAN class=""&gt;Filter&lt;/SPAN&gt; customers starting &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;1000&lt;/SPAN&gt;
&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Associations:&lt;/STRONG&gt; You can define associations between CDS views to navigate related data. This is a more advanced topic but very powerful for building complex data models.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;5. Activation and Usage:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;After defining the CDS view in ADT, you need to activate it. This creates the corresponding SQL view in the database. You can then use the CDS view in ABAP programs using Open SQL statements:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;ABAP&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;SELECT *
  FROM ZCarrierView
  INTO TABLE @DATA(lt_carriers).&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;You can also access the underlying SQL view directly using native SQL if needed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Benefits of CDS Views:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Performance:&lt;/STRONG&gt; Data processing is pushed down to the database level, which is much faster than processing data in the application server.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplified Data Access:&lt;/STRONG&gt; CDS views provide a simplified and consistent way to access data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reusability:&lt;/STRONG&gt; CDS views can be reused in multiple applications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extensibility:&lt;/STRONG&gt; You can extend standard SAP data models using CDS views without modifying the original objects.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By understanding these basic concepts, you can start building efficient and powerful data models using CDS views in your SAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A title="PDF LINKEDIN" href="https://www.linkedin.com/posts/mickaelquesnot_gusap-s4-hanadefining-a-basic-cds-viewdocx-activity-7288156015299108864-KdWM?utm_source=share&amp;amp;utm_medium=member_desktop" target="_self" rel="nofollow noopener noreferrer"&gt;https://www.linkedin.com/posts/mickaelquesnot_gusap-s4-hanadefining-a-basic-cds-viewdocx-activity-7288156015299108864-KdWM?utm_source=share&amp;amp;utm_medium=member_desktop&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/defining-a-basic-cds-view/ba-p/13996477"/>
    <published>2025-01-25T10:58:50.521000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integration-of-qr-code-scanning-in-sap-module-pool-using-html-service/ba-p/14019868</id>
    <title>Integration of QR Code Scanning in SAP Module Pool Using HTML Service</title>
    <updated>2025-03-04T08:44:05.961000+01:00</updated>
    <author>
      <name>nandikaganesan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/855373</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog provides an extensive overview of the steps required to implement a Scan QR functionality in a module pool program by triggering an HTML QR service with a pushbutton and returning the retrieved data to the screen after scanning, ensuring seamless integration between the SAP module pool program and the HTML QR scanning service to enable efficient QR code processing.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Steps:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: &lt;/STRONG&gt;Create a class using transaction se24 and specify IF_HTTP_EXTENSION in the interface section. This class is intended to handle HTTPS requests and responses in the context of web-based applications or services, particularly custom handlers in the Internet Communication Framework.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-03-03 104138.png" style="width: 601px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232232i2117CBC20FBAF04A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-03-03 104138.png" alt="Screenshot 2025-03-03 104138.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: &lt;/STRONG&gt;Declare IF_HTTP_EXTENSION~HANDLE_REQUEST in the methods section by keeping it in public visibility.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-03-03 104022.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232233i516F4E9723B66F4B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-03-03 104022.png" alt="Screenshot 2025-03-03 104022.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: &lt;/STRONG&gt;Click on the method and go to source code to deploy the HTML QR scan code in it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-03-03 104334.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232235iCB21E8347C4A4EBF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-03-03 104334.png" alt="Screenshot 2025-03-03 104334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: &lt;/STRONG&gt;To retrieve the HTTP request method of an incoming request in SAP's ICF (Internet Communication Framework) service, attach the below available HTML code for scan QR functionality.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD IF_HTTP_EXTENSION~HANDLE_REQUEST.
DATA: lv_request_method TYPE string,
      lv_html           TYPE string,
      lt_html_table     TYPE TABLE OF string,
      gv_json           TYPE char250, "string,
      gs_session        TYPE zpp_tab_sess_id,
      lv_var1           TYPE string,
      lv_var2           TYPE string,
      lv_var3           TYPE string,
      lv_var4           TYPE string,
      lv_var5           TYPE string,
      lv_var6           TYPE string,
      lv_var7           TYPE string,
      lv_var8           TYPE string,
      lv_var9           TYPE string.
      lv_request_method = server-&amp;gt;request-&amp;gt;get_method( ).
  CASE lv_request_method.
      WHEN 'GET'.
        CLEAR : gv_json.
        lt_html_table = VALUE #(
        ( CONV string( '&amp;lt;!DOCTYPE html&amp;gt;' ) )
        ( CONV string( '&amp;lt;html lang="en"&amp;gt;' ) )
        ( CONV string( '&amp;lt;head&amp;gt;' ) )
        ( CONV string( '&amp;lt;meta charset="UTF-8"&amp;gt;' ) )
        ( CONV string( '&amp;lt;meta name="viewport" content="width=device-width, initial-scale=1.0"&amp;gt;' ) )
        ( CONV string( '&amp;lt;link rel="stylesheet" href="style.css"&amp;gt;' ) )
        ( CONV string( '&amp;lt;title&amp;gt;QR Code Scanner&amp;lt;/title&amp;gt;' ) )
        ( CONV string( '&amp;lt;style&amp;gt;' ) )
        ( CONV string( '    .message-container {' ) )
        ( CONV string( '        display: flex; flex-direction: column; align-items: center; justify-content: center; margin-top: 20px;' ) )
        ( CONV string( '    }' ) )
        ( CONV string( '    #statusMessage {' ) )
        ( CONV string( '        text-align: center; font-size: 15px; margin-bottom: 5px;' ) )
        ( CONV string( '    }' ) )
        ( CONV string( '    #rescanButton {' ) )
        ( CONV string( '        display: none; margin: 0 auto; padding: 5px 10px; font-size: 10px; cursor: pointer;' ) )
        ( CONV string( '    }' ) )
        ( CONV string( '&amp;lt;/style&amp;gt;' ) )
        ( CONV string( '&amp;lt;/head&amp;gt;' ) )
        ( CONV string( '&amp;lt;body&amp;gt;' ) )
        ( CONV string( '&amp;lt;div class="container"&amp;gt;' ) )
        ( CONV string( '    &amp;lt;h1&amp;gt;Scan QR Codes&amp;lt;/h1&amp;gt;' ) )
        ( CONV string( '    &amp;lt;div class="section"&amp;gt;' ) )
        ( CONV string( '        &amp;lt;div style="width: 500px" id="reader" name="QRCodeData"&amp;gt;&amp;lt;/div&amp;gt;' ) )
        ( CONV string( '        &amp;lt;div class="message-container"&amp;gt;' ) )
        ( CONV string( '            &amp;lt;p id="statusMessage"&amp;gt;&amp;lt;/p&amp;gt;' ) )
        ( CONV string( '            &amp;lt;button id="rescanButton" onclick="rescan()"&amp;gt;Rescan&amp;lt;/button&amp;gt;' ) )
        ( CONV string( '        &amp;lt;/div&amp;gt;' ) )
        ( CONV string( '    &amp;lt;/div&amp;gt;' ) )
        ( CONV string( '&amp;lt;/div&amp;gt;' ) )
        ( CONV string( '&amp;lt;script src="https://unpkg.com/html5-qrcode"&amp;gt;&amp;lt;/script&amp;gt;' ) )
        ( CONV string( '&amp;lt;script&amp;gt;' ) )
        ( CONV string( '    function onScanSuccess(decodedText, decodedResult) {' ) )
        ( CONV string( '        const barcodetxt = decodedText;' ) )
        ( CONV string( '        console.log(decodedText);' ) )
        ( CONV string( '        const urlParams = new URLSearchParams(window.location.search);' ) )
        ( CONV string( '        const sessionID = urlParams.get("SESSION_ID") || '''';' ) )
        ( CONV string( '        const port = window.location.port;' ) )
        ( CONV string( '        const senddata = async (barcodetxt, sessionID, port) =&amp;gt; {' ) )
        ( CONV string( '            try {' ) )
        ( CONV string( '                const res = await fetch(`https://&amp;lt;server&amp;gt;:${port}/sap/bc/zsrv_evp_qrscan`, {' ) )
        ( CONV string( '                    method: "POST",' ) )
        ( CONV string( '                    headers: {' ) )
        ( CONV string( '                        "Content-Type": "application/json"' ) )
        ( CONV string( '                    },' ) )
        ( CONV string( '                    body: JSON.stringify({ barcodetxt, sessionID })' ) )
        ( CONV string( '                });' ) )
        ( CONV string( '                if (res.ok) {' ) )
        ( CONV string( '                    document.getElementById("statusMessage").innerText = "Updated Successfully!";' ) )
        ( CONV string( '                    document.getElementById("statusMessage").style.color = "green";' ) )
        ( CONV string( '                    setTimeout(() =&amp;gt; {' ) )
        ( CONV string( '                        window.open("", "_self", "");' ) )
        ( CONV string( '                        window.close();' ) )
        ( CONV string( '                    }, 2000);' ) )
        ( CONV string( '                } else {' ) )
        ( CONV string( '                    showErrorMessage();' ) )
        ( CONV string( '                }' ) )
        ( CONV string( '            } catch (error) {' ) )
        ( CONV string( '                showErrorMessage();' ) )
        ( CONV string( '                console.error("Error updating data:", error);' ) )
        ( CONV string( '            }' ) )
        ( CONV string( '        };' ) )
        ( CONV string( '        senddata(barcodetxt, sessionID, port);' ) )
        ( CONV string( '        html5QrcodeScanner.clear();' ) )
        ( CONV string( '    }' ) )
        ( CONV string( '    function showErrorMessage() {' ) )
        ( CONV string( '        const statusMessage = document.getElementById("statusMessage");' ) )
        ( CONV string( '        statusMessage.innerText = "Request failed. Please try again.";' ) )
        ( CONV string( '        statusMessage.style.color = "red";' ) )
        ( CONV string( '        const rescanButton = document.getElementById("rescanButton");' ) )
        ( CONV string( '        rescanButton.style.display = "inline-block";' ) )
        ( CONV string( '    }' ) )
        ( CONV string( '    function rescan() {' ) )
        ( CONV string( '        document.getElementById("statusMessage").innerText = "";' ) )
        ( CONV string( '        document.getElementById("rescanButton").style.display = "none";' ) )
        ( CONV string( '        html5QrcodeScanner.render(onScanSuccess);' ) )
        ( CONV string( '    }' ) )
        ( CONV string( '    var html5QrcodeScanner = new Html5QrcodeScanner(' ) )
        ( CONV string( '        "reader", { fps: 10, qrbox: 250 });' ) )
        ( CONV string( '    html5QrcodeScanner.render(onScanSuccess);' ) )
        ( CONV string( '&amp;lt;/script&amp;gt;' ) )
        ( CONV string( '&amp;lt;/body&amp;gt;' ) )
        ( CONV string( '&amp;lt;/html&amp;gt;' ) )
        ).

        CONCATENATE LINES OF lt_html_table INTO lv_html SEPARATED BY cl_abap_char_utilities=&amp;gt;cr_lf.
        server-&amp;gt;response-&amp;gt;set_cdata( lv_html ).
        server-&amp;gt;response-&amp;gt;set_status( code = 200 reason = 'OK' ).

      WHEN 'POST'.
        server-&amp;gt;request-&amp;gt;get_cdata( RECEIVING data = gv_json ).
        lv_html = gv_json.
        server-&amp;gt;response-&amp;gt;set_content_type( 'text/html' ).
        server-&amp;gt;response-&amp;gt;set_cdata( lv_html ).
        SPLIT gv_json AT '"' INTO lv_var1  lv_var2 lv_var3 lv_var4 lv_var5 
                                  lv_var6 lv_var7 lv_var8 lv_var9.
        IF lv_var4 IS NOT INITIAL AND lv_var8 IS NOT INITIAL.
          gs_session = VALUE #( session_id = lv_var8
                                qr_value   = lv_var4
                                created_on = sy-datum
                                created_at = sy-uzeit
                                created_by = sy-uname ).
        IF gs_session IS NOT INITIAL.
          MODIFY  zpp_tab_sess_id FROM gs_session.
        IF sy-subrc = 0.
          COMMIT WORK AND WAIT.
        ELSE.
           ROLLBACK WORK.
        ENDIF.
        ENDIF.
        ENDIF.
        CLEAR : gv_json,gs_session.
    ENDCASE.
ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: &lt;/STRONG&gt;After building the logic in se24, bind the class in SICF transaction by giving hierarchy name as &lt;FONT face="batang,apple gothic"&gt;&lt;STRONG&gt;SERVICE&lt;/STRONG&gt;&lt;/FONT&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-02-18 163438.png" style="width: 925px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/227035i3DA5EBEB580E8BE0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-02-18 163438.png" alt="Screenshot 2025-02-18 163438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;Create a service name in the below navigated hierarchy.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-02-18 163702.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/227064i4094C3C86F987DAE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-02-18 163702.png" alt="Screenshot 2025-02-18 163702.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-03-03 104704.png" style="width: 575px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232236iC835B037F954C870/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-03-03 104704.png" alt="Screenshot 2025-03-03 104704.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: &lt;/STRONG&gt;Assign the class in which the HTML code has been embedded in the handler list of the created service by double clicking on the service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-03-03 104852.png" style="width: 948px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/232237iFFF19E213F276D16/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-03-03 104852.png" alt="Screenshot 2025-03-03 104852.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: &lt;/STRONG&gt;Create a z-table to store the session id and its data while scanning the QR to avoid the data mismatch.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-02-18 180335.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/227072iCC1219E70E6CADAA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-02-18 180335.png" alt="Screenshot 2025-02-18 180335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: &lt;/STRONG&gt;Create a pushbutton in your required screen by using module pool program and name it as Scan QR by keeping its function code as ‘SCAN’&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="nandikaganesan_6-1739872790040.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/226999i8D53CBE1AAA09EBF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="nandikaganesan_6-1739872790040.png" alt="nandikaganesan_6-1739872790040.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9:&lt;/STRONG&gt; In the PAI part write the logic to scan the QR&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Code Explanation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;9.1: cl_system_uuid=&amp;gt;create_uuid_c32_static(&amp;nbsp;RECEIVING&amp;nbsp;uuid&amp;nbsp;=&amp;nbsp;gv_uuid&amp;nbsp;) &lt;/STRONG&gt;&lt;SPAN&gt;will be used to create GUID’s for the new session while triggering the scan pushbutton.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;9.2: &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;gc_srv&lt;/STRONG&gt; &lt;SPAN&gt;refers to the service path which is created in SICF t-code along with the session ID .&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;9.3:&lt;/STRONG&gt;&lt;/SPAN&gt; &lt;STRONG&gt;gc_host&lt;/STRONG&gt; &lt;SPAN&gt;is the HTTPS host link&lt;/SPAN&gt;&lt;STRONG&gt; lv_post&lt;/STRONG&gt; &lt;SPAN&gt;is the port for the particular server and&lt;/SPAN&gt; &lt;STRONG&gt;gv_uuid&lt;/STRONG&gt; &lt;SPAN&gt;is the created guid for each session.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;gc_srv  TYPE string   VALUE '/sap/bc/zsrv_evp_qrscan?SESSION_ID=',
gv_qr         TYPE char50,
gv_uuid       TYPE guid_32.
gv_url        TYPE char200,&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;WHEN 'SCAN'.
      CLEAR : gv_qr, gv_uuid.
*****************To get GUID for each new session***********************
      cl_system_uuid=&amp;gt;create_uuid_c32_static( RECEIVING uuid = gv_uuid ).
****************Changing the URL according to development and production client*******************
      zcl_ril_constant=&amp;gt;fetch_constant_data(
  EXPORTING
    iv_program_name = 'EVP_PORT'
    iv_field        = 'PORT'
    iv_active_flag  = ''
  IMPORTING
    et_table        = DATA(lt_const)
       ).
      DATA(lv_port) = VALUE #( lt_const[ field_name = 'PORT']-zlow OPTIONAL ).

      CONCATENATE gc_host lv_port gc_srv gv_uuid INTO gv_url.
********************Call Browser triggers the browser for QR scan*********************************
      CALL FUNCTION 'CALL_BROWSER'
        EXPORTING
          url                    = gv_url
          window_name            = 'NEW'
        EXCEPTIONS
          frontend_not_supported = 1
          frontend_error         = 2
          prog_not_found         = 3
          no_batch               = 4
          unspecified_error      = 5
          OTHERS                 = 6.
      IF sy-subrc = 0.
        CLEAR : gv_url.
        MESSAGE text-069 TYPE 'I'.
      ELSE.
        MESSAGE text-072 TYPE 'S' DISPLAY LIKE 'E'.
      ENDIF.
*******************Mapping the GUID to the Scan QR field*******************************
      SELECT * FROM zpp_tab_sess_id
      INTO TABLE (lt_id)
      WHERE session_id = _uuid.
      IF sy-subrc = 0.
        DATA(lv_qr_data) = VALUE #( lt_id[ session_id = gv_uuid ]-qr_value OPTIONAL ).
        IF lv_qr_data IS NOT INITIAL .
          gv_qr = lv_qr_data.
        ENDIF.
      ELSE.
        MESSAGE text-072 TYPE 'S' DISPLAY LIKE 'E'.
      ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Incorporating QR Code Scanning in a SAP Module Pool with HTML Service offers easy data capture and real-time processing within the SAP GUI. Users can efficiently scan and process QR codes by embedding an HTML page in a Custom Container, using SAP SICF services, and storing scanned data through ABAP methods. This method improves user experience, eliminates human data entry, and enhances system automation.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integration-of-qr-code-scanning-in-sap-module-pool-using-html-service/ba-p/14019868"/>
    <published>2025-03-04T08:44:05.961000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/using-regular-expressions-in-abap-to-extract-structured-text-segments/ba-p/14064635</id>
    <title>Using Regular Expressions in ABAP to Extract Structured Text Segments</title>
    <updated>2025-04-03T16:02:31.124000+02:00</updated>
    <author>
      <name>kunalsahi85</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/140275</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1836475020"&gt;Introduction&lt;/H3&gt;&lt;P class=""&gt;Regular expressions (regex) are a powerful tool in many programming languages, including ABAP. They allow developers to match patterns within strings — particularly useful when dealing with unstructured or semi-structured text.&lt;/P&gt;&lt;P class=""&gt;In this blog post, we explore a practical use case where regex helps extract specific parts of long text, such as notes or order comments.&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1639961515"&gt;Use Case: Selectively Extract Printable Text&lt;/H3&gt;&lt;P class=""&gt;Use embedded markers like the following to define printable vs non-printable content:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;"Begin Print" — indicates the start of printable content&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;"Do not print" or "Internal notes" — indicates that following lines should not be printed&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Our objective is to extract &lt;STRONG&gt;only the printable content&lt;/STRONG&gt;, even when these markers appear multiple times or are absent entirely.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1443448010"&gt;Solution Overview&lt;/H3&gt;&lt;P class=""&gt;We'll use regex to detect these markers with flexibility (handling variations like "Do.Not.Print" or "Internal-notes"). The logic will toggle a control flag that decides whether each line is included.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId-1246934505"&gt;Reusable Utility Class&lt;/H3&gt;&lt;P class=""&gt;To make this logic portable across different programs and reports, we wrap the filtering into a utility class:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_text_filter DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC.

  PUBLIC SECTION.
    TYPES: ty_line TYPE string,
           ty_lines TYPE STANDARD TABLE OF ty_line WITH DEFAULT KEY.

    CLASS-METHODS:
      filter_printable_text
        IMPORTING
          it_lines TYPE ty_lines
        RETURNING
          VALUE(rt_filtered) TYPE ty_lines.
ENDCLASS.


CLASS zcl_text_filter IMPLEMENTATION.

  METHOD filter_printable_text.

    DATA: lv_should_print TYPE abap_bool VALUE abap_true,
          lv_count TYPE i.

    LOOP AT it_lines INTO DATA(ls_line).
      CLEAR lv_count.

      " Detect 'Begin Print'
      FIND REGEX 'begin[^a-zA-Z0-9]*print'
           IN ls_line IGNORING CASE MATCH COUNT lv_count.
      IF lv_count NE 0.
        lv_should_print = abap_true.
        CONTINUE.
      ENDIF.

      " Detect 'Do not print' or 'Internal notes'
      FIND REGEX 'do[^a-zA-Z0-9]*not[^a-zA-Z0-9]*print|internal[^a-zA-Z0-9]*notes'
           IN ls_line IGNORING CASE MATCH COUNT lv_count.
      IF lv_count NE 0.
        lv_should_print = abap_false.
        CONTINUE.
      ENDIF.

      IF lv_should_print = abap_true.
        APPEND ls_line TO rt_filtered.
      ENDIF.

    ENDLOOP.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-1050421000"&gt;How to Use It&lt;/H3&gt;&lt;P class=""&gt;You can now call this class in any program or report:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA: lt_input TYPE zcl_text_filter=&amp;gt;ty_lines,
      lt_output TYPE zcl_text_filter=&amp;gt;ty_lines.

lt_input = VALUE #( 
  ( 'Do not print: internal checklist' )
  ( 'Review pending approval' )
  ( 'BEGIN PRINT' )
  ( 'Maintenance Order: GM-0021' )
  ( 'Task: Replace pump' )
  ( 'Internal notes: not finalized' )
  ( 'BEGIN PRINT' )
  ( 'Final approval received' )
  ( 'Schedule follow-up inspection' )
).

lt_output = zcl_text_filter=&amp;gt;filter_printable_text( lt_input ).&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-853907495"&gt;Sample Output&lt;/H3&gt;&lt;P class=""&gt;From the above input, the output would be:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Maintenance Order: GM-0021
Task: Replace pump
Final approval received
Schedule follow-up inspection&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-657393990"&gt;Expanded Test Cases&lt;/H3&gt;&lt;P class=""&gt;Below are various test cases this utility handles:&lt;/P&gt;&lt;H4 id="toc-hId-589963204"&gt;Test Case 1: No Control Keywords&lt;/H4&gt;&lt;P class=""&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Order: GM-1001
Task: Inspect pressure valves
Technician: J Singh&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Expected Output&lt;/STRONG&gt;: All lines&lt;/P&gt;&lt;HR /&gt;&lt;H4 id="toc-hId-393449699"&gt;Test Case 2: One Do Not Print Block&lt;/H4&gt;&lt;P class=""&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Do not print: Draft version
Checklist not validated
Awaiting assignment&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Expected Output&lt;/STRONG&gt;: No lines&lt;/P&gt;&lt;H4 id="toc-hId-196936194"&gt;Test Case 3: Begin Print Followed by Valid Section&lt;/H4&gt;&lt;P class=""&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;BEGIN PRINT
Order: GM-1002
Task: Replace filters&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Expected Output&lt;/STRONG&gt;: Lines 2–3&lt;/P&gt;&lt;H4 id="toc-hId--497294406"&gt;Test Case 4: Multiple Blocks&lt;/H4&gt;&lt;P class=""&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Do not print: Internal log
Old data references
BEGIN PRINT
Order: GM-1003
Task: Repair conveyor belt
Internal notes: Operator training in progress
BEGIN PRINT
Final test successful
System back online&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Expected Output&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;Order: GM-1003
Task: Repair conveyor belt
Final test successful
System back online&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--693807911"&gt;Test Case 5: Mixed Case and Spacing&lt;/H4&gt;&lt;P class=""&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;do Not Print: Needs review
Hold all tasks
beGIN print
Order: GM-1004
Task: Inspect motor&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Expected Output&lt;/STRONG&gt;: Lines 4–5&lt;/P&gt;&lt;H3 id="toc-hId--596918409"&gt;Conclusion&lt;/H3&gt;&lt;P class=""&gt;This approach demonstrates the power of regex in ABAP for controlling output from long text fields. By encapsulating the logic in a reusable class, we make it easy to include in Smart Forms, Adobe Forms, or custom reports where long text segmentation is needed.&lt;/P&gt;&lt;P class=""&gt;This technique is highly flexible, supports real-world variations in input, and keeps the business logic transparent.&lt;/P&gt;&lt;P class=""&gt;Have you implemented similar solutions using regex or text parsing in ABAP? Share your approach and experiences in the comments below.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/using-regular-expressions-in-abap-to-extract-structured-text-segments/ba-p/14064635"/>
    <published>2025-04-03T16:02:31.124000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/unleashing-the-power-of-aster-scripting-your-way-to-enhanced-sap/ba-p/14074174</id>
    <title>Unleashing the Power of ASTER: Scripting Your Way to Enhanced SAP Integration Testing</title>
    <updated>2025-04-13T08:00:00.015000+02:00</updated>
    <author>
      <name>MichalKrawczyk</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45785</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1708311140"&gt;What is ASTER?&lt;/H2&gt;&lt;P&gt;ASTER stands for "Another Syntax Tree Expression Runtime." But what does that really mean? Essentially, ASTER is a scripting language that allows you to go beyond standard configuration-based data manipulation and validation within Int4 Suite. It provides a syntax tree execution runtime, enabling you to handle complex scenarios and edge cases with greater ease and efficiency.&lt;BR /&gt;&lt;BR /&gt;Think of it this way: while Int4 Suite's configuration-based engine is incredibly robust and serves the majority of testing needs brilliantly, ASTER offers an additional layer of flexibility for those unique, intricate situations. It's not meant to replace the existing, proven methods but rather to enhance them, providing you with a powerful tool for advanced features.&lt;/P&gt;&lt;H2 id="toc-hId-1511797635"&gt;&lt;STRONG&gt;Why ASTER? The Story Behind the Script&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Int4 Suite has a well-deserved reputation for its strong configuration-based data manipulation and validation engine. It has been instrumental in supporting large-scale cloud integration migrations. However, as with any powerful tool, there are always scenarios that push the boundaries.&lt;BR /&gt;&lt;BR /&gt;We began to notice recurring questions and challenges from our users, particularly around variable manipulation and complex validations. "Is it possible to concatenate variables?" "How can we handle this specific edge case?" These questions spurred us to think beyond the existing configuration options.&lt;BR /&gt;&lt;BR /&gt;The turning point came with a particularly demanding validation scenario presented by a customer. It became clear that we needed a solution that could enable more than just what configuration alone could provide. That's when the idea for ASTER began to take shape. What started as a small concept evolved into a significant addition to the Int4 Suite, designed to empower users with the ability to script their own solutions.&lt;/P&gt;&lt;H2 id="toc-hId-1315284130"&gt;&lt;STRONG&gt;The Technology Behind ASTER&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;ASTER is built on a solid foundation of ABAP classes. The parsing and execution of the ASTER script occur in a safe and isolated environment, ensuring that your scripting activities don't interfere with the underlying ABAP server environment. This isolation means you can confidently use ASTER without worrying about unintended side effects.&lt;/P&gt;&lt;H3 id="toc-hId-1247853344"&gt;&lt;STRONG&gt;Key Features of ASTER&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Syntax Tree Execution:&lt;/STRONG&gt;&amp;nbsp;ASTER utilizes a syntax tree approach, which is a common technique in language design. This allows for efficient parsing and evaluation of expressions, even complex ones.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic Typing:&lt;/STRONG&gt;&amp;nbsp;ASTER is dynamically typed, meaning you don't have to worry about declaring data types. This simplifies scripting and makes it more accessible.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Arithmetic and String Manipulation:&lt;/STRONG&gt;&amp;nbsp;ASTER supports basic arithmetic operations, string manipulation, and boolean logic, providing you with the tools you need for a wide range of tasks.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;User-Defined Functions:&lt;/STRONG&gt;&amp;nbsp;You can build your own functions in ASTER, allowing you to create reusable code and tailor the language to your specific needs.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integration with Int4 Suite:&lt;/STRONG&gt;&amp;nbsp;ASTER seamlessly integrates with Int4 Suite features. You can access test case execution data, payloads, set variables, and more, making it a powerful tool for enhancing your testing workflows.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Safe and Isolated Environment:&lt;/STRONG&gt;&amp;nbsp;ASTER scripts are executed in a safe and isolated environment, ensuring that they don't interfere with the underlying ABAP server.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-922257120"&gt;&lt;BR /&gt;&lt;STRONG&gt;Getting Started with ASTER&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;ASTER is designed to be intuitive and easy to learn, especially if you have some familiarity with other programming languages. We've drawn inspiration from popular languages to make the syntax familiar and accessible.&lt;/P&gt;&lt;H3 id="toc-hId-854826334"&gt;&lt;BR /&gt;&lt;STRONG&gt;Where to Play with ASTER&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In the upcoming Int4 Suite 3.11 release, you'll find a new tile called "Scripts" within the Int4 tiles. This tile will provide access to a script management interface and a user-friendly editor. The editor, based on the open-source Ace editor, has been extended to support ASTER syntax, including syntax highlighting and code completion. This makes writing and debugging ASTER scripts a breeze.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Basic Concepts&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Expressions:&lt;/STRONG&gt;&amp;nbsp;ASTER primarily works with expressions. An expression is a piece of code that evaluates to a value. This could be a simple arithmetic calculation, a string, or a more complex operation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Variables:&lt;/STRONG&gt;&amp;nbsp;You can use variables in ASTER to store and manipulate data. Variables don't need to be explicitly declared; you can simply assign a value to a variable and start using it.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Semicolons:&lt;/STRONG&gt;&amp;nbsp;Use semicolons to separate multiple expressions on a single line.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Output:&lt;/STRONG&gt;&amp;nbsp;The output of an ASTER script is the result of the last evaluated expression.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Example: Hello World&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Here's a simple "Hello World" example in ASTER:&lt;/P&gt;&lt;P&gt;"Hello World";&lt;/P&gt;&lt;P&gt;When you run this script, the output will be "Hello World."&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Beyond Hello World&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Of course, ASTER can do much more than just print "Hello World." You can perform arithmetic calculations, manipulate strings, work with variables, and build complex logic as shown in Figure below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MichalKrawczyk_1-1744473490004.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250034iA34B0A67F424F7A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="MichalKrawczyk_1-1744473490004.png" alt="MichalKrawczyk_1-1744473490004.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-529230110"&gt;&lt;STRONG&gt;Extending Int4 Suite with ASTER&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;One of the most exciting aspects of ASTER is its ability to extend the capabilities of Int4 Suite. You can use ASTER to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Perform complex data validations:&lt;/STRONG&gt;&amp;nbsp;Validate data based on calculations, comparisons, and logical operations.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Manipulate data:&lt;/STRONG&gt;&amp;nbsp;Transform and manipulate data in ways that are not possible with standard configuration.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MichalKrawczyk_2-1744473490012.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250035iA23C14C9CCEFA525/image-size/large?v=v2&amp;amp;px=999" role="button" title="MichalKrawczyk_2-1744473490012.png" alt="MichalKrawczyk_2-1744473490012.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Handle edge cases:&lt;/STRONG&gt;&amp;nbsp;Address unique and intricate scenarios that require custom logic.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Automate tasks:&lt;/STRONG&gt;&amp;nbsp;Automate repetitive tasks and streamline your testing workflows.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Using the Aster script is done directly in the payload processing tab of Automation Objects as shown in the Figure below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MichalKrawczyk_3-1744473490023.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250037i14C9440E51E9BDCF/image-size/large?v=v2&amp;amp;px=999" role="button" title="MichalKrawczyk_3-1744473490023.png" alt="MichalKrawczyk_3-1744473490023.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-332716605"&gt;&lt;STRONG&gt;The Future of ASTER&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;We believe that ASTER has the potential to revolutionize how you approach integration testing with Int4 Suite. We're committed to continuously improving ASTER and adding new features based on your feedback.&lt;/P&gt;&lt;H2 id="toc-hId-136203100"&gt;Kudos&lt;/H2&gt;&lt;P&gt;Special Kudos to our two members of our Int4 Suite Product Team - Marcin Galczynski and Tomasz Mackowski for making ASTER happen!&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--60310405"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;ASTER is a powerful new scripting language that brings enhanced flexibility and precision to integration testing with Int4 Suite. It allows you to handle complex scenarios, manipulate data, and automate tasks with greater ease. We encourage you to explore ASTER and discover the possibilities it unlocks for your testing workflows.&lt;BR /&gt;&lt;BR /&gt;Stay tuned for the release of Int4 Suite 3.11 and get ready to unleash the power of ASTER!&lt;BR /&gt;I hope this blog post meets your needs! Let me know if you'd like any adjustments or further assistance.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/unleashing-the-power-of-aster-scripting-your-way-to-enhanced-sap/ba-p/14074174"/>
    <published>2025-04-13T08:00:00.015000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/agentic-testing-and-simulation-with-int4-suite-s-sap-business-knowledge/ba-p/14076453</id>
    <title>Agentic Testing and Simulation with Int4 Suite's SAP Business Knowledge Graph</title>
    <updated>2025-04-15T11:58:12.371000+02:00</updated>
    <author>
      <name>MichalKrawczyk</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45785</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1708373542"&gt;Intro&amp;nbsp;&lt;/H2&gt;&lt;P&gt;Have you ever wondered why simulation and test automation software is not accessible in a easy way to everyone for SAP projects? Now with Agentic Testing and Simulation based on Int4 Suite's SAP Business Knowledge Graph it's no longer the case with Int4 Suite. You can use your enterprise AI and to simulate any 3rd party test system and run any automated SAP Business process test defined in Int4 Suite.&lt;/P&gt;&lt;H2 id="toc-hId-1511860037"&gt;Why use Agents and AI for Testing and Simulation of SAP applications?&lt;/H2&gt;&lt;P&gt;The Int4 Suite stores millions of historical electronic messages (test cases) pulled from various integration platforms and SAP S/4HANA or SAP ECC backends using Int4 Suite &lt;A href="https://www.youtube.com/watch?v=0AsS1GrjyTc&amp;amp;ab_channel=Int4" target="_self" rel="nofollow noopener noreferrer"&gt;Robotic Crawler&lt;/A&gt;, as shown in the figure below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="robotic_cralwer.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250933i5DAFF32ABF11165D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="robotic_cralwer.png" alt="robotic_cralwer.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;These messages can be grouped into folders and executed across development and test environments. However, this traditional approach comes with two major challenges:&lt;/P&gt;&lt;P&gt;a) &lt;STRONG&gt;Finding the Right Test Cases -&amp;nbsp;&lt;/STRONG&gt;Even with our powerful &lt;A href="https://www.youtube.com/watch?v=TrgWhrJGIhw&amp;amp;ab_channel=Int4" target="_self" rel="nofollow noopener noreferrer"&gt;Test Case Analyzer,&amp;nbsp;&lt;/A&gt;searching through millions of test messages can be overwhelming. Imagine needing to find all messages related to incoming sales orders for:&lt;/P&gt;&lt;P&gt;Customer: 5002334&lt;/P&gt;&lt;P&gt;Materials: T-DK0001 and B-234234&lt;/P&gt;&lt;P&gt;Even with perfectly structured folders, locating the right data might still take several minutes. Multiply that effort across teams and use cases, it adds up.&lt;/P&gt;&lt;P&gt;b) &lt;STRONG&gt;Accessibility and Democratization of Testing -&amp;nbsp;&lt;/STRONG&gt;At Int4, we champion citizen testing. Testing and simulation shouldn’t be limited to users with automation expertise. Anyone should be able to run tests, manual or automated, easily and intuitively. That’s why Int4 Suite isn’t licensed by the number of users. We believe in unrestricted access for all who need to test SAP-integrated business processes.&lt;/P&gt;&lt;H2 id="toc-hId-1315346532"&gt;How Agentic Testing and Simulation Solves These Challenges?&lt;/H2&gt;&lt;P class=""&gt;With Agentic Testing and Simulation built on &lt;STRONG&gt;Int4 Suite’s SAP Business Knowledge Graph&lt;/STRONG&gt;, we can either eliminate or significantly reduce the two main pain points above:&lt;/P&gt;&lt;P&gt;a) &lt;STRONG&gt;Smarter Test Case Discovery&lt;/STRONG&gt; - by combining:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;Historical messages,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Master data,&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;And entity relationships,&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;our intelligent agents enable users to perform &lt;STRONG&gt;semantic and business-context-based searches&lt;/STRONG&gt; across all test cases. You can now search using natural language or business-specific criteria and execute relevant tests instantly similarly as shown in Figure below.&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="chat_screen.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250936i4F65F93389541BED/image-size/large?v=v2&amp;amp;px=999" role="button" title="chat_screen.png" alt="chat_screen.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;b) &lt;STRONG&gt;AI-Driven Chat for Testing - &lt;/STRONG&gt;thanks to enterprise AI and chat-based interfaces, anyone, from any SAP S/4HANA or SAP BTP project, can now access and use testing features without needing to understand the underlying software mechanics.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="everyone.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/250938i92445AA7F0F88E6B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="everyone.png" alt="everyone.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;This brings simulation and automated testing closer to &lt;STRONG&gt;business analysts&lt;/STRONG&gt;, &lt;STRONG&gt;project managers&lt;/STRONG&gt;, and &lt;STRONG&gt;functional consultants&lt;/STRONG&gt;, not just developers or testers.&lt;/P&gt;&lt;H2 id="toc-hId-1118833027"&gt;Why Int4 Suite’s SAP Business Knowledge Graph is a Game Changer?&lt;/H2&gt;&lt;P class=""&gt;Having access to millions of test messages is powerful. But being able to &lt;STRONG&gt;query those test cases from a business perspective&lt;/STRONG&gt; makes it revolutionary.&lt;/P&gt;&lt;P class=""&gt;Instead of filtering only by material numbers or quantities, imagine asking:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pharmaceutical industry&lt;/STRONG&gt;:&lt;BR /&gt;&lt;EM&gt;"Show me test cases of sales orders containing materials flagged as high-risk."&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;FMCG industry&lt;/STRONG&gt;:&lt;BR /&gt;&lt;EM&gt;"Find sales orders from partners where deliveries were most delayed in the last 3–6 months—especially when it led to lost priority unloading slots."&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;To enable these kinds of queries, the Business Knowledge Graph links &lt;STRONG&gt;test data&lt;/STRONG&gt; with &lt;STRONG&gt;master data&lt;/STRONG&gt; and maps relationships between them—unlocking far more intuitive, business-relevant insights.&lt;/P&gt;&lt;H2 id="toc-hId-922319522"&gt;Where to Learn More About Int4 Suite?&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Visit our SAP Learning Course -&amp;nbsp;&lt;A href="https://learning.sap.com/courses/avoid-sap-s-4hana-project-delays-with-third-party-systems-service-virtualization?url_id=text-former-openSAP-course" target="_self" rel="noopener noreferrer"&gt;Avoid SAP S/4HANA Project Delays with Third-Party Systems Service Virtualization&amp;nbsp;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/agentic-testing-and-simulation-with-int4-suite-s-sap-business-knowledge/ba-p/14076453"/>
    <published>2025-04-15T11:58:12.371000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/new-mass-upload-of-test-cases-in-sap-cloud-alm/ba-p/14090247</id>
    <title>New Mass-Upload of Test Cases in SAP Cloud ALM</title>
    <updated>2025-04-30T09:15:29.630000+02:00</updated>
    <author>
      <name>Daniel_Enderli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2995</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1710039889"&gt;New Mass-Upload of Test Cases in SAP Cloud ALM&lt;/H2&gt;&lt;P&gt;It is now possible to upload a large number of test cases to SAP Cloud ALM using the mass upload feature.&lt;BR /&gt;With this blog post I briefly describe the process.&lt;/P&gt;&lt;H3 id="toc-hId-1642609103"&gt;1. Click on the Test Preparation app&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_0-1745996268427.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256465i06FE5A8F9BFC4C14/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_0-1745996268427.png" alt="Daniel_Enderli_0-1745996268427.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1446095598"&gt;2. Navigate to the "Upload Button"&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_1-1745996434945.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256469i4E3B7E946020B69F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_1-1745996434945.png" alt="Daniel_Enderli_1-1745996434945.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1249582093"&gt;3. Download the template to fill it with your test cases&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_3-1745996643898.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256471iA743B2EED76CA526/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_3-1745996643898.png" alt="Daniel_Enderli_3-1745996643898.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_2-1745996615633.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256470iB79396F676B56C93/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_2-1745996615633.png" alt="Daniel_Enderli_2-1745996615633.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1053068588"&gt;4. Perform the upload&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_4-1745996704551.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256472iFBC2BF076F934DB3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_4-1745996704551.png" alt="Daniel_Enderli_4-1745996704551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_5-1745996767591.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256473iEDFF3EAA48527E79/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_5-1745996767591.png" alt="Daniel_Enderli_5-1745996767591.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-598389645"&gt;Ideas and input for SAP&lt;/H1&gt;&lt;UL&gt;&lt;LI&gt;What would certainly be helpful is downloading existing test cases in SAP Cloud ALM, editing them in Excel, and uploading them again.&lt;/LI&gt;&lt;LI&gt;The exchange and reuse of test cases between multiple SAP Cloud ALM projects would also be helpful.&lt;/LI&gt;&lt;LI&gt;SAP should also consider the easy storage of test cases from multiple projects into a central operational project. This is a requirement I hear from many customers.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-401876140"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;In any case, the new mass upload of test cases is a very helpful feature and a first big step in the right direction.&lt;/P&gt;&lt;P&gt;It saves us a lot of time and makes test management much more efficient.&lt;/P&gt;&lt;P&gt;Thank you SAP for providing this functionality.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/new-mass-upload-of-test-cases-in-sap-cloud-alm/ba-p/14090247"/>
    <published>2025-04-30T09:15:29.630000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/project-kernseife-improving-the-measurement-of-clean-core-in-abap/ba-p/14099819</id>
    <title>Project Kernseife - improving the measurement of Clean Core in ABAP</title>
    <updated>2025-05-16T14:04:00.014000+02:00</updated>
    <author>
      <name>LBretschneider</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/14226</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1581230964"&gt;TL;DR&lt;/H1&gt;&lt;P&gt;To improve the handling and measuring of classic ABAP code in ATC with regards to clean core, the possibility of an ATC check based on a custom classification was developed and is now &lt;A href="https://github.com/SAP/project-kernseife/" target="_self" rel="nofollow noopener noreferrer"&gt;published&lt;/A&gt; as an open source project named&amp;nbsp;&lt;STRONG&gt;"Project Kernseife"&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1384717459"&gt;Challenges in Measuring Clean Core&lt;/H1&gt;&lt;P&gt;Working in the area of clean core - especially focusing on the dimension "extensibility" - in projects of different scales, we were more than once asked in the last years on how to measure and govern the clean core principles within SAP S/4HANA systems (focusing on Private Cloud &amp;amp; On-Premises).&lt;/P&gt;&lt;P&gt;A key part to describe the "clean core state" of extensions is from our point of view the creation of a technical debt score that should align with the governance process in your system. That is why SAP's own code quality tool ABAP Test Cockpit (ATC) is very helpful on this. Since the release of "ABAP Cloud" as target for On-Stack extensions, we have now possibibilities with the related ATC Check Variant (ABAP_CLOUD_READINESS) to identify the "distance to Tier 1".&lt;/P&gt;&lt;P&gt;But looking at landscapes with large amount of legacy code (e.g. &amp;gt; 100,000 custom code objects in classic ABAP) or systems where you cannot use sufficiently released APIs for Tier 1, it becomes more difficult to identify the "real" technical debt.&lt;/P&gt;&lt;P&gt;If you run with the default ABAP_CLOUD_READINESS variant into larger systems, you might be overwhelmed by a huge number of findings in ATC - that are all marked as Error. This is logical, if you want to identify the criticality as "what do I need to change to get into ABAP Cloud", but at the same time the important technical debt might be hidden behind a lot of "false positive" findings.&lt;/P&gt;&lt;P&gt;To improve this situation, SAP released the new 3 Tier check (SAP Note&amp;nbsp;&lt;A href="https://me.sap.com/notes/3565942" target="_self" rel="noopener noreferrer"&gt;3565942&lt;/A&gt;) in February of 2025. This check improves the situation by analyzing "classic" coding with a stronger focus on technical debt, to identify the "right" things. It is based on SAP's &lt;A href="https://sap.github.io/abap-atc-cr-cv-s4hc/?version=objectReleaseInfo_PCELatest.json&amp;amp;states=released" target="_self" rel="nofollow noopener noreferrer"&gt;released objects&lt;/A&gt; (Tier 1, official APIs) and nominated &lt;A href="https://sap.github.io/abap-atc-cr-cv-s4hc/?version=objectClassifications_3TierModel.json&amp;amp;states=classicAPI" target="_self" rel="nofollow noopener noreferrer"&gt;Classic APIs&lt;/A&gt;. These Classic APIs belong either to business logic (e.g. BAPI_PO_CREATE1) or a technical framework (e.g. ALV). Finally, there are now also "&lt;A href="https://sap.github.io/abap-atc-cr-cv-s4hc/?version=objectClassifications_3TierModel.json&amp;amp;states=noAPI" target="_self" rel="nofollow noopener noreferrer"&gt;noAPIs&lt;/A&gt;" (objects that must not be used, e.g. RFC_READ_TABLE) nominated by SAP.&lt;/P&gt;&lt;P&gt;Still - we saw a gap in projects to improve the lifes of lead developers: A custom classification. Because SAP may not be able to classify a certain ABAP object as precise as you may be able to do. So SAP is not publishing any information on a given ABAP object and it is shown as accessing an internal object (which leads in ATC to a warning). But in your use case, you are fine with using it. And this is where &lt;STRONG&gt;Kernseife&lt;/STRONG&gt; can help you.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1188203954"&gt;What is "Kernseife"?&lt;/H1&gt;&lt;P&gt;Kernseife consists of two parts:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A custom ATC Check that is based on the new Tier 3 check mentioned above, but uses a custom classification system.&lt;/LI&gt;&lt;LI&gt;CAP Application to create a custom classification of ABAP objects (and we even use it to analyze results from systems in a simple way).&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1120773168"&gt;ATC Check for custom classification&lt;/H2&gt;&lt;P&gt;As mentioned, we started to work on "Kernseife" in 2024 as there was no detailed Tier 3 check available then. Therefore, our focus was initially to create a custom ATC check that can work with a custom classification. It is now re-worked and based on the "new" ATC Check (Note&amp;nbsp;&lt;A href="https://me.sap.com/notes/3565942" target="_self" rel="noopener noreferrer"&gt;3565942&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;This check is basically analyzing your custom code like the Tier 3 check, but when it comes to the evaluation of the impact of a finding, the custom classification comes into play. You can upload the custom classification as a JSON file and in this classification will then used to determine your findings. Let's explain the difference with an example:&lt;/P&gt;&lt;P&gt;In your project, you need to work with the RF framework, because you are implementing EWM in your Private Cloud Environment. Therefore, you need to work with the classes&amp;nbsp;&lt;SPAN&gt;/SCWM/CL_RF*, that are the recommended way to interact with the RF framework. If you look into the Cloudifcation Repostory, you can see that these classes are not &lt;A href="https://sap.github.io/abap-atc-cr-cv-s4hc/?version=objectReleaseInfo_PCELatest.json" target="_self" rel="nofollow noopener noreferrer"&gt;released&lt;/A&gt; or nominated as "&lt;A href="https://sap.github.io/abap-atc-cr-cv-s4hc/?version=objectClassifications_3TierModel.json" target="_self" rel="nofollow noopener noreferrer"&gt;classic API&lt;/A&gt;". Still, you want to generally accept the usage of the RF framework for both: Governance of developers (ATC Checks) and measuring your "distance to clean core".&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;By using your custom classification which contains the classes /SCWM/CL_RF* as "Business Function - Recommended" (BF1), which will lead to only "Information" (Prio 3) findings in the check and will have a lower impact on the "clean core score", you can improve your efficiency.&lt;/P&gt;&lt;P&gt;For details on the custom classification, you can check the &lt;A href="https://github.com/SAP/project-kernseife/blob/main/classification-guide.md" target="_self" rel="nofollow noopener noreferrer"&gt;classification guide&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-924259663"&gt;Application to manage Classifications&lt;/H2&gt;&lt;P&gt;Of course, you could maintain the JSON file of the classification manually based on the given json format. But we created a little app, that is currently in a &lt;A href="https://github.com/SAP/project-kernseife/tree/feature/btp-app-initial-release" target="_self" rel="nofollow noopener noreferrer"&gt;feature branch&lt;/A&gt;, to do that in a&amp;nbsp;more sophisticated way.&lt;/P&gt;&lt;P&gt;In this application, you can initially check the current state for objects as defined by SAP and additionally add objects that are not yet mentioned by SAP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="LBretschneider_0-1747216041665.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260999i38284714B9BEC617/image-dimensions/565x229?v=v2" width="565" height="229" role="button" title="LBretschneider_0-1747216041665.png" alt="LBretschneider_0-1747216041665.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Sticking with the example from above, you can now edit the "Rating Code" of the&amp;nbsp;&lt;SPAN&gt;/SCWM/CL_RF* classes to "BF1". After you did your changes, you can download the classification JSON file, upload it into your ATC check system and all of the findings for these classes will in future be recorded as "Information" (Prio 3) message.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-598663439"&gt;&lt;SPAN&gt;Governance and Measurability&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;With this custom classification and the usage in ABAP Test Cockpit, we can now combine the governance view and the measurability within ATC.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-531232653"&gt;&lt;SPAN&gt;Governance&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;By enhancing SAP's default rating, you can control your developers more efficiently. Because as of today, your lead developers that are able to approve &lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/c238d694b825421f940829321ffa326a/b317b37b06304f99a8cf36e0ebf30861.html?locale=en-US" target="_self" rel="noopener noreferrer"&gt;exemptions&lt;/A&gt;&amp;nbsp;might be overwhelmed by a lot of "false positive" ATC findings. Just imagine every usage of the example classes "/SCWM/CL_RF*" need to be exempted.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In projects - especially looking at the overwhelming errors from the "ABAP_CLOUD_READINESS" ATC check in classic ABAP, you can now control with your custom classification, that recurring "false positive" findings will disappear (or become prio 3 messages only).&lt;/P&gt;&lt;P&gt;This is important, as - being a reviewer - your chances to ask questions on the important findings will improve. Because if for every major developments you need to approve hundreds of exemption requests, you will most probably go into "autopilot" approval mode as you cannot check all of the requests in detail.&lt;/P&gt;&lt;H2 id="toc-hId-334719148"&gt;Measurability&lt;/H2&gt;&lt;P&gt;Our second motivation to create this check is to create a more realistic impact rating to measure what we call the "Kernseife Score" (basically: a technical debt score per object). With every classification (BF1), we consider a score of how severe the impact of using this SAP object is with regards to clean core.&lt;/P&gt;&lt;P&gt;So you can configure now a score - we did use a 0 to 10 scale - to identify how severe is a single finding. Based on the ATC check, we can now provide per object a score that you can use for your reporting. Either to identify the total score per system, per package, per object - or even to deep dive into analyses like "which object has the worst average score per finding?" or "which object is in total view the "uncleanest" object in my system?".&lt;/P&gt;&lt;P&gt;While you can then easily use your analytics tools (e.g. SAP Analytics Cloud) to create the dashboards you need, in our repository you can at least find a CDS-View you can use for extraction (&lt;SPAN&gt;ZKNSF_I_SCORING&lt;/SPAN&gt;), that combines the findings with the score. If you want to directly extract e.g. a list aggregated by object, you could directly use another CDS-View (&lt;SPAN&gt;ZKNSF_I_DEVELOPMENT_OBJECTS&lt;/SPAN&gt;).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-9122924"&gt;What's next?&lt;/H1&gt;&lt;P&gt;Kernseife is currently in use (or in prior versions) in several projects. But to be very clear: There is development ongoing, but we do not have a product roadmap available.&lt;/P&gt;&lt;P&gt;But as it is open source, we are open to feature discussions or pull requests - or just use it for your own advantage!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/project-kernseife-improving-the-measurement-of-clean-core-in-abap/ba-p/14099819"/>
    <published>2025-05-16T14:04:00.014000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/retrieve-data-from-rest-api-to-abap/ba-p/14109609</id>
    <title>Retrieve Data from Rest API to ABAP</title>
    <updated>2025-05-27T09:27:13.029000+02:00</updated>
    <author>
      <name>Aravindha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1442730</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In abap, we create and expose API service through the OData gateway client for integration with third-party systems. This blog focuses on how to retrieve data from a REST API using a standard ABAP class. I have created the OData service using the GET_ENTITY method in an OData project and consumed that API using the approach described below.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;cl_http_client&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;if_http_client&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;****Data Declarations****
TYPES: BEGIN OF tt_json,
         MaterialCode TYPE matnr,           "Material
         UserName     TYPE ernam,           "Creator Name
         mtart        TYPE mtart,           "Material Type
       END OF tt_json.

TYPES: BEGIN OF ty_field,
         fielname TYPE char40,              "Field Name
       END OF ty_field.

DATA: lt_material     TYPE TABLE OF tt_json,
      lt_tab          TYPE TABLE OF ty_field,
      ls_material     TYPE tt_json,
      lo_http         TYPE REF TO if_http_client,    "HTTP Client Abstraction
      lr_data         TYPE REF TO data,
      lv_result       TYPE string,
      lv_content_type TYPE string,
      lv_action_type  TYPE string.

FIELD-SYMBOLS: &amp;lt;ls_data&amp;gt;   TYPE data,
               &amp;lt;ls_d&amp;gt;      TYPE data,
               &amp;lt;ls_struct&amp;gt; TYPE data,
               &amp;lt;lv_any&amp;gt;    TYPE any,
               &amp;lt;lv_char&amp;gt;.

SELECTION-SCREEN BEGIN OF BLOCK a1 WITH FRAME TITLE TEXT-002.
  PARAMETERS: p_mat TYPE matnr OBLIGATORY.
SELECTION-SCREEN END OF BLOCK a1.

*Get URL
DATA(lv_url) =  |{ TEXT-001 }'{ p_mat }')|  .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The API and selection screen look likes,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_0-1747933764005.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265182iF3F80F92AA75BE26/image-dimensions/635x81?v=v2" width="635" height="81" role="button" title="Aravindha_0-1747933764005.png" alt="Aravindha_0-1747933764005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Select Screen.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265201iD6D1B6CEA04CB76A/image-dimensions/697x122?v=v2" width="697" height="122" role="button" title="Select Screen.png" alt="Select Screen.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"To perform the HTTP communication using factory method.
cl_http_client=&amp;gt;create_by_url(
  EXPORTING
    url                    = lv_url           " URL
  IMPORTING
    client                 = lo_http          " HTTP Client Abstraction
  EXCEPTIONS
    argument_not_found     = 1                " Communication parameter (host or service) not available
    plugin_not_active      = 2                " HTTP/HTTPS communication not available
    internal_error         = 3                " Internal error (e.g. name too long)
    OTHERS                 = 7
).
"
IF sy-subrc = 0.
  lv_content_type  = 'application/json'.
  lv_action_type   = 'GET'.
  lo_http-&amp;gt;request-&amp;gt;set_content_type(  lv_content_type ).
  lo_http-&amp;gt;request-&amp;gt;set_method( lv_action_type ).
"The output shows a json format.
  lo_http-&amp;gt;request-&amp;gt;set_header_field(
  EXPORTING
    name  =  'Accept'                          " Name of the header field
    value =  'application/json'                " HTTP header field value
).
"To ignore the authentication during execution.
  lo_http-&amp;gt;propertytype_logon_popup = if_http_client=&amp;gt;co_disabled.
  lo_http-&amp;gt;authenticate(
  EXPORTING
    proxy_authentication = ' '            " Proxy Logon (= 'X')
    client               = '800'          " R/3 system (client number from logon)
    username             = 'username'     " ABAP System, User Logon Name
    password             = 'password'     " Logon ID
    language             = 'E'            " SAP System, Current Language
).
ENDIF.

lo_http-&amp;gt;send(
  EXPORTING
    timeout                    = 15                 " Timeout of Answer Waiting Time
  EXCEPTIONS
    http_communication_failure = 1                  " Communication Error
    http_invalid_state         = 2                  " Invalid state
    http_processing_failed     = 3                  " Error when processing method
    http_invalid_timeout       = 4                  " Invalid Time Entry
    OTHERS                     = 5
).
IF sy-subrc &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

lo_http-&amp;gt;receive(
  EXCEPTIONS
    http_communication_failure = 1                " Communication Error
    http_invalid_state         = 2                " Invalid state
    http_processing_failed     = 3                " Error when processing method
    OTHERS                     = 4
).
IF sy-subrc &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*Get the response from target as character string cdata( ).
lv_result = lo_http-&amp;gt;response-&amp;gt;get_cdata( ).
lo_http-&amp;gt;close( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;We have the response from target system and need to retrieve the data from the string variable lv_result.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*Deserialize the data from Json to Abap
/ui2/cl_json=&amp;gt;deserialize(
  EXPORTING
    json             =  lv_result         " JSON string
  CHANGING
    data             =  lr_data           " Data to serialize
).

lt_tab =  VALUE #( ( fielname = 'MATERIALCODE')
                   ( fielname = 'USERNAME')
                   ( fielname = 'MTART'  ) ).

ASSIGN lr_data-&amp;gt;* TO &amp;lt;ls_data&amp;gt;.
ASSIGN COMPONENT 'd' OF STRUCTURE &amp;lt;ls_data&amp;gt; TO &amp;lt;ls_d&amp;gt;.

DATA(lo_typedescr) = cl_abap_typedescr=&amp;gt;describe_by_data( &amp;lt;ls_d&amp;gt; ).
ASSIGN &amp;lt;ls_d&amp;gt;-&amp;gt;* TO &amp;lt;ls_struct&amp;gt;.
IF &amp;lt;ls_struct&amp;gt; IS ASSIGNED.
  LOOP AT lt_tab INTO DATA(ls_tab).
    ASSIGN COMPONENT ls_tab-fielname OF STRUCTURE &amp;lt;ls_struct&amp;gt; TO &amp;lt;lv_any&amp;gt;.
    IF &amp;lt;lv_any&amp;gt; IS ASSIGNED.
      ASSIGN &amp;lt;lv_any&amp;gt;-&amp;gt;* TO &amp;lt;lv_char&amp;gt;.
      IF &amp;lt;lv_char&amp;gt; IS ASSIGNED.
        ASSIGN COMPONENT ls_tab-fielname OF STRUCTURE ls_material TO FIELD-SYMBOL(&amp;lt;lv_target&amp;gt;).
        IF &amp;lt;lv_target&amp;gt; IS ASSIGNED.
          &amp;lt;lv_target&amp;gt; = &amp;lt;lv_char&amp;gt;.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDIF.
UNASSIGN: &amp;lt;ls_data&amp;gt;,&amp;lt;ls_d&amp;gt;,&amp;lt;ls_struct&amp;gt;,&amp;lt;lv_any&amp;gt;,&amp;lt;lv_char&amp;gt;,&amp;lt;lv_target&amp;gt;.

cl_demo_output=&amp;gt;begin_section( 'Material Detail' ).
cl_demo_output=&amp;gt;write_data( ls_material ).
cl_demo_output=&amp;gt;next_section( 'OData Service URL' ).
cl_demo_output=&amp;gt;write_text( lv_url ).
cl_demo_output=&amp;gt;display( ).
CLEAR: ls_material.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The output should be like below in debugger level.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Debugger Level.png" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265202i641ED9C9567251A4/image-dimensions/571x239?v=v2" width="571" height="239" role="button" title="Debugger Level.png" alt="Debugger Level.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Output.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265205i35F15273B8391E9B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Output.png" alt="Output.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Test the above service URI to postman app in GET method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Post 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265207iC803123558A9A968/image-size/large?v=v2&amp;amp;px=999" role="button" title="Post 1.png" alt="Post 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Post 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265208i4CE7DF673C51A334/image-size/large?v=v2&amp;amp;px=999" role="button" title="Post 2.png" alt="Post 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; In the example above, I retrieved data from an OData HTTP API that does not require an SSL certificate. However, when communication with external APIs. an SSL certificate is typically required. We will cover this in detail in a separate blog post.&lt;/P&gt;&lt;P&gt;Thank you!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/retrieve-data-from-rest-api-to-abap/ba-p/14109609"/>
    <published>2025-05-27T09:27:13.029000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/testing-end-to-end-processes-using-sequences/ba-p/14113832</id>
    <title>Testing End-to-End Processes Using Sequences</title>
    <updated>2025-05-28T17:14:43.737000+02:00</updated>
    <author>
      <name>Daniel_Enderli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2995</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1860458694"&gt;Introduction&lt;/H3&gt;&lt;P&gt;SAP Cloud ALM now allows the use of so-called test sequences to control the order of test cases and organize them into an orderly sequence. In this article, I will demonstrate how this feature can be used.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic0.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266982i29950BA460FCF978/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic0.jpg" alt="pic0.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1663945189"&gt;Added Value of Sequences&lt;/H3&gt;&lt;P&gt;Sequences offer several advantages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A defined order for the sequence of steps/test cases&lt;/LI&gt;&lt;LI&gt;Clearly defined number of test cases per sequence&lt;/LI&gt;&lt;LI&gt;Control of responsibilities&lt;/LI&gt;&lt;LI&gt;Improved preparation and planning&lt;/LI&gt;&lt;LI&gt;Monitoring and tracking of progress&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1467431684"&gt;Using Sequences&lt;/H3&gt;&lt;P&gt;In Test Plan Management, a sequence can be defined and removed as follows:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_0-1748444597742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266983i4EE1705A87F69914/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Daniel_Enderli_0-1748444597742.png" alt="Daniel_Enderli_0-1748444597742.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Daniel_Enderli_3-1748444769917.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266987iA76750C9990308C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Daniel_Enderli_3-1748444769917.png" alt="Daniel_Enderli_3-1748444769917.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1270918179"&gt;Sequence during Test Execution&lt;/H3&gt;&lt;P&gt;When executing test cases, users can display the sequence and execute the test cases accordingly:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="exec.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/266984iEFD246F3E625408B/image-size/large?v=v2&amp;amp;px=999" role="button" title="exec.jpg" alt="exec.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1074404674"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;The sequence function in SAP Cloud ALM is a helpful new feature that creates transparency in the preparation, execution, and evaluation of end-to-end processes and test cases.&lt;/P&gt;&lt;H3 id="toc-hId-877891169"&gt;Further information on project management and test management:&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Using test plans in SAP Cloud ALM: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/using-test-plans-in-sap-cloud-alm/ba-p/13578973" target="_self"&gt;LINK&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Project management with SAP Cloud ALM: &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/project-management-with-sap-cloud-alm/ba-p/13553129" target="_self"&gt;LINK&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Modeling end-to-end business processes: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/modeling-end-to-end-business-processes/ba-p/13617347" target="_self"&gt;LINK&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/testing-end-to-end-processes-using-sequences/ba-p/14113832"/>
    <published>2025-05-28T17:14:43.737000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-add-task-to-an-existing-transport-request-using-program/ba-p/14116716</id>
    <title>How to add task to an existing transport request using program</title>
    <updated>2025-06-02T14:09:07.356000+02:00</updated>
    <author>
      <name>Jayesh_Gharate1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1615208</uri>
    </author>
    <content>&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;SPAN&gt;PARAMETERS: &lt;/SPAN&gt;&lt;SPAN&gt;p_TR&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt; OBLIGATORY. // Take TR as parameter&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;DATA: &lt;/SPAN&gt;&lt;SPAN&gt;lt_authorlist&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trwbo_users&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;lt_return&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;e070&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ls_return&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;bapiret2&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;lv_new_task&lt;/SPAN&gt;&lt;SPAN&gt; TYPE &lt;/SPAN&gt;&lt;SPAN&gt;trkorr&lt;/SPAN&gt;&lt;SPAN&gt;. // Variable to take task &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;START-OF-SELECTION.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;CALL FUNCTION &lt;/SPAN&gt;&lt;SPAN&gt;'TRINT_INSERT_NEW_COMM'&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;EXPORTING&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_kurztext&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;'New Task' // Description if creating TR&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_trfunction&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;'S' // 'S' to create task under TR &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;iv_username&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;sy&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;uname // System Username &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;wi_strkorr&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;p_TR // Export TR value to FM&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;IMPORTING&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we_trkorr&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;lv_new_task // Import task to the variable&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;EXCEPTIONS&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_systemname&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_systemtype&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;2&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;no_authorization&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;3&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;db_access_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;4&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;file_access_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;5&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;enqueue_error&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;6&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;number_range_full&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;7&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;invalid_input&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;8&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;OTHERS = &lt;/SPAN&gt;&lt;SPAN&gt;9&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;IF &lt;/SPAN&gt;&lt;SPAN&gt;sy&lt;/SPAN&gt;&lt;SPAN&gt;-&lt;/SPAN&gt;&lt;SPAN&gt;subrc&lt;/SPAN&gt;&lt;SPAN&gt; = &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WRITE: &lt;/SPAN&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;' New task created under TR:'&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;p_TR&lt;/SPAN&gt;&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;' Task number:'&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;lv_new_task&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ELSE.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;WRITE: &lt;/SPAN&gt;&lt;SPAN&gt;/&lt;/SPAN&gt; &lt;SPAN&gt;'Failed to create task. '&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ENDIF.&lt;BR /&gt;&lt;BR /&gt;*********************************************************************************&lt;BR /&gt;Type of request/task&lt;BR /&gt;Domain :&amp;nbsp;TRFUNCTION&lt;BR /&gt;K : Workbench Request&lt;BR /&gt;W : Customizing Request&lt;BR /&gt;S : Development/Correction&lt;BR /&gt;Q : Customizing Task&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-add-task-to-an-existing-transport-request-using-program/ba-p/14116716"/>
    <published>2025-06-02T14:09:07.356000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/modern-abap-reduce-operator-and-for-groups/ba-p/14121336</id>
    <title>Modern ABAP: Reduce# operator and FOR GROUPS</title>
    <updated>2025-06-10T20:01:53.772000+02:00</updated>
    <author>
      <name>Aravindha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1442730</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Business Requirement:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;A customer wants to show the sum of GR posted material document &amp;amp; purchase orders(s) net price using the data updated in MSEG &amp;amp; EKPO tables.&amp;nbsp; For clear understanding breakdown of requirement here,&lt;/P&gt;&lt;P&gt;For each line item of PO should be processed like ERFME (qty) * NETPR (amt) and sum the total amount of line item.&amp;nbsp;&lt;/P&gt;&lt;P&gt;i.e., 1st line item- 5 * 10.00 = 50.00&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 2nd line item- 3 * 100.00 = 300.00&lt;/P&gt;&lt;P&gt;TOTAL = 350.00&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Let's implement this in classic ABAP LOOP...ENDLOOP:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SORT lt_tab BY MBLNR.
LOOP AT lt_tab INTO DATA(ls_data).
  AT NEW mblnr.
    CLEAR lv_netpr.
    APPEND INITIAL LINE TO lt_final REFERENCE INTO DATA(lr_final).
    lr_final-&amp;gt;mblnr = ls_data-mblnr.
  ENDAT.
  lv_netpr = lv_netpr + ( ls_data-erfmg * ls_data-netpr ).
  lr_final-&amp;gt;netpr = lv_netpr.
ENDLOOP.
FREE lr_final.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;The output as follows,&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_0-1749208332588.png" style="width: 531px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270818i5462CB877A874F34/image-dimensions/531x203?v=v2" width="531" height="203" role="button" title="Aravindha_0-1749208332588.png" alt="Aravindha_0-1749208332588.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_1-1749208376879.png" style="width: 572px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270819i78810BEDD6D21630/image-dimensions/572x172?v=v2" width="572" height="172" role="button" title="Aravindha_1-1749208376879.png" alt="Aravindha_1-1749208376879.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's achieve this in Modern ABAP using with #FOR GROUPS&amp;nbsp;and #Reduce# operator&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;lt_final = VALUE #( FOR GROUPS ls_group OF ls_data IN lt_tab
                    GROUP BY( mblnr = ls_data-mblnr )
                    LET lv_total = REDUCE netpr( INIT lv_sum = 0 
                    FOR ls_row IN GROUP ls_group
                    NEXT lv_sum = lv_sum + (   ls_row-netpr * ls_row-erfmg ) )
                    IN
                    VALUE #( mblnr = ls_group-mblnr
                    netpr = lv_total ) ) ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In debugger Mode,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_2-1749210190443.png" style="width: 1181px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270826i03B66CD626A0C4C4/image-dimensions/1181x213?v=v2" width="1181" height="213" role="button" title="Aravindha_2-1749210190443.png" alt="Aravindha_2-1749210190443.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_3-1749210303163.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/270827i488291C69325E43A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Aravindha_3-1749210303163.png" alt="Aravindha_3-1749210303163.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The GROUP BY clause could be used in classic LOOP...ENDLOOP as well with the field symbol. Kindly refer the blogs that are available in internet.&lt;/P&gt;&lt;P&gt;Thanks for your time!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/modern-abap-reduce-operator-and-for-groups/ba-p/14121336"/>
    <published>2025-06-10T20:01:53.772000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cds-views-vs-traditional-abap-logic-performance/ba-p/14125726</id>
    <title>CDS Views Vs Traditional ABAP Logic Performance</title>
    <updated>2025-06-13T16:14:08.829000+02:00</updated>
    <author>
      <name>Aravindha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1442730</uri>
    </author>
    <content>&lt;P&gt;Hello Members,&lt;/P&gt;&lt;P&gt;In my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/modern-abap-reduce-operator-and-for-groups/ba-p/14121336" target="_self"&gt;previous blog&lt;/A&gt; explained how to optimize the classic LOOP....ENDLOOP with modern ABAP syntax FOR GROUPS and REDUCE # operator, please have a look at it if you not seen before.&lt;/P&gt;&lt;P&gt;In this blog we explore how the ABAP CDS (Core Data Service) simplifies the complex logic that used in SAP GUI and boost up the performance of query.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Below is the code snippet that written in SAP GUI, and the purpose of the code was already explained in&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/modern-abap-reduce-operator-and-for-groups/ba-p/14121336" target="_self"&gt;previous blog&lt;/A&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT a~mblnr,a~erfmg, a~ebeln, a~ebelp,
       b~netpr
  FROM mseg AS a
  INNER JOIN ekpo AS b ON a~ebeln = b~ebeln
                       AND a~ebelp = b~ebelp
  INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(lt_tab)
  WHERE mblnr IN @s_mbl.

lt_final = VALUE #( FOR GROUPS ls_group OF ls_data IN lt_tab
                    GROUP BY ( mblnr = ls_data-mblnr )
                    LET lv_total = REDUCE netpr( INIT lv_sum = 0
                                                 FOR ls_row IN GROUP ls_group
                                                 NEXT lv_sum = lv_sum + ( ls_row-netpr * ls_row-erfmg ) )
                                                 IN (
                                                 VALUE #(
                                                 mblnr = ls_group-mblnr
                                                 netpr = lv_total ) ) ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The output of first internal table 'lt_tab' as like,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_0-1749664976085.png" style="width: 735px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273264i4AB5487F33FC76D6/image-dimensions/735x258?v=v2" width="735" height="258" role="button" title="Aravindha_0-1749664976085.png" alt="Aravindha_0-1749664976085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Output of the second internal table 'lt_final',&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_1-1749665107841.png" style="width: 779px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273271i1B01395D02D50ED2/image-dimensions/779x226?v=v2" width="779" height="226" role="button" title="Aravindha_1-1749665107841.png" alt="Aravindha_1-1749665107841.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's simplify the above logic using with ABAP core data services. Pre-requisite, please ensure to use S/4 HANA system, and eclipse with ABAP development tools software.&lt;/P&gt;&lt;P&gt;Here I created two views #Basic and #Composite. The view '&lt;SPAN&gt;nsdm_v_mseg' has used to fetch the fields from MSEG data instead of database table in Basic view and aggregate function performed in composite view with the required fields in composite view that selected from basic view.&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.sqlViewName: 'ZVIEW_MSEG'
@AbapCatalog.compiler.compareFilter: true
@AbapCatalog.preserveKey: true
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Basic View for MatDoc'
@Metadata.ignorePropagatedAnnotations: true
@VDM.viewType: #BASIC
define view ZCAL_MSEG_VIEW
  as select from nsdm_v_mseg as _doc_seg
  association [1..1] to ekpo as _item on  _doc_seg.ebeln = _item.ebeln
                                      and _doc_seg.ebelp = _item.ebelp
{
  key _doc_seg.mblnr,
  key _doc_seg.mjahr,
  key _doc_seg.zeile,
      _doc_seg.ebeln,
      _doc_seg.ebelp,
      _doc_seg.waers,
      @Semantics.quantity.unitOfMeasure: 'meins'
      _doc_seg.erfmg,
      _doc_seg.meins,
      _item.netpr
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Composite View For MatDoc'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@VDM.viewType: #COMPOSITE
define view entity ZCAL_VIEW
  as select from ZCAL_MSEG_VIEW
{
  key mblnr                                                                                      as Material_document,
      ebeln                                                                                      as Purchase_Order,
      @Semantics.amount.currencyCode: 'Currency'
      sum( netpr )                                                                               as Total_Amount,
      waers                                                                                      as Currency,
      fltp_to_dec( sum( cast(erfmg as abap.fltp) * cast(netpr as abap.fltp) ) as abap.dec(11,2)) as Base_amount

}
where
  ebeln &amp;lt;&amp;gt; ''
group by
  mblnr,
  ebeln,
  waers&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The output of the composite view as below,&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_2-1749668097541.png" style="width: 889px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273292i29E5A7341B5456D7/image-dimensions/889x288?v=v2" width="889" height="288" role="button" title="Aravindha_2-1749668097541.png" alt="Aravindha_2-1749668097541.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's consume the fields from CDS view in GUI system,&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT Material_document, Purchase_order, Total_Amount, Currency, Base_Amount
  FROM zcal_view
  WHERE Material_document IN @s_mbl
  ORDER BY Material_document
  INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(lt_cds_view).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_3-1749669137811.png" style="width: 850px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273311i1C7BD00A610F94C2/image-dimensions/850x181?v=v2" width="850" height="181" role="button" title="Aravindha_3-1749669137811.png" alt="Aravindha_3-1749669137811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Comparing the internal tables between lt_cds _view and lt_final.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_4-1749669713918.png" style="width: 769px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273320i28EC8B12385A910A/image-dimensions/769x159?v=v2" width="769" height="159" role="button" title="Aravindha_4-1749669713918.png" alt="Aravindha_4-1749669713918.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Conclusion:&lt;/P&gt;&lt;P&gt;In traditional GUI based programming data is fetched from database layer and processed in the application layer, whereas the CDS view has pushed down the logic in database layer itself and it is known the Code Pushdown Approach. It makes more efficient than the GUI based approaches, as they reduce data transfer and leverage the power of the database processing.&lt;/P&gt;&lt;P&gt;Based on complexity of your logic you can decide whether go with CDS view or GUI as per the business requirement. But the above logic there is one more way to achieve by select query itself if you are using S/4HANA 7.50.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;SELECT a~mblnr, a~ebeln, a~waers,
    CAST( SUM( a~erfmg * b~netpr ) AS DEC( 11,2 ) ) AS total_amt
  FROM mseg AS a
  INNER JOIN ekpo AS b ON a~ebeln = b~ebeln
                       AND a~ebelp = b~ebelp
  WHERE mblnr IN @s_mbl
  GROUP BY a~mblnr, a~ebeln, a~waers
  INTO TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1407137"&gt;@DATA&lt;/a&gt;(lt_tab).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_5-1749673164911.png" style="width: 852px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273334i8A77BDEE76927C5E/image-dimensions/852x277?v=v2" width="852" height="277" role="button" title="Aravindha_5-1749673164911.png" alt="Aravindha_5-1749673164911.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thanks for your time!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cds-views-vs-traditional-abap-logic-performance/ba-p/14125726"/>
    <published>2025-06-13T16:14:08.829000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/include-released-successor-objects-from-quot-cloudification-repo-quot-in/ba-p/14136908</id>
    <title>Include released successor objects from "cloudification repo" in your ABAP custom code migration</title>
    <updated>2025-07-17T15:35:03.728000+02:00</updated>
    <author>
      <name>lutzi3</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/168005</uri>
    </author>
    <content>&lt;P&gt;Many SAP customers are currently in the phase of migrating their SAP ERP systems to S/4HANA. For those who choose a brownfield or bluefield approach the old ERP system is converted and the customers extensions and own applications (Z* objects) become part of the new system.&lt;/P&gt;&lt;P&gt;Then, the process of Custom Code Adaptation kicks in where the ERP functionality is analyzed and corrected in a way that the objects run again in S/4HANA. See &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/get-started-with-the-abap-custom-code-migration-process/bc-p/14049622" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/get-started-with-the-abap-custom-code-migration-process/bc-p/14049622&lt;/A&gt; or &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-s-4hana-system-conversion-custom-code-adaptation-process/ba-p/13337309" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-s-4hana-system-conversion-custom-code-adaptation-process/ba-p/13337309&lt;/A&gt; for more details.&lt;/P&gt;&lt;P&gt;The custom code correction process can be time consuming and challenging depending on the size and complexity of the original ERP system. A big part of the custom code objects will be touched. The basis for the checks and corrections is the ABAP Test Cockpit (ATC) with the check variant for S/4HANA (e.g. S4HANA_READINESS_2023).&lt;/P&gt;&lt;P&gt;In case the customer wants to move functionality to SAP BTP ABAP or the S/4HANA (public) Cloud versions it is not sufficient to make the old ERP code just S/4HANA ready. The cloud versions have a heavily restricted set of the ABAP language (so called &lt;A href="https://help.sap.com/doc/abapdocu_latest_index_htm/latest/en-US/abenabap_versions.htm" target="_blank" rel="noopener noreferrer"&gt;language version 5&lt;/A&gt;&amp;nbsp;) and furthermore access to SAP standard objects is allowed to (relatively few) released objects only. For instance, you must not use the MARA table to read materials but the I_PRODUCT CDS. This information is stored in the so called cloudification repository (&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-to-check-your-custom-code-for-abap-cloud/ba-p/13567124" target="_blank"&gt;https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/how-to-check-your-custom-code-for-abap-cloud/ba-p/13567124&lt;/A&gt; ) which is regularly updated. (See &lt;A href="https://github.com/SAP/abap-atc-cr-cv-s4hc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/abap-atc-cr-cv-s4hc&lt;/A&gt; for the Raw data).&lt;/P&gt;&lt;P&gt;It contains as well successor information for some of the old ERP objects in particular for the data base tables which makes it particularly interesting for the custom code migration process. See note &lt;A href="https://launchpad.support.sap.com/#/notes/3284711" target="_blank" rel="noopener noreferrer"&gt;https://launchpad.support.sap.com/#/notes/3284711&lt;/A&gt; for installation of the according ATC check / check "Usage of Released APIs (Cloudification Repository)" &amp;nbsp;in releases before 2023 FP 3.&lt;/P&gt;&lt;P&gt;The idea is now to use the &lt;STRONG&gt;officially released successors for the objects which need to be corrected&lt;/STRONG&gt; anyway during the migration ERP -&amp;gt; S/4HANA.&lt;/P&gt;&lt;P&gt;A (simple) example: When accessing table SKA1 corrections could be necessary because of the new account type attributes e.g. GLACCOUNT_TYPE in S/4; secondary cost elements are saved now as well. This is found by the S4HANA_READINESS_2023. The same access is found by the "Usage of Released APIs (Cloudification Repository)" check as well:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_1-1750868218556.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278795iABEA7BB84A2CEA10/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_1-1750868218556.png" alt="lutzi3_1-1750868218556.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The solution to solve both issues is to check if secondary cost elements are concerned and to follow the recommendation in the finding. In the correction the successor object (DDLS I_GLACCOUNTINCHARTOFACCOUNTS) should be used directly:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_2-1750868251695.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278796iC26AC3CAF29D6544/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_2-1750868251695.png" alt="lutzi3_2-1750868251695.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This combination approach makes a part of the own developments "cloud ready" and "S/4HANA ready" at the same time without a big additional effort. And anyway, it is better for upgrade stability to use officially released objects!&lt;/P&gt;&lt;P&gt;Here are 3 possible approaches to achieve this:&lt;/P&gt;&lt;H2 id="toc-hId-1733313264"&gt;Approach 1: Out of the box: Combined Check&lt;/H2&gt;&lt;P&gt;Create a Z ATC Check variant and select the checks from S4HANA_READINESS* and the check "Usage of Released APIs (Cloudification Repository)" . The easiest would be to copy S4HANA_READINESS* and then to select in the maintenance of the check variants (via transaction /nSCI):&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_0-1750869196948.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278802i1DD4B336CBE0FBB5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="lutzi3_0-1750869196948.png" alt="lutzi3_0-1750869196948.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Once you run the check you will see the result as in this example:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_1-1750869196955.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278801iD2CC420733DC8702/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_1-1750869196955.png" alt="lutzi3_1-1750869196955.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The findings from the combined check contain already all needed information but there are two shortcomings: the list contains many irrelevant entries; not all check categories (only when the successor is defined) nor all findings are relevant in the context of S/4HANA custom code adoption (e.g. Successor I_COUNTRY for T005 table doesn’t solve a Custom Code Migration issue).&lt;/P&gt;&lt;H2 id="toc-hId-1536799759"&gt;Approach 2: Add information from Cloudification Repo manually&lt;/H2&gt;&lt;P&gt;Instead of a combined check variant the successor information could be added via Excel / VLOOKUP (SVERWEIS in German) as well using these steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Run the standard ATC check for Custom Code Analysis (e.g. S4HANA_READINESS_2023)&lt;/LI&gt;&lt;LI&gt;Download the detailed list from ATC to Excel (include in any case the field reference object / Referenzobjekt)&lt;/LI&gt;&lt;LI&gt;Download the cloudification repo from here &lt;A href="https://github.com/SAP/abap-atc-cr-cv-s4hc/blob/main/src/objectReleaseInfoLatest.csv" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/abap-atc-cr-cv-s4hc/blob/main/src/objectReleaseInfoLatest.csv&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Open the data in Excel and copy the sheet to your original excel in a new tab&lt;/LI&gt;&lt;LI&gt;Add a new column to the first tab from ATC data and combine the data via VLOOKUP: find a possible successor objects in the released objects for the reference objects&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;A possible result could look like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_0-1750917331297.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/278960i007475D15532D91F/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_0-1750917331297.png" alt="lutzi3_0-1750917331297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;I added an example excel for convenience reasons to Github here:&amp;nbsp;&lt;A href="https://github.com/Lutzi3/cloud_mig_atc/blob/main/ATC_S4HANA_CLOUDIF_REPO_EXAMPLE.xlsx" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/Lutzi3/cloud_mig_atc/blob/main/ATC_S4HANA_CLOUDIF_REPO_EXAMPLE.xlsx&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Then, when processing the ATC findings, the successor objects from Excel can be used directly in the corrections.&lt;/P&gt;&lt;H2 id="toc-hId-1340286254"&gt;Approach 3: Using a custom enhancement to the SAP ATC S/4HANA: Released objects as additional information&lt;/H2&gt;&lt;P&gt;In order to avoid the manual Excel steps and to have a lean combined list of the relevant findings only there is also the possibility to enhance the "additional information" section via an implicit enhancement or via another copy of the standard check classes in the S/4HANA Custom Code area. If you decide for the enhancement you can use the methode GET_DETAIL_FROM_DATA_BUFFER &amp;nbsp;from the central utility class CL_CI_S4H_COMMON and add the successor object information there.&lt;/P&gt;&lt;P&gt;The result is that if there is the successor object available it will be put to the Additional Information Section of the findings as shows the following &amp;nbsp;example:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lutzi3_0-1751026443405.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279803i0A0D2003AFA8C10C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lutzi3_0-1751026443405.png" alt="lutzi3_0-1751026443405.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;There is an example version on Github for this as well:&amp;nbsp;&lt;A href="https://github.com/Lutzi3/cloud_mig_atc" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/Lutzi3/cloud_mig_atc&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now the existing ATC S4HANA readiness check is enhanced by the new released object information such as that you can directly correct the old ERP object reference and replace it by the latest officially released SAP cloud ready object!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/include-released-successor-objects-from-quot-cloudification-repo-quot-in/ba-p/14136908"/>
    <published>2025-07-17T15:35:03.728000+02:00</published>
  </entry>
</feed>
