<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/NW-ABAP-Gateway-(OData)-blog-posts.xml</id>
  <title>SAP Community - NW ABAP Gateway (OData)</title>
  <updated>2025-08-06T11:11:22.673932+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/NW ABAP Gateway (OData)/pd-p/181161894649260056016734803547327" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>NW ABAP Gateway (OData) blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-course-gw100-sap-gateway-building-odata-services-available-for-sap/ba-p/13623919</id>
    <title>Customer Course GW100 (SAP Gateway – Building OData Services) Available for SAP S/4HANA 2021</title>
    <updated>2024-02-29T15:33:56.276000+01:00</updated>
    <author>
      <name>StefanFell</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4321</uri>
    </author>
    <content>&lt;P&gt;Now that I finished the course development of the GW100 (again), I thought it is time to summarize all the new and updated topics in a central place. I decided that a blog post here would be a good way to share this to fellow ABAP developers. So welcome to my first blog post about the customer training &lt;A href="https://training.sap.com/course/GW100" target="_blank" rel="noopener noreferrer"&gt;GW100 (SAP Gateway – Building OData Services)&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;If you are more interested in a digital learning for SAP Gateway, please read my blog post:&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/blogs/blogworkflowpage/blog-id/technology-blog-sap/article-id/170554" target="_blank"&gt;SAP Learning Journey – Building OData Services with SAP Gateway&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-987942476"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Starting in 2014, this is now the seventh incarnation of how to develop OData services with SAP Gateway. The course shows all parts of SAP Gateway, which are available since SAP NetWeaver Application Server 7.0 (SAP Gateway 2.0), as well as parts added up to SAP S/4HANA 2021. The whole bandwidth of SAP Gateway covering all releases is shown.&lt;/P&gt;&lt;P&gt;The units in the current version are the following:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP Gateway Overview&lt;/LI&gt;&lt;LI&gt;OData Overview&lt;/LI&gt;&lt;LI&gt;SAP Gateway Service Implementation&lt;/LI&gt;&lt;LI&gt;SAP Gateway Service Generation&lt;/LI&gt;&lt;LI&gt;SAP Gateway Service Redefinition&lt;/LI&gt;&lt;LI&gt;SAP Gateway and CDS Views&lt;/LI&gt;&lt;LI&gt;SAP Gateway Hub Functionalities&lt;/LI&gt;&lt;LI&gt;Advanced OData Options&lt;/LI&gt;&lt;LI&gt;SAP Gateway Security&lt;/LI&gt;&lt;LI&gt;Further Information&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If customers are interested, they can order a &lt;A href="https://training.sap.com/content/CSTEN" target="_blank" rel="noopener noreferrer"&gt;customer specific&lt;/A&gt; version of the course including only those topics suitable for their release or purpose.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-791428971"&gt;&lt;STRONG&gt;System Landscape&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Let’s start with the system release: SAP S/4HANA 2021 FPS02. Our system landscape – we call it universal target – is used in many technology courses and offers full access for the participants from the SAP Fiori launchpad (FLP) in the browser down to SAP HANA on the SUSE Linux Enterprise server (SLES). Everything is set up following the newest guidelines of SAP so that it can really act as a template for customers.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="GW100 System Landscape (Screenshot from System Setup Guide)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73544i8B80F0D078B6E608/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie1.PNG" alt="GW100 System Landscape (Screenshot from System Setup Guide)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;GW100 System Landscape (Screenshot from System Setup Guide)&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In addition, we offer an instance of the SAP Business Application Studio (BAS) to show the consumption of OData services. If you want to know more about this topic, check out our courses for &lt;A href="https://training.sap.com/trainingpath/Database+&amp;amp;+Technology-Development-SAP+Fiori" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori development&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-594915466"&gt;&lt;STRONG&gt;OData&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The unit explaining the OData foundation was greatly increased to cover all aspects of the protocol including OData V4. Many more slides were added to visualize the structure of an OData service. Here is an example about function and action imports:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Function and Action Imports (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73440i81E17C1DCC254BEC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie2.PNG" alt="Function and Action Imports (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Function and Action Imports (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;SPAN&gt;A new section covering &lt;EM&gt;?sap-ds-debug=true&lt;/EM&gt; was added to explain the features of this debugging query option. Although it was always part of exercises, there was only one slide showing it. Now the following one is just the first one:&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="SAP Debugging Query Option for Any Browser (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73441i509322C564BF3CCF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie3.PNG" alt="SAP Debugging Query Option for Any Browser (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;SAP Debugging Query Option for Any Browser (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;SPAN&gt;The lesson about performing OData requests was enhanced in its visualization and some additional slides were added like this one for batch processing:&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="OData Option $batch (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73442i3C09DDD6904F933A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie4.PNG" alt="OData Option $batch (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;OData Option $batch (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-398401961"&gt;&lt;STRONG&gt;Implementation&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The structure of the units covering code-based implementation got refined to better fit the current state of development. This includes more graphical explanations of how the source code is structured in the system like this one:&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Data Provider Base Class – Source Code (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73443iF2E7178F95D50793/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie5.PNG" alt="Data Provider Base Class – Source Code (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Data Provider Base Class – Source Code (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;SPAN&gt;Other slides were enhanced using semantical colors consistently throughout the material. In this example, you see blue used for ABAP code, gold for HTTP requests, and green for (successful) HTTP responses:&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Create Operation Essentials (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73447i67DE01F6A0AE60F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie6.PNG" alt="Create Operation Essentials (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Create Operation Essentials (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;SPAN&gt;But of course, at the end of the day, it is all about source code. There are now more code snippets outside of exercises and the code is explained in more detail on slides:&lt;/SPAN&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Implement Paging (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73543i7BC97F497B451431/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie7.PNG" alt="Implement Paging (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Implement Paging (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-201888456"&gt;&lt;STRONG&gt;CDS Views&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The evolution of CDS views was driving SAP Gateway from the beginning. That is why there is an own unit keeping track of all possibilities to generate SAP Gateway services based on CDS views:&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="OData Service Development with CDS – Comparison (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73450i9FF4AF7B8252A3BE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie8.PNG" alt="OData Service Development with CDS – Comparison (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;OData Service Development with CDS – Comparison (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;The decision, which generator is the right one for your project, does not only depend on the release you are using. Especially in a brown field approach, the data source reference in the SAP Gateway Service Builder (SEGW) is still a viable option for reusing existing source code in SAP Gateway services based on CDS views:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="How to Reference a Data Source (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73455iEDC6674ABF666C3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie9.PNG" alt="How to Reference a Data Source (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;How to Reference a Data Source (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;The newest generators are Business Services, which are part of the ABAP RESTful Application Programming Model (RAP). They are recommended by SAP as soon as they are available in your system and include the generation of OData V4 services:&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="How to Create a Service Definition and Binding (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/73453i27475A6F26C77DF8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Folie10.PNG" alt="How to Create a Service Definition and Binding (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;How to Create a Service Definition and Binding (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-5374951"&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;If you have read so far, it seems that you are really thinking about attending the course. Don’t hesitate and check out the physical and virtual events we offer:&lt;/P&gt;&lt;P&gt;&lt;A href="https://training.sap.com/course/GW100" target="_blank" rel="noopener noreferrer"&gt;https://training.sap.com/course/GW100&lt;/A&gt;&lt;/P&gt;&lt;P&gt;If you are more interested in a digital learning, please visit &lt;A href="https://learning.sap.com" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com&lt;/A&gt;. Some parts of the GW100 are already available free-of-charge:&lt;/P&gt;&lt;P&gt;&lt;A href="https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For any other questions around the offerings of SAP Learning Services, please jump to our community page and get in contact with us:&lt;/P&gt;&lt;P&gt;&lt;A href="https://pages.community.sap.com/topics/training-certification" target="_blank" rel="noopener noreferrer"&gt;https://pages.community.sap.com/topics/training-certification&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I hope even if you won’t attend the GW100 in any kind, you found some useful information around SAP Gateway in this blog post.&lt;/P&gt;&lt;P&gt;Happy learning&lt;BR /&gt;Stefan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-course-gw100-sap-gateway-building-odata-services-available-for-sap/ba-p/13623919"/>
    <published>2024-02-29T15:33:56.276000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/financial-management-blog-posts-by-members/inbound-interface-to-receive-the-uuid-pdf-and-xml-details-through-odata/ba-p/13637696</id>
    <title>Inbound Interface to receive the UUID, PDF and XML details through ODATA - MEXICO</title>
    <updated>2024-03-15T11:00:09.958000+01:00</updated>
    <author>
      <name>d4449</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/144905</uri>
    </author>
    <content>&lt;H2 id="toc-hId-988982523"&gt;Requirement&lt;/H2&gt;&lt;P&gt;In Mexico, it is necessary that all companies receive tax authority validated XML and PDF files that contain the details of the payment made to vendors.&lt;/P&gt;&lt;P&gt;Its mandatory to extract the UUID number from the file that is received from the vendors and save it in a way that makes it easily accessible, in S4 it would be easier to store it in a custom table.&lt;/P&gt;&lt;P&gt;The importance of this interface is to store UUID in S4 system in order to facilitate users identify which invoices were payed to which vendors as well as reconciliation between EDICOM Portal and S4 system. The risk of not having this interface, is that files (PDF and XML) and UUID data will only be stored in EDICOM Portal and reconciliation to corresponding payments would be time consuming for users.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-792469018"&gt;Technical Requirement&lt;/H2&gt;&lt;P&gt;Interaction of SAP with EDICOM portal where SAP CPI is the middleware which sends the XML, PDF to S4. The technical requirement was to create a ODATA which can receive XML and PDF, also should extract UUID details from XML structure and update it to the respective document.&lt;/P&gt;&lt;P&gt;Simple flow chart:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_0-1710394374539.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80376i2B821A1012A14C62/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_0-1710394374539.jpeg" alt="d4449_0-1710394374539.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Detailed Flow chart:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-595955513"&gt;Technical Solution&lt;/H2&gt;&lt;P&gt;To receive and extract the details from XML file, ODATA interface is developed and the received XML and PDF files are attached to the respective FI document.&lt;/P&gt;&lt;P&gt;XML and PDF files are sent in base64 encoded format from SAP CPI then in S4 we make use of various function modules to convert it and make the attachment.&lt;/P&gt;&lt;P&gt;Created ODATA service in tcode SEGW - &lt;STRONG&gt;ZFI_PAYMENT_COMPLEMENT_002&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_1-1710394472271.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80377i0BAB77F38F83D1E0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_1-1710394472271.png" alt="d4449_1-1710394472271.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Data model the custom table ZFI_IF020_PAYCOM is used to give ODATA the reference structure. The last two fields ZPDF &amp;amp; ZXML are created in RAWSTRING format to store the XML and PDF files.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_2-1710394501348.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80378iF0286B4B47588873/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_2-1710394501348.png" alt="d4449_2-1710394501348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_3-1710394536606.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80379iCEB53401EB9F2ACF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_3-1710394536606.png" alt="d4449_3-1710394536606.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Regenerate the Runtime Artifact ZCL_ZFI_PAYMENT_COM_01_DPC_EXT&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_4-1710394558273.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80380iD064CA6CA87E74F5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_4-1710394558273.png" alt="d4449_4-1710394558273.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This gives us the class where we can write the required logic, here we have redefined the method PAY_COMPSET_CREATE_ENTITY – holds the logic to validate the inputs received from SAP CPI and the logic to add PDF and XML to the FI document.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_5-1710394576668.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80381i72DD2D5FCE09D59C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_5-1710394576668.png" alt="d4449_5-1710394576668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;FI_DOCUMENT_CHANGE FM is used to update UUID to the respecting FI document.&lt;/P&gt;&lt;P&gt;The above FM is passed with the required importing parameters.&lt;/P&gt;&lt;P&gt;PDF Attachment:&lt;/P&gt;&lt;P&gt;PDF file is sent in Base64 format from CPI to S4.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SCMS_XSTRING_TO_BINARY – using this FM the received base64 format is converted to binary&lt;/LI&gt;&lt;LI&gt;ARCHIV_CREATE_TABLE – using this FM the converted binary file is attached to the FI document&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;XML Attachment:&lt;/P&gt;&lt;P&gt;XML is also sent in Base64 format from CPI to S4.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SCMS_XSTRING_TO_BINARY – using this FM the received base64 format is converted to binary&lt;/LI&gt;&lt;LI&gt;SO_CONVERT_CONTENTS_BIN – to get the binary file in tab format&lt;/LI&gt;&lt;LI&gt;SO_FOLDER_ROOT_ID_GET – this FM is used to fetch the folder ID&lt;/LI&gt;&lt;LI&gt;SO_OBJECT_INSERT – used to insert the converted XML file&lt;/LI&gt;&lt;LI&gt;BINARY_RELATION_CREATE_COMMIT – create relation between attachment and the document (Reference code is attached)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If there is any error in the attachment the file is sent to AL11.&lt;/P&gt;&lt;P&gt;All the received inputs including XML and PDF are saved in a custom table.&lt;/P&gt;&lt;P&gt;Report:&lt;/P&gt;&lt;P&gt;Tcode - ZFI_PAYCOMP_MONITOR&lt;/P&gt;&lt;P&gt;A report is created to display the details received using custom table in which the entries made through ODATA Service and displayed in ALV format.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_6-1710394659675.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80383iDC2EEEF48F9B63B7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_6-1710394659675.png" alt="d4449_6-1710394659675.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;User can view the error details in description and also can select and reprocess the particular file after updating the missed details.&lt;/P&gt;&lt;P&gt;Created and activated the service &lt;STRONG&gt;ZFI_PAYMENT_COMPLEMENT_002_SRV&lt;/STRONG&gt; in following tcode /n/iwfnd/maint_service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="d4449_7-1710394683788.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/80384i8AF112BF888E7F49/image-size/medium?v=v2&amp;amp;px=400" role="button" title="d4449_7-1710394683788.png" alt="d4449_7-1710394683788.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The ICF Node should be in active status as shown in the screenshot.&lt;BR /&gt;&lt;BR /&gt;Hope this helps someone!&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/OData/pd-p/551580658536717501828021060147962" class="lia-product-mention" data-product="323-1"&gt;OData&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/NW+ABAP+Gateway+%252528OData%252529/pd-p/181161894649260056016734803547327" class="lia-product-mention" data-product="1007-1"&gt;NW ABAP Gateway (OData)&lt;/a&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/financial-management-blog-posts-by-members/inbound-interface-to-receive-the-uuid-pdf-and-xml-details-through-odata/ba-p/13637696"/>
    <published>2024-03-15T11:00:09.958000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/creation-of-odata-service-with-implementation-of-crud-methods-and-deep/ba-p/13685666</id>
    <title>Creation of OData service with implementation of CRUD methods and `deep insert` method from scratch</title>
    <updated>2024-05-03T08:33:54.245000+02:00</updated>
    <author>
      <name>lukcad</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/888780</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Overview&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-- Goal: &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using SAP instance with SAP NW 7.40 or higher without RAP and without BOPF be able to create OData service upon business data model with these specific requirements:&lt;/P&gt;&lt;P&gt;- inserting of main business record support deep inserting (we save main record of main entity and all enclosed records in child entity)&lt;/P&gt;&lt;P&gt;- all CRUD methods of modification records for entities should be supported .&lt;/P&gt;&lt;P&gt;- code after regenerating OData service after adding of new changes is under control of developer via implemented overridden methods.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-- Considered model:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_0-1714379019619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103015i554C30430D128FF4/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_0-1714379019619.png" alt="lukcad_0-1714379019619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-- Main steps of implementation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using Eclipse + ADT you will go through this main steps and with all necessary code:&lt;/P&gt;&lt;P&gt;1-- Prepare data model with data&lt;/P&gt;&lt;P&gt;2-- Create project for OData service&lt;/P&gt;&lt;P&gt;3-- Add data model and generate service&lt;/P&gt;&lt;P&gt;4-- Register service and do initial test&lt;/P&gt;&lt;P&gt;5-- Implementation of `deep insert` MODEL via override&lt;/P&gt;&lt;P&gt;6-- Implementation of entity modification methods&lt;/P&gt;&lt;P&gt;7-- Implementation of OData CRUD methods using override&lt;/P&gt;&lt;P&gt;8-- Testing CRUD methods by SAP Gateway Client&lt;/P&gt;&lt;P&gt;9-- Verification of achieved code&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;-- As result of you will have:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;-- Transportable package ZMLODATA which includes:&lt;/P&gt;&lt;P&gt;-- Data model with samples of data&lt;/P&gt;&lt;P&gt;-- OData service ZML_TRAVELLING_ODT&lt;/P&gt;&lt;P&gt;-- Classes where _EXT implementation decupled from regenerating process of OData service&lt;/P&gt;&lt;P&gt;Package ZMLODATA will contain these files:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_1-1714379019620.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103016iC4AD829F8CA20943/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_1-1714379019620.png" alt="lukcad_1-1714379019620.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Service Project `ZML_TRAVELLING_ODT` will be like this one:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_2-1714379019622.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103017i991F516D7EAAC659/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_2-1714379019622.png" alt="lukcad_2-1714379019622.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process of implementation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1-- Prepare data model with data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1--1-- create package ZMLODATA&lt;/P&gt;&lt;P&gt;1--2-- create data elements in package&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ZMLNAME&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_3-1714379019623.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103020iE2434676C7EDBE35/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_3-1714379019623.png" alt="lukcad_3-1714379019623.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ZMLDATEFROM&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_4-1714379019623.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103018i6D1C52D4440A41A6/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_4-1714379019623.png" alt="lukcad_4-1714379019623.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ZMLDATETO&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_5-1714379019624.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103019i2853B948EE23C7C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_5-1714379019624.png" alt="lukcad_5-1714379019624.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;1--3-- create table ZML_TRAVEL&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using package ZMLODATA you create database table in Eclipse ADT by opening `New ABAP Repository Object` for `Database Table`&amp;nbsp; and using this code definition:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'ZML_TRAVEL'
@AbapCatalog.enhancementCategory : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table zml_travel {
  key client    : abap.clnt not null;
  key travel_id : sysuuid_x16 not null;
  name          : zmlname;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;1--4-- create table ZML_BOOKING&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You add new Database Table `ZML_BOOKING` by this code into package ZMLODATA:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label : 'ZML_BOOKING'
@AbapCatalog.enhancementCategory : #NOT_EXTENSIBLE
@AbapCatalog.tableCategory : #TRANSPARENT
@AbapCatalog.deliveryClass : #A
@AbapCatalog.dataMaintenance : #ALLOWED
define table zml_booking {
  key client     : abap.clnt not null;
  @AbapCatalog.foreignKey.screenCheck : false
  key travel_id  : sysuuid_x16 not null
    with foreign key [0..*,1] zml_travel
      where travel_id = zml_booking.travel_id;
  key booking_id : sysuuid_x16 not null;
  hotel          : zmlname;
  dayfrom        : zmldatefrom;
  dayto          : zmldateto;

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;1--5-- Create Class `zml_gen_data_travels`&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In package ZMLODATA you add new ABAP class&amp;nbsp;&lt;STRONG&gt;`zml_gen_data_travels`&lt;/STRONG&gt; by this code:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zml_gen_data_travels DEFINITION
  PUBLIC
  FINAL
  CREATE PUBLIC .

  PUBLIC SECTION.

    INTERFACES if_oo_adt_classrun .
  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zml_gen_data_travels IMPLEMENTATION.
  METHOD if_oo_adt_classrun~main.

    DATA it_travel TYPE TABLE OF zml_travel.
    DATA it_booking TYPE TABLE OF zml_booking.

    DATA lv_long_time_stamp TYPE timestampl.
    GET TIME STAMP FIELD lv_long_time_stamp.
    DATA: l_uuid_x16 TYPE sysuuid_x16.
    DATA: system_uuid TYPE REF TO if_system_uuid.
    DATA: oref        TYPE REF TO cx_uuid_error.
    system_uuid = cl_uuid_factory=&amp;gt;create_system_uuid( ).

    TRY.

        it_travel =  VALUE #(
          ( client = sy-mandt travel_id = system_uuid-&amp;gt;create_uuid_x16( ) name = 'Travel Minsk - Dubai' )
          ( client = sy-mandt travel_id = system_uuid-&amp;gt;create_uuid_x16( ) name = 'Travel Minsk - Moscow' )
          ( client = sy-mandt travel_id = system_uuid-&amp;gt;create_uuid_x16( ) name = 'Travel Minsk - Warsaw' )
          ( client = sy-mandt travel_id = system_uuid-&amp;gt;create_uuid_x16( ) name = 'Travel Minsk - Dushanbe' )
          ( client = sy-mandt travel_id = system_uuid-&amp;gt;create_uuid_x16( ) name = 'Travel Minsk - Batumi' )

        ).

        it_booking = VALUE #(
            ( client = sy-mandt booking_id = system_uuid-&amp;gt;create_uuid_x16( ) travel_id = it_travel[ name = 'Travel Minsk - Dubai' ]-travel_id dayfrom = '20240101'  dayto = '20240104' hotel = 'Amirates Dubai' )
            ( client = sy-mandt booking_id = system_uuid-&amp;gt;create_uuid_x16( ) travel_id = it_travel[ name = 'Travel Minsk - Moscow' ]-travel_id dayfrom = '20240105'  dayto = '20240107' hotel = 'Marriot' )
            ( client = sy-mandt booking_id = system_uuid-&amp;gt;create_uuid_x16( ) travel_id = it_travel[ name = 'Travel Minsk - Warsaw' ]-travel_id dayfrom = '20240108'  dayto = '20240114' hotel = 'Outstanding WSW' )
            ( client = sy-mandt booking_id = system_uuid-&amp;gt;create_uuid_x16( ) travel_id = it_travel[ name = 'Travel Minsk - Dushanbe' ]-travel_id dayfrom = '20240115'  dayto = '20240124' hotel = 'Marriot Hayat' )
            ( client = sy-mandt booking_id = system_uuid-&amp;gt;create_uuid_x16( ) travel_id = it_travel[ name = 'Travel Minsk - Batumi' ]-travel_id dayfrom = '20240125'  dayto = '20240130' hotel = 'Amber Sea' )
        ).

        out-&amp;gt;write( it_travel ).
        out-&amp;gt;write( it_booking ).

*       delete existing entries in the database table
        DELETE FROM zml_booking.
        DELETE FROM zml_travel.


*       insert the new table entries
        INSERT zml_travel FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1442952"&gt;@IT&lt;/a&gt;_travel.
        INSERT zml_booking FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1442952"&gt;@IT&lt;/a&gt;_booking.

        out-&amp;gt;write( |Demo data generated for tables...| ).

      CATCH cx_uuid_error.
        "handle exception
    ENDTRY.



  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;1--6-- Run this class by pressing F9&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You execute previously created class to add initial records into your data model by pressing F9.&lt;/P&gt;&lt;P&gt;5 records with travels and 5 records connected to each travel for bookings will be added after executing.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_6-1714379019625.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103023iE0F7B036AEF8ECB4/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_6-1714379019625.png" alt="lukcad_6-1714379019625.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1--7-- at this moment you should have package with your dictionary and class&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_7-1714379019627.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103022i528506E8D85AE55C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="lukcad_7-1714379019627.png" alt="lukcad_7-1714379019627.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1--8-- you open data tables by preview of data&amp;nbsp; to find that test records exist:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_8-1714379019628.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103021i011646A5AE2F4111/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_8-1714379019628.png" alt="lukcad_8-1714379019628.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_9-1714379019629.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103025i980159BA3FDABE5F/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_9-1714379019629.png" alt="lukcad_9-1714379019629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2-- create project for OData service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You press Alt-F8 and enter and run transaction:&amp;nbsp;&lt;STRONG&gt;SEGW&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In opened form you press icon of "Create project"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_10-1714379019629.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103026iA3C1577DC7BEE318/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_10-1714379019629.png" alt="lukcad_10-1714379019629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You fill in this information on form of creating project:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Project&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_TRAVELLING_ODT&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Description&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;OData for travelling data&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Package&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZMLODATA&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;You get a project `ZML_TRAVELLING_ODT` which has initial skeleton without connectivity to your model at this moment:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_11-1714379019630.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103024iBA8FC188F2D000BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_11-1714379019630.png" alt="lukcad_11-1714379019630.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3-- Add data model and generate service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using project `ZML_TRAVELLING_ODT` you do the next steps to import your entitles of model one by one, make necessary association between entities and generate project.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3--1-- Add Entity Type for ZML_TRAVEL table&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Change project `ZML_TRAVELLING_ODT` to Edit mode.&lt;/P&gt;&lt;P&gt;Using context menu of&lt;STRONG&gt; Data model&lt;/STRONG&gt; node you have to choose: Import -&amp;gt; DDIC Stucture&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_12-1714379019630.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103027i328AE5AE05C57F8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_12-1714379019630.png" alt="lukcad_12-1714379019630.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On first step of import wizard you provide the next information:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Name of type which we want create:&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_ITRAVEL&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ABAP Structure (existing our table):&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_TRAVEL&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_13-1714379019631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103028iDA0F53394ED06AAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_13-1714379019631.png" alt="lukcad_13-1714379019631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On second step mark all fields:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_14-1714379019631.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103029i4FADEC10D9E6FEE0/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_14-1714379019631.png" alt="lukcad_14-1714379019631.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On third step point the key of your records as TRAVEL_ID&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_15-1714379019632.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103032i389438640E4F598D/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_15-1714379019632.png" alt="lukcad_15-1714379019632.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In imported properties provide correctly operations:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_16-1714379019632.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103030i3CEB819484666FE8/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_16-1714379019632.png" alt="lukcad_16-1714379019632.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;if you open Entity Sets you should be able to find there `ZML_ITRAVELSet`&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_17-1714379019633.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103031i5966F73DBCEC1944/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_17-1714379019633.png" alt="lukcad_17-1714379019633.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3--2-- Add Entity Type for ZML_BOOKING table&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Again, you using context menu of&lt;STRONG&gt; Data model&lt;/STRONG&gt; node choose Import -&amp;gt; DDIC Structure to open Wizard of importing.&lt;/P&gt;&lt;P&gt;On the first step of import wizard you provide:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Name of type which we want create:&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_IBOOKING&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ABAP Structure (existing our table):&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_BOOKING&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;On second step of wizard you select all fields of entity.&lt;/P&gt;&lt;P&gt;And on the 3d&amp;nbsp; step of wizard you point key id BOOKING_ID :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_18-1714379019634.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103033iECE83CFB16A6964B/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_18-1714379019634.png" alt="lukcad_18-1714379019634.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3--3-- Add association between ZML_ITRAVEL and ZML_IBOOKING&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using context menu on &lt;STRONG&gt;Association node&lt;/STRONG&gt; you choose `Create` to start the wizard of creating association.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_19-1714379019635.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103034i990537FBA61CF5F4/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_19-1714379019635.png" alt="lukcad_19-1714379019635.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should provide these parameters on Step 1 of association wizard:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Association Name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_TRAVEL_TO_BOOKING&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Principal Entity Type Name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_ITRAVEL&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Principal Cardinality&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;1&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Principal Navigation Property&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;TO_BOOKING&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Dependent Entity Type Name&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;ZML_IBOOKING&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Dependent Cardinality&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;0..n&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Dependent Navigation Property&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;On Step 2 of wizard association you point principal key TravelId for `Dependent Property`:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_20-1714379019635.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103035i2978F2E551CD271F/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_20-1714379019635.png" alt="lukcad_20-1714379019635.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On Step 3 of wizard association you press Finish&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_21-1714379019636.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103036i6C3CD3D047E2E333/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_21-1714379019636.png" alt="lukcad_21-1714379019636.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can check association in node Associations:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_22-1714379019636.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103038i33407E849CF27326/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_22-1714379019636.png" alt="lukcad_22-1714379019636.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Also, you can check as `Navigation Property` with name `TO_BOOKING` if you expand &lt;STRONG&gt;Entity Types&lt;/STRONG&gt; nodes in Data Model of project. The existence of this navigation property after applying association and the name `TO_BOOKING` we will use for `expand` functionality as well as for `deep insert` functionality&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_23-1714379019637.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103037iA60FE5810F8554AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_23-1714379019637.png" alt="lukcad_23-1714379019637.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3--4-- Generate Runtime Objects of OData service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You press icon `Generate Runtime Objects`&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_24-1714379019638.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103039i9595DEB3592E2F72/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_24-1714379019638.png" alt="lukcad_24-1714379019638.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As a result, 4 classes with prefix `&lt;STRONG&gt;ZCL_&lt;/STRONG&gt;` will be generated in your package. Currently, all methods to serve ZML_IBTRAVELSET and ZML_IBOOKINGSET entity types will be pre-filled in with pattern of raising exception to generate message that method is not implemented yet.&amp;nbsp; Later on, you will do implementation of each method in classes with `&lt;STRONG&gt;_EXT&lt;/STRONG&gt;` suffix by overriding methods.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_25-1714379019638.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103041iF7BC923D87585097/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_25-1714379019638.png" alt="lukcad_25-1714379019638.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4-- Register service and do initial test&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You should register service into SAP gateway and verify that service is maintained by initial test. It is better to do now, before you start implementation of methods to let you be ensured that service engin is generated correctly and you were able to maintain it correctly into SAP Gateway.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4--1-- Register service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In project open node `Service maintenance` and choose accessible SAP Gateway and press button `+Register` and then on prefilled form choose package ZMLODATA and save registration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_26-1714379019639.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103040i9C2BC56C78DAC13C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_26-1714379019639.png" alt="lukcad_26-1714379019639.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After registration you will be re-directed to Service Maintenance list ( also you can use transaction to be there in any time: /IWFND/MAINT_SERVICE ) where you can choose your service by technical name 1ZML_TRAVELLING_ODT`.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4--2-- Initial test&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once your service is registered you can test it by `SAP Gateway Client` through opening Maintenance list and then after choosing your service using ICF Nodes panel do pressing on `SAP Gateway Client` or you can directly start testing client form Service Maintenance of chosen gateway by pressing button `SAP Gateway Client` on form of Service registration.&lt;/P&gt;&lt;P&gt;Press `SAP Gateway Client` and and execute proposed URI and check that you have HTTP response with status 200 OK&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_27-1714379019640.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103044i25445BED109D63EC/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_27-1714379019640.png" alt="lukcad_27-1714379019640.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;change URI to ask provide operations with format JSON (just change format=xml to &lt;STRONG&gt;format=json&lt;/STRONG&gt;)&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/opu/odata/sap/ZML_TRAVELLING_ODT_SRV/?$format=json&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;and execute to verify that you can get JSON response with status &lt;STRONG&gt;200 Ok&lt;/STRONG&gt; :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_28-1714379019642.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103042iE1AAD493C68B0F45/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_28-1714379019642.png" alt="lukcad_28-1714379019642.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;So currently OData which you created has information about your entities but if you try to use those entities (datasets) you will have error, because entities are not still connected to your data in databases.&lt;/P&gt;&lt;P&gt;if you will try to run this request:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/opu/odata/sap/ZML_TRAVELLING_ODT_SRV/ZML_ITRAVELSet?$format=json&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;instead of data in response you will find &lt;STRONG&gt;error 501&lt;/STRONG&gt; and message "&lt;STRONG&gt;Method 'ZML_ITRAVELSET_GET_ENTITYSET' not implemented in data provider class&lt;/STRONG&gt;"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_29-1714379019643.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103043i1CF80F9769FB3C99/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_29-1714379019643.png" alt="lukcad_29-1714379019643.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In next steps (5,6,7) you will implement all necessary methods.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5-- Implementation of `deep insert` MODEL via override&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As developer, you should modify class which is dedicated for extending object model of implementation: `&lt;STRONG&gt;zcl_zml_travelling_odt_mpc_ext`&lt;/STRONG&gt; where name of class is proposed during generating service and the name of class for extending model by default is a combination:&amp;nbsp; `ZCL`_ + &amp;lt;name_of_service&amp;gt; + `_MPC_EXT`&lt;/P&gt;&lt;P&gt;you will add manually the new deep structure there and do override of existing method `&lt;STRONG&gt;define&lt;/STRONG&gt;` to be able map structure to certain entity.&lt;/P&gt;&lt;P&gt;This implementation is important to enable using structure for `&lt;STRONG&gt;deep insert&lt;/STRONG&gt;` which will be needing to write correctly code for method CREATE of entity ZML_ITRAVELSet,.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5--1-- Add structure for `deep insert`&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Open class for extending `&lt;STRONG&gt;zcl_zml_travelling_odt_mpc_ext`&lt;/STRONG&gt; which is here:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_30-1714379019643.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103046iF7918FD1097BE8FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_30-1714379019643.png" alt="lukcad_30-1714379019643.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should add new type for structure of deep insert which is based on your types of data sets.&lt;/P&gt;&lt;P&gt;Goal to create hierarchy of types:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_50-1714381260523.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103085iBD9EDE6F12480701/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_50-1714381260523.png" alt="lukcad_50-1714381260523.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In public section of extension class &lt;STRONG&gt;zcl_zml_travelling_odt_mpc_ext&lt;/STRONG&gt; you should add new structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    TYPES: BEGIN OF ty_s_trv_book.
             INCLUDE TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    TYPES:
             to_booking TYPE STANDARD TABLE OF zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking WITH DEFAULT KEY,
           END OF ty_s_trv_book.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Name of structure for this particular example is `&lt;STRONG&gt;ty_s_trv_book&lt;/STRONG&gt;`.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5--2-- Override method `define`&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Open in editor class &lt;STRONG&gt;zcl_zml_travelling_odt_mpc_ext&lt;/STRONG&gt; and press Ctrl + space and choose &lt;STRONG&gt;Override `define`&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;In overridden method is main aim is to map entity type of service to new structure of `deep insert`.&amp;nbsp;Code of overridden method `&lt;STRONG&gt;define&lt;/STRONG&gt;`:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD define.

    DATA lo_entity_type TYPE REF TO /iwbep/if_mgw_odata_entity_typ.

    super-&amp;gt;define( ).

    lo_entity_type = model-&amp;gt;get_entity_type( iv_entity_name = 'ZML_ITRAVEL' ).
    lo_entity_type-&amp;gt;bind_structure( iv_structure_name = 'zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book' ).

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5--3-- Full code of extension method after preparation of `deep insert`:&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_zml_travelling_odt_mpc_ext DEFINITION
  PUBLIC
  INHERITING FROM zcl_zml_travelling_odt_mpc
  CREATE PUBLIC .

  PUBLIC SECTION.
    TYPES: BEGIN OF ty_s_trv_book.
             INCLUDE TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    TYPES:
             to_booking TYPE STANDARD TABLE OF zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking WITH DEFAULT KEY,
           END OF ty_s_trv_book.

    METHODS define REDEFINITION.



  PROTECTED SECTION.
  PRIVATE SECTION.
ENDCLASS.



CLASS zcl_zml_travelling_odt_mpc_ext IMPLEMENTATION.

  METHOD define.

    DATA lo_entity_type TYPE REF TO /iwbep/if_mgw_odata_entity_typ.

    super-&amp;gt;define( ).

    lo_entity_type = model-&amp;gt;get_entity_type( iv_entity_name = 'ZML_ITRAVEL' ).
    lo_entity_type-&amp;gt;bind_structure( iv_structure_name = 'zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book' ).

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;6-- Implementation of entity modification methods&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As developer, you should modify class which is dedicated for extending methods to work with data: `&lt;STRONG&gt;zcl_zml_travelling_odt_dpc_ext`&lt;/STRONG&gt; where name of class is proposed during generating service and the name of class for extending data methods is combination of by default:&amp;nbsp; `ZCL`_ + &amp;lt;name_of_service&amp;gt; + `_DPC_EXT`&lt;/P&gt;&lt;P&gt;Before start extending OData CRUD methods, you add 3 custom methods in this particular case:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6--1-- add custom method `zml_create_uuid` for getting UUID:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In protected section of class definition add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    METHODS zml_create_uuid
      RETURNING VALUE(es_uuid) TYPE sysuuid_x16.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In implementation area of class add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_create_uuid.
    DATA lv_long_time_stamp TYPE timestampl.
    GET TIME STAMP FIELD lv_long_time_stamp.
    DATA: l_uuid_x16 TYPE sysuuid_x16.
    DATA: system_uuid TYPE REF TO if_system_uuid.
    DATA: oref        TYPE REF TO cx_uuid_error.
    system_uuid = cl_uuid_factory=&amp;gt;create_system_uuid( ).

    TRY.
        es_uuid = system_uuid-&amp;gt;create_uuid_x16( ).
      CATCH cx_uuid_error.
        "handle exception
    ENDTRY.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6--2-- add custom method `zml_modify_travel` for update or insert ZML_TRAVEL entity:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In protected section of class definition add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    METHODS zml_modify_travel
      IMPORTING
                !ls_entity       TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel
      RETURNING VALUE(es_entity) TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;In implementation area of class add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_modify_travel.
    DATA:
      it_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    MOVE-CORRESPONDING ls_entity TO it_entity.
    IF ( it_entity-client IS INITIAL ).
      it_entity-client = sy-mandt.
    ENDIF.
    TRY.
        it_entity-name = ls_entity-name.
        DATA itb_entity TYPE TABLE OF zml_travel.
        IF ( it_entity-travel_id IS INITIAL ).
          it_entity-travel_id = zml_create_uuid( ).
          itb_entity = VALUE #( ( it_entity )  ).
          INSERT zml_travel FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
        ELSE.
          itb_entity = VALUE #( ( it_entity )  ).
          MODIFY zml_travel FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
        ENDIF.
        es_entity = it_entity.
      CATCH cx_uuid_error.
    ENDTRY.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6--3-- add custom method `zml_modify_booking` for update or insert ZML_BOOKING entity:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In protected section of class definition add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    METHODS zml_modify_booking
      IMPORTING
                !ls_entity       TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking
      RETURNING VALUE(es_entity) TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;In implementation area of class add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_modify_booking.
    DATA:
    it_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    MOVE-CORRESPONDING ls_entity TO it_entity.
    IF ( ls_entity-client IS INITIAL ).
      it_entity-client = sy-mandt.
    ENDIF.
    IF ( ls_entity-travel_id IS NOT INITIAL ).
      TRY.
          DATA itb_entity TYPE TABLE OF zml_booking.
          IF ( it_entity-booking_id IS INITIAL ).
            it_entity-booking_id = zml_create_uuid( ).
            itb_entity = VALUE #( ( it_entity )  ).
            INSERT zml_booking FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
          ELSE.
            itb_entity = VALUE #( ( it_entity )  ).
            MODIFY zml_booking FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
          ENDIF.
          es_entity = it_entity.
        CATCH cx_uuid_error.
      ENDTRY.
    ENDIF.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6--4-- add custom method `deep_insert_travel_booking` for insert ZML_TRAVEL and ZML_BOOKING entities:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In protected section of class definition add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;    METHODS deep_insert_travel_booking
      IMPORTING
        !io_data_provider TYPE REF TO /iwbep/if_mgw_entry_provider
      EXPORTING
        !es_s_trv_book    TYPE zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book
      RAISING
        /iwbep/cx_mgw_busi_exception
        /iwbep/cx_mgw_tech_exception .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp; In implementation area of class add:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD deep_insert_travel_booking.
    DATA: ls_travel_booking_data TYPE zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book.
    DATA: ls_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    DATA: ls_childentity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    DATA: ar_childentities TYPE STANDARD TABLE OF zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking WITH DEFAULT KEY.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_travel_booking_data ).
    MOVE-CORRESPONDING ls_travel_booking_data TO ls_entity.
    ls_entity = zml_modify_travel( ls_entity = ls_entity ).
    MOVE-CORRESPONDING ls_travel_booking_data-to_booking TO ar_childentities.
    LOOP AT ar_childentities INTO ls_childentity.
      ls_childentity-travel_id = ls_entity-travel_id.
      ls_childentity = zml_modify_booking( ls_entity = ls_childentity ).
      ar_childentities[ sy-index ] = ls_childentity.
    ENDLOOP.
    MOVE-CORRESPONDING ls_entity TO es_s_trv_book.
    MOVE-CORRESPONDING ar_childentities TO es_s_trv_book-to_booking.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7-- Implementation of OData CRUD methods using override&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7--1-- Start override methods&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Open class `&lt;STRONG&gt;ZCL_ZML_TRAVELLING_ODT_DPC_EXT&lt;/STRONG&gt;` (name of class is proposed during generating for overriding and the name of class is combination of by default:&amp;nbsp; `ZCL`_ + &amp;lt;name_of_service&amp;gt; + `_DPC_EXT`&lt;/P&gt;&lt;P&gt;This is generated class and will be regenerated if you need put changes in model and generate service once again.&lt;/P&gt;&lt;P&gt;SAP has classes for extending generated code, and those classes will not be re-created during generating, so your changes will be applicable after regenerating once again.&lt;/P&gt;&lt;P&gt;You can override any method by using Ctrl + space and choosing method for override from list:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_31-1714379019645.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103047iCAD883F3845C5B31/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_31-1714379019645.png" alt="lukcad_31-1714379019645.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7--2-- override method `/iwbep/if_mgw_appl_srv_runtime~create_deep_entity` manually &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This is single method which we do overriding manually and with definition in PUBLIC SECTION of class.&lt;/P&gt;&lt;P&gt;Add to PUBLIC SECTION this redefinition:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHODS /iwbep/if_mgw_appl_srv_runtime~create_deep_entity REDEFINITION.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp; Add to implementation area:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD /iwbep/if_mgw_appl_srv_runtime~create_deep_entity.
    DATA: ls_travel_booking_data TYPE zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book.
    CLEAR: er_deep_entity.
    TRY.
        CALL METHOD deep_insert_travel_booking
          EXPORTING
            io_data_provider = io_data_provider
          IMPORTING
            es_s_trv_book    = ls_travel_booking_data.
        copy_data_to_ref(
         EXPORTING
           is_data = ls_travel_booking_data
         CHANGING
           cr_data = er_deep_entity ).
      CATCH /iwbep/cx_mgw_busi_exception.
    ENDTRY.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--3-- override method `zml_itravelset_update_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_itravelset_update_entity.
    DATA:
      ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel,
      ls_entity         TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    IF ( ls_entity-travel_id IS INITIAL ).
      io_tech_request_context-&amp;gt;get_converted_keys(  IMPORTING es_key_values = ls_converted_keys ).
      ls_entity-travel_id = ls_converted_keys-travel_id.
    ENDIF.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_travel( ls_entity = ls_entity ).
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--4-- override method `zml_itravelset_delete_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_itravelset_delete_entity.
    DATA: ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    io_tech_request_context-&amp;gt;get_converted_keys( IMPORTING es_key_values = ls_converted_keys ).
    DELETE FROM zml_booking WHERE travel_id = ls_converted_keys-travel_id.
    DELETE FROM zml_travel WHERE travel_id = ls_converted_keys-travel_id.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--5-- override method `zml_itravelset_create_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_itravelset_create_entity.
    DATA: ls_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_travel( ls_entity = ls_entity ).
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--6-- override method `zml_ibookingset_get_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_ibookingset_get_entity.
    DATA:ls_keytab TYPE LINE OF /iwbep/t_mgw_name_value_pair.
    LOOP AT it_key_tab INTO ls_keytab.
    ENDLOOP.
    IF ( ls_keytab-name = 'BookingId' ).
      SELECT SINGLE * FROM zml_booking INTO CORRESPONDING FIELDS OF er_entity WHERE booking_id = ls_keytab-value.
    ELSEIF ( ls_keytab-name = 'TravelId' ).
      SELECT SINGLE * FROM zml_booking INTO CORRESPONDING FIELDS OF er_entity WHERE travel_id = ls_keytab-value.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--7-- override method `zml_itravelset_get_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_itravelset_get_entity.
    DATA:ls_keytab TYPE LINE OF /iwbep/t_mgw_name_value_pair.
    LOOP AT it_key_tab INTO ls_keytab.
    ENDLOOP.
    IF ( ls_keytab-name = 'BookingId' ).
      DATA: lv_travel_id TYPE zml_booking-travel_id.
      SELECT SINGLE travel_id FROM zml_booking INTO lv_travel_id WHERE booking_id = ls_keytab-value.
      IF sy-subrc = 0.
        SELECT SINGLE * FROM zml_travel INTO CORRESPONDING FIELDS OF er_entity WHERE travel_id = lv_travel_id.
      ENDIF.
    ELSEIF ( ls_keytab-name = 'TravelId' ).
      SELECT SINGLE * FROM zml_travel INTO CORRESPONDING FIELDS OF er_entity WHERE travel_id = ls_keytab-value.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--8-- override method `zml_ibookingset_get_entityset`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_ibookingset_get_entityset.
    DATA:ls_keytab TYPE LINE OF /iwbep/t_mgw_name_value_pair.
    LOOP AT it_key_tab INTO ls_keytab.
    ENDLOOP.
    IF ( ls_keytab IS NOT INITIAL ).
      IF ( ls_keytab-name = 'BookingId' ).
        SELECT * FROM zml_booking INTO CORRESPONDING FIELDS OF TABLE et_entityset WHERE booking_id = ls_keytab-value.
      ELSEIF ( ls_keytab-name = 'TravelId' ).
        DATA: lv_travel_id TYPE zml_travel-travel_id.
        SELECT SINGLE travel_id FROM zml_booking INTO lv_travel_id WHERE travel_id = ls_keytab-value.
        SELECT * FROM zml_booking INTO CORRESPONDING FIELDS OF TABLE et_entityset WHERE travel_id = lv_travel_id.
      ENDIF.
    ELSE.
      SELECT * FROM zml_booking INTO CORRESPONDING FIELDS OF TABLE et_entityset.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--9-- override method `zml_itravelset_get_entityset`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD zml_itravelset_get_entityset.

    DATA: lv_source_entity_set_name TYPE /iwbep/mgw_tech_name.

    lv_source_entity_set_name = io_tech_request_context-&amp;gt;get_source_entity_set_name( ).

    IF lv_source_entity_set_name IS INITIAL.

      SELECT * FROM zml_travel INTO CORRESPONDING FIELDS OF TABLE et_entityset.
    ELSE.
      SELECT * FROM zml_travel INTO CORRESPONDING FIELDS OF TABLE et_entityset.
    ENDIF.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--10-- override method `zml_ibookingset_update_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  method zml_ibookingset_update_entity.
    DATA:
      ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking,
      ls_entity         TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    IF ( ls_entity-booking_id IS INITIAL ).
      io_tech_request_context-&amp;gt;get_converted_keys(  IMPORTING es_key_values = ls_converted_keys ).
      ls_entity-booking_id = ls_converted_keys-booking_id.
    ENDIF.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_booking( ls_entity = ls_entity ).
  endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;7--11-- override method `zml_ibookingset_delete_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  method zml_ibookingset_delete_entity.
    DATA: ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    io_tech_request_context-&amp;gt;get_converted_keys( IMPORTING es_key_values = ls_converted_keys ).
    DELETE FROM zml_booking WHERE booking_id = ls_converted_keys-booking_id.
  endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;7--12-- override method `zml_ibookingset_create_entity`&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  method zml_ibookingset_create_entity.
    DATA: ls_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_booking( ls_entity = ls_entity ).
  endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;8-- Testing CRUD methods by SAP Gateway Client&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--1-- GET all records from entities&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--1--1-- GET entities with query parameter $format=json&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Check again by SAP Gateway Client that you can extract data from ZML_ITRAVELSet and for ZML_IBOOKINGSet&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/opu/odata/sap/ZML_TRAVELLING_ODT_SRV/ZML_ITRAVELSet?$format=json&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/opu/odata/sap/ZML_TRAVELLING_ODT_SRV/ZML_IBOOKINGSet?$format=json&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_32-1714379019646.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103045iCA6B82061A9A4A40/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_32-1714379019646.png" alt="lukcad_32-1714379019646.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_33-1714379019647.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103049i50982F6F23320FD0/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_33-1714379019647.png" alt="lukcad_33-1714379019647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--1--2-- GET entities by using header parameters instead of query parameter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You need to be able to add header parameters because in json it is easier to operate and some operation will work only with header (POST, PATCH, PUT and DELETE)&lt;/P&gt;&lt;P&gt;So look at screenshots below how you can add parameters and all rest screenshots will have always header parameters for your understanding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_34-1714379019648.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103050i5CD956B3E9BB1666/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_34-1714379019648.png" alt="lukcad_34-1714379019648.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is right to keep these two parameters added&amp;nbsp; for all operations:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_35-1714379019649.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103048i97FBC061FBD6644C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_35-1714379019649.png" alt="lukcad_35-1714379019649.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;and add this parameter only for PATCH, PUT, and DELETE:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_36-1714379019649.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103051iDDEA37ED95556505/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_36-1714379019649.png" alt="lukcad_36-1714379019649.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--2-- GET specific record from entity&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_37-1714379019650.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103052i36B24FEC513B071E/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_37-1714379019650.png" alt="lukcad_37-1714379019650.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--3-- GET specific record with details using EXPAND&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_38-1714379019651.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103053i13EBC1523650A38C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_38-1714379019651.png" alt="lukcad_38-1714379019651.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--4-- PUT change record to change.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;8--4--1-- PUT for ZML_ITRAVELSet it will be:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_39-1714379019652.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103054i99AE990DBF0E6A9C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_39-1714379019652.png" alt="lukcad_39-1714379019652.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--4--2-- PUT for ZML_IBOOKINGSet it will be:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_40-1714379019653.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103055i2E9BB74257CDEC1B/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_40-1714379019653.png" alt="lukcad_40-1714379019653.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can verify if data were successfully applied by GET:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_41-1714379019654.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103056i9E49A99D6613EFB0/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_41-1714379019654.png" alt="lukcad_41-1714379019654.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--6-- PATCH change only pointed parameters.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--6--1-- PATCH for entity ZML_ITRAVELSet:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_42-1714379019655.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103058iACA5861B4E0A7CEE/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_42-1714379019655.png" alt="lukcad_42-1714379019655.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--6--2-- PATCH for entity ZML_IBOOKINGSet:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_43-1714379019656.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103057iE1C25F3C49E2182C/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_43-1714379019656.png" alt="lukcad_43-1714379019656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can verify if it was changes by GET:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_44-1714379019656.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103059iB4A064835DE1765D/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_44-1714379019656.png" alt="lukcad_44-1714379019656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--8-- DELETE -remove record and all child records&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--8--1-- DELETE for entity ZML_ITRAVELSet&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Your code you can check and in code we delete child records from ZML_IBOOKINGSet and then record from ZML_ITRAVELSet. But it is up to you have this logic. You can allow delete only if childe records were delete previously. Just for simplicity we do deleting as cascade.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;: parameter `if-match` should be removed from header, overwise you will have error.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_45-1714379019657.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103060iA102B6961282F514/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_45-1714379019657.png" alt="lukcad_45-1714379019657.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--8--2-- DELETE for entity ZML_IBOOKINGSet&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Notice&lt;/STRONG&gt;: parameter `if-match` should be removed from header, overwise you will have error.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_46-1714379019658.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103061i675D2A05E6927194/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_46-1714379019658.png" alt="lukcad_46-1714379019658.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--9-- INSERT - add new records&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--9--1-- INSERT for entity set `ZML_ITRAVELSet`&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You have implemented `&lt;STRONG&gt;deep insert&lt;/STRONG&gt;` with deep structure. So you expect to create complex records when you POST entity ZML_ITRAVELSet. It will be one record for ZML_ITRAVELSet and related records (child records) for entity ZML_IBOOKINGSet. Deep structure supposes to use head structure from ZML_ITRAVELSet and child structure with name `TO_BOOK` from ZML_IBOOKINGSet. So you have to prepare request with such payload:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "Client" : "001",
  "Name" : "Travel Minsk - Milano",
  "TO_BOOKING": [
    {
        "Client" : "001",
        "Hotel" : "Ahmat hotel",
        "Dayfrom" : "\/Date(1481760000000)\/",
        "Dayto" : "\/Date(1481760000000)\/"
    },
    {
      "Client" : "001",
      "Hotel" : "Yes hotel",
      "Dayfrom" : "\/Date(1481760000000)\/",
      "Dayto" : "\/Date(1481760000000)\/"
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;you point this URI:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;/sap/opu/odata/SAP/ZML_TRAVELLING_ODT_SRV/ZML_ITRAVELSet&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;and you choose method: &lt;STRONG&gt;POST&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_47-1714379019659.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103062iFE4D42269C5C37B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_47-1714379019659.png" alt="lukcad_47-1714379019659.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8--9--2-- INSERT for entity set `ZML_IBOOKINGSet`&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You should know GUID of your parent record for ZML_ITRAVELSet&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "TravelId" : "0242ac11-0002-1eef-80aa-0315685dd657",
  "Hotel" : "Amirates Dubai stars",
  "Dayfrom" : "\/Date(1704067200000)\/",
  "Dayto" : "\/Date(1704326400000)\/"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_48-1714379019660.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103063i36B631197164C122/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_48-1714379019660.png" alt="lukcad_48-1714379019660.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Response contains payload about what has been added and and which Booking Id was created.&lt;/P&gt;&lt;P&gt;If you wish you can GET particular record by using (guid' value of Booking Id ') :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lukcad_49-1714379019661.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/103064iA6A0F31D5751ACC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="lukcad_49-1714379019661.png" alt="lukcad_49-1714379019661.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;9-- Verification of achieved code&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You can compare your code or if you feel that it is better to apply ready to use project and go through this document you can find this project here on GitHub:&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/lukcad/ZMLODATA.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/lukcad/ZMLODATA.git&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Also, you can verify your overridden methods for class&amp;nbsp;&lt;SPAN&gt;&lt;STRONG&gt;zcl_zml_travelling_odt_dpc_ext&lt;/STRONG&gt; here:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS zcl_zml_travelling_odt_dpc_ext DEFINITION
  PUBLIC
  INHERITING FROM zcl_zml_travelling_odt_dpc
  CREATE PUBLIC .

  PUBLIC SECTION.


    METHODS /iwbep/if_mgw_appl_srv_runtime~create_deep_entity REDEFINITION.

  PROTECTED SECTION.
    methods zml_ibookingset_update_entity redefinition.
    methods zml_ibookingset_delete_entity redefinition.
    methods zml_ibookingset_create_entity redefinition.

    METHODS zml_create_uuid
      RETURNING VALUE(es_uuid) TYPE sysuuid_x16.

    METHODS zml_modify_travel
      IMPORTING
                !ls_entity       TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel
      RETURNING VALUE(es_entity) TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.

    METHODS zml_modify_booking
      IMPORTING
                !ls_entity       TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking
      RETURNING VALUE(es_entity) TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.

    METHODS deep_insert_travel_booking
      IMPORTING
        !io_data_provider TYPE REF TO /iwbep/if_mgw_entry_provider
      EXPORTING
        !es_s_trv_book    TYPE zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book
      RAISING
        /iwbep/cx_mgw_busi_exception
        /iwbep/cx_mgw_tech_exception .


    METHODS zml_itravelset_update_entity REDEFINITION.
    METHODS zml_itravelset_delete_entity REDEFINITION.
    METHODS zml_itravelset_create_entity REDEFINITION.
    METHODS zml_ibookingset_get_entity REDEFINITION.
    METHODS zml_itravelset_get_entity REDEFINITION.
    METHODS zml_ibookingset_get_entityset REDEFINITION.
    METHODS zml_itravelset_get_entityset REDEFINITION.

  PRIVATE SECTION.


ENDCLASS.



CLASS zcl_zml_travelling_odt_dpc_ext IMPLEMENTATION.

  METHOD zml_itravelset_get_entityset.

    DATA: lv_source_entity_set_name TYPE /iwbep/mgw_tech_name.

    lv_source_entity_set_name = io_tech_request_context-&amp;gt;get_source_entity_set_name( ).

    IF lv_source_entity_set_name IS INITIAL.

      SELECT * FROM zml_travel INTO CORRESPONDING FIELDS OF TABLE et_entityset.
    ELSE.
      SELECT * FROM zml_travel INTO CORRESPONDING FIELDS OF TABLE et_entityset.
    ENDIF.
  ENDMETHOD.

  METHOD zml_ibookingset_get_entityset.
    DATA:ls_keytab TYPE LINE OF /iwbep/t_mgw_name_value_pair.
    LOOP AT it_key_tab INTO ls_keytab.
    ENDLOOP.
    IF ( ls_keytab IS NOT INITIAL ).
      IF ( ls_keytab-name = 'BookingId' ).
        SELECT * FROM zml_booking INTO CORRESPONDING FIELDS OF TABLE et_entityset WHERE booking_id = ls_keytab-value.
      ELSEIF ( ls_keytab-name = 'TravelId' ).
        DATA: lv_travel_id TYPE zml_travel-travel_id.
        SELECT SINGLE travel_id FROM zml_booking INTO lv_travel_id WHERE travel_id = ls_keytab-value.
        SELECT * FROM zml_booking INTO CORRESPONDING FIELDS OF TABLE et_entityset WHERE travel_id = lv_travel_id.
      ENDIF.
    ELSE.
      SELECT * FROM zml_booking INTO CORRESPONDING FIELDS OF TABLE et_entityset.
    ENDIF.
  ENDMETHOD.

  METHOD zml_itravelset_get_entity.
    DATA:ls_keytab TYPE LINE OF /iwbep/t_mgw_name_value_pair.
    LOOP AT it_key_tab INTO ls_keytab.
    ENDLOOP.
    IF ( ls_keytab-name = 'BookingId' ).
      DATA: lv_travel_id TYPE zml_booking-travel_id.
      SELECT SINGLE travel_id FROM zml_booking INTO lv_travel_id WHERE booking_id = ls_keytab-value.
      IF sy-subrc = 0.
        SELECT SINGLE * FROM zml_travel INTO CORRESPONDING FIELDS OF er_entity WHERE travel_id = lv_travel_id.
      ENDIF.
    ELSEIF ( ls_keytab-name = 'TravelId' ).
      SELECT SINGLE * FROM zml_travel INTO CORRESPONDING FIELDS OF er_entity WHERE travel_id = ls_keytab-value.
    ENDIF.
  ENDMETHOD.

  METHOD zml_ibookingset_get_entity.
    DATA:ls_keytab TYPE LINE OF /iwbep/t_mgw_name_value_pair.
    LOOP AT it_key_tab INTO ls_keytab.
    ENDLOOP.
    IF ( ls_keytab-name = 'BookingId' ).
      SELECT SINGLE * FROM zml_booking INTO CORRESPONDING FIELDS OF er_entity WHERE booking_id = ls_keytab-value.
    ELSEIF ( ls_keytab-name = 'TravelId' ).
      SELECT SINGLE * FROM zml_booking INTO CORRESPONDING FIELDS OF er_entity WHERE travel_id = ls_keytab-value.
    ENDIF.
  ENDMETHOD.

  METHOD zml_itravelset_create_entity.
    DATA: ls_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_travel( ls_entity = ls_entity ).
  ENDMETHOD.

  method zml_ibookingset_create_entity.
    DATA: ls_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_booking( ls_entity = ls_entity ).
  endmethod.

  METHOD zml_itravelset_delete_entity.
    DATA: ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    io_tech_request_context-&amp;gt;get_converted_keys( IMPORTING es_key_values = ls_converted_keys ).
    DELETE FROM zml_booking WHERE travel_id = ls_converted_keys-travel_id.
    DELETE FROM zml_travel WHERE travel_id = ls_converted_keys-travel_id.
  ENDMETHOD.

  method zml_ibookingset_delete_entity.
    DATA: ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    io_tech_request_context-&amp;gt;get_converted_keys( IMPORTING es_key_values = ls_converted_keys ).
    DELETE FROM zml_booking WHERE booking_id = ls_converted_keys-booking_id.
  endmethod.

  METHOD zml_itravelset_update_entity.
    DATA:
      ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel,
      ls_entity         TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    IF ( ls_entity-travel_id IS INITIAL ).
      io_tech_request_context-&amp;gt;get_converted_keys(  IMPORTING es_key_values = ls_converted_keys ).
      ls_entity-travel_id = ls_converted_keys-travel_id.
    ENDIF.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_travel( ls_entity = ls_entity ).
  ENDMETHOD.

  method zml_ibookingset_update_entity.
    DATA:
      ls_converted_keys TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking,
      ls_entity         TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    IF ( ls_entity-booking_id IS INITIAL ).
      io_tech_request_context-&amp;gt;get_converted_keys(  IMPORTING es_key_values = ls_converted_keys ).
      ls_entity-booking_id = ls_converted_keys-booking_id.
    ENDIF.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_entity ).
    CLEAR er_entity.
    er_entity = zml_modify_booking( ls_entity = ls_entity ).
  endmethod.

  METHOD /iwbep/if_mgw_appl_srv_runtime~create_deep_entity.
    DATA: ls_travel_booking_data TYPE zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book.
    CLEAR: er_deep_entity.
    TRY.
        CALL METHOD deep_insert_travel_booking
          EXPORTING
            io_data_provider = io_data_provider
          IMPORTING
            es_s_trv_book    = ls_travel_booking_data.
        copy_data_to_ref(
         EXPORTING
           is_data = ls_travel_booking_data
         CHANGING
           cr_data = er_deep_entity ).
      CATCH /iwbep/cx_mgw_busi_exception.
    ENDTRY.
  ENDMETHOD.


  METHOD deep_insert_travel_booking.
    DATA: ls_travel_booking_data TYPE zcl_zml_travelling_odt_mpc_ext=&amp;gt;ty_s_trv_book.
    DATA: ls_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    DATA: ls_childentity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    DATA: ar_childentities TYPE STANDARD TABLE OF zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking WITH DEFAULT KEY.
    io_data_provider-&amp;gt;read_entry_data( IMPORTING es_data = ls_travel_booking_data ).
    MOVE-CORRESPONDING ls_travel_booking_data TO ls_entity.
    ls_entity = zml_modify_travel( ls_entity = ls_entity ).
    MOVE-CORRESPONDING ls_travel_booking_data-to_booking TO ar_childentities.
    LOOP AT ar_childentities INTO ls_childentity.
      ls_childentity-travel_id = ls_entity-travel_id.
      ls_childentity = zml_modify_booking( ls_entity = ls_childentity ).
      ar_childentities[ sy-index ] = ls_childentity.
    ENDLOOP.
    MOVE-CORRESPONDING ls_entity TO es_s_trv_book.
    MOVE-CORRESPONDING ar_childentities TO es_s_trv_book-to_booking.
  ENDMETHOD.

  METHOD zml_create_uuid.
    DATA lv_long_time_stamp TYPE timestampl.
    GET TIME STAMP FIELD lv_long_time_stamp.
    DATA: l_uuid_x16 TYPE sysuuid_x16.
    DATA: system_uuid TYPE REF TO if_system_uuid.
    DATA: oref        TYPE REF TO cx_uuid_error.
    system_uuid = cl_uuid_factory=&amp;gt;create_system_uuid( ).

    TRY.
        es_uuid = system_uuid-&amp;gt;create_uuid_x16( ).
      CATCH cx_uuid_error.
        "handle exception
    ENDTRY.
  ENDMETHOD.

  METHOD zml_modify_travel.
    DATA:
      it_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_itravel.
    MOVE-CORRESPONDING ls_entity TO it_entity.
    IF ( it_entity-client IS INITIAL ).
      it_entity-client = sy-mandt.
    ENDIF.
    TRY.
        it_entity-name = ls_entity-name.
        DATA itb_entity TYPE TABLE OF zml_travel.
        IF ( it_entity-travel_id IS INITIAL ).
          it_entity-travel_id = zml_create_uuid( ).
          itb_entity = VALUE #( ( it_entity )  ).
          INSERT zml_travel FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
        ELSE.
          itb_entity = VALUE #( ( it_entity )  ).
          MODIFY zml_travel FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
        ENDIF.
        es_entity = it_entity.
      CATCH cx_uuid_error.
    ENDTRY.
  ENDMETHOD.

  METHOD zml_modify_booking.
    DATA:
    it_entity TYPE zcl_zml_travelling_odt_mpc=&amp;gt;ts_zml_ibooking.
    MOVE-CORRESPONDING ls_entity TO it_entity.
    IF ( ls_entity-client IS INITIAL ).
      it_entity-client = sy-mandt.
    ENDIF.
    IF ( ls_entity-travel_id IS NOT INITIAL ).
      TRY.
          DATA itb_entity TYPE TABLE OF zml_booking.
          IF ( it_entity-booking_id IS INITIAL ).
            it_entity-booking_id = zml_create_uuid( ).
            itb_entity = VALUE #( ( it_entity )  ).
            INSERT zml_booking FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
          ELSE.
            itb_entity = VALUE #( ( it_entity )  ).
            MODIFY zml_booking FROM TABLE &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1074930"&gt;@itb&lt;/a&gt;_entity.
          ENDIF.
          es_entity = it_entity.
        CATCH cx_uuid_error.
      ENDTRY.
    ENDIF.

  ENDMETHOD.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can use this example of OData service as start point of developing your own package with own model and own project for OData by SEGW transaction. Now you have clear understanding how it can be implemented and fulfill business requirements, especially when those require none generative approach because particular changes of methods business consider as most effective approach on working production instances.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thank you for your attention and happy programming,&lt;/P&gt;&lt;P&gt;Yours sincerely,&lt;/P&gt;&lt;P&gt;Mikhail.&lt;/P&gt;&lt;P&gt;PS: if you missed this link:&amp;nbsp;&lt;A href="https://github.com/lukcad/ZMLODATA.git" target="_blank" rel="nofollow noopener noreferrer"&gt;https://github.com/lukcad/ZMLODATA.git&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/creation-of-odata-service-with-implementation-of-crud-methods-and-deep/ba-p/13685666"/>
    <published>2024-05-03T08:33:54.245000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/fiori-po-approver-app-accept-and-reject-button-customization-from-ecc/ba-p/13690701</id>
    <title>Fiori PO Approver app Accept and Reject button customization from ECC backend</title>
    <updated>2024-05-03T12:45:30.531000+02:00</updated>
    <author>
      <name>jayesh_mudaliar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/230182</uri>
    </author>
    <content>&lt;P&gt;&lt;BR /&gt;Please go through the &lt;A title="Fiori PO Approver app Forward button customization from ECC backend" href="https://community.sap.com/t5/technology-blogs-by-members/fiori-po-approver-app-forward-button-customization-from-ecc-backend/ba-p/13580901" target="_self"&gt;Part 1 Forward Button customization&lt;/A&gt; for better understanding.&lt;BR /&gt;&lt;BR /&gt;Many time there are custom requirements for which it requires the need of creating Enhancement in standard SAP functionality.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Overview&lt;/STRONG&gt; : PO Approvers are maintained in Release Strategy. Once the PO is generated it is set to be approved by PO approvers based on the levels maintained in PPOME structure. Only then the PO will be set to 03 status in EKKO.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisite&lt;/STRONG&gt; : All the roles and authorization must be given to the approvers to access the PO Approval Tile in SAP Fiori.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Requirement :&lt;/STRONG&gt;&amp;nbsp; If the approver find the PO is incorrect, he will reject the PO. The rejection of PO must contain the rejection text. Since the Text is an optional there comes up the challenge to make it mandatory.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_0-1714728155246.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105445i32339ED69C7F9204/image-size/medium?v=v2&amp;amp;px=400" role="button" title="jayesh_mudaliar_0-1714728155246.png" alt="jayesh_mudaliar_0-1714728155246.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Solution:&amp;nbsp;&lt;/P&gt;&lt;P&gt;There are many ways to do this&amp;nbsp;&lt;BR /&gt;1. Doing changes in Front-End using &lt;STRONG&gt;BTP/WEB IDE&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;2. Making it mandatory from ECC&lt;/P&gt;&lt;P&gt;I chose the 2nd method since there was some issue in licensing the BTP and it was not configured correctly.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;STRONG&gt;Making it mandatory from ECC&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;My PO tile looks like this&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_1-1714728363065.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105446iF97130EE3239AD3D/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_1-1714728363065.png" alt="jayesh_mudaliar_1-1714728363065.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When the approver click on the Reject button , he must enter the Rejection note. If he doesn't then the PO should not be rejected.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_0-1714728155246.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105445i32339ED69C7F9204/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_0-1714728155246.png" alt="jayesh_mudaliar_0-1714728155246.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP has provided only few objects which can be modified without the BTP framework. PO Approval is one of it. The main thing to note and find the Odata.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;How to find the OData&amp;nbsp;which will can be used for my development?&lt;/STRONG&gt;&lt;BR /&gt;You can find the OData from going to Fiori tile -&amp;gt; Do Frontend debugging-&amp;gt; Refresh the page-&amp;gt; Navigate&amp;nbsp;to Network Tab -&amp;gt; Find Path starting with key words&amp;nbsp;&lt;SPAN&gt;/sap/opu/odata&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In my case the OData is&amp;nbsp;&lt;SPAN&gt;&lt;FONT color="#00FFFF"&gt;&lt;FONT color="#FF0000"&gt;GBAPP_POAPPROVAL&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;/sap/opu/odata/SAP/&lt;FONT color="#00FFFF"&gt;&lt;FONT color="#FF0000"&gt;GBAPP_POAPPROVAL&lt;/FONT&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_4-1714730619543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105473iCFE3D31B0F477579/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_4-1714730619543.png" alt="jayesh_mudaliar_4-1714730619543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can also find it through the XML file&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_5-1714730797939.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105474iF251FFB9B0616D94/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_5-1714730797939.png" alt="jayesh_mudaliar_5-1714730797939.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now you have the Standard OData name, it must be implemented so that it could connect with the backend system by providing the system name in External system.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Odata Implementation&lt;/STRONG&gt;: The ODATA deployment is Central HUB . We have separate GW systems for hosting Fiori Tiles.&lt;/P&gt;&lt;P&gt;Tcode : /n/iwfnd/maint_service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_2-1714729367937.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105456iC3B2581217FA8B08/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_2-1714729367937.png" alt="jayesh_mudaliar_2-1714729367937.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_3-1714729398317.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105457i60B32F9842C23355/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_3-1714729398317.png" alt="jayesh_mudaliar_3-1714729398317.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_7-1714731093754.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105476i8F62AAB6848CB0FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_7-1714731093754.png" alt="jayesh_mudaliar_7-1714731093754.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now one must get 200 response after connecting it with backend system.&amp;nbsp;&lt;BR /&gt;Tcode : /n/iwfnd/gw_client&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_8-1714731232808.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105477i7302CB66ECBDA47D/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_8-1714731232808.png" alt="jayesh_mudaliar_8-1714731232808.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Till now OData is successfully configured. Now its time to find the BADI in ECC system to implement. This can be found in my previous&amp;nbsp;&lt;A title="Fiori PO Approver app Forward button customization from ECC backend" href="https://community.sap.com/t5/technology-blogs-by-members/fiori-po-approver-app-forward-button-customization-from-ecc-backend/ba-p/13580901" target="_self"&gt;Blog&lt;/A&gt;&lt;BR /&gt;Let me directly jump to the method which would be required to implement.&lt;BR /&gt;The method is&amp;nbsp;&lt;STRONG&gt;Change SET_DECISION method&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_9-1714731665289.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105482iE231BA2816773A03/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_9-1714731665289.png" alt="jayesh_mudaliar_9-1714731665289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here the SAP Standard documentation is pretty clear about the way of processing. You can go through it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_10-1714731777859.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105487i5BCB7CF143028431/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_10-1714731777859.png" alt="jayesh_mudaliar_10-1714731777859.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;!--    StartFragment     --&gt;&lt;STRONG&gt;Accept : iv_decision&amp;nbsp;= 1.&lt;/STRONG&gt;&lt;BR /&gt;&lt;STRONG&gt;Reject :&amp;nbsp;&lt;!--    StartFragment     --&gt;iv_decision&amp;nbsp; = 2.&lt;BR /&gt;If you want nothing should happen mark&amp;nbsp;&lt;!--    StartFragment     --&gt;ev_decision_processed&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;'X'&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;!--    StartFragment     --&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;METHOD&amp;nbsp;&lt;/SPAN&gt;IF_GBAPP_EX_APV_PO_RDP&lt;SPAN class=""&gt;~&lt;/SPAN&gt;CHANGE_SET_DECISION&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;"&amp;nbsp;Standard&amp;nbsp;Documentation:&amp;nbsp;Do&amp;nbsp;not&amp;nbsp;delete&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;This&amp;nbsp;method&amp;nbsp;can&amp;nbsp;be&amp;nbsp;used&amp;nbsp;to&amp;nbsp;enable&amp;nbsp;execution&amp;nbsp;of&amp;nbsp;a&amp;nbsp;workitem&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;without&amp;nbsp;updating&amp;nbsp;a&amp;nbsp;purchase&amp;nbsp;order.&amp;nbsp;The&amp;nbsp;customer&amp;nbsp;should&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;implement&amp;nbsp;the&amp;nbsp;method&amp;nbsp;and&amp;nbsp;call&amp;nbsp;a&amp;nbsp;corresponding&amp;nbsp;function&amp;nbsp;to&amp;nbsp;execute&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;the&amp;nbsp;workitem&amp;nbsp;followed&amp;nbsp;by&amp;nbsp;COMMIT&amp;nbsp;WORK.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;To&amp;nbsp;avoid&amp;nbsp;update&amp;nbsp;of&amp;nbsp;the&amp;nbsp;purchase&amp;nbsp;order,&amp;nbsp;it&amp;nbsp;is&amp;nbsp;necessary&amp;nbsp;to&amp;nbsp;set&amp;nbsp;the&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;output&amp;nbsp;parameter&amp;nbsp;EV_DECISION_PROCESSED&amp;nbsp;to&amp;nbsp;'X'.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;Preventing&amp;nbsp;update&amp;nbsp;of&amp;nbsp;a&amp;nbsp;document&amp;nbsp;can&amp;nbsp;be&amp;nbsp;necessary,&amp;nbsp;if&amp;nbsp;the&amp;nbsp;customer&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;uses&amp;nbsp;his&amp;nbsp;own&amp;nbsp;workflow&amp;nbsp;where&amp;nbsp;update&amp;nbsp;of&amp;nbsp;purchase&amp;nbsp;order&amp;nbsp;takes&amp;nbsp;place&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;in&amp;nbsp;a&amp;nbsp;separate&amp;nbsp;background&amp;nbsp;workflow&amp;nbsp;step.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;IF&amp;nbsp;&lt;/SPAN&gt;iv_decision&amp;nbsp;&lt;SPAN class=""&gt;EQ&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;2&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;IF&amp;nbsp;&lt;/SPAN&gt;iv_rejection_text&amp;nbsp;&lt;SPAN class=""&gt;IS&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;INITIAL&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ev_decision_processed&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;'X'&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;ELSE&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;DATA&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&amp;nbsp;&lt;/SPAN&gt;t_return&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;STANDARD&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;TABLE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;OF&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;BAPIRET2&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;CALL&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;FUNCTION&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;'ZFIORI_PO_APPROVAL_REJ_CHG'&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;IN&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;UPDATE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;TASK&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;EXPORTING&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;iv_ebeln&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;iv_pc_number&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;TABLES&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;t_return&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;t_return&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;COMMIT&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;WORK&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;ENDIF&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;ENDIF&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;ENDMETHOD&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;As per my requirement if the approver accept I should not check anything and simply make it happen, hence I have not done anything with&lt;!--    StartFragment     --&gt; &lt;SPAN&gt;iv_decision&lt;/SPAN&gt;&amp;nbsp;= 1. If you want, you can add your custom requirement under it.&amp;nbsp;&lt;BR /&gt;For me I have marked&amp;nbsp;&lt;!--    StartFragment     --&gt;&lt;SPAN&gt;ev_decision_processed&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;'X', if rejection text/ note in not provided.&lt;BR /&gt;I have used a Update Task FM because these were the async call hence the system was giving dump while updating the EKKO. So as to correct&amp;nbsp;this I have divided it in 2 Logical unit. A wait of 5 secs have introduced so that the previous&amp;nbsp;task gets over.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jayesh_mudaliar_12-1714732313298.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/105495i06177F492E739D15/image-size/large?v=v2&amp;amp;px=999" role="button" title="jayesh_mudaliar_12-1714732313298.png" alt="jayesh_mudaliar_12-1714732313298.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;BR /&gt;&lt;!--    StartFragment     --&gt;&lt;SPAN class=""&gt;FUNCTION&amp;nbsp;&lt;/SPAN&gt;zfiori_po_approval_rej_chg&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"----------------------------------------------------------------------&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"*"Update&amp;nbsp;Function&amp;nbsp;Module:&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"*"Local&amp;nbsp;Interface:&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"&amp;nbsp;&amp;nbsp;IMPORTING&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;VALUE(IV_EBELN)&amp;nbsp;TYPE&amp;nbsp;&amp;nbsp;EBELN&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"&amp;nbsp;&amp;nbsp;TABLES&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;T_RETURN&amp;nbsp;STRUCTURE&amp;nbsp;&amp;nbsp;BAPIRET2&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"----------------------------------------------------------------------&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*"*"Update&amp;nbsp;Function&amp;nbsp;Module:&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;WAIT&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;UP&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;TO&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;5&amp;nbsp;&lt;/SPAN&gt;SECONDS&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;DATA&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&amp;nbsp;&lt;/SPAN&gt;lr_po&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;REF&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;TO&amp;nbsp;&lt;/SPAN&gt;cl_po_header_handle_mm&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ls_bapi&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;bapiret2&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;l_result&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;mmpur_bool&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lv_procstat&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;ekko&lt;SPAN class=""&gt;-&lt;/SPAN&gt;procstat&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ls_document&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;mepo_document&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;CONSTANTS&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&amp;nbsp;&lt;/SPAN&gt;lc_status&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;ekko&lt;SPAN class=""&gt;-&lt;/SPAN&gt;procstat&amp;nbsp;&lt;SPAN class=""&gt;VALUE&amp;nbsp;&lt;/SPAN&gt;'08'&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lc_set_status&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;ekko&lt;SPAN class=""&gt;-&lt;/SPAN&gt;procstat&amp;nbsp;&lt;SPAN class=""&gt;VALUE&amp;nbsp;&lt;/SPAN&gt;'03'&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lc_process&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;char16&amp;nbsp;&lt;SPAN class=""&gt;VALUE&amp;nbsp;&lt;/SPAN&gt;'PO_PROCESS'&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lc_trtyp&amp;nbsp;TYPE&amp;nbsp;char1&amp;nbsp;VALUE&amp;nbsp;'VER',&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lc_trtyp&amp;nbsp;TYPE&amp;nbsp;char1&amp;nbsp;VALUE&amp;nbsp;'V',&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lc_ind&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;char40&amp;nbsp;&lt;SPAN class=""&gt;VALUE&amp;nbsp;&lt;/SPAN&gt;'RELEASE'&lt;SPAN class=""&gt;,&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lc_tcode&amp;nbsp;&lt;SPAN class=""&gt;TYPE&amp;nbsp;&lt;/SPAN&gt;SY&lt;SPAN class=""&gt;-&lt;/SPAN&gt;TCODE&amp;nbsp;&lt;SPAN class=""&gt;VALUE&amp;nbsp;&lt;/SPAN&gt;'ME29N'&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;SELECT&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;SINGLE&amp;nbsp;&lt;/SPAN&gt;procstat&amp;nbsp;&lt;SPAN class=""&gt;FROM&amp;nbsp;&lt;/SPAN&gt;ekko&amp;nbsp;&lt;SPAN class=""&gt;INTO&amp;nbsp;&lt;/SPAN&gt;lv_procstat&amp;nbsp;&lt;SPAN class=""&gt;WHERE&amp;nbsp;&lt;/SPAN&gt;ebeln&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;iv_ebeln&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;IF&amp;nbsp;&lt;/SPAN&gt;lv_procstat&amp;nbsp;&lt;SPAN class=""&gt;EQ&amp;nbsp;&lt;/SPAN&gt;lc_status&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;prepare&amp;nbsp;creation&amp;nbsp;of&amp;nbsp;PO&amp;nbsp;instance&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ls_document&lt;SPAN class=""&gt;-&lt;/SPAN&gt;process&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;'PO_PROCESS'&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ls_document&lt;SPAN class=""&gt;-&lt;/SPAN&gt;trtyp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;'VER'&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ls_document&lt;SPAN class=""&gt;-&lt;/SPAN&gt;doc_key&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;SPAN class=""&gt;10&lt;/SPAN&gt;&lt;SPAN class=""&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;iv_ebeln&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ls_document&lt;SPAN class=""&gt;-&lt;/SPAN&gt;initiator&lt;SPAN class=""&gt;-&lt;/SPAN&gt;initiator&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;'RELEASE'&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;CREATE&amp;nbsp;&lt;/SPAN&gt;OBJECT&amp;nbsp;lr_po&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lr_po&lt;SPAN class=""&gt;-&amp;gt;&lt;/SPAN&gt;for_bapi&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;'X'&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lr_po&lt;SPAN class=""&gt;-&amp;gt;&lt;/SPAN&gt;po_initialize&lt;SPAN class=""&gt;(&amp;nbsp;&lt;/SPAN&gt;ls_document&amp;nbsp;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lr_po&lt;SPAN class=""&gt;-&amp;gt;&lt;/SPAN&gt;set_po_number&lt;SPAN class=""&gt;(&amp;nbsp;&lt;/SPAN&gt;iv_ebeln&amp;nbsp;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;CALL&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;FUNCTION&amp;nbsp;&lt;/SPAN&gt;'MEPO_DOC_READ'&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;EXPORTING&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_ebeln&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;iv_ebeln&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_tcode&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;lc_tcode&lt;SPAN class=""&gt;"'ME29N'&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_trtyp&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;ls_document&lt;SPAN class=""&gt;-&lt;/SPAN&gt;trtyp&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;IM_ID&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_document&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;ls_document&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;IM_NO_MESSAGING&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;IM_NO_MESSAGE_REQ&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;IM_NO_AUTHORITY&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;EXCEPTIONS&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;DOC_NUMBER_MISSING&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;1&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;TRANSACTION_CODE_MISSING&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;2&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;TRANSACTION_TYPE_MISSING&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;3&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;INVALID_CALL&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;4&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;OTHERS&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;=&amp;nbsp;5&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;IF&amp;nbsp;&lt;/SPAN&gt;sy&lt;SPAN class=""&gt;-&lt;/SPAN&gt;subrc&amp;nbsp;&amp;lt;&amp;gt;&amp;nbsp;&lt;SPAN class=""&gt;0&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;Implement&amp;nbsp;suitable&amp;nbsp;error&amp;nbsp;handling&amp;nbsp;here&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;ENDIF&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;DATA&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&amp;nbsp;&lt;/SPAN&gt;ex_data&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;LIKE&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;mepoheader&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;CALL&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;FUNCTION&amp;nbsp;&lt;/SPAN&gt;'MEPO_DOC_HEADER_GET'&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;IMPORTING&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ex_ekko&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;ex_data&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;IF&amp;nbsp;&lt;/SPAN&gt;cl_process_state_mm&lt;SPAN class=""&gt;=&amp;gt;&lt;/SPAN&gt;is_allowed&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_bstyp&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;ex_data&lt;SPAN class=""&gt;-&lt;/SPAN&gt;bstyp&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_state&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;ex_data&lt;SPAN class=""&gt;-&lt;/SPAN&gt;procstat&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;im_process&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;cl_process_state_mm&lt;SPAN class=""&gt;=&amp;gt;&lt;/SPAN&gt;c_pr_reset_rej&amp;nbsp;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;EQ&amp;nbsp;&lt;/SPAN&gt;mmpur_no&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;MESSAGE&amp;nbsp;&lt;/SPAN&gt;e806&lt;SPAN class=""&gt;(&lt;/SPAN&gt;mepo&lt;SPAN class=""&gt;)&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;WITH&amp;nbsp;&lt;/SPAN&gt;ex_data&lt;SPAN class=""&gt;-&lt;/SPAN&gt;procstat&amp;nbsp;&lt;SPAN class=""&gt;RAISING&amp;nbsp;&lt;/SPAN&gt;failed&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;ENDIF&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;ex_data&lt;SPAN class=""&gt;-&lt;/SPAN&gt;procstat&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;cl_process_state_mm&lt;SPAN class=""&gt;=&amp;gt;&lt;/SPAN&gt;c_active&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;lr_po&lt;SPAN class=""&gt;-&amp;gt;&lt;/SPAN&gt;set_data&lt;SPAN class=""&gt;(&amp;nbsp;&lt;/SPAN&gt;ex_data&amp;nbsp;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;UPDATE&amp;nbsp;&lt;/SPAN&gt;ekko&amp;nbsp;&lt;SPAN class=""&gt;SET&amp;nbsp;&lt;/SPAN&gt;procstat&amp;nbsp;&lt;SPAN class=""&gt;=&amp;nbsp;&lt;/SPAN&gt;lc_set_status&amp;nbsp;&lt;SPAN class=""&gt;WHERE&amp;nbsp;&lt;/SPAN&gt;ebeln&amp;nbsp;&lt;SPAN class=""&gt;EQ&amp;nbsp;&lt;/SPAN&gt;iv_ebeln&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;*&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;UPDATE&amp;nbsp;ekko&amp;nbsp;SET&amp;nbsp;PROCSTAT&amp;nbsp;=&amp;nbsp;ex_data-procstat&amp;nbsp;where&amp;nbsp;ebeln&amp;nbsp;eq&amp;nbsp;iv_ebeln.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&lt;SPAN class=""&gt;ENDIF&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN class=""&gt;ENDFUNCTION&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/fiori-po-approver-app-accept-and-reject-button-customization-from-ecc/ba-p/13690701"/>
    <published>2024-05-03T12:45:30.531000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/s-4hana-odata-api-s-is-it-time-for-a-quot-safety-belt-quot/ba-p/13704550</id>
    <title>S/4HANA - ODATA API's - is it time for a "Safety Belt" ?</title>
    <updated>2024-05-21T09:43:55.005000+02:00</updated>
    <author>
      <name>AndySilvey</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1397601</uri>
    </author>
    <content>&lt;P&gt;tl;dr&lt;/P&gt;&lt;P&gt;I have a worry that without usage guidance and configurable usage limitations, these amazing beautiful powerful ODATA API's could bring down the S/4HANA Digital Core.&lt;/P&gt;&lt;P&gt;I recently got de ja vu and have the feeling ODATA API's need a Safety Belt like we had back in the day with BI Java&amp;nbsp;&lt;A href="https://me.sap.com/notes/1127156" target="_blank" rel="noopener noreferrer"&gt;1127156 - Safety belt: Result set is too large - SAP for Me&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In this blog I will explain why I propose to SAP that they put in a Safety Belt for ODATA API's.&lt;/P&gt;&lt;P&gt;Ultimately, I think that we should be ring fencing the S/4HANA Digital with Enterprise Blockchain and therefore Digitally DeCoupling the S/4HANA Digital Core from being an API End Point for 3rd Party Applications. But, in the meantime a Safety Belt will help. That's explained here:&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-members/ringfencing-amp-decoupling-s-4hana-with-enterprise-blockchain-and-sap-btp/ba-p/13639467" target="_blank"&gt;RingFencing &amp;amp; DeCoupling S/4HANA with Enterprise Blockchain and SAP BTP - Ultimate Cyber Security &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;If you have time, read on for the whole story &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/P&gt;&lt;P&gt;----------------------------------------------------------------------------------------------------------------&lt;/P&gt;&lt;P&gt;Ok, let's go...&lt;/P&gt;&lt;P&gt;Back in 2001, at Sapphire, Hasso Plattner gave a keynote which included introducing, "the beast called ABAP WebDynPro".&lt;/P&gt;&lt;P&gt;I grew up with BAPI's and RFC's, looking back, those were simpler times,&amp;nbsp; for me (and, disclaimer, I am not the world expert) BAPI's have three dimensions:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The Import Parameters&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;When we call a BAPI we pass as part of the call, some parameters which are needed to execute the BAPI and which influence the processing of the BAPI&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The Business Logic / Processing Logic&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;This is where the BAPI does it's work, the ABAP / SQL program which triggered by the call and the Import Parameters does something and returns data&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The Export Parameters&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;This is the output of executing the BAPI, this is what we get back in return when we call the BAPI&lt;/P&gt;&lt;P&gt;Looking back, in terms of Operating/Running the ECC R/3 from the Basis perspective, BAPI's were relatively easy for us BASIS Teams to work with and to control.&lt;/P&gt;&lt;P&gt;When I say control, what I mean is control the system resources and work load impact of the BAPI.&lt;/P&gt;&lt;P&gt;We really had a good view as to what the BAPI can do, how it can be executed, what's its limits are, what kind of maximum load it would put on the system, because actually, looking back, it was very limited as to what the BAPI could do, based upon the Import Parameters the BAPI ran a program and returned Export Parameters.&lt;/P&gt;&lt;P&gt;And now we fast forward to 2024, and we have the magic of ODATA API's.&lt;/P&gt;&lt;P&gt;There is no doubt ODATA API's are magical, what they can do is amazing, compared to BAPI's and RFC's they are a different generation.&lt;/P&gt;&lt;P&gt;Let's just look at the SAP S/4HANA standard Business Partner ODATA API:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_0-1715932820159.png" style="width: 772px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111887i1D59B4A580AA7069/image-dimensions/772x274?v=v2" width="772" height="274" role="button" title="AndySilvey_0-1715932820159.png" alt="AndySilvey_0-1715932820159.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This thing is amazing, it is huge, it is enormous, it enables:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Create&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Read&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Update&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Delete&lt;/P&gt;&lt;P&gt;of Master Data for Business Partner, across:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Supplier&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Customer&lt;/P&gt;&lt;P&gt;on the surface, it is fantastic. It is so powerful.&lt;/P&gt;&lt;P&gt;But, how is it powerful and what do I mean by powerful ?&lt;/P&gt;&lt;P&gt;I consider powerful to be its capabilities, what we can do with it, and I see the power of it when I compare to how limited we were when working with BAPI's and RFC's.&lt;/P&gt;&lt;P&gt;The power of the ODATA API_BUSINESS_PARTNER goes across a number of dimensions including:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Schema's, just look at the Data Schema's&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_1-1715933140848.png" style="width: 706px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111891iF88BE86F94606329/image-dimensions/706x614?v=v2" width="706" height="614" role="button" title="AndySilvey_1-1715933140848.png" alt="AndySilvey_1-1715933140848.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;and now the best part, remember, with BAPI's and RFC's we had Import Parameters and Export Parameters, that was it, and now, with the power of the ODATA API's, the One, the Person, the Application calling the ODATA API can do all of this in the call to the API:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_2-1715933314856.png" style="width: 768px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111892iB716EF041069F0B1/image-dimensions/768x657?v=v2" width="768" height="657" role="button" title="AndySilvey_2-1715933314856.png" alt="AndySilvey_2-1715933314856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The API Caller, calling the API End Point on the S/4HANA Digital Core is able to call this API, and perform actions from this rich list of actions:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Select&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Expand&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Filter&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Orderby&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Top&lt;/P&gt;&lt;P&gt;this is amazing, compared to BAPI's and RFC's, this is a different world, the possibilities this creates for the caller of the API are fantastic, the caller of the API can now do much much more than simply calling some data.&lt;/P&gt;&lt;P&gt;Let's walk through an example and using the SAP documentation, let's imagine, we are the System Owner of a 3rd Party Application which depends on Business Partner Master Data from the S/4HANA Digital Core as the single source of truth.&lt;/P&gt;&lt;P&gt;As a 3rd Party Application, we have been provided with the S/4HANA API_BUSINESS_PARTNER Url End Point, and with a User and Certificate which can Authenticate all the way through to the S/4HANA and which has Authorisation on the S/4HANA to call the API and get the Data.&lt;/P&gt;&lt;P&gt;And on our 3rd Party Application, we find that we have a use case where we need Customer and Supplier Business Partner Data from the S/4HANA.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the "Try Out" section of the SAP API Hub, we are able to "self service" model the API call to the S/4HANA for the Data which we wish to replicate from the S/4HANA.&lt;/P&gt;&lt;P&gt;In the "Schema View" we can choose the data elements which we want to replicate, which we want to call from the S/4HANA, eg for Customer:&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_3-1715934756953.png" style="width: 662px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111899i523CB6CA9567C47E/image-dimensions/662x877?v=v2" width="662" height="877" role="button" title="AndySilvey_3-1715934756953.png" alt="AndySilvey_3-1715934756953.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the "Try Out" view we can then model the "Query" which we would like to perform when the S/4HANA is preparing the data for us, as described above, we have a rich set of options which we can include in the data preparation (Refer to the Specification &lt;A href="https://help.sap.com/doc/5890d27be418427993fafa6722cdc03b/Cloud/en-US/OdataV2.pdf#page=68" target="_blank" rel="noopener noreferrer"&gt;OdataV2.pdf (sap.com)&lt;/A&gt;:&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_4-1715935019253.png" style="width: 676px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111901i992B921EE7E89ED0/image-dimensions/676x478?v=v2" width="676" height="478" role="button" title="AndySilvey_4-1715935019253.png" alt="AndySilvey_4-1715935019253.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_5-1715935061976.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111902iB26DC4B2F704A02D/image-dimensions/712x637?v=v2" width="712" height="637" role="button" title="AndySilvey_5-1715935061976.png" alt="AndySilvey_5-1715935061976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;So, it can be seen there is a very rich set of Query options which can be used together when calling the ODATA API BUSINESS PARTNER on the S/4HANA, to enable the data which will be replicated to be prepared in the way which is the most useful for the API Caller.&lt;/P&gt;&lt;P&gt;And as I keep saying, this is amazing, and a huge step forward when compared to BAPI's and RFC's.&lt;/P&gt;&lt;P&gt;These capabilities are so rich, we are almost at the point where the API Caller can construct Analytics API calls and perform Analytical tasks on S/4HANA Data in the S/4HANA.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Unfortunately, however, as is often the case in life, too much of a good thing can be a bad thing.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As Queen sang in their song, Too Much Love,&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_6-1715935357406.png" style="width: 416px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111903i83BC1FAD0C7BB9FF/image-dimensions/416x104?v=v2" width="416" height="104" role="button" title="AndySilvey_6-1715935357406.png" alt="AndySilvey_6-1715935357406.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Unfortunately, it is the same for the S/4HANA Digital Core, too much of a good thing could kill it.&lt;/P&gt;&lt;P&gt;The ODATA API_BUSINESS_PARTNER worries me for two reasons:&lt;/P&gt;&lt;P&gt;a) what can be done with it is so rich&lt;/P&gt;&lt;P&gt;b) the calling System, once they have a User which has Authentication and Authorisation to call the API_BUSINESS_PARTNER on the S/4HANA, once they can do that, they are free to compose whatever Query of whatever Data is available in that API and which whatever complex combination or Selects, Expands, Filters, Orderby that they so wish.&lt;/P&gt;&lt;P&gt;These features are so rich, the capabilities are so rich, the Data preparation which an calling Application can do in the S/4HANA when calling an S/4HANA API are on the edge of being Analytical !&lt;/P&gt;&lt;P&gt;And the people Running and Operating the S/4HANA Digital Core have no control over that.&lt;/P&gt;&lt;P&gt;I am seeing performance implications of this in the S/4HANA.&lt;/P&gt;&lt;P&gt;And it is obvious, as the Complexity of the API call AND the Volume of Data being called, goes up, so the demand on the S/4HANA system resources will be higher, very simply it is like this:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_7-1715935624218.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111905iF47DE7775E0F17FB/image-dimensions/720x317?v=v2" width="720" height="317" role="button" title="AndySilvey_7-1715935624218.png" alt="AndySilvey_7-1715935624218.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;When I see this, I am getting de ja vu, it reminds me of installing BI Java Portal for Bex Web back in 2008 and the End Users crashing the Portal because they were bringing so much data back from the BW,&lt;/P&gt;&lt;P&gt;SAP's answer at the time was the &lt;A href="https://me.sap.com/notes/1127156" target="_self" rel="noopener noreferrer"&gt;Bex Web Safety Belt,&amp;nbsp;&lt;/A&gt;&lt;SPAN&gt;&lt;A href="https://me.sap.com/notes/1127156" target="_self" rel="noopener noreferrer"&gt;1127156 - Safety belt: Result set is too large&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_8-1715935733171.png" style="width: 694px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111907i3068BF6F317C3891/image-dimensions/694x321?v=v2" width="694" height="321" role="button" title="AndySilvey_8-1715935733171.png" alt="AndySilvey_8-1715935733171.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;With the Safety Belt, we Basis Admins were able to protect the Bi Java Portal from crashing by putting in physical restrictions on the amount of data that End Users could bring back.&lt;/P&gt;&lt;P&gt;With the S/4HANA ODATA API_BUSINESS_PARTNER we don't have that, we Basis Admins cannot control how the calling System Administrators/Developers will use the API.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What can we do, what are SAP doing ?&amp;nbsp; I see some OSS Notes for other standard S/4HANA API's&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/2892387/E" target="_blank" rel="noopener noreferrer"&gt;2892387 - Post Journal Entry API Performance Recommendations&lt;/A&gt;&amp;nbsp;&amp;nbsp; - actual recommendations&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/3398269/E" target="_blank" rel="noopener noreferrer"&gt;3398269 - Performance suggestion when using API Journal Entry – Post&lt;/A&gt;&amp;nbsp; - actual recommendations&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/2691193/E" target="_blank" rel="noopener noreferrer"&gt;2691193 - Average API performance response time&lt;/A&gt; – actual recommendation switch of api logging&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In these Notes SAP is giving guidelines on how to use the API's do's and don'ts, which helps, but it is not a catch all way of protecting the S/4HANA from API Callers unintentionally bringing down the S/4HANA because of how they are using the ODATA API's.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndySilvey_9-1715936010576.png" style="width: 729px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/111910iFD6F699335DA284A/image-dimensions/729x254?v=v2" width="729" height="254" role="button" title="AndySilvey_9-1715936010576.png" alt="AndySilvey_9-1715936010576.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We are thinking about alternatives, what to do, how to ensure that API Callers cannot bring down the S/4HANA Digital Core ?&lt;/P&gt;&lt;P&gt;We could copy the API's and make Z versions with restricted capabilities, but that would not be 100% clean core compliant.&lt;/P&gt;&lt;P&gt;I see two fundamental long term options:&lt;/P&gt;&lt;P&gt;&lt;A href="https://me.sap.com/notes/1127156" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Safety Belt&lt;/STRONG&gt;&lt;/A&gt; - either SAP bring in a "Safety Belt" feature like we had back in the day with the Bex Web. The safety belt will ensure, reliably, consistently, that an API Caller cannot call an API in such a way that it will over load the S/4HANA and bring down the S/4HANA&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enterprise Blockchain&lt;/STRONG&gt; - or alternatively, we do what &lt;A href="https://community.sap.com/t5/technology-blogs-by-members/ringfencing-amp-decoupling-s-4hana-with-enterprise-blockchain-and-sap-btp/ba-p/13639467" target="_self"&gt;I was advocating over here&lt;/A&gt;, we say no to the S/4HANA Digital Core being an End Point for 3rd Party Applications API calls, and in cases where S/4HANA Data needs to be replicated to other system we Ring Fence the S/4HANA with an Enterprise Blockchain and replicate S/4HANA Data to the Enterprise Blockchain and let 3rd Party Applications read the Data from the Enterprise Blockchain. This succeeds to stop 3rd Party Applications calling API End Points on the S/4HANA, therefore increased Cyber Security, and at the same time means that 3rd Party Applications cannot over load the S/4HANA, and enables the Enterprise Blockchain to become the common single shared source of truth across the Organisation and Organisations.&lt;/P&gt;&lt;P&gt;Enterprise Blockchain is:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;. &lt;/STRONG&gt;a Secure Store&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. a Secure Communication Channel&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;.&amp;nbsp;A Common Shared Single Source of Truth in your Organisation and across Organisations&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;. The next generation Data Integration is about having a Common Shared Single Source of Truth&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;What do you think ? What's your solution ?&lt;/P&gt;&lt;P&gt;Until next time,&lt;/P&gt;&lt;P&gt;Andy Silvey.&lt;/P&gt;&lt;P&gt;Independent SAP Technical Architect and CEO of atkrypto.io&lt;/P&gt;&lt;P&gt;Author Bio:&lt;/P&gt;&lt;P&gt;Andy Silvey is a 25 years SAP Technology veteran&amp;nbsp;[&lt;EM&gt;15 years SAP Basis and 10 years SAP Tech Arch including Tech, Integration, Security, Data from 3.1H to S/4HANA PCE on RISE and the BTP and everything in between, and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/welcome-corner-blog-posts/andy-silvey-scn-moderator-spotlight/ba-p/13054438" target="_self"&gt;former SCN Moderator and Mentor alumni&lt;/A&gt;].&lt;/EM&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Andy is also co-Founder of&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;atkrypto&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;inc, an startup whose ambition is to make Blockchain easy for Enterprise.&lt;/P&gt;&lt;P&gt;atkrypto.io's flagship product is the atkrypto Enterprise Blockchain Platform for SAP,&amp;nbsp; and atkrypto.io is a SAP Partner Edge Open EcoSystem Partner.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The&amp;nbsp;atkrypto Enterprise Blockchain Platform for SAP has been designed by SAP Independent Experts for the needs of SAP Customers and to be deployed on the SAP BTP Kyma Runtime Service and leverage native integration to SAP Products.&lt;/P&gt;&lt;P&gt;atkrypto&amp;nbsp;Enterprise Blockchain Platform for SAP has a number of unique qualities, including being the only Blockchain software in the world which has a DataCenter version and a light mobile version which can run on Edge/IoT/Mobile devices and enables data to be written to the Blockchain at the Edge where that same Blockchain is running on a Server in the DataCenter, protecting the integrity and originality of data from the Edge to Insights. Taking Blockchain to the Data at the Edge instead of taking the Data to the Blockchain.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;All of this makes atkrypto,io the DePIN Decentralised Physical Infrastructure Network solution for Enterprise.&lt;/SPAN&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;SPAN&gt;atkrypto is one of the&amp;nbsp;Next20 startups&amp;nbsp;&amp;nbsp;being featured at&amp;nbsp;TM Forum's DTW Ignite in Copenhagen in June&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;If you will be at DTW24 come and talk to us about Cyber Security of SAP Data with Enterprise Blockchain.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/s-4hana-odata-api-s-is-it-time-for-a-quot-safety-belt-quot/ba-p/13704550"/>
    <published>2024-05-21T09:43:55.005000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/efficient-data-retrieval-and-ui-binding-to-value-help-using-batch-requests/ba-p/13686552</id>
    <title>Efficient Data Retrieval and UI Binding To Value Help: Using Batch Requests with OData in SAPUI5</title>
    <updated>2024-07-01T15:40:00.447000+02:00</updated>
    <author>
      <name>72593028</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/888833</uri>
    </author>
    <content>&lt;P&gt;Hi All,&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I have observed that there is limited content available regarding the process of sending batch requests from SAPUI5 applications to OData services, receiving the response, and subsequently binding the retrieved data to a Combo Box for value help&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;So in this Blog I would like to explain create a Combo Box using XML, Send a batch request from SAP UI5 and Bind the data to Combo Box for Value Help.&lt;/P&gt;&lt;P&gt;What is a batch Request?&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In SAP OData, a batch request is a mechanism for sending multiple HTTP requests as a single batch to the OData service endpoint. Instead of sending individual HTTP requests for each operation, such as read, create, update, or delete, you can group multiple operations into a single batch request.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step1- Creating Combo Box for drop down using XML&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;ComboBox id = 'idProductType' items="{path: '/'}" &amp;gt; " Path should be "/"
&amp;lt;items&amp;gt;
"product_type and product_name should be your entity type Properties from OData service 
&amp;lt;core:Item key="{product_type}" text="{product_name}"&amp;gt;&amp;lt;/core:Item&amp;gt;
&amp;lt;/items&amp;gt;
&amp;lt;/ComboBox&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step2- ODATA Entity Set&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="OdataService.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/130517i51815C3115499852/image-size/large?v=v2&amp;amp;px=999" role="button" title="OdataService.PNG" alt="OdataService.PNG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step-3 -Populating the data for Drop Down Values&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Drop Down Values.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/130518i24751E645695BBED/image-size/large?v=v2&amp;amp;px=999" role="button" title="Drop Down Values.PNG" alt="Drop Down Values.PNG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step4- Sending the BATCH request from UI5 Application.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;var oModel = new sap.ui.model.odata.v2.ODataModel("Service URL"); "Service URL will be the same configured in Manifest.Json

                var entitySet = ["/Your Entity Set name from ODATA"];
                var prodcutType = [ ];

                var oComboBox = this.byId("idProductType"); "Id from XML view

                var onSuccess = function (oData) {
                    console.log("Request successful", oData);
                    var aResponses = oData.results;
                    for (var i = 0; i &amp;lt; aResponses.length; i++) {
                        var oResponseData = aResponses[i];
                        productType = productType.concat(oResponseData);
                    }
                }

                "Create Json model for Combo Box
                var oModelComboBox = new sap.ui.model.json.JSONModel();
                oComboBox.setModel(oModelComboBox);

                oModelComboBox.setData(productType);

                "Error if Batch Request Fails
                var onError = function (oError) {
                    console.error("Error:", oError);
                };

                var mParameters = {
                    batchGroupId: "myBatchGroup",
                    success: onSuccess,
                    error: onError
                };
                oModel.read(entitySet, mParameters);
                oModel.submitChanges(mParameters);&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Best Regards,&lt;/P&gt;&lt;P&gt;Thulasiram&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/efficient-data-retrieval-and-ui-binding-to-value-help-using-batch-requests/ba-p/13686552"/>
    <published>2024-07-01T15:40:00.447000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/restricting-returned-fields-in-an-odata-service-for-expanded-entities/ba-p/13785878</id>
    <title>Restricting Returned Fields in an OData Service for Expanded Entities</title>
    <updated>2024-08-07T13:32:02.520000+02:00</updated>
    <author>
      <name>vbalko-claimate</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/178477</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vbalkoclaimate_0-1723030006944.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/147822i67A7E2203E254C75/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vbalkoclaimate_0-1723030006944.jpeg" alt="vbalkoclaimate_0-1723030006944.jpeg" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;When working with OData services, it’s often necessary to limit the amount of data returned by the service to improve performance and reduce payload size. This is particularly useful when dealing with expanded entities, where the potential for large amounts of data is significant. Here’s a concise guide on how to restrict returned fields in an OData service, especially for expanded entities.&lt;/P&gt;&lt;H1 id="toc-hId-893088840"&gt;Example OData Request&lt;/H1&gt;&lt;P class=""&gt;Below is an anonymized and simplified OData request that demonstrates how to filter and select specific fields, including those in an expanded entity, and ensures the response format is JSON:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;/sap/opu/odata4/sap/zui_xf_example_o4/srvd/sap/zsrv_xf_example/0001/ZFI_C_XF_EXAMPLE_H?$filter=example_id eq '${context.data.example_id}' and fiscal_year eq '${context.data.fiscal_year}'&amp;amp;$select=example_id,example_type,created_by,fiscal_year&amp;amp;$expand=_XFExampleDetails($select=company_code,amount_local,due_date,document_number)&amp;amp;$format=json&amp;amp;sap-client=100&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-825658054"&gt;Breakdown of the Request&lt;/H2&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Base Entity Filtering and Selection:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Filtering:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;The request filters the base entity (ZFI_C_XF_EXAMPLE_H) to only include entries where&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;example_id&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;equals&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;${context.data.example_id}&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;fiscal_year&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;equals&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;${context.data.fiscal_year}.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Selecting Specific Fields:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$select&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;parameter specifies that only certain fields (example_id,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;example_type,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;created_by,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;fiscal_year) should be included in the response.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;2. Expanding and Selecting Fields from Related Entities:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Expanding:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$expand&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;parameter is used to include related entities (_XFExampleDetails) in the response.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Selecting Specific Fields from Expanded Entities:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Within the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$expand&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;parameter, the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$select&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;clause specifies which fields from the expanded entity should be included (company_code,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;amount_local,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;due_date,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;document_number)&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;3. Specifying Response Format:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;Response Format:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;The&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$format=json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;parameter ensures the response is in JSON format, making it easier to handle in modern web applications.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-629144549"&gt;Example Output JSON&lt;/H2&gt;&lt;P class=""&gt;The following is an example of what the output JSON might look like for the above request:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "d": {
    "results": [
      {
        "example_id": "12345",
        "example_type": "Type1",
        "created_by": "User1",
        "fiscal_year": "2024",
        "_XFExampleDetails": {
          "results": [
            {
              "company_code": "1000",
              "amount_local": "5000",
              "due_date": "2024-12-31",
              "document_number": "1234567890"
            }
          ]
        }
      }
    ]
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-303548325"&gt;Focus on&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$expand&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$select&lt;/H1&gt;&lt;P class=""&gt;Using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$expand&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;parameter allows you to include related entities within the main entity's response. By pairing&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$expand&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$select, you can precisely control which fields from the related entities are included. This combination is powerful for optimizing the data returned by the service, ensuring you only retrieve necessary information, which can significantly enhance performance and readability of the payload.&lt;/P&gt;&lt;P class=""&gt;Here’s the key part of the request focusing on the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$expand&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;$select&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;parameters:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;$expand=_XFExampleDetails($select=company_code,amount_local,due_date,document_number)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;STRONG&gt;$expand&lt;/STRONG&gt;: This part ensures that the related entity&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;_XFExampleDetails&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;is included in the response.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;$select&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;within&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;STRONG&gt;$expand&lt;/STRONG&gt;: Specifies which fields from&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;_XFExampleDetails&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;should be included, thus filtering out unnecessary data and optimizing the response payload.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;DISCLAIMER: You can find this blog post on my other blog:&amp;nbsp;&lt;A href="https://medium.com/@vbalko/restricting-returned-fields-in-an-odata-service-for-expanded-entities-b66e68094fb9" target="_self" rel="nofollow noopener noreferrer"&gt;https://medium.com/@vbalko/restricting-returned-fields-in-an-odata-service-for-expanded-entities-b66e68094fb9&lt;/A&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/restricting-returned-fields-in-an-odata-service-for-expanded-entities/ba-p/13785878"/>
    <published>2024-08-07T13:32:02.520000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-restful-application-programming-model-odata-v2-api-deep-entity/ba-p/13796310</id>
    <title>ABAP RAP(RESTful Application Programming) Model OData V2 API Deep Entity</title>
    <updated>2024-08-19T08:36:43.771000+02:00</updated>
    <author>
      <name>MohamedMedhat</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4619</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog, We will learn how to create a simple RAP OData V2 API and use it to achieve a Deep entity set creation operation which is requested in lot of projects and Custom services especially in complex integration scenarios &lt;STRONG&gt;without need to Create normal CDS entity with selection&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;from DB Tables&lt;/STRONG&gt; . &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this example,&amp;nbsp; CDS Custom entity views for Header and Items , &lt;STRONG&gt;Unmanaged Behavior definition&lt;/STRONG&gt;, Service definition, Service Binding .&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Step #1 - &amp;gt;&lt;/STRONG&gt;&lt;/U&gt; &lt;EM&gt;&lt;STRONG&gt;Create&amp;nbsp;Custom Entity - Root Header&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom Entity - Root Header'
define root custom entity ZCE_R_Header
{
   key hdr_Key   : land1;
       hdr_field1: landx;
       hdr_field2: natio;
       
    _item : composition [1..*] of ZCE_I_Items ;    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step #2 - &amp;gt;&amp;nbsp;&lt;EM&gt;&lt;STRONG&gt;Create&amp;nbsp;Custom Entity - for Items&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Custom Entity - Items'
define custom entity ZCE_I_Items
{
  key hdr_Key      : land1;
  key itm_key      : bukrs;
      Company_name : butxt;
  
   _header : association to parent ZCE_R_Header on $projection.hdr_Key = _header.hdr_Key;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step #3&amp;nbsp;- &amp;gt; &lt;STRONG&gt;Right Click on Custom Entity ZCE_R_Header and Create Behavior Definition&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MohamedMedhat_0-1723901628430.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/153451iA5DF68E94992A5B8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MohamedMedhat_0-1723901628430.png" alt="MohamedMedhat_0-1723901628430.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step #4 -&amp;gt; &lt;STRONG&gt;Unmanaged Behaviour creation as below with Unmanaged Class implementation&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;unmanaged implementation in class zCL_bp_ce_r_header unique;
//strict ( 2 ); //Uncomment this line in order to enable strict mode 2. The strict mode has two variants (strict(1), strict(2)) and is prerequisite to be future proof regarding syntax and to be able to release your BO.

define behavior for ZCE_R_Header //alias &amp;lt;alias_name&amp;gt;
//late numbering
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  create;
  update;
  delete;
  field ( readonly : update ) hdr_Key;
  association _item { create; }
}

define behavior for ZCE_I_Items //alias &amp;lt;alias_name&amp;gt;
//late numbering
lock dependent by _header
authorization dependent by _header
//etag master &amp;lt;field_name&amp;gt;
{
  update;
  delete;
  field ( readonly ) hdr_Key,itm_key;
  association _header;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step #5 -&amp;gt; &lt;STRONG&gt;Create Behaviour Implementation Class Save it and Activate .&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Step #6 -&amp;gt; &lt;STRONG&gt;Implement Method cba_itm&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MohamedMedhat_0-1723902215388.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/153452i86F467BE05F5389B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MohamedMedhat_0-1723902215388.png" alt="MohamedMedhat_0-1723902215388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step #7 -&amp;gt;&amp;nbsp; &lt;STRONG&gt;Create Service Definition 'ZCE_R_Service_Defination'&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Defination'
define service ZCE_R_Service_Defination {
  expose ZCE_R_Header as header;
  expose ZCE_I_Items  as items;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step #8 -&amp;gt; &lt;STRONG&gt;Create Service Binding&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MohamedMedhat_0-1723902712844.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/153453iCE8535EFF4D1E9AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MohamedMedhat_0-1723902712844.png" alt="MohamedMedhat_0-1723902712844.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step #9 -&amp;gt; &lt;STRONG&gt;Publishing Service&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MohamedMedhat_0-1723902873431.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/153454i0A3AF3F1B9810B29/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MohamedMedhat_0-1723902873431.png" alt="MohamedMedhat_0-1723902873431.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step #10 -&amp;gt; &lt;STRONG&gt;Register and Activate SICF Node&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Step #11 -&amp;gt; &lt;STRONG&gt;Use below Json Payload - with Post Operation&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "hdr_Key"     : "T" ,
  "hdr_field1"  : "hdr_field1" ,
  "hdr_field2"  : "hdr_field2",
  "to_item" :
    [
      {
        "hdr_Key" : "01" ,
        "itm_key" : "01" ,
        "Company_name" : "Company_name1"
      },
      {
         "hdr_Key" : "02" ,
         "itm_key" : "02" ,
         "Company_name" : "Company_name2"
      }
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;&lt;FONT size="5"&gt;Conclusion :&amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;we Will Find Our Deep structure data inside&amp;nbsp;&lt;STRONG&gt;ENTITIES_CBA&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MohamedMedhat_0-1723924897676.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/153480iF541A686CE8B1A10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MohamedMedhat_0-1723924897676.png" alt="MohamedMedhat_0-1723924897676.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MohamedMedhat_1-1723924916335.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/153481i33B6DDC0CB099CCB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="MohamedMedhat_1-1723924916335.png" alt="MohamedMedhat_1-1723924916335.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-rap-restful-application-programming-model-odata-v2-api-deep-entity/ba-p/13796310"/>
    <published>2024-08-19T08:36:43.771000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-display-alv-grid-with-only-structure/ba-p/13864946</id>
    <title>How to display ALV GRID with only structure</title>
    <updated>2024-09-13T10:39:24.855000+02:00</updated>
    <author>
      <name>mark_fryu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/709977</uri>
    </author>
    <content/>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-display-alv-grid-with-only-structure/ba-p/13864946"/>
    <published>2024-09-13T10:39:24.855000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/customer-course-gw100-sap-gateway-building-odata-services-available-for-sap/ba-p/13877504</id>
    <title>Customer Course GW100 (SAP Gateway – Building OData Services) Available for SAP S/4HANA 2023</title>
    <updated>2024-09-25T15:23:21.691000+02:00</updated>
    <author>
      <name>StefanFell</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/4321</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;The customer course GW100 is retired and can no longer be booked as classroom. The learning journey will stay online.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The GW100 got a “technical update”, which means that all exercises are now running on the newest SAP S/4HANA available today. In addition, the slides now follow the newest design guidelines of SAP. So, welcome to this short blog post about the customer training &lt;A href="https://training.sap.com/course/GW100" target="_blank" rel="noopener noreferrer"&gt;GW100 (SAP Gateway – Building OData Services)&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;If you are more interested in a digital learning for SAP Gateway, please read my blog post:&lt;BR /&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/sap-learning-journey-building-odata-services-with-sap-gateway/ba-p/13623812" target="_blank"&gt;SAP Learning Journey – Building OData Services with SAP Gateway&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1049933667"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Starting in 2014, this is now the eighth incarnation of how to develop OData services with SAP Gateway. The course shows all parts of SAP Gateway, which are available since SAP NetWeaver Application Server 7.0 (SAP Gateway 2.0), as well as parts added up to SAP S/4HANA 2023. The whole bandwidth of SAP Gateway covering all releases is shown.&lt;/P&gt;&lt;P&gt;The units in the current version are the following:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;SAP Gateway Overview&lt;/LI&gt;&lt;LI&gt;OData Overview&lt;/LI&gt;&lt;LI&gt;SAP Gateway Service Implementation&lt;/LI&gt;&lt;LI&gt;SAP Gateway Service Generation&lt;/LI&gt;&lt;LI&gt;SAP Gateway Service Redefinition&lt;/LI&gt;&lt;LI&gt;SAP Gateway and CDS Views&lt;/LI&gt;&lt;LI&gt;SAP Gateway Hub Functionalities&lt;/LI&gt;&lt;LI&gt;Advanced OData Options&lt;/LI&gt;&lt;LI&gt;SAP Gateway Security&lt;/LI&gt;&lt;LI&gt;Further Information&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;If customers are interested, they can order a &lt;A href="https://training.sap.com/content/CSTEN" target="_blank" rel="noopener noreferrer"&gt;customer specific&lt;/A&gt; version of the course including only those topics suitable for their release or purpose.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-853420162"&gt;&lt;STRONG&gt;System Landscape&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Let’s start with the system release: SAP S/4HANA 2023 FPS02. Our system landscape – we call it universal target – is used in many technology courses and offers full access for the participants from the SAP Fiori launchpad (FLP) in the browser down to SAP HANA on the SUSE Linux Enterprise server (SLES). Everything is set up following the newest guidelines of SAP so that it can really act as a template for customers.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="GW100 System Landscape (Screenshot from System Setup Guide)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/171204i5EEB1822F71B10B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="GW100_24_BlogImage1.jpg" alt="GW100 System Landscape (Screenshot from System Setup Guide)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;GW100 System Landscape (Screenshot from System Setup Guide)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;In addition, we offer an instance of the SAP Business Application Studio (BAS) to show the consumption of OData services. If you want to know more about this topic, check out our courses for &lt;A href="https://training.sap.com/trainingpath/Database+&amp;amp;+Technology-Development-SAP+Fiori" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori development&lt;/A&gt;.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-656906657"&gt;&lt;STRONG&gt;Example: Business Services&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;As an example from the material, here a shorten excerpt about defining business services.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Business Services: OData V2 and V4 (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/171206i0EA93B72943D0EDA/image-size/large?v=v2&amp;amp;px=999" role="button" title="GW100_24_BlogImage2.jpg" alt="Business Services: OData V2 and V4 (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Business Services: OData V2 and V4 (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;In the area of business services, a service definition exposes CDS Views as a generic service. A service binding then marks it as a special kind of service. You can create an OData V2 or V4 service for API- or UI-usage. Service definitions and bindings are created in the ADT, the generated OData services are registered in transaction /IWFND/MAINT_SERVICE or /IWFND/V4_ADMIN respectively.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="How to Create a Service Definition and Binding (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/171205i2E15EC5A387727F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="GW100_24_BlogImage3.jpg" alt="How to Create a Service Definition and Binding (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;How to Create a Service Definition and Binding (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Service definitions and bindings are ABAP repository objects and a substantial part of the business services. They can only be created and edited in the ADT. In the first step, the service definition just defines the name of the service. The CDS views are added later in the source code.&lt;/P&gt;&lt;P&gt;In the second step, the service binding refers to the service definition and sets the binding type, which are mainly communication protocols.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Service Definition and Binding Correlation (Screenshot from GW100)" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/171207iDE467A75374B5024/image-size/large?v=v2&amp;amp;px=999" role="button" title="GW100_24_BlogImage4.jpg" alt="Service Definition and Binding Correlation (Screenshot from GW100)" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Service Definition and Binding Correlation (Screenshot from GW100)&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;By exposing a CDS View in a service definition, the name of the entity set can be defined. For the entity type, "Type" is automatically appended to the entity set name.&lt;/P&gt;&lt;P&gt;The entity set names and navigation properties based on the associations in the CDS views are visible in the service binding on the right. For OData V2, multiple versions of a service definition can be added to a service binding visible on the left. For OData V4, multiple service definitions can be added to one service binding to allow cross-service navigation.&lt;/P&gt;&lt;H2 id="toc-hId-460393152"&gt;&lt;BR /&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;If you have read so far, it seems that you are really thinking about attending the course. Don’t hesitate and check out the physical and virtual events we offer:&lt;/P&gt;&lt;P&gt;&lt;A href="https://training.sap.com/course/GW100" target="_blank" rel="noopener noreferrer"&gt;https://training.sap.com/course/GW100&lt;/A&gt;&lt;/P&gt;&lt;P&gt;If you are more interested in a digital learning, please visit &lt;A href="https://learning.sap.com" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com&lt;/A&gt;. Some parts of the GW100 are already available free-of-charge:&lt;/P&gt;&lt;P&gt;&lt;A href="https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/building-odata-services-with-sap-gateway&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For any other questions around the offerings of SAP Learning Services, please jump to our community page and get in contact with us:&lt;/P&gt;&lt;P&gt;&lt;A href="https://pages.community.sap.com/topics/training-certification" target="_blank" rel="noopener noreferrer"&gt;https://pages.community.sap.com/topics/training-certification&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I hope even if you won’t attend the GW100 in any kind, you found some useful information around SAP Gateway in this blog post.&lt;/P&gt;&lt;P&gt;Happy learning&lt;BR /&gt;Stefan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/customer-course-gw100-sap-gateway-building-odata-services-available-for-sap/ba-p/13877504"/>
    <published>2024-09-25T15:23:21.691000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/financial-management-blog-posts-by-sap/fscm-collections-extend-manage-customer-line-items-app-f0711-odata-mpc-amp/ba-p/13890031</id>
    <title>[FSCM Collections]: Extend Manage Customer Line Items(App F0711) – OData MPC &amp; DPC Code Enhancement</title>
    <updated>2024-10-06T22:52:27.703000+02:00</updated>
    <author>
      <name>robinthakral</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/801057</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1180650176"&gt;&lt;STRONG&gt;INTRODUCTION&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;We have been given a requirement to add a set of custom fields to be extended in &lt;EM&gt;&lt;STRONG&gt;Manage Customer Line Items&lt;/STRONG&gt; &lt;/EM&gt;(App ID &lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('F0711')/S22OP" target="_blank" rel="noopener nofollow noreferrer"&gt;F0711&lt;/A&gt;) – Credit Management.&lt;/P&gt;&lt;P&gt;Challenge: The current system is an S4 HANA system version 2021, where CFL (Custom Fields and Logic) has been introduced but isn't available for the required App. Given is a SEGW Project with &lt;A href="https://help.sap.com/docs/SAP_NETWEAVER_AS_ABAP_752/cc0c305d2fab47bd808adcad3ca7ee9d/820b24ce35c745bb9e0fb3a6e8d6dbd4.html?version=7.52.4&amp;amp;locale=en-US" target="_blank" rel="noopener noreferrer"&gt;OData Services based on a Mapped Data Source (MDS)&lt;/A&gt;. Redefinition w/ Extension of the project isn't possible, and we should not Overwrite the Std. Project.&lt;/P&gt;&lt;P&gt;Solution (&lt;FONT color="#FF0000"&gt;Not a Clean-Core&amp;nbsp;&lt;/FONT&gt;&lt;span class="lia-unicode-emoji" title=":disappointed_face:"&gt;😞&lt;/span&gt;)&amp;nbsp;-This app is an OData Service application, so enhancing the MPC &amp;amp; DPC will be able to view the fields but can’t sort &amp;amp; filter the list as they are not part of the standard mapped CDS view and can’t be handled in SADL query options.&lt;/P&gt;&lt;P&gt;In this blog post, we will cover the required steps:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Extend the DDIC Structure, CDS View (if any) – Database Layer&lt;/LI&gt;&lt;LI&gt;Enhance the Service MPC (Model) – w/ BADI or Implicit (&lt;FONT color="#FF0000"&gt;not recommended&lt;/FONT&gt;) Enhancement&lt;/LI&gt;&lt;LI&gt;Enhance the Service DPC (Data) – w/ BADI or Implicit (&lt;FONT color="#FF0000"&gt;not recommended&lt;/FONT&gt;) Enhancement&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;to handle the requirement.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-984136671"&gt;&lt;STRONG&gt;MAIN CONTENT&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;From the Fiori Application Console (F12 / Cntrl+Shift+I) or Fiori Library, get the service name to open the respective SEGW Project and look for the Responsible Entity.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Entity Types.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/176035i5182723D47C0AF24/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Entity Types.png" alt="Entity Types.png" /&gt;&lt;/span&gt;&amp;nbsp;You can check the Mapping for Ease&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Items Mapping I_ARLINEITEM.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/176036i2ECD2330F7841A1E/image-size/small?v=v2&amp;amp;px=200" role="button" title="Items Mapping I_ARLINEITEM.png" alt="Items Mapping I_ARLINEITEM.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Open the DDIC Structure and look for the Persistent/Transient Include for our required, but here we found SQL Structure for CDS View itself.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Include Structure.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/176039i0A86FDA7B6F60C35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Include Structure.png" alt="Include Structure.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;So, let's better extend the required custom fields in there with the help of an APPEND structure.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AppendStructure.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/176040iAF65697AEFCB97F7/image-size/small?v=v2&amp;amp;px=200" role="button" title="AppendStructure.png" alt="AppendStructure.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Let’s try to find some BADI with Enhancement Spots first for OData, which we didn’t find for our App scenario. Hence, proceeded with Implicit Enhancement at MPC_EXT – Method DEFINE.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;DATA: lo_entity_type TYPE REF TO /iwbep/if_mgw_odata_entity_typ, "#EC NEEDED
      lo_property    TYPE REF TO /iwbep/if_mgw_odata_property, "#EC NEEDED
      lv_text_ele    TYPE textpoolky,
      lv_char        TYPE i.

" Map the Entity Type
  lo_entity_type = model-&amp;gt;get_entity_type( iv_entity_name = 'Item'  ).

" Loop For no of Custom fields
DO 2 TIMES.                                            "#EC CI_NESTED
    IF sy-index = 1.
      lo_entity_type-&amp;gt;create_property( 
                    EXPORTING 
                      iv_property_name  = 'CollectionNotes1'
                      iv_abap_fieldname = 'ZZ_COMMENT1'
                    RECEIVING 
                      ro_property = DATA(lo_pro_item1) ). " LO_PROPERTY
      lv_text_ele = |CN1| . " Literal for Text-Element
    ELSE.
      lo_entity_type-&amp;gt;create_property( 
                    EXPORTING 
                      iv_property_name  = 'CollectionNotes2'
                      iv_abap_fieldname = 'ZZ_COMMENT2'
                    RECEIVING 
                      ro_property = lo_pro_item1 ). " LO_PROPERTY
      lv_text_ele = |CN2| .
    ENDIF.

    lv_char = 128.

" Create the Property Details
    lo_pro_item1-&amp;gt;set_type_edm_string( ).
    lo_pro_item1-&amp;gt;set_maxlength( lv_char ).
    lo_pro_item-&amp;gt;set_nullable( abap_true ).
    lo_pro_item1-&amp;gt;set_updatable( abap_true ).
    lo_pro_item1-&amp;gt;set_sortable( abap_false ). 
    lo_pro_item1-&amp;gt;set_filterable( abap_false ).

" When to Map Front-End Labels different from ABAP field's DATA ELEMENT.
" Create Text CN1 &amp;amp; CN2 in Custom Class
    lo_pro_item1-&amp;gt;set_label_from_text_element(
      EXPORTING
        iv_text_element_symbol = lv_text_ele
        iv_text_element_container zfscmcl_customer_line_comment=&amp;gt;gc_class_name " Constant - Custom Class Name 
**         io_object_ref          = me  " when Text-elements of MPC_EXT is used
        ).
    lo_pro_item1-&amp;gt;set_internal_type( 'C' ).
    lo_pro_item1-&amp;gt;set_internal_length( lv_char ). "( '128' ).
    CLEAR: lv_text_ele.
  ENDDO.

cl_afle_mpc_ext_utility_class=&amp;gt;adjust_model( model ). "AFLE​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Adjusting the Model is necessary to handle action redefinition/addition. The front end can be handled by the Extension/Adaptation Project (if needed).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;All the Data handling for the enhanced fields must be handled in this class methods to related entities &amp;amp; entity sets. Now Field values can be database stored or Run-time calculated.&amp;nbsp;&lt;SPAN&gt;Here,&amp;nbsp;&lt;/SPAN&gt;Values are fetched at the Item level first. Values for multiple or single records have been fetched. So, create Enhancement at ITEMSET_GET_ENTITYSET:&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;************************************************************************
"Create Key Field Structure in Custom Class
  types:
    BEGIN OF gty_cli_key ,
        bukrs TYPE bukrs,
        belnr TYPE belnr_d,
        gjahr TYPE gjahr,
        buzei TYPE buzei,
        kunnr TYPE kunnr,
      END OF gty_cli_key .
  types:
    gtt_cli_key TYPE SORTED TABLE OF gty_cli_key WITH UNIQUE KEY bukrs belnr gjahr buzei .

************************************************************************
" In GET_ENTITYSET
    lt_cli_key = VALUE #( FOR ls_entity IN et_entityset 
                        WHERE ( companycode IS NOT INITIAL "#EC CI_STDSEQ
                                AND accountingdocument IS NOT INITIAL )
                              ( bukrs = ls_entity-companycode
                                belnr = ls_entity-accountingdocument
                                buzei = ls_entity-accountingdocumentitem
                                gjahr = ls_entity-fiscalyear )
                         ).
 
    IF lt_cli_key IS NOT INITIAL.
"Custom Method to process the data.
      DATA(lt_comments) = zfscmcl_customer_line_comment=&amp;gt;get_comments(  
                               it_cli_key = lt_cli_key ).
      UNASSIGN &amp;lt;ls_entity&amp;gt;.
      LOOP AT lt_comments ASSIGNING FIELD-SYMBOL(&amp;lt;ls_comments&amp;gt;).
        ASSIGN et_entityset[ 
                     companycode = &amp;lt;ls_comments&amp;gt;-company_code "#EC CI_STDSEQ
                     accountingdocument     = &amp;lt;ls_comments&amp;gt;-document_number
                     accountingdocumentitem = &amp;lt;ls_comments&amp;gt;-line_item_number
                     fiscalyear             = &amp;lt;ls_comments&amp;gt;-fiscal_year     
                   ] TO &amp;lt;ls_entity&amp;gt;.
        
          IF &amp;lt;ls_entity&amp;gt; IS ASSIGNED.
            &amp;lt;ls_entity&amp;gt;-zz_comment1 = &amp;lt;ls_comments&amp;gt;-comment1.
            &amp;lt;ls_entity&amp;gt;-zz_comment2 = &amp;lt;ls_comments&amp;gt;-comment2.
            UNASSIGN &amp;lt;ls_entity&amp;gt;.
           ENDIF.
      ENDLOOP.
      IF &amp;lt;ls_comments&amp;gt; IS ASSIGNED. UNASSIGN &amp;lt;ls_comments&amp;gt;. ENDIF.
      CLEAR: lt_comments.
    ENDIF.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;4. Now check the fields in Adapt Settings. Better Clear Caches &amp;amp; Refresh Service Metdata with:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;/IWBEP/CACHE_CLEANUP&lt;/LI&gt;&lt;LI&gt;IWFND/CACHE_CLEANUP&lt;/LI&gt;&lt;LI&gt;Refresh Metadata Layer at IWFND/MAINT_SERVICE&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/financial-management-blog-posts-by-sap/fscm-collections-extend-manage-customer-line-items-app-f0711-odata-mpc-amp/ba-p/13890031"/>
    <published>2024-10-06T22:52:27.703000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/odata-versioning-in-sap-streamlining-parallel-development-for-backend-and/ba-p/13904545</id>
    <title>OData Versioning in SAP - Streamlining Parallel Development for Backend and Frontend Teams</title>
    <updated>2024-10-24T11:43:17.153000+02:00</updated>
    <author>
      <name>AbhiDaggubati</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/12172</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;OData&lt;/STRONG&gt; &lt;STRONG&gt;(Open Data Protocol)&lt;/STRONG&gt; versioning refers to managing the evolution of an OData service over time without disrupting existing clients. As services grow and change, updates may be necessary for various reasons, such as adding new features, enhancing performance, or fixing issues. OData versioning ensures these updates are implemented in a way that maintains compatibility with existing clients.&lt;/P&gt;&lt;P&gt;Every ODATA Service will have version by default it is 1 we can increment the version by 1,2 and 3 and so on. Changes&amp;nbsp;are noted as version Initial Version -&amp;gt; Version 1 -&amp;gt; Version 2 -&amp;gt; Version3&lt;/P&gt;&lt;P&gt;Backend and frontend teams can develop independently. Backend can implement business changes and release them under a version (e.g., version 1), allowing the frontend team to catch up later.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="190px" height="50px"&gt;&lt;P&gt;&lt;STRONG&gt;Back End &lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="190px" height="50px"&gt;&lt;P&gt;&lt;STRONG&gt;Communication&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="190px" height="50px"&gt;&lt;P&gt;&lt;STRONG&gt;Front End&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="190px" height="104px"&gt;&lt;P&gt;Initial Version&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="190px" height="104px"&gt;&lt;P&gt;Communication Happens through URI and URI doesn’t change&lt;/P&gt;&lt;/TD&gt;&lt;TD width="190px" height="104px"&gt;&lt;P&gt;Initial Version&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="190px" height="242px"&gt;&lt;P&gt;Version 1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="190px" height="242px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="190px" height="242px"&gt;&lt;P&gt;They can complete their work and check with version 1 and 2 if we have and we don’t need versions after few days we can combine all versions in 1 and keep in one.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;SEGW -&amp;gt;&lt;/STRONG&gt;&lt;STRONG&gt;RUNTIME ARTIFACTS -&amp;gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;DPC CLASS -&amp;gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;MPC CLASS&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Registered Service/ Technical Service name.&lt;/P&gt;&lt;P&gt;Registered Model / Technical Model name.&lt;/P&gt;&lt;P&gt;These two-play major role in achieving OData versioning.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Technical Model Name -&amp;gt;&lt;/STRONG&gt;&amp;nbsp;Technical Service Name – Version 1&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Technical Service Name – Version 2&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Technical Service Name – Version 3&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Best Practices: &lt;/STRONG&gt;In OData Service whatever design we do technical service name should be same if we make change in technical service name automatically it will change OData service URI.As the Technical Service Name remains consistent, the URI doesn’t change.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt; If we have business scenario with 3 versions keep all 3 versions technical service names same.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Technical Model Name -&amp;gt;&lt;/STRONG&gt; Technical Service Name – Version 1&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;DPC_EXT&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Technical Service Name – Version 2&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;DPC_EXT -2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Technical Service Name – Version 3&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;DPC_EXT – 3&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Logically we will have different DPC_EXT classes for versioning we are going to copy exiting DPC_EXT class and make it as a 1,2,3 only class name changes.&lt;/P&gt;&lt;P&gt;To register the services, create, change, delete we have a transaction /IWBEP/REG_SERVICE&lt;/P&gt;&lt;P&gt;To register the model, we have a transaction /IWBEP/REG_MODEL&lt;/P&gt;&lt;P&gt;Note: Model we are not going to change much.&lt;/P&gt;&lt;P&gt;Go to SEGW create a project with entity type and entity sets&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_0-1729269008153.png" style="width: 675px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181020iA05BDE0905E33D0E/image-dimensions/675x110?v=v2" width="675" height="110" role="button" title="AbhiDaggubati_0-1729269008153.png" alt="AbhiDaggubati_0-1729269008153.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on save and generate project&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_1-1729266824601.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180984i9A70515F6403DBFE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_1-1729266824601.png" alt="AbhiDaggubati_1-1729266824601.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Runtime artifacts will be generated&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_2-1729266824603.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180983i9DB6B66E82339B4A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_2-1729266824603.png" alt="AbhiDaggubati_2-1729266824603.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Double click on the DPC_EXT and go to the methods select the entity set required and redefine the method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_3-1729266824605.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180987i0F9F88F763CA5983/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_3-1729266824605.png" alt="AbhiDaggubati_3-1729266824605.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once we redefine the method it will be as below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_4-1729266824607.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180988i81AFDC74E69879D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_4-1729266824607.png" alt="AbhiDaggubati_4-1729266824607.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Double click on the redefined method and write the code&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_5-1729266824610.png" style="width: 676px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180986i7EE283E6B8FE9C67/image-dimensions/676x121?v=v2" width="676" height="121" role="button" title="AbhiDaggubati_5-1729266824610.png" alt="AbhiDaggubati_5-1729266824610.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To register the service, we need use transaction code /IWFND/MAINT_SERVICE and execute.&lt;/P&gt;&lt;P&gt;Click on Add Service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_6-1729266824613.png" style="width: 672px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180990iA44BCF795C7DB47E/image-dimensions/672x96?v=v2" width="672" height="96" role="button" title="AbhiDaggubati_6-1729266824613.png" alt="AbhiDaggubati_6-1729266824613.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Specify Gateway system and Technical Service Name and click on Get Services&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_7-1729266824615.png" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180991i593322F653904CE9/image-dimensions/571x140?v=v2" width="571" height="140" role="button" title="AbhiDaggubati_7-1729266824615.png" alt="AbhiDaggubati_7-1729266824615.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the Technical Service and click on Add selected service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_8-1729266824616.png" style="width: 491px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180989iEDC8FA961B64486E/image-dimensions/491x80?v=v2" width="491" height="80" role="button" title="AbhiDaggubati_8-1729266824616.png" alt="AbhiDaggubati_8-1729266824616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the Technical Service Name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_9-1729266824617.png" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180992i759B42A02B46DF45/image-dimensions/687x55?v=v2" width="687" height="55" role="button" title="AbhiDaggubati_9-1729266824617.png" alt="AbhiDaggubati_9-1729266824617.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on SAP Gateway Client&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_10-1729266824620.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180993i2011CF5C4B82883A/image-dimensions/697x121?v=v2" width="697" height="121" role="button" title="AbhiDaggubati_10-1729266824620.png" alt="AbhiDaggubati_10-1729266824620.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the entity set and execute.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_11-1729266824625.png" style="width: 715px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180994i53DCC87F65601092/image-dimensions/715x188?v=v2" width="715" height="188" role="button" title="AbhiDaggubati_11-1729266824625.png" alt="AbhiDaggubati_11-1729266824625.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Fetching Records with Different Versions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using OData URI parameters (e.g., $Count), it is possible to test different versions and fetch different numbers of records.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_12-1729266824633.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180997i3A4DB8C2A27ACF4D/image-dimensions/657x321?v=v2" width="657" height="321" role="button" title="AbhiDaggubati_12-1729266824633.png" alt="AbhiDaggubati_12-1729266824633.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10 Rows are fetched in V=1 using URI option&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_13-1729266824635.png" style="width: 594px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180996i90ED21FDCF04E5E3/image-dimensions/594x144?v=v2" width="594" height="144" role="button" title="AbhiDaggubati_13-1729266824635.png" alt="AbhiDaggubati_13-1729266824635.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Copying Technical service Version1 to Version 2&lt;/P&gt;&lt;P&gt;Example: In version 2 we had more records to be fetched, and we can modify code in Version2 DPC_EXT class that is possible.&lt;/P&gt;&lt;P&gt;Go to SE24 and specify DPC_EXT class name and click on Copy Class/Interface&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_14-1729266824637.png" style="width: 560px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180995iED41EDCBCC16906C/image-dimensions/560x147?v=v2" width="560" height="147" role="button" title="AbhiDaggubati_14-1729266824637.png" alt="AbhiDaggubati_14-1729266824637.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select entity set and double click on it&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_15-1729266824641.png" style="width: 603px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180998i9BAC7A236B305827/image-dimensions/603x202?v=v2" width="603" height="202" role="button" title="AbhiDaggubati_15-1729266824641.png" alt="AbhiDaggubati_15-1729266824641.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In version 1. I had fetched up to 10 rows only and now in our version 2 I had just modified code&lt;/P&gt;&lt;P&gt;With a small change fetching up to 20 rows.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_16-1729266824644.png" style="width: 624px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/180999iDB55372418420891/image-dimensions/624x172?v=v2" width="624" height="172" role="button" title="AbhiDaggubati_16-1729266824644.png" alt="AbhiDaggubati_16-1729266824644.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Same as above we need to maintain our service and now, we will be able to see two versions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_17-1729266824647.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181000i8A42E5D6D7F746B5/image-dimensions/602x140?v=v2" width="602" height="140" role="button" title="AbhiDaggubati_17-1729266824647.png" alt="AbhiDaggubati_17-1729266824647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the service and click on SAP Gateway Client.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_18-1729266824648.png" style="width: 637px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181002i58C102AC276238DC/image-dimensions/637x142?v=v2" width="637" height="142" role="button" title="AbhiDaggubati_18-1729266824648.png" alt="AbhiDaggubati_18-1729266824648.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now we can observe our URI with V=2 as below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_19-1729266824650.png" style="width: 632px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181001i78FBE05D1AB99CA2/image-dimensions/632x120?v=v2" width="632" height="120" role="button" title="AbhiDaggubati_19-1729266824650.png" alt="AbhiDaggubati_19-1729266824650.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on Execute by selecting URI Option $ count in V=2 and processed records are 20&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_20-1729266824652.png" style="width: 581px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181003i595DD4F15474FEAD/image-dimensions/581x157?v=v2" width="581" height="157" role="button" title="AbhiDaggubati_20-1729266824652.png" alt="AbhiDaggubati_20-1729266824652.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Structural changes in ODATA SEGW&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SEGW -&amp;gt; PROJECT 1 ----&amp;gt; Technical Model Name1&lt;/P&gt;&lt;P&gt;SEGW -&amp;gt; PROJECT 2 ----&amp;gt; Technical Model Name2&lt;/P&gt;&lt;P&gt;Suppose there is a structure change in initial version has 4 fields and version 2 has 3 fields only according to requirement.&lt;/P&gt;&lt;P&gt;If we copy project 1 to project 2 also with separate model names will be generated also still, we Should keep technical service name same&amp;nbsp;to ensure consistency.&lt;/P&gt;&lt;P&gt;Go to SEGW Select the Project and click on copy project&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_21-1729266824656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181007i2A1FBF9FE821D510/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_21-1729266824656.png" alt="AbhiDaggubati_21-1729266824656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A new project will be copied from original source project.&lt;/P&gt;&lt;P&gt;Sample requirement previous Entity type we had 4 fields no we need to keep only 3 select the field and click on remove&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_22-1729266824659.png" style="width: 684px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181006i0970D399CE12F700/image-dimensions/684x135?v=v2" width="684" height="135" role="button" title="AbhiDaggubati_22-1729266824659.png" alt="AbhiDaggubati_22-1729266824659.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once field is removed click on save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_23-1729266824662.png" style="width: 680px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181004i528552A27858997B/image-dimensions/680x104?v=v2" width="680" height="104" role="button" title="AbhiDaggubati_23-1729266824662.png" alt="AbhiDaggubati_23-1729266824662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on Generate Project&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_24-1729266824663.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181010iA3C624B3F4600C1B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_24-1729266824663.png" alt="AbhiDaggubati_24-1729266824663.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Always Technical service name should be same as Initial Version 1and we need to mention version number as well.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_25-1729266824666.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181008iE6EA5A11CA88449E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_25-1729266824666.png" alt="AbhiDaggubati_25-1729266824666.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check Runtime Artifacts all are copied by default all will be copied just a cross-check would be helpful sometimes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_26-1729266824668.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181009iC3119F6F08A22A7E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_26-1729266824668.png" alt="AbhiDaggubati_26-1729266824668.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the DPC_EXT and click on it&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_27-1729266824670.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181013i40592B5829C7947F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_27-1729266824670.png" alt="AbhiDaggubati_27-1729266824670.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the method and go to the required entity set and redefine the method.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Best Practices: &lt;/STRONG&gt;When copying a project or making changes to the entity structure, ensure that custom methods are redefined again.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_28-1729266824672.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181012i29C3330E1348D9EE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AbhiDaggubati_28-1729266824672.png" alt="AbhiDaggubati_28-1729266824672.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the custom method I am adding same code with slight modification over fetching&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_29-1729266824674.png" style="width: 682px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181011i41F26775995DE961/image-dimensions/682x81?v=v2" width="682" height="81" role="button" title="AbhiDaggubati_29-1729266824674.png" alt="AbhiDaggubati_29-1729266824674.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Same as above we need to maintain our service and now, we will be able to see two versions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_30-1729266824677.png" style="width: 682px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181014iDFA3AF6BD27C0AF9/image-dimensions/682x82?v=v2" width="682" height="82" role="button" title="AbhiDaggubati_30-1729266824677.png" alt="AbhiDaggubati_30-1729266824677.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select the service and click on SAP Gateway Client.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_31-1729266824678.png" style="width: 704px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181015iDCC7BFE2C9EC5E05/image-dimensions/704x157?v=v2" width="704" height="157" role="button" title="AbhiDaggubati_31-1729266824678.png" alt="AbhiDaggubati_31-1729266824678.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now we can observe our URI with V=3 as below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_32-1729266824680.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181016i47AEA88BB779F09A/image-dimensions/702x137?v=v2" width="702" height="137" role="button" title="AbhiDaggubati_32-1729266824680.png" alt="AbhiDaggubati_32-1729266824680.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on Execute by selecting URI Option $ count in V=3 and processed records are 30.&lt;/P&gt;&lt;P&gt;This versioning method allows you to manage changes efficiently, ensuring compatibility and facilitating independent development between teams.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more details, please follow the below development topic pages&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://pages.community.sap.com/topics/abap" target="_blank" rel="noopener noreferrer"&gt;ABAP Development | SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/OData/pd-p/551580658536717501828021060147962" target="_blank"&gt;OData - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/c-khhcw49343/NW+ABAP+Gateway+%252528OData%252529/pd-p/181161894649260056016734803547327" target="_blank"&gt;NW ABAP Gateway (OData) - SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Questions, comments, or further details required? Use the Comments section below.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;Follow my profile Abhilash Daggubati for similar blog posts.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks All&amp;nbsp;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AbhiDaggubati_2-1729273499419.png" style="width: 13px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/181067iB4CAA7B64416D5B9/image-dimensions/13x13?v=v2" width="13" height="13" role="button" title="AbhiDaggubati_2-1729273499419.png" alt="AbhiDaggubati_2-1729273499419.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/odata-versioning-in-sap-streamlining-parallel-development-for-backend-and/ba-p/13904545"/>
    <published>2024-10-24T11:43:17.153000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-enhance-system-generated-odata-service-in-sap-bw4hana/ba-p/13940273</id>
    <title>How to enhance system generated ODATA service in SAP BW4HANA</title>
    <updated>2024-11-22T10:45:03.656000+01:00</updated>
    <author>
      <name>yogeswara_adapa</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/251873</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Overview:&lt;/STRONG&gt; This blog will guide you through the steps to enhance the system generated OData service In BW4HANA.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites: &lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP BW4HANA - SAP BW Query&lt;/LI&gt;&lt;LI&gt;SAP BW4HANA – OData Services&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In BW4HANA Odata service can be generated automatically from BW query by clicking checkbox “By Odata”, this service is then can be activated in any SAP Gateway system and consumed from there.&lt;/P&gt;&lt;P&gt;In case of any requirements to enhance the system generated service below steps can be followed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Steps:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Step 1: Generate OData service from BW Query.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture1.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191870iD2098118C9137E03/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture1.png" alt="Picture1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 2: Create a project in t-code SEGW. Please remember &amp;lt;Project Name&amp;gt;_SRV is going to be the new service name, so please name the project accordingly.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191871iE24979FD442A07F1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture2.png" alt="Picture2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 3: Right click on the Data Model and click on “Redefine” -&amp;gt; “OData Service (SAP GW)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture3.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191872iD3748E06B43ECDDE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture3.png" alt="Picture3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 4: In this screen it will ask for a service where we need to select the system generated service that needs to be enhanced and click “Next”&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture4.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191873iCB18899C8C6A012C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture4.png" alt="Picture4.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;Step 5: Click Select all and click on Finish&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture5.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191874i1E5F01ED71D0E45B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture5.png" alt="Picture5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture5-2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191876i47B05D876238499D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture5-2.png" alt="Picture5-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 6: Enhance the Result set with new field and Save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture6.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191877iF66682AB83CF504F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture6.png" alt="Picture6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 7: Right click on project and click on “Generate Runtime”&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture7.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191878i18F888FCE1DEB1F9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture7.png" alt="Picture7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Runtime artifacts will be generated like shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture7-2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191879i34BBF193B09902F8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture7-2.png" alt="Picture7-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 8: Go to DPC_EXT (Data provider extended class)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture8.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191880iD0A7F11CC76AC99B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture8.png" alt="Picture8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Select GET_ENTITYSET method and click on Redefine button&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture8-2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191881i4177F7EC8A8CF312/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture8-2.png" alt="Picture8-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 9: Write the logic to populate the newly added field here. Super class get_entityset code will be shown by default, start the new logic after the default code. Please note that this code will be executed for each and every row in output.&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture9.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191883i7A7EB7060FF5B1C6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture9.png" alt="Picture9.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture9-2.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191884i187297CCCE5456A7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture9-2.png" alt="Picture9-2.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture9-3.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191885i342F64E1168D9F3C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture9-3.png" alt="Picture9-3.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;Step 10: Test the output of OData service.&lt;/P&gt;&lt;P&gt;Go to TCODE /IWFND/GW_CLIENT, give the URL in Request URI and click on execute.&lt;/P&gt;&lt;P&gt;Validate the output with written logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture10.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191886i551824CBB0884F05/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Picture10.png" alt="Picture10.png" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-enhance-system-generated-odata-service-in-sap-bw4hana/ba-p/13940273"/>
    <published>2024-11-22T10:45:03.656000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/steps-to-replace-odata-in-business-application-studio-ui5-extension-project/ba-p/13951391</id>
    <title>Steps to Replace OData in Business Application Studio UI5 Extension Project</title>
    <updated>2024-12-02T17:35:04.959000+01:00</updated>
    <author>
      <name>bhaskar_india</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/575081</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;How to change OData service when using BAS Extension Project for Standard Apps&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;U&gt;Background&lt;/U&gt;&lt;/STRONG&gt;: Sometimes, standard FIORI apps cannot be extended via BAS Adaptation Project. This limitation arises if the app contains synchronous views. In such cases, you may need an alternative approach to customize the app effectively.&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;U&gt;Requirement:&lt;/U&gt;&lt;/STRONG&gt; The standard app ‘Transfer Stock - Cross-Plant’, includes buttons to transfer stock between plants. My requirement is to customize the app to grey out the buttons based on the plant category.&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;U&gt;Solution:&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This standard app uses OData service MMIM_MATERIAL_DATA_SRV. To implement the required changes, I created a custom OData service ZMMIM_MATERIAL_DATA_SRV, based on the standard service with an additional field. While the creation of this service is beyond the scope of this blog, I will focus on integrating it into the app.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The buttons I customized are highlighted in the below image.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_0-1732844523656.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196648i18D3C28EE16B1E3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_0-1732844523656.png" alt="bhaskar_india_0-1732844523656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Image source: &lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('F1957')/S21OP" target="_blank" rel="noopener nofollow noreferrer"&gt;https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('F1957')/S21OP&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Steps to Implement the Customization&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;1. Start by opening the BAS tool and selecting the Adaptation Project option.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_1-1732844523663.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196649iD08943FEA02339A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_1-1732844523663.png" alt="bhaskar_india_1-1732844523663.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_2-1732844523668.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196647i6DD4D91B295DF1C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_2-1732844523668.png" alt="bhaskar_india_2-1732844523668.png" /&gt;&lt;/span&gt;2. Fill in the necessary details for the project setup and proceed to the next step.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_3-1732844523673.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196650i4779B5EDBF7AA333/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_3-1732844523673.png" alt="bhaskar_india_3-1732844523673.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_4-1732844523678.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196651i882476629B0A6915/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_4-1732844523678.png" alt="bhaskar_india_4-1732844523678.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. Select the relevant system associated with the project.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_5-1732844523683.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196652i483456639900DEC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_5-1732844523683.png" alt="bhaskar_india_5-1732844523683.png" /&gt;&lt;/span&gt;4. Upon choosing the standard app, a message will appear indicating that the app contains synchronous views.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_6-1732844523688.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196653i55475B41D6840D22/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_6-1732844523688.png" alt="bhaskar_india_6-1732844523688.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Due to the limitation, you cannot proceed with an Adaptation Project. Instead, create an Extension Project and click Finish.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_7-1732844523694.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196654i6558204303BBD1FF/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_7-1732844523694.png" alt="bhaskar_india_7-1732844523694.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;6. Once the Extension Project is created, open it separately (optional). Then, create an extension by right-clicking the .extconfig.json file.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_8-1732844523700.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196655i5C08CF066C3DB34E/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_8-1732844523700.png" alt="bhaskar_india_8-1732844523700.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_9-1732844523705.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196656iAF3027B6E7C59CD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_9-1732844523705.png" alt="bhaskar_india_9-1732844523705.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_10-1732844523712.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196657iA6AAEF83AC69F224/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_10-1732844523712.png" alt="bhaskar_india_10-1732844523712.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;7. In the context menu, choose ‘Extend Controller’ and then select ‘Copy of the Original Controller’.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_11-1732844523717.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196658i849BF4EBF369F6C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_11-1732844523717.png" alt="bhaskar_india_11-1732844523717.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_12-1732844523729.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196660i1F4C31D592C2DB63/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_12-1732844523729.png" alt="bhaskar_india_12-1732844523729.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8. Uncomment the function ‘_loadMaterial’ in the file ‘S1Custom.controller.js’. This is where the oData service needs to be replaced.&lt;/P&gt;&lt;P&gt;9. Replace references to the standard OData service with the custom OData service ZMMIM_MATERIAL_DATA_SRV in your UI5 extension project. The required changes are shown below:&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_13-1732844523733.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196659i6268CED1D023C3D2/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_13-1732844523733.png" alt="bhaskar_india_13-1732844523733.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10. Search for all occurrences of the model &amp;nbsp;‘oMaterialData’ in the code. Update them accordingly to use the custom service.&lt;/P&gt;&lt;P&gt;11. In the custom OData service, I added a new property ‘PlantCategory’ to the existing entity type ‘MaterialPlant’.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="bhaskar_india_14-1732844523797.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196661i00DA4DCAEEA4E4DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_14-1732844523797.png" alt="bhaskar_india_14-1732844523797.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;SPAN&gt;12. Update the UI5 code to use new property ‘PlantCategory’ in the function ‘_checkFirstClickIsAllowed’. This ensures the buttons are always greyed out based on the plant category.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_15-1732844523800.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196662i2B7A78047C180396/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_15-1732844523800.png" alt="bhaskar_india_15-1732844523800.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;U&gt;Testing:&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;U&gt;Before the change (in the standard app):&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_16-1732844523821.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196664i3A9FBC1230A0812D/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_16-1732844523821.png" alt="bhaskar_india_16-1732844523821.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;&lt;U&gt;After the change (in the enhanced app):&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="bhaskar_india_17-1732844523839.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/196663i63DDD71502B2CCD3/image-size/large?v=v2&amp;amp;px=999" role="button" title="bhaskar_india_17-1732844523839.png" alt="bhaskar_india_17-1732844523839.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;As it can be seen from the above output, the buttons in the entire row are disabled. Requirement has been achieved.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/steps-to-replace-odata-in-business-application-studio-ui5-extension-project/ba-p/13951391"/>
    <published>2024-12-02T17:35:04.959000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/new-aws-option-for-sap-odp-data-extraction-through-aws-glue/ba-p/13962632</id>
    <title>New AWS option for SAP ODP data extraction through AWS Glue</title>
    <updated>2024-12-13T09:34:58.207000+01:00</updated>
    <author>
      <name>MarioDeFelipe</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13491</uri>
    </author>
    <content>&lt;P&gt;In November 2024, AWS updated its guidance for SAP Data Extraction with a Glue connector.&lt;/P&gt;&lt;P&gt;This adds to the previous guidance using &lt;STRONG&gt;Amazon AppFlow&lt;/STRONG&gt; service. But when to use what? lets dive in&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2024-12-06 at 00.26.57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/199053i43E1135778E438E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2024-12-06 at 00.26.57.png" alt="Screenshot 2024-12-06 at 00.26.57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1077491394"&gt;Amazon Appflow Approach&lt;/H2&gt;&lt;P data-unlink="true"&gt;AppFlow is the AWS pre-configured &lt;STRONG&gt;integration service&lt;/STRONG&gt;, if you are familiar with SAP Integration Suite, Fivetran, Airbyte or similars, you already know the drill. One tool to connect all, highly transactional, easy to configure.&lt;/P&gt;&lt;P data-unlink="true"&gt;AppFlow has a pre-configured&amp;nbsp;&lt;STRONG&gt;SAP OData Connector&lt;/STRONG&gt;, so we don't need to build it. Since its launch, it has been super easy to set up a data flow from SAP to AWS in just a few clicks, great for prototyping and relative small data sets replication.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2024-12-06 at 00.15.32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/199038i527B8A6ABCEE061A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2024-12-06 at 00.15.32.png" alt="Screenshot 2024-12-06 at 00.15.32.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;AppFlow makes it simple, in 4 steps you define the flow, you prepare the data, add transformations,&amp;nbsp;partitioning and aggregation if necessary and in a few clicks you have your raw data on AWS.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2024-12-06 at 00.16.27.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/199039i27BED35824F15DD8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2024-12-06 at 00.16.27.png" alt="Screenshot 2024-12-06 at 00.16.27.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Integration is quite flexible in a low-code no-code fashion and allows modern file formats, t&lt;SPAN&gt;he next step, depending of the case, would be to curate the data, with services like Glue.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-880977889"&gt;&lt;FONT color="#FF0000"&gt;New&lt;/FONT&gt; AWS Glue Approach&lt;/H2&gt;&lt;P&gt;Now,&amp;nbsp;AWS has introduced an &lt;STRONG&gt;AWS Glue OData connector for SAP&lt;/STRONG&gt;, contrary to an Integration service, Glue provides a serverless &lt;STRONG&gt;data processing (ETL)&lt;/STRONG&gt; service. It's based on Spark.&lt;/P&gt;&lt;P&gt;Glue is more&amp;nbsp;suitable for extensive data integration as well as distributed data processing capabilities, complex transformations, and analytics.&lt;/P&gt;&lt;P&gt;So this week, AWS announced the &lt;STRONG&gt;Odata Connector&lt;/STRONG&gt; on Glue. Great because we dont need to learn Scala to build our own connector.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2024-12-06 at 01.26.07.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/199102i2BF87CD84FF74FDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2024-12-06 at 01.26.07.png" alt="Screenshot 2024-12-06 at 01.26.07.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;AWS provides more than 40 predefined connectors, plus hundreds of more connectors available through the AWS Marketplace.&amp;nbsp;Glue capabilities are immense, they not only provide extensive ETL capabilities, but most importantly, they store the Data Catalog, a critical feature for&amp;nbsp;search and query using Amazon Athena or Amazon Redshift.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AWS Glue ETL Workflow. Courtesy of AWS" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/199078i5E9F77A2EB852A04/image-size/large?v=v2&amp;amp;px=999" role="button" title="BDB-4789-image28-new.png" alt="AWS Glue ETL Workflow. Courtesy of AWS" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;AWS Glue ETL Workflow. Courtesy of AWS&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;For entire details of the new Glue connector to SAP, read this blog;&lt;/P&gt;&lt;P&gt;&lt;A href="https://aws.amazon.com/blogs/big-data/scaling-rise-with-sap-data-and-aws-glue/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://aws.amazon.com/blogs/big-data/scaling-rise-with-sap-data-and-aws-glue/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Key Differences and when to use&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2024-12-06 at 01.11.50.png" style="width: 812px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/199099i372589CDFDA3315C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2024-12-06 at 01.11.50.png" alt="Screenshot 2024-12-06 at 01.11.50.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-684464384"&gt;Literature&lt;/H2&gt;&lt;P&gt;&lt;A href="https://docs.aws.amazon.com/glue/latest/dg/connecting-to-data-sap-odata.html" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.aws.amazon.com/glue/latest/dg/connecting-to-data-sap-odata.html&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://aws.amazon.com/blogs/big-data/scaling-rise-with-sap-data-and-aws-glue/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://aws.amazon.com/blogs/big-data/scaling-rise-with-sap-data-and-aws-glue/&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/new-aws-option-for-sap-odp-data-extraction-through-aws-glue/ba-p/13962632"/>
    <published>2024-12-13T09:34:58.207000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/enable-odata-streams-in-rap/ba-p/13990426</id>
    <title>Enable OData Streams in RAP</title>
    <updated>2025-01-20T06:28:13.387000+01:00</updated>
    <author>
      <name>pavankumar_reddy90</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/189954</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Problem statement:&lt;/STRONG&gt;&lt;BR /&gt;How to enable OData Streams such as excel, pdf, Images and other large objects using standard RAP Based application development without using UI5 tooling?&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Solution:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With the latest SAP BTP ABAP Environment 2208 release the RAP framework now supports OData streams. It is now possible to enable your RAP application to maintain and handle Large Objects(LOBs).This feature provides end users an option to upload external files of different file formats such as PDF, XLSX , binary file format and other types hence allowing media handling.&lt;BR /&gt;&lt;BR /&gt;I am on of the presenter for this topic at ABAP Conference and int the below youtube recording. This topic covers content related to how to enable large objects using RAP (ABAP RESTful Programming Model ).&amp;nbsp; Upload functionality using custom actions, download functionality using custom actions,&amp;nbsp; how to use XCO library to read and write XLSX content and some useful links which can be explored about OData Streams in RAP.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;ABAP Conference recording:&amp;nbsp;&lt;A href="https://www.youtube.com/watch?v=QyPEzRHA9Lo&amp;amp;ab_channel=ABAPConf" target="_blank" rel="noopener nofollow noreferrer"&gt;Enable OData Streams in RAP&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Slides:&amp;nbsp;&lt;A href="https://abapconf.org/abapconf2024/#/agenda" target="_blank" rel="noopener nofollow noreferrer"&gt;https://abapconf.org/abapconf2024/#/agenda&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Check for topic "&lt;A class="" href="https://abapconf.org/abapconf2024/#" target="_blank" rel="noopener nofollow noreferrer"&gt;Enable OData Streams in RAP&lt;/A&gt;" where you can find the link to download slides in pdf document.&lt;BR /&gt;&lt;BR /&gt;Use cases covered:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Working with Large Objects&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Upload Functionality using Custom Action&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Download Functionality using Custom Action&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Use XCO library to read and write XLSX Content&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Code based GitHub URL's:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. Upload and Download Functionality application :&amp;nbsp;&lt;A href="https://github.com/rvrrpk/OdataStreamsRAP" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/rvrrpk/OdataStreamsRAP&lt;/A&gt;&lt;/P&gt;&lt;P&gt;2. Download History Application :&amp;nbsp;&lt;A href="https://github.com/rvrrpk/DownloadHistory" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/rvrrpk/DownloadHistory&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/enable-odata-streams-in-rap/ba-p/13990426"/>
    <published>2025-01-20T06:28:13.387000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/create-deep-entity-using-rap-unmanaged/ba-p/13993060</id>
    <title>CREATE_DEEP_ENTITY using RAP ( Unmanaged )</title>
    <updated>2025-01-24T16:44:09.141000+01:00</updated>
    <author>
      <name>Mahmoud_Wael</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/178735</uri>
    </author>
    <content>&lt;P&gt;Hello Experts,&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog, We will learn how to create a simple RAP OData API and use it to achieve a Deep entity set creation operation which is requested in lot of projects and Custom services especially in complex integration scenarios&amp;nbsp;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this example,&amp;nbsp; we will be using a custom cds view entities based on standard tables for header and items, unmanaged behavior definition, service definition and binding&amp;nbsp;&amp;nbsp;.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Step 1 : Parent CDS :&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Production order Cds view'
@Metadata.ignorePropagatedAnnotations: true
define root view entity z7pi_production_order 
    as select from aufk as _order
    composition [1..*] of z7pi_serial_number as _serial
{
    
    key aufnr as Production_order,
    auart,
    
    _serial
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 2 : Child CDS :&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'serial Number Cds view'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
define view entity z7pi_serial_number 
    as select from objk
    association [0..1] to ser05 on objk.obknr = ser05.obknr
    association [0..1] to ser06 on objk.obknr = ser06.obknr
    
    association to parent z7pi_production_order as _order
        on $projection.Production_order = _order.Production_order
{
    key ser05.ppaufart as Production_order,
    key objk.sernr     as serial,
    key ser06.exidv  as hu,
    
    _order
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 3 : Unmanaged Behavior Definition :&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;unmanaged implementation in class z7pbp_7pi_production_order unique;
strict ( 2 );

define behavior for z7pi_production_order alias _order
//late numbering
lock master
authorization master ( instance )
//etag master &amp;lt;field_name&amp;gt;
{
  field ( features : instance ) auart ;
  create;
  update;
  delete;
  association _serial { create; }
}

define behavior for z7pi_serial_number alias _serial
//late numbering
lock dependent by _order
authorization dependent by _order
//etag master &amp;lt;field_name&amp;gt;
{
  update;
  delete;
  field ( readonly  ) Production_order;
  association _order;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Step 4 : using quick fix create the implementation Class&lt;/P&gt;&lt;P&gt;Step 5 : comment or remove the&amp;nbsp;&lt;SPAN&gt;create and cba_association create methods&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we remove both methods and create a new method using the events from the removed ones&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;CLASS lhc__order DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS get_instance_authorizations FOR INSTANCE AUTHORIZATION
      IMPORTING keys REQUEST requested_authorizations FOR _order RESULT result.

*    METHODS create FOR MODIFY
*      IMPORTING entities FOR CREATE _order.

    METHODS deep_create FOR MODIFY
      IMPORTING
        order  FOR CREATE _order
        serial FOR CREATE _order\_serial.

    METHODS update FOR MODIFY
      IMPORTING entities FOR UPDATE _order.

    METHODS delete FOR MODIFY
      IMPORTING keys FOR DELETE _order.

    METHODS read FOR READ
      IMPORTING keys FOR READ _order RESULT result.

    METHODS lock FOR LOCK
      IMPORTING keys FOR LOCK _order.

    METHODS rba_serial FOR READ
      IMPORTING keys_rba FOR READ _order\_serial FULL result_requested RESULT result LINK association_links.
    METHODS get_instance_features FOR INSTANCE FEATURES
      IMPORTING keys REQUEST requested_features FOR _order RESULT result.

*    METHODS cba_serial FOR MODIFY
*      IMPORTING entities_cba FOR CREATE _order\_serial.

ENDCLASS.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;then in the implementation of the new method we should be able to access both the header and child entities&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;METHOD deep_create.

    DATA(lv_import) = order.
    DATA(lv_import_sr) = serial.
    LOOP AT lv_import_sr ASSIGNING FIELD-SYMBOL(&amp;lt;sr&amp;gt;) .
          LOOP AT &amp;lt;sr&amp;gt;-%target ASSIGNING FIELD-SYMBOL(&amp;lt;tr&amp;gt;).

            wa_order_ser = VALUE #(
                         %key-production_order =   lv_ord_no
                         %key-serial           =   &amp;lt;tr&amp;gt;-serial
                         production_order      =   lv_ord_no
          ).

            wa_report_ser = VALUE #(
                          %key-production_order =   lv_ord_no
                          %key-serial           =   &amp;lt;tr&amp;gt;-serial
                          production_order      =   lv_ord_no
            ).

            wa_fail_ser = VALUE #(
                        %key-production_order =   lv_ord_no
                        %key-serial           =   &amp;lt;tr&amp;gt;-serial
                        production_order      =   lv_ord_no
             ).


            SELECT SINGLE obknr
              FROM objk
              WHERE sernr EQ @&amp;lt;tr&amp;gt;-serial
                AND taser EQ 'SER05'
               INTO (obj_list).
            

          ENDLOOP.


        ENDLOOP.
  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Finally we create the service binding and service definition&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Blocking zrep order type serials'
define service Z7PAPI_ZREP_BLOCK {
  expose z7pi_production_order as prd_ord;
  expose z7pi_serial_number as serial;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahmoud_Wael_0-1737544514045.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/215320iD6323D9F434F9C40/image-size/large?v=v2&amp;amp;px=999" role="button" title="Mahmoud_Wael_0-1737544514045.png" alt="Mahmoud_Wael_0-1737544514045.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;then we move to testing&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahmoud_Wael_1-1737544929653.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/215325iDD5B5B368E9750DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Mahmoud_Wael_1-1737544929653.png" alt="Mahmoud_Wael_1-1737544929653.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Mahmoud_Wael_2-1737544939552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/215326i7FE0588AA79FF693/image-size/large?v=v2&amp;amp;px=999" role="button" title="Mahmoud_Wael_2-1737544939552.png" alt="Mahmoud_Wael_2-1737544939552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;as shown you can access your header and child entities however you see fit&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/create-deep-entity-using-rap-unmanaged/ba-p/13993060"/>
    <published>2025-01-24T16:44:09.141000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/retrieve-data-from-rest-api-to-abap/ba-p/14109609</id>
    <title>Retrieve Data from Rest API to ABAP</title>
    <updated>2025-05-27T09:27:13.029000+02:00</updated>
    <author>
      <name>Aravindha</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1442730</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In abap, we create and expose API service through the OData gateway client for integration with third-party systems. This blog focuses on how to retrieve data from a REST API using a standard ABAP class. I have created the OData service using the GET_ENTITY method in an OData project and consumed that API using the approach described below.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;EM&gt;cl_http_client&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;EM&gt;if_http_client&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;****Data Declarations****
TYPES: BEGIN OF tt_json,
         MaterialCode TYPE matnr,           "Material
         UserName     TYPE ernam,           "Creator Name
         mtart        TYPE mtart,           "Material Type
       END OF tt_json.

TYPES: BEGIN OF ty_field,
         fielname TYPE char40,              "Field Name
       END OF ty_field.

DATA: lt_material     TYPE TABLE OF tt_json,
      lt_tab          TYPE TABLE OF ty_field,
      ls_material     TYPE tt_json,
      lo_http         TYPE REF TO if_http_client,    "HTTP Client Abstraction
      lr_data         TYPE REF TO data,
      lv_result       TYPE string,
      lv_content_type TYPE string,
      lv_action_type  TYPE string.

FIELD-SYMBOLS: &amp;lt;ls_data&amp;gt;   TYPE data,
               &amp;lt;ls_d&amp;gt;      TYPE data,
               &amp;lt;ls_struct&amp;gt; TYPE data,
               &amp;lt;lv_any&amp;gt;    TYPE any,
               &amp;lt;lv_char&amp;gt;.

SELECTION-SCREEN BEGIN OF BLOCK a1 WITH FRAME TITLE TEXT-002.
  PARAMETERS: p_mat TYPE matnr OBLIGATORY.
SELECTION-SCREEN END OF BLOCK a1.

*Get URL
DATA(lv_url) =  |{ TEXT-001 }'{ p_mat }')|  .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The API and selection screen look likes,&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Aravindha_0-1747933764005.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265182iF3F80F92AA75BE26/image-dimensions/635x81?v=v2" width="635" height="81" role="button" title="Aravindha_0-1747933764005.png" alt="Aravindha_0-1747933764005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Select Screen.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265201iD6D1B6CEA04CB76A/image-dimensions/697x122?v=v2" width="697" height="122" role="button" title="Select Screen.png" alt="Select Screen.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;"To perform the HTTP communication using factory method.
cl_http_client=&amp;gt;create_by_url(
  EXPORTING
    url                    = lv_url           " URL
  IMPORTING
    client                 = lo_http          " HTTP Client Abstraction
  EXCEPTIONS
    argument_not_found     = 1                " Communication parameter (host or service) not available
    plugin_not_active      = 2                " HTTP/HTTPS communication not available
    internal_error         = 3                " Internal error (e.g. name too long)
    OTHERS                 = 7
).
"
IF sy-subrc = 0.
  lv_content_type  = 'application/json'.
  lv_action_type   = 'GET'.
  lo_http-&amp;gt;request-&amp;gt;set_content_type(  lv_content_type ).
  lo_http-&amp;gt;request-&amp;gt;set_method( lv_action_type ).
"The output shows a json format.
  lo_http-&amp;gt;request-&amp;gt;set_header_field(
  EXPORTING
    name  =  'Accept'                          " Name of the header field
    value =  'application/json'                " HTTP header field value
).
"To ignore the authentication during execution.
  lo_http-&amp;gt;propertytype_logon_popup = if_http_client=&amp;gt;co_disabled.
  lo_http-&amp;gt;authenticate(
  EXPORTING
    proxy_authentication = ' '            " Proxy Logon (= 'X')
    client               = '800'          " R/3 system (client number from logon)
    username             = 'username'     " ABAP System, User Logon Name
    password             = 'password'     " Logon ID
    language             = 'E'            " SAP System, Current Language
).
ENDIF.

lo_http-&amp;gt;send(
  EXPORTING
    timeout                    = 15                 " Timeout of Answer Waiting Time
  EXCEPTIONS
    http_communication_failure = 1                  " Communication Error
    http_invalid_state         = 2                  " Invalid state
    http_processing_failed     = 3                  " Error when processing method
    http_invalid_timeout       = 4                  " Invalid Time Entry
    OTHERS                     = 5
).
IF sy-subrc &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

lo_http-&amp;gt;receive(
  EXCEPTIONS
    http_communication_failure = 1                " Communication Error
    http_invalid_state         = 2                " Invalid state
    http_processing_failed     = 3                " Error when processing method
    OTHERS                     = 4
).
IF sy-subrc &amp;lt;&amp;gt; 0.
* MESSAGE ID SY-MSGID TYPE SY-MSGTY NUMBER SY-MSGNO
*   WITH SY-MSGV1 SY-MSGV2 SY-MSGV3 SY-MSGV4.
ENDIF.

*Get the response from target as character string cdata( ).
lv_result = lo_http-&amp;gt;response-&amp;gt;get_cdata( ).
lo_http-&amp;gt;close( ).&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;We have the response from target system and need to retrieve the data from the string variable lv_result.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*Deserialize the data from Json to Abap
/ui2/cl_json=&amp;gt;deserialize(
  EXPORTING
    json             =  lv_result         " JSON string
  CHANGING
    data             =  lr_data           " Data to serialize
).

lt_tab =  VALUE #( ( fielname = 'MATERIALCODE')
                   ( fielname = 'USERNAME')
                   ( fielname = 'MTART'  ) ).

ASSIGN lr_data-&amp;gt;* TO &amp;lt;ls_data&amp;gt;.
ASSIGN COMPONENT 'd' OF STRUCTURE &amp;lt;ls_data&amp;gt; TO &amp;lt;ls_d&amp;gt;.

DATA(lo_typedescr) = cl_abap_typedescr=&amp;gt;describe_by_data( &amp;lt;ls_d&amp;gt; ).
ASSIGN &amp;lt;ls_d&amp;gt;-&amp;gt;* TO &amp;lt;ls_struct&amp;gt;.
IF &amp;lt;ls_struct&amp;gt; IS ASSIGNED.
  LOOP AT lt_tab INTO DATA(ls_tab).
    ASSIGN COMPONENT ls_tab-fielname OF STRUCTURE &amp;lt;ls_struct&amp;gt; TO &amp;lt;lv_any&amp;gt;.
    IF &amp;lt;lv_any&amp;gt; IS ASSIGNED.
      ASSIGN &amp;lt;lv_any&amp;gt;-&amp;gt;* TO &amp;lt;lv_char&amp;gt;.
      IF &amp;lt;lv_char&amp;gt; IS ASSIGNED.
        ASSIGN COMPONENT ls_tab-fielname OF STRUCTURE ls_material TO FIELD-SYMBOL(&amp;lt;lv_target&amp;gt;).
        IF &amp;lt;lv_target&amp;gt; IS ASSIGNED.
          &amp;lt;lv_target&amp;gt; = &amp;lt;lv_char&amp;gt;.
        ENDIF.
      ENDIF.
    ENDIF.
  ENDLOOP.
ENDIF.
UNASSIGN: &amp;lt;ls_data&amp;gt;,&amp;lt;ls_d&amp;gt;,&amp;lt;ls_struct&amp;gt;,&amp;lt;lv_any&amp;gt;,&amp;lt;lv_char&amp;gt;,&amp;lt;lv_target&amp;gt;.

cl_demo_output=&amp;gt;begin_section( 'Material Detail' ).
cl_demo_output=&amp;gt;write_data( ls_material ).
cl_demo_output=&amp;gt;next_section( 'OData Service URL' ).
cl_demo_output=&amp;gt;write_text( lv_url ).
cl_demo_output=&amp;gt;display( ).
CLEAR: ls_material.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The output should be like below in debugger level.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Debugger Level.png" style="width: 571px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265202i641ED9C9567251A4/image-dimensions/571x239?v=v2" width="571" height="239" role="button" title="Debugger Level.png" alt="Debugger Level.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Output.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265205i35F15273B8391E9B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Output.png" alt="Output.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Test the above service URI to postman app in GET method.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Post 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265207iC803123558A9A968/image-size/large?v=v2&amp;amp;px=999" role="button" title="Post 1.png" alt="Post 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Post 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/265208i4CE7DF673C51A334/image-size/large?v=v2&amp;amp;px=999" role="button" title="Post 2.png" alt="Post 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; In the example above, I retrieved data from an OData HTTP API that does not require an SSL certificate. However, when communication with external APIs. an SSL certificate is typically required. We will cover this in detail in a separate blog post.&lt;/P&gt;&lt;P&gt;Thank you!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/retrieve-data-from-rest-api-to-abap/ba-p/14109609"/>
    <published>2025-05-27T09:27:13.029000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/implementing-bopf-actions-using-cds-based-business-objects-in-s-4hana/ba-p/14132840</id>
    <title>Implementing BOPF Actions Using CDS-Based Business Objects in S/4HANA</title>
    <updated>2025-06-24T09:40:16.716000+02:00</updated>
    <author>
      <name>Ruhoolla_Khan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451103</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In SAP S/4HANA, Core Data Services (CDS) are widely used to define meaningful and reusable data models. When these CDS views are annotated correctly, they can automatically create a Business Object Processing Framework (BOPF) model. This helps in building business objects faster and with less manual effort.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In real-world applications, we often need to perform actions that go beyond just creating, reading, updating, or deleting data. For example, we might need to "Active Status" the status of a record, "Cancel" a request. These kinds of operations are called actions in BOPF.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This object explains how to add such custom actions to a CDS-based BOPF model. It helps developers extend standard functionality by including business-specific logic that users can trigger when needed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Steps for implementing Action for the CDS-Based Business Objects.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Enhancing CDS-Based BOPF Objects with Custom Actions in S/4HANA.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Defining and Implementing Actions in BOPF via CDS Views.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.sqlViewName: 'ZCFMEAL_SQL' 
@AbapCatalog.compiler.compareFilter: true 
@AccessControl.authorizationCheck: #NOT_REQUIRED 
@EndUserText.label: 'Flight Meal Application, Consumption View' 
@OData.publish: true 
@Metadata.allowExtensions: true 
@ObjectModel:{ 
modelCategory: #BUSINESS_OBJECT, 
compositionRoot: true, 
transactionalProcessingEnabled: true, 
createEnabled: true, 
updateEnabled: true, 
deleteEnabled: true, 
writeActivePersistence: 'ZAP_FLIGHT_MEAL' 
}
 
define view ZCFMEAL 
as select from zap_flight_meal 
association [1] to scarr as _Airline on $projection.carrid = _Airline.carrid 
association [1] to sflight as _FlightInfo on $projection.carrid = _FlightInfo.carrid 
and $projection.connid = _FlightInfo.connid 
association [1] to smeal as _Meals on $projection.carrid = _Meals.carrid 
and $projection.meal = _Meals.mealnumber 
{ 
@UI.facet: [{ 
purpose: #STANDARD, 
label: 'Meals', 
type: #IDENTIFICATION_REFERENCE, 
position: 10 
}] 
@UI.lineItem: [{ position: 10, label: 'Meal ID' }, 
{ position: 10, type: #FOR_ACTION, dataAction: 'BOPF:SET_STATUS', label: 'Active Status' } 
] 
@UI.identification: [{ position: 10, label: 'Meal ID' }] 
key meal_id, 
@UI.lineItem: [{ position: 20, label: 'Carrier' }] 
@UI.identification: [{ position: 20, label: 'Carrier' }] 
@ObjectModel.foreignKey.association: '_Airline' 
carrid, 
@UI.lineItem: [{ position: 30, label: 'Connection' }] 
@UI.identification: [{ position: 30, label: 'Connection' }] 
@ObjectModel.foreignKey.association: '_FlightInfo' 
connid, 
@UI.lineItem: [{ position: 40, label: 'Meal' }] 
@UI.identification: [{ position: 40, label: 'Meal' }] 
@ObjectModel.foreignKey.association: '_Meals' 
meal, 
@UI.lineItem: [{ position: 50, label: 'Total seats' }] 
@UI.identification: [{ position: 50, label: 'Total seats' }] 
total_seats, 
@UI.lineItem: [{ position: 10, label: 'Status' }] 
@UI.identification: [{ position: 10, label: 'Status' }] 
status, 
_Airline, 
_FlightInfo, 
_Meals  

} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Once the CDS view is activated, the corresponding BOPF object is automatically generated. You can view it using transaction code BOBX and &lt;/SPAN&gt;&lt;SPAN class=""&gt;proceed&lt;/SPAN&gt;&lt;SPAN class=""&gt; to define the action.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_0-1750417416815.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277067i27A30AF97850D8B2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_0-1750417416815.png" alt="Ruhoolla_Khan_0-1750417416815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next, implement the business logic for the action in the corresponding BOPF action class.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_1-1750417483251.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277073iCB5D6C61A220C0E3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_1-1750417483251.png" alt="Ruhoolla_Khan_1-1750417483251.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The action implementation class inherits predefined methods from the BOPF framework, such as EXECUTE_ACTION.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_2-1750417483252.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277074i2980B0ABB310C0D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_2-1750417483252.png" alt="Ruhoolla_Khan_2-1750417483252.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Implementation:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_0-1750419067172.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277113iD1D97EA89D842DEB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_0-1750419067172.png" alt="Ruhoolla_Khan_0-1750419067172.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Activate and generate the BOPF object.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now add the service and utilize it in the front-end.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_4-1750417483254.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277077i426517115DDC3F48/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_4-1750417483254.png" alt="Ruhoolla_Khan_4-1750417483254.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Add the service by Selecting and provide the package name.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_5-1750417483255.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277078iBC9CCB55F5663122/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_5-1750417483255.png" alt="Ruhoolla_Khan_5-1750417483255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You'll get an information that the metadata has been loaded for that service.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_6-1750417483256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277076iCAC7BF6466C2C60B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_6-1750417483256.png" alt="Ruhoolla_Khan_6-1750417483256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Test the service.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_7-1750417483257.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277080i76170F7BD361CE8F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_7-1750417483257.png" alt="Ruhoolla_Khan_7-1750417483257.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now by using the Odata service create the basic Fiori application&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Steps to create basic Fiori application:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use any tool for creating Fiori like VS Code or SAP Business Application Studio (BAS).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Open Application generator-&amp;gt; select the template -&amp;gt; provide the service -&amp;gt;select the entity-&amp;gt; finish and run the application&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_8-1750417483257.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277081i50E984F46D52C41F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_8-1750417483257.png" alt="Ruhoolla_Khan_8-1750417483257.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Once the application has been generated, you can see that an action button will appear in the Fiori front-end application.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Result:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_9-1750417483258.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277079iE48718AB41E3C5DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_9-1750417483258.png" alt="Ruhoolla_Khan_9-1750417483258.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As all the status are in ‘NO’ once we select the record and click on that action the records get updated as shown below.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ruhoolla_Khan_10-1750417483259.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/277082i99B5BAF53AD2E07B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Ruhoolla_Khan_10-1750417483259.png" alt="Ruhoolla_Khan_10-1750417483259.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Conclusion:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Implementing BOPF actions via CDS views in S/4HANA demonstrates the power of combining declarative modeling with robust transactional logic. By leveraging CDS annotations and standard frameworks, developers can deliver efficient, user-friendly, and scalable business applications—reducing custom code while staying aligned with SAP’s clean core principles.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/implementing-bopf-actions-using-cds-based-business-objects-in-s-4hana/ba-p/14132840"/>
    <published>2025-06-24T09:40:16.716000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/i-skipped-fiori-and-i-d-do-it-again/ba-p/14138288</id>
    <title>I Skipped Fiori (And I'd Do It Again)</title>
    <updated>2025-06-26T23:31:10.570000+02:00</updated>
    <author>
      <name>Alice_V</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/609259</uri>
    </author>
    <content>&lt;H3 id="ember576" id="toc-hId-1862449086"&gt;Or: How TRIZ Taught Me The Best UI Is No UI&lt;/H3&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Fiori-02-Untitled.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284552i9A02460A468C2F87/image-size/large?v=v2&amp;amp;px=999" role="button" title="Fiori-02-Untitled.png" alt="Fiori-02-Untitled.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Hey SAP folks! &lt;span class="lia-unicode-emoji" title=":waving_hand:"&gt;👋&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;Deep breath.&lt;/EM&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;I have a confession: I skipped Fiori. Just like I skipped SAP Smart Forms (jumping straight from SAPscript to Adobe Forms) and WebDynpro (leaping from SAPGUI to Fiori). Before you assume I'm just another anti-Fiori rebel, hear me out.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;I loved Fiori when it launched in 2013. Finally, SAP that didn't look like Windows 95! Responsive design! Tiles! But it's 2025, and we're still... clicking... through... tiles... to... do... everything.&lt;/P&gt;&lt;P class=""&gt;After working with Fiori since 2015, I had an epiphany that would make any TRIZ (innovation theory) person weep with joy:&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;"The ideal system is one that doesn't exist but its function is performed."&lt;/STRONG&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="ember583" id="toc-hId-1665935581"&gt;The "This Can't Be The Future" Moment&lt;/H3&gt;&lt;P class=""&gt;Picture this: &lt;STRONG&gt;9 AM Monday.&lt;/STRONG&gt; CFO pings you: &lt;EM&gt;"Need the latest P&amp;amp;L for company 1000 — compare this quarter to last, right now."&lt;/EM&gt;&lt;/P&gt;&lt;H3 id="ember585" id="toc-hId-1469422076"&gt;The Fiori Way™:&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Open Fiori Launchpad (wait for tiles to load)&lt;/LI&gt;&lt;LI&gt;Find "Financial Statement Analysis" app&lt;/LI&gt;&lt;LI&gt;Click tile (wait for app to load)&lt;/LI&gt;&lt;LI&gt;Select company code from dropdown&lt;/LI&gt;&lt;LI&gt;Choose fiscal period and year&lt;/LI&gt;&lt;LI&gt;Apply profit center filters&lt;/LI&gt;&lt;LI&gt;Navigate through multiple screens&lt;/LI&gt;&lt;LI&gt;Export to Excel for actual analysis&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Time&lt;/STRONG&gt;: ~4 minutes · 23 clicks · 8 screens · &lt;STRONG&gt;Frustration&lt;/STRONG&gt;: Daily&lt;/P&gt;&lt;H3 id="toc-hId-1272908571"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="ember588" id="toc-hId-1076395066"&gt;The 2025 Way:&lt;/H3&gt;&lt;PRE&gt;Me: Show me P&amp;amp;L breakdown for company code 1000, 
    this quarter vs last quarter

Claude: Q4 2024 vs Q3 2024 analysis ready:
        Revenue: +12% ($2.4M → $2.7M)
        EBITDA margin improved 3.2% 
        (cost optimization in logistics)
        Key driver: 18% increase in Product Line A&lt;/PRE&gt;&lt;P class=""&gt;&lt;STRONG&gt;Time&lt;/STRONG&gt;: 8 seconds · Clicks: 0 · &lt;STRONG&gt;Sanity&lt;/STRONG&gt;: Preserved&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="ember1392" id="toc-hId-879881561"&gt;How I Built The Bridge to Skip Ahead&lt;/H3&gt;&lt;P class=""&gt;I knew exactly what I wanted to track. After years with Fiori, I understood the game. So I built a Chrome extension that captures:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Every click, input, form submission&lt;/LI&gt;&lt;LI&gt;Every OData request triggered by those clicks&lt;/LI&gt;&lt;LI&gt;Complete UI5 context and metadata&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Atomic action decomposition with parametrization&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;The pattern was always there:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;&amp;nbsp; &amp;nbsp;User Action → UI Update &lt;/EM&gt;→ &lt;STRONG&gt;OData Call → Backend Logic&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;The TRIZ insight:&lt;/STRONG&gt; Why do we need the first two steps at all?&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;OData Call → Backend Logic&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;EM&gt;&amp;nbsp; &amp;nbsp;(Whisper: &lt;/EM&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/universal-odata-mcp-bridge-or-how-i-accidentally-made-15-000-enterprise/bc-p/14134777" target="_self"&gt;&lt;EM&gt;MCP - OData Bridge!)&lt;/EM&gt;&lt;/A&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="ember598" id="toc-hId-683368056"&gt;The Shocking Truth: 80% Pure Waste&lt;/H3&gt;&lt;P class=""&gt;My extension analysed hundreds of Fiori sessions across different apps. The results?&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Real data from "Manage Detection Methods":&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Duration: 27.7 seconds&lt;/LI&gt;&lt;LI&gt;Clicks: 10&lt;/LI&gt;&lt;LI&gt;OData requests: 15&lt;/LI&gt;&lt;LI&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;annotations involved: 23&lt;/LI&gt;&lt;LI&gt;Actual business logic: Update one field&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;STRONG&gt;Pattern discovery:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;UI Layer:&lt;/STRONG&gt; 80% overhead (pure translation)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Business Logic:&lt;/STRONG&gt; 20% actual work&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Innovation opportunity:&lt;/STRONG&gt; Eliminate the 80%&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="ember604" id="toc-hId-486854551"&gt;Liberation from &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt; Annotation Hell&lt;/H3&gt;&lt;P class=""&gt;Remember wrestling with cryptic &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt; annotations? Hours spent debugging why fields don't appear, fighting responsive design, calling consultants when layouts break.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;When you eliminate the UI, you eliminate the entire annotation ecosystem.&lt;/STRONG&gt; Clean CDS views with pure business logic. No more &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1445379"&gt;@ui&lt;/a&gt;.* black magic.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="ember1409" id="toc-hId-161258327"&gt;The Three Pillars That Let Me Skip Fiori&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Parametrized Automation&lt;/STRONG&gt;→ Record once, replay forever with different parameters&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Intelligent Test Generation&lt;/STRONG&gt; → Describe in English, auto-generate reliable tests&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;AI-Ready Business Tools&lt;/STRONG&gt; → Convert interactions to semantic tools Claude understands&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="ember609" id="toc-hId-93827541"&gt;The Transformation Results&lt;/H3&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-06-26_20-21-31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279549iF2F58D3CD6857F2C/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-06-26_20-21-31.png" alt="2025-06-26_20-21-31.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;95% time reduction. 100% complexity elimination.&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="ember612" id="toc-hId-115485674"&gt;The "But What About..." Section&lt;/H2&gt;&lt;P class=""&gt;&lt;STRONG&gt;"But what about data visualization?"&lt;/STRONG&gt; Great question! Complex charts and graphs? Keep those Fiori apps. But for the 80% of interactions that are just CRUD operations? Dead.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;"But what about user permissions?"&lt;/STRONG&gt; The OData services already handle that. If you can't do something in Fiori, the AI can't do it either. Security preserved, clicking eliminated.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;"But what about complex workflows?"&lt;/STRONG&gt; You mean like "Create PO → Route for approval → Update inventory"? Watch this:&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;"But what about mobile?"&lt;/STRONG&gt; You know what works great on mobile? Chat. You know what doesn't? Trying to click tiny Fiori tiles on a phone screen.&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="ember617" id="toc-hId--374430838"&gt;What This Means For You&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;For Functional Consultants:&lt;/STRONG&gt; Demonstrate a process once, get automation forever. No coding required.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For Developers:&lt;/STRONG&gt; Focus on business logic. Let AI handle the interaction layer.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For Managers:&lt;/STRONG&gt; Measure ROI in seconds saved × transactions per day. The math is beautiful.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For Everyone:&lt;/STRONG&gt; The future isn't better UIs — it's no UIs at all.&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="ember619" id="toc-hId--570944343"&gt;Your Turn&lt;/H3&gt;&lt;P class=""&gt;&lt;SPAN&gt;Ready to skip your own Fiori apps&lt;/SPAN&gt;? The extension turns any SAP professional into an automation architect.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;What's your most time-wasting Fiori workflow?&lt;/STRONG&gt; Comment below with your biggest pain point — I'll analyse the potential time savings and show you the elimination path.&lt;/P&gt;&lt;P class=""&gt;The ideal interface is one that doesn't exist but gets the job done.&lt;/P&gt;&lt;P class=""&gt;Time to evolve beyond clicking. &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;P class=""&gt;&lt;STRONG&gt;Technical deep-dive and extension demo ➜ [Coming Soon]&lt;/STRONG&gt; &lt;STRONG&gt;Next week:&lt;/STRONG&gt; "How TRIZ Principle 13 Made SAP Read My Mind"&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="ember625" id="toc-hId--767457848"&gt;Quick Reference/Glossary: see in comments.&lt;/H3&gt;&lt;P class=""&gt;Let me know in comments what you want me to eliminate next &lt;span class="lia-unicode-emoji" title=":grinning_face_with_big_eyes:"&gt;😃&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/i-skipped-fiori-and-i-d-do-it-again/ba-p/14138288"/>
    <published>2025-06-26T23:31:10.570000+02:00</published>
  </entry>
</feed>
