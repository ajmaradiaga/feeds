<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Business-Application-Studio-blog-posts.xml</id>
  <title>SAP Community - SAP Business Application Studio</title>
  <updated>2025-10-14T17:00:47.556089+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Business Application Studio/pd-p/67837800100800007077" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Business Application Studio blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/the-capstone-project-a-journey-from-component-to-cloud/ba-p/14143718</id>
    <title>The CAPstone Project: A Journey from Component to Cloud</title>
    <updated>2025-07-05T11:15:37.612000+02:00</updated>
    <author>
      <name>LOKESH_GHOSH</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2103994</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1036649068" id="toc-hId-1863228240"&gt;Introduction&lt;/H3&gt;&lt;P&gt;In this post, I'll take you through complete journey: of building React + Vite(Component) application on SAP’s ecosystem(Cloud).&lt;/P&gt;&lt;P&gt;Someone, who is React developer and curious about SAP's environment or a CAP expert just exploring modern frontend option, this blog will give them a practical and real-world solution with code snippets.&lt;/P&gt;&lt;P&gt;Let's dive how modern JavaScript development can thrive alongside enterprise SAP capabilities.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Open &lt;A href="https://developers.sap.com/tutorials/appstudio-onboarding..html" target="_blank" rel="noopener noreferrer"&gt;BAS&lt;/A&gt;&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create a CAP Project&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds init project_name
npm install&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create a basic schema&lt;/STRONG&gt; &lt;EM&gt;schema.cds&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace UserManagement;

using { managed, cuid } from '@sap/cds/common';

entity Users : managed, cuid {
    name    : String(100) not null;
    email   : String(255) not null;
    company : String(100) not null;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Service in&lt;/STRONG&gt; &lt;EM&gt;service.cds&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;using UserManagement from '../db/schema';

service UserService {
    entity Users as projection on UserManagement.Users;

    function getUser() returns array of {
        name    : String(100) not null;
        email   : String(255) not null;
        company : String(100) not null;
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Custom service&lt;/STRONG&gt; &lt;EM&gt;service.js&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const cds = require('@sap/cds');
const { message } = require('@sap/cds/lib/log/cds-error');

module.exports = cds.service.impl(async function() {
    const { Users } = this.entities;

    // Before CREATE event - validate data
    this.before('CREATE', 'Users', async (req) =&amp;gt; {
        const { name, email, company } = req.data;
        
        // Basic validation
        if (!name || !email || !company) {
            req.reject(400, 'All fields (name, email, company) are required');
        }
        
        // Email validation
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(email)) {
            req.reject(400, 'Invalid email format');
        }
        
        // Check for duplicate email
        const existingUser = await SELECT.one.from(Users).where({ email: email });
        if (existingUser) {
            req.reject(400, 'User with this email already exists');
        }
    });

    // After CREATE event - log the action
    this.after('CREATE', 'Users', async (data, req) =&amp;gt; {
        console.log(`New user created: ${data.name} (${data.email})`);
    });

    this.on('getUser',async(req)=&amp;gt;{
        const data = await SELECT.from('Users');
        return {status:200,message:'Data Fetched',data}
        
    })
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add csv file for mock data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add data&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add the below mock data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;ID,name,email,company,createdAt,modifiedAt
1,John Doe,john.doe@example.com,Tech Corp,2024-01-15T10:00:00Z,2024-01-15T10:00:00Z
2,Jane Smith,jane.smith@innovate.io,Innovate Solutions,2024-01-16T11:30:00Z,2024-01-16T11:30:00Z
3,Mike Johnson,mike.j@startup.com,StartupX,2024-01-17T09:15:00Z,2024-01-17T09:15:00Z&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Now let’s Create React Project&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cd app
npm create vite@latest .&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;As shown below&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-09 204314.png" style="width: 997px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271925iC942199FCD992157/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-09 204314.png" alt="Screenshot 2025-06-09 204314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Install Lucide React for icon&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install lucide-react&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Install &lt;A href="https://tailwindcss.com/docs/installation/using-vite" target="_blank" rel="noopener nofollow noreferrer"&gt;Tailwind CSS&lt;/A&gt;(optional)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Setup Proxy Server to avoid &lt;A href="https://developer.mozilla.org/en-US/docs/Web/HTTP/Guides/CORS/Errors" target="_blank" rel="noopener nofollow noreferrer"&gt;CORS issue&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;vite.config.js&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import { defineConfig } from 'vite'
import react from '@vitejs/plugin-react'
import tailwindcss from '@tailwindcss/vite'

// https://vite.dev/config/
export default defineConfig({
  plugins: [react(),tailwindcss()],
  server:{
    proxy:{
      '/odata':{
        target:'http://localhost:42745',
        changeOrigin:true,
        rewrite: path=&amp;gt;path.replace('/^\/odata/','/odata'),
      }
    }
  }
})&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create the UI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;App.jsx&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import React, { useState } from 'react';
import { Plus, Database, User, Mail, Building } from 'lucide-react';
import './app.css'

const App = () =&amp;gt; {
  const [formData, setFormData] = useState({
    name: '',
    email: '',
    company: ''
  });
  const [users, setUsers] = useState([]);
  const [showTable, setShowTable] = useState(false);
  const [loading, setLoading] = useState(false);

  // Nord color palette
  const nordColors = {
    polarNight: ['#2e3440', '#3b4252', '#434c5e', '#4c566a'],
    snowStorm: ['#d8dee9', '#e5e9f0', '#eceff4'],
    frost: ['#8fbcbb', '#88c0d0', '#81a1c1', '#5e81ac'],
    aurora: ['#bf616a', '#d08770', '#ebcb8b', '#a3be8c', '#b48ead']
  };

  const handleInputChange = (e) =&amp;gt; {
    setFormData({
      ...formData,
      [e.target.name]: e.target.value
    });
  };

  const handleSubmit = async () =&amp;gt; {
    if (!formData.name || !formData.email || !formData.company) {
      alert('Please fill in all fields');
      return;
    }
    
    setLoading(true);
    
    try {
      // Simulate API call to CAP backend
      const response = await fetch('odata/v4/user/Users', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(formData)
      });
      
      if (response.ok) {
        // For demo purposes, add to local state
        const newUser = {
          id: Date.now(),
          ...formData,
          createdAt: new Date().toISOString()
        };
        setUsers(prev =&amp;gt; [...prev, newUser]);
        setFormData({ name: '', email: '', company: '' });
        alert('User saved successfully!');
      }
    } catch (error) {
      // For demo, still add to local state
      const newUser = {
        id: Date.now(),
        ...formData,
        createdAt: new Date().toISOString()
      };
      setUsers(prev =&amp;gt; [...prev, newUser]);
      setFormData({ name: '', email: '', company: '' });
      alert('User saved successfully! (Demo mode)');
    }
    
    setLoading(false);
  };

  const fetchUsers = async () =&amp;gt; {
    setLoading(true);
    setShowTable(true);
    
    try {
      // Simulate API call to fetch users
      const response = await fetch('odata/v4/user/getUser');
      if (response.ok) {
        const data = await response.json();
        console.log('log on ui',data.value[0].data)
        setUsers(data.value[0].data);
      }
    } catch (error) {
      // Demo mode - use local state
      console.log('Using demo data');
    }
    
    setLoading(false);
  };

  return (
    &amp;lt;div className="min-h-screen" style={{ backgroundColor: nordColors.polarNight[0] }}&amp;gt;
      &amp;lt;div className="container mx-auto px-4 py-8"&amp;gt;
        {/* Header */}
        &amp;lt;div className="text-center mb-8"&amp;gt;
          &amp;lt;h1 className="text-4xl font-bold mb-2" style={{ color: nordColors.snowStorm[2] }}&amp;gt;
            User Management
          &amp;lt;/h1&amp;gt;
          &amp;lt;p className="text-lg" style={{ color: nordColors.snowStorm[0] }}&amp;gt;
            Simple form with SAP BTP CAP backend
          &amp;lt;/p&amp;gt;
        &amp;lt;/div&amp;gt;

        &amp;lt;div className="grid grid-cols-1 lg:grid-cols-2 gap-8"&amp;gt;
          {/* Form Section */}
          &amp;lt;div 
            className="p-6 rounded-lg shadow-xl"
            style={{ backgroundColor: nordColors.polarNight[1] }}
          &amp;gt;
            &amp;lt;h2 
              className="text-2xl font-semibold mb-6 flex items-center gap-2"
              style={{ color: nordColors.frost[1] }}
            &amp;gt;
              &amp;lt;Plus className="w-6 h-6" /&amp;gt;
              Add New User
            &amp;lt;/h2&amp;gt;
            
            &amp;lt;div className="space-y-4"&amp;gt;
              &amp;lt;div&amp;gt;
                &amp;lt;label 
                  className="block text-sm font-medium mb-2 flex items-center gap-2"
                  style={{ color: nordColors.snowStorm[1] }}
                &amp;gt;
                  &amp;lt;User className="w-4 h-4" /&amp;gt;
                  Name
                &amp;lt;/label&amp;gt;
                &amp;lt;input
                  type="text"
                  name="name"
                  value={formData.name}
                  onChange={handleInputChange}
                  required
                  className="w-full px-4 py-2 rounded-md border focus:ring-2 focus:outline-none transition-all"
                  style={{ 
                    backgroundColor: nordColors.polarNight[2],
                    borderColor: nordColors.polarNight[3],
                    color: nordColors.snowStorm[2],
                    focusRingColor: nordColors.frost[2]
                  }}
                  placeholder="Enter full name"
                /&amp;gt;
              &amp;lt;/div&amp;gt;

              &amp;lt;div&amp;gt;
                &amp;lt;label 
                  className="block text-sm font-medium mb-2 flex items-center gap-2"
                  style={{ color: nordColors.snowStorm[1] }}
                &amp;gt;
                  &amp;lt;Mail className="w-4 h-4" /&amp;gt;
                  Email
                &amp;lt;/label&amp;gt;
                &amp;lt;input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  required
                  className="w-full px-4 py-2 rounded-md border focus:ring-2 focus:outline-none transition-all"
                  style={{ 
                    backgroundColor: nordColors.polarNight[2],
                    borderColor: nordColors.polarNight[3],
                    color: nordColors.snowStorm[2]
                  }}
                  placeholder="Enter email address"
                /&amp;gt;
              &amp;lt;/div&amp;gt;

              &amp;lt;div&amp;gt;
                &amp;lt;label 
                  className="block text-sm font-medium mb-2 flex items-center gap-2"
                  style={{ color: nordColors.snowStorm[1] }}
                &amp;gt;
                  &amp;lt;Building className="w-4 h-4" /&amp;gt;
                  Company
                &amp;lt;/label&amp;gt;
                &amp;lt;input
                  type="text"
                  name="company"
                  value={formData.company}
                  onChange={handleInputChange}
                  required
                  className="w-full px-4 py-2 rounded-md border focus:ring-2 focus:outline-none transition-all"
                  style={{ 
                    backgroundColor: nordColors.polarNight[2],
                    borderColor: nordColors.polarNight[3],
                    color: nordColors.snowStorm[2]
                  }}
                  placeholder="Enter company name"
                /&amp;gt;
              &amp;lt;/div&amp;gt;

              &amp;lt;button
                type="button"
                onClick={handleSubmit}
                disabled={loading}
                className="w-full py-3 px-4 rounded-md font-semibold transition-all hover:opacity-90 disabled:opacity-50"
                style={{ 
                  backgroundColor: nordColors.aurora[3],
                  color: nordColors.polarNight[0]
                }}
              &amp;gt;
                {loading ? 'Saving...' : 'Save User'}
              &amp;lt;/button&amp;gt;
            &amp;lt;/div&amp;gt;
          &amp;lt;/div&amp;gt;

          {/* Data Display Section */}
          &amp;lt;div 
            className="p-6 rounded-lg shadow-xl"
            style={{ backgroundColor: nordColors.polarNight[1] }}
          &amp;gt;
            &amp;lt;h2 
              className="text-2xl font-semibold mb-6 flex items-center gap-2"
              style={{ color: nordColors.frost[1] }}
            &amp;gt;
              &amp;lt;Database className="w-6 h-6" /&amp;gt;
              User Database
            &amp;lt;/h2&amp;gt;

            &amp;lt;button
              onClick={fetchUsers}
              disabled={loading}
              className="mb-6 py-2 px-4 rounded-md font-semibold transition-all hover:opacity-90 disabled:opacity-50"
              style={{ 
                backgroundColor: nordColors.frost[2],
                color: nordColors.snowStorm[2]
              }}
            &amp;gt;
              {loading ? 'Loading...' : 'Show All Users'}
            &amp;lt;/button&amp;gt;

            {showTable &amp;amp;&amp;amp; (
              &amp;lt;div className="overflow-x-auto"&amp;gt;
                {users.length === 0 ? (
                  &amp;lt;p style={{ color: nordColors.snowStorm[0] }}&amp;gt;
                    No users found. Add some users using the form.
                  &amp;lt;/p&amp;gt;
                ) : (
                  &amp;lt;table className="w-full"&amp;gt;
                    &amp;lt;thead&amp;gt;
                      &amp;lt;tr style={{ borderBottom: `2px solid ${nordColors.polarNight[3]}` }}&amp;gt;
                        &amp;lt;th 
                          className="text-left py-3 px-2 font-semibold"
                          style={{ color: nordColors.frost[1] }}
                        &amp;gt;
                          Name
                        &amp;lt;/th&amp;gt;
                        &amp;lt;th 
                          className="text-left py-3 px-2 font-semibold"
                          style={{ color: nordColors.frost[1] }}
                        &amp;gt;
                          Email
                        &amp;lt;/th&amp;gt;
                        &amp;lt;th 
                          className="text-left py-3 px-2 font-semibold"
                          style={{ color: nordColors.frost[1] }}
                        &amp;gt;
                          Company
                        &amp;lt;/th&amp;gt;
                      &amp;lt;/tr&amp;gt;
                    &amp;lt;/thead&amp;gt;
                    &amp;lt;tbody&amp;gt;
                      {users.map((user, index) =&amp;gt; (
                        &amp;lt;tr 
                          key={user.ID}
                          className="hover:opacity-80 transition-opacity"
                          style={{ 
                            borderBottom: `1px solid ${nordColors.polarNight[2]}`,
                            backgroundColor: index % 2 === 0 ? nordColors.polarNight[0] : 'transparent'
                          }}
                        &amp;gt;
                          &amp;lt;td 
                            className="py-3 px-2"
                            style={{ color: nordColors.snowStorm[1] }}
                          &amp;gt;
                            {user.name}
                          &amp;lt;/td&amp;gt;
                          &amp;lt;td 
                            className="py-3 px-2"
                            style={{ color: nordColors.snowStorm[1] }}
                          &amp;gt;
                            {user.email}
                          &amp;lt;/td&amp;gt;
                          &amp;lt;td 
                            className="py-3 px-2"
                            style={{ color: nordColors.snowStorm[1] }}
                          &amp;gt;
                            {user.company}
                          &amp;lt;/td&amp;gt;
                        &amp;lt;/tr&amp;gt;
                      ))}
                    &amp;lt;/tbody&amp;gt;
                  &amp;lt;/table&amp;gt;
                )}
              &amp;lt;/div&amp;gt;
            )}
          &amp;lt;/div&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
  );
};

export default App;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;App.css&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;@import "tailwindcss";&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;The Landing Page&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-09 220701.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271926i22E4719743B55123/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-09 220701.png" alt="Screenshot 2025-06-09 220701.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Click on &lt;EM&gt;show all Users&lt;/EM&gt;&amp;nbsp;to see all data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-09 221221.png" style="width: 713px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271927i6148F9718B757D3A/image-dimensions/713x424?v=v2" width="713" height="424" role="button" title="Screenshot 2025-06-09 221221.png" alt="Screenshot 2025-06-09 221221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Insert data in Form and Save User data&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-09 221034.png" style="width: 906px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271929iA4614621A3817239/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-09 221034.png" alt="Screenshot 2025-06-09 221034.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Data added&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-09 221238.png" style="width: 904px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271930iFEA02DBB7AC4D810/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-09 221238.png" alt="Screenshot 2025-06-09 221238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1666714735"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;Our journey in this blog proved that React+Vite and SAP CAP can work together beautifully – but success requires understanding the nuances of integration, security, and deployment in the BTP environment,&lt;/P&gt;&lt;P&gt;My approach was to integrate with external APIs and services beyond the SAP ecosystem. For purely internal, form-heavy applications, UI5 might still be the more better choice.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please feel free to ask any questions you may have.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Application+Programming+Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" class="lia-product-mention" data-product="100-1"&gt;SAP Cloud Application Programming Model&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+Application+Studio/pd-p/67837800100800007077" class="lia-product-mention" data-product="13-1"&gt;SAP Business Application Studio&lt;/a&gt;&amp;nbsp;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Community/pd-p/486157991894093153608181816584982" class="lia-product-mention" data-product="1161-1"&gt;SAP Community&lt;/a&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/the-capstone-project-a-journey-from-component-to-cloud/ba-p/14143718"/>
    <published>2025-07-05T11:15:37.612000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/adaptation-project-in-sap-bas-add-navigation-to-manage-credit-limit/ba-p/14151993</id>
    <title>Adaptation Project in SAP BAS: Add Navigation to Manage Credit Limit Requests (F5602)</title>
    <updated>2025-07-15T14:19:35.060000+02:00</updated>
    <author>
      <name>Swathi_Rani1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/683406</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Objective&lt;/STRONG&gt;: This blog post provides insights about the implementation required to enhance the SAP standard Fiori application “&lt;STRONG&gt;Manage Credit Limit Requests (F5602)&lt;/STRONG&gt;”. &amp;nbsp;and how to implement the Adaptation Project in SAP Business Application Studio environment.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;In this blog post, I’ll demonstrate the implementation required to enhance the SAP standard Fiori application “&lt;STRONG&gt;Manage Credit Limit Requests (F5602)&lt;/STRONG&gt;”.&lt;/P&gt;&lt;P&gt;The improvement includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Navigation Push button that redirects to the &lt;STRONG&gt;Manage Customer Line Items&lt;/STRONG&gt; (FBL5N) using &lt;STRONG&gt;intent-based navigation&lt;/STRONG&gt; and passes the &lt;STRONG&gt;Business Partner (BP)&lt;/STRONG&gt; as a parameter.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The adaptation will be done using SAP Business Application Studio (BAS) by leveraging the adaptation project framework, ensuring non-intrusive changes.&lt;/P&gt;&lt;P&gt;So, let’s get started,&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1993177063"&gt;&lt;STRONG&gt;&lt;U&gt;Implementation in SAP BAS: &lt;/U&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Click on &lt;STRONG&gt;File&lt;/STRONG&gt; and select &lt;STRONG&gt;New Project from Template&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture1.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286424i3780900DDF259547/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture1.png" alt="Picture1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;In the Project from Template, select &lt;STRONG&gt;SAPUI5 Adaptation Project&lt;/STRONG&gt; and click on &lt;STRONG&gt;Start&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture2.png" style="width: 384px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286358iCA08037AF0579D16/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture2.png" alt="Picture2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Select Environment (&lt;STRONG&gt;ABAP&lt;/STRONG&gt;) and click on &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture3.png" style="width: 462px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286363i67FEB6307BC7E9DE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture3.png" alt="Picture3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Select the Backend System and provide credentials, then select Application (&lt;STRONG&gt;F5602&lt;/STRONG&gt;) and click on &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture4.png" style="width: 762px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286376i1DCABD6B3E2680C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture4.png" alt="Picture4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Give the Project name, Description, and click on Finish.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture5.png" style="width: 532px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286377iC7A6DACE87D281E9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture5.png" alt="Picture5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Below is the basic structure of the Adaptation Application when we create.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture6.png" style="width: 430px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286378i3D4F2179954AC2A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture6.png" alt="Picture6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Left-click on the application, select &lt;STRONG&gt;Adaptation Project,&lt;/STRONG&gt; and select &lt;STRONG&gt;Open Adaptation Editor&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture7.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286379i79CECD1C1F3C629F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture7.png" alt="Picture7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Click on Navigation, click on the go button and expand the combo box, and click on Table line item so that you navigate to &lt;STRONG&gt;Credit Case Object Page.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture8.png" style="width: 903px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286380iAACB463AB4DAE6B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture8.png" alt="Picture8.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Select &lt;STRONG&gt;UI Adaptation&lt;/STRONG&gt; for doing adaptation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture9.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286381iEAED437E4F3DABD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture9.png" alt="Picture9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Left click on the&amp;nbsp;&lt;STRONG&gt;Toolbar&lt;/STRONG&gt; and select &lt;STRONG&gt;Add: Fragment&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture10.png" style="width: 413px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286382i2A7D06160F381610/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture10.png" alt="Picture10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Select Target aggregation as action to add button and give the Fragment Name (PushBtn.fragment.xml) and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture11.png" style="width: 476px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286383i1F79A47F254DDCA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture11.png" alt="Picture11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Left-click on the&amp;nbsp;&lt;STRONG&gt;Toolbar&lt;/STRONG&gt; and select &lt;STRONG&gt;Extend with Controller&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture12.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286384iCFB6ABB7DDE6E791/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture12.png" alt="Picture12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Give the Controller Name (PushBtn.js) and click on &lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture13.png" style="width: 604px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286385i00C561140B67C696/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture13.png" alt="Picture13.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Click on the Save button at the top.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture14.png" style="width: 709px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286386i26A1318615E41342/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture14.png" alt="Picture14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Below is the structure of the Adaptation Application when we create an add button fragment and Extend controller.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture15.png" style="width: 334px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286387i2FC08DB91793A25E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture15.png" alt="Picture15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Fragment Logic to add Press event to the button.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture16.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286388i2CF5F7C62961EAB3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture16.png" alt="Picture16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H6 id="toc-hId-307104893" id="toc-hId-2054828996"&gt;&lt;STRONG&gt;XML CODE SNIPPET:&lt;/STRONG&gt;&lt;/H6&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;core:FragmentDefinition xmlns:core="sap.ui.core" xmlns="sap.m"&amp;gt;
&amp;lt;!--   add your xml here  --&amp;gt;
&amp;lt;Button text="{i18n&amp;gt;PushButton}" id="btn-cf48eefd" press=".extension.customer.zmclr.PushButton.onPressPush"/&amp;gt;
&amp;lt;/core:FragmentDefinition&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;Controller Logic for Press event of button (onPressPush)&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;&lt;STRONG&gt;Navigation Type&lt;/STRONG&gt;: Intent-based navigation using a &lt;STRONG&gt;Semantic Object&lt;/STRONG&gt; and &lt;STRONG&gt;Action&lt;/STRONG&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;Example:&amp;nbsp; &amp;nbsp;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;STRONG&gt;Semantic Object&lt;/STRONG&gt;: Customer&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Action&lt;/STRONG&gt;&lt;SPAN&gt;: manageLineItems&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Parameters&lt;/STRONG&gt;&lt;SPAN&gt;: Customer=&amp;lt;BusinessPartner&amp;gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; Getting Navigation Information from the Below Link, i.e., SAP Fiori app Library&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;IMPLEMENTATION INFORMATION – Configuration - Target Mapping: &lt;/STRONG&gt;&lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('FBL5N')/S30PCE" target="_blank" rel="noopener nofollow noreferrer"&gt;https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/#/detail/Apps('FBL5N')/S30PCE&lt;/A&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture17.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286391iEEADFCE38AAF7BB2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture17.png" alt="Picture17.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;H5 id="toc-hId--85922117" id="toc-hId-1729232772"&gt;&lt;STRONG&gt;Controller Code:&lt;/STRONG&gt;&lt;/H5&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;    onPressPush: function (oEvent) {
                var that = this;
                var Items = that.getView().byId("fscm.cr.clcr::sap.suite.ui.generic.template.ObjectPage.view.Details::CreditLimitRequest--MainDataFacet::BusinessPartner::Field");
                var oObject = Items.getBindingContext().getObject();
                var BusinessPartner = oObject.BusinessPartner;// read BusinessPartner
                var oCrossAppNavigator = sap.ushell.Container.getService("CrossApplicationNavigation"); // get a handle on the global XAppNav service
                var hash = (oCrossAppNavigator &amp;amp;&amp;amp; oCrossAppNavigator.hrefForExternal({
                    target: {
                        semanticObject: "Customer",
                        action: "manageLineItems"
                    },
                    params: {
                        "Customer": BusinessPartner
                    }
                })) || ""; // generate the Hash to display a Supplier
                oCrossAppNavigator.toExternal({
                    target: {
                        shellHash: hash
                    }
                }); // navigate to Supplier application
            }&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;The screen below is after adding the button fragment and Extend controller, adding button Press event.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture18.png" style="width: 584px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286392iB50F73624C2F1738/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture18.png" alt="Picture18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1403636548"&gt;&lt;STRONG&gt;&lt;U&gt;Deployment from SAP BAS to ABAP:&lt;/U&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;Left click on the application, select &lt;STRONG&gt;Adaptation Project,&lt;/STRONG&gt; and select &lt;STRONG&gt;Open Deployment Wizard&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture19.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286394i66BE056AB9031F06/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture19.png" alt="Picture19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Give credentials to log in to the System and click on &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture20.png" style="width: 433px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286395i5150E43D36F0214C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture20.png" alt="Picture20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Select the System and click on &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture21.png" style="width: 424px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286397iF3BF46ABABAC65FF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture21.png" alt="Picture21.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Enter the Package and click on &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture22.png" style="width: 492px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286398iE7CA1E6D8D8FAE74/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture22.png" alt="Picture22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Enter Transport Request Number and click on &lt;STRONG&gt;Finish&lt;/STRONG&gt;. The application will be deployed successfully.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture23.png" style="width: 405px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286399i490D12FF493A06BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture23.png" alt="Picture23.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1207123043"&gt;&lt;STRONG&gt;&lt;U&gt;After Deployment (Output): &lt;/U&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;After opening "Manage Credit Limit Requests" tile and we can see the screen below and click on the &lt;STRONG&gt;"Go"&lt;/STRONG&gt; button in the Smart Filter Bar.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture24.png" style="width: 601px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286400iB1D674B5E93789FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture24.png" alt="Picture24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Expand the combo box and select any option. Results (list of credit limit requests) are displayed in the Smart Table.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture25.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286401i4D1E3377270A9B56/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture25.png" alt="Picture25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Click on any row in the result table. Navigation occurs to the &lt;STRONG&gt;Object Page (Detail View)&lt;/STRONG&gt; for the selected credit request.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture26.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286402i106C84F63BEE72F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture26.png" alt="Picture26.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;On click on the Push button, Intent-based navigation by passing the Business Partner Number as a Parameter to Manage Customer Line Items (&lt;STRONG&gt;FBL5N&lt;/STRONG&gt;)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture27.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286403i7A5D670AB1B8D1BF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture27.png" alt="Picture27.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Manage Customer Line Items (&lt;STRONG&gt;FBL5N&lt;/STRONG&gt;) Navigation view is below&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture28.png" style="width: 602px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286404i48D1C31F0391D08E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture28.png" alt="Picture28.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;Hope this blog post will give a better understanding of implementing and deploying the Adaptation Project in SAP Business Application Studio environment.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Feel free to share your feedback or thoughts in the comments. Happy Learning.&lt;BR /&gt;&lt;BR /&gt;Thanks for Reading,&lt;BR /&gt;Swathi Rani.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/adaptation-project-in-sap-bas-add-navigation-to-manage-credit-limit/ba-p/14151993"/>
    <published>2025-07-15T14:19:35.060000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498</id>
    <title>Streamlining Local App Previews: Virtual Endpoints for Seamless Development</title>
    <updated>2025-07-17T18:59:26.114000+02:00</updated>
    <author>
      <name>heimwege</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165743</uri>
    </author>
    <content>&lt;P&gt;If you missed our UI5con 2025 talk, we've summarized our discussion in this blog post.&lt;/P&gt;&lt;H3 id="toc-hId-1864208708"&gt;Introduction&lt;/H3&gt;&lt;P&gt;The digital landscape is constantly evolving, and app development tools and processes must adapt to new challenges. In this dynamic environment, efficiency and adaptability are key. This blog post explores a transformative approach to local app previews and testing , traditionally stored as physical files in a repository, which can now be virtually served by middleware.&lt;/P&gt;&lt;H3 id="toc-hId-1667695203"&gt;The Status Quo of Local Preview and Testing&lt;/H3&gt;&lt;P&gt;In the traditional setup, local app previews and testing rely heavily on physical sandbox files. While this method provides a level of consistency and stability, it often falls short in terms of up-to-dateness and maintenance effort. Typically, these files are being created once, and nobody really ensures they are up-to-date and reflect the current best practices.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="heimwege_0-1752770217402.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288040i67EE31DF0F17F47D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="heimwege_0-1752770217402.png" alt="heimwege_0-1752770217402.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(App using physical files for local preview and tests)&lt;/P&gt;&lt;H3 id="toc-hId-1471181698"&gt;The Downside of Local Testing with Physical Files&lt;/H3&gt;&lt;P&gt;The use of physical files in local testing comes with its own set of challenges. Perhaps the most significant drawback is the "glue code" which requires ongoing maintenance to ensure compatibility with updated frameworks and standards. This manual process not only consumes valuable time but also increases the likelihood of errors. Moreover, physical files can quickly become outdated, failing to incorporate best practices and innovations.&lt;/P&gt;&lt;H3 id="toc-hId-1274668193"&gt;Why Do Virtual Endpoints Solve These Issues?&lt;/H3&gt;&lt;P&gt;Virtual endpoints offer a robust solution to the challenges posed by physical files. By replacing sandbox files with dynamic virtual endpoints, developers can significantly reduce the time and effort required for maintenance. Updates become a simple matter of updating the package version of &lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/ux-ui5-tooling in package.json, ensuring that the application always adheres to the latest SAP best practice code. This shift not only streamlines the process but also enhances the reliability and efficiency of both local previews and testing.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="heimwege_1-1752770271856.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288041iE7609BB32A03BB09/image-size/medium?v=v2&amp;amp;px=400" role="button" title="heimwege_1-1752770271856.png" alt="heimwege_1-1752770271856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(App using virtual endpoints for local preview and tests)&lt;/P&gt;&lt;P&gt;The preview middleware is either available as part of SAP Fiori Tools for SAP Business Application Studio and VS Code or standalone as Open Source (see links below)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="heimwege_2-1752770299076.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288043i3F75E8FBEE77B339/image-size/medium?v=v2&amp;amp;px=400" role="button" title="heimwege_2-1752770299076.png" alt="heimwege_2-1752770299076.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(Application Info page of SAP Fiori Tools for SAP Business Application Studio and VS Code)&lt;/P&gt;&lt;H3 id="toc-hId-1078154688"&gt;What to Do with Existing Applications?&lt;/H3&gt;&lt;P&gt;One of the most compelling advantages of adopting virtual endpoints is the ease with which existing applications can be converted. SAP Fiori Tools for SAP Business Application Studio and VS Code bolster this transition with their Convert feature. With just a single click, developers can transform their applications to support virtual endpoints, harnessing the full benefits without extensive refactoring.&lt;BR /&gt;The converter is either available as part of SAP Fiori Tools for SAP Business Application Studio and VS Code or standalone as Open Source (see links below)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="heimwege_3-1752770335613.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288044i601F3E7424B44A6A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="heimwege_3-1752770335613.png" alt="heimwege_3-1752770335613.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;(Application Info page of SAP Fiori Tools for SAP Business Application Studio and VS Code)&lt;/P&gt;&lt;H3 id="toc-hId-881641183"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;The move towards virtual endpoints in local app previews and testing signifies a pivotal moment for application development. By embracing this innovative approach, developers can streamline their processes, reduce maintenance efforts, and ensure their applications are built upon the latest best practices. The conversion tools available for existing applications make this transition effortless.&lt;BR /&gt;As the technology landscape continues to evolve, adopting such forward-thinking solutions will be crucial in maintaining competitive advantage and fostering more agile and dynamic development environments.&lt;/P&gt;&lt;H3 id="toc-hId-685127678"&gt;What’s Next?&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Your feedback is important. Please reach out to us if you have any issues or comments on virtual endpoints.&lt;/LI&gt;&lt;LI&gt;Is there anything missing that you think should be there? Let us know, open a feature request at&amp;nbsp; &lt;A href="https://github.com/SAP/open-ux-tools/issues" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/open-ux-tools/issues&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;If you haven’t already signed up, I would also like to invite you to participate in the&amp;nbsp;&lt;A href="https://blogs.sap.com/2021/07/31/peer-to-peer-learning-at-the-sap-fiori-elements-and-sap-fiori-tools-roundtable/" target="_blank" rel="noopener noreferrer"&gt;SAP Fiori elements and SAP Fiori tools Roundtable&lt;/A&gt;, where you can share your experiences with the development team and other SAP Fiori development experts.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-488614173"&gt;Links&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;SAP Business Application Studio: &lt;A href="https://help.sap.com/docs/bas" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/bas&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP Fiori Tools for VS Code: &lt;A href="https://marketplace.visualstudio.com/items?itemName=SAPSE.sap-ux-fiori-tools-extension-pack" target="_blank" rel="noopener nofollow noreferrer"&gt;https://marketplace.visualstudio.com/items?itemName=SAPSE.sap-ux-fiori-tools-extension-pack&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Preview middleware (as part of the UX UI5 Tooling bundle): &lt;A href="https://www.npmjs.com/package/@sap/ux-ui5-tooling" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.npmjs.com/package/@sap/ux-ui5-tooling&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Preview middleware (standalone): &lt;A href="https://www.npmjs.com/package/@sap-ux/preview-middleware" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.npmjs.com/package/@sap-ux/preview-middleware&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Converter (standalone): &lt;A href="https://github.com/SAP/open-ux-tools/blob/main/packages/create/README.md#sap-ux-convert" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP/open-ux-tools/blob/main/packages/create/README.md#sap-ux-convert&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-local-app-previews-virtual-endpoints-for-seamless-development/ba-p/14155498"/>
    <published>2025-07-17T18:59:26.114000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-python-in-sap-business-application-studio-my-notes/ba-p/14155516</id>
    <title>Using Python in SAP Business Application Studio – my notes</title>
    <updated>2025-07-18T13:55:15.744000+02:00</updated>
    <author>
      <name>Vitaliy-R</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/183</uri>
    </author>
    <content>&lt;P&gt;The &lt;STRONG&gt;Python Tools extension&lt;/STRONG&gt;, which enhances the Python coding experience, was introduced in SAP Business Application Studio (referred to as "BAS" below) exactly two years ago. Here are my notes from using it.&lt;/P&gt;&lt;P&gt;This post is not a tutorial or a comprehensive guide to best practices. It’s a collection of personal notes, which I hope you find helpful when working with Python in BAS. The &lt;STRONG&gt;focus here is on&lt;/STRONG&gt; &lt;STRONG&gt;running Python code in BAS&lt;/STRONG&gt;, not on deploying to SAP BTP runtimes like Cloud Foundry (CF) or Kyma. This is when you are usually working on &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/quot-getting-started-with-machine-learning-using-sap-hana-quot-as-a-new-sap/ba-p/13574098" target="_self"&gt;Machine Learning&lt;/A&gt; or AI projects in BAS,&amp;nbsp;like during SAP CodeJams.&lt;/P&gt;&lt;P&gt;I assume you're not an absolute beginner with SAP Business Application Studio—or at least you're familiar with Visual Studio Code.&lt;/P&gt;&lt;P&gt;For the examples in this post, I’ll be using the SAP Business Application Studio available in the SAP BTP Trial environment.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1606043981"&gt;Python runtime&lt;/H1&gt;&lt;P&gt;In SAP Business Application Studio, the dev space includes a system-level Python 3 binary at &lt;FONT face="terminal,monaco" color="#000080"&gt;/bin/python3&lt;/FONT&gt;, which is primarily intended for OS-level scripts and tooling. This version is tied to the base container image and is only updated when the image itself is refreshed.&lt;/P&gt;&lt;H3 id="toc-hId-1667695914"&gt;Managing Python versions&lt;/H3&gt;&lt;P&gt;For application development, developers typically use user-managed Python runtimes. Since &lt;A href="https://help.sap.com/docs/bas/sap-business-application-studio/2024-what-s-new-for-sap-business-application-studio?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;January 2024&lt;/A&gt;, you can select the Python version with which you want to work.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_0-1752787857188.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288194i63734250F432B502/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_0-1752787857188.png" alt="VitaliyR_0-1752787857188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP Business Application Studio uses &lt;A href="https://asdf-vm.com/guide/introduction.html" target="_self" rel="nofollow noopener noreferrer"&gt;asdf&lt;/A&gt; to allow you to select which runtime versions to install and use for developing your application. You can check this in the BAS terminal with &lt;FONT face="terminal,monaco" color="#000080"&gt;asdf current python&lt;/FONT&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_0-1752826029935.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288476i3AA3E4CCAB7C035F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_0-1752826029935.png" alt="VitaliyR_0-1752826029935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;By default, SAP Business Application Studio provides only one officially supported Python version.&lt;/P&gt;&lt;P&gt;If you need another version of Python, you can install it with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;FONT face="terminal,monaco" color="#000080"&gt;asdf install python &amp;lt;version&amp;gt;&lt;/FONT&gt;. If you want the latest minor version, then use&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;FONT face="terminal,monaco" color="#000080"&gt;latest:&lt;/FONT&gt;, like&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;FONT face="terminal,monaco" color="#000080"&gt;asdf install python latest:3.12&lt;/FONT&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in the case of the 3.12 version of Python.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_1-1752826587342.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288479i3F1AFA339D0457AC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_1-1752826587342.png" alt="VitaliyR_1-1752826587342.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;At the time of writing this post, the &lt;FONT face="terminal,monaco" color="#000080"&gt;asdf&lt;/FONT&gt;&amp;nbsp;version used in BAS is 0.12.0. This version uses the &lt;FONT face="terminal,monaco" color="#000080"&gt;asdf global&lt;/FONT&gt;&amp;nbsp;and &lt;FONT face="terminal,monaco" color="#000080"&gt;asdf local&lt;/FONT&gt;&amp;nbsp;commands to set the actual runtime version. If you refer to the &lt;A href="https://asdf-vm.com/manage/commands.html" target="_self" rel="nofollow noopener noreferrer"&gt;asdf documentation&lt;/A&gt;, these commands have been replaced with &lt;FONT face="terminal,monaco" color="#000080"&gt;asdf set&lt;/FONT&gt;, so don't get confused.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_4-1752832090379.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288513i2594100CA73554EA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_4-1752832090379.png" alt="VitaliyR_4-1752832090379.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1471182409"&gt;Runtime management from the command palette&lt;/H3&gt;&lt;P&gt;You can also install different versions from the command palette. Select &lt;STRONG&gt;&amp;gt; Runtime: Install&lt;/STRONG&gt;,&amp;nbsp;then Python, and the version you want to install. To set the default version of Python for execution, use the command &lt;STRONG&gt;&amp;gt; Runtime: Set Default&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_3-1752831488109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288507iF7D44FFABFDAC454/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_3-1752831488109.png" alt="VitaliyR_3-1752831488109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/bas/sap-business-application-studio/runtime-version-management" target="_blank" rel="noopener noreferrer"&gt;These commands&lt;/A&gt; are provided by the built-in &lt;STRONG&gt;BAS Framework&lt;/STRONG&gt; extension.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_2-1752831268028.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288505i52FE94C88EEC6711/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_2-1752831268028.png" alt="VitaliyR_2-1752831268028.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1274668904"&gt;You can now run your Python programs in BAS...&lt;/H3&gt;&lt;P&gt;...using a version of Python accordingly to your requirements.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_0-1752833019314.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288533iF1F4C8ABA0F83A9D/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_0-1752833019314.png" alt="VitaliyR_0-1752833019314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-819989961"&gt;Design-time&lt;/H1&gt;&lt;P&gt;Being a &lt;STRONG&gt;fork of Visual Studio Code - Open Source ("&lt;A href="https://github.com/microsoft/vscode" target="_self" rel="nofollow noopener noreferrer"&gt;Code - OSS&lt;/A&gt;")&lt;/STRONG&gt;—SAP Business Application Studio provides basic support for Python files and Jupyter notebooks out of the box.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_0-1752835179123.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288559i5DC7A0BAB2529980/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_0-1752835179123.png" alt="VitaliyR_0-1752835179123.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-881641894"&gt;BAS additional extension "&lt;SPAN&gt;Python Tools&lt;/SPAN&gt;"&lt;/H3&gt;&lt;P&gt;To improve your Python coding experience, SAP Business Application Studio provides an additional extension called "&lt;SPAN&gt;Python Tools&lt;/SPAN&gt;". This extension includes IntelliSense, formatting, linting, and debugging support for Python files and Jupyter notebooks.&lt;/P&gt;&lt;P&gt;To add "Python Tools" to your BAS dev space, go to the configuration of a stopped or a newly created dev space, and select &lt;STRONG&gt;Python Tools&lt;/STRONG&gt; from&amp;nbsp;&lt;STRONG&gt;Additional SAP Extensions&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_1-1752833807354.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288542i4B3C4AE1B211B686/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1752833807354.png" alt="VitaliyR_1-1752833807354.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Upon activation, you should see additional extensions listed now as built-in in BAS.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_1-1752835746649.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288580i881221FC5560023D/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1752835746649.png" alt="VitaliyR_1-1752835746649.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note&lt;SPAN&gt;&amp;nbsp;that BAS installs its extensions from &lt;A href="https://open-vsx.org/" target="_self" rel="nofollow noopener noreferrer"&gt;Open VSX&lt;/A&gt;, an open-source registry for VS Code extensions.&amp;nbsp;&lt;A href="https://github.com/Microsoft/vscode-python" target="_blank" rel="noopener nofollow noreferrer"&gt;VS Code's Python extension&lt;/A&gt;&amp;nbsp;is available&lt;/SPAN&gt;&amp;nbsp;at:&amp;nbsp;&lt;A href="https://open-vsx.org/extension/ms-python/python" target="_blank" rel="noopener nofollow noreferrer"&gt;https://open-vsx.org/extension/ms-python/python&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;You can see Python extensions in the file system:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;ls -lad /extbin/local/openvscode-server/extensions/ms-py*&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_2-1752837415019.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288590iAD09D0AB5EF7209B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_2-1752837415019.png" alt="VitaliyR_2-1752837415019.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;These are extensions selected and integrated by the BAS product team at SAP.&lt;/P&gt;&lt;H3 id="toc-hId-685128389"&gt;Additional notes:&lt;/H3&gt;&lt;P&gt;You can install other versions of the same extensions directly from&amp;nbsp;&lt;A href="https://open-vsx.org/," target="_blank" rel="noopener nofollow noreferrer"&gt;https://open-vsx.org/,&lt;/A&gt;&amp;nbsp;but there is no guarantee that they have been tested and will properly work with BAS. First of all, the extension version installed directly from the marketplace should be compatible with the version of SAP Business Application Studio (or the "Code—OSS" to be more precise).&lt;/P&gt;&lt;P&gt;For example, at the time of writing this post, the version of the Python extension at the VSX marketplace is 2025.04...&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_0-1752844419611.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288649i9D1EA9993790B188/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_0-1752844419611.png" alt="VitaliyR_0-1752844419611.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;which is compatible with version&amp;nbsp;1.94.0 of Code-OSS and therefore BAS:&amp;nbsp;&lt;A href="https://github.com/microsoft/vscode-python/blob/v2025.4.0/package.json#L50" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/microsoft/vscode-python/blob/v2025.4.0/package.json#L50&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_1-1752844619669.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288650i4AACB703E4B1AB99/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_1-1752844619669.png" alt="VitaliyR_1-1752844619669.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-488614884"&gt;Usage of the Python extension in BAS&lt;/H3&gt;&lt;P&gt;Upon installation of the Python extension in BAS, you can:&lt;/P&gt;&lt;P&gt;1/ Execute Python extension's commands from the palette:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_3-1752839390743.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288612iE7D273E2ECA1213B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_3-1752839390743.png" alt="VitaliyR_3-1752839390743.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2/ Trigger an execution of a program from the editor:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_4-1752839526904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288613i6971D9697275CE7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_4-1752839526904.png" alt="VitaliyR_4-1752839526904.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;...which you can configure by editing the&amp;nbsp;&lt;FONT face="terminal,monaco" color="#000080"&gt;python.terminal&lt;/FONT&gt;&amp;nbsp;settings:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_0-1753218387860.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290009i4BCA41DCB5E93013/image-size/medium?v=v2&amp;amp;px=400" role="button" title="VitaliyR_0-1753218387860.png" alt="VitaliyR_0-1753218387860.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3/ modify its &lt;FONT face="terminal,monaco" color="#000080"&gt;@ext:ms-python.python&lt;/FONT&gt;&amp;nbsp;settings:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_5-1752839680256.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288616i88C848EA078DDAA6/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_5-1752839680256.png" alt="VitaliyR_5-1752839680256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-33935941"&gt;Python virtual environments&lt;/H1&gt;&lt;P&gt;To run your code, you usually need additional Python packages, such as the&amp;nbsp;&lt;A href="https://pypi.org/project/hana-ml/" target="_blank" rel="noopener nofollow noreferrer"&gt;Python machine learning client for SAP HANA (hana-ml)&lt;/A&gt;&amp;nbsp;or &lt;A href="https://pypi.org/project/sap-ai-sdk-gen/" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Cloud SDK for AI (Python)&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;If you have experience with Python, then you already know all the advantages of using virtual environments. Although you can think of BAS devspace as an isolated project development environment, there is a good reason to use Python virtual environments there, as I already explained in&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/persisting-python-environment-when-using-jupyter-notebooks-in-sap-business/ba-p/13549863" target="_self"&gt;Persisting Python environment in SAP Business Application Studio&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;An additional reason to use a virtual environment is if you plan to test or run your project using different versions of Python managed by &lt;FONT face="terminal,monaco" color="#000080"&gt;asdf&lt;/FONT&gt;. Each of the installed versions of Python will use their own location to store packages:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VitaliyR_1-1753198029018.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289900iDF172F958DDDAA5B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1753198029018.png" alt="VitaliyR_1-1753198029018.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1208218584" id="toc-hId-224670593"&gt;You should be ready to work with Python in SAP Business Application Studio now!&amp;nbsp;&lt;/H4&gt;&lt;P&gt;Please share your tips in the comments!&lt;/P&gt;&lt;H4 id="toc-hId--469560007"&gt;In my other blog posts, I focused on:&lt;BR /&gt;🪐&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294" target="_blank"&gt;Using Jupyter in SAP Business Application Studio&lt;/A&gt;, and&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":hammer:"&gt;🔨&lt;/span&gt;&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-conda-forge-in-sap-business-application-studio-my-notes/ba-p/14169956" target="_blank"&gt;Using conda-forge in SAP Business Application Studio&lt;/A&gt;.&lt;/H4&gt;&lt;P&gt;------&lt;/P&gt;&lt;P&gt;-Vitaliy, aka&amp;nbsp;&lt;A href="https://bsky.app/profile/sygyzmundovych.bsky.social" target="_self" rel="nofollow noopener noreferrer"&gt;@Sygyzmundovych&lt;/A&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-python-in-sap-business-application-studio-my-notes/ba-p/14155516"/>
    <published>2025-07-18T13:55:15.744000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/connect-to-public-cloud-api-in-node-js-via-authorisation-code/ba-p/14158313</id>
    <title>Connect to Public Cloud API in Node.js via Authorisation Code</title>
    <updated>2025-07-22T13:54:57.292000+02:00</updated>
    <author>
      <name>Egan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1504852</uri>
    </author>
    <content>&lt;P&gt;Connecting to a Public Cloud API (from &lt;A href="https://api.sap.com/" target="_self" rel="noopener noreferrer"&gt;Business Accelerator Hub&lt;/A&gt;) via Node.js CAP application can be challenging. I hope this blog helps others attempting the same task.&lt;/P&gt;&lt;H2 id="toc-hId-1735214148"&gt;&amp;nbsp;Prerequisites&lt;/H2&gt;&lt;P&gt;• SAP BTP subaccount (Cloud Foundry)&lt;BR /&gt;• Service key for the target Public Cloud API&lt;BR /&gt;• XSUAA instance bound to your CAP app&lt;BR /&gt;• SAP BTP Destination service instance&lt;BR /&gt;• Bruno installed for manual testing&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1538700643"&gt;1. Confirm the API's Auth Options&lt;/H2&gt;&lt;P&gt;First, check which authentication methods are available for the API you plan to consume.&lt;/P&gt;&lt;P&gt;In my example I connect to the &lt;STRONG&gt;Specification Management API&lt;/STRONG&gt;, but the steps apply to any Public Cloud API.&lt;/P&gt;&lt;P&gt;If the &lt;EM&gt;OAuth 2.0 Access Code Flow&lt;/EM&gt; is listed under “Authentication Methods”, the API supports the authorization-code flow. That flow confirms a user context and usually grants wider authorisations, such as update and POST requests.&lt;/P&gt;&lt;P&gt;(&lt;EM&gt;OAuth 2.0 Application Flow&lt;/EM&gt; corresponds to the client-credentials flow.)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Auth-method screenshot" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289462iBE738F54BD94C2E9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Egan_0-1753113819867.png" alt="Egan_0-1753113819867.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342187138"&gt;2. Connect manually with Bruno (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/data-export-api-getting-started-with-bruno/ba-p/14120240" target="_blank"&gt;Good blog on Bruno&lt;/A&gt;)&lt;/H2&gt;&lt;P&gt;Because our API supports the auth-code flow, we first prove we can log in by calling it via Bruno.&lt;/P&gt;&lt;P&gt;Create a new collection and paste the base URI of your Public Cloud API instance (you’ll find it in the service key in your service instance of the saas application your connecting to).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Service key showing URI" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289463iD5B5C161AD23500A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Egan_3-1753114108426.png" alt="Egan_3-1753114108426.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When you send a test GET request you will probably receive an authorisation error. Configure OAuth 2.0 on the &lt;STRONG&gt;Auth&lt;/STRONG&gt; tab&lt;/P&gt;&lt;P&gt;Select Grant type Authorisation Code&lt;/P&gt;&lt;P&gt;Then fill in the below fields using your service key from your service instance&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bruno auth settings" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289461i1BABC87E61152C2F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Egan_1-1753113819868.png" alt="Egan_1-1753113819868.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Callback URL: &amp;lt;your Public Cloud API hostname&amp;gt;&lt;/LI&gt;&lt;LI&gt;Auth URL:** https://&amp;lt;subdomain&amp;gt;.authentication.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/authorize&lt;/LI&gt;&lt;LI&gt;Access-Token URL: https://&amp;lt;subdomain&amp;gt;.authentication.&amp;lt;region&amp;gt;.hana.ondemand.com/oauth/token&lt;/LI&gt;&lt;LI&gt;Client ID / Secret: from the uaa section of the service key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Request the token, pick your identity provider, and Bruno will return an access token. Inspect the scopes there to see what you can do.&lt;/P&gt;&lt;H2 id="toc-hId-1145673633"&gt;3. Connect to the API from Node.js&lt;/H2&gt;&lt;P&gt;After the manual check we can now automate the flow in a Node.js service.&lt;/P&gt;&lt;H3 id="toc-hId-1078242847"&gt;3.1 Destination setup&lt;/H3&gt;&lt;P&gt;Create a destination that points to the same API endpoint and bind it to your app.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Destination configuration" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289460i1560E45388730B53/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Egan_2-1753113819869.png" alt="Egan_2-1753113819869.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The required scopes and the audience (aud) value are visible inside the Bruno access token.&lt;/P&gt;&lt;P&gt;the Audience should start with the client id of your CAP application on BTP&lt;/P&gt;&lt;P&gt;Once the destination is saved, ensure your application is bound to the Destination service.&lt;/P&gt;&lt;H3 id="toc-hId-881729342"&gt;3.2 xs-security.json&lt;/H3&gt;&lt;P&gt;Add every scope your service needs so the approuter, it will forward it in the user’s JWT: in my example i needed this scope.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "name": "$XSAPPNAME.Spc_Write",
  "description": "Allow modification of specifications."
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Also reference the scope in authorities (and role templates, if used) and assign the resulting role collection to your user.&lt;/P&gt;&lt;H3 id="toc-hId-685215837"&gt;3.3 Connect in code&lt;/H3&gt;&lt;P&gt;Now time to connect to the API in the code itself.&lt;/P&gt;&lt;P&gt;First, obtain the user’s JWT. This helper below tries every possible source and falls back to LOCAL_USER_JWT in local development:&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;/** Try every source for a JWT and fall back to LOCAL_USER_JWT. */
function getJwt(capReq) {
  // CAP ≥ 7.3 keeps the raw token here
  if (capReq.user?.jwt) return capReq.user.jwt;

  // Plain HTTP / WebSocket headers
  const hdrs = capReq.http?.req?.headers || {};
  const token =
        hdrs['x-approuter-authorization'] ||   // CF WebSocket
        hdrs.authorization;                    // CF HTTP

  if (token) return token.replace(/^Bearer\s+/, '');
  // Last resort for local dev
  return process.env.LOCAL_USER_JWT;
}&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-617785051"&gt;3.3.1 Testing locally&lt;/H4&gt;&lt;P&gt;When testing locally we don't have access to the user JWT so we can add it manually to the environment file so we can still test locally, below is the process to get the JWT for user testing (each token lasts about 7 to 8 hours)&lt;/P&gt;&lt;H5 id="toc-hId-550354265"&gt;Step 1 – Get an auth code&lt;/H5&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;https://&amp;lt;instance&amp;gt;.eu10.authentication.eu10.hana.ondemand.com/oauth/authorize
?response_type=code
&amp;amp;client_id=&amp;lt;XSUAA client id of your deployed app&amp;gt;
&amp;amp;redirect_uri=http://localhost
&amp;amp;state=xyz&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Paste your version into your browsers address bar, after login you will land on &lt;A href="http://localhost/?code=" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost/?code=&lt;/A&gt;&amp;lt;AUTH_CODE&amp;gt;&amp;amp;state=xyz. Copy the value of AUTH_CODE.&lt;/P&gt;&lt;H5 id="toc-hId-353840760"&gt;Step 2 – Exchange the code for a JWT&lt;/H5&gt;&lt;P&gt;I made the Curl Request inside BAS itself. it will return a number of tokens, we only need the first and biggest one.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;curl -v -X POST \
-u '&amp;lt;same client id&amp;gt;' \
--data-urlencode grant_type=authorization_code \
--data-urlencode code=&amp;lt;AUTH_CODE&amp;gt; \
--data-urlencode redirect_uri=http://localhost \
https://&amp;lt;instance&amp;gt;.eu10.authentication.eu10.hana.ondemand.com/oauth/token&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Save the token from the response into .env:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;LOCAL_USER_JWT=&amp;lt;paste JWT here&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId--469472559"&gt;3.3.2 Call the destination with the JWT&lt;/H4&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const jwt = getJwt(req);
if (!jwt) req.reject(401, 'No user token found.');

const dest = await getDestination({
  destinationName: '&amp;lt;DestinationName&amp;gt;',
  jwt
});&lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;await executeHttpRequest(dest, {
  method: 'POST',
  url: `/odata/v4/api/specification/v1/${EntityName}`,
  data: v
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you reach the destination but receive 401 Unauthorized, your JWT is missing the correct scope—ask the product team which one you need.&lt;/P&gt;&lt;P&gt;Other common pitfall is using the different XSUAA instances to get your JWT for the local run. use your applications XSUAA client since this is the same one your application will check the token against&lt;/P&gt;&lt;P&gt;And that’s it! You should now be able to read from and write to the Public Cloud API. For read-only workloads the client-credentials flow is usually simpler.&lt;/P&gt;&lt;P&gt;If I missed anything or you’d like more details, please comment below—happy to help.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;## Frequently Asked Questions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;### What’s the difference between authorization-code and client-credentials flows?&lt;/STRONG&gt;&lt;BR /&gt;The authorization-code flow runs in a user context, so it can carry user-level scopes (read, write, update). The client-credentials flow operates with a technical user—perfect for background jobs or read-only integrations.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;### Why do I get “401 Unauthorized” after deployment?&lt;/STRONG&gt;&lt;BR /&gt;Your user’s JWT is probably missing the required scope (e.g., `Spc_Write`). Make sure the scope is listed in &lt;STRONG&gt;xs-security.json&lt;/STRONG&gt;, mapped to a role template, and assigned via a role collection in the BTP cockpit.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;### Which audience value belongs in my destination?&lt;/STRONG&gt;&lt;BR /&gt;Use the &lt;STRONG&gt;client ID&lt;/STRONG&gt; &lt;STRONG&gt;of your CAP application’s XSUAA instance&lt;/STRONG&gt;; it usually starts with `sb-&amp;lt;appName&amp;gt;!t&amp;lt;number&amp;gt;`.&lt;/P&gt;&lt;P&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/Node.js/pd-p/723714486627645412834578565527550" class="lia-product-mention" data-product="322-1"&gt;Node.js&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Identity+Services/pd-p/67837800100800007337" class="lia-product-mention" data-product="155-1"&gt;SAP Cloud Identity Services&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/API/pd-p/b31da0dd-f79a-4a1e-988c-af0755c2d184" class="lia-product-mention" data-product="123-1"&gt;API&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Authenticator/pd-p/73554900100700000789" class="lia-product-mention" data-product="435-1"&gt;SAP Authenticator&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Fiori+Cloud/pd-p/73554900100800000375" class="lia-product-mention" data-product="20-1"&gt;SAP Fiori Cloud&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Cloud+Application+Programming+Model/pd-p/9f13aee1-834c-4105-8e43-ee442775e5ce" class="lia-product-mention" data-product="100-1"&gt;SAP Cloud Application Programming Model&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+Application+Studio/pd-p/67837800100800007077" class="lia-product-mention" data-product="13-1"&gt;SAP Business Application Studio&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+Technology+Platform/pd-p/73555000100700000172" class="lia-product-mention" data-product="1215-1"&gt;SAP Business Technology Platform&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+S%25252F4HANA+Cloud+Public+Edition+Extensibility/pd-p/270c4f37-c335-46e1-bfad-a256637d5e26" class="lia-product-mention" data-product="37-1"&gt;SAP S/4HANA Cloud Public Edition Extensibility&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/SAP+Business+Accelerator+Hub/pd-p/73555000100800001091" class="lia-product-mention" data-product="1214-1"&gt;SAP Business Accelerator Hub&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/JavaScript/pd-p/506421944534752500398156104608974" class="lia-product-mention" data-product="321-1"&gt;JavaScript&lt;/a&gt;&lt;a href="https://community.sap.com/t5/c-khhcw49343/API+Management/pd-p/67838200100800006828" class="lia-product-mention" data-product="358-1"&gt;API Management&lt;/a&gt;&lt;/P&gt;&lt;!--    END BLOG FRAGMENT    --&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/connect-to-public-cloud-api-in-node-js-via-authorisation-code/ba-p/14158313"/>
    <published>2025-07-22T13:54:57.292000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-fix-npm-error-notarget-sap-hdi-deploy-when-you-create-a-cap-app-in/ba-p/14163890</id>
    <title>How to fix npm error notarget @sap/hdi-deploy when you create a CAP app in BAS</title>
    <updated>2025-07-28T05:04:05.688000+02:00</updated>
    <author>
      <name>Ryota_Ito</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1390198</uri>
    </author>
    <content>&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Update (July&amp;nbsp;2025):&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; Good news —&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;@sap/hdi-deploy@5.5.0&lt;/EM&gt;&lt;SPAN&gt; is now available on npm, so this &lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;specific&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt; error may have disappeared.&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;&lt;STRONG&gt;But keep reading!&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; The root cause — a dependency pointing to a version that isn’t published yet—can happen again with future releases. The steps below show how to unblock yourself whenever npm throws a &lt;/SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;notarget&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt; error for an &lt;/SPAN&gt;&lt;EM&gt;@sap/hdi-deploy&lt;/EM&gt;&lt;SPAN&gt;&amp;nbsp;package.&lt;/SPAN&gt;&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1735993764"&gt;When do you see this error?&lt;/H2&gt;&lt;P&gt;1. In &lt;STRONG&gt;SAP Business Application Studio (BAS)&lt;/STRONG&gt; click &lt;STRONG&gt;File&lt;/STRONG&gt; → &lt;STRONG&gt;New Project from Template&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;2. Choose &lt;STRONG&gt;CAP Project&lt;/STRONG&gt; and fill in the project name, runtime (Node.js), database (HANA Cloud), etc.&lt;/P&gt;&lt;P&gt;3. Open the terminal and run:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add mta   # create files for Cloud Foundry / Kyma deploy
npm i         # install dependencies​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&lt;EM&gt; npm i&lt;/EM&gt; stops with this message:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm error code ETARGET
npm error notarget No matching version found for @sap/hdi-deploy@5.5.0.​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Even if you force "&lt;EM&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/hdi-deploy": "5.4.2&lt;/EM&gt;" in &lt;EM&gt;package.json&lt;/EM&gt;, the error still appears.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="画像.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/292368iE1A5C8AE579BC64F/image-size/large?v=v2&amp;amp;px=999" role="button" title="画像.png" alt="画像.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1539480259"&gt;Why does it happen?&lt;/H2&gt;&lt;P&gt;&lt;EM&gt;cds add mta&lt;/EM&gt; adds this line to &lt;STRONG&gt;devDependencies&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"@sap/cds-dk": "&amp;gt;=8"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/cds-dk&lt;/EM&gt; version &lt;STRONG&gt;8.x&lt;/STRONG&gt; asks for &lt;EM&gt;&lt;STRONG&gt;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/1862993"&gt;@SAP&lt;/a&gt;/hdi-deploy@5.5.0&lt;/STRONG&gt;&lt;/EM&gt;, but 5.5.0 is &lt;STRONG&gt;not yet published on npm&lt;/STRONG&gt;. So npm cannot find it and throws &lt;STRONG&gt;ETARGET&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342966754"&gt;The 3‑line fix&lt;/H2&gt;&lt;P&gt;1.&amp;nbsp; (Optional) clean old modules and cache:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;rm -rf node_modules package-lock.json
npm cache clean --force&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;2.&amp;nbsp;Install the latest &lt;STRONG&gt;cds-dk&lt;/STRONG&gt; (today it is 9.1.3):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install -D @sap/cds-dk@latest&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3.&amp;nbsp;Install the rest:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;npm install&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;cds-dk &lt;STRONG&gt;9.x&lt;/STRONG&gt;&lt;/EM&gt; points to &lt;EM&gt;@sap/hdi-deploy &lt;STRONG&gt;5.4.2&lt;/STRONG&gt;&lt;/EM&gt;, which exists, so the install succeeds.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1146453249"&gt;Example package.json&lt;/H2&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "scripts": {
    "start": "cds run"
  },
  "dependencies": {
    "@sap/cds": "^7",
    "@sap/hana-client": "^2",
    "@sap/xssec": "^3"
  },
  "devDependencies": {
    "@sap/cds-dk": "^9.1.3"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949939744"&gt;More Information&lt;/H2&gt;&lt;P&gt;SAP Community Q&amp;amp;A (same issue): &lt;A href="https://community.sap.com/t5/technology-q-a/generate-cap-project-in-bas-with-error-sap-hdi-deploy-5-4-2-not-match/qaq-p/14062673" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/generate-cap-project-in-bas-with-error-sap-hdi-deploy-5-4-2-not-match/qaq-p/14062673&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-753426239"&gt;Wrap‑up&lt;/H2&gt;&lt;P&gt;Next time you hit the &lt;EM&gt;@sap/hdi-deploy &lt;/EM&gt;&lt;STRONG&gt;notarget&lt;/STRONG&gt; error, just remember: &lt;STRONG&gt;upgrade &lt;EM&gt;@sap/cds-dk&lt;/EM&gt;&lt;/STRONG&gt; and you are done.&lt;/P&gt;&lt;P&gt;If this post helped you, please give Kudos and leave a comment! &lt;span class="lia-unicode-emoji" title=":raising_hands:"&gt;🙌&lt;/span&gt;&lt;/P&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-fix-npm-error-notarget-sap-hdi-deploy-when-you-create-a-cap-app-in/ba-p/14163890"/>
    <published>2025-07-28T05:04:05.688000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/destination-error-in-ui-integration-card-while-accessing-from-sap-build/ba-p/14166700</id>
    <title>Destination Error in UI Integration Card while accessing from SAP Build Work Zone, Standard Edition</title>
    <updated>2025-07-31T15:26:00.967000+02:00</updated>
    <author>
      <name>ROHITGERA1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7607</uri>
    </author>
    <content>&lt;P&gt;Hi All,&lt;/P&gt;&lt;P&gt;Writing this blog after solving my issue which I got unexpected.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Requirement:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I developed one UI Integration Card in SAP Business Application Studio (BAS) and I was able to the Preview of the card in the BAS which is getting data based on Standard OData services from S/4HANA.&lt;/P&gt;&lt;P&gt;After that I Packaged the UI Integration Card in Content Package and imported in the SAP Build Work Zone, Standard Edition and I was able to access the card in my site.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Error Details:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;But suddenly effective from 25th July 2025, I got the below Error (PFA the error for same):&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;SPAN&gt;Destination "ecqrtcard" could not be&amp;nbsp;resolved.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;SPAN class=""&gt;No technical destination found. Content Channel ID: "ovps". Please contact your&amp;nbsp;administrator.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;FONT face="andale mono,times"&gt;It is because of SAP did some update in Standard Destination Configuration in BTP because earlier to 25ht July my card was working without error.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;I raised the question in the community, but no one replied there, below is the link for my question where I only answered to my question:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-q-a/ui-integration-card-error-while-accessing-in-sap-build-work-zone-standard/qaq-p/14162532#M4921009" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/ui-integration-card-error-while-accessing-in-sap-build-work-zone-standard/qaq-p/14162532#M4921009&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Solution:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;FONT face="andale mono,times"&gt;After reading lot of blogs, I was not able to find the solution then raised with SAP Support. They replied back with the following document:&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;FONT face="andale mono,times"&gt;&lt;A href="https://help.sap.com/docs/build-work-zone-standard-edition/sap-build-work-zone-standard-edition/map-card-aliases-to-destinations" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/build-work-zone-standard-edition/sap-build-work-zone-standard-edition/map-card-aliases-to-destinations&lt;/A&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;So here is the solution of the issue. We need to configure the Alias in the Content Package configuration in the Work Zone, PFA the below Screen shot of the configuration:&lt;/P&gt;&lt;P&gt;1 - Map Aliases Configuration in Content Package for UI Integration Card.jpg&lt;/P&gt;&lt;P&gt;3 - Map Aliases Configuration in Content Package for UI Integration Card.jpg&lt;/P&gt;&lt;P&gt;4 - Map Aliases Configuration in Content Package for UI Integration Card.jpg&lt;/P&gt;&lt;P&gt;5 - Map Aliases Configuration in Content Package for UI Integration Card.jpg&lt;/P&gt;&lt;P&gt;After this configuration we need to refresh the site, it will work (PFA the Screen shot "&lt;STRONG&gt;UI Card Access in BWZ, Standard Edition&lt;/STRONG&gt;".&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hope this will help community to fix the issue.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We need to get the alert from SAP if they are doing any patch update in the BTP service and same reply I got over the Incident from SAP Team. After every patch we need to do end to end testing of our application to avoid any issue.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;So the final conclusion is that We need to map the aliases in each and every content package which we are creating in the Build Work Zone and need to test the application if we get any alert from SAP Team for patch update in SAP BTP Services.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks.&lt;/P&gt;&lt;P&gt;Regards,&lt;/P&gt;&lt;P&gt;Rohit Gera&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/destination-error-in-ui-integration-card-while-accessing-from-sap-build/ba-p/14166700"/>
    <published>2025-07-31T15:26:00.967000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294</id>
    <title>Using Jupyter in SAP Business Application Studio – my notes</title>
    <updated>2025-08-01T17:29:38.575000+02:00</updated>
    <author>
      <name>Vitaliy-R</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/183</uri>
    </author>
    <content>&lt;P&gt;In my previous blog post&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-python-in-sap-business-application-studio-my-notes/ba-p/14155516" target="_blank"&gt;Using Python in SAP Business Application Studio – my notes&lt;/A&gt;, I focused on Python.&lt;/P&gt;&lt;P&gt;This blog post focuses on running Jupyter notebooks in SAP Business Application Studio&amp;nbsp;&lt;SPAN&gt;(referred to as "BAS" below)&lt;/SPAN&gt;.&amp;nbsp;I assume you're not an absolute beginner with SAP Business Application Studio—or at least you're familiar with Visual Studio Code. If you need a general introduction to navigating, coding, and executing code in notebooks using the Jupyter extension, then check:&amp;nbsp;&lt;A href="https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_create-or-open-a-jupyter-notebook" target="_blank" rel="nofollow noopener noreferrer"&gt;https://code.visualstudio.com/docs/datascience/jupyter-notebooks#_create-or-open-a-jupyter-notebook&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For the examples in this post, I’ll be using the SAP Business Application Studio, which is available in the SAP BTP Trial environment.&lt;/P&gt;&lt;H2 id="toc-hId-1736107166"&gt;Creating a virtual environment with the Python extension&lt;/H2&gt;&lt;P&gt;As already discussed in&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/persisting-python-environment-when-using-jupyter-notebooks-in-sap-business/ba-p/13549863" target="_blank"&gt;Persisting Python environment when using Jupyter notebooks in SAP Business Application Studio&lt;/A&gt;, one of the first things you might want to do, when working with the Python code in BAS, is to create a virtual environment. There, we discussed how to use the `&lt;FONT face="terminal,monaco" color="#000080"&gt;python -m venv&lt;/FONT&gt;` command to create it. Now, let's use the extension commands.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":nerd_face:"&gt;🤓&lt;/span&gt;&amp;nbsp;Pro tip:&lt;/STRONG&gt; if you want to understand what is happening when extension commands are executed, then:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Open the Output panel (eg, &lt;STRONG&gt;View -&amp;gt; Output&lt;/STRONG&gt; from the menu).&lt;/LI&gt;&lt;LI&gt;Choose the output for the &lt;STRONG&gt;Python&lt;/STRONG&gt; extension, and then in &lt;STRONG&gt;Settings&lt;/STRONG&gt;, set the level to &lt;STRONG&gt;Info&lt;/STRONG&gt; and&amp;nbsp;&lt;STRONG&gt;Set As Default&lt;/STRONG&gt;:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_0-1753987148253.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294808iA00DF79EEB2DED50/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_0-1753987148253.png" alt="VitaliyR_0-1753987148253.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Alternatively, if the Python extension has not yet been loaded, then open the command palette and run the command &lt;FONT face="terminal,monaco" color="#000080"&gt;&amp;gt;Python:&amp;nbsp;Show Output&lt;/FONT&gt;:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_1-1753988104700.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294816i1A41D1412BCD4050/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1753988104700.png" alt="VitaliyR_1-1753988104700.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Go to the command palette and run the command `Python: Create Environment...`...&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_2-1753988411673.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294818iA62DBE8BF3AA3AD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_2-1753988411673.png" alt="VitaliyR_2-1753988411673.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;..and select the &lt;STRONG&gt;Venv&lt;/STRONG&gt; option to create a virtual environment `.venv` (the name cannot be modified, at least in the current version of the Python extension):&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_3-1753988600004.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294819i8339A533DC5C36F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_3-1753988600004.png" alt="VitaliyR_3-1753988600004.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;...selecting the required base Python run-time installation (like &lt;FONT face="terminal,monaco" color="#000080"&gt;~/.asdf-inst/shims/python&lt;/FONT&gt;&lt;span class="lia-unicode-emoji" title=":disappointed_face:"&gt;😞&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_5-1753989146997.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294824iB54EFA8DE6BA8E9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_5-1753989146997.png" alt="VitaliyR_5-1753989146997.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you have set output on the Info level for the Python extension, then you should see (interesting) details on how the environment was created:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_6-1753990222424.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294829iFFA2B57EB06A3F49/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_6-1753990222424.png" alt="VitaliyR_6-1753990222424.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;One additional note:&lt;/STRONG&gt; the &lt;FONT face="terminal,monaco" color="#000080"&gt;.gitignore&lt;/FONT&gt;&amp;nbsp;file has been automatically created for the virtual environment:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_7-1753990886473.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294835iB005A7F1F2F0BC57/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_7-1753990886473.png" alt="VitaliyR_7-1753990886473.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539593661"&gt;Select the Jupyter kernel&lt;/H2&gt;&lt;P&gt;To execute code in your Jupyter notebook, you need to select a &lt;A href="https://docs.jupyter.org/en/latest/glossary.html#term-kernel" target="_self" rel="nofollow noopener noreferrer"&gt;Jupyter kernel&lt;/A&gt;&amp;nbsp;that will be used to execute the code.&lt;/P&gt;&lt;P&gt;Click &lt;STRONG&gt;Select Kernel&lt;/STRONG&gt; and then on &lt;STRONG&gt;Python Environments...&lt;/STRONG&gt; category:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_1-1754052597730.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295259i23FB8803DB7F5A0E/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1754052597730.png" alt="VitaliyR_1-1754052597730.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;...which will show you the list of Python environments that the Python extension found in your BAS dev space. Click on your virtual environment created for your project, like &lt;STRONG&gt;&lt;FONT face="terminal,monaco" color="#333399"&gt;.venv&lt;/FONT&gt;&lt;/STRONG&gt;:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_2-1754052967744.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295262iB31F805BAEF302B6/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_2-1754052967744.png" alt="VitaliyR_2-1754052967744.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343080156"&gt;Execute code in a Jupyter notebook&lt;/H2&gt;&lt;P&gt;During the first execution of your code, Jupyter will check if the &lt;A href="https://ipython.readthedocs.io/en/stable/install/kernel_install.html#installing-the-ipython-kernel" target="_self" rel="nofollow noopener noreferrer"&gt;IPython Kernel&lt;/A&gt; executable (the Python package &lt;FONT face="terminal,monaco" color="#333399"&gt;ipykernel&lt;/FONT&gt;) is installed in the selected Python environment. If not, it will automatically install it, as can be seen in the Jupyter extension's output, and then start it:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_3-1754056502781.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295283i783E48892ACD6FDB/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_3-1754056502781.png" alt="VitaliyR_3-1754056502781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once started, the Kernel exposes 5 ports for communication with your notebook, which can be seen in the run-time specification in a file &lt;FONT face="terminal,monaco" color="#333399"&gt;~/.local/share/jupyter/runtime/kernel-*.json&lt;/FONT&gt;. While this information should not be required in most of the basic scenarios, you might find it overwhelming that BAS displays pop-up messages for each port every time the kernel runtime starts:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_4-1754057368976.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295297i85CDC3874404AD19/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_4-1754057368976.png" alt="VitaliyR_4-1754057368976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;While information about open ports is relevant when developing front-end applications using SAP Business Application Studio, it might be useless and overwhelming when working with Jupyter notebooks. So, click on the settings icon and turn off notifications from the "Exposing router ports" extension&lt;SPAN&gt;&amp;nbsp;or disable this extension completely:&lt;BR /&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_5-1754057622486.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295325i29F6A95A91A5DBDC/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_5-1754057622486.png" alt="VitaliyR_5-1754057622486.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1146566651"&gt;Limiting listed Python environments&lt;/H2&gt;&lt;P&gt;You might also find it quite overwhelming to deal with the list of all the global Python locations when setting the kernel for a notebook. To reduce this list, select the command &lt;STRONG&gt;Jupyter: Filter Kernels&lt;/STRONG&gt; from the command palette:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_0-1754060969070.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295350i759F9877C1C4BB3D/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_0-1754060969070.png" alt="VitaliyR_0-1754060969070.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;...which opens the setting &lt;STRONG&gt;&lt;FONT face="terminal,monaco" color="#333399"&gt;jupyter.kernels.excludePythonEnvironments&lt;/FONT&gt;&lt;/STRONG&gt;. Switch to the &lt;STRONG&gt;Workspace&lt;/STRONG&gt; tab and click &lt;STRONG&gt;Add Item&lt;/STRONG&gt; to specify which Python environments to exclude from the list. You might want to add the following items to the list:&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;/bin/python3
/usr/bin/python3
~/.asdf-inst/shims/python3.13
~/.asdf-inst/shims/python3
~/.asdf-inst/shims/python&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_1-1754061618539.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295359i09FFA8A1E47B3F08/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1754061618539.png" alt="VitaliyR_1-1754061618539.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":nerd_face:"&gt;🤓&lt;/span&gt;Pro tip:&lt;/STRONG&gt; these values can also be edited in the project's file &lt;FONT face="terminal,monaco" color="#000080"&gt;.vscode/settings.json&lt;/FONT&gt;.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;{
    "jupyter.kernels.excludePythonEnvironments": [
        "/bin/python3",
        "/usr/bin/python3",
        "~/.asdf-inst/shims/python3.13",
        "~/.asdf-inst/shims/python3",
        "~/.asdf-inst/shims/python"
    ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Next time you need to pick the kernel for a Jupyter notebook, you should see only your project's virtual Python environment:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_2-1754062063240.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295361iB582616218E20475/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_2-1754062063240.png" alt="VitaliyR_2-1754062063240.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1208218584"&gt;You should be ready to work with your Jupyter notebooks in SAP Business Application Studio!&lt;/H4&gt;&lt;P&gt;Please share your tips in the comments!&lt;/P&gt;&lt;P&gt;------&lt;/P&gt;&lt;P&gt;-Vitaliy, aka&amp;nbsp;&lt;A href="https://bsky.app/profile/sygyzmundovych.bsky.social" target="_self" rel="nofollow noopener noreferrer"&gt;@Sygyzmundovych&lt;/A&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294"/>
    <published>2025-08-01T17:29:38.575000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/using-conda-forge-in-sap-business-application-studio-my-notes/ba-p/14169956</id>
    <title>Using conda-forge in SAP Business Application Studio – my notes</title>
    <updated>2025-08-01T23:07:46.509000+02:00</updated>
    <author>
      <name>Vitaliy-R</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/183</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In my previous blog posts, I focused on&amp;nbsp;&lt;/SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-python-in-sap-business-application-studio-my-notes/ba-p/14155516" target="_blank"&gt;Using Python in SAP Business Application Studio&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;and&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294" target="_blank"&gt;Using Jupyter in SAP Business Application Studio&lt;/A&gt;&amp;nbsp;with Python's virtual environments. But SAP Business Application Studio (referred to as "BAS" below) also allows you to work with the &lt;A href="https://en.wikipedia.org/wiki/Conda_(package_manager)" target="_self" rel="nofollow noopener noreferrer"&gt;Conda&lt;/A&gt; environments:&lt;BR /&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_0-1754071912864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295447i44DA5805AC4D52AD/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_0-1754071912864.png" alt="VitaliyR_0-1754071912864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Usually, Conda is used when one needs binary package management, and installation with &lt;FONT face="terminal,monaco" color="#333399"&gt;pip&lt;/FONT&gt;&amp;nbsp;fails because of the build requirements that cannot be successfully completed with the tools and authorizations a developer has in their BAS dev space.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;At the time of writing this post, using Conda might require additional commercial licenses from Anaconda, Inc. if downloading their tools and/or packages from their `&lt;FONT face="terminal,monaco"&gt;default&lt;/FONT&gt;` &lt;A href="https://en.wikipedia.org/wiki/Conda_(package_manager)#Channels" target="_self" rel="nofollow noopener noreferrer"&gt;channel&lt;/A&gt;. This might be a valid case for you, but this blog post covers only the use of the community-driven `conda-forge` channel and the minimum tools required to use it. To the best of my knowledge, I discuss only the technical setup here, but you might need to check any license implications for the dependencies of a project you are working on.&lt;/P&gt;&lt;H2 id="toc-hId-1736173353"&gt;Install miniforge&lt;/H2&gt;&lt;P&gt;Miniforge is a minimal installer for Conda and Mamba with the conda-forge channel set as the default (and only) channel.&lt;/P&gt;&lt;P&gt;Follow the installation steps, for example from&amp;nbsp;&lt;A href="https://github.com/conda-forge/miniforge?tab=readme-ov-file#unix-like-platforms-macos-linux--wsl" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/conda-forge/miniforge?tab=readme-ov-file#unix-like-platforms-macos-linux--wsl&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Download and run the installation script.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --location --remote-name --output-dir ~/tmp "https://github.com/conda-forge/miniforge/releases/latest/download/Miniforge3-$(uname)-$(uname -m).sh"

bash ~/tmp/Miniforge3-$(uname)-$(uname -m).sh -b&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-1539659848"&gt;&amp;nbsp;Configure conda&lt;/H2&gt;&lt;P&gt;Activate conda and its &lt;FONT face="terminal,monaco" color="#333399"&gt;base&lt;/FONT&gt;&amp;nbsp;environment.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;eval "$(/home/user/miniforge3/bin/conda shell.$(basename "${SHELL}") hook)"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;Initialize conda (it will add the shell's integration).&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;conda init&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;To prevent the conda's &lt;FONT face="terminal,monaco" color="#333399"&gt;base&lt;/FONT&gt;&amp;nbsp;environment from being activated on startup (because it will be taken care of by the Python extension), run the following command:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;conda config --set auto_activate_base false&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For changes to take effect, close and re-open your current shell.&lt;/P&gt;&lt;P&gt;Update conda's &lt;FONT face="terminal,monaco" color="#333399"&gt;base&lt;/FONT&gt; environment to the latest packages from the community-maintained &lt;FONT face="terminal,monaco" color="#333399"&gt;conda-forge&lt;/FONT&gt;&amp;nbsp;channel.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;conda update -n base --all --yes&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;You can also use the faster &lt;FONT face="terminal,monaco" color="#333399"&gt;mamba&lt;/FONT&gt;&amp;nbsp;command instead of &lt;FONT face="terminal,monaco" color="#333399"&gt;conda&lt;/FONT&gt;. Both are parts of the Miniforge installation.&lt;/P&gt;&lt;H2 id="toc-hId-1343146343"&gt;Point Python extension to your Conda executable&lt;/H2&gt;&lt;P&gt;In &lt;STRONG&gt;Terminal&lt;/STRONG&gt;, check the location of the &lt;FONT face="terminal,monaco" color="#333399"&gt;conda&lt;/FONT&gt;&amp;nbsp;command, which should be something like &lt;FONT face="terminal,monaco" color="#333399"&gt;/home/user/miniforge3/condabin/conda&lt;/FONT&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;which conda&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;In &lt;STRONG&gt;Settings&lt;/STRONG&gt;, open &lt;FONT face="terminal,monaco" color="#333399"&gt;python.condaPath&lt;/FONT&gt;&amp;nbsp;and switch to the Remote tab. Input the value.&lt;/P&gt;&lt;H2 id="toc-hId-1146632838"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_1-1754077236838.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295487i523B13F658B4CF31/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_1-1754077236838.png" alt="VitaliyR_1-1754077236838.png" /&gt;&lt;/span&gt;&lt;/H2&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-950119333"&gt;Create a &lt;FONT face="terminal,monaco" color="#333399"&gt;.conda&lt;/FONT&gt;&amp;nbsp;environment in your project&lt;/H2&gt;&lt;P&gt;Open your project folder in BAS.&lt;/P&gt;&lt;P&gt;From the command palette, start the command&amp;nbsp;&lt;STRONG&gt;Python: Create Environment...&lt;/STRONG&gt;, then &lt;STRONG&gt;Conda&lt;/STRONG&gt;&amp;nbsp;environment type...&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_0-1754071912864.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295447i44DA5805AC4D52AD/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_0-1754071912864.png" alt="VitaliyR_0-1754071912864.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;...and select the required Python version from the list:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_2-1754078227143.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295497i93854803DCAD9C13/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_2-1754078227143.png" alt="VitaliyR_2-1754078227143.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should see the message that the environment is created and set as the active one for the project.&lt;/P&gt;&lt;P&gt;Open a new Terminal session, and you should see the &lt;FONT face="terminal,monaco" color="#333399"&gt;.conda&lt;/FONT&gt;&amp;nbsp;environment set.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_3-1754078590314.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295499iD3EBC13944398F9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_3-1754078590314.png" alt="VitaliyR_3-1754078590314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can check the list of environments with the command:&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;conda env list&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-753605828"&gt;Install IPyKernel in your &lt;FONT face="terminal,monaco" color="#333399"&gt;.conda&lt;/FONT&gt; environment&lt;/H2&gt;&lt;P&gt;Unlike in a "venv" virtual environment, the Python extension might not automatically install IPyKernel in a conda environment. You need to install it manually.&lt;/P&gt;&lt;P&gt;In &lt;STRONG&gt;Terminal&lt;/STRONG&gt;, with the &lt;FONT face="terminal,monaco" color="#333399"&gt;.conda&lt;/FONT&gt;&amp;nbsp;environment set in the command line, run the command:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;conda install ipykernel --yes&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Check with the command&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;conda list ipykernel&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_4-1754079013971.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295500i6624BBBD3246EFC5/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_4-1754079013971.png" alt="VitaliyR_4-1754079013971.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557092323"&gt;Select the &lt;FONT face="terminal,monaco" color="#333399"&gt;.conda&lt;/FONT&gt; env in your notebook&lt;/H2&gt;&lt;P&gt;Now, you can open your project's Jupyter notebook, select the &lt;FONT face="terminal,monaco" color="#333399"&gt;.conda&lt;/FONT&gt; environment, and execute the code &lt;span class="lia-unicode-emoji" title=":nerd_face:"&gt;🤓&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-360578818"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="VitaliyR_5-1754079340647.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295501iFC432ED27A836EC4/image-size/large?v=v2&amp;amp;px=999" role="button" title="VitaliyR_5-1754079340647.png" alt="VitaliyR_5-1754079340647.png" /&gt;&lt;/span&gt;&lt;/H2&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;H4 id="toc-hId-1208218584" id="toc-hId-422230751"&gt;You should be ready to work with conda-forge in SAP Business Application Studio now!&amp;nbsp;&lt;/H4&gt;&lt;P&gt;Please share your tips in the comments!&lt;/P&gt;&lt;H4 id="toc-hId-1208218584" id="toc-hId-225717246"&gt;In my other blog posts, I focused on:&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":snake:"&gt;🐍&lt;/span&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-python-in-sap-business-application-studio-my-notes/ba-p/14155516" target="_self"&gt;Using Python in SAP Business Application Studio&lt;/A&gt;, and&lt;BR /&gt;🪐&amp;nbsp;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294" target="_blank"&gt;Using Jupyter in SAP Business Application Studio&lt;/A&gt;.&lt;/H4&gt;&lt;P&gt;------&lt;/P&gt;&lt;P&gt;-Vitaliy, aka&amp;nbsp;&lt;A href="https://bsky.app/profile/sygyzmundovych.bsky.social" target="_self" rel="nofollow noopener noreferrer"&gt;@Sygyzmundovych&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-conda-forge-in-sap-business-application-studio-my-notes/ba-p/14169956"/>
    <published>2025-08-01T23:07:46.509000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-august-7th-2025/ba-p/14175053</id>
    <title>SAP Developer News August 7th, 2025</title>
    <updated>2025-08-07T21:10:00.027000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2FciUO6NM-b6Y%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3DciUO6NM-b6Y&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2FciUO6NM-b6Y%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Dev Challenge, Jupyter in SAP BTP &amp;amp; Business Data Cloud &amp;amp; Devtoberfest Fun | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1866051777"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;PODCAST&lt;/STRONG&gt;: &lt;A href="https://podcast.opensap.info/sap-developers/2025/08/07/%f0%9f%94%94sap-developer-news-august-7th-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/08/07/%f0%9f%94%94sap-developer-news-august-7th-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Developer Challenge&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Fiori Element With Flexible Programming Model Developer Challenge August 2025: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-community-escape-house-for-august-fiori-element-with-flexible/ba-p/14167685" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-community-escape-house-for-august-fiori-element-with-flexible/ba-p/14167685&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Using Jupyter in SAP Business Application Studio and in SAP Business Data Cloud&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Using Jupyter in SAP Business Application Studio: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Using conda-forge in SAP Business Application Studio: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-conda-forge-in-sap-business-application-studio-my-notes/ba-p/14169956" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/using-conda-forge-in-sap-business-application-studio-my-notes/ba-p/14169956&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Hands-on Jupyter in SAP Databricks: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/artificial-intelligence-and-machine-learning-blogs/hands-on-tutorial-sap-databricks/ba-p/14156999" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/artificial-intelligence-and-machine-learning-blogs/hands-on-tutorial-sap-databricks/ba-p/14156999&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Unlocking SAP AI Foundation capabilities in SAP Databricks: A technical deep dive: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-sap-ai-foundation-capabilities-in-sap-databricks-a-technical-deep/ba-p/14162714" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-sap-ai-foundation-capabilities-in-sap-databricks-a-technical-deep/ba-p/14162714&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Recordings and Slides from webinar series 'Architecting Your SAP Business Data Cloud Journey': &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/enterprise-architecture-blog-posts/recordings-and-slides-from-webinar-series-architecting-your-sap-business/ba-p/14163802" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/enterprise-architecture-blog-posts/recordings-and-slides-from-webinar-series-architecting-your-sap-business/ba-p/14163802&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Devtoberfest Fun Activities&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Home Page: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/devtoberfest/gh-p/Devtoberfest&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest Social Media Announcement: &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/posts/sap-developers_get-ready-devtoberfest-by-sap-teched-in-activity-7354571776418324480-OPqH?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAAO_6sQB6ZWQRLHA4I-AqpHfE4_c2OZCYEI" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.linkedin.com/posts/sap-developers_get-ready-devtoberfest-by-sap-teched-in-activity-7354571776418324480-OPqH?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAAO_6sQB6ZWQRLHA4I-AqpHfE4_c2OZCYEI&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Devtoberfest YouTube Playlist from 2024: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/playlist?list=PL6RpkC85SLQDHz97qsNTNAE2jnUKj8X5d" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/playlist?list=PL6RpkC85SLQDHz97qsNTNAE2jnUKj8X5d&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;HIDDEN BONUS: Scramble puzzle already published that will be part of the fun activities – earn points already: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-languages.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://developers.sap.com/tutorials/devtoberfest2025-fun-scramble-languages.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A good primer on cryptic crosswords: &lt;/SPAN&gt;&lt;A href="https://www.youtube.com/watch?v=c9ZtJMAVqqY" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.youtube.com/watch?v=c9ZtJMAVqqY&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669538272"&gt;&lt;SPAN&gt;CHAPTER TITLES&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 SAP Developer Challenge&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:09 Demojam Promo&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:45 Using Jupyter in SAP Business Application Studio and in SAP Business Data Cloud&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:15 Devtoberfest Fun Activities&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1473024767"&gt;&lt;SPAN&gt;TRANSCRIPTION&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Intro]&lt;/STRONG&gt; This is the SAP Developer News for August the 7th, 2025.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Amar]&lt;/STRONG&gt; Hello, SAP developers. The August Developer Challenge now live and available in SAP developers’ community. In this month, we are diving into SAP Fiori element with flexible programming model. If you ever wanted to go beyond the standard template and tailor your app's behavior with powerful custom logic, this challenge is for you. You will get hands-on experience with flexible programming model, learn how to use extensions point, building block and controller extensions to enhance your Fiori element application. I highly recommend checking it out. The blog post with all the details about the challenge is linked below in the video description. As always, all the participants who will complete this challenge will earn the SAP Community patch. I hope you'll like it. Bye-bye.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Tom]&lt;/STRONG&gt; Hi dear, I got the demojam trophy for the winner of the Demojam at SAP TechEd Berlin this year. Thats right, demojam is back again this year and the team with the best demo will be voted on by the audience and get this fabulous price. So ,I hope everyone is looking forward to a great show this year, there are teams hard at work building on their demos as we speak. And whether you're in person Berlin or joining us online for the virtual event, you'll be able to tune in and see all the excitement of Demo Jam. So just one more reason to be looking forward to TechEd again this year.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Witalij]&lt;/STRONG&gt; Do you remember my announcement in last week's SAP Developer News about using Python in SAP Business Application Studio? Of course you do, right? This week, I've shared two new blog posts expanding on that topic. The first explores how to use Jupyter Notebooks with SAP Business Application Studio, and the second explains how to set up Conda Forge instead of the default Python virtual environment. These resources should be particularly helpful if you are working on machine learning or AI projects in bus. But what if you want to do something similar in SAP Business Data Cloud? Then you'll want to check out how Jupyter Notebooks work in SAP Databricks. Our Regional Center of Excellence team has you covered. They've published a step-by-step walkthrough for training a time-series forecasting model in SAP Business Data Cloud. What's best? You can do this in basic trial for free. Want to explore SAP Databricks more deeply? Product Management has released a two-part blog series focused specifically on that, packed with technical insights. Oh, and before I forget, recordings from the recent BDC Architecture series, including sessions on SAP Databricks, have just gone live this week. You'll find all the links in the description below.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Daniel]&lt;/STRONG&gt; Devtoberfest is right around the corner, and I hope you've seen our posts on social media. I just wanted to let you know that in addition to the dozens and dozens of learning sessions by the best presenters and the smartest developers, we'll also have a few fun treats. We'll, of course, have Pettoberfest this year with a little bit of Gen AI twist. We'll also have coding challenges, and, of course, we will bring back the SAP cryptic crossword. Now, for you newbies, cryptics are exciting to solve, also exciting to create, and I'll just give you an idea of how they work. It's like getting a crossword puzzle with clues. But unlike a regular crossword, every clue is divided into two. Half of it is a definition like any other crossword. But the other half is a play on words or something that indicates how the word is constructed. And it's your job to figure out where to break up the clue. So, for example, hybris a clue, command to round up horrific lice. Sounds a little bit weird, no? But if you look at it, you can see that you can divide it into two. Command to round up, which is a definition. Any ideas what that could be? And the second part, horrific lice. Horrific indicates it's an anagram of lice. You can rearrange the letters in lice to spell seal, a JavaScript method to round up a number. Pretty cool, no? we'll also have a scavenger hunt that will take you throughout the community throughout our youtube channel github even the help portal and you'll search for clues to the answer to the scavenger hunt and then you'll earn hundreds perhaps thousands of points towards our devtoberfest grand prize more details to come as we approach devtoberfest which starts september 29th.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-august-7th-2025/ba-p/14175053"/>
    <published>2025-08-07T21:10:00.027000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/introducing-vortex-your-ui5-sftp-ftp-viewer-manager-in-sap-btp-cf/ba-p/14175619</id>
    <title>Introducing VORTEX - Your UI5 SFTP / FTP Viewer/Manager in SAP BTP CF</title>
    <updated>2025-08-08T12:15:20.520000+02:00</updated>
    <author>
      <name>vinaymittal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/187725</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736974706"&gt;Introduction:&lt;/H2&gt;&lt;P&gt;This is a SFTP / FTP Viewer/Editor built in UI5&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="look.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320601i0A4A7B2E339B2466/image-size/large?v=v2&amp;amp;px=999" role="button" title="look.png" alt="look.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Why do we need VORTEX?&amp;nbsp;&lt;/P&gt;&lt;P&gt;I have witnessed first hand how teams download open source tools like fileZilla and WINSCP ( which by the way despite all their open source goodness have been branded as unsafe by some organization for internal use.) to explore file servers, view or edit files.&lt;/P&gt;&lt;P&gt;These could be Integration developers who try to access the file servers for troubleshooting or these could be functionals who would like to view the files for auditing purpose or verification or for any other reason.&lt;/P&gt;&lt;P&gt;Now coming to the Why!&lt;/P&gt;&lt;P&gt;1) It's not okay to share credentials - sometimes common credentials with team members only for them to store it locally in the FileZilla or WinSCP repo. This introduces unacceptable risk!&lt;/P&gt;&lt;P&gt;2) There is no logging so as to who tried to access which file or edited what?&lt;/P&gt;&lt;P&gt;3) Sometimes people leave the organization but they still have your remote SFTP server cred right? Again a risk!&lt;/P&gt;&lt;P&gt;4) There is no trail of any kind to track unauthorized changes to a file.&lt;/P&gt;&lt;P&gt;5) If the team members access these SFTP servers for example from their own desktop what about the firewall? Do you request a specific firewall rule just so that a team member can access the file server from their local desktop?&lt;/P&gt;&lt;P&gt;6) Private Keys! Some sftp servers need a private key for authentication, like bank SFTP servers. How do you connect to them if you have to from your desktop? Do you ask for the private key from the security team? (Don't request that now, there is high chance they wont share it. They are private for a reason.)&lt;/P&gt;&lt;P&gt;7) Some third party SFTP servers are only accessible from whitelisted IP's, for example you may have multiple connections from SAP CI to such SFTP servers and SAP CI / CF IP's have been whitelisted by the third party.&lt;/P&gt;&lt;P&gt;If you have multiple SFTP servers to connect to , credential management is a nightmare and because of multiple reasons above it's sometimes not possible to have a holistic centralized and controlled access.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1540461201"&gt;&lt;STRONG&gt;Solution:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This is where VORTEX comes in. I wanted to learn UI5 but couldn't find anything interesting that would drive me to learn it. Then I got this idea about VORTEX. I thought why not. And here we are 1 week later.&lt;/P&gt;&lt;P&gt;VORTEX is a tool build using SAP BAS, UI5, which connects with SAP CI using my state of the art custom API's&amp;nbsp; which leverage Connectivity service for accessing cloud connector, data stores, JSCH sessions, leveraging existing virtual host on your cloud connector.&lt;/P&gt;&lt;P&gt;The architecture is pretty neat, app in SAP BTP CF , connects to SAP CI via a destination and SAP CI custom code does the rest.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vortex.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307071i824A7C60BF0D4DFA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="vortex.drawio.png" alt="vortex.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;Here is how it looks&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="look.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320602i5AE82E56D6CE9951/image-size/large?v=v2&amp;amp;px=999" role="button" title="look.png" alt="look.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;It allows users to connect to upto three SAP CI environments as there are different SFTP servers linked to dev or qa or prod and a clear demarcation between them is necessary while enabling users to glide between the environments in seconds.&lt;/P&gt;&lt;P&gt;It also allows them to change the UI theme to their liking.&lt;/P&gt;&lt;P&gt;VORTEX will display all your SAP Integration Suite IFLOWS, and then allows you to pull SFTP connection details from these iflows, all at once , or selectively.&lt;/P&gt;&lt;P&gt;VORTEX then shows you the available connections with the relevant info&lt;/P&gt;&lt;P&gt;Connections blank at first&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298355iCF2D6B25A9087D59/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 2.png" alt="VORTEX - 2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Scanning&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298357i58B9B65D94B69671/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX-3.png" alt="VORTEX-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;After I do the "Scan All" We can see the pulled connections.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298358i9920D3BDBB092706/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX-4.png" alt="VORTEX-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Now you will see "Unique" connections here, I have a algorithm in place to determine the uniqueness of connections. If you have new iflows , you can just again come back to this tool and scan the new flows selectively or scan everything again. This wont edit / remove existing connections but will just add new connections in the list.&lt;/P&gt;&lt;P&gt;Now comes the interesting part!! Hmmm.. what If I need to connect to a SFTP server which doesn't have a filow in SAP CI??&lt;/P&gt;&lt;P&gt;Just add a new connection manually!&lt;/P&gt;&lt;P&gt;VORTEX allows you to add new connections, Edit connections and Delete connections. (Delete button is on the extreme right)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298360i5D81ACE78FCDB3F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 5.png" alt="VORTEX - 5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Result!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298362i5583B9620191CAF3/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 6.png" alt="VORTEX - 6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;VORTEX will now allow you to make the connection to this SFTP server through SAP CI! But there is a condition, the credential or the private key should be already there in SAP CI Secure store / keystore for VORTEX to use. This guarantees that users DO NOT have access to any secure material.&lt;/P&gt;&lt;P&gt;Now comes the Fun part........Let's Connect!&lt;/P&gt;&lt;P&gt;Notice that connect column with a play button? That's what we use to connect to a particular connection!&lt;/P&gt;&lt;P&gt;And now we are connected! You can see all the files and folders and they have different icons depending on their type.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298370i4B8CA530DD45EDE2/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 7.png" alt="VORTEX - 7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;The navigation bar on top is fully functional, allows you to go back and forth between folders, delete folders and shows you the path too. since we are on root it shows "/"&lt;/P&gt;&lt;P&gt;Lets open a File&lt;/P&gt;&lt;P&gt;You can now see the file in a text editor that allows you to edit / save / view the file. You can also&amp;nbsp;download the file (select the file and click on download button, folders cannot be downloaded at the moment) and rename the files and see file permissions&lt;/P&gt;&lt;P&gt;If its a pdf file it opens in UI5 PDF Viewer.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298375i60F60EBA70245B22/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 8.png" alt="VORTEX - 8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298558i38D93898E1F852BE/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 9.png" alt="VORTEX - 9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;The salient Feature?&lt;/P&gt;&lt;P&gt;It connects to all 6 SFTP Connection types, Internet - Basic auth, Internet - Cert Auth, Cloud connector - Basic auth, Cloud connector - Cert auth, Internet - Dual and Internet - Cert auth&lt;/P&gt;&lt;P&gt;Everything is logged and tracked and logs can be seen in a log viewer utility. This logs each action from logging in , to reading a file content, to editing it, deleting it etc.&lt;/P&gt;&lt;P&gt;Admins can see logs for a particular connection, they can see who logged in, renamed which file, downloaded what, deleted which folder or file or who modified permissions last etc. This is easily searchable based on a date time range / free text or user id&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 551).png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301107iE82360E41A26866B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 551).png" alt="VORTEX - 551).png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You also have the option to set automatic purge of logs and download all logs for a connection in CSV format or just get rid of all logs.&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;BR /&gt;Admins can also control Permissions to specific Directories for each connection in this format&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "root": {
        "records": [
           {
                "connectionId": "b96h6lhPJUvbQqoK",
                "accessType": "SELECTIVE",
                "globalRestrictions": {
                    "downloadRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ],
                    "readRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ],
                     "writeRestrictedDirs": [
                        "Lw==",
                        "L1Jvb3Q="
                    ]
                },
                "users": [
                    {
                        "userId": "#",
                        "unrestrictedAccess": false,
                        "permissions": {
                            "readAccess": {
                                "type": "ALL",
                                "directories": []
                            },
                            "writeAccess": {
                                "type": "NONE",
                                "directories": []
                            },
                            "downloadAccess": {
                                "type": "SELECTIVE",
                                
                                "directories": [
                                    "Lw==",
                                    "Lw=="
                                ]
                            }
                        }
                    }
                ]
            }
        ]
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="VORTEX - 11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298837i711C675B431C1B3B/image-size/large?v=v2&amp;amp;px=999" role="button" title="VORTEX - 11.png" alt="VORTEX - 11.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;There is no API to manage Admins though as Admins should have the required role in SAP and only admins can manage permissions.&lt;BR /&gt;&lt;BR /&gt;Advanced Analytics:&lt;BR /&gt;As everything you do in this tool is captured and logged systematically, it only made sense to have a separate analytics page for those logs for admins&lt;BR /&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="analytics3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302003i15013028DC2E04F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="analytics3.png" alt="analytics3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="analytics2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302004i0DB98B3D392CF448/image-size/large?v=v2&amp;amp;px=999" role="button" title="analytics2.png" alt="analytics2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="analytics1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302005iFD18C54831803171/image-size/large?v=v2&amp;amp;px=999" role="button" title="analytics1.png" alt="analytics1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can also set hearbeat alerts for connections, where you can set frequency from minutes to days or months for automatic connection checks. These alerts can then be routed to the target recipients. These recipients can be of type email, SMS or slack webhooks. - For these configuration needs to be done by you as the tool will just route the alerts to respective data stores.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hb1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307195iEF3124B49ADE0CEB/image-size/large?v=v2&amp;amp;px=999" role="button" title="hb1.png" alt="hb1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;choose your channels and recipients&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hb2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307196iD0C59F273213AF63/image-size/large?v=v2&amp;amp;px=999" role="button" title="hb2.png" alt="hb2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;The connections you make from VORTEX can be forced to use "Strict Host Checking" Which is highly recommended. For this purpose I have added a known host file manager, here you can Scan all connection and pull up their public host key and also scan the Known.host file inside the SAP CI tenant and merge the two and store it in a separate datastore which acts as our repository in SAP CI- this feature also makes sure there are no duplicates in our known host data.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Kn Host.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307200i450F6933094E7CE6/image-size/large?v=v2&amp;amp;px=999" role="button" title="Kn Host.png" alt="Kn Host.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You can also upload your known host file if you like and it will merge it with the existing public host keys.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Connection Health checks: We also have automatic health check on connections, as soon as a user log in they can see if the connections are reachable or not , notice the stop / begin buttons. Stop means unreachable and begin button means the connection is fine&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="health check.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307207i39E7F4C5A7547A7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="health check.png" alt="health check.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You can also view a list of user credentials and Keystore entries available to you.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="view Cred2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307212iC2642B5BF55A3904/image-size/large?v=v2&amp;amp;px=999" role="button" title="view Cred2.png" alt="view Cred2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="view Cred.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307211i72A0682E58D7B278/image-size/large?v=v2&amp;amp;px=999" role="button" title="view Cred.png" alt="view Cred.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You can Decrypt files on the fly while reading them and you can also encrypt files using the RSA / PGP keys in the keystore.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="enc4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307216i123FD64D6D79F818/image-size/large?v=v2&amp;amp;px=999" role="button" title="enc4.png" alt="enc4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="enc3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307213i5CE96197B828B600/image-size/large?v=v2&amp;amp;px=999" role="button" title="enc3.png" alt="enc3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="enc2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307215i4DCCBB13EB9B596D/image-size/large?v=v2&amp;amp;px=999" role="button" title="enc2.png" alt="enc2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="enc1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307214i5673EF8A1230ED2F/image-size/large?v=v2&amp;amp;px=999" role="button" title="enc1.png" alt="enc1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In case you don't want to save it after decrypting a file and reading it or after encrypting a file, just press cancel or you can also pull the original file content.&lt;/P&gt;&lt;P&gt;The upgraded navigation bar contains new features now. IT shows the users what all directories they have access to and to what extent, it also has a search bar to allow users to search files.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="new nav2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307218iFE2E22A4413948A9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new nav2.png" alt="new nav2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="new nav.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307217i7E6F91F06B70E614/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="new nav.png" alt="new nav.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;In case you would like to create credentials inside SAP CI, you don't have to toggle between VORTEX and SAP CI and you can directly create a credential from inside VORTEX into SAP CI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="create cred.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307219i1C30624EE48A1723/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="create cred.png" alt="create cred.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;And in the end permissions have been significantly updated and have been tested thoroughly and work fine too.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="permissions.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307221iA6F8B26AA792D66C/image-size/large?v=v2&amp;amp;px=999" role="button" title="permissions.png" alt="permissions.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You can also upload files and folders and you can also download files and folders, if you are authorized to do so.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="uploads.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307220i02C374C0D8CB204F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="uploads.png" alt="uploads.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Yo can also set maximum upload sizes and download sizes per connection. If a user tries to upload or download more than the specified limit their request will be rejected.&lt;/P&gt;&lt;P&gt;Admin can also enable and disable connections and heartbeat alerts, also the heartbeat alerts also send out a recovery email the very first time they detect a recovery from a failed connection attempt to the target SFTP server.&amp;nbsp;&lt;/P&gt;&lt;P&gt;VORTEX has two profiles - Admin and Normal User.&lt;/P&gt;&lt;P&gt;A Normal User can only see the connections they are tagged to access via permissions and they can only connect to those connections.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="user view.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313939i9D6605B4CF8B62DD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="user view.png" alt="user view.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;Admins can do everything. Here is a peak at the Admin home screen.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="admin_persona.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/313940iC278327D9CEE1649/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="admin_persona.png" alt="admin_persona.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;New Feature:&lt;/P&gt;&lt;P&gt;VORTEX now supports creation of&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;a) Automated Complex File Transfers between connections (servers)&lt;/STRONG&gt; - For cases which cannot be fulfilled by standard SAP CI adapters.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;b)&amp;nbsp; Archiving Jobs on the same server&lt;/STRONG&gt; - This is more like moving files from one directory to another. Before you banish me for blasphemy in my defense, Archiving is highly misunderstood. Most of us think archiving involves reading a file from one directory and then writing it to another, that's not the case. It's a simple rename. SFTP files and directories are stored as references. You dont move file content you just rename the reference. So for archiving let's say 30GB of data all it takes is 1 second a few kilobytes of network bandwidth via VORTEX.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;c) Deletion Jobs -&amp;nbsp;&lt;/STRONG&gt;Deletion of files (scheduled/unscheduled) is not possible via SAP CI without actually reading the data, While again all it takes to delete 20-30 gb worth of old useless files on a server is a single command and nothing is read and VORTEX does the job in seconds.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="fileTransfer1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314755i9A05B706A8679EB6/image-size/large?v=v2&amp;amp;px=999" role="button" title="fileTransfer1.png" alt="fileTransfer1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Here is the config managed via a form.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="fileTransferdialog2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314756i3A9807783B09AAED/image-size/large?v=v2&amp;amp;px=999" role="button" title="fileTransferdialog2.png" alt="fileTransferdialog2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;And some more settings if you need to decrypt something after reading it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="fileTransferdialog3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314759i2D06911FBEC855F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="fileTransferdialog3.png" alt="fileTransferdialog3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Supports encryption while writing on target server via SAP CI standard functions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="fileTransferdialog4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314758i1544FFC21C2E6C04/image-size/large?v=v2&amp;amp;px=999" role="button" title="fileTransferdialog4.png" alt="fileTransferdialog4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;And extensive alerting&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="fileTransferdialog5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314757i79A28B5B85B64CF5/image-size/large?v=v2&amp;amp;px=999" role="button" title="fileTransferdialog5.png" alt="fileTransferdialog5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;The rationale behind automated file transfer is NOT TO REPLACE the beautiful functionality SAP CI provides. The motive is to complement it. If anything can be solved using SAP CI standard adapters do not use this for file transfers.&lt;/P&gt;&lt;P&gt;However when it comes to deletion and archiving (based on file sizes , age etc.) I would recommend setting up jobs via VORTEX. Super easy to setup.&lt;/P&gt;&lt;P&gt;It also supports File pickups from multiple directories in the same job schedule, deletion from multiple source dirs and archiving too.&lt;/P&gt;&lt;P&gt;Vortex also makes it easier for business to view flat XML, CSV, Tab separated data with (automatic header detection) in tabular format. For those who are a bit more technical it allows you to convert XML to JSON and JSON to XML in the editor.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="CSVConverter2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315121i6574478DCBA9E373/image-size/large?v=v2&amp;amp;px=999" role="button" title="CSVConverter2.png" alt="CSVConverter2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Shows in a searchable table, with sorting option on each column and search option as well. Imagine a world where you don't have to worry about business downloading sensitive data just to be able to see it in excel sheets!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="CSVConverter.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315119i357667623BAEE1E8/image-size/large?v=v2&amp;amp;px=999" role="button" title="CSVConverter.png" alt="CSVConverter.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The demo doesn't cover everything as Vortex is continuously evolving and has more features now,&amp;nbsp;&lt;/P&gt;&lt;P&gt;This is Ready for public release and will be available on SAP store real soon.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;Here is a Demo! - (there is a bit of lag because I used a test SFTP server from internet which was free , hence the slow connection)&lt;BR /&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F-X2_gTeOObE%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D-X2_gTeOObE&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F-X2_gTeOObE%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="Vortex - SAP UI5 based SFTP Manager" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/introducing-vortex-your-ui5-sftp-ftp-viewer-manager-in-sap-btp-cf/ba-p/14175619"/>
    <published>2025-08-08T12:15:20.520000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/streamlining-rest-api-integrations-in-sap-datasphere-with-task-chains-and/ba-p/14169273</id>
    <title>Streamlining REST API Integrations in SAP Datasphere with Task Chains and FastAPI on SAP BTP</title>
    <updated>2025-08-25T08:30:00.016000+02:00</updated>
    <author>
      <name>christian_willi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/678327</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607083966"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;With the recent introduction of API Tasks in Task Chains, SAP Datasphere now supports direct orchestration of external REST services (&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/c8a54ee704e94e15926551293243fd1d/9a8489ed7443436197fbd8b8ffba61ab.html" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;see SAP documentation&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;). This enhancement unlocks new integration possibilities, particularly for scenarios where no standard connectors are available.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In our use case, we aim to extract data from an open REST API and load it into SAP Datasphere. To achieve this, we developed a custom wrapper API—built with FastAPI and hosted on SAP Business Technology Platform (BTP)—that handles both data extraction and the writing of that data into SAP HANA Cloud, which underlies SAP Datasphere. The entire data loading process is then triggered and managed via a REST API step within a Task Chain.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;At the core of this solution is a lightweight microservice that seamlessly integrates a third-party REST API into SAP Datasphere. The microservice is designed to be modular, secure, and easy to maintain, and enables a fully automated integration pipeline.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539653180"&gt;&lt;SPAN&gt;Key Features of the Approach&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;REST API extraction wrapped in a FastAPI-based microservice&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Basic HTTP Authentication for secure access&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Data retrieval from public or external REST APIs&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Automatic detection and mapping of SAP HANA-compatible data types&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Dynamic table creation in SAP HANA Cloud&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Batch data insertion with upload timestamps for traceability&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Deployment on SAP BTP (Cloud Foundry)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Registration as an HTTP connection in SAP Datasphere&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Integration into a Task Chain for full orchestration of the data workflow&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_0-1754041967869.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295097i75FFB84DC33C0D6F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="christian_willi_0-1754041967869.png" alt="christian_willi_0-1754041967869.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1214056956"&gt;&lt;SPAN&gt;Requirement&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Data integration from 3rd-party REST APIs is still a challenge in SAP Datasphere, particularly when no standard connectors are available. SAP offers solutions like Open Connectors or SAP Cloud Integration via the Integration Suite. However, these options come with additional cost and infrastructure overhead.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Our proposed solution is a lightweight, developer-friendly alternative that utilizes:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;A simple REST service hosted on SAP BTP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Open SQL schema access to the underlying SAP HANA Cloud instance&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Integration into Task Chains via the new REST API task type&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This allows full orchestration and governance from within SAP Datasphere, without introducing unnecessary middleware layers.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1017543451"&gt;&lt;SPAN&gt;Solution&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-950112665"&gt;&lt;SPAN&gt;FastAPI Solution on SAP BTP&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;At the core of this architecture lies a microservice built with FastAPI. This Python-based service acts as a universal adapter to extract, transform (lightly), and load data into SAP HANA Cloud. The code can also be found in our &lt;/SPAN&gt;&lt;A href="https://github.com/zpartner/API2HanaCloud" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;GIT repository&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-882681879"&gt;&lt;SPAN&gt;Key Components&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Authentication&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;All secure endpoints require HTTP Basic Authentication, with credentials configurable via environment variables.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;HANA Integration&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;&lt;SPAN&gt;Using the hana_ml library, the service connects to the HANA Cloud database and &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;automatically detects column types using heuristics (e.g., timestamp recognition, length-adjusted NVARCHAR)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Dynamically creates a table if it doesn't exist&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Inserts records in batch mode, with an added UPLOAD_TS timestamp column&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN&gt;Endpoints&lt;BR /&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Endpoint&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Method&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Description&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;/&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;GET&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Health check&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;/test-hana-connection&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;GET&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Verifies database credentials and connection&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;/extract-and-write&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;POST&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Triggers extraction from a third-party API and writes to HANA&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;/preview-data&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;GET&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Fetches sample records from a REST API&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;/infer-types&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;GET&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Infers HANA-compatible types from JSON response&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Deployment&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;The service is packaged with a manifest.yaml for deployment on SAP BTP (Cloud Foundry). It uses the Python buildpack and runs via uvicorn in production.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-686168374"&gt;&lt;SPAN&gt;Outlook&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;This FastAPI-based solution can be flexibly extended to support more advanced integration needs:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Authentication: Easily add OAuth2, API keys, or Bearer tokens to handle secured APIs.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;REST Call Chaining: Implement multi-step workflows by chaining dependent API calls asynchronously.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Pagination: Add logic for offset, cursor, or token-based pagination to collect full datasets.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Schema Flexibility: Support field renaming, normalization of nested JSON, and custom type overrides.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-489654869"&gt;&lt;SPAN&gt;Testing&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;For Testing purposes we tested everything with Postman and the public available Harry Potter API &lt;/SPAN&gt;&lt;A href="https://hp-api.onrender.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://hp-api.onrender.com&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_1-1754041967871.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295096i56379C539E365C95/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_1-1754041967871.png" alt="christian_willi_1-1754041967871.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-164058645"&gt;&lt;SPAN&gt;SAP Datasphere Integration&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;To communicate with this BTP service we performed the following steps:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Whitelist the IPs of our BTP instance in the SAP Datasphere tenant (For testing from Business Application Studio (BAS)you may also want to whitelist those IPs as well)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a HTTP connection for the usage in the Task Chain&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;BR /&gt;&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_2-1754041967873.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295095i56533938331AB8DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_2-1754041967873.png" alt="christian_willi_2-1754041967873.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;In the task chain we can now add this step and configure the body.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_3-1754041967875.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295098iE1B70CE0E8F27D01/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_3-1754041967875.png" alt="christian_willi_3-1754041967875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the Configuration panel we can now select our HTTP connection:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_4-1754041967876.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295099iF44FF0BC90ADED48/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_4-1754041967876.png" alt="christian_willi_4-1754041967876.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;And also configure our REST call:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_5-1754041967878.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295100i22970E79E15FA4B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_5-1754041967878.png" alt="christian_willi_5-1754041967878.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After running the Task Chain we can see the data is now loaded into our table.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="christian_willi_0-1754043163889.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295146i80681964BC6CA561/image-size/large?v=v2&amp;amp;px=999" role="button" title="christian_willi_0-1754043163889.png" alt="christian_willi_0-1754043163889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--161537579"&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;The integration of a FastAPI-based microservice into SAP Datasphere via Task Chains marks a significant advancement in streamlining data ingestion from third-party REST APIs. By leveraging SAP BTP for deployment and utilizing the new REST API task type within Task Chains, we demonstrated a lightweight and developer-friendly alternative to traditional integration tools like SAP Cloud Integration or Open Connectors.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Looking ahead, the framework can be extended to accommodate more complex data workflows, robust security models, and advanced transformation logic. With this foundation, organizations can seamlessly orchestrate external data services within SAP Datasphere while maintaining full control, traceability, and governance—all without the need for additional middleware.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-411688999"&gt;&lt;SPAN&gt;Links:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For Integration possibilities with Open Connectors and Fast API deployment you can also take a look at my other blogs&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ZPARTNER Links:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.zpartner.eu/automating-sap-datasphere-task-chains-with-cli-wrapping-fastapi-integration-with-sap-analytics-cloud/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.zpartner.eu/automating-sap-datasphere-task-chains-with-cli-wrapping-fastapi-integration-with-sap-analytics-cloud/&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.zpartner.eu/mastering-custom-integrations-in-sap-datasphere-leveraging-open-connectors-for-rest-apis/" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.zpartner.eu/mastering-custom-integrations-in-sap-datasphere-leveraging-open-connectors-for-rest-apis/&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;SAP Community Links:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/automating-sap-dsp-task-chains-with-cli-wrapping-fastapi-integration-with/ba-p/13874275" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-members/automating-sap-dsp-task-chains-with-cli-wrapping-fastapi-integration-with/ba-p/13874275&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/mastering-custom-integrations-in-sap-datasphere-leveraging-open-connectors/ba-p/13990658" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-members/mastering-custom-integrations-in-sap-datasphere-leveraging-open-connectors/ba-p/13990658&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/streamlining-rest-api-integrations-in-sap-datasphere-with-task-chains-and/ba-p/14169273"/>
    <published>2025-08-25T08:30:00.016000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/an-sap-ui5-application-to-export-data-to-excel-sheet-spreadsheet-from-sap/ba-p/14183807</id>
    <title>An SAP UI5 application to Export Data to Excel sheet (Spreadsheet) from SAP UI5 table (sap.ui.table)</title>
    <updated>2025-09-04T06:43:01.831000+02:00</updated>
    <author>
      <name>sreevedavyasarangarajasre91</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/834934</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hi SAP UI5 family,&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; In this article, we are going to understand how to implement&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;export&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;functionality the&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sap.ui.table&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;table data to the&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;excel(Spreadsheet)&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;using&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;sap.ui.export.Spreadsheet&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;library. In this application, we are going to create an SAP UI5 free style application which has sample employee JSON data that has been binded to the UI table and a toggle button has been added to trigger the export or downloading the excel data.&lt;/SPAN&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp;&lt;BR /&gt;This is step by step guide to create a fiori application with SAP UI5 UI table and Export Button&lt;STRONG&gt;&lt;BR /&gt;Step 1: Create a Fiori Project&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;To begin, create a new SAP Fiori project using the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&amp;nbsp;Fiori Generator Freestyle - Basic&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;template. This will serve as the foundation for our application.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sreevedavyasarangarajasre91_0-1755600976530.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302353i5C2D06830FEB3B9A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sreevedavyasarangarajasre91_0-1755600976530.png" alt="sreevedavyasarangarajasre91_0-1755600976530.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sreevedavyasarangarajasre91_1-1755601009675.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302354i8305C2CF237C5318/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sreevedavyasarangarajasre91_1-1755601009675.png" alt="sreevedavyasarangarajasre91_1-1755601009675.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Application Folder Structure:&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sreevedavyasarangarajasre91_2-1755601065916.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302355i2BA976BE983C588A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sreevedavyasarangarajasre91_2-1755601065916.png" alt="sreevedavyasarangarajasre91_2-1755601065916.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 : Create a Dynamic Page , add UI Table Details and Add the sample JSON Data in controller&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; In TableView.view.xml, Add this code and add the Sample JSON data model object in the onInit() in TableView.Controller.js .&lt;BR /&gt;&lt;BR /&gt;TableView.view.xml&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View
    controllerName="exporttoexcelex1.controller.TableView"
    xmlns:mvc="sap.ui.core.mvc"
    xmlns:m="sap.m"
    xmlns="sap.ui.table"
    xmlns:f="sap.f"
&amp;gt;
    &amp;lt;f:DynamicPage&amp;gt;
        &amp;lt;f:title&amp;gt;
            &amp;lt;f:DynamicPageTitle &amp;gt;
            &amp;lt;f:heading &amp;gt;
              &amp;lt;m:Title level="H2" text="SAP UI5 - Example : UI Table To Excel Export" /&amp;gt;
            &amp;lt;/f:heading&amp;gt;

            &amp;lt;/f:DynamicPageTitle&amp;gt;
        &amp;lt;/f:title&amp;gt;
        &amp;lt;f:content&amp;gt;
            &amp;lt;Table
                id="exportTable"
                rows="{/modelData}"
                enableColumnFreeze="true"
                selectionMode="Single"
            &amp;gt;
                &amp;lt;extension&amp;gt;
                    &amp;lt;m:OverflowToolbar&amp;gt;
                        &amp;lt;m:Title text="{i18n&amp;gt;title}" /&amp;gt;
                        &amp;lt;m:ToolbarSpacer /&amp;gt;
                        &amp;lt;m:ToggleButton id="export_btn" text="{i18n&amp;gt;export_btn}" icon="sap-icon://excel-attachment" press="onExcelExport"/&amp;gt;

                    &amp;lt;/m:OverflowToolbar&amp;gt;
                &amp;lt;/extension&amp;gt;
                &amp;lt;columns&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;m:Label text="{i18n&amp;gt;name}" /&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;m:Text  text="{Name}" /&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                     &amp;lt;Column&amp;gt;
                        &amp;lt;m:Label text="{i18n&amp;gt;dept}" /&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;m:Text text="{Department}" /&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                     &amp;lt;Column&amp;gt;
                        &amp;lt;m:Label text="{i18n&amp;gt;buiAddress}" /&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;m:Text text="{BuiAddress}" /&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column&amp;gt;
                        &amp;lt;m:Label text="{i18n&amp;gt;phone}" /&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;m:Text text="{Phone}" /&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                &amp;lt;/columns&amp;gt;
            &amp;lt;/Table&amp;gt;
        &amp;lt;/f:content&amp;gt;
    &amp;lt;/f:DynamicPage&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;TableView.controller.js&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "sap/ui/model/json/JSONModel",
    "sap/m/MessageToast",
    "sap/ui/export/Spreadsheet"
], (Controller, JSONModel, MessageToast, Spreadsheet) =&amp;gt; {
    "use strict";

    return Controller.extend("exporttoexcelex1.controller.TableView", {
        onInit() {
            var oView = this.getOwnerComponent();
            var oDataModel = new JSONModel();
            var oData = {
                modelData: [
                    {
                        "Name": "Raghu",
                        "Department": "Finance",
                        "BuiAddress": "Hyderabad",
                        "Phone": "+919234521532",
                        "Editable": false
                    },
                    {
                        "Name": "Mani",
                        "Department": "Technology",
                        "BuiAddress": "Bangalore",
                        "Phone": "+919234523423",
                        "Editable": false
                    },
                    {
                        "Name": "Krishna Priya",
                        "Department": "Technology",
                        "BuiAddress": "Hyderabad",
                        "Phone": "+919434345226",
                        "Editable": false
                    },
                    {
                        "Name": "Ester",
                        "Department": "Finance",
                        "BuiAddress": "Chennai",
                        "Phone": "+91945345226",
                        "Editable": false
                    },
                    {
                        "Name": "Niraj",
                        "Department": "Finance",
                        "BuiAddress": "Hyderabad",
                        "Phone": "+91945345226",
                        "Editable": false
                    }
                ]
            }


            oDataModel.setData(oData);
            oView.setModel(oDataModel);
        },
      
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 : Implement the press event trigger of the Export To excel Button&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp; &amp;nbsp;Add this logic in controller.js .&amp;nbsp;&lt;SPAN&gt;"sap/ui/export/Spreadsheet" is the library should be used for excel export.&lt;BR /&gt;TableView.controller.js&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;onExcelExport: async function (oEvent) {
            //  "sap/ui/export/Spreadsheet" is the library that has been used here
            var oTable = this.byId("exportTable");
            // get Rows of the Table
            var oBinding = oTable.getBinding("rows");
            // get Columns of the Table and get the Header labels and Property values 
            var aCols = oTable.getColumns().map(function (oColumn) {
                var sProperty = oColumn.getSortProperty();
                if (!sProperty) {
                    var oTemplate = oColumn.getTemplate();
                    sProperty = oTemplate &amp;amp;&amp;amp; oTemplate.getBindingPath("text");
                }
                return {
                    label: oColumn.getLabel().getText(),
                    property: sProperty,
                    type: "String"
                };
            });
            var iLength = oBinding.getLength();
            // getting Data of the Table
            // use getContexts() for odata V2
            // use requestContexts() for odata v4
            var aContexts = await oBinding.getContexts(0, iLength);
            var aData = aContexts.map(function (oContext) {
                return oContext.getObject();
            });
            // settings for the Spreadsheet
            var oSettings = {
                workbook: {
                    columns: aCols,
                },
                dataSource: aData,
                fileName: "Exported Data.xlsx",
                worker: false
            };
            // getting new Spreadsheet object and binding the settings
            var oSpreadsheet = new Spreadsheet(oSettings);
            oSpreadsheet.build().then(function () {
                MessageToast.show("Exported excel data successfully ...");
            }).finally(function () {
                oSpreadsheet.destroy();
            })
        },
      &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Application Screen:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sreevedavyasarangarajasre91_3-1755601740603.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302361i2A8507B86BB8CD3A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sreevedavyasarangarajasre91_3-1755601740603.png" alt="sreevedavyasarangarajasre91_3-1755601740603.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;ExportData.xlsx&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sreevedavyasarangarajasre91_4-1755601774016.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302362i94DD70901466575D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sreevedavyasarangarajasre91_4-1755601774016.png" alt="sreevedavyasarangarajasre91_4-1755601774016.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;By following these steps, The SAP UI table can be exported to spreadsheet or Excel sheet&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;Thanks and Regards,&lt;BR /&gt;Sree Vedavyasa Rangarajasree&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/an-sap-ui5-application-to-export-data-to-excel-sheet-spreadsheet-from-sap/ba-p/14183807"/>
    <published>2025-09-04T06:43:01.831000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-use-npm-modules-like-crypto-js-in-sapui5-using-ui5-tooling-modules/ba-p/14170304</id>
    <title>How to Use NPM Modules Like crypto-js in SAPUI5 Using UI5 Tooling Modules</title>
    <updated>2025-09-04T07:01:18.162000+02:00</updated>
    <author>
      <name>dakshkumar_sap</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2203550</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735992806" id="toc-hId-1736822832"&gt;Use NPM Modules in SAPUI5 on Cloud Foundry with UI5 Tooling (crypto-js Example)&lt;/H2&gt;&lt;P&gt;Ever wanted to use modern JavaScript libraries like crypto-js in your SAPUI5 project? You're in the right place.&lt;/P&gt;&lt;P&gt;You can now easily incorporate NPM modules into your UI5 projects with the aid of ui5-tooling-modules; no copy-pasting or hacking is required..&lt;/P&gt;&lt;P&gt;In a few easy steps, let's unlock strong encryption, hashing, and token creation!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note: Controller files (or any AMD-style module) are the intended application for this technique. Require() and top-level import syntax, which are found in contemporary frontend frameworks and standard Node.js, are not available.&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539479301" id="toc-hId-1540309327"&gt;Requirements&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Node.js installed&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;SAPUI5/Fiori Tools CLI&lt;/LI&gt;&lt;LI&gt;UI5 Tooling v3&lt;BR /&gt;&lt;H2 id="toc-hId-1342965796" id="toc-hId-1343795822"&gt;Step 1: Create a Basic SAPUI5 Project&lt;/H2&gt;&lt;P&gt;Make use of the Yeoman generator or SAP Fiori Tools.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Template: Basic&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Source: None&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Attributes: Default&lt;/STRONG&gt;&lt;P&gt;Make sure index.html resembles this:&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dakshkumar_sap_1-1754208675462.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295708iAFC1FF5358BAF918/image-size/medium?v=v2&amp;amp;px=400" role="button" title="dakshkumar_sap_1-1754208675462.png" alt="dakshkumar_sap_1-1754208675462.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;script
    id="sap-ui-bootstrap"
    src="resources/sap-ui-core.js"
    data-sap-ui-theme="sap_horizon"
    data-sap-ui-resourceroots='{ "your.project.namespace": "./" }'
    data-sap-ui-oninit="module:sap/ui/core/ComponentSupport"
    data-sap-ui-async="true"
    data-sap-ui-frameOptions="trusted"&amp;gt;
&amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;&amp;nbsp;&amp;lt;script&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;id="sap-ui-bootstrap"&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; src="resources/sap-ui-core.js"&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data-sap-ui-theme="sap_horizon"&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data-sap-ui-resourceroots='{ "your.project.namespace":&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;"./" }'&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; data-sap-ui-&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;oninit="module:sap/ui/core/ComponentSupport"&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;data-sap-ui-async="true" data-sap-ui- frameOptions="trusted" /&amp;gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1146452291" id="toc-hId-1147282317"&gt;Step 2: Install ui5-tooling-modules&lt;/H2&gt;&lt;P&gt;In the root of your project:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dakshkumar_sap_2-1754208675414.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295707iCE562219EA6C81C1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="dakshkumar_sap_2-1754208675414.png" alt="dakshkumar_sap_2-1754208675414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;npm install --save-dev ui5-tooling-modulesUI5​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;npm install --save-dev ui5-tooling-modulesUI5&lt;BR /&gt;Module resolution is handled by Tooling v3, thus there's no need to manually add ui5.dependencies.&lt;/P&gt;&lt;H2 id="toc-hId-949938786" id="toc-hId-950768812"&gt;Step 3: Install crypto-js&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dakshkumar_sap_5-1754208675404.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295711i00EC0432F29AC7C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="dakshkumar_sap_5-1754208675404.png" alt="dakshkumar_sap_5-1754208675404.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;npm install --save-dev crypto-js​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;npm install --save-dev crypto-js&lt;/P&gt;&lt;H2 id="toc-hId-753425281" id="toc-hId-754255307"&gt;Step 4: Use crypto-js in Your Controller&lt;/H2&gt;&lt;P&gt;The npm module can now be used in any controller in the manner shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dakshkumar_sap_6-1754208675433.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295713i7E7F2E75AE90A5FA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="dakshkumar_sap_6-1754208675433.png" alt="dakshkumar_sap_6-1754208675433.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/ui/core/mvc/Controller",
    "crypto-js/sha256"
], function (Controller, SHA256) {
    "use strict";
    return Controller.extend("your.project.namespace.controller.Main", { 
        onInit: function () {
            var message = "Hello UI5!";
            var hash = SHA256(message).toString();
            console.log("SHA256 Hash:", hash);
        }
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;sap.ui.define([&lt;BR /&gt;"sap/ui/core/mvc/Controller",&lt;BR /&gt;"crypto-js/sha256"&lt;BR /&gt;], function(Controller, SHA256) {&lt;BR /&gt;"use strict";&lt;BR /&gt;return Controller.extend("your.project.namespace.controller.Main", { onInit: function () {&lt;BR /&gt;var message = "Hello UI5!";&lt;BR /&gt;var hash = SHA256(message).toString();&lt;BR /&gt;console.log("SHA256 Hash:", hash);&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;}&lt;BR /&gt;&amp;nbsp; &amp;nbsp; });&lt;BR /&gt;});&lt;BR /&gt;&lt;STRONG&gt;Reminder:&lt;/STRONG&gt;&lt;SPAN&gt; Only controllers or AMD modules can use this pattern. Outside of SAPUI5's module system, you are unable to use npm modules globally in your application or using need().&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-556911776" id="toc-hId-557741802"&gt;Step 5: Configure ui5.yaml&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dakshkumar_sap_7-1754208675838.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295714i57AF5C74DFAE4F10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="dakshkumar_sap_7-1754208675838.png" alt="dakshkumar_sap_7-1754208675838.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;builder:
  customTasks:
    - name: ui5-tooling-modules-task
      afterTask: replaceVersion

server:
  customMiddleware:
    - name: ui5-tooling-modules-middleware
      afterMiddleware: compression
    - name: fiori-tools-proxy
      afterMiddleware: ui5-tooling-modules-middleware&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;builder:&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; customTasks:&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - name: ui5-tooling-modules-task&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;afterTask: replaceVersion&lt;BR /&gt;server:&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;customMiddleware:&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;- name: ui5-tooling-modules-middleware&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; afterMiddleware: compression&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; - name: fiori-tools-proxy&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;afterMiddleware: ui5-tooling-modules-middleware&lt;/P&gt;&lt;H2 id="toc-hId-360398271" id="toc-hId-361228297"&gt;Step 6: Run and Test&lt;/H2&gt;&lt;P&gt;Start the app using:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="dakshkumar_sap_8-1754208675442.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295712iD6922A8AFF230C0C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="dakshkumar_sap_8-1754208675442.png" alt="dakshkumar_sap_8-1754208675442.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;npm run start-noflp
​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;npm run start-noflp&lt;BR /&gt;Open DevTools → Console. You should see the SHA256 hash logged.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-163884766" id="toc-hId-164714792"&gt;Why Use crypto-js in SAPUI5?&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Modern encryption, hashing, and token generation&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;No external script tags or CDNs&lt;/LI&gt;&lt;LI&gt;Works natively with AMD modules in SAPUI5&lt;/LI&gt;&lt;LI&gt;TypeScript-friendly&lt;/LI&gt;&lt;LI&gt;Perfect for using NPM modules inside controllers&lt;H2 id="toc-hId--32628739" id="toc-hId--31798713"&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Thanks to ui5-tooling-modules, integrating npm packages like crypto-js is clean and stable. While it’s limited to controller (or AMD module) scope, that’s often enough for most enterprise UI logic.&lt;BR /&gt;Whether you’re building internal tools or customer apps, this setup empowers you to use modern JS libraries safely within the SAPUI5 ecosystem.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-use-npm-modules-like-crypto-js-in-sapui5-using-ui5-tooling-modules/ba-p/14170304"/>
    <published>2025-09-04T07:01:18.162000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/consuming-on-premise-service-in-cap-project-error-failed-to-load/ba-p/14208190</id>
    <title>Consuming on-Premise Service in CAP Project - Error “Failed to load destination” after deployment</title>
    <updated>2025-09-05T08:52:06.672000+02:00</updated>
    <author>
      <name>parth_</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/866502</uri>
    </author>
    <content>&lt;P&gt;Hi All,&lt;/P&gt;&lt;P&gt;I am trying to consume an on-premise service in the CAP project using the destination.&amp;nbsp;My SAP BTP Subaccount is connected to on-premise system via Cloud Connector.&lt;/P&gt;&lt;P&gt;In my existing CAP project, I have added the External Service (on-premise) by following steps as --&amp;gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;EM&gt;&lt;STRONG&gt;Service Center &amp;gt; Select Provider as 'SAP SYSTEM' &amp;gt; Catalog of Services as &amp;lt;my on-premise system&amp;gt; &amp;gt; Selected the service that I want &amp;gt; Selected the Entity that I&amp;nbsp;wanted to add in my existing CAP project.&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;You can find more details in the URL mentioned below.&lt;/P&gt;&lt;P&gt;URL:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-q-a/consuming-on-premise-service-in-cap-project/qaq-p/13682458" target="_blank"&gt;https://community.sap.com/t5/technology-q-a/consuming-on-premise-service-in-cap-project/qaq-p/13682458&lt;/A&gt;&lt;/P&gt;&lt;P&gt;When I run the application locally using environment variables, it works fine. However, after deployment, I am getting the following error :&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;502&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;lt;/code&amp;gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;&amp;lt;message&amp;gt;&lt;/SPAN&gt;&lt;SPAN&gt;Error during request to remote service: Failed to load destination.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;Please guide me on how I can achieve this.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thanks in advance!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/consuming-on-premise-service-in-cap-project-error-failed-to-load/ba-p/14208190"/>
    <published>2025-09-05T08:52:06.672000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/hello-python-my-first-script-in-sap-bas-connecting-to-hana-cloud/ba-p/14228993</id>
    <title>Hello Python: My First Script in SAP BAS Connecting to HANA Cloud</title>
    <updated>2025-09-26T13:05:26.454000+02:00</updated>
    <author>
      <name>Sharathmg</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/174516</uri>
    </author>
    <content>&lt;P&gt;Credit:&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/183"&gt;@Vitaliy-R&lt;/a&gt;&amp;nbsp;Your startup blogs kindled my interest to explore working with Python in SAP ecosystem.&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-python-in-sap-business-application-studio-my-notes/ba-p/14155516" target="_self"&gt;Python in BAS&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/using-jupyter-in-sap-business-application-studio-my-notes/ba-p/14167294" target="_self"&gt;Jupyter in BAS&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;When I first started exploring SAP Business Application Studio (BAS), I was curious about how Python could fit into the SAP landscape. I’ve mostly associated BAS with HANA artefacts(SQLScript, hdbcalculationview, hdbreptask etc.) and CAP artefacts, so writing a Python script inside BAS felt like venturing into new territory. My goal was simple: write a basic script and connect it to SAP HANA Cloud. What I discovered along the way is that Python not only works smoothly in BAS but also makes it easy to interact with HANA Cloud, opening up opportunities for data exploration, automation, and integration in a way that feels both modern and approachable.&lt;/P&gt;&lt;P&gt;Before jumping into the Python script, I had to get my environment ready in SAP Business Application Studio (BAS). Here’s what I set up:&lt;/P&gt;&lt;P&gt;A BAS dev space with a full-stack cloud application space since it supports multiple runtimes, including Python. I had a space with HANA Native Application type. Since the Python tools extension&amp;nbsp;is not added by default, I edited the space to select the Python tools in the additional extension options.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="HANA Dev Space Python extension" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320334iFEC4E0932EFEAC15/image-size/large?v=v2&amp;amp;px=999" role="button" title="HANA_DevSpace_Setting.png" alt="HANA Dev Space Python extension" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;HANA Dev Space Python extension&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Note: For initial steps to check the Python version, Jupyter notebook and set ups refer to the blogs listed at the start.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Use Case: I attempted to achieve the following:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Establish a connection to HANA Cloud&lt;/LI&gt;&lt;LI&gt;Execute an SQL query on a table/view&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Display the results&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;In the BAS, I created a project from Template: SAP HANA Database Project&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Project Template.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320351iEAE035C8FCA7C5B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Project Template.png" alt="Project Template.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next step: Create a notebook file.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="notebook file.png" style="width: 339px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320356i8F1BB8DEF9D0E888/image-size/medium?v=v2&amp;amp;px=400" role="button" title="notebook file.png" alt="notebook file.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;My guide to connect to HANA Cloud:&amp;nbsp;&lt;A href="https://help.sap.com/docs/SAP_HANA_CLIENT/f1b440ded6144a54ada97ff95dac7adf/d12c86af7cb442d1b9f8520e2aba7758.html" target="_self" rel="noopener noreferrer"&gt;Connect to HANA Cloud&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;When I first tried importing hdbcli into my Jupyter Notebook within BAS, I ran into the same ModuleNotFoundError. Even though I had already installed hdbcli In the terminal, the notebook kernel wasn’t recognizing it. On some search and prompting with GPT( &lt;span class="lia-unicode-emoji" title=":beaming_face_with_smiling_eyes:"&gt;😁&lt;/span&gt;), I understood that it's a common issue because Jupyter can run in a different Python environment than the terminal. The fix was simple: I ran&lt;/P&gt;&lt;PRE&gt;import sys
!{sys.executable} -m pip install hdbcli&lt;/PRE&gt;&lt;P&gt;directly in a notebook cell. This ensures that the HANA client is installed in the same environment as the notebook kernel. After this step, I could successfully import dbapi and connect to HANA Cloud without any errors. It was a small but important lesson about Python environments in BAS, especially when using Jupyter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hdbcli Module Not found.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320378i62AF858DA44FE00C/image-size/large?v=v2&amp;amp;px=999" role="button" title="hdbcli Module Not found.png" alt="hdbcli Module Not found.png" /&gt;&lt;/span&gt;With the hdbcli package installed and working in my Jupyter Notebook, I was ready to write my first Python script to connect to SAP HANA Cloud.&lt;/P&gt;&lt;P&gt;In the next cell, I imported hdbcli in this notebook.&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;import hdbcli
print(hdbcli.__file__)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="import hdbcli.png" style="width: 854px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320388iF426637D8D8CCB0F/image-size/large?v=v2&amp;amp;px=999" role="button" title="import hdbcli.png" alt="import hdbcli.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;The next step was to&amp;nbsp;gain access to the dbapi interface, which allows you to establish connections, execute SQL queries, and fetch results from your HANA Cloud instance. This simple import is the gateway to working with HANA directly from Python.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from hdbcli import dbapi&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The next step is to establish a connection to your HANA Cloud instance. This requires specifying the host, port, username, and password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="hana cloud connection.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320408i84F10DA5613166DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="hana cloud connection.png" alt="hana cloud connection.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;After connecting, you can create a cursor object to execute SQL statements. An SQL statement, preferably a Select Query to test the retrieval of data from HANA Cloud. In my case, I used a Select with count on the number of records in a view. Once the variables were ready, execute the connection cursor object.&lt;/P&gt;&lt;P&gt;Note: in the SQL variable, use single quotes and a semicolon at the end of the query. (beginner tip&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt; )&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Execution Cursor.png" style="width: 799px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320427iB0929785AAAB7257/image-size/large?v=v2&amp;amp;px=999" role="button" title="Execution Cursor.png" alt="Execution Cursor.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now is the time to test the data retrieval from the script and compare it with the Database Explorer.&lt;/P&gt;&lt;P&gt;Drum roll....&lt;span class="lia-unicode-emoji" title=":drum:"&gt;🥁&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Data in DB explorer.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320447i3D6BB255F8FDBF13/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Data in DB explorer.png" alt="Data in DB explorer.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-right" image-alt="Data in Script.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320448iDA977EF3358B8FF8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Data in Script.png" alt="Data in Script.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Hurray&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":party_popper:"&gt;🎉&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Completing my first Python script in SAP Business Application Studio and connecting it to HANA Cloud was an exciting milestone. From the initial curiosity to the small hurdles like installing hdbcli in the notebook and finally seeing my script return results, every step felt like a mini victory.&lt;/P&gt;&lt;P&gt;That simple output from HANA Cloud made all the effort worthwhile and gave me a real sense of accomplishment.&lt;/P&gt;&lt;P&gt;This experience has sparked my curiosity to explore more complex queries, data analysis, and automation using Python in SAP.&lt;/P&gt;&lt;P&gt;I hope my journey inspires others to take that first step and discover how fun and powerful working with Python and HANA Cloud can be.&lt;/P&gt;&lt;P&gt;Chao.&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/hello-python-my-first-script-in-sap-bas-connecting-to-hana-cloud/ba-p/14228993"/>
    <published>2025-09-26T13:05:26.454000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370</id>
    <title>What’s new in Mobile development kit client 25.9</title>
    <updated>2025-10-02T16:12:52.721000+02:00</updated>
    <author>
      <name>Jitendra_Kansal78</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3305</uri>
    </author>
    <content>&lt;P&gt;Dear Community,&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;I am happy to announce that a new release of the &lt;STRONG&gt;Mobile Development Kit (MDK)&lt;/STRONG&gt; is now available for all SAP Build (and Mobile Services) customers. You can download it from the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://me.sap.com/softwarecenter/template/products/_APP=00200682500000001943&amp;amp;_EVENT=DISPHIER&amp;amp;HEADER=Y&amp;amp;FUNCTIONBAR=N&amp;amp;EVENT=TREE&amp;amp;NE=NAVIGATE&amp;amp;ENR=73554900100900009945&amp;amp;V=INST" target="_blank" rel="noopener noreferrer"&gt;SAP Software Center,&amp;nbsp;&lt;/A&gt;and also available on the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://developers.sap.com/trials-downloads.html?search=Mobile%20development%20kit" target="_blank" rel="noopener noreferrer"&gt;community Download page&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;The S&lt;STRONG&gt;AP Mobile Services Client&lt;/STRONG&gt; has been updated to version &lt;STRONG&gt;25.9.0&lt;/STRONG&gt; on both the &lt;STRONG&gt;Google Play Store&lt;/STRONG&gt; and the &lt;STRONG&gt;Apple App Store&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;SAP Mobile Development Kit enables developers and technical business users to build cross-platform mobile applications. It allows you to build your application once, in an integrated development environment (SAP Business Application Studio / VSCode extension) and run it natively on Mobile (&lt;STRONG&gt;Android &amp;amp; iOS&lt;/STRONG&gt;). &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Below UI enhancements are available only on iOS and Android platforms:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;ul =""&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-1761043128"&gt;Support Date Range Selection in Calendar Control&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-1171502613"&gt;Support Event Indicators in Calendar Control&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-974989108"&gt;Support Read-Only State in FormCell Attachment Control&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-778475603"&gt;Support Attachment Limit in FormCell Attachment Control&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-581962098"&gt;Support Required Field Indicators for FormCell Controls&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-385448593"&gt;Introduce Additional Properties in Timeline Cell Control&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId-188935088"&gt;Support Viewing Password-Protected PDFs in Native File Viewer (Android only)&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:disc; margin-left:15px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370#toc-hId--7578417"&gt;Enable Nested Scrolling on SectionExtension (Android only)&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1761043128"&gt;&lt;STRONG&gt;&lt;U&gt;Support Date Range Selection in Calendar Control&amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;MDK now supports &lt;STRONG&gt;date range selection&lt;/STRONG&gt; in the &lt;STRONG&gt;Calendar Section&lt;/STRONG&gt; control, in addition to single-date selection. The date range selection displays the calendar in a month-view format and allows multiple months to be shown. Users can scroll vertically through the calendar months. Use this option to enable the selection of a continuous date range.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The &lt;STRONG&gt;first date&lt;/STRONG&gt; selected becomes the &lt;STRONG&gt;start date&lt;/STRONG&gt; of the range.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;second date&lt;/STRONG&gt; selected becomes the &lt;STRONG&gt;end date &lt;/STRONG&gt;of the range.&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of an MDK page
{
    "Height": 0,
    "EventLoadRange": 1,
    "OnSelectedDateRangeChange": "/MDK2509/Rules/Calendar/OnSelectedDateRangeChange.js",
    "_Type": "Section.Type.Calendar",
    "_Name": "Calendar",
    "Header": {
        "_Type": "SectionCommon.Type.Header",
        "_Name": "SectionCommonTypeHeader0",
        "Caption": "Caption",
        "Items": [{
            "_Type": "SectionHeaderItem.Type.Label",
            "_Name": "SectionHeaderItemTypeLabel0",
            "Title": "Range Selection"
        }]
    },
    "CalendarType": "DateRange",
    "StartDayOfWeek": "Sun",
    "IsPersistentSelection": true
},&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Additional Features:&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/SectionedTable/Container/Calendar.schema.html#onselecteddaterangechange" target="_blank" rel="noopener noreferrer"&gt;OnSelectedDateRangeChange&lt;/A&gt; &lt;STRONG&gt;event&lt;/STRONG&gt;: This event is triggered when the selected date range is changed.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/classes/calendarproxy.html#getselecteddaterange" target="_blank" rel="noopener noreferrer"&gt;getSelectedDateRange&lt;/A&gt; / &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/classes/calendarproxy.html#setselecteddaterange" target="_blank" rel="noopener noreferrer"&gt;setSelectedDateRange&lt;/A&gt;&amp;nbsp;&lt;STRONG&gt;APIs&lt;/STRONG&gt;: These APIs allow you to get or set selected date range programmatically via&amp;nbsp;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/classes/calendarproxy.html" target="_blank" rel="noopener noreferrer"&gt;CalendarProxy&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Platform Behavior&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;H5 id="toc-hId-1951777780"&gt;&lt;STRONG&gt;iOS:&lt;/STRONG&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;To modify the selected range, tap any selected date within the range. That date becomes the new &lt;STRONG&gt;end date&lt;/STRONG&gt;, and all later dates are deselected.&lt;/LI&gt;&lt;LI&gt;To clear the selection, tap &lt;STRONG&gt;outside&lt;/STRONG&gt; the selected range anywhere in the calendar view.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;H5 id="toc-hId-1755264275"&gt;&lt;STRONG&gt;Android:&lt;/STRONG&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Tapping &lt;STRONG&gt;any date&lt;/STRONG&gt;—whether within or outside the selected range—will select that date.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Date Range Selection in Calendar Control on iOS and Android" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320873iC4EE9451569860DF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="DateRange.png" alt="Date Range Selection in Calendar Control on iOS and Android" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Date Range Selection in Calendar Control on iOS and Android&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, refer to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/fiori-ui/mdk/calendar.html" target="_blank" rel="noopener noreferrer"&gt;Calendar&lt;/A&gt;&amp;nbsp;documentation.&lt;/P&gt;&lt;H2 id="toc-hId-1171502613"&gt;&lt;STRONG&gt;&lt;U&gt;Support Event Indicators in Calendar Control&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;MDK now supports identifying special events or statuses directly on the calendar. This feature helps users to quickly spot important dates and plan more effectively. Indicators can have customizable appearances and can be assigned statically (via metadata) or dynamically (at runtime), providing an efficient way to manage and view calendar events.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of an MDK page
 {
  "_Type": "Section.Type.Calendar",
  "_Name": "Calendar",
  "CalendarType": "Month",
  "StartDayOfWeek": "Sun",
  "IsPersistentSelection": true,
  "Height": 0,
  "EventLoadRange": 1,
  "Indicators": [{
    "_Name": "StartDateIndicator",
    "Icon": "sap-icon://begin",
    "Styles": {
      "Icon": "BlueIndicator"
    },
    "Title": "Start Date"
  }, {
    "_Name": "DueDateIndicator",
    "Icon": "sap-icon://project-definition-triangle-2",
    "Styles": {
      "Icon": "RedIndicator"
    },
    "Title": "Due Date"
  }],
  "Events": "/MDK2509/Rules/Calendar/GetEventData.js"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Event Indicator in Calendar Control on iOS and Android" style="width: 391px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320874i0AB5541DEEB48E48/image-size/medium?v=v2&amp;amp;px=400" role="button" title="EventIndicator.png" alt="Event Indicator in Calendar Control on iOS and Android" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Event Indicator in Calendar Control on iOS and Android&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For more information, refer to the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/features/fiori-ui/mdk/calendar.html#event-indicators" target="_blank" rel="noopener noreferrer"&gt;Event Indicator&lt;/A&gt;&amp;nbsp;documentation.&lt;/P&gt;&lt;H2 id="toc-hId-974989108"&gt;&lt;STRONG&gt;&lt;U&gt;Support Read-Only State in FormCell Attachment Control&amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;MDK now supports restricting attachment management within a&amp;nbsp;&lt;STRONG&gt;FormCell Attachment&lt;/STRONG&gt;&amp;nbsp;control. When disabled, the control automatically hides the &lt;STRONG&gt;Add&lt;/STRONG&gt; button as well as the &lt;STRONG&gt;Remove (or delete)&lt;/STRONG&gt; option for each attachment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AttachmentEdit.png" style="width: 391px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320875i45CBC82061FC007A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AttachmentEdit.png" alt="AttachmentEdit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This behavior is controlled via the &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/FormCell/Attachment.schema.html#iseditable" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;&lt;EM&gt;IsEditable&lt;/EM&gt;&lt;/STRONG&gt;&lt;/A&gt; property in the metadata, which accepts a boolean value.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"IsEditable": true&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;You can control this dynamically at runtime using the &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/interfaces/iformcellproxy.html#seteditable" target="_blank" rel="noopener noreferrer"&gt;setEditable()&lt;/A&gt; and &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/interfaces/iformcellproxy.html#geteditable" target="_blank" rel="noopener noreferrer"&gt;getEditable()&lt;/A&gt; APIs in a rule.&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;formcell.setEditable(true)
editable = formcell.getEditable()&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-778475603"&gt;&lt;STRONG&gt;&lt;U&gt;Support Attachment Limit in FormCell Attachment Control&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Maximum File Size:&amp;nbsp;&lt;/STRONG&gt;You can also configure the &lt;STRONG&gt;maximum file size&lt;/STRONG&gt; (in MB) allowed for each attachment added to the FormCell Attachment control. If not specified, or set to a value less than or equal to 0, &lt;STRONG&gt;no file size limit&lt;/STRONG&gt; is enforced.&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of an MDK page 
{
  "_Type": "Control.Type.FormCell.Attachment",
  "_Name": "InitialLimits",
  "IsEditable": true,
  "MaxAttachments": 2,
  "MaxFileSize": 1,
  "AttachmentActionType": ["AddPhoto", "TakePhoto", "SelectFile"],
  "AttachmentTitle": "Initial Values (%d)"
},​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Maximum Attachment Count:&lt;/STRONG&gt; You can now configure &lt;STRONG&gt;FormCell Attachment&lt;/STRONG&gt; control to restrict how many attachments a user can upload. Once the specified limit is reached, the control disables the &lt;STRONG&gt;Add&lt;/STRONG&gt; button to prevent further uploads.&lt;BR /&gt;In metadata, configure the maximum limit using the &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/FormCell/Attachment.schema.html#maxattachments" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;&lt;EM&gt;MaxAttachments&lt;/EM&gt;&lt;/STRONG&gt;&lt;/A&gt; property.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"MaxAttachments": 4​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If the property is not configured—or is set to zero or a negative value—no limit is enforced by default.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Platform behavior:&lt;/STRONG&gt;&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;iOS&lt;/STRONG&gt;: The limit is applied directly to the native file picker, which prevents additional file selection once the maximum is reached.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Android&lt;/STRONG&gt;: The native file picker does not restrict selection. Users may select more files than allowed, but only the first &lt;STRONG&gt;N&lt;/STRONG&gt; attachments (where &lt;STRONG&gt;N&lt;/STRONG&gt; is the configured limit) are retained after confirmation.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AttachmentLimit.png" style="width: 391px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320876i3BF833E43910CF02/image-size/medium?v=v2&amp;amp;px=400" role="button" title="AttachmentLimit.png" alt="AttachmentLimit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;At runtime, you can set or query the limit using the APIs (&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/classes/attachmentformcellproxy.html#setmaxattachments" target="_blank" rel="noopener noreferrer"&gt;setMaxAttachments&lt;/A&gt; and &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/apidoc/classes/attachmentformcellproxy.html#getmaxattachments" target="_blank" rel="noopener noreferrer"&gt;getMaxAttachments .&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;attachment.setMaxAttachments(4);  
maxAttachments = attachment.getMaxAttachments();&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-581962098"&gt;&lt;STRONG&gt;&lt;U&gt;Support Required Field Indicators&amp;nbsp; for FormCell Controls&amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This feature allows developers to add a &lt;STRONG&gt;&lt;EM&gt;Mandatory Fields Indicator&lt;/EM&gt; &lt;/STRONG&gt;to FormCell controls, indicating that the field must be filled out.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: This feature does not enforce the user to fill out the form cell—it only provides visual indicator that the field is required.&lt;/P&gt;&lt;P&gt;By default, the indicator is a &lt;STRONG&gt;red asterisk&lt;/STRONG&gt; (*) placed at the end of the caption. Developers can customize this indicator by specifying a different character in the metadata using the RequiredIndicator property.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Only a single character is allowed for customization.&lt;/LI&gt;&lt;LI&gt;If more than one character is defined, the system will revert to using the default indicator.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Additionally, the appearance of the indicator can be styled through metadata.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="RequiredField.png" style="width: 391px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320877i6F2EEFC7C89804EC/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RequiredField.png" alt="RequiredField.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;//excerpt of an MDK page
{
   "Value": "Enter Date",
   "_Type": "Control.Type.FormCell.DatePicker",
   "_Name": "fcDatePicker",
   "RequiredIndicator": true,
   "Caption": "Date Picker",
   "Mode": "Datetime"
 },&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The form cells that support this feature include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;Attachment&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;DatePicker&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;DurationPicker&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;InlineSignatureCapture&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;ListPicker&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;Note&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;SignatureCapture&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;LI&gt;&lt;CODE&gt;SimpleProperty&lt;/CODE&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Form Cell&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For more information, see this&amp;nbsp;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/FormCell/SimpleProperty.schema.html#requiredindicator_1" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId-385448593"&gt;&lt;STRONG&gt;&lt;U&gt;Introduce Additional Properties in Timeline Cell Control&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;With this release, MDK now supports displaying additional text properties—such as &lt;STRONG&gt;StatusText&lt;/STRONG&gt;, &lt;STRONG&gt;SubstatusText&lt;/STRONG&gt;, and &lt;STRONG&gt;Subattribute&lt;/STRONG&gt;—on the right side of the timeline cell.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Timeline.png" style="width: 391px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320878iE57D46FD51A3F002/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Timeline.png" alt="Timeline.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;"StatusText": "Status1"
"SubstatusText": "Status2",
"Subattribute": "Subattribute",&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;For more information, see this&amp;nbsp;&amp;nbsp;&lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/SectionedTable/Control/TimelineCell.schema.html" target="_blank" rel="noopener noreferrer"&gt;documentation. &lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-188935088"&gt;&lt;STRONG&gt;&lt;U&gt;Support Viewing Password-Protected PDFs in Native File Viewer (Android only)&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;MDK now supports viewing password-protected PDF files in the native file viewer on &lt;STRONG&gt;Android&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Fiori Dialog box when opening a password protected PDF on Android" style="width: 192px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320879i44D13E11D04D51C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="PasswordPDF.png" alt="Fiori Dialog box when opening a password protected PDF on Android" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Fiori Dialog box when opening a password protected PDF on Android&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--7578417"&gt;&lt;STRONG&gt;&lt;U&gt;Enable Nested Scrolling on SectionExtension (Android only)&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In case you're using a &lt;STRONG&gt;Section Extension&lt;/STRONG&gt; control for a custom extension implementation and the height of the extension area cannot display the full content, you can use the new &lt;A href="https://help.sap.com/doc/3642933ef2e1478fb1578ef2acba4ae9/Latest/en-US/reference/schemadoc/Page/SectionedTable/Container/Extension.schema.html#isscrollable" target="_blank" rel="noopener noreferrer"&gt;IsScrollable&amp;nbsp;&lt;/A&gt;property in the Section Extension control to enable nested scrolling within the extension view.&amp;nbsp; The default setting is &lt;EM&gt;false.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="NestedExt.gif" style="width: 191px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/320880iEBAD1AACEE71BF0E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="NestedExt.gif" alt="NestedExt.gif" /&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Become and SAP MDK Explorer!&lt;BR /&gt;&lt;/STRONG&gt;Do you have a requirement to build a mobile solution for your enterprise?&amp;nbsp;&lt;SPAN&gt;Take your first steps today by following&amp;nbsp;&lt;A href="https://help.sap.com/doc/f53c64b93e5140918d676b927a3cd65b/Cloud/en-US/docs-en/guides/getting-started/mdk/overview.html#tutorials" target="_blank" rel="noopener noreferrer"&gt;these tutorials&lt;/A&gt;&amp;nbsp;to get started and learn more about the SAP Mobile development kit. We’re excited to see what you build—your feedback and ideas are invaluable!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-mobile-development-kit-client-25-9/ba-p/14227370"/>
    <published>2025-10-02T16:12:52.721000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631</id>
    <title>Creating a Hybrid CAP (Node.js) Profile with PostgreSQL on BTP from Business Application Studio</title>
    <updated>2025-10-02T17:44:09.830000+02:00</updated>
    <author>
      <name>valentincadart</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/786198</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In this blog post, I’ll walk you through how to configure a hybrid testing profile in a Node.js-based CAP project, using a PostgreSQL database hosted on BTP, and running it locally from Business Application Studio.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;While setting up hybrid profiles in CAP is a common task, using them with PostgreSQL on BTP introduces a few challenges, mainly the need to connect via SSH tunneling to access the remote database from your local BAS workspace.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For more information on hybrid testing in CAP: &lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/advanced/hybrid-testing&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog summarizes the approach I followed to solve a real-world issue raised in the SAP Community (&lt;A href="https://community.sap.com/t5/technology-q-a/cap-hybrid-testing-using-postgresql-on-sap-btp-hyperscaler-option-cloud/qaq-p/14037087" target="_self"&gt;original Q&amp;amp;A here&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;). Thanks to &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/789" target="_blank"&gt;&lt;SPAN&gt;@MioYasutake&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/139578" target="_blank"&gt;&lt;SPAN&gt;@Willem_Pardaens&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; for their help. Worth noting, &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/789" target="_blank"&gt;&lt;SPAN&gt;@MioYasutake&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; has published a great blog covering a complete Java-based CAP example, which you’ll find linked in the &lt;A href="https://community.sap.com/t5/technology-q-a/cap-java-how-to-connect-to-postgresql-on-btp-from-bas/qaq-p/14003400" target="_self"&gt;answer of this thread&lt;/A&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Table of contents:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;ul =""&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1890932964"&gt;Prerequisites and Sample Project&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1694419459"&gt;PostgreSQL specificity on BTP&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1497905954"&gt;Creating the Hybrid Profile&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1301392449"&gt;Enable SSH&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-1104878944"&gt;Secure Connection via SSH Tunnel&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-908365439"&gt;Launch the Application&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-711851934"&gt;In case of "ResourceRequest timed out" error&lt;/a&gt;&lt;/li&gt;&lt;li style="list-style-type:circle; margin-left:30px; margin-bottom:1px;"&gt;&lt;a href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631#toc-hId-515338429"&gt;Conclusion&lt;/a&gt;&lt;/li&gt;&lt;/ul&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1890932964"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Prerequisites and Sample Project&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In this tutorial, I’ll be using a sample CAP project that was previously created and publicly available on &lt;A href="https://github.com/ValentinCadart/CAPHybridTestingWithPostgres" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;If you prefer to start from scratch, you can follow the official setup guide here:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://cap.cloud.sap/docs/guides/deployment/to-cf" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://cap.cloud.sap/docs/guides/deployment/to-cf&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Just make sure to replace HANA Cloud with PostgreSQL by running the following command:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds add postgres --for production&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Note: The cds add postgres command automatically adds a PostgreSQL resource to your mta.yaml file, using the development service plan by default. However, this plan is not available on BTP trial accounts. If you're using a trial account, simply replace development with trial in the mta.yaml as shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;- name: bookshop-postgres
  type: org.cloudfoundry.managed-service
  parameters:
    service: postgresql-db
    service-plan: trial&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Once the project is deployed to BTP, you’ll see five service instances created:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;One instance for authorization (XSUAA)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;One for the destination service&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Two related to the HTML5 application repository (host and runtime)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;And one for the PostgreSQL database&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;This setup represents a standard CAP deployment on Cloud Foundry with an HTML5 UI module.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_0-1759418082183.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322347i21B48A475FBCECBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_0-1759418082183.png" alt="valentincadart_0-1759418082183.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Additionally, in your Cloud Foundry space, you will find two deployed applications:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;One for the PostgreSQL database&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;And another for the backend service of your application (the -srv module)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_1-1759418100619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322348i2A9FFF905F5C4C73/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_1-1759418100619.png" alt="valentincadart_1-1759418100619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With the basic configuration set up on BTP, we can now move on to implementing hybrid testing from Business Application Studio.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1694419459"&gt;&lt;STRONG&gt;PostgreSQL specificity on BTP&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;EM&gt;- Correction added on 03/10/2025 following feedback from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/52838"&gt;@antoniojmnunes&lt;/a&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The PostgreSQL service on SAP BTP now includes features that allow access from outside the BTP environment. This includes support for &lt;A href="https://help.sap.com/docs/postgresql-on-sap-btp/postgresql-on-sap-btp-hyperscaler-option/public-ip-access-in-postgresql-instances?locale=en-US" target="_self" rel="noopener noreferrer"&gt;public IPs&lt;/A&gt;, which enable connections from external systems, as well as the &lt;A href="https://help.sap.com/docs/postgresql-on-sap-btp/postgresql-on-sap-btp-hyperscaler-option/instance-sharing?locale=en-US" target="_self" rel="noopener noreferrer"&gt;instance sharing&lt;/A&gt; feature, which allows you to share a PostgreSQL instance across different subaccounts.&lt;/P&gt;&lt;P&gt;For more details, you can refer to the following blog posts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-how-to-access-instances-via-public-ips/ba-p/13868169" target="_self"&gt;PostgreSQL on SAP BTP - How-to access instances via public IPs&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-instance-sharing-reference-service-plan/ba-p/13794791" target="_self"&gt;PostgreSQL on SAP BTP - Instance sharing | 'reference' service plan&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you’re interested in more official blog posts about PostgreSQL on BTP, check out this index:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/postgresql-on-sap-btp-are-you-looking-for-official-blog-posts-blog-index/ba-p/13788533" target="_self"&gt;PostgreSQL on SAP BTP - Are you looking for official blog posts? Blog INDEX&lt;/A&gt;&lt;/P&gt;&lt;P&gt;However, in our specific use case, we are unable to make use of these features. This limitation is due to the nature of our current setup, where these options do not allow us to achieve this in practice. As a workaround, we will create an SSH tunnel between Business Application Studio and our Cloud Foundry application.&lt;/P&gt;&lt;H3 id="toc-hId-1497905954"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Creating the Hybrid Profile&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;To set up the hybrid profile, you need to modify or create the .cdsrc.json (or .cdsrv-private.json) file at the root of your CAP project. This file defines launch profiles and specific options for the cds command.&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "cds": {
    "requires": {
      "[hybrid]": {
        "db": {
          "kind": "postgres",
          "credentials": {
            "host": "127.0.0.1",
            "port": 63306,
            "user": "&amp;lt;user&amp;gt;",
            "password": "&amp;lt;password&amp;gt;",
            "database": "&amp;lt;dbname&amp;gt;",
            "sslcert": "-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----",
            "sslrootcert": "-----BEGIN CERTIFICATE-----\n...\n-----END CERTIFICATE-----"
          },
          "pool": {
            "acquireTimeoutMillis": 2000
          }
        }
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Replace the placeholders &lt;CODE&gt;&amp;lt;user&amp;gt;&lt;/CODE&gt;, &lt;CODE&gt;&amp;lt;password&amp;gt;&lt;/CODE&gt;, &lt;CODE&gt;&amp;lt;database&amp;gt;&lt;/CODE&gt;, as well as the &lt;CODE&gt;&amp;lt;sslcert&amp;gt;&lt;/CODE&gt; and &lt;CODE&gt;&amp;lt;sslrootcert&amp;gt;&lt;/CODE&gt; fields with the credentials provided by your PostgreSQL instance hosted on BTP. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_2-1759418191865.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322349iD823E1883D84B021/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_2-1759418191865.png" alt="valentincadart_2-1759418191865.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Direct access to the remote PostgreSQL database is restricted for security reasons. By creating an SSH tunnel, a local port (e.g., 63306) on your BAS environment is securely forwarded to the remote database, so connecting to 127.0.0.1:63306 effectively accesses the remote PostgreSQL instance through this tunnel.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1301392449"&gt;&lt;SPAN&gt;Enable SSH&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Before you can connect via SSH to your Cloud Foundry app, you need to enable this feature first by running:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf enable-ssh bookshop-srv
cf restart bookshop-srv&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;If you encounter any issues, refer to the official Cloud Foundry SSH documentation:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://docs.cloudfoundry.org/devguide/deploy-apps/ssh-apps.html" target="_blank" rel="noopener nofollow noreferrer"&gt;https://docs.cloudfoundry.org/devguide/deploy-apps/ssh-apps.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1104878944"&gt;&lt;STRONG&gt;Secure Connection via SSH Tunnel&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Open a terminal in Business Application Studio and run the following command:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cf ssh -L 63306:&amp;lt;host_from_service_key&amp;gt;:&amp;lt;port_from_service_key&amp;gt; &amp;lt;application_name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Replace &lt;CODE&gt;&amp;lt;host_from_service_key&amp;gt;&lt;/CODE&gt; and &lt;CODE&gt;&amp;lt;port_from_service_key&amp;gt;&lt;/CODE&gt; with the values from your PostgreSQL service key on BTP (create one if it doesn’t exist). Also replace &lt;CODE&gt;&amp;lt;application_name&amp;gt;&lt;/CODE&gt; with the name of your Cloud Foundry application (e.g., bookshop-srv).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="valentincadart_3-1759418309506.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/322350i6083D44CC7B8CA8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="valentincadart_3-1759418309506.png" alt="valentincadart_3-1759418309506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This command creates an SSH tunnel that forwards local port 63306 to the remote PostgreSQL database through the Cloud Foundry app.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-908365439"&gt;&lt;STRONG&gt;Launch the Application&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;In a second terminal, run the following command to start your application using the hybrid profile:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;cds watch --profile hybrid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;You should see a message in the console confirming the connection to PostgreSQL on localhost, for example:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;[cds] - connect to db &amp;gt; postgres {
  host: '127.0.0.1',
  port: 63306,
  ...
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Your application now runs locally in Business Application Studio but using the real data from the PostgreSQL database hosted on your BTP account.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-711851934"&gt;&lt;STRONG&gt;In case of "ResourceRequest timed out" error&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;If you see the following error:&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;&amp;lt;message&amp;gt;ResourceRequest timed out&amp;lt;/message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;It likely means that:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The SSH tunnel is not active&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The SSL certificate is not loaded properly&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The timeout is too short (hence the importance of the acquireTimeoutMillis setting)&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-515338429"&gt;Conclusion&lt;/H3&gt;&lt;P&gt;Once set up, this configuration lets you develop locally from Business Application Studio while testing your application with real data from PostgreSQL. This way, you avoid redeploying the app after every change and fully leverage CAP’s hybrid testing capabilities.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-a-hybrid-cap-node-js-profile-with-postgresql-on-btp-from-business/ba-p/14233631"/>
    <published>2025-10-02T17:44:09.830000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sapui5-treetable-expand-all-children-of-selected-nodes/ba-p/14230354</id>
    <title>SAPUI5 TreeTable: Expand All Children of Selected Nodes</title>
    <updated>2025-10-08T12:48:18.544000+02:00</updated>
    <author>
      <name>anantkamal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/680907</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1761758054"&gt;Introduction&lt;/H2&gt;&lt;P&gt;When working with the &lt;STRONG&gt;SAPUI5 TreeTable&lt;/STRONG&gt;, one common requirement is to let users expand nodes beyond just the first level. For example, you may want to &lt;STRONG&gt;expand all children of a selected node&lt;/STRONG&gt;, and continue expanding until you reach the deepest leaf level.&lt;/P&gt;&lt;P&gt;The standard SAPUI5 TreeTable API gives us some basic expand/collapse options like &lt;CODE&gt;expandToLevel()&lt;/CODE&gt; or expanding only specific row index, but there’s no direct way to say:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉🏼&lt;/span&gt;“Take these selected nodes and expand everything under them, no matter how many levels deep.”&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;That’s exactly the problem I ran into.&lt;/P&gt;&lt;P&gt;To solve this, I built a solution where &lt;STRONG&gt;all selected nodes are expanded recursively until their leaf nodes are visible&lt;/STRONG&gt;. The logic works with JSON models (and technically also with OData if you load all hierarchy data upfront — with the usual performance caveats).&lt;/P&gt;&lt;P&gt;Here’s a quick demo of the feature in action&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_down:"&gt;👇🏼&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Recursive expansion ensures all children are opened — no matter how deep the hierarchy goes." style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/321076i3691FA83907DC984/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="UI5-TreeTable-ExpandRecursive.gif" alt="Recursive expansion ensures all children are opened — no matter how deep the hierarchy goes." /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Recursive expansion ensures all children are opened — no matter how deep the hierarchy goes.&lt;/span&gt;&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;At first, I assumed there must be a ready-made API for this — but there isn’t. So, I decided to build a small recursive helper to achieve this behavior. In this blog, I’ll share how I extended the &lt;/SPAN&gt;&lt;A class="" href="https://ui5.sap.com/#/entity/sap.ui.table.TreeTable/sample/sap.ui.table.sample.TreeTable.JSONTreeBinding" target="_new" rel="noopener noreferrer"&gt;official TreeTable sample&lt;/A&gt;&lt;SPAN&gt; to add this functionality.&lt;/SPAN&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1565244549"&gt;Why This Is Useful&lt;/H2&gt;&lt;P&gt;TreeTables are often used for things like:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Product catalogs&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Bill of Materials (BOM)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Organizational hierarchies&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;And in all these cases, users don’t just want to expand one level at a time — they often want to open everything under a node they’re interested in.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1368731044"&gt;My Approach&lt;/H2&gt;&lt;P&gt;The standard TreeTable APIs include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;collapseAll()&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;expandToLevel(level)&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;CODE&gt;expand(rowIndex)&lt;/CODE&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;They don’t include a “recursive expand” option. So, I wrote a helper function &lt;CODE&gt;_expandRecursive&lt;/CODE&gt; that expands a node and then walks through all of its children, expanding them one by one.&lt;/P&gt;&lt;P&gt;When recursively expanding multiple selected nodes, the &lt;STRONG&gt;row indices of nodes can change&lt;/STRONG&gt; if we start expanding from the top, because expanding a node inserts its child rows and shifts the indices of the rows below it. To prevent this from breaking the expansion of other selected nodes, I sort the selected indices in &lt;STRONG&gt;descending order&lt;/STRONG&gt; and expand from the &lt;STRONG&gt;last selected row upwards&lt;/STRONG&gt;. Within each node, child nodes are then expanded recursively. The tiny async delay ensures that the TreeTable has time to fully process each expansion before moving to the next child, maintaining correct indexing and avoiding skipped nodes.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1172217539"&gt;Implementation&lt;/H2&gt;&lt;H3 id="toc-hId-1104786753"&gt;Controller (&lt;CODE&gt;CatalogHierarchy.controller.js&lt;/CODE&gt;)&lt;/H3&gt;&lt;P&gt;Here’s the core of the solution — notice the &lt;CODE&gt;onExpandAllLevelsForSelection&lt;/CODE&gt; method and the &lt;CODE&gt;_expandRecursive&lt;/CODE&gt; helper:&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
    "sap/ui/core/mvc/Controller"
], (Controller) =&amp;gt; {
    "use strict";

    return Controller.extend("openui5.treetable.recursiveexpand.controller.CatalogHierarchy", {
        onInit() {
        },

         // Collapse all nodes
		onCollapseAll: function() {
			const oTreeTable = this.byId("TreeTableBasic");
			oTreeTable.collapseAll();
		},

        // Collapse only selected nodes
		onCollapseSelection: function() {
			const oTreeTable = this.byId("TreeTableBasic");
			oTreeTable.collapse(oTreeTable.getSelectedIndices());
		},

        // Expand first-level nodes for the entire tree
		onExpandFirstLevelForAll: function() {
			const oTreeTable = this.byId("TreeTableBasic");
			oTreeTable.expandToLevel(1);
		},

        // Expand first-level nodes only for selected entries
		onExpandFirstLevelForSelection: function() {
			const oTreeTable = this.byId("TreeTableBasic");
			oTreeTable.expand(oTreeTable.getSelectedIndices());
		},

        // Expand all levels recursively for selected nodes
        onExpandAllevelsForSelection: function() {
            const oTreeTable = this.byId("TreeTableBasic");
            oTreeTable.setBusyIndicatorDelay(0).setBusy(true);

            const aSelectedIndices = oTreeTable.getSelectedIndices().sort((a, b) =&amp;gt; b - a);
		
			// Use a chain of promises to execute the expansion sequentially
			let chain = Promise.resolve();
		
			aSelectedIndices.forEach(function (iIndex) {
				chain = chain.then(function () {
					return this._expandRecursive(oTreeTable, iIndex); // Return a promise from _expandRecursive
				}.bind(this));
			}.bind(this));
		
			chain.then(function () {
				console.log("All selected nodes and their children have been expanded.");
			}).catch(function (error) {
				console.error("Error expanding nodes:", error);
			}).finally(function () {
				oTreeTable.setBusy(false);
			});
		},
		
        /**
         * Recursive function to expand a node and all of its children.
         *  {sap.ui.table.TreeTable} oTreeTable - The TreeTable instance
         *  {int} iIndex - Index of the node to expand
         * @returns {Promise}
         */
		_expandRecursive: function (oTreeTable, iIndex) {
			oTreeTable.expand(iIndex);
		
			const oContext = oTreeTable.getContextByIndex(iIndex);
			if (!oContext) {
				return Promise.resolve();
			}
		
			const iChildCount = oTreeTable.getBinding("rows").getChildCount(oContext);
			let chain = Promise.resolve();
		
			// Process child nodes in reverse order
			for (let i = iChildCount - 1; i &amp;gt;= 0; i--) {
				chain = chain.then(function () {
					const iChildIndex = iIndex + 1 + i;
					return this._asyncDelay(0) // Delay using promises
						.then(() =&amp;gt; this._expandRecursive(oTreeTable, iChildIndex));
				}.bind(this));
			}
		
			return chain; // Return the promise chain
		},
		
		/**
         * Helper function to introduce async delay
         *  {int} ms - delay in milliseconds
         * @returns {Promise}
         */
		_asyncDelay: function (ms) {
			return new Promise(function (resolve) {
				setTimeout(resolve, ms);
			});
		}
    });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;View (&lt;CODE&gt;CatalogHierarchy.view.xml&lt;/CODE&gt;)&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View controllerName="openui5.treetable.recursiveexpand.controller.CatalogHierarchy"
        xmlns="sap.ui.table"
        xmlns:mvc="sap.ui.core.mvc"
        xmlns:m="sap.m"
        xmlns:u="sap.ui.unified"
        xmlns:core="sap.ui.core"
        height="100%"&amp;gt;
    &amp;lt;m:Page
            showHeader="false"
            enableScrolling="false"&amp;gt;
        &amp;lt;m:content&amp;gt;
            &amp;lt;TreeTable
                    id="TreeTableBasic"
                    rows="{path:'/catalog/clothing', parameters: {arrayNames:['categories']}}"
                    selectionMode="MultiToggle"
                    enableSelectAll="true"
                    ariaLabelledBy="title"&amp;gt;
                &amp;lt;extension&amp;gt;
                    &amp;lt;m:OverflowToolbar style="Clear"&amp;gt;
                        &amp;lt;m:Title id="title" text="Clothing"/&amp;gt;
                        &amp;lt;m:ToolbarSpacer/&amp;gt;
                        &amp;lt;m:Button text="Collapse all" press="onCollapseAll"/&amp;gt;
                        &amp;lt;m:Button text="Collapse selection" press="onCollapseSelection"/&amp;gt;
                        &amp;lt;m:Button text="Expand first level for all" press="onExpandFirstLevelForAll"/&amp;gt;
                        &amp;lt;m:Button text="Expand first level for selection" press="onExpandFirstLevelForSelection"/&amp;gt;
                        &amp;lt;m:Button text="Expand all levels for selection" press="onExpandAllevelsForSelection" type="Emphasized"/&amp;gt;
                    &amp;lt;/m:OverflowToolbar&amp;gt;
                &amp;lt;/extension&amp;gt;
                &amp;lt;columns&amp;gt;
                    &amp;lt;Column width="13rem"&amp;gt;
                        &amp;lt;m:Label text="Categories"/&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;m:Text text="{name}" wrapping="false" /&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column width="9rem"&amp;gt;
                        &amp;lt;m:Label text="Price"/&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;u:Currency value="{amount}" currency="{currency}"/&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                    &amp;lt;Column width="11rem"&amp;gt;
                        &amp;lt;m:Label text="Size"/&amp;gt;
                        &amp;lt;template&amp;gt;
                            &amp;lt;m:Select
                                    items="{path: '/sizes', templateShareable: true}"
                                    selectedKey="{size}"
                                    visible="{= !!${size}}"
                                    forceSelection="false"&amp;gt;
                                &amp;lt;core:Item key="{key}" text="{value}"/&amp;gt;
                            &amp;lt;/m:Select&amp;gt;
                        &amp;lt;/template&amp;gt;
                    &amp;lt;/Column&amp;gt;
                &amp;lt;/columns&amp;gt;
            &amp;lt;/TreeTable&amp;gt;
        &amp;lt;/m:content&amp;gt;
    &amp;lt;/m:Page&amp;gt;
&amp;lt;/mvc:View&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-779190529"&gt;Things to Watch Out For&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Works only if the hierarchy is &lt;STRONG&gt;fully loaded&lt;/STRONG&gt; (JSON model, or preloaded OData).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Won’t work with &lt;STRONG&gt;lazy loading via navigation&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Be careful with &lt;STRONG&gt;very large datasets&lt;/STRONG&gt; — expanding thousands of nodes recursively can impact performance.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-582677024"&gt;Wrap Up&lt;/H2&gt;&lt;P&gt;This helper solved a real problem for me and might help you if you’re working with hierarchical data in a TreeTable. It’s simple, effective, and can be adapted to your use case.&lt;/P&gt;&lt;P&gt;Feel free to fork the repo or leave feedback in the comments!&lt;/P&gt;&lt;HR /&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":package:"&gt;📦&lt;/span&gt;&lt;STRONG&gt;Source Code:&lt;/STRONG&gt; &lt;A class="" href="https://github.com/anantkamal/ui5-treetable-recursive-expand" target="_blank" rel="noopener nofollow noreferrer"&gt;GitHub Repository&lt;/A&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;STRONG&gt;Live Demo:&lt;/STRONG&gt; &lt;A class="" href="https://anantkamal.github.io/ui5-treetable-recursive-expand/index.html" target="_blank" rel="noopener nofollow noreferrer"&gt;Try it out here&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sapui5-treetable-expand-all-children-of-selected-nodes/ba-p/14230354"/>
    <published>2025-10-08T12:48:18.544000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/creating-capm-application-with-node-js-by-using-s-4-hana-database-part-2/ba-p/14237984</id>
    <title>CREATING CAPM APPLICATION WITH NODE.JS BY USING S/4 HANA DATABASE - Part 2</title>
    <updated>2025-10-13T08:11:54.622000+02:00</updated>
    <author>
      <name>Divya_Mandava</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2235357</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Hello Buddies!!&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Have you Subscribed to all our pre-requisites for the development?&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;No&amp;nbsp;&lt;/FONT&gt;&lt;span class="lia-unicode-emoji" title=":neutral_face:"&gt;😐&lt;/span&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;!!!&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Don't worry let's set it up. Follow the link below!!&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;A href="https://community.sap.com/t5/technology-q-a/creating-capm-application-with-node-js-by-using-s-4-hana-database/qaq-p/14204742" target="_blank"&gt;https://community.sap.com/t5/welcome-corner-blog-posts/creating-capm-application-with-node-js-by-using-s-4-hana-database/ba-p/14208638&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Welcome to next episode of CREATING CAPM APPLICATION WITH NODE.JS BY USING S/4 HANA DATABASE.&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;In this Episode Lets Create an Capm Application by Using a Template, So that deployment configurations will be added automatically without manual errors.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step1:&lt;/STRONG&gt;&amp;nbsp;Click on the light&amp;nbsp;&lt;STRONG&gt;=&amp;nbsp;&lt;/STRONG&gt;icon and select&amp;nbsp;&lt;STRONG&gt;Project from Template &amp;gt; Cap Project.&lt;/STRONG&gt;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_55-1757916882746.png" style="width: 438px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314120i227793EB648B0E04/image-dimensions/438x322?v=v2" width="438" height="322" role="button" title="Divya_Mandava_55-1757916882746.png" alt="Divya_Mandava_55-1757916882746.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step2:&lt;/STRONG&gt;&amp;nbsp;Click on next and Fill the details like Project name, Runtime environment. I named my project as&amp;nbsp;zcapm_hanadb.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_56-1757916882749.png" style="width: 485px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314121i5047FDC560D94343/image-dimensions/485x290?v=v2" width="485" height="290" role="button" title="Divya_Mandava_56-1757916882749.png" alt="Divya_Mandava_56-1757916882749.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_57-1757916882750.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314125iE6B7C1FD50907D4F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_57-1757916882750.png" alt="Divya_Mandava_57-1757916882750.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_58-1757916882752.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314126i71A239661B19BF7F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_58-1757916882752.png" alt="Divya_Mandava_58-1757916882752.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Click on&amp;nbsp;Finish. Hurray our app gets generated in few seconds.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif" color="#993366"&gt;&lt;FONT color="#FF0000"&gt;Note:&lt;/FONT&gt;&amp;nbsp;Check whether you are subscribed to Hana cloud, which is already there in prerequisites blog, We have also created a instance for that.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Now make sure your Hana db instance is running.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_59-1757916882754.png" style="width: 480px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314127i1DDA94259E0E81F0/image-dimensions/480x119?v=v2" width="480" height="119" role="button" title="Divya_Mandava_59-1757916882754.png" alt="Divya_Mandava_59-1757916882754.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;It would take around 10 to 15 minutes to get to running status.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_60-1757916882756.png" style="width: 553px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314131iAC50CD1A5219868C/image-dimensions/553x134?v=v2" width="553" height="134" role="button" title="Divya_Mandava_60-1757916882756.png" alt="Divya_Mandava_60-1757916882756.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Now let move to SAP BAS where our application got created.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step3:&lt;/STRONG&gt;&amp;nbsp;Run the application as&amp;nbsp;Right click on &lt;STRONG&gt;app&amp;gt; Open in integrated Terminal &amp;gt;&amp;nbsp;Enter command&amp;nbsp;CDS Watch,&lt;/STRONG&gt; check whether all the node modules installed or not. Enter Command&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;npm install&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_61-1757916882759.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314133i56D29B25351E4D34/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_61-1757916882759.png" alt="Divya_Mandava_61-1757916882759.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step4:&amp;nbsp;&lt;/STRONG&gt;Next enter the command &lt;STRONG&gt;npm install -g hana-cli&lt;/STRONG&gt;.&amp;nbsp;In this we are installing hana cloud Command line interface where we need to push our data into.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_62-1757916882763.png" style="width: 476px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314132i54837D2F45D0B9F1/image-dimensions/476x186?v=v2" width="476" height="186" role="button" title="Divya_Mandava_62-1757916882763.png" alt="Divya_Mandava_62-1757916882763.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Now lets work on our Project before we connect with Data Base.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step5:&lt;/STRONG&gt;&amp;nbsp;In folder structure under&amp;nbsp;&lt;STRONG&gt;db &amp;gt;data-model.cds&lt;/STRONG&gt;(I have re-named it on my own interest).Name should be&amp;nbsp;&lt;STRONG&gt;filename.cds&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_63-1757916882764.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314139i03D15EFEA62E76FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_63-1757916882764.png" alt="Divya_Mandava_63-1757916882764.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Lets create our Structure, In this there should be one Unique key for every entity you have created.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Code:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;namespace zcapm_hanadb;

entity Products {

      @title : 'Sales

Order Number'

    key id: Integer;

      @title : 'Product Name'

    name: String;

      @title : 'Price'

    price: Decimal;

      @title : 'Description'

    description: String;

      @title : 'Stock left'

    stock: Integer;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 6:&lt;/STRONG&gt;&amp;nbsp;In folder structure under&amp;nbsp;&lt;STRONG&gt;srv &amp;gt;cat-service.cds&lt;/STRONG&gt;(I have re-named it on my own interest).Name should be&amp;nbsp;&lt;STRONG&gt;filename.cds&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_64-1757916882765.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314137i8B00A60BA88DF7C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_64-1757916882765.png" alt="Divya_Mandava_64-1757916882765.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;In this case lets declare our function calls for get and Post. Just function names are declared in this section where we are about to call them in another file.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Important Note:&amp;nbsp;&lt;/STRONG&gt;In defining the cds function please remember two main things,&lt;/FONT&gt;&lt;/P&gt;&lt;OL class="lia-align-left" style="text-align : left;"&gt;&lt;LI&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;a) function(Get Call)&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;b) action (Post Call)&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Code:&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;using zcapm_hanadb from '../db/data-model';
service CatalogService{
  entity Products as projection on zcapm_hanadb.Products;
  // get service call
 function fnCatalogGetService(name: String) returns String;
 // Post service call
action fnCreateRecord(id: Integer, name: String, price: Decimal, description:String, stock: Integer) returns String;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 7:&lt;/STRONG&gt;&amp;nbsp;In this let's create one more file under&amp;nbsp;&lt;STRONG&gt;srv&amp;gt;cds-service.js&lt;/STRONG&gt;&amp;nbsp;(filename.js).&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;In this file we will write our node js logic for functions we have declared in&amp;nbsp;cat-service.cds.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Code:&amp;nbsp;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;const cds = require('@sap/cds');
const {Products} = cds.entities('zcapm_hanadb');
module.exports = cds.service.impl(async function() {
   //Get call
this.on('fnCatalogGetService', async (req) =&amp;gt; {
    const { name } = req.data;
 console.log(name, "Hello World");
// Post call
this.on('fnCreateRecord', async (req) =&amp;gt; {
 const { id, name, price, description, stock } = req.data;
console.log("Hello World is working fine");
})
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Now we have created our very basic structure of entity and has given a service name under it. In order to utilize our service lets deploy our app to S/4 Hana DB and call data from it.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Command:&amp;nbsp;cds build&lt;/STRONG&gt; (Find there any errors in the terminal)&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_65-1757916882768.png" style="width: 486px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314138iADD7AFC451368428/image-dimensions/486x180?v=v2" width="486" height="180" role="button" title="Divya_Mandava_65-1757916882768.png" alt="Divya_Mandava_65-1757916882768.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;command:&amp;nbsp;cds watch&lt;/STRONG&gt; (Run the app).&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_66-1757916882772.png" style="width: 479px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314144i5FC1816229357EFD/image-dimensions/479x201?v=v2" width="479" height="201" role="button" title="Divya_Mandava_66-1757916882772.png" alt="Divya_Mandava_66-1757916882772.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;FONT color="#FF0000"&gt;Note:&lt;/FONT&gt; &lt;FONT color="#993366"&gt;If you found error message like in above image, then follow below steps.&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL class="lia-align-left" style="text-align : left;"&gt;&lt;LI&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;First enter Ctrl + C (To End the process)&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Click = &amp;gt; View &amp;gt; Command Palette.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_67-1757916882775.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314145i06489FD385F7AA39/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_67-1757916882775.png" alt="Divya_Mandava_67-1757916882775.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Enter Stop port and select below one.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_68-1757916882778.png" style="width: 483px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314143iB729923621AE4F7A/image-dimensions/483x151?v=v2" width="483" height="151" role="button" title="Divya_Mandava_68-1757916882778.png" alt="Divya_Mandava_68-1757916882778.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Once it is done, now again enter the cds watch. You will find the screen like below where you you can find your service.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_69-1757916882784.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314149i11DDDE358DADD981/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_69-1757916882784.png" alt="Divya_Mandava_69-1757916882784.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Step 8:&amp;nbsp; Lets connect to our app to S/4 Hana DB.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;On the top-left most corner&amp;nbsp; where our project we have opened, there when you minimize it you will find SAP HANA PROJECTS. Open them.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_70-1757916882785.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314150iDFF9199A57837D34/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_70-1757916882785.png" alt="Divya_Mandava_70-1757916882785.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Step 9:&amp;nbsp;Expand our project.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_71-1757916882788.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314151i27F28934D202A769/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_71-1757916882788.png" alt="Divya_Mandava_71-1757916882788.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 10:&lt;/STRONG&gt;&amp;nbsp;Under Database Connections we can find the same project name.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Click on the &lt;STRONG&gt;Green socket symbol&lt;/STRONG&gt; to bind our project to &lt;STRONG&gt;HDI container&lt;/STRONG&gt; (i.e., Hana DB container).&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_72-1757916882790.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314157i2ACDC253759FE424/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_72-1757916882790.png" alt="Divya_Mandava_72-1757916882790.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-left" style="text-align : left;"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Bind to an HDI container&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_73-1757916882792.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314155iEF288B1DC22FB57D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_73-1757916882792.png" alt="Divya_Mandava_73-1757916882792.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-left" style="text-align : left;"&gt;&lt;LI&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Click on new service instance, it will suggest you a name&lt;/STRONG&gt;(you can rename it or use it as it is)&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_74-1757916882793.png" style="width: 445px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314156iF33F009D49E91A1E/image-dimensions/445x69?v=v2" width="445" height="69" role="button" title="Divya_Mandava_74-1757916882793.png" alt="Divya_Mandava_74-1757916882793.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_75-1757916882795.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314161i23B3B7CB9DDA7A89/image-dimensions/450x118?v=v2" width="450" height="118" role="button" title="Divya_Mandava_75-1757916882795.png" alt="Divya_Mandava_75-1757916882795.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;FONT color="#FF0000"&gt;Note:&lt;/FONT&gt; &lt;FONT color="#993366"&gt;Make sure your Hana Cloud is running&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_76-1757916882799.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314162i09AF34AC7926B9AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_76-1757916882799.png" alt="Divya_Mandava_76-1757916882799.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_77-1757916882802.png" style="width: 455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314163i6B4372F69D1621CE/image-dimensions/455x165?v=v2" width="455" height="165" role="button" title="Divya_Mandava_77-1757916882802.png" alt="Divya_Mandava_77-1757916882802.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;On clicking on top of Database Connections click on bind all.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_78-1757916882803.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314167iE41D79B8B580CB0A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_78-1757916882803.png" alt="Divya_Mandava_78-1757916882803.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Next Click on Hana HD Container symbol which is on the top of project.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_79-1757916882805.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314168i1E89204D145F6C2D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_79-1757916882805.png" alt="Divya_Mandava_79-1757916882805.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Mean while if you want to know what are all services got generated. Enter the command&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;STRONG&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;cf services&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_80-1757916882809.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314169i4574C13C19477BA4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_80-1757916882809.png" alt="Divya_Mandava_80-1757916882809.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_81-1757916882811.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314174iC2F02C2428B6EC8D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_81-1757916882811.png" alt="Divya_Mandava_81-1757916882811.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;We can see our instance got reflected in sap BTP as well.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_82-1757916882812.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314173i291F34BA3C6651DE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_82-1757916882812.png" alt="Divya_Mandava_82-1757916882812.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Application gets open here you can find your container with in built database with the instance we have created.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 11:&lt;/STRONG&gt;&amp;nbsp;Our service got binded in the HDI Container and let's deploy our app.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Click on the deploy icon(Rocket icon) under hana projects &amp;gt; your project.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_84-1757916882816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314180i0558A1FED686045B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_84-1757916882816.png" alt="Divya_Mandava_84-1757916882816.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Our deployment looks like below screen.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_85-1757916882820.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314181iCEEDCB637DA683ED/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_85-1757916882820.png" alt="Divya_Mandava_85-1757916882820.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Under project &amp;gt; db you can observe all our hana database files got created.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_86-1757916882822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314179iA82437A2EAC1CC15/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_86-1757916882822.png" alt="Divya_Mandava_86-1757916882822.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Navigate to Hana db explorer, we see our app got deployed. Refresh the page.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_87-1757916882823.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314183iF183A5316412CD62/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_87-1757916882823.png" alt="Divya_Mandava_87-1757916882823.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_88-1757916882826.png" style="width: 481px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314184i0454355244B2B6C1/image-dimensions/481x161?v=v2" width="481" height="161" role="button" title="Divya_Mandava_88-1757916882826.png" alt="Divya_Mandava_88-1757916882826.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;As our structure is ready let’s add some data in it.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_89-1757916882827.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314182i68790D8A79E59F09/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_89-1757916882827.png" alt="Divya_Mandava_89-1757916882827.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 12:&lt;/STRONG&gt;&amp;nbsp;Right click on your entity and select&amp;nbsp;import data. Filename should be same as entity name which we have maintained in&amp;nbsp;db&amp;gt;data-model.cds&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;File Data I Have Uploaded Here..&lt;/FONT&gt;&lt;/P&gt;&lt;TABLE width="99%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Id&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;name&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;price&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="26%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Description&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;stock&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;1&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Widget A&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;19.99&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="26%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;A useful widget for various tasks&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;100&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;2&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Widget B&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;29.99&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="26%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;An advanced widget with additional features&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;50&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;3&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Widget C&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;39.99&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="26%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;A premium widget designed for expert users&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="18%"&gt;&lt;P&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;25&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_90-1757916882830.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314186iDF1303986900048D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_90-1757916882830.png" alt="Divya_Mandava_90-1757916882830.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_91-1757916882831.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314188i49437615FEC10DCF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_91-1757916882831.png" alt="Divya_Mandava_91-1757916882831.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;In Step3 it automatically reads the table from the data imported.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_92-1757916882833.png" style="width: 452px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314185i943FA45D8B769A23/image-dimensions/452x330?v=v2" width="452" height="330" role="button" title="Divya_Mandava_92-1757916882833.png" alt="Divya_Mandava_92-1757916882833.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_93-1757916882834.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314190iAF0496C3FFF03D1C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_93-1757916882834.png" alt="Divya_Mandava_93-1757916882834.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Once you click on Review, this looks like below&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_94-1757916882835.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314191iDB9524F79FBED280/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_94-1757916882835.png" alt="Divya_Mandava_94-1757916882835.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Click on import to database&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_95-1757916882837.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314189i1486D774FAF1CA58/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_95-1757916882837.png" alt="Divya_Mandava_95-1757916882837.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Hurray! we don’t have any errors and it's successfully imported.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Now import it to our database table&amp;nbsp;&lt;STRONG&gt;Review &amp;gt;&amp;nbsp;Import data.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_96-1757916882838.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314194iEBB0AC47063E633D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_96-1757916882838.png" alt="Divya_Mandava_96-1757916882838.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_97-1757916882841.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314192i2655113F99F356C0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_97-1757916882841.png" alt="Divya_Mandava_97-1757916882841.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Now right click and click on&amp;nbsp;Open Data.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_98-1757916882842.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314193iD7F0C67A28DBB35F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_98-1757916882842.png" alt="Divya_Mandava_98-1757916882842.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;As our database is having the data now, we need to have scope to access it in our application.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Lets run the application command:&amp;nbsp;&lt;STRONG&gt;cds watch --profile&amp;nbsp; hybrid.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Here after we will be using this command as will compile the runtime dependencies.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_99-1757916882845.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314197i8E7A11D729930ADE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_99-1757916882845.png" alt="Divya_Mandava_99-1757916882845.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_100-1757916882848.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314196iCBB5A67E05384A9A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_100-1757916882848.png" alt="Divya_Mandava_100-1757916882848.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif" color="#FF0000"&gt;Error: Data is not loaded its fix it up!!!&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;We need to add the shared key access for the cloud foundry&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 13:&lt;/STRONG&gt;&amp;nbsp;Go to btp cockpit and the service instance that we have created during deployment process, Copy it.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_101-1757916882850.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314195i670E4E3EB18CDABF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_101-1757916882850.png" alt="Divya_Mandava_101-1757916882850.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_102-1757916882851.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314200i52C8801BB611F13C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_102-1757916882851.png" alt="Divya_Mandava_102-1757916882851.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Copy the Bold letters as an Instance name and type in with the command in your app&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Command:&amp;nbsp;&lt;STRONG&gt;cds bind -2 &amp;lt;instanceName&amp;gt;:SharedDevKey&amp;nbsp;&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_103-1757916882853.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314198iC3F829A6FAE21B88/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_103-1757916882853.png" alt="Divya_Mandava_103-1757916882853.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_104-1757916882854.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314199iD648C3CDF6C7F8BE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_104-1757916882854.png" alt="Divya_Mandava_104-1757916882854.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Instance key also gets appeared on top of hana DB explorer.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;STRONG&gt;Step 14:&lt;/STRONG&gt;&amp;nbsp;Next run&amp;nbsp;&lt;STRONG&gt;cds watch --profile hybrid&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_105-1757916882856.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314202i05F4A6E47406A0C1/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_105-1757916882856.png" alt="Divya_Mandava_105-1757916882856.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Click on Products and Check your metadata is loaded or not.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divya_Mandava_106-1757916882857.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/314203iFDA66BA083DA0086/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divya_Mandava_106-1757916882857.png" alt="Divya_Mandava_106-1757916882857.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Hurray!!! My data got loaded successfully.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;In next session lets perform CRUD Operations on S/4 Hana data from SAP Fiori app as Front end...Stay Tuned&lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;U&gt;References:&lt;/U&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;A href="https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://fioriappslibrary.hana.ondemand.com/sap/fix/externalViewer/&lt;/A&gt;&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;A href="https://help.sap.com/fiori_bs2013/helpdata/en/a7/1564526ba1f25fe10000000a423f68/content.htm?no_cache=true" target="_blank" rel="noopener noreferrer"&gt;https://community.sap.com/t5/technology-q-a/creating-capm-application-with-node-js-by-using-s-4-hana...&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;&lt;A href="https://help.sap.com/fiori_bs2013/helpdata/en/a7/1564526ba1f25fe10000000a423f68/content.htm?no_cache=true" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/fiori_bs2013/helpdata/en/a7/1564526ba1f25fe10000000a423f68/content.htm?no_cache...&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;BR /&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Hope it’s helpful&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Thanks,&lt;/FONT&gt;&lt;BR /&gt;&lt;FONT face="comic sans ms,sans-serif"&gt;Divya MANDAVA.&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-align-left" style="text-align : left;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-capm-application-with-node-js-by-using-s-4-hana-database-part-2/ba-p/14237984"/>
    <published>2025-10-13T08:11:54.622000+02:00</published>
  </entry>
</feed>
