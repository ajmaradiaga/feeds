<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/SAP-Cloud-Applications-Studio-blog-posts.xml</id>
  <title>SAP Community - SAP Cloud Applications Studio</title>
  <updated>2025-09-16T11:12:05.032720+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/SAP Cloud Applications Studio/pd-p/67837800100800006741" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>SAP Cloud Applications Studio blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/positive-pay-file-generation-in-sap-bydesign/ba-p/13554737</id>
    <title>Positive Pay File Generation In SAP ByDesign</title>
    <updated>2023-04-26T23:14:56+02:00</updated>
    <author>
      <name>gomathij</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/15025</uri>
    </author>
    <content>&lt;H2 id="toc-hId-962111817"&gt;&lt;STRONG&gt;&lt;U&gt;Introduction/ About the Product&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
Delivered by ERP Logic, The objective of this customization is generating Positive Pay files in SAP Business ByD.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-765598312"&gt;&lt;STRONG&gt;&lt;U&gt;Business Case/ Requirement&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
Positive Pay File that needs to be generated in Text file(.txt) based on the format supported by the bank. The generated file can be uploaded manually by user in to the bank site.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&lt;U&gt;&amp;nbsp;&lt;/U&gt;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-569084807"&gt;&lt;STRONG&gt;&lt;U&gt;Solution overview&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
The solution overview where the customer can view a custom work center where they can view check file based on multiple selection criteria as per their need. Once viewed, the same can be extracted via text format according to the bank standards and the same can be uploaded in to bank site.&lt;BR /&gt;
&lt;H2 id="toc-hId-372571302"&gt;&lt;STRONG&gt;&lt;U&gt;High-level Architecture Design&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/04/Positivepayimg-2.png" height="283" width="618" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-176057797"&gt;&lt;STRONG&gt;&lt;U&gt;Key&lt;/U&gt;&lt;/STRONG&gt;&lt;STRONG&gt;-&lt;U&gt;Features&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Adequate Process&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--20455708"&gt;&lt;STRONG&gt;&lt;U&gt;Benefits&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Reduce Time consumption.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Secured and Prevent cheque fraud.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--216969213"&gt;&lt;STRONG&gt;&lt;U&gt;Conclusion&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
The Solution which automates the generation of Positive pay files in SAP Business ByDesign in real time.&lt;BR /&gt;
&lt;BR /&gt;
Kindly post your questions in&amp;nbsp;&lt;A href="https://answers.sap.com/tags/01200615320800000691" target="_blank" rel="noopener noreferrer"&gt;ask a question section&lt;/A&gt;&amp;nbsp;and feedback in the below comments section.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/positive-pay-file-generation-in-sap-bydesign/ba-p/13554737"/>
    <published>2023-04-26T23:14:56+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/set-filter-to-read-only/ba-p/13552180</id>
    <title>Set filter to read-only</title>
    <updated>2023-05-16T15:44:05+02:00</updated>
    <author>
      <name>Markus_Massfeld</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/134782</uri>
    </author>
    <content>I came across an issue when customizing the filter options for an OWL and I want to share my findings with you.&lt;BR /&gt;
&lt;BR /&gt;
I added an input field and set the property to "readOnly = true". So the input field was greyed out, but I could still press the filter button and adjust the filter options.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;STRONG&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/sap_blog_filter.png" /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Filter text greyed out&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/sap_blog_filter_2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Filter option still available&lt;/P&gt;&lt;BR /&gt;
In my opinion this behaviour doesn't make any sense, as I don't need filter options for a read-only input field. So I was looking for a possibility to set the filter button to read-only as well and I found a property to show or hide the filter button.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/sap_blog_filter_3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Adjust property ShowSelectOption&lt;/P&gt;&lt;BR /&gt;
By default the property ShowSelectOption is set to &lt;STRONG&gt;true&lt;/STRONG&gt;. After setting the property to &lt;STRONG&gt;false&lt;/STRONG&gt; the filter button is hidden.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/05/sap_blog_filter_4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Filter button hidden&lt;/P&gt;&lt;BR /&gt;
I know this is a very rare use case but I hope this article can help someone with the same issue.&lt;BR /&gt;
&lt;BR /&gt;
Please feel free to leave some feedback.</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/set-filter-to-read-only/ba-p/13552180"/>
    <published>2023-05-16T15:44:05+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/custom-outbound-bank-file-format-in-sap-bydesign/ba-p/13556175</id>
    <title>Custom Outbound Bank File Format In SAP ByDesign</title>
    <updated>2023-06-28T15:03:50+02:00</updated>
    <author>
      <name>archana2507</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/140530</uri>
    </author>
    <content>&lt;H2 id="toc-hId-962165755"&gt;&lt;STRONG&gt;&lt;U&gt;Introduction/ About the Product&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
Delivered by ERP Logic, The objective of this customization is the implementation of a custom Outbound Bank file format in SAP Business ByD.&lt;BR /&gt;
&lt;H2 id="toc-hId-765652250"&gt;&lt;STRONG&gt;&lt;U&gt;Business Case/ Requirement&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;The requirement is to create a custom-defined payment file structure for a Bank for both Domestic and Foreign payments as per the sample format provided by Bank.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The payment file structure remains the same for both the Domestic and Foreign Payment.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The generation of the output file is to be in .xml format.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-569138745"&gt;&lt;STRONG&gt;&lt;U&gt;Solution overview&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
As there is no option available to add or modify the fields in the SAP ByD standard payment file structure, ERPL will create a custom-defined payment file structure in Bydesign as per the sample file format provided by the Bank.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-372625240"&gt;&lt;STRONG&gt;&lt;U&gt;High-level Architecture Design&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/MicrosoftTeams-image-43.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Outbound Bank File Format In SAP ByDesign&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId-176111735"&gt;&lt;STRONG&gt;&lt;U&gt;Benefits&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Secure – Data transmission Integration relies on secure handling of data between systems.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN class="ui-provider gl b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"&gt;It is reliable in renaming or relabelling fields in the generated bank file to match specific bank requirements, ensuring smooth electronic payment processing.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Custom Payment File format in SAP By Design.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--20401770"&gt;&lt;STRONG&gt;&lt;U&gt;Conclusion&lt;/U&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
The Solution which automates the fields in the SAP ByD standard payment file structure for Outgoing Bank Transfer in SAP Business Bydesign.&lt;BR /&gt;
&lt;BR /&gt;
Kindly post your questions in ask a question section and feedback in the below comments section.</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/custom-outbound-bank-file-format-in-sap-bydesign/ba-p/13556175"/>
    <published>2023-06-28T15:03:50+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integration-of-sap-business-bydesign-with-acumatica-a-third-party-erp/ba-p/13559458</id>
    <title>INTEGRATION OF SAP BUSINESS BYDESIGN WITH ACUMATICA  A THIRD-PARTY ERP SYSTEM</title>
    <updated>2023-07-21T21:20:24+02:00</updated>
    <author>
      <name>archana2507</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/140530</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
In today's fast-paced and competitive business landscape, having efficient and streamlined operations is crucial for success. By leveraging the power of technology and integrating different software solutions, businesses can optimize their processes and achieve greater productivity. One such integration that offers immense benefits is the integration of Business ByDesign and Acumatica. In this blog post, we will explore the advantages of integrating these two powerful platforms and how it can help businesses achieve operational excellence.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Understanding Business ByDesign and Acumatica:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Before delving into the benefits of integration, let's briefly understand what Business ByDesign and Acumatica are and how they contribute to business management.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Business ByDesign is an all-in-one cloud-based business management software offered by SAP. It provides comprehensive solutions for various functions, including finance, sales, procurement, project management, and more. Business ByDesign offers scalability and flexibility, making it suitable for both small and mid-sized businesses.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Acumatica is a leading cloud-based enterprise resource planning (ERP) system. It offers robust functionality across various areas, including financial management, customer relationship management (CRM), distribution, manufacturing, and more. Acumatica is highly customizable and can adapt to the unique needs of businesses across different industries.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;High-Level Architecture:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/07/Acumatica-Blog.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Acumatica and Business ByDesign Integration Process&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;The Benefits of Integration:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Integrating Business ByDesign and Acumatica brings several advantages that enhance overall business efficiency and effectiveness.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Real-time Data Synchronization: Integrating Business ByDesign and Acumatica allows for seamless data exchange between the two systems. This enables real-time synchronization of crucial business data, such as sales orders, inventory levels, customer information, and financial data. With accurate and up-to-date information available across systems, decision-making becomes faster and more informed.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN class="ui-provider ga b c d e f g h i j k l m n o p q r s t u v w x y z ab ac ae af ag ah ai aj ak" dir="ltr"&gt;Business ByDesign and Acumatica integration is a streamlined process for Master Data and Financial Transmission between two systems&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
Kindly post your questions in ask a question section and feedback in the below comments section.</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integration-of-sap-business-bydesign-with-acumatica-a-third-party-erp/ba-p/13559458"/>
    <published>2023-07-21T21:20:24+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-control-visibility-of-any-tab-field-using-ruby-script-in-sdk-ui/ba-p/13578518</id>
    <title>How to control visibility of any tab/field using ruby script in SDK UI designer</title>
    <updated>2023-09-14T01:18:18+02:00</updated>
    <author>
      <name>tkbisoyi9118</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/162380</uri>
    </author>
    <content>As the UI rules in C4C is not applicable for SDK custom fields and tabs. We cannot control over the behaviors of custom fields or tabs from C4C UI. But we can control the behaviors like “Enabled”, “Mandatory”, “Visible” &amp;amp; “Read Only” using ruby script in SDK UI designer.&lt;BR /&gt;
&lt;BR /&gt;
In this blog, I will demonstrate how can we control any custom tab or field’s visibility on the basis of another field’s dropdown value using ruby script in the UI designer of SDK.&lt;BR /&gt;
&lt;BR /&gt;
Let's consider one example: There is one custom BO called “PM” (Plant maintenance) which is having a dropdown field&amp;nbsp; &amp;nbsp;as “Maintenance Type” with the values as 01- General, 02 – Preventive &amp;amp; 03- Break Down. Two custom tabs are created as “General &amp;amp; Break Down” and “Preventive”. Both the tabs consist of different information corresponding to their maintenance type where “General &amp;amp; Break Down” tab has same type of information and “Preventive” tab has some more information than as “General &amp;amp; Break Down”.&lt;BR /&gt;
&lt;BR /&gt;
So, when one user will select a particular maintenance type in Maintenance Type field, corresponding to that field value, the respective tab will be visible and other tab will be hidden.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Case1 – Control tab visibility using ruby script.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
As you can see in the TI screen of PM BO, 2 tabs are created and maintained as “General &amp;amp; Breakdown” &amp;amp; “Preventive”.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/1-44.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
To hide the Preventive tab for general and breakdown type of maintenance, we must follow the below steps:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Open the TI screen in UI designer. Select the tab (General &amp;amp; Breakdown) for which you want to control the visibility via ruby script.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Then go to Properties and select “Visible” under “Behavior” section. Select as Advanced and choose “Calculation Rule”.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Inside the body of “Calculation Rule” write the ruby script code as below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
The code says:&amp;nbsp; If the maintenance type (M_Type) is General (01) or Breakdown (03) then the “General &amp;amp; Break Down” tab should be visible and the “Preventive” tab should not be visible.&lt;BR /&gt;
&lt;OL start="4"&gt;&lt;BR /&gt;
 	&lt;LI&gt;From the Invalidation trigger window select the data field on which the condition is applied and click on “-&amp;gt;”.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/2-7.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
Same steps need to be followed for “Preventive” tab. Like Select the tab, select “Visible” under “Behavior” section, and choose advanced with calculation rule. Then write the logic: - if maintenance type is “Preventive” (02) then visibility should be true else false for other type of maintenance.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/3-22.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;The Result: &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
There are three types of maintenance.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/4-25.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
If I select Breakdown maintenance, then “General &amp;amp; Breakdown” tab is visible and the “Preventive” tab is hidden.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/5-19.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
If I select General maintenance, then “General &amp;amp; Breakdown” tab is visible and the “Preventive” tab is hidden.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/6-18.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
But when I have selected Preventive maintenance the “General &amp;amp; Breakdown” tab is hidden, and “Preventive” tab is visible.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/7-15.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Case 2: Control field visibility using Ruby script.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
We can perform this logic to hide/unhide any field as per list value of “Maintenance Type” in UI designer of SDK.&lt;BR /&gt;
&lt;BR /&gt;
Let’s consider, “Cycle pending” &amp;amp; “Frequency Applied” fields are related to Preventive type of maintenance. So, the requirement is when we are not selecting Preventive type of maintenance these 2 fields should be hidden.&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;On the TI screen in UI designer select the field you want to hide/unhide. Then under Behavior select “visible” and choose “Advanced” for Calculation Rule.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;In the body write the logic as below to satisfy above condition.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;From the Invalidation trigger select the field which is maintained in the condition and move to right box. Then Save and activate the UI.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/8-12.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/9-12.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;The Result: &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
When I have selected maintenance type as “Preventive” the corresponding fields can be seen in the overview tab.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/10-15.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
But when I have selected either “General” or “Breakdown” in maintenance type then those fields are hidden.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/11-22.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Conclusion: -&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
This solution is very straight and simple. This can be very useful in most of the projects of C4C for such type of requirements. We can use the Calculation rules and ruby scripts for various conditions and different requirements.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-control-visibility-of-any-tab-field-using-ruby-script-in-sdk-ui/ba-p/13578518"/>
    <published>2023-09-14T01:18:18+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-integrate-sdk-extension-fields-into-web-services/ba-p/13578931</id>
    <title>How To Integrate SDK Extension Fields into Web Services</title>
    <updated>2023-09-14T23:47:13+02:00</updated>
    <author>
      <name>Sunil5</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/162675</uri>
    </author>
    <content>It’s a common business requirement to replicate the data for extension fields to different systems. In this blog, I will demonstrate how to add SDK extension field to a standard web service which can then be used by other applications.&lt;BR /&gt;
&lt;BR /&gt;
Here We have added some extension fields in Customer Extension BO which are needed to be available in customer web service (ManageCustomerIn).&lt;BR /&gt;
&lt;BR /&gt;
To add extension field to Extension BO we need to follow below steps:&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Open your solution and click on Add New Item and select the “Extension” and from the list select “Business Object Extension”.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Add extension fields in “Business Object Extension” as shown below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Picture1-31.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
We now have few extension fields created in Extension BO in Cloud Application Studio. If those extension fields are required to be available in standard web service, we need to create “&lt;STRONG&gt;Process Extension Scenario&lt;/STRONG&gt;”. Here you need to follow the below steps:&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Right click on your solution and click on Add New Item and select the “Extension” and from the list select “&lt;STRONG&gt;Process Extension Scenario&lt;/STRONG&gt;” as shown below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Picture2-20.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Click on Add and new pop-up comes up with the details like select “Namespace, Business Object, Node” as shown below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Picture3-19.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;We need to select the checkbox of any service scenario view. After that the extension fields will be available for the webservices. Then click on Ok button to finish this setup.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;After completing all the above processes. Add the Process Extension Scenario name in “Scenario” annotation before the element name of extension fields as shown below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Picture7-13.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;After that Save and Activate the Extension BO.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Now we can be able to use the updated WSDL file of Customer Extension BO in web service integration. For which we have follow the below steps.&lt;BR /&gt;
&lt;BR /&gt;
Then go to the Business User work center and download the WSDL file for which you have added the extension fields. Then you need to follow the below steps:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Login to C4C using Business user credentials. Navigate as Administrator --&amp;gt; Service Explorer.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Select the web service where you have extended the extension fields and download the WSDL file as shown below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Picture5-11.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;Result Preview:- &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
After downloaded the WSDL file save it into your system. Then drag and drop the WSDL file to the browser where you can find newly added extension fields.&lt;BR /&gt;
&lt;BR /&gt;
You can also open the WSDL file through Notepad++ and search for the fields.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Picture6-14.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion:- &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
After extending the extension fields to the web service you can use those SDK fields in any integration.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-integrate-sdk-extension-fields-into-web-services/ba-p/13578931"/>
    <published>2023-09-14T23:47:13+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/developing-a-new-custom-data-source-in-sap-c4c-using-sap-cloud-application/ba-p/13562592</id>
    <title>Developing a New Custom Data Source in SAP C4C Using SAP Cloud Application Studio (SDK)</title>
    <updated>2023-09-26T15:23:36+02:00</updated>
    <author>
      <name>msalmani</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/43930</uri>
    </author>
    <content>&lt;H1 id="toc-hId-833891296"&gt;1. Introduction&lt;/H1&gt;&lt;BR /&gt;
We already explained in this blog &lt;A href="https://blogs.sap.com/2023/01/18/developing-a-new-custom-data-source-in-sap-c4c/" target="_blank" rel="noopener noreferrer"&gt;Developing a New Custom Data Source in SAP C4C&lt;/A&gt;, how to develop a new data source of types joined or combined directly within SAP C4C. Now, in this blog, we will learn how to develop a new custom data source (and not a joined or combined one) for a custom/standard business object in SAP C4C using SAP SDK. This data source can be used further for developing a new report, key figure or a new custom KPI. It means, developing a data source gives us more flexibility to develop more helpful analytical dashboards and reports.&lt;BR /&gt;
&lt;H1 id="toc-hId-637377791"&gt;2. Developing a New Custom Data Source&lt;/H1&gt;&lt;BR /&gt;
As starting point, we should open the desired solution in SAP SDK and then right click on the desired folder and select "Add - New Item ...".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Add-Item.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 01: Add a New Item in SAP SDK&lt;/P&gt;&lt;BR /&gt;
Then, we will see following popup in which we need to select "Analytics - Data Source" and the put a name for it:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-DS-Type.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 02: Add New Data Source in SAP SDK&lt;/P&gt;&lt;BR /&gt;
If we select "Joined Data Source" or "Combined Data Source" in the above screenshot, then we will be redirected to SAP C4C for creating a new data source which is already explained in &lt;A href="https://blogs.sap.com/2023/01/18/developing-a-new-custom-data-source-in-sap-c4c/" target="_blank" rel="noopener noreferrer"&gt;Developing a New Custom Data Source in SAP C4C&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
Then we see next popup in which we should provide more details. Some of these details are clear, but here is more details SAP provided for last three fields:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Enable Access Control&lt;/STRONG&gt;: Select this checkbox to allow restrictions for data from this data source. This data that users can access is defined in the work center view to which a report is assigned. To enable access control, your business object must contain an association that is marked as relevant for access control.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Allow Referencing&lt;/STRONG&gt;: Select to allow referencing by another data source and allow the fields of your data source name to be used in reports based on the referencing data source.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Log Sensitive Personal Data&lt;/STRONG&gt;: Select the checkbox to enable read access logging for sensitive personal data.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Create-a-DS-01-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 03: Add Details of New Data Source in SAP SDK&lt;/P&gt;&lt;BR /&gt;
In the next step, we select desired fields, nodes and associations which we want to add to data source in and output.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Create-a-DS-02-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 04: Selecting Desired Fields, Nodes, and Associations&lt;/P&gt;&lt;BR /&gt;
Now, it is time to define transformation rules for business object elements. Here, we have this option to rename field names, as we see below. In some cases, we can select a second parameter within the transformation rule. For more information about possible transformation rules, we can refer to &lt;A href="https://help.sap.com/doc/saphelpiis_studio_1805/2018.05/en-US/KTP/Products/bf889ebdf45d4dd19d4a0e0bd39a07fb/DeveloperDesktop/Analytics/ESS_CON_TransformationRules.html" target="_blank" rel="noopener noreferrer"&gt;Transformation Rule&lt;/A&gt;.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Create-a-DS-03-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 05: Define Transformation Rules for Business Object Elements&lt;/P&gt;&lt;BR /&gt;
In the next step, we can define aggregations which allows us further to calculate new key figures. In our example, we defined three aggregations on the field quantity as maximum, minimum, and summation. However, based on field type, we may have different possible aggregations in C4C.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Create-a-DS-04-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 06: Define Aggregation Behaviour for Business Object Elements&lt;/P&gt;&lt;BR /&gt;
Finally, we can review everything and confirm it.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Create-a-DS-06-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 07: Review and Confirm the New Custom Data Source&lt;/P&gt;&lt;BR /&gt;
We can also access to the created item any time int the solution and update it, if required.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/SDK-Create-a-DS-07-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image 08: Review and Update an Already Created Custom Data Source&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H1 id="toc-hId-440864286"&gt;3. Conclusion&lt;/H1&gt;&lt;BR /&gt;
As a conclusion, we are now able to develop a new custom data source for a standard or custom business object. This can be later used in C4C to develop new joined/combined custom data sources.&lt;BR /&gt;
&lt;H1 id="toc-hId-244350781"&gt;4. Call for Action&lt;/H1&gt;&lt;BR /&gt;
I would like to request you to share feedback or thoughts in a comment and follow my profile (&lt;SPAN class="mention-scrubbed"&gt;mhsalmani&lt;/SPAN&gt;) for future posts.&lt;BR /&gt;
&lt;BR /&gt;
If you have any question regarding SAP Cloud Applications Studio you can ask it&amp;nbsp;&lt;A href="https://answers.sap.com/tags/67837800100800006741" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt; or even read other blogs through this &lt;A href="https://blogs.sap.com/tags/67837800100800006741/" target="_blank" rel="noopener noreferrer"&gt;link&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
Moreover, there are some other related blogs which I published as following:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/01/18/developing-a-new-custom-data-source-in-sap-c4c/" target="_blank" rel="noopener noreferrer"&gt;Developing a New Custom Data Source in SAP C4C&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/developing-a-new-custom-data-source-in-sap-c4c-using-sap-cloud-application/ba-p/13562592"/>
    <published>2023-09-26T15:23:36+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-create-custom-ui-screens-for-mobile-application-in-business-bydesign/ba-p/13574291</id>
    <title>How to create custom UI screens for Mobile Application in Business ByDesign</title>
    <updated>2023-10-03T22:08:55+02:00</updated>
    <author>
      <name>ArunKumar14</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/165801</uri>
    </author>
    <content>&lt;H2 id="toc-hId-963954234"&gt;&lt;STRONG&gt;Steps to create the custom UI enablement in SAP Business ByDesign&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;With the SAP Business ByDesign Mobile App, you can access many of the main functions of the system that have been tailored to business on-the-run.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&amp;nbsp; &amp;nbsp; Changes made on your mobile device are automatically updated in the system, over the Internet, online and in real time.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;As in the desktop applications, you can use the ByDesign extensibility and flexibility features to extend the standard contents of the mobile app, as well as the content developed by partners and customers. In addition, you can use the SAP Cloud Applications Studio to extend many mobile functions.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&lt;STRONG&gt;SUPPORTED PLATFORMS&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;The mobile application is currently available for the following smartphones,&lt;BR /&gt;
i.) Android Phones.&lt;BR /&gt;
ii.) Apple iPhone.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&lt;STRONG&gt;SCENARIO:&lt;/STRONG&gt; Implementing the mobile application as same as a desktop application of SAP Business ByDesign.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&lt;STRONG&gt;WORKFLOW:&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;I.&amp;nbsp; &amp;nbsp;Create a custom business object.&lt;BR /&gt;
II.&amp;nbsp; Generating screen for desktop application (As usual Procedure).&lt;BR /&gt;
III. Generating screen for mobile application (Change the screen name).&lt;BR /&gt;
IV. Design the screen for mobile application.&lt;BR /&gt;
V.&amp;nbsp; Testing.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="text-align: left"&gt;&lt;STRONG&gt;I. CREATE A CUSTOM BUSINESS OBJECT&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Create a custom business object.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Define elements in root and item level as shown in the below screenshot.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Save and activate.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Image-42.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;II. GENERATING SCREEN FOR DESKTOP APPLICATION:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;This is the mandatory step for designing the desktop application.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;For the desktop screens follow the as-usual procedure to design the screens. Note the Short ID while generating the screens.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Image1-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;III. GENERATING SCREEN FOR MOBILE APPLICATION (CHANGE THE SCREEN NAME) &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
For the same Custom Business Object, generate one more set of screens by changing the Screen Name and give the short ID.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Image2-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;IV. DESIGN THE SCREEN FOR MOBILE APPLICATION&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Now open the Work center View of the mobile app screen, change the properties as highlighted below,&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;In properties under configuration there will be a tags, open the tags choose the attribute as "&lt;STRONG&gt;Device&lt;/STRONG&gt;" and the value as Mobile HTML.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Also add one more operation choose the attribute as "&lt;STRONG&gt;Device Cluster&lt;/STRONG&gt;" and the value as SHORT ID which you have given while generating the screens for the desktop and click on Ok.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Image3-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="font-size: 1rem"&gt;Save and activate the work center view.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Open the work center of the mobile app screen, save and activate it.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Open the OWL, QA and OIF of the mobile app screen , Design it (as done in the desktop screens / as-usual procedure to design it) and Change the properties as highlighted below,&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Add a operation and choose the attribute as device and the value as "&lt;STRONG&gt;Mobile HTML&lt;/STRONG&gt;", click on Ok.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Save and activate it, screens will not be activated, error will be occurs.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Once the properties are changed from OWL, QA, and OIF screens.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Save and activate the mobile app screens starting from WC View, OWL, QA, and OIF screens.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/09/Image4-1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp; &amp;nbsp; &amp;nbsp; 5. Assign the work center of the mobile screen to the front end on your desktop and the screens will be displayed in your mobile app.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;V. TESTING:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Download the &lt;STRONG&gt;SAP Business ByDesign Mobile&lt;/STRONG&gt; app from the play store/App Store in your mobile.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Login into SAP Business ByDesign Mobile application.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Open the Mobile – Work center of your custom object.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Test the scenario by create the record and save it.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;NOTE: I&lt;/STRONG&gt;&lt;SPAN style="font-size: 1rem"&gt;n the mobile screen, the standard object value selector (OVS) will not be accepted since that is designed for the Desktop. So as a result we need to create a custom OVS and assign it to the appropriate field. &lt;/SPAN&gt;Also, change the properties of the custom OVS by adding one attribute under tag and assign it to the "&lt;STRONG&gt;Mobile HTML"&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-create-custom-ui-screens-for-mobile-application-in-business-bydesign/ba-p/13574291"/>
    <published>2023-10-03T22:08:55+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-learning-blog-posts/where-can-i-learn-development-process-and-techniques-for-extending-the-sap/ba-p/294401</id>
    <title>Where can I learn development process and techniques for extending the SAP Sales Cloud</title>
    <updated>2023-10-11T12:37:12.547000+02:00</updated>
    <author>
      <name>Margit_Wagner</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/491</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;You can build the skills you need, for free and at your own pace with our Digital Learning Journey.&amp;nbsp;&lt;BR /&gt;on&amp;nbsp;&amp;nbsp;our&amp;nbsp;&lt;A title="SAP Learning Site&amp;nbsp;" href="https://learning.sap.com/learning-journey" target="_blank" rel="noopener noreferrer"&gt;SAP Learning Site&lt;/A&gt;&lt;/P&gt;&lt;DIV&gt;&lt;P&gt;I recommend to access our&amp;nbsp;&lt;SPAN&gt;&lt;A title="Extending SAP Sales and Service Cloud with SAP Cloud Applications Studio learning journey" href="https://learning.sap.com/learning-journey/extending-sap-sales-and-service-cloud-with-sap-cloud-applications-studio" target="_blank" rel="noopener noreferrer"&gt;Extending SAP Sales and Service Cloud with SAP Cloud Applications Studio learning journey&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;DIV&gt;&lt;STRONG&gt;Overview&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This learning journey will guide you through the development process and techniques for extending the SAP Sales Cloud and SAP Service Cloud using SAP Cloud Applications Studio.&lt;/SPAN&gt;&lt;BR /&gt;&lt;DIV&gt;&lt;P&gt;&lt;STRONG&gt;Learning objectives&lt;BR /&gt;&lt;/STRONG&gt;After completing this learning journey, &lt;STRONG&gt;consultants&lt;/STRONG&gt; and &lt;STRONG&gt;developers&lt;/STRONG&gt; will understand how to develop their own solutions for SAP Sales and Service Cloud using new custom business objects, screens and/or extending the standard content repository using SAP Cloud Applications Studio.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Basic knowledge of SAP Sales Cloud and/or SAP Service Cloud&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Ability to navigate through the user interface of these systems&lt;/LI&gt;&lt;LI&gt;Previous Developer Experience&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H3 id="toc-hId-1456502343"&gt;Pass all the quizzes and receive a digital badge&lt;/H3&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;P class=""&gt;&lt;SPAN&gt;Hope this is helpful.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Please ask a question related&amp;nbsp;to the digital learning journey in the&amp;nbsp;&lt;A title="Q&amp;amp;A area" href="https://groups.community.sap.com/t5/sap-learning/gh-p/learning" target="_blank" rel="noopener noreferrer"&gt;Q&amp;amp;A area&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Our SAP Learning Experts will get back to you as soon as possible!&amp;nbsp;We are here to support you.&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;P&gt;&lt;SPAN&gt;We appreciate your feedback and we will make sure to continue sharing interesting topics.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Kind regards&lt;BR /&gt;Margit&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/sap-learning-blog-posts/where-can-i-learn-development-process-and-techniques-for-extending-the-sap/ba-p/294401"/>
    <published>2023-10-11T12:37:12.547000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/new-learning-journey-extending-sap-sales-and-service-cloud-with-sap-cloud/ba-p/13579721</id>
    <title>New learning Journey– Extending SAP Sales and Service Cloud with SAP Cloud Applications Studio</title>
    <updated>2023-10-16T11:11:51+02:00</updated>
    <author>
      <name>FernandoRedondo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7571</uri>
    </author>
    <content>Hello everybody again! This is Fernando speaking!&lt;BR /&gt;
&lt;BR /&gt;
During last 10 years we’ve been updating and improving the content for this course: &lt;A href="https://training.sap.com/course/c4h460-sap-cloud-applications-studio-previously-known-as-c4c30-classroom-024-g-en/" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud Applications Studio&lt;/A&gt; (nowadays named C4H460 but formerly known as C4C30). This course is excellent for a 4-day class delivered by an instructor (I've delivered it many times), but it wasn’t designed as an eLearning targeting students who are pacing themselves. By the end of last year, we decided to create from scratch a new digital first learning journey project. We've analyzed the objectives for a beginner learner to take advantage of the major topics from the very first minutes of studying, we’ve created and developed complete brand-new materials for the all units and all lessons using new texts, graphics, interactions, simulations and videos bearing in mind all those years of classroom teaching experience but also getting first-hand feedback from real live project developer consultants.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG style="font-size: 1rem"&gt;&lt;SPAN class="TextRun MacChromeBold SCXW235998497 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;STRONG&gt;&lt;SPAN class="NormalTextRun SCXW235998497 BCX0"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/281495_SpiralboundNotebook_R_blue.png" height="86" width="86" /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt; &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;SPAN class="TextRun MacChromeBold SCXW235998497 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;STRONG&gt;&lt;SPAN class="NormalTextRun SCXW235998497 BCX0"&gt;New Learning Journey&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;&lt;A href="https://learning.sap.com/learning-journey/extending-sap-sales-and-service-cloud-with-sap-cloud-applications-studio?url_id=text-blogs-LSCPLCoE-SSC-Studio" target="_blank" rel="noopener noreferrer"&gt;C4H46B - Extending SAP Sales and Service Cloud with SAP Cloud Applications Studio&lt;/A&gt;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN class="TextRun SCXW44743972 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW44743972 BCX0"&gt;This learning journey is available completely free on SAP's new educational platform &lt;STRONG&gt;learning.sap.com&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW44743972 BCX0"&gt;. Following the learning journey you will notice that now, most of the content is multimedia, so that you can learning easily a wide set of topics with simulations, animations, hot maps, and&lt;/SPAN&gt;&lt;SPAN class="NormalTextRun SCXW44743972 BCX0"&gt; even with videos recordings from the real developer tasks and activities on the cloud system and also using the IDE (&lt;EM&gt;Integrated Development Environment&lt;/EM&gt;) .&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
Our goal with this learning journey is to enable developers and consultants to gain the knowledge on how to develop their own solutions for SAP Sales and Service Cloud using new custom business objects, screens and/or extending the standard content repository using SAP Cloud Applications Studio.I &lt;SPAN class="EOP SCXW8580650 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559739&amp;quot;:160,&amp;quot;335559740&amp;quot;:240}"&gt;know that sounds like a big goal, but we are covering all the major development steps during this eLearning with high level of detail.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/04/Course.png" height="98" width="98" /&gt;&lt;STRONG style="font-size: 1rem"&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;&lt;SPAN class="TextRun MacChromeBold SCXW118631084 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW118631084 BCX0"&gt;Audience&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN data-contrast="auto"&gt;Technical Consultants&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN data-contrast="auto"&gt;Developers&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559739&amp;quot;:160,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/10/Picture1-31.png" height="98" width="98" /&gt;&lt;STRONG style="font-size: 1rem"&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN class="TextRun MacChromeBold SCXW118631084 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW118631084 BCX0"&gt;Featured topics&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Introductory discussion about all SAP Sales and Service Cloud Extensibility&amp;nbsp;Options.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;A comprehensive primer development lifecycle and to the Studio setup and UI.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;How to use the scripting language to define business objects and implement business logic.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Developing Custom Business Objects and Extending Standard Business Objects.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Explanation about Business Configuration concept.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Considerations on Assembling and downloading the solution on the development tenant to move it to another tenant.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Deploying the solution on another tenant to test it or use it productively.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;SPAN class="EOP SCXW8580650 BCX0" data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559739&amp;quot;:160,&amp;quot;335559740&amp;quot;:240}"&gt;Here you have a glimpse of the look and feel:&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/10/Screenshot-2023-10-16-at-10.57.19.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
If you are thinking about extending your SAP Sales Cloud or your SAP Service Cloud solution with your own business logic this is the right initial course for you! Go and learn all the foundations about the development process. After that, you can still decide to participate in the &lt;A href="https://training.sap.com/course/c4h460-sap-cloud-applications-studio-previously-known-as-c4c30-classroom-024-g-en/" target="_blank" rel="noopener noreferrer"&gt;4 day Instructor Led Training&lt;/A&gt; which will give you the opportunity to have deeper tech discussions with other students and the instructor and also to carry out a whole collection of exercises that will cover the end to end process for the solution creation.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/05/282030_PlayButton2_R_blue-2.png" height="98" width="98" /&gt;&lt;STRONG style="font-size: 1rem"&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;SPAN class="TextRun MacChromeBold SCXW142835170 BCX0" lang="EN-US" lang="EN-US" data-contrast="auto"&gt;&lt;SPAN class="NormalTextRun SCXW142835170 BCX0"&gt;&lt;STRONG&gt;Additional Updates&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;Check out our SAP Learning Journeys and much more free learning content at &lt;/SPAN&gt;&lt;A href="https://learning.sap.com/?url_id=text-signaviocommunity-may22" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN data-contrast="none"&gt;SAP Learning site&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN data-contrast="auto"&gt;, where you can build in-demand SAP skills for free on a &lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/customer-experience" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN data-contrast="none"&gt;variety of topics in SAP Customer Experience&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN data-contrast="auto"&gt;.&lt;/SPAN&gt; &lt;SPAN data-contrast="auto"&gt;For quick video learning, check out the &lt;/SPAN&gt;&lt;A href="https://microlearning.opensap.com/channel/Expert%2BSAP%2BExtension%2BSuite%2Bfor%2BCustomer%2BExperience/173269601" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN data-contrast="none"&gt;openSAP Microlearning for CX extensibility topics&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN data-contrast="auto"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN data-ccp-props="{&amp;quot;134233117&amp;quot;:true,&amp;quot;134233118&amp;quot;:true,&amp;quot;201341983&amp;quot;:0,&amp;quot;335559739&amp;quot;:160,&amp;quot;335559740&amp;quot;:240}"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
I’ll be back very soon to present you more new learning resources, talks, sessions and anything which could be of interest for you related to SAP Customer Experience Integration and Extensibility area!&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN data-contrast="auto"&gt;Please, let me know about your feedback and questions below via comments!&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/new-learning-journey-extending-sap-sales-and-service-cloud-with-sap-cloud/ba-p/13579721"/>
    <published>2023-10-16T11:11:51+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/archiving-optimize-with-pdi/ba-p/13576821</id>
    <title>Archiving - Optimize with PDI</title>
    <updated>2023-11-02T09:39:04+01:00</updated>
    <author>
      <name>HorstSchaude</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/6371</uri>
    </author>
    <content>When Business Objects are deleted by Archiving their persistency is simply relocated from the systems database to an external storage and they are no longer part of any business chain.&lt;BR /&gt;
&lt;BR /&gt;
This means that during this deletion no other objects should be created or updated. No integration calls shall take place, except the information that this instance has been archived.&lt;BR /&gt;
&lt;BR /&gt;
This is done for the most of the SAP frameworks centrally, but what about the enhancements via the Partner Development Infrastructure (PDI)?&lt;BR /&gt;
&lt;BR /&gt;
As referred in &lt;A href="https://blogs.sap.com/2020/12/03/archiving-how-it-is-designed-how-does-it-work/" target="_blank" rel="noopener noreferrer"&gt;this blog&lt;/A&gt; one can check against the &amp;nbsp;element “&lt;EM&gt;ArchivingStatusCode&lt;/EM&gt;” but with &lt;SPAN style="font-size: 1rem"&gt;the current release it is much easier:&lt;/SPAN&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="font-size: 1rem"&gt;Use the PDI Reuse Library &lt;/SPAN&gt;&lt;STRONG style="font-size: 1rem"&gt;Archiving&lt;/STRONG&gt;&lt;SPAN style="font-size: 1rem"&gt; with the function &lt;/SPAN&gt;&lt;EM style="font-size: 1rem"&gt;IsArchivingInProgress&lt;/EM&gt;&lt;SPAN style="font-size: 1rem"&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
We propose to make use of this function in the &lt;EM&gt;Root&lt;/EM&gt; implementations of all &lt;A href="https://blogs.sap.com/2020/12/18/archiving-what-objects-what-are-the-criteria/" target="_blank" rel="noopener noreferrer"&gt;Business Objects supporting Archiving&lt;/A&gt; in one of the following ways:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Skip your implementation in the &lt;EM&gt;AfterModify&lt;/EM&gt; and &lt;EM&gt;BeforeSave&lt;/EM&gt; scripts&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/BeforeSave.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Delete the Custom Business Objects instances which are shadowing the SAP Business Objects in the &lt;EM&gt;OnDelete&lt;/EM&gt; script&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/OnDelete.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
By this one can optimize the performance of this Archiving phase which we noticed takes the most time of the complete Archiving process.&lt;BR /&gt;
&lt;BR /&gt;
Thanks to &lt;SPAN class="mention-scrubbed"&gt;stefan.kiefer&lt;/SPAN&gt; for providing the examples.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/archiving-optimize-with-pdi/ba-p/13576821"/>
    <published>2023-11-02T09:39:04+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-sales-cloud-control-tool-for-selective-code-enablement/ba-p/13577160</id>
    <title>SAP Sales Cloud - Control Tool for Selective Code Enablement</title>
    <updated>2023-12-11T10:59:46+01:00</updated>
    <author>
      <name>Gauri</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/180388</uri>
    </author>
    <content>&lt;SPAN style="font-weight: 400"&gt;Hello Everyone,&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-weight: 400"&gt;As we are aware, Cloud application studio is being used to make technical development in C4C and Selective movement of code from dev tenant to other tenants is not feasible due to current cloud studio framework constraints i.e. entire solution has to be moved together.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-weight: 400"&gt;However in the real world, we always come up with challenges where the Development team is working on different build items together with different prioritization,&amp;nbsp; Multiple Releases build going together with different go live timelines, Support team working on an incident code fix and get a different P1 code fix which requires immediate resolution. In such situation we currently don’t have a solution available to transport selectively a part of the code to next tenants from the development without impacting the ongoing parallel developments. In General we follow a classical Manual approach to comment on all the ongoing code, move our priority change and then uncomment the code to continue the work. Which has its own limitations.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Manual version check makes the version management complex&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Multiple test iterations involved&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Alignment between multiple stakeholders (Architects, Support teams, Project teams, Regression teams) consumes lot of time&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Tedious and cumbersome process&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Risk of human error may result into application issues&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Parallel developments of different objects are not possible&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;SPAN style="font-weight: 400"&gt;Trust now we are clear of the scenario that we want to achieve&lt;STRONG&gt; selective movement of the code without impacting the parallel developments.&lt;/STRONG&gt; In the Below solution we will see how you can move the entire solution to the next tenant but then &lt;STRONG&gt;enable/disable selective code in test/production tenants&lt;/STRONG&gt; based on your requirements&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Prerequisite :&lt;/STRONG&gt;- SAP Sales Cloud Technical Consultants and possess sound knowledge of Cloud Application Studio developments.&lt;BR /&gt;
&lt;BR /&gt;
&lt;B&gt;Solution Approach: Custom tool for controlling selective movements.&lt;/B&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Complete solution will be moved as per standard SAP strategy however We will create a tool to control the selective execution of code in test/Production tenants.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;The tool provides flexibility to enable and disable specific features as per business needs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;B&gt;Steps to follow&lt;/B&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-weight: 400"&gt;Step 1: Build a Custom Business Object as shown below..&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/BO_Screenshot.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;BO Screen Shot&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;BO Definition&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;// BO Definition in Code&lt;BR /&gt;
&lt;BR /&gt;
import AP.Common.GDT as apCommonGDT;&lt;BR /&gt;
&lt;BR /&gt;
businessobject Configure {&lt;BR /&gt;
&lt;BR /&gt;
        // Root node must not be specified, it is created implicitly&lt;BR /&gt;
&lt;BR /&gt;
        //&lt;BR /&gt;
&lt;BR /&gt;
        // Add elements here. &lt;BR /&gt;
&lt;BR /&gt;
        // &lt;BR /&gt;
&lt;BR /&gt;
        // To declare an element as alternative key, use the [AlternativeKey] annotation.&lt;BR /&gt;
&lt;BR /&gt;
        // Please note:&lt;BR /&gt;
&lt;BR /&gt;
        // - An alternative key of type UUID exists implicitly for each node, enabling the node&lt;BR /&gt;
&lt;BR /&gt;
        //   to be used as an association target.&lt;BR /&gt;
&lt;BR /&gt;
        // - The QueryByElements query is created automatically for each node.&lt;BR /&gt;
&lt;BR /&gt;
        // - Code completion is available with CTRL + SPACE.&lt;BR /&gt;
&lt;BR /&gt;
[Label("SolutionNumber")] [AlternativeKey] element SolutionNumber : ID ;&lt;BR /&gt;
&lt;BR /&gt;
[Label("Release")] [AlternativeKey] element Release : IntegerValue ;&lt;BR /&gt;
&lt;BR /&gt;
[Label("Solution Description")]element SolutionDes : LANGUAGEINDEPENDENT_EXTENDED_Text;&lt;BR /&gt;
&lt;BR /&gt;
[Label("Activate")] element Activate:Indicator;&lt;BR /&gt;
&lt;BR /&gt;
[DependentObject(TextCollection)] node TextCollection;&lt;BR /&gt;
&lt;BR /&gt;
}&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Generate screens for both desktop and mobile using the thing inspector technique. Build screens for Quick Create and also add delete feature in OWL screen to delete the entry. Delete action is added to delete an entry using event handler using BO operation and row deletion.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Create a &lt;/SPAN&gt;&lt;B&gt;Reuse library &lt;/B&gt;&lt;SPAN style="font-weight: 400"&gt;like Feature and define a function named GetFeature.absl&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;In this we will check if a particular development is to be enabled or disabled using the activate field in the configure BO. The reuse library which will have one function. This function will check the activate flag for a given feature and return true value if the feature is activated, else false if the feature is not activated.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;&lt;BR /&gt;
import ABSL;&lt;BR /&gt;
import AP.Common.GDT;&lt;BR /&gt;
&lt;BR /&gt;
var result : collectionof DataType::LANGUAGEINDEPENDENT_EXTENDED_Text;&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
var query = Configure.QueryByElements;&lt;BR /&gt;
var resultData = query.ExecuteDataOnly();&lt;BR /&gt;
// 2. Selection&lt;BR /&gt;
var selectionParams = query.CreateSelectionParams();&lt;BR /&gt;
// Result&lt;BR /&gt;
 resultData = query.ExecuteDataOnly(selectionParams);&lt;BR /&gt;
&lt;BR /&gt;
 foreach( var elemConfig in resultData)&lt;BR /&gt;
{  &lt;BR /&gt;
&lt;BR /&gt;
var SolutionNumber = elemConfig.SolutionNumber;&lt;BR /&gt;
var SolutionDes = elemConfig.SolutionDes;&lt;BR /&gt;
var rel = elemConfig.Release;&lt;BR /&gt;
var sactive = elemConfig.Activate;&lt;BR /&gt;
if ( SolutionNumber == IV_release)&lt;BR /&gt;
{&lt;BR /&gt;
if (sactive.ToString()  == "X")&lt;BR /&gt;
{&lt;BR /&gt;
&lt;BR /&gt;
result = SolutionNumber;&lt;BR /&gt;
}&lt;BR /&gt;
}&lt;BR /&gt;
}&lt;BR /&gt;
&lt;BR /&gt;
return result;&lt;BR /&gt;
&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;When any feature is build using ABSL code then the first check has to be implemented where the entry in the feature control custom business object will be checked. If the feature is activated then the code will be executed else it will not be executed.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Let's see how to utilize the about &lt;STRONG&gt;Configure.BO&lt;/STRONG&gt; to enable or disable the execution of the code and fix our support issues and also help other teams to continue with their developments.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;/*&lt;BR /&gt;
	Add your SAP Business ByDesign scripting language implementation for:&lt;BR /&gt;
		Business Object: LeadCreation&lt;BR /&gt;
		Node: Root&lt;BR /&gt;
		Event: BeforeSave &lt;BR /&gt;
		&lt;BR /&gt;
	Note: &lt;BR /&gt;
	  - To access the elements of the business object node, &lt;BR /&gt;
	    use path expressions, for example, this.&amp;lt;element name&amp;gt;. &lt;BR /&gt;
	  - To use code completion, press CTRL+J. &lt;BR /&gt;
	  - This script file is mass-enabled, i.e. the keyword "this" &lt;BR /&gt;
	    refers to a collection of node instances.&lt;BR /&gt;
	  - The solution uses this script when:&lt;BR /&gt;
		- the instance of the business object is being saved.&lt;BR /&gt;
		- the instance of the business object is created from other sources like web services, preview screen, and so on.&lt;BR /&gt;
*/&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
import ABSL;&lt;BR /&gt;
import AP.Common.GDT as gdt;&lt;BR /&gt;
import AP.PDI.bo as pdi;&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
var relstring;&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
//var rel4 : DataType::pdi:ID;&lt;BR /&gt;
//var rel5 = 2;&lt;BR /&gt;
var checkentry;&lt;BR /&gt;
var devkey = "Feature6";&lt;BR /&gt;
checkentry = Feature.GetFeature(devkey);&lt;BR /&gt;
var check;&lt;BR /&gt;
check = checkentry;&lt;BR /&gt;
if (check == devkey) &lt;BR /&gt;
{&lt;BR /&gt;
//Proceed with the logic which is relevant for support issue to be fixed&lt;BR /&gt;
 }&lt;BR /&gt;
&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;The above code will first check if entry is present in Configure.BO and is active or not.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;If active then code will be executed else it won't execute.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="font-weight: 400"&gt;Reuse library is built and kept handy. This will be referred once this development will be used in actual and called in the respective code as and when required. Reuse Library will be used in the logic building where enabling and disabling of code is needed.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;Advantages and benefits&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Custom Business Object is developed in SAP C4C which will be used to enable or disable the feature in each test or production tenant.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Enabling and disabling the solution based on business needs can be done.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Access to this custom BO will be controlled i.e. the access will be restricted to certain team members only.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Every code development / feature / requirement will be tagged with a unique feature item in the custom BO.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;The new solution will be moved as an SDK solution to different tenants for the first time. Once the solution is activated in the target tenant then the solution control BO will be manually updated/maintained by designated team members.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;No Manual involvement to comment and uncomment the code&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Multiple objects can be developed in parallel&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Feature wise selective movement is enabled&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Less human error&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Alignment with various stakeholders is decreased.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;Less testing efforts&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;STRONG&gt;Other Thoughts&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;We can use a business configuration object but I prefer a custom BO to build this tool.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="font-weight: 400"&gt;&lt;SPAN style="font-weight: 400"&gt;The BO structure and fields can vary based on the business requirements.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Best Regards,&lt;BR /&gt;
&lt;BR /&gt;
Gauri Nargunde</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-sales-cloud-control-tool-for-selective-code-enablement/ba-p/13577160"/>
    <published>2023-12-11T10:59:46+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured/ba-p/13572494</id>
    <title>Harnessing Multi-Model Capabilities with Spotify – Processing Semi-Structured Data with SAP HANA Cloud/SAP Datasphere – Part 6</title>
    <updated>2023-12-29T00:53:49+01:00</updated>
    <author>
      <name>Vivek-RR</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/143545</uri>
    </author>
    <content>In blog 6 of our Spotify series, we shift our focus to visualization, explicitly pertaining to Playlist and Audio features API, as discussed in this series's &lt;A href="https://blogs.sap.com/2023/02/27/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-data-warehouse-cloud-part-2/" target="_blank" rel="noopener noreferrer"&gt;second&lt;/A&gt; and &lt;A href="https://blogs.sap.com/2023/03/31/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part-3/?" target="_blank" rel="noopener noreferrer"&gt;third&lt;/A&gt; blogs. We will delve into the detailed consumption of Calculation views from SAP HANA Cloud, utilizing tools such as SAP Analytics Cloud and Microsoft Power BI. For SAP Datasphere models, based on the third blog, the consumption process is quite similar, and we will highlight the differences where they exist.&lt;BR /&gt;
&lt;BR /&gt;
In this blog, we will cover the following topics in detail:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Consuming Calculation Views built using the Business Application Studio in SAP Analytics Cloud.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Utilizing R script to construct an interactive density plot to comprehend the Danceability metrics across all playlists.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Utilizing R script to create an interactive visualization of the Speechiness metric and compare it across all Playlists.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Leveraging a robust data visualization package in R, known as "Grammar of Graphics Plot" (GGPLOT), to visualize the Speechiness and Danceability metrics.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Consuming the same Calculation views in Microsoft Power BI.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
This blog post is part of a comprehensive series. If you're interested in exploring more, feel free to visit the other blogs in this series:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&amp;nbsp;&lt;A href="https://blogs.sap.com/2023/02/27/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-data-warehouse-cloud-part-1/" target="_blank" rel="noopener noreferrer"&gt;Architecture&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/02/27/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-data-warehouse-cloud-part-2/" target="_blank" rel="noopener noreferrer"&gt;Processing&amp;nbsp; Semi-Structured data in SAP HANA Cloud&amp;nbsp;&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/03/31/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part-3/?" target="_blank" rel="noopener noreferrer"&gt;Processing Semi-structured data in SAP Datasphere&amp;nbsp;&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/03/31/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part-3/?" target="_blank" rel="noopener noreferrer"&gt;&amp;nbsp;&lt;/A&gt;&lt;A href="https://blogs.sap.com/2023/05/15/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part-4/" target="_blank" rel="noopener noreferrer"&gt;Processing Semi-Structured data in SAP HANA Cloud &amp;amp; creating graph networks&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/07/13/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part%E2%80%AF5/" target="_blank" rel="noopener noreferrer"&gt;Building Intelligent Data Apps based on Spotify Datasets&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-963896577"&gt;The Visualization&lt;/H2&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-767383072"&gt;Consuming Calculation Views built using the Business Application Studio in SAP Analytics Cloud&lt;/H2&gt;&lt;BR /&gt;
This section will concentrate on accessing the deployed calculation view in SAP Analytics Cloud (SAC). Suppose you have followed along with &lt;A href="https://blogs.sap.com/2023/02/27/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-data-warehouse-cloud-part-2/" target="_blank" rel="noopener noreferrer"&gt;blog 2&lt;/A&gt; and cloned and deployed the associated &lt;A href="https://github.com/coolvivz/spcheck" target="_blank" rel="nofollow noopener noreferrer"&gt;Git repository&lt;/A&gt;, which now includes content for both reporting and building Graph networks. In that case, you should have access to the calculation view, CV_TOP_ALL[1].&lt;BR /&gt;
&lt;BR /&gt;
To access the Calculation view from either SAC or Microsoft PowerBI, it's crucial to ensure that the hdbrole[2] is assigned to the database user created for frontend consumption. This step is vital for enabling the necessary permissions and access rights for the user to interact with the data through these platforms.&lt;BR /&gt;
&lt;BR /&gt;
Remember, the correct assignment of roles and permissions is a crucial step in maintaining the security and integrity of your data while still allowing for flexible and robust data analysis capabilities.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b2.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
This calculation view is based on the SQL view TOPALL1 discussed in &lt;A href="https://blogs.sap.com/2023/02/27/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-data-warehouse-cloud-part-2/" target="_blank" rel="noopener noreferrer"&gt;blog2&lt;/A&gt;.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
The semantics details for the calculation view, CV_TOP_ALL[1], include a calculated column named "Speechiness1".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;As highlighted previously, the audio features from the Spotify API include a "speechiness" attribute. Speechiness measures the presence of spoken words in a track. Songs with exclusively instrumental music and no vocals have low speechiness, while rap songs and podcasts with continuous speaking have higher scores.&lt;/P&gt;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;This metric helps compare speech patterns across playlists and geo-markets. Analyzing speechiness allows identifying playlists that contain:&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL class="list-disc pl-8 space-y-2"&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Mostly music-centric tracks&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Increased spoken vocal content&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Distinct formats like rap, hip hop, podcasts&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;In summary, the speechiness measure detects tracks with more spoken emphasis over instrumentation. We can leverage this to spot regional playlist preferences for words vs music.&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b5.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Source: Spotify API Documentation&lt;/P&gt;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;I establish a threshold to differentiate speech-centric playlists by subtracting 0.33 from the Spotify speechiness score. Playlists with tracks containing predominantly spoken words (e.g., rap, hip hop, podcasts) typically have higher speechiness exceeding this threshold.&lt;/P&gt;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;The interactive visualizations in SAP Analytics Cloud will spotlight playlists based on this speechiness threshold:&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL class="list-disc pl-8 space-y-2"&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Playlists above the threshold contain more vocal-heavy tracks&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Playlists below the mark have mostly musical instrumentation&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b6.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;With the calculation view deployed, the next step is allowing consumption by assigning database permissions.&lt;/P&gt;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;Specifically:&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL class="list-disc pl-8 space-y-2"&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Use the SAP HANA Cloud Database Explorer to connect to the HDI container holding the deployed view. This verifies successful deployment.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Then in SAP HANA Cloud Cockpit, locate the "json::TRACKSALL" hdbrole that got created.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI class="whitespace-normal"&gt;Assign this hdbrole to the database user needing access to the view.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;P class="whitespace-pre-wrap"&gt;Enabling this role assignment via Cockpit is a prerequisite before the calculation view can be leveraged for reporting and analytics. The Explorer allows consumption confirmation post assignment.&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b7.png" height="252" width="284" /&gt;&lt;/P&gt;&lt;BR /&gt;
On successfully creating a new database user, provisioning the roles, and connecting to the HDI container, you can effectively generate a scatter plot[4] based on the calculation view, CV_TOP_ALL[1].&lt;BR /&gt;
&lt;BR /&gt;
The scatter plot is a powerful visualization tool that allows you to see the relationship between two variables. In this case, we have chosen to visualize the correlation between the metrics 'Danceability' and 'Popularity'[3] across tracks of playlists from four different countries. This is achieved by setting a filter[2] on 'Tracklistname'.&lt;BR /&gt;
&lt;BR /&gt;
To interpret the scatter plot, each point on the plot represents a track. The position of a point on the horizontal axis indicates its 'Danceability' score, and its position on the vertical axis indicates its 'Popularity' score. If there is a pattern in the points, such as a line or curve, this suggests a correlation between 'Danceability' and 'Popularity'.&lt;BR /&gt;
&lt;BR /&gt;
Remember, correlation does not imply causation. While the scatter plot may show a relationship between 'Danceability' and 'Popularity', it does not prove that increasing 'Danceability' will increase 'Popularity'. Other factors may be influencing both variables.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b8.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId-570869567"&gt;&lt;STRONG&gt;Consuming Calculation Views built using Business Application Studio in SAP Analytics Cloud[SAC]&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
If you already have access to the SAP Analytics Cloud (SAC) tenant, you can proceed with the next steps. However, if you don't, you have the option to register for a SAC trial, which lasts up to 60 days. This trial period allows you to explore and familiarize yourself with the functionalities of SAC.&lt;BR /&gt;
&lt;BR /&gt;
For further information about the SAC trial, including registration process, available features, and any limitations, please refer to the provided&lt;A href="https://www.sap.com/products/technology-platform/cloud-analytics/trial.html" target="_blank" rel="noopener noreferrer"&gt; link&lt;/A&gt;. This link should direct you to a FAQ page and additional details about the SAC trial.&lt;BR /&gt;
&lt;H3 id="toc-hId-503438781"&gt;&lt;STRONG&gt;Setting up connections to SAP HANA Cloud&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;H5 id="toc-hId-565090714"&gt;Assumptions:&lt;/H5&gt;&lt;BR /&gt;
You already have access to the SAC tenant.&lt;BR /&gt;
&lt;BR /&gt;
To create a connection to SAP HANA Cloud from your active SAC tenant, follow these steps:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;From the main menu, select 'Connection'. This will take you to the page where you can manage all your connections.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Click on the '+ Add' button to start creating a new connection.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;From the list of available connection types, select 'SAP HANA Cloud'.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Enter Connection Details: In the form that appears, you'll need to provide the necessary details such as host, port, and logon credentials. Click OK&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
Now, your SAC tenant is connected to your SAP HANA Cloud instance, and you can start creating models and stories using your SAP HANA Cloud data.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b9.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--18670948"&gt;Let’s build live Data Models&lt;/H2&gt;&lt;BR /&gt;
Select the Modeler from the drop-down and build a Live data connection. Use the connection that was created in the previous step and select the calculation view CV_TOP_ALL.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b10.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Save the model once you validate all the measures and Dimensions. In my case, the analytical model&amp;nbsp; is “Tracksall”&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b11.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--215184453"&gt;&lt;STRONG&gt;Let’s create a Story&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
Now that we have built an analytical model, we can leverage it to gain insights into playlists and songs by visualizing key metrics. Specifically, we will create data stories using ggplot to examine three aspects:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Danceability, Speechiness, and Energy Across a Playlist:&lt;/STRONG&gt; We will visualize the danceability, speechiness, and energy scores for each song in a chosen playlist by plotting the metrics with a trending chart. This allows the assessment of metric distributions within that playlist.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Top Playlists for Danceability:&lt;/STRONG&gt; Using &lt;STRONG&gt;R scripts&lt;/STRONG&gt; and ggplot, we can analyze danceability scores across all playlists for a given week. By plotting a sorted chart showing the playlist with the highest average danceability at the top, we can readily identify which playlist contains the most danceable tracks.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Comparing Speechiness Thresholds Across Playlists:&lt;/STRONG&gt; We set a speechiness threshold based on song composition to categorize tracks as having either high or low importance on words versus music. Then with &lt;STRONG&gt;R&lt;/STRONG&gt;, we plot high and low speechiness scores for each playlist using ggplot. This enables easy comparison of which playlists favor tracks with more spoken words.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--282615239"&gt;&lt;STRONG&gt;Danceability, Speechiness, and Energy Across a Playlist&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
This is a standard trending chart[1] based on the SAC Analytic model TRACKSALL, and basically compares the 3 metrics across the playlist TOPUSA[2]. TRACKLISTNAME groups all 50 tracks from the USA and I have used the filter[2] for the same.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b12.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
When you analyze the top 50 songs from the USA tracks, you will notice the songs with high energy or danceability will have less "speechiness".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b13.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
And songs like Rich Flex by Drake has higher "speechiness" value because of all the rapping yo! &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt; It’s a mix of R&amp;amp;B and RAP and you notice the high Speechiness factor.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b14.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId--479128744"&gt;&lt;STRONG&gt;Top Playlists for Danceability[Using R]&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Prerequisites:&lt;BR /&gt;
&lt;BR /&gt;
1. To utilize R-scripts, connect to either a remote R environment (BYOR) or an R environment provided by SAP in various data centers. Refer to this &lt;A href="https://help.sap.com/docs/SAP_ANALYTICS_CLOUD/00f68c2e08b941f081002fd3691d86a7/8d589100aea341a58a5c0916bbef022b.html" target="_blank" rel="noopener noreferrer"&gt;link&lt;/A&gt; for availability details. Follow these &lt;A href="https://help.sap.com/doc/ba23463df44849efbfcb862169069d63/release/en-US/BOC-R-integration_g.pdf" target="_blank" rel="noopener noreferrer"&gt;steps&lt;/A&gt; to set up a remote R server, similar to integrating R with SAP HANA.&lt;BR /&gt;
&lt;BR /&gt;
2. For production use cases, verify required R packages. If packages needed for your use case are &lt;A href="https://blogs.sap.com/2020/03/18/r-packages-for-sap-analytics-cloud/" target="_blank" rel="noopener noreferrer"&gt;unsupported&lt;/A&gt; by SAP, set up an R environment with those packages accordingly.&lt;BR /&gt;
&lt;BR /&gt;
3. Review the basics of &lt;A href="https://ggplot2.tidyverse.org/" target="_blank" rel="nofollow noopener noreferrer"&gt;ggplot2&lt;/A&gt;, an R library providing flexible, tidy, optimized data visualization. It enables integrated data exploration and analysis. Refer to the ggplot2 documentation.&lt;BR /&gt;
&lt;BR /&gt;
For this Spotify example, I leveraged an SAP-provided R environment in the EU10 data center. First I will share the visualization, followed by the script, explanation, and SAC steps. This output utilizes interactive data visualization to compare "danceability" metrics across music playlists.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b15.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
And here is the script for the R visualization.&lt;BR /&gt;
&lt;PRE class="language-python"&gt;&lt;CODE&gt;library(plotly)&lt;BR /&gt;
library(ggplot2)&lt;BR /&gt;
salmon &amp;lt;- "#F8766D"&lt;BR /&gt;
teal &amp;lt;- "#00BFC4"&lt;BR /&gt;
orange &amp;lt;- "#D95E0E"&lt;BR /&gt;
limegreen &amp;lt;- "#7CAE00"&lt;BR /&gt;
tangerine &amp;lt;- "#FF9E13"&lt;BR /&gt;
skyblue &amp;lt;- "#56B4E9"&lt;BR /&gt;
junglegreen &amp;lt;- "#009E73"&lt;BR /&gt;
mustard &amp;lt;- "#F0E442"&lt;BR /&gt;
sapphire&amp;lt;- "#0072B2"&lt;BR /&gt;
goldenrod &amp;lt;- "#E69F00"&lt;BR /&gt;
viz4 &amp;lt;- ggplot(Tracksall, aes(x=Tracksall$DANCEABILITY, fill=Tracksall$TRACKLISTNAME,&lt;BR /&gt;
                    text = paste(Tracksall$TRACKLISTNAME)))+&lt;BR /&gt;
  geom_density(alpha=0.7, color=NA)+&lt;BR /&gt;
  scale_fill_manual(values=c(salmon, teal, orange, limegreen, tangerine,skyblue,junglegreen, mustard,sapphire,goldenrod))+&lt;BR /&gt;
  labs(x="Danceability", y="Density") +&lt;BR /&gt;
  guides(fill=guide_legend(title="Playlist"))+&lt;BR /&gt;
  theme_minimal()+&lt;BR /&gt;
  ggtitle("Distribution of Danceability Data")&lt;BR /&gt;
&lt;BR /&gt;
ggplotly(viz4, tooltip=c("text"))&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--675642249"&gt;&lt;STRONG&gt;How would I explain this to a Business User?&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
What this graph specifically shows is the danceability distribution across various playlists based on the dataset TRACKSALL. Using density plots, we can visualize how concentrated certain playlists are in high or low danceability scores. For example, some playlists have most of their tracks clustered on the higher end of danceability, meaning the songs tend to be quite danceable(e.g. Chile Playlist). Other playlists have a wider spread across the axis. Just by glancing at the colors and density shapes, we can get a sense of the variation in dance "suitability" across these playlists.&lt;BR /&gt;
&lt;H3 id="toc-hId--947387123"&gt;&lt;STRONG&gt;How can I understand the script from a technical perspective?&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Sure, let's break down the script.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b16.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Lines 1-2: These lines load the plotly and ggplot2 packages. plotly is used for creating interactive plots, and ggplot2 is a plotting system for R.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Lines 3-12: Define a series of colors using their hexadecimal codes. These colors will be used in the plot.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 13-14: This line starts the creation of a ggplot object. Tracksall is your data frame, DANCEABILITY is the variable for the x-axis, and TRACKLISTNAME is the variable used to fill the density plot. The text aesthetic is used to specify the text that will be displayed when you hover over the plot in the final interactive plot.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 15: This adds a density plot to the ggplot object. The alpha parameter controls the transparency of the plot (1 is opaque and 0 is transparent). color=NA means that the outline color of the density plot is set to be transparent.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 16: This line sets the fill color of the density plot based on the TRACKLISTNAME variable. The colors are manually specified using the color variables defined earlier.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 17: This line sets the labels for the x and y axes.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 18: This line adds a legend for the fill colors with the title "Playlist".&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 19: This sets the theme of the plot to be minimal, which is a theme with a clean and minimal aesthetic.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 20: This line sets the title of the plot.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 22: This line converts the ggplot object to a plotly object, which makes the plot interactive. The tooltip parameter specifies that the text specified in the text aesthetic should be displayed when you hover over the plot.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--1143900628"&gt;&lt;STRONG&gt;How do I implement this in SAC?&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
Please make sure R server is enabled on your SAC tenant or your remote R connection is established.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b17.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
As part of your story, add R visualization as shown below:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b18.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Once you add the R visualization, provide the input data source[1] as your Analytics model “Tracksall”. Select the “Edit script”[2] option and copy the script that I shared. If your Analytics model name is different, please make sure you replace it in the script on line 13.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b19.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
With just a few lines of code, the flexibility and ease of ggplot2 allows us to quickly visualize the data into an insightful plot, demonstrating the power of this graphics package.&lt;BR /&gt;
&lt;H3 id="toc-hId--1340414133"&gt;&lt;STRONG&gt;Comparing Speechiness Thresholds Across Playlists - Using R&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
I will share the visualization, R script, and an explanation of the script. However, you can follow the same implementation steps in SAC as we previously discussed for the "Distribution of Danceability Data" example. Let's start with the visualization first: This script creates an interactive bar chart that visually represents the "Speechiness" of different tracks across various playlists. Speechiness measures the presence of spoken words in a track - the higher the value, the more words in the track. Each bar represents a track, with the bar height indicating the speechiness. The bars are color-coded by playlist, enabling easy distinction between playlists. Some tracks in different playlists have Speechiness &amp;gt; 0, potentially indicating rap songs, podcasts, or audiobooks.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b20.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
And here is the script for the R visualization.&lt;BR /&gt;
&lt;PRE class="language-python"&gt;&lt;CODE&gt;library(plotly)&lt;BR /&gt;
library(dplyr)&lt;BR /&gt;
library(ggplot2)&lt;BR /&gt;
salmon &amp;lt;- "#F8766D"&lt;BR /&gt;
teal &amp;lt;- "#00BFC4"&lt;BR /&gt;
orange &amp;lt;- "#D95E0E"&lt;BR /&gt;
limegreen &amp;lt;- "#7CAE00"&lt;BR /&gt;
tangerine &amp;lt;- "#FF9E13"&lt;BR /&gt;
skyblue &amp;lt;- "#56B4E9"&lt;BR /&gt;
junglegreen &amp;lt;- "#009E73"&lt;BR /&gt;
mustard &amp;lt;- "#F0E442"&lt;BR /&gt;
sapphire&amp;lt;- "#0072B2"&lt;BR /&gt;
goldenrod &amp;lt;- "#E69F00"&lt;BR /&gt;
viz1 &amp;lt;- ggplot(Tracksall, aes(x=reorder(Tracksall$TRACK_NAME, -Tracksall$SPEECHINESS), y=Tracksall$SPEECHINESS, fill=Tracksall$TRACKLISTNAME, text=(paste("Track:", Tracksall$TRACK_NAME, "&amp;lt;br&amp;gt;",&lt;BR /&gt;
"Artist:", Tracksall$Artist_NAME, "&amp;lt;br&amp;gt;",&lt;BR /&gt;
"Speechiness:", Tracksall$SPEECHINESS))))+&lt;BR /&gt;
geom_col()+&lt;BR /&gt;
scale_fill_manual(values=c(salmon, teal, orange, limegreen, tangerine,skyblue,junglegreen, mustard,sapphire,goldenrod))+&lt;BR /&gt;
theme_minimal()+&lt;BR /&gt;
theme(axis.title.x=element_blank(),&lt;BR /&gt;
        axis.text.x=element_blank(),&lt;BR /&gt;
        axis.ticks.x=element_blank(),&lt;BR /&gt;
        axis.ticks.y=element_blank(),&lt;BR /&gt;
        panel.grid.major = element_blank(),&lt;BR /&gt;
        legend.position="none")+&lt;BR /&gt;
ylab("Speechiness Difference")+&lt;BR /&gt;
  facet_wrap(~ Tracksall$TRACKLISTNAME)+&lt;BR /&gt;
ggtitle("Speechiness Difference")&lt;BR /&gt;
ggplotly(viz1, tooltip=c("text"))&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--1536927638"&gt;&lt;STRONG&gt;How would I explain this to a Business User?&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
This interactive chart allows us to compare the "speechiness" of tracks across different playlists. Speechiness measures the presence of spoken words in a song. Songs with exclusive music and no words have low speechiness. Podcast and audiobook tracks would be highly speechy. The height of the bars represents the speechiness value - higher bars mean more spoken content. The color shading groups tracks by the playlist they belong to.&lt;BR /&gt;
&lt;H3 id="toc-hId--1733441143"&gt;&lt;STRONG&gt;How can I understand the script from a technical perspective?&lt;/STRONG&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b21.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Lines 1 -3: Load the necessary libraries-plotly for creating interactive plots, dplyr for data manipulation, and ggplot2 for creating static plots.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Lines 4-13: Defines the series of colors using their hexadecimal codes. These colors will be used in the plot.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 14-17: Creates a ggplot object viz1 with the following features: The aes function is used to map the reordered 'Track Name' to the x-axis, 'Speechiness' to the y-axis, 'Playlist' to the fill aesthetic of the plot, and a combination of 'Track', 'Artist', and 'Speechiness' to the hover text.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 18: geom_col &amp;nbsp;used to create a bar plot&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 19: scale_fill_manual is used to manually assign the predefined colors to the different 'Playlist' categories.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 20: theme_minimal is used to apply a minimalistic theme to the plot.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 21-26: theme is used to remove the x-axis title, x-axis text, x and y-axis ticks, major grid lines, and the legend.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 27: ylab is used to label the y-axis as 'Speechiness Difference'.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 28: facet_wrap is used to create a separate plot for each 'Playlist'.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 29: ggtitle is used to set the title of the plot as 'Speechiness Difference'.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Line 30: Finally, ggplotly is used to convert the ggplot object into a plotly object, making the plot interactive. The tooltip argument is set to 'text', which means that the hover text will display the 'Track', 'Artist', and 'Speechiness'.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;STRONG&gt;And the SAC Implementation?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Follow the same steps for SAC implementation as before, and you should be able to view both the SAC visualizations based on R-script.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b22.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId--1636551641"&gt;How does this work with SAP Datasphere?&lt;/H2&gt;&lt;BR /&gt;
In &lt;A href="https://blogs.sap.com/2023/03/31/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part-3/?" target="_blank" rel="noopener noreferrer"&gt;Blog 3&lt;/A&gt; of the Spotify Series, we detailed how to construct analytical models akin to those in SAP HANA Cloud.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b23.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
When using SAP HANA Cloud, we connected directly to the database with a user who had access to the deployed containers. However, with SAP Datasphere, analytic models built within a space can be directly exposed when constructing trend charts in SAC. There is no need to separately establish a database connection. Instead, the data models are available for visualization as soon as they are deployed to the space. This enables simpler and faster data access when leveraging SAP Datasphere as the backend data source within SAC. The tight integration facilitates the rapid connection of visualizations to data models that have been developed and exposed through spaces.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b24.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
You can build stories in SAC connected to SAP Datasphere in the same way as described in previous examples linking to SAP HANA Cloud. The process of building visualizations, filters, stories, and explanatory text follows the same methodology whether your data models reside in HANA Cloud or Datasphere.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/b25.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="toc-hId--1833065146"&gt;&lt;STRONG&gt;OK, how to expose the models to Microsoft PowerBI?&lt;/STRONG&gt;&lt;/H2&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId-1971985638"&gt;Prerequisites:&lt;/H3&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;You have access to the Microsoft Power BI Desktop App.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;You have two options for connecting to data for visualization: HDI containers from SAP HANA Cloud or analytic models created in SAP Datasphere using open SQL schema access. If planning to connect from SAP Datasphere, refer to the "Database User Creation [Open SQL Schema]" section from the &lt;A href="https://blogs.sap.com/2023/03/31/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-datasphere-part-3/?" target="_blank" rel="noopener noreferrer"&gt;third blog post&lt;/A&gt;.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
For this example, I will connect SAP HANA Cloud to Power BI. Once you are in the Power BI Desktop App, click on the "Home" tab in the ribbon, then click on "Get Data".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture26-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
You can choose either "Import" or "DirectQuery" to connect to SAP HANA Cloud. Import means you'll be pulling the data into Power BI, while DirectQuery means you'll be working directly with the data on the server.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture27-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Enter your SAP HANA Cloud credentials when prompted in the Power BI connection window. After a successful connection, the Power BI Navigator will appear allowing you to select the specific tables, views, or calculation views to load. For this analysis, we will be working with the CV_TOP_ALL calculation view that was previously created in SAP Business Application Studio.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture28-6.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
It may take a few seconds for the CV_TOP_ALL calculation view to load in Power BI. Once loaded, you will see CV_TOP_ALL listed on the right side of the screen along with options to build visualizations. To demonstrate some useful features in Power BI, I will create a simple table visualization[2] based on the data from CV_TOP_ALL.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture29-4.png" height="502" width="417" /&gt;&lt;/P&gt;&lt;BR /&gt;
Once you select the table option, a blank table visualization will load. You can then select the specific columns from the CV_TOP_ALL calculation view that you want to display in the table. For this example, I chose to include the Album name, Track name, and Image columns. The Image column contains public URLs pointing to album artwork associated with each track.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture30-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Select the Image column[1] from CV_TOP_ALL, and change the data category[2] to "Image URL".&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture31-5.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Once you add those columns to the table, Power BI works its magic to transform the image URLs into actual album cover art on the fly. How awesome is that! With its slick auto-image rendering wizardry, Power BI saves us muggles from having to manually extract and embed images in visualizations. We just provide the URLs, and presto - album covers appear in the table as if by divination! &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture32-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
If you have been following this &lt;A href="https://blogs.sap.com/2023/02/27/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured-data-with-sap-hana-cloud-sap-data-warehouse-cloud-part-1/" target="_blank" rel="noopener noreferrer"&gt;Spotify blog series,&lt;/A&gt; you may recall that we used the HANA_ML library to extract image URLs from Spotify and ingest them to SAP HANA Cloud. We loaded the JSON metadata containing these image links into the SAP HANA Cloud Document Store. SQL views were then created to select the image URLs from the JSON artifacts stored in the document store. These SQL views were incorporated into the CV_TOP_ALL calculation view, which combines datasets from various sources. This calculation view is later accessed in both SAP Analytics Cloud for visualization and Power BI to demonstrate auto-image rendering as we have explored.&lt;BR /&gt;
&lt;BR /&gt;
In this Power BI report, I utilized the same CV_TOP_ALL calculation view that was created in SAP Analytics Cloud and generated two visualizations:&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;A table showing Album name, Track name, and Image columns. This allows viewing album art images automatically rendered from the image URL data in CV_TOP_ALL.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;A ribbon chart comparing the Danceability, Energy, and Liveness metrics for each track. This is similar to the analysis done in SAP Analytics Cloud. In this case, the Track name is the lone attribute being compared across those three metrics in the ribbon chart.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture33-4.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Power BI's integration with custom visual apps allows for a more flexible analysis of the CV_TOP_ALL calculation view, including visualizing based on images. You can access these additional visualizations in Power BI by selecting "Get more visuals" from the Visualizations pane.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture34-3.png" height="458" width="363" /&gt;&lt;/P&gt;&lt;BR /&gt;
Selecting "Get more visuals" will open the Power BI visuals gallery. In the gallery, search for the "image grid" custom visual. When you find the image grid visual, add it to your report by clicking the "Add" button.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture35-3.png" height="224" width="459" /&gt;&lt;/P&gt;&lt;BR /&gt;
Once added, you will see the app as part of your Power BI desktop.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture36-3.png" height="430" width="490" /&gt;&lt;/P&gt;&lt;BR /&gt;
When you select the image grid visual and choose the Image column from the CV_TOP_ALL calculation view, Power BI will automatically populate an image grid displaying all 500 album cover images that were extracted from the Spotify data. By default, the images are rendered in the grid sorted by the predefined order in the view. A key capability offered by the image grid is the ability to visualize a collection of images and rapidly sort them by different attributes to spot visual patterns or trends. For example, with a few clicks, you can rearrange the grid sorted alphabetically by artist, genre, release date, etc. Looking at the images sorted in different ways allows you to analyze the data in new visual perspectives that may yield additional insights. Pretty cool, eh?&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture37-scaled.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
Additional filters can be applied to the image grid visual to narrow down the list of tracks being analyzed. For example, the grid can be filtered to only show images from the "Top Indian tracks" playlist that was ingested from Spotify. Furthermore, the Speechiness audio feature metric can be added as a filtering criteria to only display tracks above or below a certain speechiness threshold. Applying these types of filters allows slicing the 500-track image grid down to a subset of images matching the given criteria. This enables more focused visual analysis. For instance, in this case, filtering to Indian tracks with high speechiness shows the actual album images associated with that segmented list of verbal tracks.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/Picture38-scaled.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
I hope this Spotify series has sparked interest and ideas for adopting SAP HANA Cloud and integrating it into your own analytics use cases. My sincere thanks to the colleagues and community members who reached out to share the visualization blog—your feedback motivated me to complete it before the end of the year &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;BR /&gt;
&lt;BR /&gt;
Looking ahead to 2024, we plan to continue creating enablement blogs focusing on SAP HANA Cloud- either expanding on this Spotify series or developing a new one focusing on both multi-model analysis extending it to the new SAP HANA Cloud Vector Engine as well as the SAP's Generative AI Hub platform. There are so many emerging capabilities to explore!&lt;BR /&gt;
&lt;BR /&gt;
Please stay tuned for more to come, and happy learning on your own data analytics discovery journeys in the New Year! Please feel free to reach out with any additional questions or feedback on the topics covered in this Spotify series. Looking forward to hearing from you! Happy Learning!!&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H3 id="toc-hId-1775472133"&gt;References&lt;/H3&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://developer.spotify.com/documentation/web-api/libraries/" target="_blank" rel="noopener nofollow noreferrer"&gt;Spotify Libraries &amp;amp; Documents&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://github.com/spotipy-dev/spotipy/tree/master/examples" target="_blank" rel="noopener nofollow noreferrer"&gt;Spoti&lt;STRONG&gt;py&amp;nbsp;&lt;/STRONG&gt;Public Git Repositories&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://github.com/JMPerez/spotify-web-api-js" target="_blank" rel="noopener nofollow noreferrer"&gt;Spotipy JS Wrapper built by&amp;nbsp; JM Perez&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://msmith7161.github.io/what-is-speechiness/" target="_blank" rel="noopener nofollow noreferrer"&gt;Spotipy R package contributions by Mia&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://bindichen.medium.com/exploding-a-list-like-column-with-pandas-explode-method-3ffd41f9f7e2" target="_blank" rel="noopener nofollow noreferrer"&gt;Pandas Explode Function&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://soulsinporto.medium.com/using-the-spotify-api-for-data-driven-analysis-of-my-playlists-part-1-2-a4598ca7b96d" target="_blank" rel="noopener nofollow noreferrer"&gt;Pandas Data-Driven Analysis&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Tons of Medium blogs&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/harnessing-multi-model-capabilities-with-spotify-processing-semi-structured/ba-p/13572494"/>
    <published>2023-12-29T00:53:49+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/consuming-capm-application-s-odata-service-into-sap-fiori-application-in/ba-p/13667392</id>
    <title>Consuming CAPM Application's OData service into SAP Fiori Application in Business Application Studio</title>
    <updated>2024-04-16T12:50:31.978000+02:00</updated>
    <author>
      <name>Chetan_Bhatt</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1429690</uri>
    </author>
    <content>&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;OBJECTIVE-:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Consuming OData Service of CAPM Application into SAP Fiori Application in Business Application Studio.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;CAPM (Cloud Application Programming Model)-:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;It is an open-source framework that uses tools, libraries, and languages to create applications that can be used across multiple SAP products. CAPM is a multi-target application that runs at different times, with the persistence layer running in the HANA DB run time, the server layer running in the Node.js run time, and the UI/UX layer running in the browser run time.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;CAPM is one of the approaches to developing cloud applications using the BTP platform. CAPM offers a more structured and seamless framework for data modelling and enhancing integration with services.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Advantage of CAPM over other approaches-:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;It enables full-stack development in the same environment. (BAS), eliminating the need to switch between different environments for the backend and frontend development.&lt;/LI&gt;&lt;LI&gt;It offers flexibility in language selection, allowing developers to work with multiple languages according to their needs. BAS provides easy connectivity to required extensions for this purpose.&lt;/LI&gt;&lt;LI&gt;Seamless integration with git and other applications via APIs facilitating extension or development of the application.&lt;/LI&gt;&lt;LI&gt;Automatically handling dependencies to a certain extent, reducing frustration, and improving development speed. For example, handling the OData after exposing all entities and making it easier to consume in the UI.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;Prerequisites-:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Create a CAPM project.&lt;/LI&gt;&lt;LI&gt;Log in to Cloud Foundry Credentials.&lt;/LI&gt;&lt;LI&gt;Ensure the HANA Database is created and running (I Used it for storage and data creation).&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_0-1712859475702.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95284iF96BE8EFB182149E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_0-1712859475702.png" alt="Chetan_Bhatt_0-1712859475702.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_1-1712859475728.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95285iC96312CDDC8F56E6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_1-1712859475728.png" alt="Chetan_Bhatt_1-1712859475728.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Set up a Dev Space.&lt;/LI&gt;&lt;LI&gt;Create a SAP Build Work Zone instance to act as a Fiori Launchpad for the CAPM Application&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;You Have to create a new Destination in BTP (Connectivity -&amp;gt; Destination)-:&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_2-1712859475732.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95283i2F37A3A4212C375A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_2-1712859475732.png" alt="Chetan_Bhatt_2-1712859475732.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This destination will be used for passing system information when creating a Fiori Application.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;For the URL, DEPLOY YOUR APPLICATION IN CLOUD FOUNDRY (Cloud Foundry -&amp;gt;Spaces -&amp;gt;Dev (Space Name)-&amp;gt;Your Service (here it is CAPMChetan-srv) and copy Application Routes).&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This URL will be shown only when you deploy your CAPM Application in Cloud Foundry-&amp;gt; A new blog will be there to deploy the CAPM Application.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_3-1712859475740.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95288i831E1DE5FA2B9750/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_3-1712859475740.png" alt="Chetan_Bhatt_3-1712859475740.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;For Authorization, use the same authorization as created in the package.json -&amp;gt; a new blog will create a security configuration.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Now that the destination for the service is configured, proceed to create a FIORI APP: -&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Open SAP BAS (Business Application Studio).&lt;/LI&gt;&lt;LI&gt;Open DEV Space where you want to create a Fiori Application.&lt;/LI&gt;&lt;LI&gt;Go to File -&amp;gt; New Project From template.&lt;/LI&gt;&lt;LI&gt;Choose a project from the Template (SAP Fiori Application).&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_4-1712859475749.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95287i3F3554B2250D61A3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_4-1712859475749.png" alt="Chetan_Bhatt_4-1712859475749.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Choose any Template of your choice.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_5-1712859475756.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95286iD67EBDD9E6AB118C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_5-1712859475756.png" alt="Chetan_Bhatt_5-1712859475756.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;In Data Source choose to connect to a system.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_6-1712859475760.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95290iDCCA5D3A65D7000B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_6-1712859475760.png" alt="Chetan_Bhatt_6-1712859475760.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_7-1712859475765.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95289i29335856F2EFABAA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_7-1712859475765.png" alt="Chetan_Bhatt_7-1712859475765.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Specify the Destination created earlier.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_8-1712859475769.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95291i0B4CF5E35759FC40/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_8-1712859475769.png" alt="Chetan_Bhatt_8-1712859475769.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;In the service path, specify the service path of the OData service that can be obtained by running the command “cds watch –profile hybrid” in your CAPM Project.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_9-1712859475773.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95292i7F0BC76D1160938D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_9-1712859475773.png" alt="Chetan_Bhatt_9-1712859475773.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Click on next.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_10-1712859475781.jpeg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95293i7930C75401EC6C12/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_10-1712859475781.jpeg" alt="Chetan_Bhatt_10-1712859475781.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Select any entity from the given list of entities &amp;nbsp;you created in your project.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_11-1712859475788.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95294i28FD073ED8BABEB0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_11-1712859475788.png" alt="Chetan_Bhatt_11-1712859475788.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Customize the project attributes.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_12-1712859475796.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95295i56DC0BF8208D9582/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_12-1712859475796.png" alt="Chetan_Bhatt_12-1712859475796.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Choose the target as Cloud Foundry and select the Destination name among the list of destination names (You can go with either Local CAPM Project API and the name of your destination too).&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_13-1712859475804.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95297i448D5B4C126A031A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_13-1712859475804.png" alt="Chetan_Bhatt_13-1712859475804.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Now, your FIORI project is created and is ready to use.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_14-1712859475814.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95296i4C2BAADDC20B1DDD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_14-1712859475814.png" alt="Chetan_Bhatt_14-1712859475814.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;Go to run configuration and start the project as usual.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_15-1712859475821.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95298i8507FAEBE3A69EB2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_15-1712859475821.png" alt="Chetan_Bhatt_15-1712859475821.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;UL class="lia-align-justify" style="text-align : justify;"&gt;&lt;LI&gt;You can now run this Fiori Application which is the result of an Application created from CAPM.&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Chetan_Bhatt_16-1712859475830.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/95299iEBFF2F273E03EB7A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Chetan_Bhatt_16-1712859475830.png" alt="Chetan_Bhatt_16-1712859475830.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/consuming-capm-application-s-odata-service-into-sap-fiori-application-in/ba-p/13667392"/>
    <published>2024-04-16T12:50:31.978000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/validation-for-different-identity-cards-via-absl-code-in-sap-c4c/ba-p/13674119</id>
    <title>Validation for different Identity Cards via ABSL code in SAP C4C</title>
    <updated>2024-04-18T08:27:04.382000+02:00</updated>
    <author>
      <name>tkbisoyi9118</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/162380</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Validation for different Identity Cards via ABSL code in SAP C4C&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In day–to-day life, the need of unique identification cards are common. So verfifications on identity cards in different sectors are also a basic requirement. Suppose we are working for a client from India and the project is about Sales cloud. In this case, the client wants to maintain every customer’s data like Name, Contact, Address, PAN number, Adhaar number, Passport details etc. Out of those fields PAN number, Adhaar number &amp;amp; Passport number are unique IDs provided to each person in India. So we need to put some validations against them, so that wrong values should not be stored.&lt;/P&gt;&lt;P&gt;We have an option to put the validations on these Identity card numbers is via ABSL validation logic through cloud application studio. Here the steps mentioned below to validate different identity cards.&lt;/P&gt;&lt;P&gt;Identity cards mostly required in customer/Employee work centers. So, we can add the below logics in Event- Validation on Save and Event – After Modify of Customer/Employee BO in SDK.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Case1 – PAN Card number should be alphanumeric and should maintain exact pattern. Also PAN card number should have only 10 characters length.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To validate the length of any field we have the method “.length()”Which we can use for this requirement.&lt;/P&gt;&lt;P&gt;For PAN Card number the format in India as&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The PAN Card number should be only 10 characters long.&lt;/LI&gt;&lt;LI&gt;First five characters should be alphabeting ranges from [A-Z]&lt;/LI&gt;&lt;LI&gt;From 6th to 9th places should be numeric values ranges from [0-9]&lt;/LI&gt;&lt;LI&gt;Last digit should be alphabetic values within [A-Z]&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Using ABSL we have some logic using substring to implement the validation for any mismatch of the above-mentioned format. Added the code snippet for your reference.&lt;/P&gt;&lt;P&gt;Here we will use FindRegex() : This function &lt;SPAN&gt;Searches from left to right and returns the position of a regular expression pattern in a string. If it doesn’t find same pattern then it &lt;/SPAN&gt;returns the value “-1” and raises a message as we define.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;First five characters should be alphabeting ranges from [A-Z].&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_0-1713528643323.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98781i2BC49C5D7E096630/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_0-1713528643323.png" alt="tkbisoyi9118_0-1713528643323.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;From 6th to 9th places should be numeric values ranges from [0-9]&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_1-1713528643329.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98780i5A0B7FBFB58CD180/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_1-1713528643329.png" alt="tkbisoyi9118_1-1713528643329.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Last digit should be alphabetic values within [A-Z]&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_2-1713528643334.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98782iEBDF5C23F15258F5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_2-1713528643334.png" alt="tkbisoyi9118_2-1713528643334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The PAN Card number should be only 10 characters long.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_3-1713528643336.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98783iC3F9D53112B88171/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_3-1713528643336.png" alt="tkbisoyi9118_3-1713528643336.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Result: - After implementing the above ABSL code, when user tried to add wrong values of PAN Card or incorrect length, the error displayed and not allowed to SAVE the data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_4-1713528643339.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98784i18CE92864638DD6C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_4-1713528643339.png" alt="tkbisoyi9118_4-1713528643339.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_5-1713528643344.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98785i875F96029DCB663C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_5-1713528643344.png" alt="tkbisoyi9118_5-1713528643344.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_6-1713528643349.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98788i721E1DA3B2D2CA0B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_6-1713528643349.png" alt="tkbisoyi9118_6-1713528643349.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Case 2 – Adhaar Card number should be 12 characters length &amp;amp; all digits should be numeric values. &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To validate the length of any field we have the method “.length()”Which we can use as of the requirement.&lt;/P&gt;&lt;P&gt;For Adhaar card all the digits should be numeric and length should be 12 characters only. The below ABSL code can restrict any mismatch to the Adhaar card format.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_7-1713528643351.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98786iDB8A4BF4EB381ADB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_7-1713528643351.png" alt="tkbisoyi9118_7-1713528643351.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Result: - After implementing the above ABSL code, when user tried to add wrong values of Adhaar Card or incorrect length, the error displayed and not allowed to SAVE the data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_8-1713528643357.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98787iA667C465BEC3B62F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_8-1713528643357.png" alt="tkbisoyi9118_8-1713528643357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_9-1713528643362.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98789i852777571AB81B2E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_9-1713528643362.png" alt="tkbisoyi9118_9-1713528643362.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_10-1713528643366.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98790iD8C707077F307965/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_10-1713528643366.png" alt="tkbisoyi9118_10-1713528643366.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Case3 – Indian Passport number should be alphanumeric and should maintain exact pattern. Also Passport card number should have only 8 characters length.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To validate the length of any field we have the method “.length()”Which we can use as of the requirement.&lt;/P&gt;&lt;P&gt;For Passport number the format in India as&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The Passport number should be only 8 characters long.&lt;/LI&gt;&lt;LI&gt;First one character should be alphabeting ranges from [A-Z].&lt;/LI&gt;&lt;LI&gt;For 2nd position, it should be numeric value within range 1 to 9.&lt;/LI&gt;&lt;LI&gt;For 3rd position, it should be numeric value within range 0 to 9.&lt;/LI&gt;&lt;LI&gt;From position 4th to 7th position, digits should be numeric value within range 0 to 9.&lt;/LI&gt;&lt;LI&gt;For the last one digit, it should be numeric value within range 1-9.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Using ABSL we have some logic using substring to implement the validation for any mismatch of the above-mentioned format. Added the code snippet for your reference.&lt;/P&gt;&lt;P&gt;Here we will use FindRegex() : This function &lt;SPAN&gt;Searches from left to right and returns the position of a regular expression pattern in a string. If it doesn’t find same pattern then it &lt;/SPAN&gt;returns the value “-1” and raises a message as we define.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;First one character should be alphabeting ranges from [A-Z].&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_11-1713528643372.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98791i1F8F4A87DFD9790E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_11-1713528643372.png" alt="tkbisoyi9118_11-1713528643372.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;For 2nd position, it should be numeric value within range 1 to 9.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_12-1713528643376.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98794i7FD15A846EC18C3C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_12-1713528643376.png" alt="tkbisoyi9118_12-1713528643376.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;For3rd position, it should be numeric value within range 0 to 9.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_13-1713528643380.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98792iC1D70C1171FED582/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_13-1713528643380.png" alt="tkbisoyi9118_13-1713528643380.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;From position 4th to 7th position, digits should be numeric value within range 0 to 9.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_14-1713528643384.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98793i2903687EE940A4BD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_14-1713528643384.png" alt="tkbisoyi9118_14-1713528643384.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;For the last one digit, it should be numeric value within range 1-9.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_15-1713528643388.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98795iD5A1320DB7FBCFA6/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_15-1713528643388.png" alt="tkbisoyi9118_15-1713528643388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;The Passport number should be only 8 characters long.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_16-1713528643392.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98797i76763F678260AA8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_16-1713528643392.png" alt="tkbisoyi9118_16-1713528643392.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Result: - After implementing the above ABSL code, when user tried to add wrong values of Adhaar Card or incorrect length, the error displayed and not allowed to SAVE the data.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_17-1713528643397.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98796i3FD77F6543724906/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_17-1713528643397.png" alt="tkbisoyi9118_17-1713528643397.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_18-1713528643402.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98798iCAC3EFB2B95EF0C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_18-1713528643402.png" alt="tkbisoyi9118_18-1713528643402.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tkbisoyi9118_19-1713528643406.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/98799i9D8CAD495D1ADE11/image-size/medium?v=v2&amp;amp;px=400" role="button" title="tkbisoyi9118_19-1713528643406.png" alt="tkbisoyi9118_19-1713528643406.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion: -&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This solution can help customers to restrict unauthorized entry of identity card numbers.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/validation-for-different-identity-cards-via-absl-code-in-sap-c4c/ba-p/13674119"/>
    <published>2024-04-18T08:27:04.382000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/enabling-sdk-fields-in-search-queries-on-owl-screen-in-c4c/ba-p/13709442</id>
    <title>Enabling SDK fields in Search Queries on OWL screen in C4C</title>
    <updated>2024-05-23T08:49:37.166000+02:00</updated>
    <author>
      <name>Swapna_Kushana</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/169267</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;&lt;P&gt;Many a times we come across a scenario where customer asks to filter out the data based on certain fields which are configured as Extension fields (SDK fields) with preconfigured queries on OWL screen. This blog will demonstrate how we can achieve this.&lt;/P&gt;&lt;P&gt;There can be 2 such scenarios:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Enabling a Custom Field in Advanced Search of Standard OWL screen&lt;/LI&gt;&lt;LI&gt;Enabling a Custom Field in Advanced Search of Custom BO’s OWL screen.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Let’s deep down into the process below:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Case -1: Enabling a Custom Field in Advanced Search of Standard OWL screen.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s say we have a custom field - “Type” which indicates whether the ticket is B2B or B2C and now we have to add it in advanced Filter of Service Request’s OWL screen and save the Search Query so that the User will be able to filter out only B2B tickets or B2C tickets based on the requirement.&lt;/P&gt;&lt;P&gt;Follow the below steps to achieve the same.&lt;/P&gt;&lt;P&gt;Step 1: As Service Request is a standard BO, Create an Extension BO of it in SDK and Add your extension field ZCOD_Type (Type) in the Ticket.xbo as shown below.&lt;/P&gt;&lt;P&gt;TypeCode is the data type which is a codelist having 2 values – B2B and B2C based on which we are going to query the Ticket.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture1.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114092i8D12A27736B79F2F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture1.png" alt="Picture1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 2: Enhance the Screen of your Extension BO to add our field- “Type” on TI screen. You will be able to see the field added on UI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture_edit2.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/115392iC504D4C27053840B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture_edit2.png" alt="Picture_edit2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 3: Now, you need to Add your Field to Advanced Search in Tickets OWL Screen.&lt;/P&gt;&lt;P&gt;To do that, follow the below steps.&lt;/P&gt;&lt;P&gt;i. Right click on Ticket.xbo you have created, and Select Enhance Enterprise Search as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture3.png" style="width: 802px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114094i730F034DEF99F30F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture3.png" alt="Picture3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;ii. A dialog box will be displayed as below. Select the field that you want to add in advanced search and click OK.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture4.png" style="width: 637px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114095iFF40EB27333267F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture4.png" alt="Picture4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;iii. On Click of OK, you will be directed to the UI Screen but as a pre-requisite please make sure you login into UI System with the same SDK credentials that you used to login to SDK.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture5.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114096iED5EA3A34840BA31/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture5.png" alt="Picture5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;iv. Select the Row and click on Add Field. &amp;nbsp;Check box - “Field available” will be Automatically set to true on click of Add Field.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture_edit3.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/115393i7542592C0BF5E5D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture_edit3.png" alt="Picture_edit3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;v. Go to SDK, Select the Ticket.xbo and enhance Screen as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture7.png" style="width: 824px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114098iA1933AAFABB71EBF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture7.png" alt="Picture7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;vi. Select the screen in which you want to add the field on UI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture8.png" style="width: 628px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114100i5CF8EE785AAC5D83/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture8.png" alt="Picture8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can see Screen got added in the project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture9.png" style="width: 453px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114099i17A76B7026943A46/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture9.png" alt="Picture9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;vii. Open it and select “Advanced filter” inside Extensibility Explorer and select “Add Extension field to section group” as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture10.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114102iF24296BB656DB4E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture10.png" alt="Picture10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;viii. Select the field and click “Apply”.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture11.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114101iF0BA3D79FA958D8D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture11.png" alt="Picture11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ix.&amp;nbsp;Save and activate the screen.&lt;/P&gt;&lt;P&gt;Now, Refresh the Front-end UI, you will be able to see the field added in Advanced Filter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture12.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114103i9CE1CED1D0CD4AFD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture12.png" alt="Picture12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 4: Select the value and click on Save as Query.&lt;/P&gt;&lt;P&gt;Note: You can do it in Adaptation mode to reflect the Change in Everyone’s system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture13.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114104iB2F21210C8F925D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture13.png" alt="Picture13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Dialog will be displayed, give the name for the query, and save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture14.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114105iC183A030B455E2C7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture14.png" alt="Picture14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You will be able to see it in the Queries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture15.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114106iBAA4E3F6AFF9327B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture15.png" alt="Picture15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can Repeat Step 4 to save as many Queries as you need for all the required values.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Case 2: Enabling a Custom Field in Advanced Search in Custom OWL screen.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;If you want to achieve the similar functionality as above where you want to enable any custom field in the custom BO in advanced filter of OWL screen, below is the Process.&lt;/P&gt;&lt;P&gt;Create a Custom BO and create the required field, create screens for your custom BO and enable the field in advanced search of OWL.&lt;/P&gt;&lt;P&gt;Let us now see the steps in detail achieve the requirement.&lt;/P&gt;&lt;P&gt;Let’s say, we have a custom BO named as Vehicles.bo in which you want to filter out vehicles based on 2 wheelers or 4 wheelers.&lt;/P&gt;&lt;P&gt;Step1: Advanced filter needs to be added on our custom OWL Screen. To do this, In SDK, go to “Designer” and click on “Advanced” option at top right corner as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture16.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114108i46439AC6602304D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture16.png" alt="Picture16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;A pop-up below will be shown, click on Yes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture17.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114109iC7D9DF288E11B66E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture17.png" alt="Picture17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step2: Now go to “Controller” -&amp;gt; Queries.&lt;/P&gt;&lt;P&gt;Open Query -&amp;gt;Query by Elements, select the fields and move them to the Selected Query Parameters section as shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture18.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114110iB0826287097F9995/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture18.png" alt="Picture18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step3: Now go to “Data model” and&amp;nbsp;add data fields inside SearchParameter1 as required. &lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture19.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114111i00F144B2F1B4F528/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture19.png" alt="Picture19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 4: Go to “Controller” again and bind the elements in Selected Query Parameter section with the elements in Data Model by selecting the fields. Please refer below screenshot for the same.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture20.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114112i7BE1618B2FBB6EA9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture20.png" alt="Picture20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 5: Go to Designer, Drag and Drop the required fields from Data model into the designer as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture21.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114113iFFA9B788E8978CA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture21.png" alt="Picture21.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step 6: Save and Activate the Screen.&lt;/P&gt;&lt;P&gt;Refresh the Front-end UI and you can see advanced filter button added on the screen.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture22.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114114iA75C5E2187B26C11/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture22.png" alt="Picture22.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Step7: Click on Advanced Filter Option and give the Vehicle type selection and click on “Go”. You will be able to see filtered entries only.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture23.png" style="width: 936px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/114116i7668CEF4189E996E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture23.png" alt="Picture23.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thank You for visiting this, Blog.&lt;/P&gt;&lt;P&gt;Hope it helps you understand how to add your custom fields in the Advanced Filter on UI.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/enabling-sdk-fields-in-search-queries-on-owl-screen-in-c4c/ba-p/13709442"/>
    <published>2024-05-23T08:49:37.166000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/consumption-of-custom-forms-in-external-systems-from-sap-sales-cloud/ba-p/13742999</id>
    <title>Consumption of custom forms in external systems from SAP Sales Cloud</title>
    <updated>2024-06-29T18:28:55.701000+02:00</updated>
    <author>
      <name>GopalakrishnanS</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/42518</uri>
    </author>
    <content>&lt;P&gt;Have tried exposing your custom output forms created in SAP C4C Cloud application studio to the external systems. We all used the Standard Sales Quote output forms which can be exposed to the other systems easily via the ODATA APIs of SAP Cloud for Customer. The response for those API calls would be binary data (Base 64 encoded) and can be converted to readable format.&lt;/P&gt;&lt;P&gt;Let’s see how this custom output form had been created in the solution. The custom output form is created against the custom BO which had been associated with the Customer Quote Business object.&lt;/P&gt;&lt;P&gt;We followed the usual routine to create the custom forms as mentioned in many of the SAP SCN forums and custom action ABSL files to generate the values for the output form.&lt;/P&gt;&lt;P&gt;We have a requirement to expose the custom output form created in the solution to the external system.&amp;nbsp;&lt;SPAN&gt;The custom forms are generated anytime by clicking on the custom button embedded into the standard attachment tab.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;High level steps to complete this requirement.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Custom BO with required elements and association&lt;/LI&gt;&lt;LI&gt;Delete all the existing instances and generate the new PDF binary.&lt;/LI&gt;&lt;LI&gt;The new generation of PDF binary can be achieved via the POST method which return the binary pdf data directly in the response.&lt;/LI&gt;&lt;LI&gt;Retrieve the OutputRequestFormTemplateCode dynamically based on the solution prefix.&lt;/LI&gt;&lt;LI&gt;Invoke the GetPDF(BusinessObjectNode, FormTemplateCode, FormTemplateLanguageCode) method of OutputManagementUtilities and assign to the instance pdfBinary.&lt;/LI&gt;&lt;LI&gt;Create custom ODATA for the custom BO generated in step 1.&lt;/LI&gt;&lt;LI&gt;Exposing the API URL of the custom ODATA to the external system with the technical user id we can generate the POST method successfully.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;PFB the code snippet.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-csharp"&gt;&lt;code&gt;Custom BO: ZFormOutput  //BODL defintion
element  quoteID: BusinessTransactionDocumentID
element pdfBinary: BinaryObject
association toSlsQuote: CustomerQuote&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Actual Logic&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In After-Modify event we will delete all the existing output instance as per the quote ID. Then we will create the new PDF binary instance by calling custom action ABSL which is used to generate the output form.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-csharp"&gt;&lt;code&gt;foreach (var instance in this)
{
	//Delete existing instance(s) for quote id
	var query = ZFormOutput.QueryByElements;
	var selPara = query.CreateSelectionParams();
	selPara.Add(query.quoteId.content, "I", "EQ", instance.quoteId.content);
	var oldInstanceList = query.ExecuteFromDB(selPara);
	foreach (var oldInstance in oldInstanceList)
	{
		oldInstance.Delete();
	}

	//Create PDF binary for new instance
	var quoteInfo =&amp;lt;CustomBusinessObject&amp;gt;.Retrieve(instance.quoteId);
	quoteInfo.&amp;lt;customActionABSL&amp;gt;(); Used to generate the custom output form
	var ftCode : OutputRequestFormTemplateCode;
	var sn_type = quoteInfo.GetObjectNodeReference().ObjectTypeCode.content.Substring(1,8);
            ftCode.content = sn_type + "_XXXX1";

	instance.pdfBinary = OutputManagementUtilities.GetPDF(quoteInfo, ftCode, "E");
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;ODATA reference and testing in postman tool.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CustomODATA.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/128838i225F46AAE98147CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="CustomODATA.jpg" alt="CustomODATA.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CustomODATA_POSTMAN.jpg" style="width: 917px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/128839iECF64098675E12C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="CustomODATA_POSTMAN.jpg" alt="CustomODATA_POSTMAN.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;I hope this article will helps you to expose the custom forms from SAP Sales Cloud to external system.&lt;BR /&gt;Thanks,&lt;/P&gt;&lt;P&gt;GKS.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/consumption-of-custom-forms-in-external-systems-from-sap-sales-cloud/ba-p/13742999"/>
    <published>2024-06-29T18:28:55.701000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/archiving-optimize-for-pdi-part-2/ba-p/13759482</id>
    <title>Archiving - Optimize for PDI, Part 2</title>
    <updated>2024-08-17T09:00:00.044000+02:00</updated>
    <author>
      <name>HorstSchaude</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/6371</uri>
    </author>
    <content>&lt;P&gt;The Archiving process needs to retrieve all data, including PDI and Extension Fields, before sending them to the archive.&lt;BR /&gt;Therefore all PDI scripts are performed during this retrieve operation.&lt;/P&gt;&lt;P&gt;But when the archiving starts, i.e. the &lt;EM&gt;ArchivingStatusCode&lt;/EM&gt; is set to &lt;EM&gt;InProgress&lt;/EM&gt; and later to &lt;EM&gt;Archived&lt;/EM&gt;, the update shall only on this code value. This is done so any process agent which is listen to this, can start.&lt;/P&gt;&lt;P&gt;With the current release 2408 we suppress the execution of any PDI script during this status update.&lt;BR /&gt;This mechanism is the same as already applied on suppressing the execution of validations, both SAP and PDI.&lt;BR /&gt;According to our knowledge (and your complaints &lt;span class="lia-unicode-emoji" title=":winking_face:"&gt;😉&lt;/span&gt; ) this will speed up the process enormously.&lt;/P&gt;&lt;P&gt;Of course the &lt;EM&gt;OnDelete&lt;/EM&gt; script will always be executed when the instance is deleted, so you can react and cleanup any shadowing Custom Business Objects or data sources or ...&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/archiving-optimize-for-pdi-part-2/ba-p/13759482"/>
    <published>2024-08-17T09:00:00.044000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/extracting-data-from-csv-files-in-sap-cloud-application-studio/ba-p/13938525</id>
    <title>Extracting Data from CSV Files in SAP Cloud Application Studio</title>
    <updated>2024-11-15T04:32:00.035000+01:00</updated>
    <author>
      <name>abimanyu_g</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13517</uri>
    </author>
    <content>&lt;P&gt;Hello everyone!&lt;/P&gt;&lt;P&gt;This blog post will explain how to read/extract a value from a CSV file and upload it into a business object.&lt;/P&gt;&lt;H2 id="toc-hId-1074898588"&gt;&lt;STRONG&gt;Design:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this example, I have used the custom business object (standard business object will also work) with a node named&amp;nbsp;&lt;STRONG&gt;Item&lt;/STRONG&gt; and Attachment Folder&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;dependent object&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-vbnet"&gt;&lt;code&gt;node Items [0, n]
{
	[AlternativeKey] [Label("Item ID")] element ItemID : ID;
	[Label("Product ID")] element ProductID : ProductInternalID;
	[Label("Quantity")] element Quantity : Quantity;
	[Label("Price")] element Price : Amount;
	association ToProduct to material;
}
[DependentObject(AttachmentFolder)] node Attachment;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Screenshot of the CSV file prepared for my upload testing.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abimanyu_g_0-1731603699094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191052i101DE6E9D4D26087/image-size/large?v=v2&amp;amp;px=999" role="button" title="abimanyu_g_0-1731603699094.png" alt="abimanyu_g_0-1731603699094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I want to perform a data extraction from CSV when an attachment is uploaded and when the user clicks an upload button (custom button). So, a custom action was created with the below logic and bound to the upload button in the UI designer.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import ABSL;
import AP.PlatinumEngineering;

if (this.Attachment.IsSet())
{
  if (this.Attachment.Document.Count() != 0)
  {
    var get_first = this.Attachment.Document.GetFirst();
    if (get_first.IsSet())
    {
      var binary = get_first.FileContent.BinaryObject.content; //to get the binary content of csv file
      var to_str = binary.ToString(); //convert the binary content to String
      var xpes_tab: XPEStringTab;
      var all_rows = CSV.Parse(to_str, ",", xpes_tab); //use CSV reuse library to parse each row values from the String
      foreach(var row in all_rows.CSVStringTab)
      {
        var item = this.Items.Create(); //you can also perform CreateMass()
        item.ItemID = row.XPEString.GetByIndex(1); //index will start from 1
        item.ProductID = row.XPEString.GetByIndex(2);
        item.Price.content = row.XPEString.GetByIndex(3);
        item.Price.currencyCode = row.XPEString.GetByIndex(4);
        item.Quantity.content = row.XPEString.GetByIndex(5);
        item.Quantity.unitCode = row.XPEString.GetByIndex(6);
      }
    }
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the script, I have used the data type &lt;STRONG&gt;XPEStringTab&amp;nbsp;&lt;/STRONG&gt;and the &lt;STRONG&gt;CSV&amp;nbsp;&lt;/STRONG&gt;library with the &lt;STRONG&gt;Parse&lt;/STRONG&gt;&amp;nbsp;function. You can access this data type and library only if you import the &lt;STRONG&gt;PlatinumEngineering&lt;/STRONG&gt; namespace.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important:&lt;/STRONG&gt; If we raise any case to SAP support saying the library from &lt;STRONG&gt;PlatinumEngineering &lt;/STRONG&gt;is not working, they will not support. Because it is not released for general use like other reuse libraries (Binary, Context, Date, DateTime, Duration, String, etc.).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;KBA:&lt;/STRONG&gt;&amp;nbsp;&lt;A href="https://me.sap.com/notes/0002698916" target="_blank" rel="noopener noreferrer"&gt;2698916 - Facing Issues while Using SAP Platinum Engineering Libraries - SAP for Me&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Blogs:&lt;/STRONG&gt;&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-platinum-engineering-libraries/ba-p/13314830" target="_blank"&gt;SAP Platinum Engineering Libraries - SAP Community&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Let's get back to our design: We have a BO and action script ready already. Bind the action to a button in UI designer. Below is a screenshot for reference.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abimanyu_g_1-1731606217211.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191080i57DC413A587577D2/image-size/large?v=v2&amp;amp;px=999" role="button" title="abimanyu_g_1-1731606217211.png" alt="abimanyu_g_1-1731606217211.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-878385083"&gt;&lt;STRONG&gt;Testing:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Once all the above steps are completed, upload the CSV to the attachment folder and click on the custom action button. It will parse the csv data and add the values into the item node.&lt;/P&gt;&lt;H4 id="toc-hId-940037016"&gt;&lt;STRONG&gt;Attachment Folder:&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abimanyu_g_4-1731606518209.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191085iF99564B1CB23FD0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="abimanyu_g_4-1731606518209.png" alt="abimanyu_g_4-1731606518209.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-743523511"&gt;&lt;STRONG&gt;Item Node: &lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="abimanyu_g_5-1731606670337.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/191086i797EC4BFF83E3275/image-size/large?v=v2&amp;amp;px=999" role="button" title="abimanyu_g_5-1731606670337.png" alt="abimanyu_g_5-1731606670337.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Upload&lt;/STRONG&gt; button in the Item node advance list pane will call the custom action which will parse the data.&lt;/P&gt;&lt;H2 id="toc-hId-288844568"&gt;Notes:&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;You can read only the binary value of a CSV file and convert it into a string. Not Excel or other format files.&lt;/LI&gt;&lt;LI&gt;Without using the Platinum Engineering Library also, you can achieve this extract. But then building that parsing logic will be very hard and not understandable easily.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-92331063"&gt;Conclusion:&lt;/H2&gt;&lt;P&gt;In my experience, I have never faced any issues with some of the Platinum Engineering libraries like &lt;STRONG&gt;Mail, UserUtils, CurrencyConversion, &lt;/STRONG&gt;and &lt;STRONG&gt;TextAnalysis&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;It will be very helpful if SAP releases this CSV parsing library official like we have for JSON parsing.&lt;/P&gt;&lt;H2 id="toc-hId--104182442"&gt;My Other Blogs:&lt;/H2&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2022/04/27/enhancing-form-of-standard-business-objects/" target="_blank" rel="noopener noreferrer"&gt;Enhancing Form of Standard Business Objects&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2022/08/16/intelligent-sales-execution-in-sap-cloud-for-customer/" target="_blank" rel="noopener noreferrer"&gt;Intelligent Sales Execution in SAP Cloud for Customer&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://blogs.sap.com/2023/07/11/adding-local-image-to-workflow-e-mail-template/" target="_blank" rel="noopener noreferrer"&gt;Adding Local Image to C4C Workflow E-mail Template&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blogs-by-members/rules-and-validations-in-sap-c4c/ba-p/13522311" target="_blank"&gt;Rules and Validations in SAP C4C - SAP Community&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;Regards,&lt;/P&gt;&lt;P&gt;Abimanyu G&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-members/extracting-data-from-csv-files-in-sap-cloud-application-studio/ba-p/13938525"/>
    <published>2024-11-15T04:32:00.035000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/get-familiar-with-your-first-capm-project-using-cds-graphic-modeler/ba-p/14144965</id>
    <title>Get familiar with your first CAPM project using CDS graphic modeler</title>
    <updated>2025-07-05T06:17:39.274000+02:00</updated>
    <author>
      <name>Jyoti_ranjan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2113957</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1734177386"&gt;&lt;STRONG&gt;Getting Started with with your first CAMP project with CDS Graphical Modeler in SAP Business Application Studio.&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As SAP developers, we frequently navigate the complexities of code, annotations, and metadata while constructing data models with Core Data Services (CDS). Although the capabilities of CDS are remarkable, handling intricate data models solely through code can be quite daunting particularly in extensive enterprise applications. This is where the CDS Graphical Modeler proves invaluable a revolutionary tool within SAP Business Application Studio (BAS) that enhances visual clarity and efficiency in CDS development.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1666746600"&gt;What is CDS Graphical Modeler?&lt;/H3&gt;&lt;P&gt;Instead of writing&lt;SPAN&gt;&amp;nbsp; .cds&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;files manually, we can now model our entities, relationships, and services visually, making it easier to understand and communicate your data architecture.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Lets create a dev space and then dive into the CAPM with cds.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Go to&amp;nbsp;&lt;A title="BTP COCKPIT Login" href="https://account.us1.hana.ondemand.com/#/home/welcome" target="_blank" rel="noopener nofollow noreferrer"&gt;BTP COCKPIT Login&lt;/A&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;First we need to logon to SAP Business Application Studio, you will see a list of the existing dev spaces:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;you can use the existing devspace if it is preconfigured else create a devsapce.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_1-1749463155915.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271647i567D16E8AEC5D556/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_1-1749463155915.png" alt="Jyoti_ranjan_1-1749463155915.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;After you click on create devspace below screen will appear:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_0-1749461813292.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271641iF9AC34B00ABB56E2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_0-1749461813292.png" alt="Jyoti_ranjan_0-1749461813292.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Enter a dev space name, and select "Full Stack Cloud Application" category, then click "Create Dev Space" button to create the dev space.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_2-1749463528012.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271649i43A843DC6731152E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_2-1749463528012.png" alt="Jyoti_ranjan_2-1749463528012.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Wait until the newly created dev space is in "RUNNING" status:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-06-09 153555.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271650i39D484EF11B6ED84/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-06-09 153555.png" alt="Screenshot 2025-06-09 153555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;SPAN&gt;Now we can enter the dev space by clicking the dev space name:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_3-1749463706203.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271651i6A7AF4C8D1D27A9E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_3-1749463706203.png" alt="Jyoti_ranjan_3-1749463706203.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-435378620" id="toc-hId-1212067657"&gt;Create a CAP Project&lt;/H1&gt;&lt;P&gt;&lt;BR /&gt;&lt;SPAN&gt;Now let’s create a sample CAP project using the project wizard. Click “Start from template” from the welcome page and launch the project wizard.&lt;/SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_0-1749464257619.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271657i9961AE5EF738952A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_0-1749464257619.png" alt="Jyoti_ranjan_0-1749464257619.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Please select “CAP Project” from the template in the project wizard:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_1-1749464299166.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271658iA74BB5C5DCFF117B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_1-1749464299166.png" alt="Jyoti_ranjan_1-1749464299166.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click “Start” button and enter the CAP project details in the next page of the project wizard. Please check “Basic Sample Files” and ensure the project wizard to generate sample CDS files for you.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_2-1749464366247.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271659i2DA2B18BF4305AB5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_2-1749464366247.png" alt="Jyoti_ranjan_2-1749464366247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Click “Finish” button to close the wizard and the dev space will refresh again and this time the newly CAP project folder will be in the project tree:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Jyoti_ranjan_3-1749464418579.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/271661i2608DBC2116F226A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Jyoti_ranjan_3-1749464418579.png" alt="Jyoti_ranjan_3-1749464418579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can open db/data-model.cds in the project using the code editor:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/get-familiar-with-your-first-capm-project-using-cds-graphic-modeler/ba-p/14144965"/>
    <published>2025-07-05T06:17:39.274000+02:00</published>
  </entry>
</feed>
