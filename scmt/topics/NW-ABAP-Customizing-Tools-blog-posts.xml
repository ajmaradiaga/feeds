<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/NW-ABAP-Customizing-Tools-blog-posts.xml</id>
  <title>SAP Community - NW ABAP Customizing Tools</title>
  <updated>2025-10-13T23:11:05.622593+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/NW ABAP Customizing Tools/pd-p/cd2833f1-b985-44a6-afff-06e25ebd4ef4" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>NW ABAP Customizing Tools blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sizing-hana-enfoques/ba-p/13188743</id>
    <title>Sizing HANA. Enfoques.</title>
    <updated>2016-04-12T00:49:50+02:00</updated>
    <author>
      <name>former_member182844</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/182844</uri>
    </author>
    <content>&lt;DIV&gt;&lt;BR /&gt;
&lt;BR /&gt;
Última entrada de la serie &lt;A href="https://hostingsap.cloud/" target="_blank" rel="nofollow noopener noreferrer"&gt;Sizing HANA&lt;/A&gt;.&lt;BR /&gt;
En el camino recorrido hasta ahora, habíamos tratado una pequeña introducción al Sizing:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A class="jive-link-blog-small" href="https://blogs.sap.com/?p=140022" target="_blank" rel="noopener noreferrer"&gt;Sizing HANA. Introducción.&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Así como un breve resumen de las herramientas que disponemos para llevar a cabo dicha actividad:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A class="jive-link-blog-small" href="https://blogs.sap.com/?p=140231" target="_blank" rel="noopener noreferrer"&gt;Sizing HANA. Herramientas.&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
En el día de hoy, nos centraremos en los distintos enfoques de los que disponemos a la hora de efectuar nuestro sizing&lt;BR /&gt;
y como estos determinan el resultado final.&lt;BR /&gt;
&lt;BR /&gt;
Dicho esto, empecemos!&lt;BR /&gt;
&lt;H1 id="toc-hId-721402248"&gt;&lt;A href="https://conversions4hana.com/" target="_blank" rel="nofollow noopener noreferrer"&gt;Enfoques para una migración a HANA&lt;/A&gt;.&lt;/H1&gt;&lt;BR /&gt;
A la hora de comenzar un Sizing para SAP HANA contamos básicamente con 3 enfoques:&lt;BR /&gt;
&lt;UL style="list-style-type: disc"&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Sizing Inicial.&lt;BR /&gt;
&lt;/STRONG&gt;Partimos de cero, nuestro escenario inicial no cuenta con ninguna plataforma SAP de donde tengamos que migrar a &lt;A href="https://buceandoenlamemoria.com/" target="_blank" rel="nofollow noopener noreferrer"&gt;SAP HANA&lt;/A&gt;.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;&lt;A href="https://conversions4hana.com/" target="_blank" rel="nofollow noopener noreferrer"&gt;Migraciones a HANA&lt;/A&gt;.&lt;BR /&gt;
&lt;/STRONG&gt;A diferencia de lo anterior, se cuenta con una plataforma SAP que se desea migrar a SAP HANA.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;&lt;STRONG&gt;Escenario Sidecar.&lt;BR /&gt;
&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;Aunque se cuenta con una plataforma SAP y se desea implantar SAP HANA,&lt;BR /&gt;
esta servirá como apoyo sin llegar a sustituir. &lt;/SPAN&gt;&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;Para este escenario,&lt;BR /&gt;
es sizing dependerá del uso que le queramos dar a HANA,&lt;BR /&gt;
por lo que su análisis en esta entrada no tiene mucho sentido.&lt;/SPAN&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2016/04/pastedimage_1_927489.png" /&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId-524888743"&gt;Sizing Inicial.&lt;/H1&gt;&lt;BR /&gt;
En este supuesto deberemos basarnos en la herramienta Quick Sizer para SAP HANA.&lt;BR /&gt;
&lt;A class="jive-link-external-small" href="http://www.service.sap.com/hanaqs" target="_blank" rel="noopener noreferrer"&gt;www.service.sap.com/hanaqs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;Como ya comentamos en la entrada que antecede a esta,&lt;BR /&gt;
existen una serie de vías para recabar información:&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2016/04/pastedimage_1_927509.png" /&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;Independientemente del camino escogido inicialmente se deberá acabar en el Quick Sizer.&lt;BR /&gt;
Este nos informará de la cantidad de SAPS, memoria y disco con la que deberemos contar.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 11.0pt;font-family: 'Calibri',sans-serif"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2016/04/pastedimage_0_927510.png" /&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;H1 id="toc-hId-328375238"&gt;Migraciones a HANA.&lt;/H1&gt;&lt;BR /&gt;
Partimos de un escenario SAP, el cual se desea migrar a HANA.&lt;BR /&gt;
Para tal propósito existe un reporte que se ejecuta en el sistema a migrar,&lt;BR /&gt;
que calcula los recursos necesarios para dicha migración.&lt;BR /&gt;
&lt;BR /&gt;
&lt;A class="" href="http://scn.sap.com/1872170 - Suite on HANA sizing report" target="_blank" rel="noopener noreferrer"&gt;1872170 - Suite on HANA sizing report&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
Algunas consideraciones de este reporte:&lt;BR /&gt;
&lt;UL style="list-style-type: disc"&gt;&lt;BR /&gt;
 	&lt;LI&gt;Es independiente de la BBDD fuente.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Considera el de-clustering / de-pooling.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Considera las diferencias en los índices secundarios.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Funciona con SAP_BASIS 620 o posterior.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Compatible con todos los productos de SAP Business Suite (ERP, CRM, SRM, etc)&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Siempre se debe contar con la última versión del reporte.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2016/04/pastedimage_3_927512.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Con esto ponemos fin a la serie de &lt;A href="https://hostingsap.cloud/" target="_blank" rel="nofollow noopener noreferrer"&gt;Sizing HANA&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sizing-hana-enfoques/ba-p/13188743"/>
    <published>2016-04-12T00:49:50+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-customizing-documentation-generation-tool/ba-p/13339308</id>
    <title>SAP Customizing Documentation Generation Tool</title>
    <updated>2017-11-30T23:54:08+01:00</updated>
    <author>
      <name>dmitry_frydli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/37384</uri>
    </author>
    <content>In this Blog, I would like to share with you the easy way to generate a documentation file based on the customizing transport request.&lt;BR /&gt;
&lt;BR /&gt;
Quite often customers request documentation of the entire customization effort made during the implementation and especially the PoC projects. Not talking about how useful it is but nevertheless, the document is a part of the contract and must be delivered.&lt;BR /&gt;
&lt;BR /&gt;
Not sure how many times you faced it – this happened quite often to me and consumed a lot of my time.&lt;BR /&gt;
&lt;BR /&gt;
How did we solve this normally? I did the stupid monkey routine of taking hundreds of screenshots based on what I remember I customized, sometimes also checking customizing transport requests to remind myself what I’ve done.&lt;BR /&gt;
&lt;BR /&gt;
That's how I came to the idea that this should have already been automated. If transport requests have all the changes we made, there should be a way to download such a report.&amp;nbsp; But, really? I have not found anything, neither in Google nor in SCN/SolMan.&lt;BR /&gt;
&lt;BR /&gt;
So we decided to create this solution ourselves and share it with the community.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Some answers to the questions you might already have:&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-1161316930"&gt;&lt;STRONG&gt;What is this solution?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
It’s an SAP GUI report designed to be executed in SE38. It takes customizing transports (content of the tasks released) and Microsoft Word template as an input and produces another MS Word document containing all the customized entries with descriptions as an output.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-964803425"&gt;&lt;STRONG&gt;How can I install it?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;OL&gt;&lt;BR /&gt;
 	&lt;LI style="text-align: left"&gt;Download the code and the template from the &lt;A href="https://github.com/dmitryfrydliand/CUSTTOOL" target="_blank" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="text-align: left"&gt;Create a report ZREP_CUST_DOC on your ABAP NetWeaver system in transaction SE38&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="text-align: left"&gt;Copy the code into the report and activate it.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI style="text-align: left"&gt;MS Word template has its own instructions on how to change the logo and customer/project names.&lt;/LI&gt;&lt;BR /&gt;
&lt;/OL&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-768289920"&gt;&lt;STRONG&gt;How does it work? &lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
We reused the &lt;A href="https://app.assembla.com/spaces/saplink/wiki" target="_blank" rel="nofollow noopener noreferrer"&gt;SAPLink&lt;/A&gt; source code (many thanks to them) to get the contents of the customizing transports, then the solution selects the complete entry from the customizing table/view, reads all the fields/table/view descriptions from DDIC in the given language and downloads all the information in a readable way to the MS Word document as per template provided by the user.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2017/11/Pic1-2.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Is it safe to install?&amp;nbsp;&lt;/STRONG&gt;Yes, as you can audit the code before installation. Also, please only create the report in the development/customizing system and never in a production environment.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-571776415"&gt;&lt;STRONG&gt;What NetWeaver versions are supported&lt;/STRONG&gt;?&lt;/H4&gt;&lt;BR /&gt;
I hope everything from 7.0, maybe even below.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-375262910"&gt;&lt;STRONG&gt;Any functional prerequisites, would it work on ERP/SCM/PLM, etc. systems?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
This will work everywhere. And there are no functional prerequisites.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId-178749405"&gt;&lt;STRONG&gt;Are there any restrictions?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
Unfortunately, due to MS Word limitations, we only show the first 10 columns of the customized entry in the final document. However, in most cases it is sufficient.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--17764100"&gt;&lt;STRONG&gt;Can I use this freely? &lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
Yes, but we would highly appreciate the feedback and reviews.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--214277605"&gt;&lt;STRONG&gt;Do you plan to support the report?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
Why not, if you have any ideas what needs to be extended, or see any bugs, please let me know.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--410791110"&gt;&lt;STRONG&gt;What does the template look like?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
See the screenshot, but it is better to&amp;nbsp;&lt;A href="https://github.com/dmitryfrydliand/CUSTTOOL" target="_blank" rel="nofollow noopener noreferrer"&gt;download the template&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2017/11/Pic2-2.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;BR /&gt;
&lt;H4 id="toc-hId--607304615"&gt;&lt;STRONG&gt;What does the result look like?&lt;/STRONG&gt;&lt;/H4&gt;&lt;BR /&gt;
See the screenshots below or &lt;A href="https://github.com/dmitryfrydliand/CUSTTOOL" target="_blank" rel="nofollow noopener noreferrer"&gt;download the example file&lt;/A&gt;.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2017/11/Pic3-1.png" /&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2017/11/Pic4.png" /&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2017/11/Pic5-1.png" /&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Many thanks to everyone and hope to hear your comments.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-customizing-documentation-generation-tool/ba-p/13339308"/>
    <published>2017-11-30T23:54:08+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/translate-table-t166u/ba-p/13353010</id>
    <title>Translate Table T166U</title>
    <updated>2018-02-15T15:45:46+01:00</updated>
    <author>
      <name>martin_schlegel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/189446</uri>
    </author>
    <content>When you try to translate the “Form Titles for Purchasing Document Printouts”, which is Table T166U, “Translation” is grey in the customizing: &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P1.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
The entries can be translated using transaction SE63. In SE63, go to &lt;EM&gt;Translation -&amp;gt; ABAP Objects -&amp;gt; Short Text&lt;/EM&gt;:&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P2.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
On the popup screen select &lt;EM&gt;A6 Table Entries -&amp;gt; TADG Tables (Customizing - No SAP UPD, Only INS)&lt;/EM&gt;:&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P3.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
On the next screen, enter the source and target language for translation and search for “*T166U*: &lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P4.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
On the popup screen click continue:&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P5.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
The Object Name is filled. Click on “Edit”:&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P6.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
On the next screen, select the entries you want to translate:&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P7.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
On the next screen, you can enter the translations:&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/02/P8.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
In order to transport your translations, you can use transaction SLXT.</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/translate-table-t166u/ba-p/13353010"/>
    <published>2018-02-15T15:45:46+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/abap-recursive-code-to-identify-root-nodes-in-hierarchy-fromtable-data/ba-p/13385448</id>
    <title>ABAP Recursive Code to Identify root nodes in Hierarchy fromTable Data</title>
    <updated>2018-07-06T15:05:19+02:00</updated>
    <author>
      <name>diwaneamit</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/163462</uri>
    </author>
    <content>Dear ABAPers,&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
I have come across a scenario where I need to find out the root entry from a hierarchy. I would like to share the approach which I followed for the same. It might not be the best one but hope will help you in one or the other way &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Consider the test data for our case:&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/07/Original-Data.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Here First Column is the Child Node and Second Column is Parent Node.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Problem Statement:&lt;/STRONG&gt; We need to identify the final child nodes for Parent '1' and '2'.&lt;BR /&gt;
&lt;BR /&gt;
For e.g: For parent 1 root nodes are A and B. And again for A the root node are C, D out of which D is final root node and for C we have again two child nodes M and N which are at end the root nodes.&lt;BR /&gt;
&lt;BR /&gt;
Same way we need to identify all the root nodes.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;ABAP Code For the same:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;*&amp;amp;---------------------------------------------------------------------*&lt;BR /&gt;
*&amp;amp; Report ZAM_RECURSIVE_TEST&lt;BR /&gt;
*&amp;amp;---------------------------------------------------------------------*&lt;BR /&gt;
*&amp;amp;&lt;BR /&gt;
*&amp;amp;---------------------------------------------------------------------*&lt;BR /&gt;
REPORT zam_recursive_test.&lt;BR /&gt;
TYPES: BEGIN OF ty_data,      "To hold test data&lt;BR /&gt;
         field1 TYPE char1,   "Child&lt;BR /&gt;
         field2 TYPE char2,   "Parent&lt;BR /&gt;
       END OF ty_data,&lt;BR /&gt;
&lt;BR /&gt;
       BEGIN OF ty_out,      "To Filter&lt;BR /&gt;
         field1 TYPE char1,&lt;BR /&gt;
       END OF ty_out,&lt;BR /&gt;
&lt;BR /&gt;
       BEGIN OF ty_sel,      "Range Table&lt;BR /&gt;
         sign TYPE TVARV_SIGN,&lt;BR /&gt;
         opti TYPE TVARV_OPTI,&lt;BR /&gt;
         low  TYPE char32,&lt;BR /&gt;
         high TYPE char32,&lt;BR /&gt;
       END OF ty_sel.&lt;BR /&gt;
&lt;BR /&gt;
TYPES tt_data TYPE TABLE OF ty_data WITH EMPTY KEY.&lt;BR /&gt;
&lt;BR /&gt;
DATA: it_data TYPE TABLE OF ty_data,&lt;BR /&gt;
      wa_data TYPE ty_data,&lt;BR /&gt;
      it_rec  TYPE tt_data,&lt;BR /&gt;
      wa_rec  TYPE ty_data,&lt;BR /&gt;
      it_out  TYPE TABLE OF ty_out,&lt;BR /&gt;
      it_sel  TYPE TABLE OF ty_sel,&lt;BR /&gt;
      wa_sel  TYPE ty_sel.&lt;BR /&gt;
&lt;BR /&gt;
"Create Test Data&lt;BR /&gt;
wa_data-field1 = 'A'. wa_data-field2 = '1'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'B'. wa_data-field2 = '1'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'C'. wa_data-field2 = 'A'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'D'. wa_data-field2 = 'A'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'E'. wa_data-field2 = 'B'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'K'. wa_data-field2 = '2'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'L'. wa_data-field2 = 'K'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'M'. wa_data-field2 = 'C'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'N'. wa_data-field2 = 'C'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'O'. wa_data-field2 = 'E'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
wa_data-field1 = 'P'. wa_data-field2 = 'B'.&lt;BR /&gt;
APPEND wa_data TO it_data.&lt;BR /&gt;
"Sort Test Data&lt;BR /&gt;
SORT it_data by field2.&lt;BR /&gt;
"Fetch Data for Parent 1&lt;BR /&gt;
it_rec = VALUE tt_data( FOR wa_rec2 IN it_data WHERE ( field2 = '1' ) ( CORRESPONDING #( wa_rec2 ) )  ) .&lt;BR /&gt;
"Call recursive code&lt;BR /&gt;
PERFORM f_fetch TABLES it_rec.&lt;BR /&gt;
"Fetch Data for Parent 2&lt;BR /&gt;
it_rec = VALUE tt_data( FOR wa_rec2 IN it_data WHERE ( field2 = '2' ) ( CORRESPONDING #( wa_rec2 ) )  ) .&lt;BR /&gt;
"Call recursive code&lt;BR /&gt;
PERFORM f_fetch TABLES it_rec.&lt;BR /&gt;
&lt;BR /&gt;
"Write Data&lt;BR /&gt;
WRITE /: 'Original Data'.&lt;BR /&gt;
WRITE /: 'Node'.&lt;BR /&gt;
WRITE: '     Parent'.&lt;BR /&gt;
LOOP AT it_data into wa_data.&lt;BR /&gt;
"Loop on Original Data&lt;BR /&gt;
  WRITE /: wa_data-field1.&lt;BR /&gt;
  WRITE '       '.&lt;BR /&gt;
  WRITE wa_data-field2.&lt;BR /&gt;
ENDLOOP.&lt;BR /&gt;
&lt;BR /&gt;
DATA ls_out TYPE ty_out.&lt;BR /&gt;
WRITE /: '----------------------------------------------'.&lt;BR /&gt;
WRITE /: 'Children Nodes Identified'.&lt;BR /&gt;
LOOP AT it_out INTO ls_out.&lt;BR /&gt;
"Loop for Children Node&lt;BR /&gt;
WRITE /: ls_out-field1.&lt;BR /&gt;
wa_sel-sign = 'I'.&lt;BR /&gt;
wa_sel-opti = 'EQ'.&lt;BR /&gt;
wa_sel-low = ls_out-field1.&lt;BR /&gt;
APPEND wa_sel TO it_sel.&lt;BR /&gt;
ENDLOOP.&lt;BR /&gt;
&lt;BR /&gt;
WRITE /: '----------------------------------------------'.&lt;BR /&gt;
WRITE /: 'Complete Details for Children Nodes'.&lt;BR /&gt;
WRITE /: 'Node'.&lt;BR /&gt;
WRITE: '     Parent'.&lt;BR /&gt;
&lt;BR /&gt;
LOOP AT it_data into wa_data where field1 IN it_sel.&lt;BR /&gt;
"Loop on Children complete data&lt;BR /&gt;
  WRITE /:  wa_data-field1.&lt;BR /&gt;
  WRITE '       '.&lt;BR /&gt;
  WRITE wa_data-field2.&lt;BR /&gt;
ENDLOOP.&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
FORM f_fetch TABLES pt_rec TYPE tt_data.&lt;BR /&gt;
  DATA: ls_rec   TYPE ty_data,&lt;BR /&gt;
        wa_data2 TYPE ty_data,&lt;BR /&gt;
        ls_out   TYPE ty_out,&lt;BR /&gt;
        lv_lines TYPE i.&lt;BR /&gt;
  LOOP AT pt_rec INTO ls_rec.&lt;BR /&gt;
    READ TABLE it_data INTO wa_data2 WITH KEY field2 = ls_rec-field1 BINARY SEARCH.&lt;BR /&gt;
    IF sy-subrc IS INITIAL.&lt;BR /&gt;
      DATA(it_pass) = VALUE tt_data( FOR wa_rec2 IN it_data WHERE ( field2 = ls_rec-field1 ) ( CORRESPONDING #( wa_rec2 ) )  ) .&lt;BR /&gt;
      DESCRIBE TABLE it_pass LINES lv_lines.&lt;BR /&gt;
      IF lv_lines GE 1.&lt;BR /&gt;
        PERFORM f_fetch TABLES it_pass.&lt;BR /&gt;
      ELSE.&lt;BR /&gt;
        CLEAR: ls_rec,it_pass.&lt;BR /&gt;
        ls_rec-field1 = wa_data2-field1.&lt;BR /&gt;
        APPEND ls_rec TO it_pass.&lt;BR /&gt;
        PERFORM f_fetch TABLES it_pass.&lt;BR /&gt;
      ENDIF.&lt;BR /&gt;
&lt;BR /&gt;
    ELSE.&lt;BR /&gt;
      ls_out-field1 = ls_rec-field1.&lt;BR /&gt;
      APPEND ls_out TO it_out.&lt;BR /&gt;
    ENDIF.&lt;BR /&gt;
  ENDLOOP.&lt;BR /&gt;
&lt;BR /&gt;
ENDFORM.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Output :&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/07/Output.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Happy Learning &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/abap-recursive-code-to-identify-root-nodes-in-hierarchy-fromtable-data/ba-p/13385448"/>
    <published>2018-07-06T15:05:19+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/copy-customizing-path/ba-p/13385779</id>
    <title>Copy Customizing Path</title>
    <updated>2018-08-15T11:23:36+02:00</updated>
    <author>
      <name>cervantes_nicols</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/221727</uri>
    </author>
    <content>Hello,&lt;BR /&gt;
&lt;BR /&gt;
I developed useful functionality for SPRO&lt;BR /&gt;
&lt;BR /&gt;
I detected that is common the necessity of copy IMG path when you navigated of SPRO Tree Customizing .&lt;BR /&gt;
&lt;BR /&gt;
With the following code you can copy the path very easy&lt;BR /&gt;
&lt;BR /&gt;
The change is only apply in Developer System and is necessary register one standard object.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Step 1:&lt;/STRONG&gt; Add customer Button in Status GUI &lt;STRONG&gt;IMG_DISP&lt;/STRONG&gt; of Function Group &lt;STRONG&gt;S_IMG_TOOL_1&lt;/STRONG&gt;.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Register the object in Marketplace, before the changes apply&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/STATUS_GUI_IMG_DISP.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/register-object.jpg" /&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Create a Custom Function Code "ZCOPY_P"&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/Function-list.jpg" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Add custom Function Code "ZCOPY_P"&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/add-function.jpg" /&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Add Custom Code Functions in Interface and Key Function&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/add-function-2.jpg" /&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;: Insert Implicit Enhancement in INCLUDE: &lt;STRONG&gt;LSHI01F0X - &lt;/STRONG&gt;end of FORM&amp;nbsp;&lt;STRONG&gt; execute_user_command&lt;BR /&gt;
&lt;/STRONG&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/add-enhacement-implicit.jpg" /&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Step 3: &lt;/STRONG&gt;Add the following ABAP code and active the implicit enhancement&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;DATA: lv_nodekey TYPE tv_nodekey ,&lt;BR /&gt;
      le_item TYPE shi_item,&lt;BR /&gt;
      le_node TYPE treev_node,&lt;BR /&gt;
      lv_relatkey TYPE tv_nodekey,&lt;BR /&gt;
      lv_text(500) TYPE c ,&lt;BR /&gt;
      lv_relatship_ant TYPE int4,&lt;BR /&gt;
      lt_path TYPE STANDARD TABLE OF char100,&lt;BR /&gt;
      le_path TYPE char100,&lt;BR /&gt;
      lv_choise TYPE  sy-tabix.&lt;BR /&gt;
&lt;BR /&gt;
CASE fcode.&lt;BR /&gt;
  WHEN 'ZCOPY_P'.&lt;BR /&gt;
    CHECK g_tree_data-&amp;gt;tree IS NOT INITIAL.&lt;BR /&gt;
    READ TABLE g_tree_data-&amp;gt;nodes INTO le_node WITH KEY node_key =  g_tree_data-&amp;gt;node_key  .&lt;BR /&gt;
    CHECK sy-subrc = 0.&lt;BR /&gt;
    READ TABLE g_tree_data-&amp;gt;items INTO le_item WITH KEY node_key =  g_tree_data-&amp;gt;node_key  item_name = 'TEXT'.&lt;BR /&gt;
    CHECK sy-subrc = 0.&lt;BR /&gt;
    le_path =  le_item-text.&lt;BR /&gt;
    APPEND le_path TO lt_path.&lt;BR /&gt;
    lv_relatkey  = le_node-relatkey.&lt;BR /&gt;
    lv_relatship_ant = le_node-relatship.&lt;BR /&gt;
    WHILE lv_relatkey IS NOT INITIAL.&lt;BR /&gt;
&lt;BR /&gt;
      READ TABLE g_tree_data-&amp;gt;nodes INTO le_node WITH KEY node_key =  lv_relatkey .&lt;BR /&gt;
&lt;BR /&gt;
      READ TABLE g_tree_data-&amp;gt;items INTO le_item WITH KEY node_key =  le_node-node_key item_name = 'TEXT' .&lt;BR /&gt;
&lt;BR /&gt;
      lv_relatkey = le_node-relatkey .&lt;BR /&gt;
&lt;BR /&gt;
      IF  le_item-text IS NOT INITIAL AND  lv_relatship_ant = '4'.&lt;BR /&gt;
        CONCATENATE le_item-text '-&amp;gt;' INTO le_path.&lt;BR /&gt;
*        le_path =  le_item-text.&lt;BR /&gt;
        INSERT le_path INTO lt_path  INDEX 1.&lt;BR /&gt;
      ENDIF.&lt;BR /&gt;
      lv_relatship_ant =  le_node-relatship..&lt;BR /&gt;
    ENDWHILE.&lt;BR /&gt;
&lt;BR /&gt;
    CALL FUNCTION 'POPUP_WITH_TABLE_DISPLAY'&lt;BR /&gt;
      EXPORTING&lt;BR /&gt;
        endpos_col   = 130&lt;BR /&gt;
        endpos_row   = 10&lt;BR /&gt;
        startpos_col = 40&lt;BR /&gt;
        startpos_row = 1&lt;BR /&gt;
        titletext    = 'Ruta de Configuración'&lt;BR /&gt;
*      IMPORTING&lt;BR /&gt;
*        choise       = lv_choise&lt;BR /&gt;
      TABLES&lt;BR /&gt;
        valuetab     = lt_path&lt;BR /&gt;
      EXCEPTIONS&lt;BR /&gt;
        break_off    = 1&lt;BR /&gt;
        OTHERS       = 2.&lt;BR /&gt;
    IF sy-subrc &amp;lt;&amp;gt; 0.&lt;BR /&gt;
* Implement suitable error handling here&lt;BR /&gt;
    ENDIF.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Step 4: &lt;/STRONG&gt;Active all objects and test de functionality. TCode SPRO--&amp;gt; F5 --&amp;gt; "Copy IMG Path"&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2018/08/test-the-functionality..jpg" /&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/copy-customizing-path/ba-p/13385779"/>
    <published>2018-08-15T11:23:36+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/web-dynpro-abap-new-customizing-ui-with-ui-guideline-fiori/ba-p/13398643</id>
    <title>Web Dynpro ABAP: New Customizing UI with UI Guideline FIORI</title>
    <updated>2019-10-23T10:00:05+02:00</updated>
    <author>
      <name>Former Member</name>
    </author>
    <content>&lt;H2 id="toc-hId-908665829"&gt;Introduction&lt;/H2&gt;&lt;BR /&gt;
The UIs of your Web Dynpro ABAP applications (including those built with Floorplan Manager) don't always meet your exact requirements and you must adapt them accordingly.&lt;BR /&gt;
&lt;BR /&gt;
And, you as an administrator, can make these UI adaptations using the customizing UI.&lt;BR /&gt;
&lt;BR /&gt;
Until recently, the customizing UI had plenty of functionality but wasn’t the easiest to work with. Things have changed! Starting with SAP_UI 7.54 (for ABAP 1909), there is a totally new UI for customizing.&lt;BR /&gt;
&lt;BR /&gt;
This UI is only available with UI guideline FIORI. Of course, the adapted applications can also be used with other guidelines.&lt;BR /&gt;
&lt;H2 id="toc-hId-712152324"&gt;Highlights of the new UI&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Clear separation between the adaptation UI and the application itself&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Easy navigation to the elements you want to change&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Most important changes are easy to do&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Undo/Redo functionality&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Immediate save&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
Let’s have a look at the procedure with a dedicated example, the EPM demo application.&lt;BR /&gt;
&lt;H2 id="toc-hId-515638819"&gt;Start the customizing&lt;/H2&gt;&lt;BR /&gt;
First things first...&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Your system must have release SAP_UI 7.54, aka 1909.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;You have customizing authorization (see the topic “Authorizations for Personalizing and Customizing” in the Web Dynpro ABAP Configuration Framework documentation on the SAP Help Portal &lt;A href="https://help.sap.com/viewer/9c02f1c9f89a49448c6b55b39f7121c4/201809.latest/en-US/47ced9edf5072fe2e10000000a42189d.html" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/viewer/9c02f1c9f89a49448c6b55b39f7121c4/201809.latest/en-US/47ced9edf5072fe2e10000000a42189d.html&lt;/A&gt;).&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;You are working in the customizing client of a test or customizing system.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
So, let’s start...&lt;BR /&gt;
&lt;BR /&gt;
Run the Web Dynpro application S_EPM_WD_PO_LIST (you can find it in the Workbench (SE80) as a sub-node of the Web Dynpro component with the same name).&lt;BR /&gt;
&lt;BR /&gt;
You will see that the application is not shown with the FIORI guideline, but with theme SAP_TRADESHOW_PLUS.&amp;nbsp; Change it by adding “&amp;amp;sap-theme=SAP_BELIZE” to the URL. Now it looks FIORI-like.&lt;BR /&gt;
&lt;BR /&gt;
Open the context menu and select “Call Application in Customizing Mode”.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P1.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
A new tab is opened for the new customizing mode.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P2-1.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Please note the black toolbar on top. If you have open customizing requests for your user, the input field is enabled, and you may select one of them. Or you do your customizing without adding it to a transport request. Press OK and the toolbar will change.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P3.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
We will look at the purpose of the visible toolbar buttons later.&lt;BR /&gt;
&lt;BR /&gt;
Click on one of the Purchase Order IDs to navigate to the details view.&lt;BR /&gt;
&lt;H2 id="toc-hId-319125314"&gt;Hide a simple UI element&lt;/H2&gt;&lt;BR /&gt;
The first thing we want to change is to get rid of the “Print Preview” button.&lt;BR /&gt;
&lt;BR /&gt;
Open the context menu of the preview button, choose, “Adapt”, then “Hide”. Done!&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P4.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P5.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
By the way, the change is saved automatically. You can check it by going back to the tab with the application not in customizing-mode, refresh and choose another purchase order.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P6.png" /&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId-122611809"&gt;Hide a Group&lt;/H2&gt;&lt;BR /&gt;
Similarly, we want to hide the “Dates” group. Same procedure on the text “Dates”.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P7.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Result:&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P8.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Oh! This is not what we wanted to do! The “Created” entry is still there! We have only hidden the header line.&lt;BR /&gt;
&lt;BR /&gt;
First, we must undo this step. Fortunately, the “Undo” button is active. Press it!&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P9.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Now, let’s try again. Open the context menu and choose “Adapt”. Now stop and have a closer look at the toolbar.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P10.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
On the left-hand side there are some buttons. Particularly useful is the “Parent” button. Press it once and check what happens to the group.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P11.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
The whole group has a blue border around it, and the adaptation menu is titled “Group:… ”. This is what we want to hide. So, choose “Hide” . Now the whole group is gone.&lt;BR /&gt;
&lt;H2 id="toc-hId--73901696"&gt;Change the Save Buttons&lt;/H2&gt;&lt;BR /&gt;
There are 2 “Save” buttons in the toolbar. One is enough, thank you. We’ve decided we only want the “Save and Back” functionality but with the simple “Save” text. The icon should also be like the simple “Save” one.&lt;BR /&gt;
&lt;BR /&gt;
Step 1: Rename the “Save and Back” button:&lt;BR /&gt;
&lt;BR /&gt;
Context Menu -&amp;gt; Adapt -&amp;gt; Rename -&amp;gt; change the text-&amp;gt;Tick. Done.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P12.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
To change the icon property, you must use the “Advanced” dialog. If you do not know the icon source ID, just copy it from the other button. Adapt the second “Save” button, switch to the “Advanced” view, open the “Texts” panel and press the button “Image Source”. Now you see the icon source.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P13.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Copy the source and click somewhere outside of the dialog to close it without changing the second button. Now adapt the first button. The dialog is already in advanced mode. Open the “Texts” panel and the “Image Source” field and overwrite the current value. Click on the “Done” (Tick) button. The button has changed, but the dialog is still open.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P14.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Click somewhere outside of the dialog to close it.&lt;BR /&gt;
&lt;BR /&gt;
Now there are 2 buttons with the same UI but with different functionality. Hide the second one. To do so, use the “Back” button to return to the simple dialog and press “Hide”.&lt;BR /&gt;
&lt;BR /&gt;
Now you have 1 Save button with the functionality of “Save and Back”.&lt;BR /&gt;
&lt;H2 id="toc-hId--270415201"&gt;Styling&lt;/H2&gt;&lt;BR /&gt;
The “Purchase Order ID” is very important, so we want to highlight it in some way.&lt;BR /&gt;
&lt;BR /&gt;
Open the “Advanced” adaptation dialog of the “Purchase Order” text view. Within the “Visual Presentation” panel you will find the “Style Class” property. Press it to open the field. Open the value help for the field.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P15.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Now you see all the CSS styling possibilities for the text view.&lt;BR /&gt;
&lt;BR /&gt;
Please note that we do not guarantee that the changed styles will really affect the field because they may be overwritten by some framework style settings. This is also dependent on the theme and/or guideline being used.&lt;BR /&gt;
&lt;BR /&gt;
Press the value help on the “fontWeight” and choose “bold”. Or choose one of the available font colors. Close the value help and click on the “Done” button next to the “Style Class” tokenizer. Click outside the dialog to close it.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P16.png" /&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--466928706"&gt;Unhide a UI element&lt;/H2&gt;&lt;BR /&gt;
Once a UI element is hidden, it is hard to get it back. If you want to get back the “Print Preview” button, you first must find it. In the old UI, there is a list of changed UI elements but the ID or label is not always enough to know what it was.&lt;BR /&gt;
&lt;BR /&gt;
In the new Customizing UI it is easy to unhide elements. There is a dropdown list box in the toolbar showing the current view. The default is “Show Adapted UI”. Change it to “Show Hidden Elements”.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P17.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
Now you see all the elements you have hidden with a light green background. Open the context menu on the “Print Preview” button and set it as visible.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P18.png" /&gt;&lt;BR /&gt;
&lt;BR /&gt;
There is another entry in this dropdown list box: “Show Changed Elements”. Use it when you want to get an overview of what you have changed so far.&lt;BR /&gt;
&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2019/10/P19.png" /&gt;&lt;BR /&gt;
&lt;H2 id="toc-hId--663442211"&gt;Further information&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;“Undo” and “Redo” are available as long as you stay within the same session.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Reset can be used when you want to reset all customizing changes for the application. The “Info” button leads to a list of changed component customizings within your application. You can click on one of the links to see the changes in a new Web Dynpro session.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The “Help” button provides you with some important information on getting started with the new customizing UI.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Currently, not all functionality of the classic customizing is available in the new customizing UI (e.g. adding decorative elements or customer enhancement fields is not possible). To get this functionality, navigate to the classic customizing via the context menu.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The new customizing UI is only available with the FIORI UI guideline (even the theme FIORI_3 aka Quartz is not supported).&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;The URL parameter for the new customizing UI is “sap-config-mode=A”.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
So, this is the first step for the new Customizing UI. Stay tuned!&lt;BR /&gt;
&lt;BR /&gt;
Please tell us your opinions about the new UI. We can use them to improve it.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/web-dynpro-abap-new-customizing-ui-with-ui-guideline-fiori/ba-p/13398643"/>
    <published>2019-10-23T10:00:05+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-get-to-know-every-important-transaction-code-related-to-idoc/ba-p/13485028</id>
    <title>How to get to know every important Transaction code related to IDOC?</title>
    <updated>2020-07-15T23:33:10+02:00</updated>
    <author>
      <name>arghadipkar3013</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/686417</uri>
    </author>
    <content>&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
After working with SAP for more than 15 years and travelling across the Globe for SAP Projects one issue I always use to have how can I keep track of all the SAP Transaction Codes associated with IDOC. If you are working as a SAP ABAP Consultant you need to keep the name of Transaction Codes in your Fingertips. Sometimes this you know from other Experts and sometimes you have to dig it out. After exploring I found a very easy way to dig out the SAP Transaction Codes associated with IDOC. Just check this blog and conquer the SAP world.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Solution&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Login to SAP and type &lt;STRONG&gt;WEDI&lt;/STRONG&gt; in Command Bar&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/07/Capture1-14.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
Wala below we have all the important Transaction Code for IDOC&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2020/07/Capture2-15.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
You can use this blog anywhere everywhere in every SAP Project. Enjoy&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
For video version check below Link&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://youtu.be/cP6TfUHpb7M" target="test_blank" rel="nofollow noopener noreferrer"&gt;https://youtu.be/cP6TfUHpb7M&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-get-to-know-every-important-transaction-code-related-to-idoc/ba-p/13485028"/>
    <published>2020-07-15T23:33:10+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/organize-transport-requests-using-projects/ba-p/13517965</id>
    <title>Organize transport requests using projects</title>
    <updated>2021-07-02T11:48:56+02:00</updated>
    <author>
      <name>LaurensDeprost</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/81</uri>
    </author>
    <content>&lt;H4 id="toc-hId-1216674557"&gt;Optimize release cycles by organizing your SAP transports&lt;/H4&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#cts-change-and-transport-system" target="_blank" rel="nofollow noopener noreferrer"&gt;CTS: Change and Transport System&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#projects" target="_blank" rel="nofollow noopener noreferrer"&gt;Projects&lt;/A&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#about-projects-in-cts" target="_blank" rel="nofollow noopener noreferrer"&gt;About projects in CTS&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#creating-projects" target="_blank" rel="nofollow noopener noreferrer"&gt;Creating Projects&lt;/A&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#transaction-spro_admin" target="_blank" rel="nofollow noopener noreferrer"&gt;Transaction&amp;nbsp;&lt;CODE&gt;SPRO_ADMIN&lt;/CODE&gt;&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#report-rswbo_aux_project" target="_blank" rel="nofollow noopener noreferrer"&gt;Report&amp;nbsp;&lt;CODE&gt;RSWBO_AUX_PROJECT&lt;/CODE&gt;&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#assigning-projects-to-transport-requests" target="_blank" rel="nofollow noopener noreferrer"&gt;Assigning projects to transport requests&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#cts-projects-vs-img-projects" target="_blank" rel="nofollow noopener noreferrer"&gt;CTS Projects vs IMG Projects&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#further-reading" target="_blank" rel="nofollow noopener noreferrer"&gt;Further reading&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="#conclusion" target="_blank" rel="nofollow noopener noreferrer"&gt;Conclusion&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&lt;H2 id="cts-change-and-transport-system" id="toc-hId-761995614"&gt;CTS: Change and Transport System&lt;/H2&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;The&amp;nbsp;&lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/3bdfba3692dc635ce10000009b38f839.html" target="_blank" rel="noopener noreferrer"&gt;Change and Transport System (CTS)&lt;/A&gt;&amp;nbsp;is a tool built into SAP systems. CTS helps organize development projects in ABAP Workbench and customizing and then transporting the changes between the SAP systems in the system landscape. Everyone working on developing or maintaining processes within an SAP system works with (parts of) CTS. This includes functional consultants, technical consultants, and system administrators.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H2 id="projects" id="toc-hId-565482109"&gt;Projects&lt;/H2&gt;&lt;BR /&gt;
&lt;H3 id="about-projects-in-cts" id="toc-hId-498051323"&gt;About projects in CTS&lt;/H3&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;Using CTS projects allows planning development work and customizing activities in structured groups. Changes are structured independently of each other in different projects and can be imported independently into target systems. Projects are a valuable tool for going live with different projects at different times, linking development work in a single area, or simply keeping track of all transports for a specific change or release cycle.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H3 id="creating-projects" id="toc-hId-301537818"&gt;Creating Projects&lt;/H3&gt;&lt;BR /&gt;
&lt;H4 id="transaction-spro_admin" id="toc-hId-234107032"&gt;Transaction&amp;nbsp;&lt;CODE&gt;SPRO_ADMIN&lt;/CODE&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;In order to enjoy more extensive project management functionality than just grouping transports, it is best to create a CTS Project based on an&amp;nbsp;&lt;A href="https://help.sap.com/viewer/521cd184dd2f491a9a4179edb66951c3/LATEST/en-US/4dabe207e6dd6d67e10000000a42189e.html" target="_blank" rel="noopener noreferrer"&gt;IMG (Customizing) Project&lt;/A&gt;. Achieve this via transaction&amp;nbsp;&lt;CODE&gt;SPRO_ADMIN&lt;/CODE&gt;.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Execute transaction&amp;nbsp;&lt;CODE&gt;SPRO_ADMIN&lt;/CODE&gt;, click the left-most button,&amp;nbsp;&lt;EM&gt;Create Project (F5)&lt;/EM&gt;, and fill in a project name. Note that project names are limited to 10 characters.&lt;BR /&gt;
&lt;FIGURE&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;IMG class="medium-zoom-image" src="https://www.laurix.com/post/project-management/cts/projects/spro_admin_create_project.png" alt="Creating a project with transaction SPRO_ADMIN" data-zoomable="" /&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;/FIGURE&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Add a project title/description. Optionally define other attributes such as scope and team members.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Save the project via the&amp;nbsp;&lt;EM&gt;Save&lt;/EM&gt;&amp;nbsp;button or the keyboard combination&amp;nbsp;&lt;EM&gt;Ctrl+S&lt;/EM&gt;.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Enable CTS functions for the IMG project to allow managing transport requests. Open the&amp;nbsp;&lt;EM&gt;Transp. Requests&lt;/EM&gt; tab and click the button labeled ‘Active CTS Functions’.&lt;BR /&gt;
&lt;FIGURE&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;IMG class="medium-zoom-image" src="https://www.laurix.com/post/project-management/cts/projects/spro_admin_activate_cts_functions.png" alt="The button 'Activate CTS Functions' transaction SPRO_ADMIN" data-zoomable="" /&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;/FIGURE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;FIGURE&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;IMG class="medium-zoom-image" src="https://www.laurix.com/post/project-management/cts/projects/spro_admin_activating_cts_project_functions.png" alt="Activating CTS project functions in transaction SPRO_ADMIN" data-zoomable="" /&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;/FIGURE&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
That’s it. The newly created project can now be assigned to transport requests.&lt;BR /&gt;
&lt;H4 id="report-rswbo_aux_project" id="toc-hId-37593527"&gt;Report&amp;nbsp;&lt;CODE&gt;RSWBO_AUX_PROJECT&lt;/CODE&gt;&lt;/H4&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;The report works just as its description suggests: ‘Use CTS Projects Without IMG’. The report allows creating, deleting, and editing CTS projects and their descriptions without creating a corresponding IMG project first.&lt;BR /&gt;
It’s important to note that customers cannot use these ‘barebone’ CTS projects for fully-fledged project management. The reports' documentation says the following:&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;BLOCKQUOTE style="text-align: justify"&gt;This report program was written for temporary usage of the CTS project functions. You normally use the IMG Project System to create CTS projects. This report lets you use the CTS project functions without involving the IMG Project System. You can create, edit and complete test projects. This report is in no way intended to replace a proper project system.&lt;/BLOCKQUOTE&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;Apart from the above, the report can show a list of all requests for a given project and the Project Piece List. The project piece list contains all of the objects impacted in a project. When requests are released, the object list of the request is added to the piece list.&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;FIGURE&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;IMG class="medium-zoom-image" src="https://www.laurix.com/post/project-management/cts/projects/rswbo_aux_project_create_project.png" alt="Creating a project with report RSWBO_AUX_PROJECT" data-zoomable="" /&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;/FIGURE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P align="justify"&gt;To create a project with&amp;nbsp;&lt;CODE&gt;RSWBO_AUX_PROJECT&lt;/CODE&gt;, first, execute the report and press the&amp;nbsp;&lt;EM&gt;Create&lt;/EM&gt;&amp;nbsp;button (1). Next, enter a description for the project (2) and confirm the creation. That’s it. The newly created project can now be assigned to transport requests.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;H3 id="assigning-projects-to-transport-requests" id="toc-hId--288002697"&gt;Assigning projects to transport requests&lt;/H3&gt;&lt;BR /&gt;
After creating at least one CTS project, transport requests can be assigned to a project in the Transport Organizer during the &lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/5738e1ea4eb711d182bf0000e829fbfe.html" target="_blank" rel="noopener noreferrer"&gt;creation&lt;/A&gt;&amp;nbsp;or&amp;nbsp;&lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/8736153aab4a0c0ee10000000a114084.html" target="_blank" rel="noopener noreferrer"&gt;editing&lt;/A&gt;&amp;nbsp;of a project.&lt;BR /&gt;
&lt;FIGURE&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;IMG class="medium-zoom-image" src="https://www.laurix.com/post/project-management/cts/projects/transport_organizer_create_request_assign_project.png" alt="Assigning a project during transport request creation in the Transport Organizer" data-zoomable="" /&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;/FIGURE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;FIGURE&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;IMG class="medium-zoom-image" src="https://www.laurix.com/post/project-management/cts/projects/transport_organizer_change_request_assign_project.png" alt="Assigning a project when changing a transport request in the Transport Organizer" data-zoomable="" /&gt;&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;/FIGURE&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px" align="justify"&gt;As mentioned by &lt;SPAN class="mention-scrubbed"&gt;mfourmy_2016&lt;/SPAN&gt;&lt;SPAN style="font-size: 1rem"&gt; i&lt;/SPAN&gt;n the comments below, it is possible to make assigning a project mandatory when creating a transport request. This is achieved by changing the settings for attribute &lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/3d8d3237a086024fe10000009b38f936.html" target="_blank" rel="noopener noreferrer"&gt;SAP_CTS_PROJECT &lt;/A&gt;in transaction SE03 (Transport Organizer Tools) under "Display/Change Request Attributes".&lt;/P&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/07/transport_organizer_tools_display_change_request_attributes.png" /&gt;&lt;BR /&gt;
&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2021/07/sap_cts_project_attribute.png" /&gt;&lt;BR /&gt;
&lt;H3 id="toc-hId--484516202"&gt;&lt;/H3&gt;&lt;BR /&gt;
&lt;H3 id="cts-projects-vs-img-projects" id="toc-hId--681029707"&gt;CTS Projects vs IMG Projects&lt;/H3&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;There are two options for CTS projects. Barebone&amp;nbsp;&lt;A href="#report-rswbo_aux_project" target="_blank" rel="nofollow noopener noreferrer"&gt;CTS projects&lt;/A&gt;&amp;nbsp;are an excellent tool for release management. They allow organizing and bundling transport requests and&amp;nbsp;&lt;A href="https://help.sap.com/viewer/ff51d0d96c5510148efd9ebcce068974/LATEST/en-US/e15d9acae75c11d2b451006094b9ea64.html" target="_blank" rel="noopener noreferrer"&gt;easily importing&lt;/A&gt;&amp;nbsp;them all in one go.&amp;nbsp;&lt;A href="#transaction-spro_admin" target="_blank" rel="nofollow noopener noreferrer"&gt;IMG projects&lt;/A&gt;&amp;nbsp;with CTS functions enabled, on the other hand, offer the same features plus a bunch of extra&amp;nbsp;&lt;A href="https://help.sap.com/viewer/521cd184dd2f491a9a4179edb66951c3/LATEST/en-US/4db70aa6f1ab34d5e10000000a42189c.html" target="_blank" rel="noopener noreferrer"&gt;project management features&lt;/A&gt;. These include defining project scope, specifying projects start and end dates, and assigning team members to projects.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;P align="justify"&gt;In conclusion, creating IMG projects is best practice and recommended when additional project management features are desirable. However, if your organization does not yet use IMG projects and you are looking for a way to organize transports as a development team, then basic CTS projects may well be sufficient. They will allow you to experiment without the extra bells and whistles.&lt;/P&gt;&lt;BR /&gt;
&lt;H2 id="further-reading" id="toc-hId--659371574"&gt;Further reading&lt;/H2&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;CTS&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/3bdfba3692dc635ce10000009b38f839.html" target="_blank" rel="noopener noreferrer"&gt;Change and Transport System - Overview&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/03dcb6b6048711d3b42a00609419f767.html" target="_blank" rel="noopener noreferrer"&gt;Using Projects to Control Transports&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://help.sap.com/viewer/05c12df5b54849c49940a14bc089d8b4/LATEST/en-US/4aa528372e026b52e10000009b38f936.html" target="_blank" rel="noopener noreferrer"&gt;Working with Projects&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Related: SAP Solution Manager (SolMan)&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://help.sap.com/viewer/fb88bac4558a4ecf99923a1ced4cfa44/LATEST/en-US/a6a98651437dfc53e10000000a44538d.html" target="_blank" rel="noopener noreferrer"&gt;Project Management&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;A href="https://help.sap.com/viewer/8b923a2175be4939816f0981b73856c7/LATEST/en-US/4c3acb82b50843b4e10000000a42189e.html" target="_blank" rel="noopener noreferrer"&gt;Change Request Management (ChaRM)&lt;/A&gt;&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;H2 id="conclusion" id="toc-hId--855885079"&gt;Conclusion&lt;/H2&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;DIV&gt;&lt;BR /&gt;
&lt;P align="justify"&gt;This post touches on projects and transports in SAP. You learned how to create projects and how to use them to group transport requests. You also know the difference between IMG projects and CTS projects. Want more information? Be sure to check out the links above.&lt;/P&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
&lt;/DIV&gt;&lt;BR /&gt;
Are you already using projects to manage releases at your company or customer?&lt;BR /&gt;
Got any tips to share? Post it in the comments &lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_down:"&gt;👇&lt;/span&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/organize-transport-requests-using-projects/ba-p/13517965"/>
    <published>2021-07-02T11:48:56+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cds-annotations-for-new-and-experienced-professionals-3/ba-p/13542255</id>
    <title>CDS Annotations for – New And Experienced professionals- 3</title>
    <updated>2022-02-25T04:59:28+01:00</updated>
    <author>
      <name>former_member706122</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/706122</uri>
    </author>
    <content>&lt;STRONG&gt;Premise-&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
There are many SAP blogs out there that explains inner working of CDS views or core data services in SAP’s S/4 boxes. But there are still struggle among experienced professionals who is switching from ECC system to S/4.&lt;BR /&gt;
&lt;BR /&gt;
This blog is&lt;STRONG&gt;&amp;nbsp;dedicated towards experienced&lt;/STRONG&gt;&amp;nbsp;professionals working on ECC systems for many years and yet to jump to S/4.In the next few min, we will look at a very basic concept of a CDS view and try to evaluate inner working of the CDS using classic SAP tools.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Pre-Requisites –&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
You have read / understood / Prototype items on Previous blogs.&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2022/02/24/sap-cds-for-new-and-experienced-professionals/" target="_blank" rel="noopener noreferrer"&gt;SAP CDS for New And Experienced professionals | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2022/02/24/consuming-cds-for-new-and-experienced-professionals-2/" target="_blank" rel="noopener noreferrer"&gt;Consuming CDS for – New And Experienced professionals- 2 | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Lets Start –&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
At this point you have understood CDS views a little better. Just to recap CDS views are not a single object but an &lt;STRONG&gt;Entity&amp;nbsp;&lt;/STRONG&gt;consist of a &lt;STRONG&gt;SQL view&lt;/STRONG&gt; and a &lt;STRONG&gt;Data Definition&lt;/STRONG&gt;.&lt;BR /&gt;
&lt;BR /&gt;
While creating our first CDS view we didn't change the annotations written on top of CDS views.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/46.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
The annotations are always start with "@" and there are few several pre-defined annotations.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;What are CDS annotations?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Annotations are properties of a CDS entity. A way to enrich the CDS entity. These annotations are evaluated at the run time to decide the behaviour of a CDS entity.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Lets try to decode some &lt;STRONG&gt;Header Annotations&amp;nbsp;&lt;/STRONG&gt;-&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
@AbapCatalog.sqlViewName: 'ZVSQL_TRAVEL' &lt;STRONG&gt;- Defines the SQL View name for the CDS entity.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
@AbapCatalog.compiler.compareFilter: true - &lt;STRONG&gt;CDS view specifies how filter condition (Where condition) is evaluated at run time.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
@AbapCatalog.preserveKey: true -&amp;nbsp;&lt;STRONG&gt;&lt;BR /&gt;
Specifies the definition of the key fields in the CDS database view of the CDS view. (Whether to use keys defined in the original data base table or the one defined in CDS views).&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
@AccessControl.authorizationCheck: #CHECK&amp;nbsp; -&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Authorization check for CDS. Defines the implicit access control when Open SQL is used to access the CDS view.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
@EndUserText.label: 'CDS View for Travel Data'-&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Description of the CDS view for end users.&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Common Questions related to Annotations-&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Is CDS Annotations a way to manage technical settings in SE11 and buffering?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Answer:&lt;/STRONG&gt; Annotations are a way to control technical settings, buffering as those are also properties of data dictionary object in S/4. But Annotations are way more there are several other properties that annotations can control.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Where can I see all SAP annotations for my current S/4 level?&lt;/STRONG&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Answer:&lt;/STRONG&gt; SAP Annotations are available in help document I have added as a reference to this blog but also you can search annotation using SE16 from table - ABDOC_CDS_ANNOS. Remember in this table you will see different kind of annotations, not only related to ABAP CDS but others please refer to the references for more just to give a little bit of more understanding see the categories as below.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;Analytics Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;AnalyticsDetails Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Consumption Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;DefaultAggregation Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;EnterpriseSearch Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Hierarchy Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;ObjectModel Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;OData Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Search Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;Semantics Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;UI Annotations&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;VDM Annotations&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI style="list-style-type: none"&gt;&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;&lt;STRONG&gt;Important Tip -&lt;/STRONG&gt; Take a look at table - CDSVIEWANNOPOS all the annotations related to a CDS view can be found here. Also check CDS* in SE16 for other CDS views in your S/4 system.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;STRONG&gt;Exercise-&amp;nbsp;&lt;/STRONG&gt;Lets add a simple ABAP Annotation (Header) to our existing CDS Header. start this by typing "@" or CTRL+Space key from your keyboard.&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/47.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
Lets us add @AbapCatalog.buffering then press "." to look at further options or hit CTRL+SPACE from eclipse.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/48.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
select status: #swtiched_off.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/49.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Let us try to change the property of the buffering status from switched off to something else. You can only allow pre-defined values for buffering status so check the reference &lt;A href="https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/index.htm?file=abencds_annotations_abap.htm" target="_blank" rel="noopener noreferrer"&gt;ABAP Keyword Documentation (sap.com)&lt;/A&gt; you will notice the different values are explained by SAP. Also you can remove the #SWITCHED_OFF and use CTRL+SPACE to find applicable values.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/50.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
In this case we choose -@AbapCatalog.buffering.status: #ACTIVE&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
When you add the buffering type active and try to activate you might get an error. requesting to specify a buffering type.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/51.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Lets us also add a buffering type.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/52.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
Now lets look at the SQL view technical settings after this change. You would notice the buffering is activated and fully buffered.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/53.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
Remember not all annotations around CDS entity is visible in SE11 or SE12 as many of these properties are at data base level. Lets add another Annotation against Data Aging.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/54.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Defines the handling of obsolete data on a SAP HANA database when Open SQL is used to access the CDS view - If we set this to True then open SQL will read all data and can lead to performance problems if the database is really old and huge.&lt;BR /&gt;
Where as if you set this to false then Open SQL will read only current data.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Annotations are properties of CDS entity that allows us to pre-define behaviour of the CDS entity at runtime. Congratulations now you know Annotations. Keep learning.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;See you in the next blog -&lt;/STRONG&gt; &lt;A href="https://blogs.sap.com/2022/02/25/cds-in-real-life-requirements-new-and-experienced-professionals-4/" target="_blank" rel="noopener noreferrer"&gt;CDS in Real life requirements – New And Experienced professionals- 4 | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Reference Documents-&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
All About - &lt;A href="https://help.sap.com/doc/saphelp_nw751abap/7.51.0/en-US/63/0ce9b386b84e80bfade96779fbaeec/content.htm?no_cache=true" target="_blank" rel="noopener noreferrer"&gt;CDS Annotations (sap.com)&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
ABAP CDS Annotations -&amp;nbsp;&lt;A href="https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/index.htm?file=abencds_annotations_abap.htm" target="_blank" rel="noopener noreferrer"&gt;ABAP Keyword Documentation (sap.com)&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
Examples - &lt;A href="https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/index.htm?file=abencds_annotations_abap.htm" target="_blank" rel="noopener noreferrer"&gt;ABAP Keyword Documentation (sap.com)&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
CDS Annotation Grouping -&amp;nbsp;&lt;A href="https://help.sap.com/doc/abapdocu_751_index_htm/7.51/en-US/index.htm?file=abencds_annotations_frmwrk.htm" target="_blank" rel="noopener noreferrer"&gt;ABAP Keyword Documentation (sap.com)&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cds-annotations-for-new-and-experienced-professionals-3/ba-p/13542255"/>
    <published>2022-02-25T04:59:28+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cds-architecture-new-and-experienced-professionals-5/ba-p/13542860</id>
    <title>CDS Architecture – New And Experienced professionals- 5</title>
    <updated>2022-02-26T04:26:30+01:00</updated>
    <author>
      <name>former_member706122</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/706122</uri>
    </author>
    <content>&lt;STRONG&gt;Premise-&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
There are many SAP blogs out there that explains inner working of CDS views or core data services in SAP’s S/4 boxes. But there are still struggle among experienced professionals who is switching from ECC system to S/4.&lt;BR /&gt;
&lt;BR /&gt;
This blog is&lt;STRONG&gt;&amp;nbsp;dedicated towards experienced&lt;/STRONG&gt;&amp;nbsp;professionals working on ECC systems for many years and yet to jump to S/4.In the next few min, we will look at a very basic concept of a CDS view and try to evaluate inner working of the CDS using classic SAP tools.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Pre-Requisites –&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
You have read / understood / Prototype items on Previous blogs.&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2022/02/24/sap-cds-for-new-and-experienced-professionals/" target="_blank" rel="noopener noreferrer"&gt;SAP CDS for New And Experienced professionals | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2022/02/24/consuming-cds-for-new-and-experienced-professionals-2/" target="_blank" rel="noopener noreferrer"&gt;Consuming CDS for – New And Experienced professionals- 2 | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2022/02/25/cds-annotations-new-and-experienced-professionals-3/" target="_blank" rel="noopener noreferrer"&gt;CDS Annotations for – New And Experienced professionals- 3 | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&lt;A href="https://blogs.sap.com/2022/02/25/cds-in-real-life-requirements-new-and-experienced-professionals-4/" target="_blank" rel="noopener noreferrer"&gt;CDS in Real life requirements – New And Experienced professionals- 4 | SAP Blogs&lt;/A&gt;&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Recap-&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
We started this journey with creating a simple CDS for a custom table in the first blog.&lt;BR /&gt;
&lt;BR /&gt;
In the second blog we looked at simple way to consume CDS views in ABAP executables.&lt;BR /&gt;
&lt;BR /&gt;
Took a deep dive into annotations in third blog.&lt;BR /&gt;
&lt;BR /&gt;
Finally looked at an approach to extend CDS views.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Lets Start –&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
What we haven't looked at till this point is how CDS architecture is different than R/3 views.&lt;BR /&gt;
&lt;BR /&gt;
This is extremely important to understand. Based on our experience in other four blogs let us list down what we already know.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;We know CDS views consist to two individual object.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;SQL View generated automatically.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;A Data Definition.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;We also know CDS entity (It is called an entity as this consist of more than one object) can be consumed the same way we consume a data base table in ABAP executable.&lt;BR /&gt;
&lt;UL&gt;&lt;BR /&gt;
 	&lt;LI&gt;We also took a runtime trace that showed us the SQL view is visible on run time trace but the data definition is not.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;There are additional features / properties that can be set on the CDS view using Annotations.&lt;/LI&gt;&lt;BR /&gt;
 	&lt;LI&gt;We can extend standard SAP CDS views.&lt;/LI&gt;&lt;BR /&gt;
&lt;/UL&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;B&gt;Lets Remember how the R/3 Architecture used to be.&lt;/B&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/67.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
All DB's communicate to Application layer via Open SQL (Each SQL to be decoded by Optimizer to the right native SQL command). Many of you have used secondary keys and multiple performance technique on SQL statements to ensure right primary key or secondary key is used to fetch the data.&lt;BR /&gt;
&lt;BR /&gt;
In R/3 Architecture the main component that decides which SQL statement to use is the Optimizer.&lt;BR /&gt;
&lt;BR /&gt;
Now this process is slower and when the move to S/4 was decided one of the major changes proposed is for programmers to use database operation with much ease and this is exactly what CDS does.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;B&gt;CDS Architecture:&lt;/B&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2022/02/68-1.jpg" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
CDS entities are a layer in between the DB and the application, this is an extremely powerful tool for developers to be able to model data as per business need.&lt;BR /&gt;
&lt;BR /&gt;
Code Pushdown is the main principal - This allows you to get rid of the optimizer and run some DB modelling at the DB level instead of the application level.&lt;BR /&gt;
&lt;BR /&gt;
Now combine this principal with HANA in memory DB. Then you have an extremely powerful concept that merges Application/ DB layer into one mesh of systems.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
CDS Architecture is in the middle of application running on S/4 and the actual DB.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
Now you know the architecture and hopefully a better understanding of CDS. Keep learning.&lt;BR /&gt;
&lt;BR /&gt;
Next Blog -&amp;nbsp;&lt;A href="https://blogs.sap.com/2022/02/26/cds-exposing-to-odata-new-and-experienced-professionals-6/" target="_blank" rel="noopener noreferrer"&gt;CDS Exposing to Odata – New And Experienced professionals- 6 | SAP Blogs&lt;/A&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cds-architecture-new-and-experienced-professionals-5/ba-p/13542860"/>
    <published>2022-02-26T04:26:30+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/ida-alv-dump-cl-salv-ida-structdescr-except-cx-sy-struct-comp-name/ba-p/13550841</id>
    <title>IDA ALV Dump CL_SALV_IDA_STRUCTDESCR Except CX_SY_STRUCT_COMP_NAME</title>
    <updated>2023-06-19T10:56:46+02:00</updated>
    <author>
      <name>burakcansarpel</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/145142</uri>
    </author>
    <content>Hi Everyone,&lt;BR /&gt;
&lt;BR /&gt;
In previous versions, we were able to give the column names numerical or custom expression for the reports, but the structure of this has changed a bit with hana. If we give the column names numerically or letter , we may get an error while downloading excel in IDA ALV.&lt;BR /&gt;
&lt;BR /&gt;
Now, if you have kept the structure of the tables used in the report with 'DDIC' as a standard, column names should only start with a letter.But I will suggest a practical solution for this. If you encounter this error like me, you can continue with my method.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
For example, I created a structure from transaction code 'SE11'. Some of these structure components start with numbers.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/img1-3.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align:center;font-style:italic;, Arial, sans-serif"&gt;SE11 Structure&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
In such cases, if you directly name this structure as the type of the table with this structure, you will get a dump. This is because it appears as a 'DDIC' data type. In ALV_GRID structures ( for example IDA_ALV ) it cannot start with a number if 'DDIC' is a structure.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/resim1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Standart Program Column Name Check&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
If you encounter an error like below (dump). You can solve this error in your reports with the way I suggest.&lt;BR /&gt;
&lt;BR /&gt;
Example Dump&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/image1.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image&lt;/P&gt;&lt;BR /&gt;
If you are getting this error in IDA ALV , it is because it is checking whether your data type( structure or table type ) is in 'DDIC' as in 'Image2'. If your data type( structure or table type ) is 'DDIC' and the column name in this data type starts with something other than letter, you will get a dump.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/06/image2.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Image2&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
As a solution to this, I made a simple change as follows.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;PRE class="language-abap"&gt;&lt;CODE&gt;BEFORE&lt;BR /&gt;
&lt;BR /&gt;
DATA : gt_output  TYPE zbc_s_t0007.&lt;BR /&gt;
By the way 'zbc_s_t0007' ddic structure( se11 )&lt;BR /&gt;
&lt;BR /&gt;
      CALL METHOD go_alvgrid-&amp;gt;set_table_for_first_display&lt;BR /&gt;
        CHANGING&lt;BR /&gt;
          it_outtab                     = gt_output&lt;BR /&gt;
          it_fieldcatalog               = gt_fcat&lt;BR /&gt;
        EXCEPTIONS&lt;BR /&gt;
          invalid_parameter_combination = 1&lt;BR /&gt;
          program_error                 = 2&lt;BR /&gt;
          too_many_lines                = 3&lt;BR /&gt;
          OTHERS                        = 4.&lt;BR /&gt;
&lt;BR /&gt;
&lt;BR /&gt;
After&lt;BR /&gt;
&lt;BR /&gt;
TYPES : BEGIN OF tt_s0007.&lt;BR /&gt;
          INCLUDE TYPE zbc_s_t0007.&lt;BR /&gt;
TYPES : END OF tt_s0007.&lt;BR /&gt;
&lt;BR /&gt;
DATA : gt_output  TYPE TABLE OF tt_s0007,&lt;BR /&gt;
&lt;BR /&gt;
      CALL METHOD go_alvgrid-&amp;gt;set_table_for_first_display&lt;BR /&gt;
        CHANGING&lt;BR /&gt;
          it_outtab                     = gt_output&lt;BR /&gt;
          it_fieldcatalog               = gt_fcat&lt;BR /&gt;
        EXCEPTIONS&lt;BR /&gt;
          invalid_parameter_combination = 1&lt;BR /&gt;
          program_error                 = 2&lt;BR /&gt;
          too_many_lines                = 3&lt;BR /&gt;
          OTHERS                        = 4.&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
( The 'GT_OUTPUT' table contains the on-screen data for the report. )&lt;BR /&gt;
&lt;BR /&gt;
In this way, column names can start with numbers and can be downloaded to excel.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;BR /&gt;
I made the above correction in my own report. Here I used the ALV_GRID structure and got an error because the column names start with numbers. I then fixed this as I mentioned above. If you do, your data type will not be detected as a 'DDIC' structure. This allows you to start column names with numbers.You will also experience this error when exporting the data in the report to excel. The solution to this problem is the same (tried).&lt;BR /&gt;
&lt;BR /&gt;
I hope it has been informative and a logical solution to the error you encountered. Waiting for your comments and questions.&lt;BR /&gt;
&lt;BR /&gt;
&amp;nbsp;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/ida-alv-dump-cl-salv-ida-structdescr-except-cx-sy-struct-comp-name/ba-p/13550841"/>
    <published>2023-06-19T10:56:46+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-find-a-configuration-or-img-activity-path-for-any-object-with-the/ba-p/13580211</id>
    <title>How to find a configuration or IMG activity path for any object with the help of a Transport request (TR) number in SAP ERP</title>
    <updated>2023-11-16T18:14:31+01:00</updated>
    <author>
      <name>NAVEENREDDYV</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/173474</uri>
    </author>
    <content>Hi All,&lt;BR /&gt;
&lt;BR /&gt;
Hope you are doing good.&lt;BR /&gt;
&lt;BR /&gt;
This is my first SAP blog. With the help of this blog, we can understand how to find Configuration/SPRO IMG path for any TR created in the SAP system.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Introduction: &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Sometimes we will get a requirement or need to find a configuration or IMG path for an object that has already been created. Now we have a TR number. We need to find out exactly where the object changes were made in the SPRO path, and we need to identify which objects were created or modified in that TR.&lt;BR /&gt;
&lt;BR /&gt;
In this blog, I will explain and share the steps, along with screenshots, on how we can find an IMG path for any object in SAP by using Transport request numbers.&lt;BR /&gt;
&lt;BR /&gt;
This method will work for all the Functional consultants who are working in SAP ERP.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Main Topic:&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
Steps:&lt;BR /&gt;
&lt;BR /&gt;
Firstly, I have a TR number of DS4K902896.&lt;BR /&gt;
&lt;BR /&gt;
1.Insert the TR number in the &lt;STRONG&gt;E071K&lt;/STRONG&gt; table.&lt;BR /&gt;
&lt;BR /&gt;
E071K TABLE:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture1-31.png" /&gt;2. Take the object name:&lt;STRONG&gt; V_FAGL_SEGM.&amp;nbsp;&lt;/STRONG&gt;or table name: &lt;STRONG&gt;FAGL_SEGM&lt;/STRONG&gt; In this example, I am using the object name &lt;STRONG&gt;V_FAGL_SEGM&lt;/STRONG&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
3.Go to SM30 and paste the object name&lt;STRONG&gt;: V_FAGL_SEGM &lt;/STRONG&gt;and click on Customizing&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture2-23.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;4. Click on &lt;STRONG&gt;Continue w/o Specifying Project&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture3-19.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;SPAN style="color: #252525"&gt;&amp;nbsp;5. That's it. We had now arrived at the exact configuration path. Check out the screenshot below.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture4-17.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;6. Click on Define Segment:&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture5-19.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;SPAN style="color: #252525"&gt;&amp;nbsp;7. If we see that I created Segment 760000, the same segment number we can see in the E071K TABLE under Object name.&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture6-15.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;SPAN style="color: #252525"&gt;&amp;nbsp;8. Object name: &lt;STRONG&gt;1000000760000&lt;/STRONG&gt; i: e: Client &lt;STRONG&gt;100&lt;/STRONG&gt; Segment: &lt;STRONG&gt;0000760000 (unconverted)&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/11/Picture7-14.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;STRONG&gt;&amp;nbsp;Conclusion: &lt;/STRONG&gt;&lt;BR /&gt;
&lt;BR /&gt;
In the E071K table, we can input Parent TR or Child TR; anyone is fine. We can take TABLE NAME (FAGL_SEGM) or OBJECT NAME (V_FAGL_SEGM) to input into the SM30 table. For faster results, use OBJECT NAME (V_FAGL_SEGM).&lt;BR /&gt;
&lt;BR /&gt;
This way, we can quickly find the configuration or IMG path for any TR created in the SAP&lt;BR /&gt;
&lt;BR /&gt;
Thanks for reading this blog and if you find it informative, please like and share this blog.&lt;BR /&gt;
If you have any query or questions regarding this blog let me know in comment section. Please follow my profile for similar content.&lt;BR /&gt;
&lt;BR /&gt;
Thanks.</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-find-a-configuration-or-img-activity-path-for-any-object-with-the/ba-p/13580211"/>
    <published>2023-11-16T18:14:31+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/scenes-from-an-asug-mid-atlantic-chapter-meeting/ba-p/13648978</id>
    <title>Scenes from an ASUG Mid-Atlantic Chapter Meeting</title>
    <updated>2024-03-25T19:33:57.636000+01:00</updated>
    <author>
      <name>TammyPowlas</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/82</uri>
    </author>
    <content>&lt;P&gt;This past Friday Fairfax Water hosted an ASUG Mid-Atlantic Chapter meeting.&amp;nbsp; First I want to thank Gwendolyn Glasner, who set up the meeting, Lauren Milligan, who executed the meeting, Atul Patankar, our ASUG Volunteer who introduced the meeting and all of our speakers:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2thankyou.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86168i32343487C8DA6229/image-size/large?v=v2&amp;amp;px=999" role="button" title="2thankyou.jpg" alt="2thankyou.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Special thanks to our sponsors:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sponsors.jpg" style="width: 491px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86169i41374A4934FF9045/image-size/large?v=v2&amp;amp;px=999" role="button" title="sponsors.jpg" alt="sponsors.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Agenda:&lt;/P&gt;&lt;TABLE width="947"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;8:30&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;9:00&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;Breakfast and Registration Open&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;9:00&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;9:15&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;ASUG Mid-Atlantic Chapter Welcome&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;9:15&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;9:45&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;Intelligent Automation for SAP Transformations: How Automation De-Risks Custom Code Modernization&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;Jason Narnian, smartShift&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;9:45&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;10:00&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;Networking Break&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;10:00&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;10:45&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;ASUG Customer Roundtable Discussion&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;Patty Brown, ASUG&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;11:00&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;11:45&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;You've Paid For It, So Let's Use It&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;Kristen Scheffler, SAP&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;11:45&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;12:30&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;Lunch &amp;amp; Learn: ECC TO S/4HANA Conversion Approach&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;Alex Borokov, &amp;nbsp;Naviste&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;12:30&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;1:15&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;Plant Tour&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="117"&gt;&lt;P&gt;1:15&lt;/P&gt;&lt;/TD&gt;&lt;TD width="117"&gt;&lt;P&gt;1:30&lt;/P&gt;&lt;/TD&gt;&lt;TD width="456"&gt;&lt;P&gt;Closing and giveaways&lt;/P&gt;&lt;/TD&gt;&lt;TD width="256"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;After introductions, Jason from smartShift presented:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="1smartshift.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86172iDCB6B342C1A8D48D/image-size/large?v=v2&amp;amp;px=999" role="button" title="1smartshift.jpg" alt="1smartshift.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Clean core is a popular topic this year so interest was high.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Next, for the first time I can recall, we had ASUG's Patty Brown present at our meeting about the value of ASUG.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2patty.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86174iE2EC861A50C41807/image-size/large?v=v2&amp;amp;px=999" role="button" title="2patty.jpg" alt="2patty.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Patty reviewed the ASUG member benefits.&amp;nbsp; She leads the editorial team, producing ASUG First Five.&lt;/P&gt;&lt;P&gt;Patty thanked the volunteers at the meeting.&amp;nbsp; She was very upbeat and supportive.&lt;/P&gt;&lt;P&gt;Next, the great&amp;nbsp; Kristen Scheffler presented "You Paid for it, so Let's Use it".&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="5kristen.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86176i90FAF685F5716F22/image-size/large?v=v2&amp;amp;px=999" role="button" title="5kristen.jpg" alt="5kristen.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Kristen covered several areas regarding SAP Support and many attendees told me they were looking forward to her slides.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Source: SAP" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86177i50589FEC987D4D1E/image-size/large?v=v2&amp;amp;px=999" role="button" title="cic.jpg" alt="Source: SAP" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Source: SAP&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I've used these options (try chat first, then if it's too long of a wait, I will call CIC).&lt;/P&gt;&lt;P&gt;I didn't know about this, so I will have to try it out later:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Source: SAP" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86178i8D9B85AFD7C3DC17/image-size/large?v=v2&amp;amp;px=999" role="button" title="signavio.jpg" alt="Source: SAP" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Source: SAP&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Source: SAP" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86181i07294DB513FCB320/image-size/large?v=v2&amp;amp;px=999" role="button" title="solman.jpg" alt="Source: SAP" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Source: SAP&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Kristen provided an update on SolMan, a product I've used for years.&amp;nbsp; Many of us will need to decide what to do after SolMan 7.2.&lt;/P&gt;&lt;P&gt;Lastly, Alex from Navisite provided a great session about migrating to S/4HANA&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Source: Navisite" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86184i79ED6B27A17A9B56/image-size/large?v=v2&amp;amp;px=999" role="button" title="navisite.jpg" alt="Source: Navisite" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Source: Navisite&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I invite you to attend our upcoming Mid-Atlantic Chapter meetings:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;July 26: Topgolf Baltimore&lt;BR /&gt;Call for Sponsors: &lt;A href="https://www.cvent.com/c/abstracts/3edfe457-f452-4be3-8cd2-90aa7ebd2d54" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.cvent.com/c/abstracts/3edfe457-f452-4be3-8cd2-90aa7ebd2d54&lt;/A&gt;&lt;BR /&gt;Link to Register:&amp;nbsp;&lt;A href="https://www.asug.com/events/asug-mid-atlantic-chapter-meeting-july-2024" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.asug.com/events/asug-mid-atlantic-chapter-meeting-july-2024&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;September 27 – Lewis Ginter Botanical Gardens, Richmond, Virginia&lt;/LI&gt;&lt;LI&gt;October 25 – Topgolf DC&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Sponsor tables:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="3smartshift.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86185i4E5744B246200E24/image-size/large?v=v2&amp;amp;px=999" role="button" title="3smartshift.jpg" alt="3smartshift.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="4navisite.jpg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86186i22CF7B476B29A24A/image-size/large?v=v2&amp;amp;px=999" role="button" title="4navisite.jpg" alt="4navisite.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I *forgot* to take pictures of the food!&lt;/P&gt;&lt;P&gt;Until next time.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/scenes-from-an-asug-mid-atlantic-chapter-meeting/ba-p/13648978"/>
    <published>2024-03-25T19:33:57.636000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-display-alv-grid-with-only-structure/ba-p/13864946</id>
    <title>How to display ALV GRID with only structure</title>
    <updated>2024-09-13T10:39:24.855000+02:00</updated>
    <author>
      <name>mark_fryu</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/709977</uri>
    </author>
    <content/>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-display-alv-grid-with-only-structure/ba-p/13864946"/>
    <published>2024-09-13T10:39:24.855000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/defining-a-basic-cds-view/ba-p/13996477</id>
    <title>Defining a Basic CDS View</title>
    <updated>2025-01-25T10:58:50.521000+01:00</updated>
    <author>
      <name>mickaelquesnot</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150004</uri>
    </author>
    <content>&lt;DIV class=""&gt;&lt;P&gt;Defining a basic Core Data Services (CDS) view in SAP involves creating a data model on the database layer rather than the application layer. This offers significant advantages in terms of performance, data access, and reusability. Here's a breakdown of how to define a basic CDS view:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Development Environment:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;You'll typically use the ABAP Development Tools (ADT) in Eclipse to create CDS views. This provides a modern and integrated development environment.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. CDS View Syntax:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The basic syntax for defining a CDS view is as follows:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.sqlViewName: &lt;SPAN class=""&gt;'SQL_VIEW_NAME'&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.compiler.compareFilter: &lt;SPAN class=""&gt;true&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AccessControl&lt;/SPAN&gt;.authorizationCheck: #&lt;SPAN class=""&gt;CHECK&lt;/SPAN&gt;
&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; VIEW_NAME
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; DATABASE_TABLE &lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;SPAN class=""&gt;VIEW&lt;/SPAN&gt;
{
  element1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; alias1,
  element2 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; alias2,
  ...
  elementN &lt;SPAN class=""&gt;as&lt;/SPAN&gt; aliasN
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Let's break down each part:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;@AbapCatalog.sqlViewName: 'SQL_VIEW_NAME':&lt;/STRONG&gt; This annotation is mandatory. It defines the name of the corresponding SQL view that will be created in the database. This is the name you'll use when accessing the view from standard SQL.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;@AbapCatalog.compiler.compareFilter: true:&lt;/STRONG&gt; This annotation is recommended. It ensures that filter conditions are pushed down to the database level for better performance.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;@AccessControl.authorizationCheck: #CHECK:&lt;/STRONG&gt; This annotation is crucial for security. It enforces authorization checks based on the defined authorization objects.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;define view VIEW_NAME:&lt;/STRONG&gt; This keyword starts the definition of the CDS view, followed by the name you want to give to the CDS entity. This is the name used within ABAP programs.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;as select from DATABASE_TABLE or VIEW:&lt;/STRONG&gt; This specifies the data source for the view. You can select from database tables, database views, or other CDS views.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;{ element1 as alias1, ... }:&lt;/STRONG&gt; This is the element list. It defines the fields you want to include in the view. You can rename fields using aliases (as alias).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;3. Example:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let's say you have a database table SCARR (Carrier) and you want to create a CDS view that includes the carrier ID and name:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.sqlViewName: &lt;SPAN class=""&gt;'Z_CARRIER_VIEW'&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AbapCatalog&lt;/SPAN&gt;.compiler.compareFilter: &lt;SPAN class=""&gt;true&lt;/SPAN&gt;
&lt;SPAN class=""&gt;@AccessControl&lt;/SPAN&gt;.authorizationCheck: #&lt;SPAN class=""&gt;CHECK&lt;/SPAN&gt;
&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZCarrierView
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; SCARR
{
  carrid &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CarrierID,
  carrname &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CarrierName
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;In this example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Z_CARRIER_VIEW is the name of the SQL view.&lt;/LI&gt;&lt;LI&gt;ZCarrierView is the name of the CDS view.&lt;/LI&gt;&lt;LI&gt;carrid is renamed to CarrierID.&lt;/LI&gt;&lt;LI&gt;carrname is renamed to CarrierName.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;4. Key Concepts and Enhancements:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Aliases:&lt;/STRONG&gt; Using aliases makes your code more readable and can be essential when joining tables with fields that have the same name.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Types:&lt;/STRONG&gt; The data types of the elements in the view are derived from the underlying database table or view.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Expressions:&lt;/STRONG&gt; You can use expressions in the element list to create calculated fields. For example:&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZSalesOrderValue
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; VBAK
{
  vbeln &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrder,
  netwr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; NetValue,
  waerk &lt;SPAN class=""&gt;as&lt;/SPAN&gt; Currency,
  netwr &lt;SPAN class=""&gt;*&lt;/SPAN&gt; &lt;SPAN class=""&gt;1.19&lt;/SPAN&gt; &lt;SPAN class=""&gt;as&lt;/SPAN&gt; GrossValue &lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt; Calculated field
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Joins:&lt;/STRONG&gt; You can join multiple tables or views in the FROM clause.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZCustomerOrders
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; KNA1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; Customer
    &lt;SPAN class=""&gt;inner&lt;/SPAN&gt; &lt;SPAN class=""&gt;join&lt;/SPAN&gt; VBAK &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrder
      &lt;SPAN class=""&gt;on&lt;/SPAN&gt; Customer.kunnr &lt;SPAN class=""&gt;=&lt;/SPAN&gt; SalesOrder.kunnr
{
  Customer.kunnr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerID,
  Customer.name1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerName,
  SalesOrder.vbeln &lt;SPAN class=""&gt;as&lt;/SPAN&gt; SalesOrderNumber
};&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;WHERE Clause:&lt;/STRONG&gt; You can use a WHERE clause to filter the data.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;SQL&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;&lt;SPAN class=""&gt;define&lt;/SPAN&gt; &lt;SPAN class=""&gt;view&lt;/SPAN&gt; ZActiveCustomers
  &lt;SPAN class=""&gt;as&lt;/SPAN&gt; &lt;SPAN class=""&gt;select&lt;/SPAN&gt; &lt;SPAN class=""&gt;from&lt;/SPAN&gt; KNA1
{
  kunnr &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerID,
  name1 &lt;SPAN class=""&gt;as&lt;/SPAN&gt; CustomerName
} &lt;SPAN class=""&gt;where&lt;/SPAN&gt; kunnr &lt;SPAN class=""&gt;like&lt;/SPAN&gt; &lt;SPAN class=""&gt;'1000%'&lt;/SPAN&gt;; &lt;SPAN class=""&gt;/&lt;/SPAN&gt;&lt;SPAN class=""&gt;/&lt;/SPAN&gt; &lt;SPAN class=""&gt;Filter&lt;/SPAN&gt; customers starting &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;1000&lt;/SPAN&gt;
&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Associations:&lt;/STRONG&gt; You can define associations between CDS views to navigate related data. This is a more advanced topic but very powerful for building complex data models.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;5. Activation and Usage:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;After defining the CDS view in ADT, you need to activate it. This creates the corresponding SQL view in the database. You can then use the CDS view in ABAP programs using Open SQL statements:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;SPAN class=""&gt;ABAP&lt;/SPAN&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;PRE&gt;SELECT *
  FROM ZCarrierView
  INTO TABLE @DATA(lt_carriers).&lt;/PRE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;You can also access the underlying SQL view directly using native SQL if needed.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Benefits of CDS Views:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Performance:&lt;/STRONG&gt; Data processing is pushed down to the database level, which is much faster than processing data in the application server.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplified Data Access:&lt;/STRONG&gt; CDS views provide a simplified and consistent way to access data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reusability:&lt;/STRONG&gt; CDS views can be reused in multiple applications.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extensibility:&lt;/STRONG&gt; You can extend standard SAP data models using CDS views without modifying the original objects.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By understanding these basic concepts, you can start building efficient and powerful data models using CDS views in your SAP development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A title="PDF LINKEDIN" href="https://www.linkedin.com/posts/mickaelquesnot_gusap-s4-hanadefining-a-basic-cds-viewdocx-activity-7288156015299108864-KdWM?utm_source=share&amp;amp;utm_medium=member_desktop" target="_self" rel="nofollow noopener noreferrer"&gt;https://www.linkedin.com/posts/mickaelquesnot_gusap-s4-hanadefining-a-basic-cds-viewdocx-activity-7288156015299108864-KdWM?utm_source=share&amp;amp;utm_medium=member_desktop&lt;/A&gt;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/defining-a-basic-cds-view/ba-p/13996477"/>
    <published>2025-01-25T10:58:50.521000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/custom-abap-report-for-secure-tmg-access-multi-user-enabled/ba-p/14099027</id>
    <title>Custom ABAP Report for Secure TMG Access: Multi-User Enabled</title>
    <updated>2025-05-12T22:23:21.371000+02:00</updated>
    <author>
      <name>Pradeep555</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1451114</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Scenario: In standard SAP, SM30 is used to maintain data through a Table Maintenance Generator&lt;/SPAN&gt; &lt;SPAN&gt;(TMG). However, it only allows us to assign access to a limited number of users—typically one at a time using authorization objects. This becomes a bottleneck when &lt;/SPAN&gt;&lt;SPAN&gt;multiple&lt;/SPAN&gt; &lt;SPAN&gt;users need to&lt;/SPAN&gt;&lt;SPAN&gt; maintain data but should not be given broad access to SM30.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To overcome this limitation, I’ve developed a&lt;/SPAN&gt; &lt;SPAN&gt;custom report program &lt;/SPAN&gt;&lt;SPAN&gt;that acts as a &lt;/SPAN&gt;&lt;SPAN&gt;gateway to&lt;/SPAN&gt; &lt;SPAN&gt;perform CRUD (Create, Read, Update, Delete) operations on TMG, but only for authorized users of the report&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Business Requirement:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Allow only authorized users to maintain table data via TMG.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Eliminate the need to provide direct SM30 access.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Improve security, flexibility, and usability in maintaining table data.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Security and authorization handling.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Instead of giving access to&lt;/SPAN&gt; &lt;SPAN&gt;SM30:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Assign a custom &lt;/SPAN&gt;&lt;SPAN&gt;role to the report program&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let users maintain only the specific table via this report&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This restricts access to other tables or SM30 entirely&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Report ZPD_RP_TMG_CUSTOM 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; 
 *&amp;amp;---------------------------------------------------------------------* 
 REPORT ZPD_RP_TMG_CUSTOM. 
  
 
INCLUDE zpd_tmg_top_dec. 
 include zpd_tmg_logic_forms. 
  
START-OF-SELECTION . 
 PERFORM get_data. 
 PERFORM prepare_field_catalog. 
 PERFORM disp_alv. 

 

 

FORM prepare_field_catalog . 
   CLEAR : gt_fieldcat . 
   gt_fieldcat = VALUE #( ( fieldname = 'MANDT'             col_pos = 1    seltext_l = 'MANDT'        checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'SERIAL_NO'         col_pos = 2    seltext_l = 'SERIAL_NO'    checkbox = '' outputlen = 20 ) 
                          ( fieldname = 'NAME'              col_pos = 3    seltext_l = 'NAME'         checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'USER_ID'           col_pos = 4    seltext_l = 'USER_ID'      checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'PASSWORD'          col_pos = 5    seltext_l = 'PASSWORD'     checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'COMPANY_CODE'      col_pos = 6    seltext_l = 'COMPANY_CODE' checkbox = '' outputlen = 15 ) ). 
  
ENDFORM. 
 

 

FORM disp_alv . 
  
 
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY' 
     EXPORTING 
       i_callback_program       = sy-repid 
       i_callback_pf_status_set = 'MY_SCREEN' 
       i_callback_user_command  = 'USER_COMMAND' 
       it_fieldcat              = gt_fieldcat 
     TABLES 
       t_outtab                 = gt_alv 
     EXCEPTIONS 
       program_error            = 1 
       OTHERS                   = 2. 
   IF sy-subrc &amp;lt;&amp;gt; 0. 
 * Implement suitable error handling here 
   ENDIF. 
  
 
 
 
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_data 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_data . 
  
  SELECT mandt 
           serial_no 
           name 
           user_id 
           password 
           company_code 
           FROM zpd_t_tmg INTO TABLE gt_zpd_t_tmg. 
  
 
 
  IF sy-subrc = 0. 
     PERFORM zpd_t_tmg_to_gt_alv . 
  
 
ENDIF. 
  
ENDFORM. 
  
 
FORM my_screen USING rx_extab TYPE slis_t_extab . 
   SET PF-STATUS 'MY_SCREEN'. 
 ENDFORM. 
  
 
 
"form  user command" 
  
FORM user_command USING ucomm LIKE sy-ucomm 
                         p_selfld TYPE slis_selfield. 
  
  DATA: gd_repid LIKE sy-repid, 
         ref_grid TYPE REF TO cl_gui_alv_grid. 
   DATA: l_valid TYPE c. 
  
  " to get modified  alv op 
  
 
  CALL FUNCTION 'GET_GLOBALS_FROM_SLVC_FULLSCR' 
     IMPORTING 
       e_grid = ref_grid. 
  
 
  IF NOT ref_grid IS INITIAL. 
  
    CALL METHOD ref_grid-&amp;gt;check_changed_data 
       IMPORTING 
         e_valid = l_valid.           " Entries are Consistent 
  
  ENDIF. 
  
 
  CASE ucomm. 
     WHEN  '&amp;amp;DISP'. 
       CLEAR : gv_flag . 
       gv_flag = abap_true . 
       PERFORM change_fieldcat1. 
  
    WHEN '&amp;amp;SAVE' . 
       IF gv_flag = abap_true . 
         PERFORM modify_changes . 
         PERFORM prepare_field_catalog . 
       ELSE. 
         MESSAGE 'No change was made' TYPE 'E'. 
       ENDIF . 
  
    WHEN '&amp;amp;CR_NEW'. 
       REFRESH gt_alv1 . 
       PERFORM get_data1 . 
       PERFORM prepare_field_catalog1 . 
       PERFORM display_alv1 . 
  
    WHEN  '&amp;amp;DATA_SAVE'. 
       PERFORM save_data. 
     WHEN '&amp;amp;GT_DT'. 
       PERFORM dynamic_output . 
     WHEN '&amp;amp;F03' OR  '&amp;amp;F15'. 
       RETURN. 
     WHEN '&amp;amp;F12 '. 
       LEAVE PROGRAM . 
  
  ENDCASE . 
  
 
  p_selfld-refresh = 'X'. 
   IF ucomm = '&amp;amp;DISP'. 
     p_selfld-exit = 'X'. 
     PERFORM disp_alv. 
   ENDIF. 
  
  IF ucomm = '&amp;amp;SAVE'. 
     p_selfld-exit = 'X'. 
     PERFORM prepare_field_catalog. 
     PERFORM disp_alv. 
   ENDIF. 
  
 
 
 
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form prepare_field_catalog1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM prepare_field_catalog1 . 
  
 
  CLEAR : gt_fieldcat1 . 
   gt_fieldcat = VALUE #( ( fieldname = 'MANDT'      edit = 'X'   col_pos = 1  seltext_l = 'MANDT'     ref_fieldname = 'MANDT'      checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'SERIAL_NO'  edit = 'X'   col_pos = 2  seltext_l = 'SERIAL_NO' ref_fieldname = 'SERIAL_NO'  checkbox = '' outputlen = 20 ) 
                          ( fieldname = 'NAME'       edit = 'X'   col_pos = 3  seltext_l = 'NAME'      ref_fieldname = 'NAME'       checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'USER_ID'    edit = 'X'   col_pos = 4  seltext_l = 'USER_ID'   ref_fieldname = 'USER_ID'    checkbox = '' outputlen = 15 ) 
                          ( fieldname = 'PASSWORD'   edit = 'X'   col_pos = 5  seltext_l = 'PASSWORD'  ref_fieldname = 'PASSWORD'   checkbox = '' outputlen = 30 ) 
                          ( fieldname = 'COMPANY_CODE' edit = 'X' col_pos = 6  seltext_l = 'COMPANY_CODE'  ref_fieldname = 'PASSWORD'  checkbox = '' outputlen = 15 ) ). 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form display_alv1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM display_alv1 . 
  
  CALL FUNCTION 'REUSE_ALV_GRID_DISPLAY' 
     EXPORTING 
       i_callback_program       = sy-repid 
       i_callback_pf_status_set = 'MY_SCREEN1 ' 
       i_callback_user_command  = 'USER_COMMAND' 
       it_fieldcat              = gt_fieldcat 
     TABLES 
       t_outtab                 = gt_alv1 
     EXCEPTIONS 
       program_error            = 1 
       OTHERS                   = 2. 
   IF sy-subrc &amp;lt;&amp;gt; 0. 
 * Implement suitable error handling here 
   ENDIF. 
  
ENDFORM. 

 

FORM my_screen1 USING rx_extab TYPE slis_t_extab . 
   SET PF-STATUS 'MY_SCREEN1'. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_data1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_data1 . 
  
  DO 150 TIMES. 
     APPEND gs_alv1 TO gt_alv1. 
   ENDDO. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form save_data 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM save_data . 
  
  REFRESH  : gt_alv2 , gt_alv3. 
   gt_alv3[] = gt_alv1. 
   IF  gt_alv3 IS NOT INITIAL . 
     DELETE  gt_alv3 WHERE serial_no IS INITIAL. 
   ENDIF. 
  
  IF  gt_alv3 IS NOT INITIAL . 
  
    LOOP AT gt_alv3 INTO gs_alv3. 
       IF gs_alv3 IS NOT INITIAL . 
         IF gs_alv3-company_code IS NOT INITIAL. 
           CLEAR gs_alv. 
           READ TABLE gt_alv INTO gs_alv WITH KEY serial_no = gs_alv3-serial_no . 
  
          IF sy-subrc NE 0. 
             gs_alv2-serial_no = gs_alv3-serial_no. 
             gs_alv2-name = gs_alv3-name. 
             gs_alv2-password = gs_alv3-password. 
             gs_alv2-user_id = gs_alv3-user_id. 
             gs_alv2-company_code = gs_alv3-company_code. 
  
 
            APPEND gs_alv2 TO gt_alv2. 
             CLEAR : gs_alv3, gs_alv2 , gs_alv. 
           ELSE . 
             MESSAGE : ' Data already exists' TYPE 'E'. 
             CLEAR gs_alv. 
           ENDIF. 
  
        ELSE. 
           MESSAGE : 'Fill the required fied(Company code)' TYPE 'E'. 
         ENDIF. 
       ENDIF. 
     ENDLOOP. 
  
    MODIFY zpd_t_tmg FROM TABLE gt_alv2. 
     IF sy-subrc = 0. 
       MESSAGE 'Data transacted successfully' TYPE 'S'. 
  
      LOOP AT  gt_alv2 INTO gs_alv2. 
         gs_alv-name =  gs_alv2-name. 
         gs_alv-user_id = gs_alv2-user_id. 
         gs_alv-password = gs_alv2-password. 
         gs_alv-serial_no = gs_alv2-serial_no. 
         gs_alv-company_code = gs_alv2-company_code. 
  
        APPEND gs_alv TO gt_alv. 
  
        CLEAR : gs_alv , gt_alv2. 
  
      ENDLOOP. 
  
      REFRESH: gt_alv2 , gt_alv1. 
       PERFORM get_data1. 
     ENDIF. 
  
  ELSE. 
     MESSAGE 'Please enter the data' TYPE 'E'. 
  
  ENDIF. 
  
ENDFORM. 

 

FORM dynamic_output . 
  
  CLEAR : gs_serno , gs_ccode. 
  
  REFRESH  gt_alv4. 
   gt_alv4[] = gt_alv1[]. 
  
  IF gt_alv4 IS NOT INITIAL . 
  
    DELETE gt_alv4 WHERE serial_no IS INITIAL. 
     DELETE  gt_alv4 WHERE company_code IS INITIAL . 
  
  ENDIF. 
  
  PERFORM get_data2. 
   CLEAR : gs_serno , gs_ccode. 
  
  IF gt_alv4 IS   NOT INITIAL. 
  
    LOOP AT gt_alv1 ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_data&amp;gt;) 
                     WHERE serial_no IS INITIAL AND 
                      company_code IS INITIAL. 
  
  
      READ TABLE gt_serno INTO gs_serno WITH KEY serial_no = &amp;lt;lfs_data&amp;gt;-serial_no. 
       IF sy-subrc = 0. 
         &amp;lt;lfs_data&amp;gt;-user_id = gs_serno-user_id. 
         &amp;lt;lfs_data&amp;gt;-company_code = gs_serno-company_code. 
  
      ENDIF. 
  
    ENDLOOP. 
  
 
  ELSE. 
  
    MESSAGE 'fill out required entry fields' TYPE 'E'. 
  
  ENDIF. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_data2 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_data2 . 
  
  REFRESH : gt_serno , gt_ccode. 
  ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form change_fieldcat1 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM change_fieldcat1 . 
   LOOP AT gt_fieldcat ASSIGNING FIELD-SYMBOL(&amp;lt;lfs_fieldcat&amp;gt;) 
         WHERE ( fieldname = 'serial_no' OR fieldname = 'company_code' OR fieldname = 'user_id' OR fieldname = 'password' 
                  OR fieldname = 'name'). 
  
    &amp;lt;lfs_fieldcat&amp;gt;-edit = 'X'. 
  
 
 ENDLOOP. 
 ENDFORM. 


FORM modify_changes . 
  
  REFRESH gt_alv5 . 
  
  IF gt_alv IS NOT INITIAL. 
     PERFORM alv_to_alv5. 
     PERFORM get_changed_data. 
  
  ENDIF. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form get_changed_data 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM get_changed_data . 
  
  IF gt_alv5[] IS NOT INITIAL . 
     LOOP AT gt_alv5 INTO DATA(gs_alv5) . 
       READ TABLE gt_zpd_t_tmg INTO DATA(gs_zpd_t_tmg) WITH KEY serial_no = gs_alv5-serial_no. 
  
      IF sy-subrc = 0 AND ( gs_alv5 EQ gs_zpd_t_tmg ) . 
  
        DELETE gt_alv5 FROM gs_alv5. 
  
        CLEAR : gs_alv5 ,  gs_zpd_t_tmg . 
       ENDIF. 
       CLEAR :   gs_alv5 ,  gs_zpd_t_tmg . 
     ENDLOOP. 
  
    IF gt_alv5 IS INITIAL . 
       MESSAGE 'No changes was made' TYPE 'E'. 
  
    ELSE. 
       DELETE gt_alv5[] WHERE company_code IS INITIAL. 
       IF sy-subrc NE 0 AND gt_alv5 IS NOT INITIAL . 
         MODIFY zpd_t_tmg  FROM gt_alv5. 
         IF sy-subrc = 0. 
           MESSAGE 'Data saved successfully' TYPE 'S'. 
  
          gv_flag = abap_false. 
  
        ENDIF. 
       ELSE. 
  
        MESSAGE 'Fill the required field(Company code)' TYPE 'E'. 
       ENDIF . 
     ENDIF. 
   ENDIF. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form alv_to_alv5 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM alv_to_alv5 . 
  
  LOOP AT  gt_alv INTO gs_alv. 
     gs_alv5-mandt = sy-mandt. 
     gs_alv5-company_code = gs_alv-company_code. 
     gs_alv5-name = gs_alv-name. 
     gs_alv5-password = gs_alv-password. 
     gs_alv5-serial_no = gs_alv-serial_no. 
     gs_alv5-user_id = gs_alv-user_id. 
     APPEND gs_alv5 TO gt_alv. 
     CLEAR : gs_alv ,  gs_alv5. 
  
  ENDLOOP. 
  
ENDFORM. 

 

*&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; Form zpd_t_tmg_to_gt_alv 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; text 
 *&amp;amp;---------------------------------------------------------------------* 
 *&amp;amp; --&amp;gt;  p1        text 
 *&amp;amp; &amp;lt;--  p2        text 
 *&amp;amp;---------------------------------------------------------------------* 
 FORM zpd_t_tmg_to_gt_alv . 
  
AUTHORITY-CHECK OBJECT 'ZAUTHTMG' 
 ID 'ACTVT' FIELD '01'. 
  
  IF sy-subrc &amp;lt;&amp;gt; 0 . 
     MESSAGE e006(zmsg_auth). 
     ENDIF. 
 
  LOOP AT  gt_zpd_t_tmg INTO gs_zpd_t_tmg. 
     gs_alv-serial_no = gs_zpd_t_tmg-serial_no. 
     gs_alv-company_code = gs_zpd_t_tmg-company_code. 
     gs_alv-name = gs_zpd_t_tmg-name. 
     gs_alv-password = gs_zpd_t_tmg-password. 
     gs_alv-user_id = gs_zpd_t_tmg-user_id. 
  APPEND  gs_alv TO gt_alv. 
    CLEAR : gs_alv , gs_zpd_t_tmg . 
  ENDLOOP. 
  ENDFORM. 

 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;OUTPUT:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_1-1747050747016.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260055i072E0C2372A13592/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_1-1747050747016.png" alt="Pradeep555_1-1747050747016.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;When we&lt;/SPAN&gt;&lt;SPAN class=""&gt; click on new &lt;/SPAN&gt;&lt;SPAN class=""&gt;entries&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;button and click on save :&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_3-1747050889779.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260059iE9116DD345A83362/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_3-1747050889779.png" alt="Pradeep555_3-1747050889779.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Data will be saved to Database :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pradeep555_4-1747051011748.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/260060i575682E99C810484/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pradeep555_4-1747051011748.png" alt="Pradeep555_4-1747051011748.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Thanks and regards:&lt;/P&gt;&lt;P&gt;Pradeep Ishwar Devadiga&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-abap-report-for-secure-tmg-access-multi-user-enabled/ba-p/14099027"/>
    <published>2025-05-12T22:23:21.371000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970</id>
    <title>SAP S/4HANA Table Maintenance Reimagined: Choosing the Right Framework</title>
    <updated>2025-09-17T12:42:25.292000+02:00</updated>
    <author>
      <name>Saurabh_Gupta1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/53365</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In this blog, we’ll explore a practical use case implemented in&amp;nbsp;&lt;STRONG&gt;S/4HANA 2021 On-Premise&lt;/STRONG&gt;, where we opted for&amp;nbsp;&lt;STRONG&gt;Custom Business Objects (CBO)&lt;/STRONG&gt;&amp;nbsp;to enable table maintenance via Fiori with minimal development effort and also &lt;STRONG&gt;evaluate new frameworks&lt;/STRONG&gt; to achieve this in &lt;STRONG&gt;latest S4/HANA release 2023&lt;/STRONG&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-2018320602"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Approach for choosing Custom Business Object&lt;/STRONG&gt; (Decision Matrix)&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBO is based on BOPF framework which was widely used by SAP before the era of RAP (RESTful ABAP Programming), while this is still relevant, SAP has now moved to RAP based development and a new concept called custom business configuration, both will be covered later in context of data maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1950889816"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Why we didn’t choose RAP or Custom business configuration for this use case.&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration ( Business configuration maintenance object ) – This is available from S4 On-Prem 2022 onwards and the Fiori app for CUBCO is available after 2023 onwards.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;RESTful ABAP Programming – SAP has provided RAP Generator which can generate all the artefacts based on a table right from views, behavior definition , service binding , generation to Fiori app however this is also not available in On-Prem 2021, the other workaround could be to build all these artefacts manually and generate Fiori app which was going to take more development time, hence it was avoided.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Since we cannot go with above 2 options, the only 2 options left are SM30 and Custom Business object, as we want to move towards Fiori first approach, Custom business object was chosen as the Go to approach. Let us deep dive in this with the help of use- case and practical tips&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1625293592"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;What is Custom Business Object –&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With the Custom Business Objects Fiori app, you can create and manage custom business objects. A custom business object is a hierarchical set of database tables with an API for creation, retrieval, update and deletion of data.&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In The Fiori App ‘Custom Business Object’, a new BO has been defined and maintained as below.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User can choose what options do they want as part of framework, e,g, Change document, system admin date (last change at, created at etc are added by default).&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;User interface is disabled in this since it is only possible to enable if Embedded gateway is used which is not the case here.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Saurabh_Gupta1_2-1758034866616.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315300i224DEF863855A856/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_2-1758034866616.png" alt="Saurabh_Gupta1_2-1758034866616.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You are free to choose what kind of operations, out of CUD, should be supported in the BO out of box.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_3-1758035070410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315301i4300283172BACF00/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_3-1758035070410.png" alt="Saurabh_Gupta1_3-1758035070410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is where all the fields are defined for BO.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_4-1758035118964.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315302i70F7DFC5438ED8AD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_4-1758035118964.png" alt="Saurabh_Gupta1_4-1758035118964.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1557862806"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Final Output&lt;/STRONG&gt; –&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Until this point, no coding has been done except for few changes in CDS Metadata for Fiori UI related cosmetic changes, all the operation are handled by framework out of box.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;An additional button ‘Mass upload’ was added in metadata extension which is using intent-based navigation to navigate to another GUI application for mass upload of the entries.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758038827500.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315330iD5E9892D58E6AD7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758038827500.png" alt="Saurabh_Gupta1_0-1758038827500.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-1361349301"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Few Tips&lt;/STRONG&gt; -&lt;/FONT&gt;&lt;/H5&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom Table (Type Application) is auto generated in this case with Key field as UUID.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Data entries maintained in one system cannot be transported to other system and must be maintained in target system, which was also the requirement in our use case.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once business object is published and moved to production, Deletion is not allowed.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H4 id="toc-hId-1035753077"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How does the future look like for the same activity (Table Maintenance)-&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As discussed above, there are 2 other ways to achieve this with minimal development efforts in new S4 HANA releases.&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;H4 id="toc-hId-839239572"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;Custom Business Configuration&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;This is &lt;STRONG&gt;recommended &lt;/STRONG&gt;approach going forward where a business configuration maintenance object serves as primary entry point for maintenance.&lt;/FONT&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;We have the option to use the Generate ABAP Repository Objects Wizard for Business configuration maintenance object to generate all required development objects based on a customizing table&lt;/LI&gt;&lt;LI&gt;Based on the Business configuration maintenance object, the custom business configurations app renders a&amp;nbsp;Fiori element list report for the entities exposed by the service binding to maintain the configuration entries&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_11-1758035471221.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315310i8644DD844BCAACC2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_11-1758035471221.png" alt="Saurabh_Gupta1_11-1758035471221.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_12-1758035554875.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315311iD7963B6C1BF5D5BD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Saurabh_Gupta1_12-1758035554875.png" alt="Saurabh_Gupta1_12-1758035554875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Image courtesy - SAP&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In short, Custom business configuration (Fiori app) is an umbrella under which all maintenance objects will be listed and serves as one stop shop while maintenance objects are the actual ABAP artefact which contains all the definition related to Object maintenance.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_13-1758035620891.png" style="width: 605px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315321i9C4BDEE4DBF5C59B/image-dimensions/605x198?v=v2" width="605" height="198" role="button" title="Saurabh_Gupta1_13-1758035620891.png" alt="Saurabh_Gupta1_13-1758035620891.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.20 PM.png" style="width: 607px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315314iA3E7AFAAA2468BBB/image-dimensions/607x199?v=v2" width="607" height="199" role="button" title="Screenshot 2025-09-16 at 8.44.20 PM.png" alt="Screenshot 2025-09-16 at 8.44.20 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Different options like SM30 are available by default such Add copy action out of box.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Add Data Consistency Check for fields with fixed domain values or foreign key screen check.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.37 PM.png" style="width: 633px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315317i5B28948485F2436C/image-dimensions/633x333?v=v2" width="633" height="333" role="button" title="Screenshot 2025-09-16 at 8.44.37 PM.png" alt="Screenshot 2025-09-16 at 8.44.37 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All of the below objects are created by default including CDS view, service definition, service binding, business object maintenance , transport definition, implementation classes etc.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.44.59 PM.png" style="width: 638px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315318i40537C78E8356547/image-dimensions/638x478?v=v2" width="638" height="478" role="button" title="Screenshot 2025-09-16 at 8.44.59 PM.png" alt="Screenshot 2025-09-16 at 8.44.59 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.18 PM.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315320i990558C08B796ACB/image-dimensions/635x487?v=v2" width="635" height="487" role="button" title="Screenshot 2025-09-16 at 8.45.18 PM.png" alt="Screenshot 2025-09-16 at 8.45.18 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-771808786"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Final Output -&amp;nbsp;&lt;/FONT&gt;&lt;/H5&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Until this point, no coding has been done; all these features are provided out of the box by the framework.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT face="trebuchet ms,geneva"&gt;The custom business configuration app shows all the maintenance objects for which the user is authorized. &lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_0-1758178463971.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316288i7C80DFB3C71A9925/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_0-1758178463971.png" alt="Saurabh_Gupta1_0-1758178463971.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the relevant maintenance object is selected, the Edit button would be enabled to allow creation, deletion, updation, etc. activities.&lt;/P&gt;&lt;H5 id="toc-hId-575295281"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Saurabh_Gupta1_1-1758178556614.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316290i00ACBDF62350D6C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Saurabh_Gupta1_1-1758178556614.png" alt="Saurabh_Gupta1_1-1758178556614.png" /&gt;&lt;/span&gt;&lt;FONT face="trebuchet ms,geneva"&gt;Few Practical Tips&lt;/FONT&gt; –&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;All tables must have a client key field and delivery class C&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Have a timestamp field with data element&amp;nbsp;ABP_LASTCHANGE_TSTMPL&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;To enable the "No Transport" option in the ADT wizard, implement SAP Note&amp;nbsp; &lt;A href="https://me.sap.com/notes/3579012" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/3579012&lt;/A&gt;.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;With few tweaks, it is possible to maintain data directly in production system instead of transporting. More details in this &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-create-a-rap-bo-to-change-the-content-of-a-customizing-table-in-the/ba-p/13723087" target="_blank"&gt;blog&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;As of version SAP S/4HANA release 2022, customers can use the generator for Business Configuration objects. The Custom Business Configurations SAP Fiori app is not yet available; app has been made available in release 2023.&lt;/FONT&gt;&lt;/P&gt;&lt;H4 id="toc-hId-249699057"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;2. RAP Generator&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Second approach to achieve this is using same generation wizard from context menu of table.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-16 at 8.45.34 PM.png" style="width: 623px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315319i590CF530AE26F47A/image-dimensions/623x592?v=v2" width="623" height="592" role="button" title="Screenshot 2025-09-16 at 8.45.34 PM.png" alt="Screenshot 2025-09-16 at 8.45.34 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId--737934550"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than plain RAP generator?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is a framework which is also built on RAP artefacts, but it has other framework related functionalities (e.g change log for auditing) in comparison to plain RAP application.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Fiori for CBC can be accessed through generic custom business configuration app serving as single source of entry whereas RAP application should be exposed as standalone app.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas RAP generator can be built around any customizing and application tables both.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;CBC provides in built functionality to capture entries into transport request, but RAP generator requires explicit changes to incorporate transport feature.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId--934448055"&gt;&lt;FONT face="trebuchet ms,geneva"&gt;&lt;STRONG&gt;How is Custom business configuration different than custom business object?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is built on RAP framework (SAP recommended) whereas custom business objects is built on BOPF framework.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration has transport feature for data entries whereas custom business object does not any way to transport entries from one system to other system.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration is bottom-up approach where custom tables are defined first, and rest of the artifacts are generated around that whereas custom business object works on top-down approach where business object is created first then custom table is generated around BO.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration supports only OData V4 where CBO supports OData V2.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Custom business configuration app is built only around customizing tables whereas custom business object is built around application tables.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Once CBO has moved to production, it cannot be deleted.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;In both the case, Metadata can be enhanced for any Fiori related UI changes, also additional validation, actions are supported in both.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT face="tahoma,arial,helvetica,sans-serif"&gt;Additional reading-&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/ABAP_PLATFORM_NEW/b5670aaaa2364a29935f40b16499972d/047e01c3bcdd4303a60b61364bd5b31d.html?locale=en-US&amp;amp;version=202310.002&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/custom-business-configuration/ba-p/13647767&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-s-4hana-table-maintenance-reimagined-choosing-the-right-framework/ba-p/14218970"/>
    <published>2025-09-17T12:42:25.292000+02:00</published>
  </entry>
</feed>
