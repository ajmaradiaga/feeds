<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/Cloud-Connector-blog-posts.xml</id>
  <title>SAP Community - Cloud Connector</title>
  <updated>2025-10-01T23:10:25.333760+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/Cloud Connector/pd-p/0f95abc4-29f3-477d-874c-7c758b81f779" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>Cloud Connector blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-sap-btp-kyma-runtime-workloads-from-on-premise-or-corporate/ba-p/14088074</id>
    <title>Accessing SAP BTP, Kyma runtime workloads from on-premise or corporate network</title>
    <updated>2025-04-28T11:10:58.131000+02:00</updated>
    <author>
      <name>gabbi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/13919</uri>
    </author>
    <content>&lt;P&gt;SAP BTP, Kyma runtime customers often need to access applications and workloads deployed on SAP BTP, Kyma runtime from their corporate network or on-premise data centers without exposing them to the internet.&lt;/P&gt;&lt;P&gt;This can be achieved using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/service-channels-on-premise-to-cloud-connectivity" target="_blank" rel="noopener noreferrer"&gt;Service Channels&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;in conjunction with&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector" target="_blank" rel="noopener noreferrer"&gt;Cloud Connector&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and the Connectivity Proxy module in the SAP BTP, Kyma runtime.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="on-prem-to-cloud.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255425iA61029FEB5893727/image-size/large?v=v2&amp;amp;px=999" role="button" title="on-prem-to-cloud.png" alt="on-prem-to-cloud.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;According to the &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/using-service-channels?version=Cloud" target="_self" rel="noopener noreferrer"&gt;official documentation&lt;/A&gt;:&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;Cloud Connector service channels provide access from an external network to specific services on SAP BTP or to an ABAP Cloud system. These services are not exposed to direct access from the Internet. The Cloud Connector ensures that the connection is always available and that communication is secured.&lt;/P&gt;&lt;/BLOCKQUOTE&gt;&lt;P&gt;For SAP BTP, Kyma runtime workloads, you should use the service channel of the K8s Cluster type, which establishes a TCP connection to an SAP BTP, Kyma runtime workload.&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cc-service-channel.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255418iFB66516ECD9A51D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="cc-service-channel.png" alt="cc-service-channel.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For more information, follow the steps outlined in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://github.com/SAP-samples/kyma-runtime-extension-samples/tree/main/on-prem-to-cloud" target="_blank" rel="nofollow noopener noreferrer"&gt;Connectivity: Accessing a Workload in SAP BTP, Kyma Runtime From the Corporate Network&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sample.&lt;/P&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId-1709352864"&gt;Takeaway&lt;/H2&gt;&lt;/DIV&gt;&lt;P&gt;Use Service Channels to access applications and workloads deployed on SAP BTP, Kyma runtime from your corporate network or on-premise data centers without exposing them to the internet.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-sap-btp-kyma-runtime-workloads-from-on-premise-or-corporate/ba-p/14088074"/>
    <published>2025-04-28T11:10:58.131000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/cap%E3%81%AEhybrid-testing%E3%81%AE%E5%AE%9F%E8%A1%8C%E3%81%BE%E3%81%A7%E3%81%AB%E6%9C%89%E7%94%A8%E3%81%AA%E7%96%8E%E9%80%9A%E3%83%86%E3%82%B9%E3%83%88-sap-s-4hana-on-premise%E3%81%B8%E3%81%AE%E6%8E%A5%E7%B6%9A/ba-p/14090335</id>
    <title>CAPのHybrid Testingの実行までに有用な疎通テスト：SAP S/4HANA On-Premiseへの接続</title>
    <updated>2025-04-30T09:57:05.722000+02:00</updated>
    <author>
      <name>Umezuki</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/841332</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/connectivity-tests-before-executing-hybrid-testing-with-cap-connecting-to/ba-p/14090398" target="_self"&gt;English version&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1710040817"&gt;はじめに&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;この記事では、SAP Cloud Application Programming Model (CAP)において、SAP S/4HANA On-Premiseの実データにアクセスしながら開発を行うための「Hybrid Testing」について説明します。Hybrid Testing実行までに役立つ疎通テストに焦点を当て、具体的な環境構築方法については触れませんので、そちらの詳細を知りたい方は以下のリンクを参考にしてください。&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/bb/2bfe50645c741ae10000000a423f68/frameset.htm" target="_self" rel="noopener noreferrer"&gt;SAP Gateway -&amp;nbsp;Activate and Maintain Services&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/card/f3ec479d-0aa3-4672-b7fa-94cac0ce0607" target="_self" rel="nofollow noopener noreferrer"&gt;Discovery Center - Connect S/4HANA system using Cloud Connector&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/guides/using-services#connect-to-remote-services-locally" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP CAP&amp;nbsp; - Consuming Services #Connect to Remote Services Locally&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP CAP - Hybrid Testing&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://sap.github.io/cloud-sdk/docs/js/guides/bas#case-1-connection-to-an-on-premise-system" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Cloud SKD -&amp;nbsp;Connecting to External Systems From the Business Application Studio #Connection to an On-Premise System&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1513527312"&gt;前提条件&lt;/H2&gt;&lt;P&gt;IDEはSAP Business Application Studio (BAS)を使います。&lt;/P&gt;&lt;H2 id="toc-hId-1317013807"&gt;Hybrid Testingとは？&lt;/H2&gt;&lt;P&gt;CAPを用いたアプリ開発において、基本的にはモックデータを使用したローカル環境でテストを行いますが、クラウドやオンプレのサービスにアクセスしたい場合があります。そこで役立つ手法が「&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_self" rel="nofollow noopener noreferrer"&gt;Hybrid Testing&lt;/A&gt;」です。このテスト方式を使うことで、開発者はローカル環境でアプリを実行しながら&lt;SPAN&gt;リモートサービスに接続できるため、開発効率の向上が見込めます。&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1120500302"&gt;SAP S/4HANA On-Premiseに対するHybrid Testingの課題&lt;/H2&gt;&lt;P&gt;上記の利点がある一方で、オンプレにアクセスする際にはSAP Destination Service, SAP Connectivity Service, Cloud Connector といったサービスに依存するため、モックデータを使ったローカルテストと比較すると環境の整備が煩雑になります。そこで、環境構築をスムーズに進めるために使える疎通テストを紹介します。&lt;/P&gt;&lt;H2 id="toc-hId-923986797"&gt;疎通テスト一覧&lt;/H2&gt;&lt;P&gt;紹介する疎通テストは下記の図の順番となっています。依存関係が少ないものから書き出していますので、順にテストすることをお勧めします。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Hybrid Testing Architecture.png" style="width: 947px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255187i85C54738C21F6F41/image-size/large?v=v2&amp;amp;px=999" role="button" title="Hybrid Testing Architecture.png" alt="Hybrid Testing Architecture.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-727473292"&gt;1. SAP Gateway Clientからの疎通テスト&lt;/H2&gt;&lt;P&gt;T-codeが /IWFND/GW_CLIENT であるSAP Gateway Clientは、OData サービスをテストする&lt;SPAN&gt;&amp;nbsp;HTTP (S)クライアントとして機能します。適切なHTTP メソッド、ODataクエリ(format, top...)、リクエストURI、Content Typeなどのリクエストヘッダー、ペイロードを入力した後、アプリ上の「Execute」をクリックして、&lt;/SPAN&gt;S/4HANA内で対象のODataサービスの利用可否やレスポンス結果を確認します。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Gateway Client.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255125iF8074BC10F22FA0C/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP Gateway Client.png" alt="SAP Gateway Client.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;エラーが発生した際には、&lt;A href="https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/bb/2bfe50645c741ae10000000a423f68/frameset.htm" target="_self" rel="noopener noreferrer"&gt;ODataサービスが有効化されているか&lt;/A&gt;、正しいpathを指定しているかどうかなどをチェックしてください。&lt;/P&gt;&lt;H3 id="toc-hId-660042506"&gt;2. Cloud Connector administration UIからの疎通テスト&lt;/H3&gt;&lt;P&gt;Gateway Clientからのテストが成功した後は、SCCからオンプレへの疎通をテストします。具体的には、SCCで定義したVirtual hostからInternal hostであるオンプレへの接続を確認するために、Actionsの一番左のアイコンをクリックしてください。'Reachable'が表示されたら成功です。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cloud Connector.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255133iC03859BA5E8DD018/image-size/large?v=v2&amp;amp;px=999" role="button" title="Cloud Connector.png" alt="Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-334446282"&gt;3. BTP Cockpitからの疎通テスト&lt;/H2&gt;&lt;P&gt;BTP Cockpit上でSCCに対する「Check Connection」を行うことでDestinationのURLへの&lt;SPAN&gt;到達が可能か確認できます。ただし、ここでのテストは&lt;/SPAN&gt;&lt;SPAN&gt;Destination ServiceであるSCCのVirtual hostが稼働していることを保証するものではなく、到達可能かを確認するという点に注意してください。&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/check-availability-of-destination?q=reachable" target="_self" rel="noopener noreferrer"&gt;&lt;SPAN&gt;'The check does not guarantee that the target system or service is operational. It only verifies if a connection is possible.'&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BTP Cockpit.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255137i9FC11E8062E3F579/image-size/large?v=v2&amp;amp;px=999" role="button" title="BTP Cockpit.png" alt="BTP Cockpit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;エラーが発生した場合、SCCの設定やバージョン、サーバーの&lt;SPAN&gt;アベイラビリティに問題がある可能性があります。&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-267015496"&gt;4. の疎通テスト&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-70501991"&gt;5. BASからの疎通テスト&lt;/H3&gt;&lt;P&gt;最後はHybrid Testingです。&lt;A href="https://cap.cloud.sap/docs/guides/using-services#connect-to-remote-services-locally" target="_self" rel="nofollow noopener noreferrer"&gt;Cloud Foundry Runtimeにデプロイしたアプリに対してdestinationやauthサービスをバインド&lt;/A&gt;し、下記コマンドを実行した状態でHTTPファイルからHTTPリクエストを行います。&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# JavaScriptの場合
cds watch --profile hybrid

# TypeScriptの場合
cds-ts watch --profile hybrid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BAS.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255152i58CA53B5D1AA0A5D/image-size/large?v=v2&amp;amp;px=999" role="button" title="BAS.png" alt="BAS.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;注意点:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;ローカルマシンからSCCにHybrid Testingでアクセスする際には、BTP環境内からcallが必要となるため、VS CodeなどのIDEではなくBASを使用してください。&lt;A href="https://sap.github.io/cloud-sdk/docs/js/guides/bas#case-1-connection-to-an-on-premise-system" target="_self" rel="nofollow noopener noreferrer"&gt;参考リンク&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;.envファイルには、destinationのnameとurl情報をBTP CockpitのDestinations画面から取得し、&lt;A href="https://me.sap.com/notes/0003112360" target="_self" rel="noopener noreferrer"&gt;destinations&lt;/A&gt;変数を追記する必要があります。&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;destinations=[{"name":"demodestination","proxyHost":"http://127.0.0.1","proxyPort":"8887","url":"http://demodestination.dest"}]&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-92160124"&gt;おわりに&lt;/H2&gt;&lt;P&gt;CAPを使用したアプリ開発のお役に立てれば幸いです。&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/cap%E3%81%AEhybrid-testing%E3%81%AE%E5%AE%9F%E8%A1%8C%E3%81%BE%E3%81%A7%E3%81%AB%E6%9C%89%E7%94%A8%E3%81%AA%E7%96%8E%E9%80%9A%E3%83%86%E3%82%B9%E3%83%88-sap-s-4hana-on-premise%E3%81%B8%E3%81%AE%E6%8E%A5%E7%B6%9A/ba-p/14090335"/>
    <published>2025-04-30T09:57:05.722000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/connectivity-tests-before-executing-hybrid-testing-with-cap-connecting-to/ba-p/14090398</id>
    <title>Connectivity Tests Before Executing Hybrid Testing with CAP: Connecting to SAP S/4HANA On-Premise</title>
    <updated>2025-04-30T11:19:57.863000+02:00</updated>
    <author>
      <name>Umezuki</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/841332</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/t5/blogs/blogworkflowpage/blog-id/technology-blog-sap/article-id/181076" target="_self"&gt;&lt;SPAN&gt;Japanese version&lt;/SPAN&gt;&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1710041006"&gt;&lt;SPAN&gt;Introduction&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In this article, I will explain "Hybrid Testing" in the context of the SAP Cloud Application Programming Model (CAP), which allows development while accessing real data from SAP S/4HANA On-Premise. I will focus on connectivity tests that are useful before executing Hybrid Testing. For detailed information on setting up the environment, please refer to the links below.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/bb/2bfe50645c741ae10000000a423f68/frameset.htm" target="_self" rel="noopener noreferrer"&gt;SAP Gateway -&amp;nbsp;Activate and Maintain Services&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://discovery-center.cloud.sap/card/f3ec479d-0aa3-4672-b7fa-94cac0ce0607" target="_self" rel="nofollow noopener noreferrer"&gt;Discovery Center - Connect S/4HANA system using Cloud Connector&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/guides/using-services#connect-to-remote-services-locally" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP CAP&amp;nbsp; - Consuming Services #Connect to Remote Services Locally&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP CAP - Hybrid Testing&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://sap.github.io/cloud-sdk/docs/js/guides/bas#case-1-connection-to-an-on-premise-system" target="_self" rel="nofollow noopener noreferrer"&gt;SAP Cloud SKD -&amp;nbsp;Connecting to External Systems From the Business Application Studio #Connection to a...&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1513527501"&gt;What is Hybrid Testing?&lt;/H2&gt;&lt;P&gt;In app development using CAP, testing is typically conducted in a local environment using mock data. However, there are cases where you need to access cloud or on-premise services. "&lt;A href="https://cap.cloud.sap/docs/advanced/hybrid-testing" target="_self" rel="nofollow noopener noreferrer"&gt;Hybrid Testing&lt;/A&gt;" is a useful method in such cases. By using this testing method, developers can run applications in a local environment while connecting to remote services, thereby improving development efficiency.&lt;/P&gt;&lt;H2 id="toc-hId-1317013996"&gt;Challenges of Hybrid Testing with SAP S/4HANA On-Premise&lt;/H2&gt;&lt;P&gt;While there are advantages, accessing on-premise systems relies on services such as SAP Destination Service, SAP Connectivity Service, and Cloud Connector. This makes the environment setup more complex compared to local testing with mock data. Therefore, I introduce connectivity tests that can help streamline the environment setup process.&lt;/P&gt;&lt;H2 id="toc-hId-1120500491"&gt;Connectivity Tests&lt;/H2&gt;&lt;P&gt;The connectivity tests introduced are in the order shown in the diagram below. I recommend testing them sequentially, starting with those with fewer dependencies.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Hybrid Testing Architecture.png" style="width: 947px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256528i37D7481DB7E647F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Hybrid Testing Architecture.png" alt="Hybrid Testing Architecture.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-923986986"&gt;1. Connectivity Test from SAP Gateway Client&lt;/H2&gt;&lt;P&gt;The SAP Gateway Client, with T-code /IWFND/GW_CLIENT, functions as an HTTP(S) client to test OData services. After entering the appropriate HTTP method, OData query (format, top...), request URI, request headers like Content-Type, and payload, click "Execute" on the app to check the availability and response of the target OData service within S/4HANA.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SAP Gateway Client.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256530i0CEC6587F08F0496/image-size/large?v=v2&amp;amp;px=999" role="button" title="SAP Gateway Client.png" alt="SAP Gateway Client.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If an error occurs,&lt;SPAN&gt;&amp;nbsp;verify that&amp;nbsp;&lt;A href="https://help.sap.com/doc/saphelp_nw75/7.5.5/en-US/bb/2bfe50645c741ae10000000a423f68/frameset.htm" target="_self" rel="noopener noreferrer"&gt;the OData service is activated&lt;/A&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;and that the correct path is specified, among other potential issues.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-727473481"&gt;2. Connectivity Test from Cloud Connector Administration UI&lt;/H2&gt;&lt;P&gt;After a successful test from the Gateway Client, test the connectivity from SCC to the on-premise system. Specifically, click the leftmost icon in Actions to verify the connection from the Virtual host defined in SCC to the Internal host (on-premise). If 'Reachable' is displayed, the test is successful.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Cloud Connector.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256531iE6EE7BA37EF75E2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Cloud Connector.png" alt="Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-530959976"&gt;3. Connectivity Test from BTP Cockpit&lt;/H2&gt;&lt;P&gt;In the BTP Cockpit, perform a "Check Connection" to SCC to verify if the URL of the Destination can be reached. Note that this test does not guarantee that the Virtual host of the Destination Service (SCC) is operational, but only confirms reachability.&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/check-availability-of-destination?q=reachable" target="_self" rel="noopener noreferrer"&gt;'The check does not guarantee that the target system or service is operational. It only verifies if ...&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BTP Cockpit.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256532iF905E94D53A7673A/image-size/large?v=v2&amp;amp;px=999" role="button" title="BTP Cockpit.png" alt="BTP Cockpit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If an error occurs, there may be issues with the SCC settings, version, or server availability.&lt;/P&gt;&lt;H2 id="toc-hId-334446471"&gt;4. Connectivity Test from SAP Business Application Studio (BAS)&lt;/H2&gt;&lt;P&gt;Finally, perform Hybrid Testing itself. &lt;A href="https://cap.cloud.sap/docs/guides/using-services#connect-to-remote-services-locally" target="_self" rel="nofollow noopener noreferrer"&gt;Bind the destination and auth services to the app deployed in the Cloud Foundry Runtime&lt;/A&gt;, and execute the following command to make an HTTP request from the HTTP file.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;# JavaScript
cds watch --profile hybrid

# TypeScript
cds-ts watch --profile hybrid&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="BAS.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/256533iDCE0CBA07A6D907B/image-size/large?v=v2&amp;amp;px=999" role="button" title="BAS.png" alt="BAS.png" /&gt;&lt;/span&gt;Notes:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;When accessing SCC from a local machine using Hybrid Testing, it is necessary to make calls from within the BTP environment. Therefore, please use BAS instead of IDEs like VS Code&lt;/SPAN&gt;. &lt;A href="https://sap.github.io/cloud-sdk/docs/js/guides/bas#case-1-connection-to-an-on-premise-system" target="_self" rel="nofollow noopener noreferrer"&gt;Reference link&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the .env file, you need to add the&lt;A href="https://me.sap.com/notes/0003112360" target="_self" rel="noopener noreferrer"&gt;&amp;nbsp;destinations&lt;/A&gt; variable by obtaining the name and URL information of the destination from the Destinations page in the BTP Cockpit.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;destinations=[{"name":"demodestination","proxyHost":"http://127.0.0.1","proxyPort":"8887","url":"http://demodestination.dest"}]&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-137932966"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;I hope this helps you in your app development using CAP.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/connectivity-tests-before-executing-hybrid-testing-with-cap-connecting-to/ba-p/14090398"/>
    <published>2025-04-30T11:19:57.863000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/initializing-replication-from-sap-ase-to-sap-hdlre-using-bulk/ba-p/14084682</id>
    <title>Initializing Replication from SAP ASE to SAP HDLRE using Bulk Materialization</title>
    <updated>2025-05-06T21:49:45.593000+02:00</updated>
    <author>
      <name>ChrisBaker</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/189912</uri>
    </author>
    <content>&lt;P&gt;This article provides step-by-step instructions for setting up a real-time replication environment from SAP Adaptive Server Enterprise (ASE) On Premise to SAP HANA Cloud data lake Relational Engine (HDLRE) in a BTP subaccount, SAP Replication Server (SRS) and Cloud Connector.&amp;nbsp; Subscriptions are initialized using the bulk materialization capability to HDLRE introduced in SAP Replication Server 16.1 (released 2025-02-28).&lt;/P&gt;&lt;P&gt;Using bulk materialization allows existing data in the source ASE database to be materialized to HDLRE as part of the subscription definition, eliminating the need for a separate extraction and load step or starting with empty source tables.&lt;/P&gt;&lt;P&gt;Other than bulk materialization, the steps described are similar to those documented in&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/replicating-from-sap-adaptive-server-enterprise-to-sap-hana-cloud-datalake/ba-p/13992174" target="_self"&gt;Replicating from SAP Adaptive Server Enterprise to SAP HANA Cloud Datalake Relational Engine&lt;/A&gt;&amp;nbsp;except as follows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The target HDLRE will be defined in non CF-enabled subaccount (including the srs proxy connection service required).&lt;/LI&gt;&lt;LI&gt;A non-administrative HDLRE account will be defined as the table owner HDLRE and DSI connection from SRS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Full database replication is not possible as this is heterogenous replication.&amp;nbsp; Table level replication is used to replicate required tables.&amp;nbsp; Table level replication is described in documentation (&lt;A href="https://help.sap.com/docs/hana-cloud-data-lake/administration-guide-for-data-lake-relational-engine/overview-ase-and-srs-topic" target="_blank" rel="noopener noreferrer"&gt;Create an SAP Replication Server On-Premise Remote Server | SAP Help Portal&lt;/A&gt;).&amp;nbsp;&lt;/P&gt;&lt;P&gt;Using table level replication allows finer control over database replication as not all tables may need to be replicated.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Install, create and configure an ASE On Premise&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;ASE 16.1 is installed in the $SYBASE folder (Adaptive Server Enterprise/16.1 SP00 PL00/EBF 30672 SMP/P/x86_64/Linux 5.14.21-150400.24.147-default/ase161sp00pl00/3343/64-bit/FBO/Thu Feb 6 02:47:09 2025).&amp;nbsp; Instance SAMPLE_ASE is running on port 5000.&lt;/P&gt;&lt;P&gt;An empty 'tpcc' database (~6GB) will be used as the starting point on the ASE.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Install, create and configure an SRS On Premise.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SRS 16.1 is installed in its own $SYBASE path (Replication Server/16.1/EBF 30761 SP00 PL00 rs161sp00pl00/Linux AMD64/Linux 5.14.21-150400.24.136-default x86_64/3251/OPT64/Sun Dec 29 10:05:13 2024&lt;SPAN&gt;).&amp;nbsp; &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Create a SAMPLE_RS instance using $SYBASE/$SYBASE_REP/install/rs_init with a partition size of 4GB.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Once the SRS instance is created, run the following configuration commands:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;configure replication server set dsi_bulk_copy to "off"
configure replication server set dynamic_sql to "off"
configure replication server set memory_limit to "16384&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Parallel DSI's cannot be used for HDLRE as loading must be via a single connection, but catch up queues will be automatically created for bulk materialization.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Install and Start Cloud Connector On Premise&lt;/STRONG&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Download and install the latest cloud connector from&amp;nbsp;&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;.&amp;nbsp; As of this writing, the current version is 2.18.0.&amp;nbsp; For this blog, the Linux portable version will be used but the daemon version can be installed and run instead, if required.&lt;/P&gt;&lt;P data-unlink="true"&gt;Cloud connector requires a newer JRE.&amp;nbsp; SAP JRE can be downloaded from&amp;nbsp;&lt;A href="https://sap.github.io/SapMachine/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/SapMachine/&lt;/A&gt;.&amp;nbsp; For this writing, SAP JVM 21 (21.0.7) will be used and JAVA_HOME set accordingly.&lt;/P&gt;&lt;P data-unlink="true"&gt;Once installed, start the Cloud Connector.&lt;/P&gt;&lt;P data-unlink="true"&gt;Cloud Connector documentation can be found at:&amp;nbsp;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector&lt;/A&gt;.&amp;nbsp; If this is the first time connecting to Cloud Connector, several proscribed steps must be taken to connect as 'Administrator' and change default passwords.&lt;/P&gt;&lt;P data-unlink="true"&gt;&amp;nbsp;&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;4. Connect to BTP Cockpit&lt;/STRONG&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Connect to SAP BTP Cockpit (e.g.&amp;nbsp;&lt;A href="https://amer.cockpit.btp.cloud.sap" target="_blank" rel="noopener nofollow noreferrer"&gt;https://amer.cockpit.btp.cloud.sap&lt;/A&gt;) and access the sub account from the 'Overview' where the HDLRE instance will be created.&amp;nbsp;&lt;/P&gt;&lt;P data-unlink="true"&gt;Locate and copy the BTP subaccount id (see screenshot below):&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subaccount Details - Anonymized.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/222796i30DEEE93C35B481A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Subaccount Details - Anonymized.png" alt="Subaccount Details - Anonymized.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;&amp;nbsp;&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;5. Configure Cloud Connector&lt;/STRONG&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Connect to Cloud Connector (e.g.&amp;nbsp;&lt;A href="http://lintdev09a.development.c.na-us-1.cloud.sap:8443/" target="_blank" rel="noopener nofollow noreferrer"&gt;http://&amp;lt;cloudconnectorhost&amp;gt;:8443&lt;/A&gt;&amp;nbsp;) and configure a new subaccount using the subaccount number from above.&amp;nbsp; Fill in the proxy details if necessary and choose 'Configure manually'.&amp;nbsp; Fill in the dialog similar to the following using a valid BTP subaccount userid and password:&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CC add subaccount - Anonymized.png" style="width: 617px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/222802iB42D95A03AF04E60/image-size/large?v=v2&amp;amp;px=999" role="button" title="CC add subaccount - Anonymized.png" alt="CC add subaccount - Anonymized.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Note: if using MFA via an authenticator app for the login, append the time-generated code to the end of the password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Connector Overview - Anonymized.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/222766i029CDB48A1217B9D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Connector Overview - Anonymized.png" alt="Connector Overview - Anonymized.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Once added, select 'Cloud To On Premise' on the left menu under 'Replication Demo' and fill in the prompts of the dialogs as follows to add the Virtual to Internal System mapping:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Backend Type: Other SAP System&lt;/LI&gt;&lt;LI&gt;Protocol: TCP&lt;/LI&gt;&lt;LI&gt;Internal host: &amp;lt;name of CC host from 'hostname' shell command&amp;gt;&lt;/LI&gt;&lt;LI&gt;Port or Port Range: &amp;lt;port on which SRS is listening - from $SYBASE/interfaces file&amp;gt; (e.g. 11752)&lt;/LI&gt;&lt;LI&gt;Virtual Host: &amp;lt;SRS name from interfaces file&amp;gt; (e.g. SAMPLE_RS)&lt;/LI&gt;&lt;LI&gt;Virtual Port: &amp;lt;same port as above&amp;gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P data-unlink="true"&gt;On the 'Summary' dialog, ensure that 'Check Internal Host' is selected before pressing 'Finish'.&amp;nbsp; If there are any issues, corrections can be made from the presented list (example below):&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Add System Mapping result - Anonymized.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/222807i1D4D5797FB67CF2E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Add System Mapping result - Anonymized.png" alt="Add System Mapping result - Anonymized.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;&amp;nbsp;&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;6. Create Proxy Service in BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Before creating the HDLRE instance, a proxy service must be created in the BTP sub account.&lt;/P&gt;&lt;P data-unlink="true"&gt;Connect to the BTP subaccount, navigate to 'Serivces' -&amp;gt; 'Instances and Subscriptions'.&amp;nbsp; Create a new service instance using the below dialog example and select 'Create'.&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="New Proxy Instance.png" style="width: 739px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/255828i73768F1BA23C759E/image-size/large?v=v2&amp;amp;px=999" role="button" title="New Proxy Instance.png" alt="New Proxy Instance.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;Once created, select the '...' (Actions) menu and 'Create Service Binding'.&lt;/P&gt;&lt;P data-unlink="true"&gt;Use 'sample_rs' for the Binding Name and create the binding.&lt;/P&gt;&lt;P data-unlink="true"&gt;When the binding has been created, click on the link in the 'Credentials' column of the service and copy the JSON to use in the next step.&lt;/P&gt;&lt;P data-unlink="true"&gt;&amp;nbsp;&lt;/P&gt;&lt;P data-unlink="true"&gt;&lt;STRONG&gt;7. Create HDLRE instance in BTP&lt;/STRONG&gt;&lt;/P&gt;&lt;P data-unlink="true"&gt;SAP HANA Cloud Central must be used to create the HDLRE instance.&amp;nbsp; From BTP Cockpit, install (if necessary) 'SAP HANA Cloud' application from the 'tools' plan and 'Go to Application'.&lt;/P&gt;&lt;P data-unlink="true"&gt;Once connected and running SAP HANA Cloud Central, create a new HDLRE instance of type 'SAP HANA Cloud, Data Lake' in the 'Other Environments' runtime environment.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Instance Name: HDLRE&lt;/LI&gt;&lt;LI&gt;Allowed connections: Allow all IP addresses&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Enable data lake Relational Engine: yes&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Set and confirm HDLADMIN password&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Size: 2 VCPUs for each of the coordinator and workers&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Enable Cloud Connector: yes&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Service key: (paste the previously copied service binding JSON into the text box)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Allowed connections: Allow all IP addresses&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Mode: Configure to be most compatible with SAP IQ&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Leave the remaining details and press 'Create'.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once created, copy the coordinator SQL Endpoint for this instance to the clipboard using the '...' (Actions) -&amp;gt; 'Copy Other' menu for the instance:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="CopyEndpoint.png" style="width: 493px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/225707iC3EEC00A90CAC152/image-size/large?v=v2&amp;amp;px=999" role="button" title="CopyEndpoint.png" alt="CopyEndpoint.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This endpoint contains the FQDN and port (usually 443) of the instance coordinator.&amp;nbsp; This information is used in several of the next steps.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8.&amp;nbsp; Add the HDLRE and ASE endpoints to the SRS interfaces file.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Edit the $SYBASE/interfaces file for the SRS instance and add details for connections to the ASE and HDLRE.&amp;nbsp; Linux example:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;SAMPLE_RS
   master tcp ether &amp;lt;SRS instance host&amp;gt; 11752
   query tcp ether &amp;lt;SRS instance host&amp;gt; 11752

SAMPLE_RS_ERSSD
   master tcp ether localhost 11751
   query tcp ether localhost 11751

SAMPLE_ASE
   master tcp ether &amp;lt;ASE instance host&amp;gt; 5000
   query tcp ether &amp;lt;ASE instance host&amp;gt; 5000

HDLRE
   master tcp ether &amp;lt;FQDN from coordinator SQL Endpoint&amp;gt; 443 ssl="CN=hanacloud.ondemand.com"
   query tcp ether &amp;lt;FQDN from coordinator SQL Endpoint&amp;gt; 443 ssl="CN=hanacloud.ondemand.com"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;9.&amp;nbsp;Add the SRS endpoint to the ASE interfaces file.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Edit the $SYBASE/interfaces file for the ASE instance and add details for connections to the SRS.&amp;nbsp; &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Example:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;SAMPLE_ASE
   master tcp ether &amp;lt;ASE instance host&amp;gt; 5000
   query tcp ether &amp;lt;ASE instance host&amp;gt; 5000

SAMPLE_ASE_BS
   master tcp ether &amp;lt;ASE instance host&amp;gt; 5001
   query tcp ether &amp;lt;ASE instance host&amp;gt; 5001

SAMPLE_ASE_JSAGENT
   master tcp ether &amp;lt;ASE instance host&amp;gt; 4900
   query tcp ether &amp;lt;ASE instance host&amp;gt; 4900

SAMPLE_ASE_XP
   master tcp ether &amp;lt;ASE instance host&amp;gt;5002
   query tcp ether &amp;lt;ASE instance host&amp;gt;5002

SAMPLE_RS
   master tcp ether &amp;lt;SRS instance host&amp;gt; 11752
   query tcp ether &amp;lt;SRS instance host&amp;gt; 11752&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;10. Create the database and tables in ASE.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Connect to the ASE database using isql or DBISQL.&amp;nbsp; After creating the database, run the script below in the database to create the tables, columns, indexes and RI contraints:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;set quoted_identifier on
go

/*==============================================================*/
/* Table: CUSTOMER                                              */
/*==============================================================*/
create table CUSTOMER (
   C_ID                 int            default '0' not null,
   C_D_ID               smallint       default '0' not null,
   C_W_ID               smallint       default '0' not null,
   C_FIRST              varchar(16)                    null,
   C_MIDDLE             char(2)                        null,
   C_LAST               varchar(16)                    null,
   C_STREET_1           varchar(20)                    null,
   C_STREET_2           varchar(20)                    null,
   C_CITY               varchar(20)                    null,
   C_STATE              char(2)                        null,
   C_ZIP                char(9)                        null,
   C_PHONE              char(16)                       null,
   C_SINCE              DATETIME     default getdate() null,
   C_CREDIT             char(2)                        null,
   C_CREDIT_LIM         decimal(12,2)                  null,
   C_DISCOUNT           decimal(4,4)                   null,
   C_BALANCE            decimal(12,2)                  null,
   C_YTD_PAYMENT        decimal(12,2)                  null,
   C_PAYMENT_CNT        int                            null,
   C_DELIVERY_CNT       int                            null,
   C_DATA               varchar(500)                   null,
   constraint C_PRIMARY primary key (C_W_ID, C_D_ID, C_ID)
)
lock datarows
go

/*==============================================================*/
/* Index: C_C_ID                                                */
/*==============================================================*/
create index C_C_ID on CUSTOMER (
C_ID ASC
)
go

/*==============================================================*/
/* Index: C_D_ID                                                */
/*==============================================================*/
create index C_D_ID on CUSTOMER (
C_D_ID ASC
)
go

/*==============================================================*/
/* Index: C_W_ID                                                */
/*==============================================================*/
create index C_W_ID on CUSTOMER (
C_W_ID ASC
)
go

/*==============================================================*/
/* Table: DISTRICT                                              */
/*==============================================================*/
create table DISTRICT (
   D_ID                 smallint       default '0' not null,
   D_W_ID               smallint       default '0' not null,
   D_NAME               varchar(10)                    null,
   D_STREET_1           varchar(20)                    null,
   D_STREET_2           varchar(20)                    null,
   D_CITY               varchar(20)                    null,
   D_STATE              char(2)                        null,
   D_ZIP                char(9)                        null,
   D_TAX                decimal(4,4)                   null,
   D_YTD                decimal(12,2)                  null,
   D_NEXT_O_ID          int                            null,
   constraint D_PRIMARY primary key (D_W_ID, D_ID)
)
lock datarows
go

/*==============================================================*/
/* Index: D_D_ID                                                */
/*==============================================================*/
create index D_D_ID on DISTRICT (
D_ID ASC
)
go

/*==============================================================*/
/* Index: D_W_ID                                                */
/*==============================================================*/
create index D_W_ID on DISTRICT (
D_W_ID ASC
)
go

/*==============================================================*/
/* Table: HISTORY                                               */
/*==============================================================*/
create table HISTORY (
   H_C_ID               int                            null,
   H_C_D_ID             smallint                       null,
   H_C_W_ID             smallint                       null,
   H_D_ID               smallint                       null,
   H_W_ID               smallint           default '0' null,
   H_DATE               DATETIME     default getdate() null,
   H_AMOUNT             decimal(6,2)                   null,
   H_DATA               varchar(24)                    null
)
lock datarows
go

/*==============================================================*/
/* Table: ITEM                                                  */
/*==============================================================*/
create table ITEM (
   I_ID                 int            default '0' not null,
   I_IM_ID              int                            null,
   I_NAME               varchar(24)                    null,
   I_PRICE              decimal(5,2)                   null,
   I_DATA               varchar(50)                    null,
   constraint PK_ITEM primary key (I_ID)
)
lock datarows
go

/*==============================================================*/
/* Table: NEW_ORDER                                             */
/*==============================================================*/
create table NEW_ORDER (
   NO_O_ID              int            default '0' not null,
   NO_D_ID              smallint       default '0' not null,
   NO_W_ID              smallint       default '0' not null,
   constraint NO_PRIMARY primary key (NO_W_ID, NO_D_ID, NO_O_ID)
)
lock datarows
go

/*==============================================================*/
/* Table: ORDER                                                 */
/*==============================================================*/
create table "ORDER" (
   O_ID                 int            default '0' not null,
   O_D_ID               smallint       default '0' not null,
   O_W_ID               smallint       default '0' not null,
   O_C_ID               int                            null,
   O_ENTRY_D            DATETIME     default getdate() null,
   O_CARRIER_ID         int                            null,
   O_OL_CNT             smallint                       null,
   O_ALL_LOCAL          smallint                       null,
   constraint O_PRIMARY primary key (O_W_ID, O_D_ID, O_ID)
)
lock datarows
go

/*==============================================================*/
/* Index: O_O_ID                                                */
/*==============================================================*/
create index O_O_ID on "ORDER" (
O_ID ASC
)
go

/*==============================================================*/
/* Index: O_D_ID                                                */
/*==============================================================*/
create index O_D_ID on "ORDER" (
O_D_ID ASC
)
go

/*==============================================================*/
/* Index: O_W_ID                                                */
/*==============================================================*/
create index O_W_ID on "ORDER" (
O_W_ID ASC
)
go

/*==============================================================*/
/* Index: O_C_ID                                                */
/*==============================================================*/
create index O_C_ID on "ORDER" (
O_C_ID ASC
)
go

/*==============================================================*/
/* Table: ORDER_LINE                                            */
/*==============================================================*/
create table ORDER_LINE (
   OL_O_ID              int            default '0' not null,
   OL_D_ID              smallint       default '0' not null,
   OL_W_ID              smallint       default '0' not null,
   OL_NUMBER            int            default '0' not null,
   OL_I_ID              int                            null,
   OL_SUPPLY_W_ID       smallint                       null,
   OL_DELIVERY_D        DATETIME                       null,
   OL_QUANTITY          smallint                            null,
   OL_AMOUNT            decimal(6,2)                   null,
   OL_DIST_INFO         char(24)                       null,
   constraint OL_PRIMARY primary key (OL_W_ID, OL_D_ID, OL_O_ID, OL_NUMBER)
)
lock datarows
go

/*==============================================================*/
/* Index: IDX1                                                  */
/*==============================================================*/
create index IDX1 on ORDER_LINE (
OL_W_ID ASC,
OL_I_ID ASC,
OL_D_ID ASC,
OL_O_ID ASC
)
go

/*==============================================================*/
/* Index: IDX2                                                  */
/*==============================================================*/
create index IDX2 on ORDER_LINE (
OL_O_ID ASC,
OL_D_ID ASC,
OL_W_ID ASC
)
go

/*==============================================================*/
/* Index: OL_O_ID                                               */
/*==============================================================*/
create index OL_O_ID on ORDER_LINE (
OL_O_ID ASC
)
go

/*==============================================================*/
/* Index: OL_D_ID                                               */
/*==============================================================*/
create index OL_D_ID on ORDER_LINE (
OL_D_ID ASC
)
go

/*==============================================================*/
/* Index: OL_W_ID                                               */
/*==============================================================*/
create index OL_W_ID on ORDER_LINE (
OL_W_ID ASC
)
go

/*==============================================================*/
/* Index: OL_I_ID                                               */
/*==============================================================*/
create index OL_I_ID on ORDER_LINE (
OL_I_ID ASC
)
go

/*==============================================================*/
/* Index: OL_SUPPLY_W_ID                                        */
/*==============================================================*/
create index OL_SUPPLY_W_ID on ORDER_LINE (
OL_SUPPLY_W_ID ASC
)
go

/*==============================================================*/
/* Table: STOCK                                                 */
/*==============================================================*/
create table STOCK (
   S_I_ID               int            default '0' not null,
   S_W_ID               smallint       default '0' not null,
   S_QUANTITY           int            default '0' not null,
   S_DIST_01            char(24)                       null,
   S_DIST_02            char(24)                       null,
   S_DIST_03            char(24)                       null,
   S_DIST_04            char(24)                       null,
   S_DIST_05            char(24)                       null,
   S_DIST_06            char(24)                       null,
   S_DIST_07            char(24)                       null,
   S_DIST_08            char(24)                       null,
   S_DIST_09            char(24)                       null,
   S_DIST_10            char(24)                       null,
   S_YTD                int                            null,
   S_ORDER_CNT          int                            null,
   S_REMOTE_CNT         int                            null,
   S_DATA               varchar(50)                    null,
   constraint S_PRIMARY primary key (S_W_ID, S_I_ID)
)
lock datarows
go

/*==============================================================*/
/* Index: S_I_ID                                                */
/*==============================================================*/
create index S_I_ID on STOCK (
S_I_ID ASC
)
go

/*==============================================================*/
/* Index: S_W_ID                                                */
/*==============================================================*/
create index S_W_ID on STOCK (
S_W_ID ASC
)
go

/*==============================================================*/
/* Table: WAREHOUSE                                             */
/*==============================================================*/
create table WAREHOUSE (
   W_ID                 smallint       default '0' not null,
   W_NAME               varchar(10)                    null,
   W_STREET_1           varchar(20)                    null,
   W_STREET_2           varchar(20)                    null,
   W_CITY               varchar(20)                    null,
   W_STATE              char(2)                        null,
   W_ZIP                char(9)                        null,
   W_TAX                decimal(4,4)                   null,
   W_YTD                decimal(12,2)                  null,
   constraint W_PRIMARY primary key (W_ID)
)
lock datarows
go

alter table CUSTOMER
   add constraint C_FKEY_D foreign key (C_W_ID, C_D_ID)
      references DISTRICT (D_W_ID, D_ID)
go

alter table DISTRICT
   add constraint D_FKEY_W foreign key (D_W_ID)
      references WAREHOUSE (W_ID)
go

alter table HISTORY
   add constraint H_FKEY_C foreign key (H_C_W_ID, H_C_D_ID, H_C_ID)
      references CUSTOMER (C_W_ID, C_D_ID, C_ID)
go

alter table HISTORY
   add constraint H_FKEY_D foreign key (H_W_ID, H_D_ID)
      references DISTRICT (D_W_ID, D_ID)
go

alter table NEW_ORDER
   add constraint NO_FKEY_O foreign key (NO_W_ID, NO_D_ID, NO_O_ID)
      references "ORDER" (O_W_ID, O_D_ID, O_ID)
go

alter table "ORDER"
   add constraint O_FKEY_C foreign key (O_W_ID, O_D_ID, O_C_ID)
      references CUSTOMER (C_W_ID, C_D_ID, C_ID)
go

alter table ORDER_LINE
   add constraint OL_FKEY_O foreign key (OL_W_ID, OL_D_ID, OL_O_ID)
      references "ORDER" (O_W_ID, O_D_ID, O_ID)
go
alter table ORDER_LINE
   add constraint OL_FKEY_S foreign key (OL_SUPPLY_W_ID, OL_I_ID)
      references STOCK (S_W_ID, S_I_ID)
go

alter table STOCK
   add constraint S_FKEY_I foreign key (S_I_ID)
      references ITEM (I_ID)
go

alter table STOCK
   add constraint S_FKEY_W foreign key (S_W_ID)
      references WAREHOUSE (W_ID)
go&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;11. Create remote connection to SRS from HDLRE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Connect to the HDLRE endpoint using the HDLRE client using the Identification parameters:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Authentication: Database&lt;/LI&gt;&lt;LI&gt;User ID: HDLADMIN&lt;/LI&gt;&lt;LI&gt;Password: &amp;lt;password created in step 7&amp;gt;&lt;/LI&gt;&lt;LI&gt;Action: Connect to Data Lake IQ&lt;/LI&gt;&lt;LI&gt;Instance ID: &amp;lt;Instance ID from coordinator SQL Endpoint FQDN&amp;gt;&lt;/LI&gt;&lt;LI&gt;Landscape: &amp;lt;remainder of FQDN without Instance ID&amp;gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;or use the SQL Console of SAP HANA Cloud Central directly from the HDLRE instance.&lt;/P&gt;&lt;P&gt;(the following steps are documented at&amp;nbsp;&lt;A href="https://help.sap.com/docs/hana-cloud-data-lake/administration-guide-for-data-lake-relational-engine/overview-ase-and-srs-topic" target="_blank" rel="noopener noreferrer"&gt;Create an SAP Replication Server On-Premise Remote Server | SAP Help Portal&lt;/A&gt;.&amp;nbsp; Where differences exist, please follow the documentation).&lt;/P&gt;&lt;P&gt;Run the following SQL in the HDLRE console to create the connection to SRS required for replication to HDLRE:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;CREATE SERVER SAMPLE_RS class 'ASEODBC' 
    USING 'Host=sample_rs:11752;
    LocationID=repdemo;
    UseCloudConnector=ON';&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;(The 'LocationID' is the value created in step 5.&amp;nbsp; The 'Host' is the virtual host and port defined in step 5).&lt;/P&gt;&lt;P&gt;Create a new HDLRE login:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;create user tpcc identified by &amp;lt;password&amp;gt;;
grant create table to tpcc;
grant create procedure to tpcc;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Map the login for HDLRE to use with SRS:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;create externlogin tpcc to SAMPLE_RS
  remote login sa identified by '&amp;lt;SRS sa login password&amp;gt;';&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;12. Create the tables in HDLRE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Reconnect to the HDLRE SQL console using the new login created above.&amp;nbsp; Run the following script to create the tables, columns and indexes (no RI is defined in this script to allow only specific tables to be replicated if desired):&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;/*==============================================================*/
/* Table: CUSTOMER                                              */
/*==============================================================*/
create table CUSTOMER (
   C_ID                 integer                        not null default '0',
   C_D_ID               smallint                       not null default '0',
   C_W_ID               smallint                       not null default '0',
   C_FIRST              varchar(16)                    null,
   C_MIDDLE             char(2)                        null,
   C_LAST               varchar(16)                    null,
   C_STREET_1           varchar(20)                    null,
   C_STREET_2           varchar(20)                    null,
   C_CITY               varchar(20)                    null,
   C_STATE              char(2)                        null,
   C_ZIP                char(9)                        null,
   C_PHONE              char(16)                       null,
   C_SINCE              timestamp                      null default 'getdate()',
   C_CREDIT             char(2)                        null,
   C_CREDIT_LIM         decimal(12,2)                  null,
   C_DISCOUNT           decimal(4,4)                   null,
   C_BALANCE            decimal(12,2)                  null,
   C_YTD_PAYMENT        decimal(12,2)                  null,
   C_PAYMENT_CNT        integer                        null,
   C_DELIVERY_CNT       integer                        null,
   C_DATA               varchar(500)                   null,
   constraint C_PRIMARY primary key (C_W_ID, C_D_ID, C_ID) );

/*==============================================================*/
/* Index: C_C_ID                                                */
/*==============================================================*/
create HG index C_C_ID on CUSTOMER (
C_ID
);

/*==============================================================*/
/* Index: C_D_ID                                                */
/*==============================================================*/
create HG index C_D_ID on CUSTOMER (
C_D_ID
);

/*==============================================================*/
/* Index: C_W_ID                                                */
/*==============================================================*/
create HG index C_W_ID on CUSTOMER (
C_W_ID
);

/*==============================================================*/
/* Table: DISTRICT                                              */
/*==============================================================*/
create table DISTRICT (
   D_ID                 smallint                       not null default '0',
   D_W_ID               smallint                       not null default '0',
   D_NAME               varchar(10)                    null,
   D_STREET_1           varchar(20)                    null,
   D_STREET_2           varchar(20)                    null,
   D_CITY               varchar(20)                    null,
   D_STATE              char(2)                        null,
   D_ZIP                char(9)                        null,
   D_TAX                decimal(4,4)                   null,
   D_YTD                decimal(12,2)                  null,
   D_NEXT_O_ID          integer                        null,
   constraint D_PRIMARY primary key (D_W_ID, D_ID) );

/*==============================================================*/
/* Index: D_D_ID                                                */
/*==============================================================*/
create HG index D_D_ID on DISTRICT (
D_ID
);

/*==============================================================*/
/* Table: HISTORY                                               */
/*==============================================================*/
create table HISTORY (
   H_C_ID               integer                        null,
   H_C_D_ID             smallint                       null,
   H_C_W_ID             smallint                       null,
   H_D_ID               smallint                       null,
   H_W_ID               smallint                       null default '0',
   H_DATE               timestamp                      null default 'getdate()',
   H_AMOUNT             decimal(6,2)                   null,
   H_DATA               varchar(24)                    null );

/*==============================================================*/
/* Table: ITEM                                                  */
/*==============================================================*/
create table ITEM (
   I_ID                 integer                        not null default '0',
   I_IM_ID              integer                        null,
   I_NAME               varchar(24)                    null,
   I_PRICE              decimal(5,2)                   null,
   I_DATA               varchar(50)                    null,
   constraint PK_ITEM primary key (I_ID) );

/*==============================================================*/
/* Table: NEW_ORDER                                             */
/*==============================================================*/
create table NEW_ORDER (
   NO_O_ID              integer                        not null default '0',
   NO_D_ID              smallint                       not null default '0',
   NO_W_ID              smallint                       not null default '0',
   constraint NO_PRIMARY primary key (NO_W_ID, NO_D_ID, NO_O_ID) );

/*==============================================================*/
/* Table: "ORDER"                                               */
/*==============================================================*/
create table "ORDER" (
   O_ID                 integer                        not null default '0',
   O_D_ID               smallint                       not null default '0',
   O_W_ID               smallint                       not null default '0',
   O_C_ID               integer                        null,
   O_ENTRY_D            timestamp                      null default 'getdate()',
   O_CARRIER_ID         integer                        null,
   O_OL_CNT             smallint                       null,
   O_ALL_LOCAL          smallint                       null,
   constraint O_PRIMARY primary key (O_W_ID, O_D_ID, O_ID) );

/*==============================================================*/
/* Index: O_O_ID                                                */
/*==============================================================*/
create HG index O_O_ID on "ORDER" (
O_ID
);

/*==============================================================*/
/* Index: O_D_ID                                                */
/*==============================================================*/
create HG index O_D_ID on "ORDER" (
O_D_ID
);

/*==============================================================*/
/* Index: O_W_ID                                                */
/*==============================================================*/
create HG index O_W_ID on "ORDER" (
O_W_ID
);

/*==============================================================*/
/* Index: O_C_ID                                                */
/*==============================================================*/
create HG index O_C_ID on "ORDER" (
O_C_ID
);

/*==============================================================*/
/* Table: ORDER_LINE                                            */
/*==============================================================*/
create table ORDER_LINE (
   OL_O_ID              integer                        not null default '0',
   OL_D_ID              smallint                       not null default '0',
   OL_W_ID              smallint                       not null default '0',
   OL_NUMBER            integer                        not null default '0',
   OL_I_ID              integer                        null,
   OL_SUPPLY_W_ID       smallint                       null,
   OL_DELIVERY_D        timestamp                      null,
   OL_QUANTITY          smallint                       null,
   OL_AMOUNT            decimal(6,2)                   null,
   OL_DIST_INFO         char(24)                       null,
   constraint OL_PRIMARY primary key (OL_W_ID, OL_D_ID, OL_O_ID, OL_NUMBER) );

/*==============================================================*/
/* Index: IDX1                                                  */
/*==============================================================*/
create HG index IDX1 on ORDER_LINE (
OL_W_ID,
OL_I_ID,
OL_D_ID,
OL_O_ID
);

/*==============================================================*/
/* Index: IDX2                                                  */
/*==============================================================*/
create HG index IDX2 on ORDER_LINE (
OL_O_ID,
OL_D_ID,
OL_W_ID
);

/*==============================================================*/
/* Index: OL_O_ID                                               */
/*==============================================================*/
create HG index OL_O_ID on ORDER_LINE (
OL_O_ID
);

/*==============================================================*/
/* Index: OL_D_ID                                               */
/*==============================================================*/
create HG index OL_D_ID on ORDER_LINE (
OL_D_ID
);

/*==============================================================*/
/* Index: OL_W_ID                                               */
/*==============================================================*/
create HG index OL_W_ID on ORDER_LINE (
OL_W_ID
);

/*==============================================================*/
/* Index: OL_I_ID                                               */
/*==============================================================*/
create HG index OL_I_ID on ORDER_LINE (
OL_I_ID
);

/*==============================================================*/
/* Index: OL_SUPPLY_W_ID                                        */
/*==============================================================*/
create HG index OL_SUPPLY_W_ID on ORDER_LINE (
OL_SUPPLY_W_ID
);

/*==============================================================*/
/* Table: STOCK                                                 */
/*==============================================================*/
create table STOCK (
   S_I_ID               integer                        not null default '0',
   S_W_ID               smallint                       not null default '0',
   S_QUANTITY           integer                        not null default '0',
   S_DIST_01            char(24)                       null,
   S_DIST_02            char(24)                       null,
   S_DIST_03            char(24)                       null,
   S_DIST_04            char(24)                       null,
   S_DIST_05            char(24)                       null,
   S_DIST_06            char(24)                       null,
   S_DIST_07            char(24)                       null,
   S_DIST_08            char(24)                       null,
   S_DIST_09            char(24)                       null,
   S_DIST_10            char(24)                       null,
   S_YTD                integer                        null,
   S_ORDER_CNT          integer                        null,
   S_REMOTE_CNT         integer                        null,
   S_DATA               varchar(50)                    null,
   constraint S_PRIMARY primary key (S_W_ID, S_I_ID) );

/*==============================================================*/
/* Table: WAREHOUSE                                             */
/*==============================================================*/
create table WAREHOUSE (
   W_ID                 smallint                       not null default '0',
   W_NAME               varchar(10)                    null,
   W_STREET_1           varchar(20)                    null,
   W_STREET_2           varchar(20)                    null,
   W_CITY               varchar(20)                    null,
   W_STATE              char(2)                        null,
   W_ZIP                char(9)                        null,
   W_TAX                decimal(4,4)                   null,
   W_YTD                decimal(12,2)                  null,
   constraint W_PRIMARY primary key (W_ID) );&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;13. Create connection from SRS to ASE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As ASE holds the source database, the connection must be created using rs_init.&amp;nbsp; The rs_init resource file to use will be:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;sybinit.release_directory: &amp;lt;$SYBASE from SRS installation&amp;gt;
sybinit.product: rs
rs.rs_operation: rs_setup_db
#
rs.rs_name: SAMPLE_RS
rs.rs_rs_sa_user: sa
rs.rs_rs_sa_pass: &amp;lt;SRS sa password&amp;gt;
#
rs.rs_ds_name: SAMPLE_ASE

# sa login for this Adaptive Server
rs.rs_ds_sa_user: sa
rs.rs_ds_sa_password: &amp;lt;ASE sa password&amp;gt;

# name of the database that you are adding to the replicated data system
rs.rs_db_name: tpcc
rs.rs_needs_repagent: yes
# name of the user who will update replicated data
# default &amp;lt;rs_db_name&amp;gt;_maint
# rs.rs_db_maint_user: USE_DEFAULT
rs.rs_db_maint_user: tpcc_maint
rs.rs_db_maint_password: &amp;lt;create a pwd&amp;gt;

# rep agent login
rs.rs_ltm_rs_user: SAMPLE_RS_ra
rs.rs_ltm_rs_pass: &amp;lt;rs.rs_ltm_rs_pass from SAMPLE_RS rs_init creation resource file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;(User tpcc_maint will not actually be used as there will be no replication into the tpcc database.)&lt;/P&gt;&lt;P&gt;Create the resource file on the SRS server and submit to the SRS instance using the SRS host shell:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;$SYBASE/$SYBASE_REP/install/rs_init -r &amp;lt;resource file&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;14. Configure the ASE replication agent&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Connect to the ASE instance as 'sa' with isql/DBISQL and issue the following:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;use tpcc
go
exec sp_reptostandby tpcc, 'all'
go
exec sp_config_rep_agent tpcc,send_warm_standby_xacts,true
go
exec sp_stop_rep_agent tpcc
go
exec sp_start_rep_agent tpcc
go&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;15. Mark tables for replication&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;exec sp_setreptable ITEM, 'true', owner_on
exec sp_setreptable WAREHOUSE, 'true', owner_on
exec sp_setreptable DISTRICT, 'true', owner_on
exec sp_setreptable STOCK, 'true', owner_on
exec sp_setreptable CUSTOMER, 'true', owner_on
exec sp_setreptable 'ORDER', 'true', owner_on
exec sp_setreptable HISTORY, 'true', owner_on
exec sp_setreptable ORDER_LINE, 'true', owner_on
exec sp_setreptable NEW_ORDER, 'true', owner_on
go&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;16.&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Create connection from SRS to HDLRE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Connect to SAMPLE_RS as 'sa' using isql/DBISQL and issue the following RCL:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;create connection to HDLRE.iqaas using profile rs_ase_to_iq;standard
set username to tpcc
set password to "&amp;lt;password&amp;gt;"
set dsi_quoted_identifier to "always"
set dsi_compile_enable to "on"
set ddl_dup_detect to "off"
set dsi_compile_retry_threshold to "0"&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;17. Create database replication definitions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Remain connected to the SRS and issue the following RCL commands to create the table replication definitions:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;create replication definition ITEM_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'ITEM'
with replicate table named 'ITEM'
(
	I_ID    int,
	I_IM_ID int,
	I_NAME  varchar(24),
	I_PRICE decimal,
	I_DATA  varchar(50)
)
primary key (I_ID)
go
create replication definition WAREHOUSE_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'WAREHOUSE'
with replicate table named 'WAREHOUSE'
(
  W_ID int, 
  W_NAME     varchar(10),
  W_STREET_1 varchar(20),
  W_STREET_2 varchar(20),
  W_CITY     varchar(20),
  W_STATE    char(2),
  W_ZIP      char(9),
  W_TAX      decimal,
  W_YTD      decimal
)
primary key (W_ID)
go
create replication definition DISTRICT_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'DISTRICT'
with replicate table named 'DISTRICT'
(
   D_ID        int,
   D_W_ID      int,
   D_NAME      varchar(10),
   D_STREET_1  varchar(20),
   D_STREET_2  varchar(20),
   D_CITY      varchar(20),
   D_STATE     char(2),
   D_ZIP       char(9),
   D_TAX       decimal,
   D_YTD       decimal,
   D_NEXT_O_ID int
)
primary key (D_W_ID, D_ID)
go

create replication definition STOCK_rep with 
primary at SAMPLE_ASE.tpcc
with primary table named dbo.'STOCK' 
with replicate table named 'STOCK'
(
   S_I_ID       int,
   S_W_ID       int,
   S_QUANTITY   int,
   S_DIST_01    char(24),
   S_DIST_02    char(24),
   S_DIST_03    char(24),
   S_DIST_04    char(24),
   S_DIST_05    char(24),
   S_DIST_06    char(24),
   S_DIST_07    char(24),
   S_DIST_08    char(24),
   S_DIST_09    char(24),
   S_DIST_10    char(24),
   S_YTD        int,
   S_ORDER_CNT  int,
   S_REMOTE_CNT int,
   S_DATA       varchar(50)
 )
primary key (S_W_ID, S_I_ID)
go

create replication definition CUSTOMER_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'CUSTOMER'
with replicate table named 'CUSTOMER'
(
   C_ID           int,
   C_D_ID         int,
   C_W_ID         int,
   C_FIRST        varchar(16),
   C_MIDDLE       char(2),
   C_LAST         varchar(16),
   C_STREET_1     varchar(20),
   C_STREET_2     varchar(20),
   C_CITY         varchar(20),
   C_STATE        char(2),
   C_ZIP          char(9),
   C_PHONE        char(16),
   C_SINCE        datetime,
   C_CREDIT       char(2),
   C_CREDIT_LIM   decimal,
   C_DISCOUNT     decimal,
   C_BALANCE      decimal,
   C_YTD_PAYMENT  decimal,
   C_PAYMENT_CNT  integer,
   C_DELIVERY_CNT integer,
   C_DATA         varchar(500)
)
primary key (C_W_ID, C_D_ID, C_ID)
go

create replication definition ORDER_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'ORDER' 
with replicate table named 'ORDER' quoted
(
   O_ID         int,
   O_D_ID       int,
   O_W_ID       int,
   O_C_ID       int,
   O_ENTRY_D    datetime,
   O_CARRIER_ID int,
   O_OL_CNT     int,
   O_ALL_LOCAL  int
)
primary key (O_W_ID, O_D_ID, O_ID)
go

create replication definition HISTORY_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'HISTORY' 
with replicate table named 'HISTORY'
(
   H_C_ID   int,
   H_C_D_ID int,
   H_C_W_ID int,
   H_D_ID   int,
   H_W_ID   int,
   H_DATE   datetime,
   H_AMOUNT decimal,
   H_DATA   varchar(24)
)
primary key (H_C_ID, H_C_D_ID, H_W_ID, H_D_ID, H_W_ID)
go

create replication definition ORDER_LINE_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'ORDER_LINE' 
with replicate table named 'ORDER_LINE'
(
   OL_O_ID        int,
   OL_D_ID        int,
   OL_W_ID        int,
   OL_NUMBER      int,
   OL_I_ID        int,
   OL_SUPPLY_W_ID int,
   OL_DELIVERY_D  datetime,
   OL_QUANTITY    int,
   OL_AMOUNT      decimal,
   OL_DIST_INFO   char(24)
)
primary key (OL_W_ID, OL_D_ID, OL_O_ID, OL_NUMBER)
go

create replication definition NEW_ORDER_rep 
with primary at SAMPLE_ASE.tpcc
with primary table named dbo.'NEW_ORDER'
with replicate table named 'NEW_ORDER'
(
   NO_O_ID int,
   NO_D_ID int,
   NO_W_ID int
)
primary key (NO_W_ID, NO_D_ID, NO_O_ID)
go&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;18. Load data into ASE database&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In this example, the application used to load the data performs the loading of data using java.sql.PreparedStatement.executeBatch() and java.sql.PreparedStatement.executeUpdate().&lt;/P&gt;&lt;P&gt;After loading the ASE database contains the following record counts:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt; tablename            records
 -------------------- --------------------
 ITEM                               100000
 DISTRICT                               10
 WAREHOUSE                               1
 STOCK                              100000
 CUSTOMER                            30000
 ORDER                               30000
 ORDER_LINE                         300271
 HISTORY                             30000
 NEW_ORDER                            9000&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;19. Create and validate the table subscriptions for HDLRE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;(Do not apply any transactions to the source database while performing the next steps)&lt;/P&gt;&lt;P&gt;Subscription creation:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;create subscription HDLRE_ITEM_sub for ITEM_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_WAREHOUSE_sub for WAREHOUSE_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_DISTRICT_sub for DISTRICT_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_STOCK_sub for STOCK_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_CUSTOMER_sub for CUSTOMER_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_ORDER_sub for ORDER_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_HISTORY_sub for HISTORY_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_ORDER_LINE_sub for ORDER_LINE_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go

create subscription HDLRE_NEW_ORDER_sub for NEW_ORDER_rep
with replicate at HDLRE.iqaas
without holdlock 
direct_load
user tpcc password &amp;lt;password&amp;gt;
subscribe to truncate table
go&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A separate subscription thread is spawned in the SRS server for each table.&amp;nbsp; Setting a larger memory configuration in Step 2 allows the subscritions to materialize in parallel&amp;nbsp;(see example 'admin who' output below):&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;1&amp;gt; admin who
2&amp;gt; go
 Spid Name            State                          Info
 ---- --------------- ------------------------------ ------------------------------------------------------------
   28 DSI EXEC        Awaiting Command               101(1) SAMPLE_RS_ERSSD.SAMPLE_RS_ERSSD
   18 DSI             Awaiting SQM writer            101 SAMPLE_RS_ERSSD.SAMPLE_RS_ERSSD
   14 SQM             Awaiting Message               101:0 SAMPLE_RS_ERSSD.SAMPLE_RS_ERSSD
      DSI EXEC        Suspended                      102(1) SAMPLE_ASE.tpcc
      DSI             Suspended                      102 SAMPLE_ASE.tpcc
   22 DIST            Awaiting Message               102 SAMPLE_ASE.tpcc
   27 SQT             Awaiting Wakeup                102:1  DIST SAMPLE_ASE.tpcc
   16 SQM             Awaiting Message               102:1 SAMPLE_ASE.tpcc
   15 SQM             Awaiting Message               102:0 SAMPLE_ASE.tpcc
   31 REP AGENT       Awaiting Command               SAMPLE_ASE.tpcc
  101 DSI EXEC        Awaiting Command               103(1) HDLRE.iqaas
   99 DSI             Awaiting SQM writer            103 HDLRE.iqaas
   17 SQM             Awaiting Message               103:0 HDLRE.iqaas
   20 dSUB            Active
    6 dCM             Awaiting Message
   12 dAIO            Awaiting Message
   24 dREC            Sleeping                       dREC
   13 dDELSEG         Awaiting Message
   44 USER            Active                         sa
  172 USER            Awaiting Command               sa
  173 USER            Awaiting Command               sa
  174 USER            Awaiting Command               sa
  175 USER            Awaiting Command               sa
  102 SUB             Awaiting Wakeup                HDLRE_ITEM_sub
  112 SUB             Active                         HDLRE_DISTRICT_sub
  115 SUB             Awaiting Wakeup                HDLRE_STOCK_sub
  122 SUB             Active                         HDLRE_CUSTOMER_sub
  127 SUB             Active                         HDLRE_ORDER_sub
  139 SUB             Awaiting Wakeup                HDLRE_ORDER_LINE_sub
    5 dALARM          Awaiting Wakeup
   25 dSYSAM          Sleeping&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Each subscription can be validated as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;check subscription HDLRE_ITEM_sub for ITEM_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_WAREHOUSE_sub for WAREHOUSE_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_DISTRICT_sub for DISTRICT_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_STOCK_sub for STOCK_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_CUSTOMER_sub for CUSTOMER_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_ORDER_sub for ORDER_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_HISTORY_sub for HISTORY_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_ORDER_LINE_sub for ORDER_LINE_rep
with replicate at HDLRE.iqaas
go
check subscription HDLRE_NEW_ORDER_sub for NEW_ORDER_rep
with replicate at HDLRE.iqaas
go&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;While a subscription is being materialized, an additional line of output showing the progress of materialization will be output when checked.&amp;nbsp; e.g.:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;Subscription HDLRE_ORDER_LINE_sub is ACTIVE at the replicate.
Subscription HDLRE_ORDER_LINE_sub is ACTIVE at the primary.
Subscriptions HDLRE_ORDER_LINE_sub progress: initial loading, 94% done, 15923 commands remaining.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;When materialization is complete, the 'SUB' thread will not show in 'admin who' output and the additional progress output will be removed from the 'check subscription' output.&amp;nbsp;&lt;/P&gt;&lt;P&gt;The record counts in HDLRE will match:&lt;/P&gt;&lt;pre class="lia-code-sample language-sql"&gt;&lt;code&gt;ITEM         100000
DISTRICT         10
WAREHOUSE         1
STOCK        100000
CUSTOMER      30000
ORDER         30000
ORDER_LINE   300271
HISTORY       30000
NEW_ORDER      9000&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;20. Run transactional load on ASE database&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;When materialization is complete for all subscriptions, transactions can be started on the source ASE database.&lt;/P&gt;&lt;P&gt;Replication will continue as more transactions are applied at the source database.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Finally&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;That's it!&lt;/P&gt;&lt;P&gt;Thanks to Rob Waywell, Ashutosh Singh, Jim Summers, John Smirnios, Mark Mumy and many others for their work on contributing to this blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/initializing-replication-from-sap-ase-to-sap-hdlre-using-bulk/ba-p/14084682"/>
    <published>2025-05-06T21:49:45.593000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-connector-scc-integrating-sap-business-technology-platform-sap/ba-p/14101843</id>
    <title>SAP Cloud Connector (SCC): integrating SAP Business Technology Platform (SAP BTP) to on-premise</title>
    <updated>2025-05-15T02:32:16.145000+02:00</updated>
    <author>
      <name>jkmaeda</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/154392</uri>
    </author>
    <content>&lt;H1 id="2fd0" id="toc-hId-1601310185"&gt;Introduction&lt;/H1&gt;&lt;P class=""&gt;Connecting SAP BTP to the on-premise systems is just a pre-requisite to enable customers’ transformation. Usually, this first step is unclear and details are missed as well. This article aims to provide a real use case scenario that is quite common to many SAP customers and give you an overview of different aspects to quickly get yourself familiar with this topic.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="efb4" id="toc-hId-1404796680"&gt;Hybrid Integration Scope&lt;/H1&gt;&lt;P class=""&gt;The &lt;A class="" href="https://discovery-center.cloud.sap/protected/index.html#/serviceCatalog/cloud-integration-automation" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;SAP Cloud Integration Automation Service (CIAS)&lt;/A&gt; provides guided workflows for 100+ integration scenarios. However, it is only available for limited regions. Alternatively, the &lt;A class="" href="https://help.sap.com/docs/cloud-integration-automation/user-guide/using-maintenance-planner" target="_blank" rel="noopener ugc noreferrer"&gt;SAP Maintenance Planner&lt;/A&gt; could be used as below:&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_0-1747268364196.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261272i6B3B786BF7277CB0/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_0-1747268364196.png" alt="jkmaeda711_0-1747268364196.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;A class="" href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector" target="_blank" rel="noopener ugc noreferrer"&gt;SAP Cloud Connector&lt;/A&gt; are usually deployed for three-system landscape: Development, Test and Production, which connects cloud applications to on-premise systems, i.e., SAP BTP and SAP ERP.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_1-1747268364200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261271i9D7E196175EDF9DB/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_1-1747268364200.png" alt="jkmaeda711_1-1747268364200.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H1 id="4478" id="toc-hId-1208283175"&gt;SAP BTP Connectivity: Cloud Connector and Principal Propagation&lt;/H1&gt;&lt;P class=""&gt;SAP BTP Connectivity lets you connect your SAP BTP applications to other Internet resources, or to your on-premise systems running in isolated networks. It provides an extensive set of features to choose different connection types and authentication methods. Using its configuration options, you can tailor access exactly to your needs.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_2-1747268364201.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261273iC727B868BE2B6E77/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_2-1747268364201.png" alt="jkmaeda711_2-1747268364201.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="8d15" id="toc-hId-1011769670"&gt;SAP Cloud Connector&lt;/H1&gt;&lt;UL class=""&gt;&lt;LI&gt;A single Cloud Connector instance can connect to multiple SAP BTP subaccounts, each connection requiring separate authentication and defining an own set of configuration.&lt;/LI&gt;&lt;LI&gt;Usually, three-system landscape for SAP BTP are implemented according to the &lt;A class="" href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector-sizing" target="_blank" rel="noopener ugc noreferrer"&gt;Sizing Recommendations&lt;/A&gt; and this pilot. The Virtual Machine can be easily and quickly scaled up.&lt;/LI&gt;&lt;LI&gt;You can connect an arbitrary number of SAP and non-SAP systems to a single Cloud Connector instance.&lt;/LI&gt;&lt;LI&gt;The on-premise system does not need to be touched when used with the Cloud Connector, unless you configure trust between the Cloud Connector and your on-premise system. A trust configuration is required, for example, for principal propagation (single sign-on), see &lt;A class="" href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configuring-principal-propagation" target="_blank" rel="noopener ugc noreferrer"&gt;Configuring Principal Propagation&lt;/A&gt; .&lt;/LI&gt;&lt;LI&gt;Usually, SAP customers need to enable &lt;A class="" href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-principal-propagation-via-sap-web-dispatcher" target="_blank" rel="noopener ugc noreferrer"&gt;Principal Propagation via the SAP Web Dispatcher&lt;/A&gt; .&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_3-1747268364200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261276i61AD4C163574DC83/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_3-1747268364200.png" alt="jkmaeda711_3-1747268364200.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;UL class=""&gt;&lt;LI&gt;You can operate the Cloud Connector in a high availability mode. To achieve this, you must install a second (redundant) Cloud Connector (shadow instance), which takes over from the master instance in case of a downtime.&lt;/LI&gt;&lt;LI&gt;The Cloud Connector also supports the communication direction from the on-premise network to the SAP BTP subaccount, using a database tunnel that lets you connect common ODBC/JDBC database tools to SAP HANA as well as other available databases in SAP BTP.&lt;/LI&gt;&lt;LI&gt;The figure below shows a system landscape in which the Cloud Connector is used for secure connectivity between SAP BTP applications and on-premise systems.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_4-1747268364201.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261274i3860E2DA160343FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_4-1747268364201.png" alt="jkmaeda711_4-1747268364201.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;H1 id="4df1" id="toc-hId-815256165"&gt;Principal Propagation&lt;/H1&gt;&lt;P class=""&gt;The Connectivity service provides a secure way of forwarding the identity of a cloud user to the Cloud Connector, and from there to an on-premise system. This process is called principal propagation.&lt;/P&gt;&lt;P class=""&gt;It uses a SAML token as exchange format for the user information. User mapping is done in the back end. The token is forwarded either directly, or an X.509 certificate is generated, which is then used in the backend.&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_5-1747268364200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261275i5119A308484802BB/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_5-1747268364200.png" alt="jkmaeda711_5-1747268364200.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;OL class=""&gt;&lt;LI&gt;The user authenticates at the cloud application front end via the IdP (Identity Provider) using a standard SAML Web SSO profile. When the backend connection is established by the cloud application, the destination service (re)uses the received SAML assertion to create the connection to the on-premise backend system (BE1-BEm).&lt;/LI&gt;&lt;LI&gt;The Cloud Connector validates the received SAML assertion for a second time, extracts the attributes, and uses its STS (Security Token Service) component to issue a new token (an X.509 certificate) with the same or similar attributes to assert the identity to the backend.&lt;/LI&gt;&lt;LI&gt;The Cloud Connector and the cloud application share the same SAML service provider identity, which means that the trust is only set up once in the IdP.&lt;/LI&gt;&lt;/OL&gt;&lt;P class=""&gt;For more information, you can also watch the 5-minute video of &lt;A class="" href="https://sapvideoa35699dc5.hana.ondemand.com/?entry_id=1_7thvmx8x" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;SAP BTP Core Services: Principal Propagation&lt;/A&gt; from the SAP Business Technology Platform Workshop: Hybrid Security, or more details in the YouTube video below from SAP TechEd: Single-Sign On and Principal Propagation in Multi-Cloud Environments.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="b03a" id="toc-hId-618742660"&gt;Security Considerations&lt;/H1&gt;&lt;P class=""&gt;You can find the information we need on security, compliance, privacy, and cloud service performance on &lt;A class="" href="https://www.sap.com/about/trust-center.html" target="_blank" rel="noopener ugc noreferrer"&gt;SAP Trust Centre&lt;/A&gt; . There you can also find and request the right SAP compliance documents for our business needs including ISO/IEC certifications, SOC reports, Bridge letters, and attestations.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="c0ce" id="toc-hId-422229155"&gt;Network Considerations&lt;/H1&gt;&lt;UL class=""&gt;&lt;LI&gt;For the SAP Cloud Connector, the internal network must allow access to the required ports; the specific configuration depends on the firewall software used. The default ports are 80 for HTTP and 443 for HTTPS. For RFC communication, you need to open a gateway port (default: 33+instance number and an arbitrary message server port. For a connection to a HANA Database (on SAP BTP) via JDBC, you need to open an arbitrary outbound port in your network. Mail (SMTP) communication is not supported.&lt;/LI&gt;&lt;LI&gt;Application runs under the default domain of SAP BTP, &lt;A class="" href="http://hana.ondemand.com/" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;hana.ondemand.com&lt;/A&gt; and cloud.sap which must be whitelisted in Zscaler Proxy and allowed in the firewall.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="59b4" id="toc-hId-225715650"&gt;Environment Considerations&lt;/H1&gt;&lt;P class=""&gt;Environments constitute the actual platform-as-a-service offering of SAP BTP that allows for the development and administration of business applications. Environments are anchored in SAP BTP on subaccount level.&lt;/P&gt;&lt;P class=""&gt;Each environment comes equipped with specific tools, technologies, and runtimes that you need to build applications. So a multi-environment subaccount is your single address to host a variety of applications and offer diverse development options. One advantage of using different environments in one subaccount is that you only need to manage users, authorizations, and entitlements once per subaccount, and thus grant more flexibility to your developers.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_6-1747268364201.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261278iF4B5CBD55102A3F8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="jkmaeda711_6-1747268364201.png" alt="jkmaeda711_6-1747268364201.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P class=""&gt;To actually use an environment in a subaccount, you need to enable it by creating an instance of that environment:&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Cloud Foundry&lt;/STRONG&gt;: The Cloud Foundry environment allows you to create polyglot cloud applications in Cloud Foundry. It contains the SAP BTP, Cloud Foundry runtime service, which is based on the open-source application platform managed by the Cloud Foundry Foundation.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;ABAP Environment&lt;/STRONG&gt;: Within the Cloud Foundry environment, you can create a new space for ABAP development. This is what we refer to as the ABAP environment. It allows you to create extensions for ABAP-based products, such as SAP S/4HANA Cloud, and develop new cloud applications. You can transform existing ABAP-based custom code or extensions to the cloud.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Kyma Environment&lt;/STRONG&gt;: SAP BTP, Kyma runtime provides a fully managed cloud-native Kubernetes application runtime based on the open-source project “Kyma”. Based on modular building blocks, Kyma runtime includes all the necessary capabilities to simplify the development and to run enterprise-grade cloud-native applications.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Neo Environment&lt;/STRONG&gt;: Available in SAP’s data centres that are being migrated to multi-cloud instances, so it is irrelevant for now.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="0851" id="toc-hId-29202145"&gt;Operational Considerations&lt;/H1&gt;&lt;P class=""&gt;You can manage the account and monitor the SAP BTP services from the SAP BTP cockpit. When using cloud management tools feature set B, choose &lt;A class="" href="https://cockpit.btp.cloud.sap/" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;https://cockpit.btp.cloud.sap&lt;/A&gt; to access the cockpit. Depending on your own geo location this URL will redirect you to the closest regional Cockpit URL.&lt;/P&gt;&lt;P class=""&gt;SAP BTP offers various native tools for monitoring and operating the application, optionally complemented by third-party offerings, in case you need deep monitoring of cloud-native applications.&lt;/P&gt;&lt;P class=""&gt;For hybrid scenarios across the SAP portfolio, or if we already have an operations process in place, customers can also integrate operation aspects of SAP BTP into strategic operation platforms (such as SAP Solution Manager, and SAP Cloud ALM).&lt;/P&gt;&lt;P class=""&gt;If we want to monitor the Cloud Connector with the SAP Solution Manager, we can install a host agent on the machine of the Cloud Connector and register the Cloud Connector on our system by &lt;A class="" href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-solution-management-integration" target="_blank" rel="noopener ugc noreferrer"&gt;configuring the solution management integration&lt;/A&gt; .&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="2468" id="toc-hId--167311360"&gt;Backup &amp;amp; Recovery&lt;/H1&gt;&lt;P class=""&gt;Backup and recovery of data stored in the following services are performed by SAP. For other services, we can follow &lt;A class="" href="https://help.sap.com/docs/btp/best-practices/configuring-backup" target="_blank" rel="noopener ugc noreferrer"&gt;SAP best practices to back up our configurations&lt;/A&gt; .&lt;/P&gt;&lt;P class=""&gt;SAP maintains backups of the data for disaster recovery. If customer account is deleted, SAP may have our data in our backup system for the length of our backup cycle.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="43cd" id="toc-hId-405915218"&gt;Performance Management&lt;/H1&gt;&lt;P class=""&gt;You can find the information we need on security, compliance, privacy, and cloud service performance on &lt;A class="" href="https://www.sap.com/about/trust-center.html" target="_blank" rel="noopener ugc noreferrer"&gt;SAP Trust Centre&lt;/A&gt; . There you can gain insights on current availability and performance history of SAP cloud services worldwide.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="0021" id="toc-hId-209401713"&gt;Reliability&lt;/H1&gt;&lt;P class=""&gt;You can find the information we need on security, compliance, privacy, and cloud service performance on &lt;A class="" href="https://www.sap.com/about/trust-center.html" target="_blank" rel="noopener ugc noreferrer"&gt;SAP Trust Centre&lt;/A&gt; . There you can find various agreement documents for cloud, software, and service offerings from SAP. Cloud Service Agreement comprises an Order Form, Supplemental Terms and Conditions, Support Schedule, Service Level Agreement, Data Processing Agreement and General Terms and Conditions.&lt;/P&gt;&lt;P class=""&gt;You can also follow the availability of the platform at SAP Trust Center. You can check:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;the availability by service on the SAP BTP tile of the Cloud Status tab page;&lt;/LI&gt;&lt;LI&gt;the availability by region on the Data Center tab page.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;In addition, you can get a personalised, at-a-glance view of additional SAP BTP offerings with &lt;A class="" href="https://support.sap.com/en/my-support/systems-installations/cac.html" target="_blank" rel="noopener ugc noreferrer"&gt;SAP Cloud Availability Center&lt;/A&gt; in &lt;A class="" href="https://me.sap.com/" target="_blank" rel="noopener ugc noreferrer"&gt;SAP for Me&lt;/A&gt; , such as SAP BTP Integration.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="e4d0" id="toc-hId-12888208"&gt;User Access Management&lt;/H1&gt;&lt;P class=""&gt;First of all, it is important to understand that there are two different types of users when working with and on the SAP BTP: platform users and business users.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Platform users&lt;/STRONG&gt; are usually developers, administrators, or operators who deploy, administer, and troubleshoot applications and services on SAP BTP. For platform users, the default identity provider is SAP ID service.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Business users&lt;/STRONG&gt; use the applications that are deployed to SAP BTP. For example, the users of your deployed application or users of subscribed apps or services, such as SAP Business Application Studio are business users.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jkmaeda711_7-1747268364201.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/261277i554FAF84FE884BFF/image-size/large?v=v2&amp;amp;px=999" role="button" title="jkmaeda711_7-1747268364201.png" alt="jkmaeda711_7-1747268364201.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P class=""&gt;&lt;STRONG&gt;Platform Users&lt;/STRONG&gt;: Member on Global — and subaccount, members on space level. Authentication configuration at Platform IDP, on Global Account level.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Application Developer/Users: &lt;/STRONG&gt;User that use Subscriptions and/or Market Place Services. Developers or Business developer. Authentication configuration at IDP on subaccount level.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Business User: &lt;/STRONG&gt;User that use business apps. Authentication configuration at IDP on subaccount level.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Member management&lt;/STRONG&gt; refers to managing permissions for platform users. A member is a user who is assigned to an SAP BTP global account or subaccount. Administrators can add users to global accounts and subaccounts and assign roles to them as needed. You can use predefined roles, for example the administrator role for managing subaccount members.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;User management&lt;/STRONG&gt; refers to managing authentication and authorization for your business users.&lt;/P&gt;&lt;P class=""&gt;No user identities are held on the SAP BTP. However, domain-dependent system and service role and groups are used.&lt;/P&gt;&lt;P class=""&gt;These roles and groups are either created directly on the SAP BTP, for example, or existing ones are imported and mapped to the Platform Roles or Groups. This is done with the SAP Cloud Identity Provisioning Service.&lt;/P&gt;&lt;P class=""&gt;You can identify the following user types. A developer can also be a business user.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="4713" id="toc-hId--183625297"&gt;Implementation Considerations&lt;/H1&gt;&lt;UL class=""&gt;&lt;LI&gt;Regularly check the &lt;A class="" href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?library=library.txt&amp;amp;show=book%21BO_EC8330B09B97CDBE#slide!SL_120BDFE08096029D" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;SAP Release Navigator for SAP BTP&lt;/A&gt; for the new available features.&lt;/LI&gt;&lt;LI&gt;Regularly check the &lt;A class="" href="https://roadmaps.sap.com/board?PRODUCT=42F2E964FAAF1EDA9FF753E17F3000E5&amp;amp;range=CURRENT-LAST" target="_blank" rel="noopener ugc noreferrer"&gt;SAP BTP Roadmap&lt;/A&gt; for the planned futures.&lt;/LI&gt;&lt;LI&gt;Regularly check the &lt;A class="" href="https://help.sap.com/docs/sap-btp-guidance-framework/guidance-framework/what-is-sap-btp-guidance-framework" target="_blank" rel="noopener ugc noreferrer"&gt;SAP BTP Guidance Framework&lt;/A&gt; for architects, developers, and administrators.&lt;/LI&gt;&lt;LI&gt;Regularly check the &lt;A class="" href="https://discovery-center.cloud.sap/index.html" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;SAP Discovery Centre&lt;/A&gt; for missions, services, and content to help you understand and use SAP BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="413d" id="toc-hId--380138802"&gt;Future Recommendations&lt;/H1&gt;&lt;UL class=""&gt;&lt;LI&gt;Define enterprise technology strategy and guidance, and review the SAP’s product roadmap and future direction to ensure sustainable solutions and access to the latest innovations like SAP Business AI.&lt;/LI&gt;&lt;LI&gt;In order to protect the investment, build business continuity and resilience, SAP customers should also consider the investment in SAP latest solutions and technologies, i.e., SAP S/4HANA, SAP BTP, SAP CAR, SAP Fiori.&lt;/LI&gt;&lt;LI&gt;Holistic approach required to establish an enterprise ommnichannel offer platform.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="6384" id="toc-hId--576652307"&gt;References&lt;/H1&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;A class="" href="https://learning.sap.com/learning-journeys/connecting-sap-btp-and-on-premise-systems-using-the-cloud-connector" target="_blank" rel="noopener ugc noreferrer"&gt;Learning Journey: Connecting SAP BTP and On-Premise Systems using the Cloud Connector&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://discovery-center.cloud.sap/serviceCatalog/sap-omnichannel-promotion-pricing" target="_blank" rel="noopener ugc nofollow noreferrer"&gt;SAP Omnichannel Promotion Pricing services&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blogs-by-members/sap-cloud-connector-connect-to-an-on-premises-system-when-there-is-no/ba-p/13417816" target="_blank" rel="ugc"&gt;SAP Cloud Connector: Connect to an On-Premises sys… — SAP Community&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-connector-scc-integrating-sap-business-technology-platform-sap/ba-p/14101843"/>
    <published>2025-05-15T02:32:16.145000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-members/building-a-hybrid-landscape-decentralized-sap-ewm-with-s-4hana-cloud-public/ba-p/14113490</id>
    <title>Building a Hybrid Landscape: Decentralized SAP EWM with S/4HANA Cloud Public Edition</title>
    <updated>2025-05-28T11:01:18.217000+02:00</updated>
    <author>
      <name>Jayant_Pawar1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/618503</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Overview&lt;/STRONG&gt;&lt;BR /&gt;Integrating SAP Extended Warehouse Management (EWM) with SAP S/4HANA Cloud (Public Edition) brings advanced warehouse operations and core ERP processes into real-time alignment. In a decentralized deployment—where EWM runs on a separate system—interfaces must be configured for master data replication and transaction exchange so that inventory movements, deliveries and warehouse tasks remain in sync with S/4HANA Cloud. SAP fully supports this scenario using modern, cloud-friendly integration tools. This guide presents the available integration approaches, an ideal architecture, step-by-step instructions and best practices, including security considerations and prerequisites.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Supported Integration Methods &amp;amp; Technologies&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Integration Suite (Cloud Integration)&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Serves as the central iPaaS for connecting S/4HANA Cloud to external systems.&lt;/LI&gt;&lt;LI&gt;Provides pre‑built connectors, mapping tools and standard integration packages to accelerate setup.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Whitelisted S/4HANA Cloud APIs (OData, SOAP)&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Only RESTful OData and SOAP services (including SOAP‑wrapped IDoc structures) are available for integration.&lt;/LI&gt;&lt;LI&gt;Standard APIs cover delivery creation, goods movement confirmation and other warehouse processes, enabling synchronous, real‑time communication between systems.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;IDoc Message Exchange via Middleware&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Traditional ALE/IDoc formats (e.g., MATMAS, DEBMAS) are sent through the Integration Suite rather than direct RFC.&lt;/LI&gt;&lt;LI&gt;Provides near‑real‑time replication of master data and transactional messages.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Event‑Driven Integration with SAP Event Mesh&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;S/4HANA Cloud publishes business events (e.g., "Outbound Delivery Created") to Event Mesh.&lt;/LI&gt;&lt;LI&gt;An event‑based approach triggers integration flows instantly, reducing polling and enabling decoupled, asynchronous updates.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Recommended Architecture &amp;amp; Components&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Hub‑and‑Spoke Model&lt;/STRONG&gt;: SAP Integration Suite acts as the central hub, routing data between S/4HANA Cloud and EWM.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Communication Arrangements&lt;/STRONG&gt;: Defined in S/4HANA Cloud to specify which APIs or events are used and the target endpoints on BTP.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Adapters &amp;amp; Cloud Connector&lt;/STRONG&gt;: Use HTTP(S)/SOAP adapters for S/4 calls and IDoc/RFC adapters for EWM, secured via the SAP Cloud Connector when EWM resides on-premises.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Pre‑Built Content&lt;/STRONG&gt;: Leverage SAP’s integration packages from the API Business Hub or Best Practice Explorer where available.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Secure Connectivity&lt;/STRONG&gt;: All communication over encrypted HTTPS, with OAuth or certificate‑based authentication and minimal firewall exposure.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Integration Process – High-Level Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Activate Scope &amp;amp; Prepare Systems&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Confirm relevant EWM integration scope items are included in the S/4HANA Cloud project (e.g., outbound, inbound, STO, physical inventory).&lt;/LI&gt;&lt;LI&gt;Ensure EWM runs in decentralized mode on a compatible release and basic warehouse structure is configured.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Set Up Connectivity &amp;amp; Middleware&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Install and configure SAP Cloud Connector for secure access to on‑prem EWM.&lt;/LI&gt;&lt;LI&gt;Provision Integration Suite tenant, create destinations, import or build iFlows for each scenario.&lt;/LI&gt;&lt;LI&gt;Configure Communication Systems and Arrangements in S/4HANA Cloud for each API or event.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Master Data Replication&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Synchronize materials, batches and business partners via IDoc or OData APIs through the Integration Suite.&lt;/LI&gt;&lt;LI&gt;Perform initial data loads to ensure EWM has up‑to‑date master records before transactions flow.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Transactional Integration&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Outbound&lt;/STRONG&gt;: Sales order → outbound delivery → delivery distribution → EWM picks/ships → goods issue confirmation back to ERP.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Inbound&lt;/STRONG&gt;: Purchase order → inbound delivery → EWM receives/putaway → goods receipt confirmation to ERP.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;STO &amp;amp; Production&lt;/STRONG&gt;: Similar flows for stock transport orders and production staging using delivery documents.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Physical Inventory&lt;/STRONG&gt;: Bin‑level counts in EWM posting adjustments back to S/4 inventory.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Monitoring &amp;amp; Error Handling&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Use SAP Integration Suite monitoring plus AIF/WE05 in EWM and message monitoring in S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;Configure retries, alerts and duplicate detection to ensure robust, idempotent processing.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Best Practices &amp;amp; Security&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use SAP Standard Content&lt;/STRONG&gt;: Start with delivered APIs and integration packages to minimize custom code and ensure supportability.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Real‑Time Triggers&lt;/STRONG&gt;: Leverage event or change‑based triggers instead of batch replication for critical transactions.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Data Governance&lt;/STRONG&gt;: Enforce a policy that all master data originates in S/4HANA Cloud and is replicated to EWM before use.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication &amp;amp; Network Security&lt;/STRONG&gt;: Employ OAuth 2.0 or certificates, restrict Cloud Connector paths and encrypt all traffic.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Performance Considerations&lt;/STRONG&gt;: Balance synchronous calls and asynchronous flows to optimize throughput while maintaining near real‑time sync.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites &amp;amp; Limitations&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Integration Suite license and S/4HANA Cloud warehouse integration option.&lt;/LI&gt;&lt;LI&gt;Compatible EWM version (e.g., EWM 9.5 or S/4HANA 2022+ in decentralized mode).&lt;/LI&gt;&lt;LI&gt;Cloud Connector installed and configured, master data aligned.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Limitations&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Public Cloud restricts customization—no direct ABAP enhancements.&lt;/LI&gt;&lt;LI&gt;Some advanced EWM features may lack out‑of‑the‑box integration and require custom extensions.&lt;/LI&gt;&lt;LI&gt;Decentralized EWM requires duplicate master data maintenance and may introduce latency at scale.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Help Portal – Basic Integration with SAP Extended Warehouse Management (SAP EWM): &lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/32da8359c8ee4e8b8e8c5e15cacba5aa/d73c28020d6046c7805db9490d72f41f.html" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_S4HANA_CLOUD/32da8359c8ee4e8b8e8c5e15cacba5aa/d73c28020d6046c7805db9490d72f41f.html&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Integrating SAP Extended Warehouse Management (EWM) On-Premise:&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-warehouse-management/integrating-sap-extended-warehouse-management-ewm-on-premise-inbound-processes_d2fc88c6-819d-4f55-bfce-78e66e0fae80" target="_blank" rel="noopener noreferrer"&gt;https://learning.sap.com/learning-journeys/implement-sap-s-4hana-cloud-public-edition-for-warehouse-management/integrating-sap-extended-warehouse-management-ewm-on-premise-inbound-processes_d2fc88c6-819d-4f55-bfce-78e66e0fae80&lt;/A&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Help Portal – What’s New in SAP S/4HANA Cloud 1805 (Supply Chain Integration Scope): &lt;A href="https://help.sap.com/viewer/product/SAP_S4HANA_CLOUD/1805/en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/viewer/product/SAP_S4HANA_CLOUD/1805/en-US&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP API Business Hub – Integration Packages and API Definitions: &lt;A href="https://api.sap.com/" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-members/building-a-hybrid-landscape-decentralized-sap-ewm-with-s-4hana-cloud-public/ba-p/14113490"/>
    <published>2025-05-28T11:01:18.217000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/set-up-the-sap-cloud-connector-integrating-on-premise-systems-with-cloud/ba-p/14124903</id>
    <title>Set up the SAP Cloud Connector: Integrating On‑Premise Systems with Cloud Services</title>
    <updated>2025-06-12T08:24:48.267000+02:00</updated>
    <author>
      <name>Thijn_Grilis</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1988733</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1603150657" id="toc-hId-1603247437"&gt;&lt;SPAN&gt;Set up the SAP Cloud Connector: Integrating On‑Premise SAP Systems with Cloud Services Using the Cloud Connector&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In today’s hybrid IT landscape, connecting on‑premise SAP systems with cloud services is a strategic necessity and a best practice ecomended by SAP. This blog explains how to establish secure connections between your internal SAP environment and cloud platform, such as the Business Technology Platform, Integration Suite, or SAP Build Apps, using the Cloud Connector. We cover the key connection protocols, compare three OData service deployment strategies, and outline the service creation&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;process with relevant SAP transaction codes. Finally, we detail the steps to set up the Cloud Connector with proper certificate management and configuration paths, ensuring a secure and efficient integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Connection Protocols and Their Roles&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Before configuring your integration, it is essential to understand the protocols that underpin communication between systems:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;HTTP/HTTPS:&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;These protocols form the basis for web-based communication. HTTPS, in particular, ensures that data transferred between cloud services and on‑premise systems is encrypted an&lt;/SPAN&gt;&lt;SPAN&gt;d secure—critical for protecting sensitive business information.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RFC (Remote Function Call):&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;RFC enables communication between different SAP components. When integrated with the Cloud Connector, RFC calls are securely transmitted from cloud applications to your on‑premise SAP system, ensuring consistency and reliability in data and process exchanges.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;OData (Open Data Protocol):&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;OData is the standard protocol for exposing SAP Business Suite data as RESTful services. It supports CRUD operations (Create, Read, Update, Delete), making it ideal for modern applications that require flexible and real‑time data interaction across multiple devices.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1664802590" id="toc-hId-1664899370"&gt;&lt;STRONG&gt;Interface Connections and Deployment Strategies&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Interface connections are the channels through which data flows between your on‑premise SAP systems and cloud platforms. When exposing SAP Business Suite data via OData services, you can choose among three primary deployment strategies:&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Embedded Deployment:&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;With Embedded Deployment, available from SAP NetWeaver 7.4 onward, the SAP Gateway Foundation is integrated within each SAP Business Suite system. Each system runs its own SAP Gateway instance, meaning that you must configure the gateway individually for each backend system. This approach is ideal when data needs to be exposed independently for each system, although it does require managing multiple configurations.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Central HUB Deployment:&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;In this model, the SAP Gateway is installed on a dedicated front‑end server (the hub system) rather than being embedded in every backend system. A single SAP Gateway instance serves all SAP Business Suite systems, centralizing connectivity and enhancing security.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;STRONG&gt;OData Provisioning via Cloud-Based Deployment:&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;This strategy moves the SAP Gateway frontend to the cloud. Here, the SAP Cloud Platform manages the gateway while OData services connect to on‑premise systems (typically SAP HANA) via the Cloud Connector. The Cloud Connector, acting as an on‑premise agent, initiates outbound connections, thereby eliminating the need to open inbound firewall ports. This not only enhances security but also leverages modern, centrally managed, browser-based development environments like the cloud version of SAP Web IDE.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_0-1749626784353.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272891iB37995E7C7316D55/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_0-1749626784353.png" alt="thijngr_0-1749626784353.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1142692861" id="toc-hId-1339303146"&gt;&lt;STRONG&gt;Why Use the SAP Cloud Connector?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Even if your OData services appear to be accessible directly, employing the SAP Cloud Connector provides substantial benefits beyond basic connectivity:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Enhanced Security via Reverse Invoke&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;SAP Cloud Connector uses a secure, outbound "reverse invoke" approach. Instead of opening risky inbound firewall ports that could expose your internal network to threats, the connector initiates secure connections outward from your protected on-premise environment to the SAP Cloud. This significantly reduces vulnerabilities by preventing unauthorized external access.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Centralized Connection Management&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;By providing a centralized point of control, SAP Cloud Connector simplifies managing your cloud-to-on-premise connections. It allows administrators to handle access controls, authentication, and certificate management in one place. Consequently, you ensure that only authorized SAP cloud services can connect to your internal systems, maintaining consistency and simplifying governance.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Granular and Precise Access Control&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Even if OData links seem publicly reachable, the Cloud Connector gives you detailed control over exactly which services, APIs, or datasets external applications can access. This granular management greatly reduces the risk of unauthorized data exposure, ensuring compliance and protecting sensitive information.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Facilitating SAP BTP Services (SAP Build Apps, Integration Suite, and More)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Beyond security, the Cloud Connector is vital for enabling seamless and effective integration of SAP Business Technology Platform (BTP) services, such as SAP Build Apps, SAP Integration Suite, and SAP Analytics Cloud. It ensures these cloud-based applications can reliably and securely interact with your on-premise SAP backend systems, enhancing their functionality and simplifying integration tasks.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In summary, SAP Cloud Connector doesn't just enhance security—it simplifies integration, provides centralized control, and significantly enhances the effectiveness and security of your SAP cloud integrations&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-946179356" id="toc-hId-1142789641"&gt;&lt;STRONG&gt;Service Creation and Interface Configuration&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;This blog primarily covers setting up the Cloud Connector. If you're new to SAP, additional background information about available data and deployment strategies is available.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP recommends using predefined CDS views to securely expose data via OData services. CDS views offer control over selecting relevant fields, enable data transformations, and help enforce security and business rules through built-in annotations and validations.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You can create OData services rapidly through automatic service generation or develop more complex services manually using the SAP Gateway Service Builder (SEGW). Once created, services must be activated using transaction&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;/IWFND/MAINT_SERVICE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;and can be tested with&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;/IWFND/GW_CLIENT&lt;/SPAN&gt;&lt;SPAN&gt;. This link provides more information:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/application-development-and-automation-blog-posts/a-step-by-step-process-to-create-odata-services-in-sap-sap-hana-system/ba-p/13515353" target="_blank"&gt;https://community.sap.com/t5/application-development-and-automation-blog-posts/a-step-by-step-proces...&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-620583132" id="toc-hId-817193417"&gt;&lt;STRONG&gt;Setting Up the Cloud Connector&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Establishing a secure interface using the Cloud Connector involves several key steps:&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-553152346" id="toc-hId-749762631"&gt;&lt;STRONG&gt;1. Installation:&lt;/STRONG&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Download:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Begin by downloading the latest version of the Cloud Connector:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://tools.hana.ondemand.com/#cloud&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Install:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Before you install the Cloud Connector make sure that the newest Java 8 version is installed:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://www.oracle.com/nl/java/technologies/javase/javase8-archive-downloads.html" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.oracle.com/nl/java/technologies/javase/javase8-archive-downloads.html&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;.To install the cloud connector it is possible to click true all the steps in the setup&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Open:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;To open the Cloud Connector run the program “Start Cloud Connector” as administrator and enter this link in your web browser:&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://localhost:8443/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:8443&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;and click on proceed to local host.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_1-1749626784334.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272888iAD894E11B7F61432/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_1-1749626784334.png" alt="thijngr_1-1749626784334.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To login use the Username: Administrator and the Password: manage. In the next page you can set your new password and proceed with the initial setup. for the Initial setup choose Master (primary installation) and press save.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-356638841" id="toc-hId-553249126"&gt;&lt;SPAN&gt;&lt;STRONG&gt;2. Configuring Subaccount:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_2-1749626784369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272890iAFE9ED9F6908A8CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_2-1749626784369.png" alt="thijngr_2-1749626784369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;To connect to the SAP Subaccount, press the button + Add Sub Account. The following pop up will be displayed:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_3-1749626784377.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272892iC24AE3DB9E0FFB22/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_3-1749626784377.png" alt="thijngr_3-1749626784377.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Connecting to the internet through an HTTPS proxy, as prompted here in SAP Cloud Connector Administration, may be necessary in the following scenarios:&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-289208055" id="toc-hId-485818340"&gt;&lt;STRONG&gt;When to Use an HTTPS Proxy&lt;/STRONG&gt;&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Integration Needs&lt;/STRONG&gt;&lt;SPAN&gt;: If your SAP environment connects to external cloud services like&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;SAP BTP Integration Suite&lt;/STRONG&gt;&lt;SPAN&gt;, an HTTPS proxy ensures secure, reliable data tunnels between on-premises systems and the cloud.&amp;nbsp;&lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;Even if the Cloud Connector is hosted locally, connecting to SAP BTP (a cloud service) typically requires a proxy unless your network allows direct, secure internet access.&lt;/SPAN&gt;&lt;/I&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enhanced Security &amp;amp; Compliance&lt;/STRONG&gt;&lt;SPAN&gt;: Proxies add a layer of protection by monitoring traffic, helping meet regulatory standards and internal security policies.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Restricted Corporate Networks&lt;/STRONG&gt;&lt;SPAN&gt;: If your network blocks direct internet access, a proxy is mandatory to enable external communication while adhering to company policies.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplified Maintenance&lt;/STRONG&gt;&lt;SPAN&gt;: Proxies streamline software updates and patches, keeping your Cloud Connector secure and up-to-date.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-92694550" id="toc-hId-289304835"&gt;&lt;STRONG&gt;When to Skip the Proxy&lt;/STRONG&gt;&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Secure Direct Internet Access&lt;/STRONG&gt;&lt;SPAN&gt;: If your network already allows secure direct connections to SAP BTP endpoints (e.g.,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;*.hana.ondemand.com&lt;/SPAN&gt;&lt;SPAN&gt;), a proxy may add unnecessary complexity.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Internal Use Only&lt;/STRONG&gt;&lt;SPAN&gt;: If the Cloud Connector doesn’t interact with external services, a proxy offers no benefit and can be omitted.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prioritizing Simplicity&lt;/STRONG&gt;&lt;SPAN&gt;: Proxies introduce configuration overhead. If your setup values minimalism, bypassing the proxy reduces management effort.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;SPAN&gt;If you need to configure an HTTPS proxy for SAP Cloud Connector, here's what you typically fill in:&amp;nbsp;&lt;STRONG&gt;But for this example we leave the proxy empty.&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Host&lt;/STRONG&gt;&lt;SPAN&gt;: Enter the proxy server’s hostname or IP address provided by your organization's network team (Example: proxy.mycompany.com or 192.168.1.1)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Port:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;The proxy server's port number, often 8080, 443, or another port specified by your IT department.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Proxy username, if authentication is required.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(Leave empty if no authentication is necessary.)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Corresponding password for the proxy user.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;(Leave empty if no authentication is necessary.)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;After this step, open your BTP environment, here you can find the relevant data you need to connect SAP BTW with your cloud connector. You can choose to add all the data manually, or go to Cloud Connectors and download Authentication data.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_4-1749626784279.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272893iEF599B62A3F1AF33/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_4-1749626784279.png" alt="thijngr_4-1749626784279.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;After downloading this data go back to your cloud connector and select configure using authentication data and choose, add sub account authentication data from file and select the file that you just downloaded.&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_5-1749626784361.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272894iFEF2D2B896F21557/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_5-1749626784361.png" alt="thijngr_5-1749626784361.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;You can now Check if there is a secure connection in the BTP platform and in your cloud connector. This should look somewhat like this:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_6-1749626784365.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272895i0B6310D75CBD1D73/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_6-1749626784365.png" alt="thijngr_6-1749626784365.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_7-1749626784290.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272896i280BB128E955638D/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_7-1749626784290.png" alt="thijngr_7-1749626784290.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;!If the Cloud Connector cannot establish a connection to your BTP account, first verify that your Windows network profile is set to “Private.” At home the Connector often works on “Public” because your router allows port 8443 and outbound HTTPS by default, but in a corporate setting a firewall or proxy will block these connections. Switching to “Private,” configuring the Connector with your company’s proxy, or asking IT to open ports 8443 and 443 to *.hana.ondemand.com will restore connectivity.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_8-1749626784409.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272897i6CF4A8C3635B99ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_8-1749626784409.png" alt="thijngr_8-1749626784409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--278674327" id="toc-hId--36291389"&gt;&lt;STRONG&gt;3. Configuring Certifications:&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;When setting up HTTPS communication between the SAP Cloud Connector and your SAP backend system, properly managing certificates in the SAP Trust Manager (transaction STRUST) is essential. Certificates act like digital passports—they verify identities, establish trust between systems, and ensure that data is encrypted during transmission. But how does this actually work in SAP? And where exactly do these certificates go? Let’s break it down.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--768590839" id="toc-hId--178953544"&gt;&lt;STRONG&gt;Identity Certificates vs. Trust Anchors in STRUST&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In each Personal Security Environment&amp;nbsp; in STRUST, there are two types of certificates to be aware of:&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId--1258507351" id="toc-hId--668870056"&gt;&lt;STRONG&gt;1. Identity Certificate ("Own Certificate")&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;This is your SAP system’s own server certificate—it contains a private key and is used when SAP needs to prove its identity (e.g., during TLS handshakes). Only one identity certificate can be active per PSE at any given time.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;!If you replace this certificate, you must update all other devices to trust the new one; otherwise, connections may fail!&lt;/STRONG&gt;&lt;/P&gt;&lt;H4 id="toc-hId--1455020856" id="toc-hId--865383561"&gt;&lt;STRONG&gt;2. Trusted Certificates ("Certificate List")&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;These are public certificates your SAP system uses to trust other systems—such as the Cloud Connector or its CA. These are also called trust anchors. You can store multiple trusted certificates here without issue.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Regularly reviewing this list helps avoid trust errors or certificate expiration surprises.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1358131354" id="toc-hId--768494059"&gt;&lt;STRONG&gt;Where to Place Certificates in STRUST&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;When your SAP backend receives inbound HTTPS connections (such as requests from the SAP Cloud Connector), it uses a specific trust store in STRUST called the SSL System-wide Standard PSE.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To establish trust, you typically need to upload the Cloud Connector’s certificate or the CA certificate that signed it into this PSE. This tells your SAP system: “This incoming connection is safe and trusted.”&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Important: You do not need to upload this certificate if it's already signed by a widely trusted root CA that your SAP system recognizes by default. In many cases, SAP already includes a list of common root CAs—so the Cloud Connector will be trusted automatically.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1554644859" id="toc-hId--965007564"&gt;&lt;STRONG&gt;Configuring Certificates&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;When setting up HTTPS communication between the SAP Cloud Connector and your SAP backend system, properly managing certificates in the SAP Trust Manager (transaction STRUST) is essential. The goal is to ensure that your SAP system both presents a valid identity certificate when required and trusts the relevant external certificates to establish a secure SSL/TLS handshake.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1751158364" id="toc-hId--1161521069"&gt;&lt;STRONG&gt;Identity Certificates vs. Trust Anchors in STRUST&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;In each Personal Security Environment (PSE) in STRUST, there are two types of certificates to be aware of:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When dealing with certificates in STRUST, it’s important to understand the distinction between identity certificates (also called “Own Certificates”) and trust anchors (trusted certificates in the Certificate List). These serve different purposes:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;An identity certificate is the certificate that identifies&amp;nbsp;&lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;your&lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;&amp;nbsp;SAP system. It usually includes a private key and is used by SAP when acting as a server or client to present its identity to others. For example, if your SAP system is serving HTTPS requests, it will present its identity certificate to the client (browser or Cloud Connector) during the SSL handshake. In STRUST, the identity certificate is shown in the “Own Certificate” section of a PSE.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Trust anchors are the certificates of external authorities or systems that your SAP system trusts. In other words, these are usually root CA certificates or intermediate certificates that form the chain of trust for the certificates presented by others. They do not contain a private key in your system; they are public certificates that you add to SAP so that it recognizes and trusts the identities of external parties. In STRUST, trusted certificates are listed in the “Certificate List” section of a PSE (the lower pane). For example, if you need to call an external web service over HTTPS, you must import the web service’s root CA certificate as a trust anchor. This way, when SAP (as a client) connects, it can verify the server’s certificate against these trusted CAs.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1947671869" id="toc-hId--1358034574"&gt;&lt;STRONG&gt;Understanding the Difference Between PSE Types&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Finally, it’s important to clearly understand the two primary Personal Security Environment Types we’ve discussed and when each is used:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SSL System-wide Standard PSE (SSL Server PSE):&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;This PSE is used when the SAP system acts as a server in an SSL/TLS communication. In other words, for inbound connections to SAP. The System-wide SSL Server PSE provides the server’s identity certificate and uses its trust list to verify clients if needed. “System-wide” means one certificate can be used across all application servers in the system​ (as opposed to having a separate certificate per instance).&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SSL Client (Standard) PSE:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;This PSE is used when the SAP system acts as a client making outbound HTTPS requests. For any outbound connection that SAP initiates (calling a REST API, connecting to an external cloud service, etc.), the SSL Client (Standard) PSE is consulted. It contains the list of trusted CA certificates that SAP will accept for server certificates on the other side.&lt;/SPAN&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Be careful where you import certificates: Always choose the correct PSE based on the direction of the connection. Importing a certificate into the wrong PSE, like putting a client certificate into the system-wide PSE, can disrupt communication with other systems and cause unexpected connection failures.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Creating Certificates:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If your SAP system doesn’t already have a background trust certificate (X.509), you can generate one using one of the methods outlined below. However, it's rare for this certificate to be missing, so if you're unsure, it's best to consult your network specialist.&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Using XCA (recommended due to its user-friendly GUI):&lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-sap/how-to-guide-xca-quick-start-guide/ba-p/13325445" target="_blank"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blogs-by-sap/how-to-guide-xca-quick-start-guide/ba-p/133254...&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Using OpenSSL:&lt;/SPAN&gt;&lt;A href="https://www.youtube.com/watch?v=Z2l-5utm3WY" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;https://www.youtube.com/watch?v=Z2l-5utm3WY&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Exporting Existing Certificates:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To export an existing certificate from SAP, go to transaction STRUST in the PSE SSL Server Standard system wide and double click on one of the issuer certificates:&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_9-1749626784399.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272898i15C92635675F291F/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_9-1749626784399.png" alt="thijngr_9-1749626784399.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Now the certificate is opened on the bottom of the page. Press the button export certificate.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_10-1749626784401.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272899i34F2B9C466B31C2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_10-1749626784401.png" alt="thijngr_10-1749626784401.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A new tab is opened where you can select the location, name of the certificate and the file format. After downloading your certificate go to the cloud connector site and select configuration. On the configuration screen select on premise.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_11-1749626784284.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272900i24EAB638D5DA2ED7/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_11-1749626784284.png" alt="thijngr_11-1749626784284.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Go to the tab Backend Trust Store allowlist and press the button add x509 certificate.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_12-1749626784363.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272901iFBD4DD86355EDA85/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_12-1749626784363.png" alt="thijngr_12-1749626784363.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Upload your certificate here. It is not necessary to upload a CA Certificate because the system already trusts publicly signed certificates from standard Certificate Authorities (CAs).&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_13-1749626784371.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272903i2E88AE5B51E639D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_13-1749626784371.png" alt="thijngr_13-1749626784371.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1236774085" id="toc-hId--1261145072"&gt;&lt;SPAN&gt;4. Configuring Connection Paths:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;After making sure the right certificates are in place we can continue with connecting the system. Open the sap cloud connector site and select Cloud to On premise in the left menu. and press the button “add system mapping”. For the back end type are several options available. For this case we choose SAP HANA, but it is also possible to select other back end systems.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_14-1749626784282.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272902i99E9DDFC8D62B3DD/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_14-1749626784282.png" alt="thijngr_14-1749626784282.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="930px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Entry&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Back-end Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;SAP HANA&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Select this option to specify that the backend system is an SAP HANA database.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Protocol&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;HTTPS&lt;/STRONG&gt;&lt;STRONG&gt;:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Choose HTTPS to ensure that communication with the backend system is encrypted and secure.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Internal Host&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;SPAN&gt;Enter the Fully Qualified Domain Name (FQDN) or hostname of the machine where the Production Connector is installed. A mismatch between the entered hostname and the certificate will result in SSL errors and block the connection. I used the command&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;/IWFND/GW_CLIENT or /IWFND/MAINT_SERVICE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;to inspect the request url. For example&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://prod-connector.company.com:44321/sap/opu/odata/sap/ZC_142JJ_MATERIALSPERUSER_CDS/?$format=xml" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://prod-connector.company.com&lt;/SPAN&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;44321/sap/opu/odata/sap/ZC_142JJ_MATERIALSPERUSER_CDS/?$format=xm...&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;. Use the red text as the internal host.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Internal Port&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Enter the port number&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;used by the Production Connector for cloud communication (e.g., 443 or a custom HTTPS port).&amp;nbsp; For example&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://prod-connector.company.com:44321/sap/opu/odata/sap/ZC_142JJ_MATERIALSPERUSER_CDS/?$format=xml" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://prod-connector.company.com&lt;/SPAN&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;44321&lt;/SPAN&gt;&lt;SPAN&gt;/sap/opu/odata/sap/ZC_142JJ_MATERIALSPERUSER_CDS/?$format=xm...&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;. Use the red text as the internal host.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Virtual Host&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Enter a unique virtual host name&lt;/STRONG&gt;&lt;SPAN&gt;, such as&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;prodconccms&lt;/SPAN&gt;&lt;SPAN&gt;, to identify this Production Connector instance. Only use letters (A–Z, a–z), numbers (0–9), and periods (&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;). Special characters are not allowed.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Virtual Port&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Enter a virtual port number&lt;/STRONG&gt;&lt;SPAN&gt;, for example:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;50066&lt;/SPAN&gt;&lt;SPAN&gt;.This will be used together with the virtual host to form the URL, e.g.,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A href="https://prodconccms:50066/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://prodconccms:50066&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;. The virtual port can be the same as the internal port if desired.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Deselect this option&lt;/STRONG&gt;&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;SPAN&gt;Certificate-based OAuth is now used for authentication instead of principal propagation.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;System Certificate for Logon&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Select this checkbox&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;to enable certificate-based authentication for logging into the system.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Host In Request Header&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Use the default setting&lt;/STRONG&gt;&lt;SPAN&gt;:&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Use Virtual Host&lt;/SPAN&gt;&lt;SPAN&gt;This ensures the virtual host name is sent in the request headers.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;No input required&lt;/STRONG&gt;&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;SPAN&gt;This field can be left empty unless a description is specifically needed.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="111.953px"&gt;&lt;P&gt;&lt;STRONG&gt;Check Internal Host&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="817.047px"&gt;&lt;P&gt;&lt;STRONG&gt;Select this checkbox&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;to verify that the internal host name is reachable and correctly configured.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;The result should look like this and the status should be reachable:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_15-1749626784286.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272904i7FE225762ACD8108/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_15-1749626784286.png" alt="thijngr_15-1749626784286.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Define “Cloud to On‑Premise” Paths:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Configuring resource path mappings is what actually grants your cloud applications access to specific services in your internal network. Without this step, even though the Cloud Connector is installed and connected to your subaccount, no data can flow. These mappings define exactly which internal systems and paths the Cloud Connector is allowed to expose to the cloud, acting as a secure filter to prevent unauthorized access.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When a request comes from SAP BTP, such as a call to an OData service, it passes through the Cloud Connector. Here’s where resource path mappings come in: they translate the virtual host and path requested by the cloud app into the actual internal system address and path, ensuring that the request reaches the right backend component (e.g., SAP Gateway, ABAP system, or ERP backend).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;I used the command&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;/IWFND/GW_CLIENT or/IWFND/MAINT_SERVICE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;to inspect the request url. For example&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://prod-connector.company.com:44321/sap/opu/odata/sap/ZC_142JJ_MATERIALSPERUSER_CDS/?$format=xml" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://prod-connector.company.com&lt;/SPAN&gt;&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;SPAN&gt;44321&lt;/SPAN&gt;&lt;SPAN&gt;/sap/opu/odata/&lt;/SPAN&gt;&lt;SPAN&gt;sap/ZC_142JJ_MATERIALSPERUSER_CDS/?$format=xm...&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;. Use the red text as the path. Additionally, set the Access Policy to “Path and all Sub-Paths” to ensure the system allows access to the specified path as well as any nested resources and query options beneath it.&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_16-1749626784414.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272906iB6B30713790C963C/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_16-1749626784414.png" alt="thijngr_16-1749626784414.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--167150264" id="toc-hId--1457658577"&gt;&lt;SPAN&gt;5. Create Destination:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Go to the connectivity tab in SAP BTP and check if your cloud connector has an exposed back end system. And that the resources are available.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_17-1749626784355.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272905iD8E2B98A805E1D86/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_17-1749626784355.png" alt="thijngr_17-1749626784355.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The next step is to create a new Destination. For this go to SAP BTP Connectivity and then Destinations. And then press the button to create a new Destination. Use your virtual host as url like this example below. Set proxy type to OnPremise and use basic authentication and use your own SAP username and password. Also don't forget to use the Additional Properties mentioned in the example below and set your SAP-Client to your own client.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_18-1749626784368.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272907iA7EB3F8666A2A816/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_18-1749626784368.png" alt="thijngr_18-1749626784368.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--560177274" id="toc-hId--1654172082"&gt;&lt;SPAN&gt;6. Test your Connection&amp;nbsp;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;When you go to the SAP application studio select the Data source Connect to a System. You can select your own system (Destination that we just created). Here are all services that are opened with the URL resource path in the SAP CLOUD connector.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="thijngr_19-1749626784356.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/272908i007DB818293E801F/image-size/large?v=v2&amp;amp;px=999" role="button" title="thijngr_19-1749626784356.png" alt="thijngr_19-1749626784356.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1767588118" id="toc-hId--1682501896"&gt;&lt;SPAN&gt;Final Thoughts&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Installing the Cloud Connector is a straightforward process, but the many available options can make it challenging for beginners to set up a connection. I wrote this blog during my SAP traineeship, so I'm not an expert in certificates or network configurations. If you spot any mistakes or have suggestions for improvement, I'd really appreciate your feedback!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/set-up-the-sap-cloud-connector-integrating-on-premise-systems-with-cloud/ba-p/14124903"/>
    <published>2025-06-12T08:24:48.267000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/ariba-cig-setup-with-s-4hana-a-guide-for-sap-basis-administrators/ba-p/14126487</id>
    <title>Ariba CIG Setup with S/4HANA – A Guide for SAP BASIS Administrators</title>
    <updated>2025-06-13T16:16:46.812000+02:00</updated>
    <author>
      <name>poulami_mukherjee1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/865990</uri>
    </author>
    <content>&lt;P&gt;The SAP Ariba Cloud Integration Gateway (CIG) streamlines the integration of SAP S/4HANA with SAP Ariba solutions, ensuring seamless data exchange for procurement and supply chain processes. For SAP Basis administrators, configuring Ariba CIG with S/4HANA involves setting up connectivity, managing certificates, and ensuring secure data flow. This blog provides a step-by-step guide for setting up Ariba CIG with S/4HANA, focusing on the Basis perspective.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;BR /&gt;1. &lt;STRONG&gt;System Requirements:&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • SAP S/4HANA (On-Premise or Cloud) configured with relevant business processes.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Access to SAP Ariba Cloud Integration Gateway.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • SAP Cloud Connector installed and configured.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • SAP Integration Suite (optional for specific scenarios).&lt;BR /&gt;2. &lt;STRONG&gt;Authorizations:&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Administrative access to the SAP S/4HANA system.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Access to SAP Ariba CIG portal.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • User with permissions to configure SAP Cloud Connector.&lt;BR /&gt;3. &lt;STRONG&gt;Certificates:&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Obtain necessary SSL certificates from SAP Ariba and SAP S/4HANA.&lt;/P&gt;&lt;P&gt;4.&amp;nbsp;&lt;STRONG&gt;Ariba&amp;nbsp; CIG Add-on&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Step-by-Step Setup&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 1: Register SAP Ariba Cloud Integration Gateway&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1. Log in to the SAP Ariba CIG portal.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2. Navigate to Connections &amp;gt; Setup.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3. Select SAP S/4HANA as the integration system.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4. Download the configuration template for the S/4HANA system.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_0-1749737535252.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273701i79D3EA4B9BEC7866/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_0-1749737535252.png" alt="poulami_mukherjee1_0-1749737535252.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 2: Configure SAP Cloud Connector&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1. Log in to the SAP Cloud Connector.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2. Add a new subaccount and link it to the SAP BTP account.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3. Define the back-end connection to the S/4HANA system:&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Enter the internal hostname and port of the S/4HANA system.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Map virtual hosts and ports to the internal configuration.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_1-1749737535258.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273699i9EA4A9FB815DAE00/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_1-1749737535258.png" alt="poulami_mukherjee1_1-1749737535258.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_2-1749737535265.png" style="width: 0px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273700iB41E609497919A91/image-size/small?v=v2&amp;amp;px=200" width="0" height="0" role="button" title="poulami_mukherjee1_2-1749737535265.png" alt="poulami_mukherjee1_2-1749737535265.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_0-1749739884664.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273728i6C81A871A14BB96D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_0-1749739884664.png" alt="poulami_mukherjee1_0-1749739884664.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 4. Ensure the necessary URLs for Ariba are whitelisted in the firewall.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Install the ARBCIG Add-on:&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Log in to S/4HANA and use SPAM/SAINT to upload the ARBCIG add-on.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_3-1749737535267.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273702iDE68A6B80E9A242A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_3-1749737535267.png" alt="poulami_mukherjee1_3-1749737535267.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Verify installation in SAINT and SPAM.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_4-1749737535272.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273703iF0DCABF2E4A3AFA5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_4-1749737535272.png" alt="poulami_mukherjee1_4-1749737535272.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 4: Import SSL Certificates into STRUST&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1. In the SAP S/4HANA system, access the STRUST transaction.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2. Import the SSL certificate from Ariba CIG under the SSL Client (Standard) node.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3. Add the certificate to the certificate list and save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_5-1749737535296.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273704i31B89B05AF5DE5F8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_5-1749737535296.png" alt="poulami_mukherjee1_5-1749737535296.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 5: Configure RFC Connections&lt;BR /&gt;&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1. Access the SM59 transaction in S/4HANA.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2. Create an RFC destination of type HTTP to connect to the SAP Ariba system:&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;• Provide the URL from the Ariba CIG setup document.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Configure authentication with the Ariba credentials.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_6-1749737535302.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273706iAE96EDCBF7509E2B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_6-1749737535302.png" alt="poulami_mukherjee1_6-1749737535302.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Configure Logical System&lt;/STRONG&gt;&lt;BR /&gt;Define logical system in BD54&lt;/P&gt;&lt;P&gt;BD54 transaction screen for creating the logical system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_7-1749737535305.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273705iBA94AF27839A27D0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_7-1749737535305.png" alt="poulami_mukherjee1_7-1749737535305.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 7: Maintain Integration Parameters&lt;BR /&gt;&lt;/STRONG&gt;1. In S/4HANA, access the CIG Configuration App or relevant transaction code (e.g., SPRO &amp;gt; Integration with Ariba).&lt;BR /&gt;2. Enter the Ariba network ID, endpoint URL, and other required parameters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="poulami_mukherjee1_8-1749737535321.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/273707iBA3C938C73647B6B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="poulami_mukherjee1_8-1749737535321.png" alt="poulami_mukherjee1_8-1749737535321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 8: Test Connection&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1. Test the RFC connection using the Connection Test option in SM59.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2. Resolve any connectivity issues based on logs.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Step 9: Activate Required iFlows&lt;/STRONG&gt;&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 1. Open the SAP Integration Suite or CPI (if used).&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 2. Deploy and configure the necessary integration flows (iFlows) for data exchange.&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 3. Test the iFlows to confirm message flow between systems.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Post-Setup Checks&lt;BR /&gt;&lt;/STRONG&gt;1. Monitor Data Exchange:&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Use SAP CIG and S/4HANA monitoring tools (e.g., SXMB_MONI, Message Dashboard) to verify data exchange.&lt;BR /&gt;2. Error Handling:&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Configure alert notifications for connectivity or data transfer errors.&lt;BR /&gt;3. Performance Optimization:&lt;BR /&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; • Schedule regular health checks of the integration landscape.&lt;BR /&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Setting up SAP Ariba CIG with SAP S/4HANA involves meticulous configuration to ensure secure and efficient data flow. By following this guide, SAP Basis administrators can establish a robust integration framework that enhances business operations.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Next Steps&lt;/STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;Explore advanced configurations like mapping custom fields or integrating additional SAP Ariba modules for expanded functionality.&lt;BR /&gt;&lt;BR /&gt;Let us know your thoughts in the comments below, or share your own tips for optimizing the SAP Ariba CIG setup with SAP S/4HANA!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/ariba-cig-setup-with-s-4hana-a-guide-for-sap-basis-administrators/ba-p/14126487"/>
    <published>2025-06-13T16:16:46.812000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/how-to-run-sap-cloud-connector-on-macos-sequoia-troubleshooting/ba-p/14138422</id>
    <title>How to .. Run SAP Cloud Connector on macOS Sequoia + Troubleshooting</title>
    <updated>2025-06-27T07:56:40.802000+02:00</updated>
    <author>
      <name>ricardo_i_mata</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/251432</uri>
    </author>
    <content>&lt;P&gt;If you are like me and trying to "install"/run the SAP Cloud Connector on your mac to either connect to a on-premise service or SAP environment (S/4HANA or AEX) through your VPN connection, and have been going through multiple blogs and SAP Notes/KBA then this is the guide for you, stop jumping and check the step by step bellow.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;: Accept and download the SAP Cloud Connector and SAP JVM packages.&lt;BR /&gt;Pretty obvious, right? Jump to&amp;nbsp;&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_self" rel="nofollow noopener noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;&amp;nbsp;or Google "SAP Developer Tools" and search for Cloud Connector.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_0-1750997831136.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279572iF1849975BA654EE8/image-size/large?v=v2&amp;amp;px=999" role="button" title="ricardo_m117_0-1750997831136.png" alt="ricardo_m117_0-1750997831136.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In my case, my Mac is running an Intel chip, so I downloaded the x86_64 file. If your Mac has an ARM processor, please use the aarch64 option; both options are equivalent.&lt;/P&gt;&lt;P&gt;If you keep scrolling, you will find the SAP JVM section. This step is optional, but it is highly recommended to use the SAP JVM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_1-1750998109478.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279573i74CC522F7F0C2B91/image-size/large?v=v2&amp;amp;px=999" role="button" title="ricardo_m117_1-1750998109478.png" alt="ricardo_m117_1-1750998109478.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note: I like to keep things simple and saved both in the same directory.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;: Unzip the files.&lt;BR /&gt;This is easy, double click on the file or be fancy and do "tar -xzovf sapjvm-8.1.105-macosx-x64.zip" (which I recommend for the JVM)&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;tar -xzovf {filename-here}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you did everything correctly, you will have the following.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_2-1750998611315.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279575iB75828B987D12959/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ricardo_m117_2-1750998611315.png" alt="ricardo_m117_2-1750998611315.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;: Set the environment variables&lt;BR /&gt;Okay, I know you might be running other applications and/or IDEs, and you don't want to interfere with your Java runtime. Open your favorite terminal and use the following two commands.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;export JAVA_HOME=/Users/i53xxxx/sap-cc/sapjvm_8
export PATH=$JAVA_HOME/bin:$PATH&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Note: Please change the value of JAVA_HOME to use the full path of your directory that contains the bin directory. Use mine only as a guide&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_3-1750999233815.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279596iCE1451239379DEE4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ricardo_m117_3-1750999233815.png" alt="ricardo_m117_3-1750999233815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&lt;/STRONG&gt; Trust the file or folder using xattr&amp;nbsp;&lt;BR /&gt;Trust me on this one and avoid a headache.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;xattr -rd com.apple.quarantine /Users/i53xxxx/sap-cc/sapcc-2.18.1-macosx-x64&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Note: I did the full directory, but technically you only need to trust "libsapscc20jni.dylib"&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&lt;/STRONG&gt; Run the script with admin rights&lt;BR /&gt;The cloud connector needs certificates. It will run some commands, and it is recommended to run this with administrative rights. If you are using environment variables at your session level, then use the -E parameter.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;sudo -E /Users/i53xxxx/sap-cc/sapcc-2.18.1-macosx-x64/go.sh&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you follow along, you should be having your own Cloud Connector running.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_0-1751001610627.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279627i1B83ACC15B887584/image-size/large?v=v2&amp;amp;px=999" role="button" title="ricardo_m117_0-1751001610627.png" alt="ricardo_m117_0-1751001610627.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Open your browser and use either the address that shows on your terminal or localhost at&amp;nbsp;&lt;A href="https://localhost:8443" target="_self" rel="nofollow noopener noreferrer"&gt;https://localhost:8443&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_1-1751001840816.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279628iC41B752F804E588F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ricardo_m117_1-1751001840816.png" alt="ricardo_m117_1-1751001840816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Log in with "Administrator"&lt;BR /&gt;Note: At the time of this post, the default password is "manage".&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Troubleshooting issues:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Issue with Java&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Detected mismatch between jdk binaries for directory) and scc binaries for x86_64
Stopping the process. Ensure to use the corresponding binaries either for x86_64 or for arm64
Set env variable NO_CHECK=1 to overcome this check&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_5-1750999574741.png" style="width: 541px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279608i56301C6D27ACC472/image-dimensions/541x69?v=v2" width="541" height="69" role="button" title="ricardo_m117_5-1750999574741.png" alt="ricardo_m117_5-1750999574741.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;Solution&lt;/U&gt;: Use the SAP JVM and make sure when running the Cloud Connector, you are using the environment variables.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Issue&lt;/STRONG&gt;: If you get the following errors when trying to connect to a subaccount&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;#ERROR#com.sap.core.connectivity.tunnel.core.handlers.TunnelClientErrorHandler#notification-client-5-1# #Unexpected problem during tunnel processing in channel Reason: error 60 - Operation timed out; Exception type: java.io.IOException
#INFO#com.sap.core.connectivity.tunnel.core.impl.context.TunnelRegistryImpl#notification-client-5-1# #Unregistered tunnel channel &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;#INFO#com.sap.scc.config#https-jsse-nio2-8443-exec-7# #Configuration file not found: &lt;/code&gt;&lt;/pre&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;#INFO#com.sap.scc.config#https-jsse-nio2-8443-exec-1# #User null stopping Tunnel account:///a240e5b0-aecf-4dd4-a317-d821ea3bd80a/mavr-demo in state DISCONNECTED for account id-here in region cf.region-here.hana.ondemand.com
-#INFO#com.sap.core.connectivity.tunnel.client.sso.TrustConfigurationServiceImpl#https-jsse-nio2-8443-exec-1# #Successfully deleted IDP configuration for tunnel id 'account:///id-here'
#ERROR#com.sap.scc#https-jsse-nio2-8443-exec-1# #Obtaining subaccount certificate failed. See 'Log and Trace Files' and in particular scc_core.trc for details. Associated entries were logged on or around 2025-06-25 23:56:51,771 -0500. Consult SAP note 2460641 for possible remedies.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;U&gt;Solution&lt;/U&gt;: Install a certificate in your Cloud Connector&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_2-1751002936957.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279630iEA623A1A9AB2E87C/image-size/large?v=v2&amp;amp;px=999" role="button" title="ricardo_m117_2-1751002936957.png" alt="ricardo_m117_2-1751002936957.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I know this is a demo or PoC, but where do you get a signed certificate?&lt;BR /&gt;If you have access to SAP BTP, you can generate Service Instances and Service Keys. In my case, I created a signed certificate from the Process Integration Runtime. Transformed the Public-PEM and Private PEM into a P12&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ricardo_m117_3-1751003184232.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279632iCBC5FC219F1D4A44/image-size/large?v=v2&amp;amp;px=999" role="button" title="ricardo_m117_3-1751003184232.png" alt="ricardo_m117_3-1751003184232.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ricardo_m117_4-1751003307692.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279633i4B5BBCDC72A5CBFA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ricardo_m117_4-1751003307692.png" alt="ricardo_m117_4-1751003307692.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ricardo_m117_5-1751003338109.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/279634i6EB5949B64229A05/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ricardo_m117_5-1751003338109.png" alt="ricardo_m117_5-1751003338109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The process is quite simple: copy the public certificate into a file named my-public.pem file and copy the key or private into a my-private.pem file and run the following openssl command:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;openssl pckcs12 -export -out my-p12-file.p12 -in my-public.pem -inkey my-private.pem&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;After this, the connection to the subaccount should be successful.&lt;/P&gt;&lt;P&gt;I hope this easy how-to has been helpful.&lt;/P&gt;&lt;P&gt;Best regards&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":vulcan_salute:"&gt;🖖🏻&lt;/span&gt;&lt;BR /&gt;Ricardo&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/how-to-run-sap-cloud-connector-on-macos-sequoia-troubleshooting/ba-p/14138422"/>
    <published>2025-06-27T07:56:40.802000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/upgrade-sap-cloud-connector-in-high-availability-environments-with-windows/ba-p/14143625</id>
    <title>Upgrade SAP Cloud Connector in High Availability Environments with Windows OS</title>
    <updated>2025-07-05T11:13:19.630000+02:00</updated>
    <author>
      <name>Ak107</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1910421</uri>
    </author>
    <content>&lt;P&gt;In this blog, we’ll walk through the step-by-step process to upgrade the SAP Cloud Connector with minimal downtime, specifically for Microsoft Windows environments.&lt;/P&gt;&lt;P&gt;We are going to describe this whole procedure of upgrading SAP Cloud Connector (SCC) in three Phases.&lt;/P&gt;&lt;OL class="lia-list-style-type-upper-alpha"&gt;&lt;LI&gt;Pre-Upgrade Planning, System Preparation &amp;amp; Readiness check&lt;/LI&gt;&lt;LI&gt;Upgrade Procedure in HA Environment&lt;/LI&gt;&lt;LI&gt;Post-Upgrade Steps&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;A. Pre-Upgrade Planning, System Preparation &amp;amp; Readiness check&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Check current version of cloud connector&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Log in to the SCC administration UI.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Navigate to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;About&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;to find the current version&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Review below to understand new features and resolved issues&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP Note 2539713 and&lt;/LI&gt;&lt;LI&gt;SAP Help Portal&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/upgrade?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;&lt;EM&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/upgrade?locale=en-US&lt;/EM&gt;&lt;/A&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Backup Configuration&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Export configuration via UI: Go to&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Administrator &amp;gt; Configuration &amp;gt; Export&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Take backup&amp;nbsp; of existing CC installation directory on both nodes&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Take a full VM snapshot or OS-level backup of both nodes [Optional]&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;HA Considerations&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Identify the primary and secondary nodes.&lt;/LI&gt;&lt;LI&gt;Ensure configuration sync is active and up-to-date.&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Plan for node-by-node upgrade to maintain availability.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;System Requirements&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Check Operating System compatibility for newer version of cloud connector&lt;/LI&gt;&lt;LI&gt;Check required SAP JVM version&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Check and take the status screenshot of connectivity to the SAP Cloud Platform sub accounts.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Download the Latest Cloud Connector &amp;amp; SAP JVM Version&lt;/STRONG&gt;&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;Visit&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Select &amp;amp; download the correct installer based on your OS (e.g., .msi for Windows)&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_32-1751541431806.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282257iDB2E449F83A2AE46/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_32-1751541431806.png" alt="Ak107_32-1751541431806.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;U&gt;B. Upgrade Procedure in HA Environment&lt;/U&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_33-1751541504698.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282258i50B9F9E01945F2DF/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_33-1751541504698.png" alt="Ak107_33-1751541504698.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Technical Workflow for SCC upgrade in HA Environment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_34-1751541504699.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282260i5312E339C3EEFEDC/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_34-1751541504699.png" alt="Ak107_34-1751541504699.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Role Identification –&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Identify which node is active (primary) and passive (secondary).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_35-1751541504612.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282259iD3BD344D94E9D43B/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_35-1751541504612.png" alt="Ak107_35-1751541504612.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Upgrade Passive Node –&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Perform upgrade on the secondary to maintain availability.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_36-1751541504628.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282263iF80DE4CB201C0F35/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_36-1751541504628.png" alt="Ak107_36-1751541504628.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Role Reassignment –&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Switch roles using the SCC admin UI or configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_37-1751541504594.png" style="width: 19px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282261iED4964F53795CD84/image-dimensions/19x19?v=v2" width="19" height="19" role="button" title="Ak107_37-1751541504594.png" alt="Ak107_37-1751541504594.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Upgrade the Other Node –&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Upgrade the now-secondary (originally primary).&lt;/P&gt;&lt;P&gt;🧪&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Validate and Re-Sync –&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Ensure both nodes are synced and healthy post-upgrade&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_38-1751541504635.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282262i5677A1AFA8B972DF/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_38-1751541504635.png" alt="Ak107_38-1751541504635.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Microsoft Windows specific Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_39-1751541504858.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282267iB4D136C2FCB84C07/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_39-1751541504858.png" alt="Ak107_39-1751541504858.png" /&gt;&lt;/span&gt;Stop the Windows Service (SAP Cloud Connector) via services.msc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_40-1751541504643.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282269i06F0A8F5C5DB2F59/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_40-1751541504643.png" alt="Ak107_40-1751541504643.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_41-1751541504700.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282268i83F19C14DB9A7F62/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_41-1751541504700.png" alt="Ak107_41-1751541504700.png" /&gt;&lt;/span&gt;Uninstall existing SCC and retain the SCC configuration files while uninstalling it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_42-1751541504645.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282274iF80C8CCD42B9EE7B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_42-1751541504645.png" alt="Ak107_42-1751541504645.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_43-1751541504647.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282275i0CD98B51D371108F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_43-1751541504647.png" alt="Ak107_43-1751541504647.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_44-1751541504642.png" style="width: 19px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282273iB611DF3B793DDB55/image-dimensions/19x19?v=v2" width="19" height="19" role="button" title="Ak107_44-1751541504642.png" alt="Ak107_44-1751541504642.png" /&gt;&lt;/span&gt;Launch the Installer for the new version (usually a.msi file).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_45-1751541504651.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282277i528D8ABC1217DB79/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_45-1751541504651.png" alt="Ak107_45-1751541504651.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_46-1751541504652.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282278iA1DBF4D6DF00C506/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_46-1751541504652.png" alt="Ak107_46-1751541504652.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Provide installation path same as old one.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_47-1751541504654.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282276i41F007301DC37BCF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_47-1751541504654.png" alt="Ak107_47-1751541504654.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_48-1751541504655.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282279i673BEE70CF2660C3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_48-1751541504655.png" alt="Ak107_48-1751541504655.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_49-1751541504650.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282281iE390A1D159EF6379/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_49-1751541504650.png" alt="Ak107_49-1751541504650.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_50-1751541504656.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282280iD1F8C3025F301D30/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_50-1751541504656.png" alt="Ak107_50-1751541504656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_51-1751541504657.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282283iE57165837E68D183/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_51-1751541504657.png" alt="Ak107_51-1751541504657.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The installation is complete now.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_52-1751541504648.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282282i2E72CB3A9F66158F/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_52-1751541504648.png" alt="Ak107_52-1751541504648.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Start the Service Again using the Services window.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_53-1751541504663.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282284i4CA1CA4BEFE00C63/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_53-1751541504663.png" alt="Ak107_53-1751541504663.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_54-1751541504701.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282285iBC5016B43768A503/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_54-1751541504701.png" alt="Ak107_54-1751541504701.png" /&gt;&lt;/span&gt;Log In to Verify: Use the SCC web UI to confirm successful upgrade and version.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_55-1751541504667.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282286iD541C48B5E02C988/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_55-1751541504667.png" alt="Ak107_55-1751541504667.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Verify Master node details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_56-1751541504672.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282287i999C779344530C3A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_56-1751541504672.png" alt="Ak107_56-1751541504672.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_57-1751541504676.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282290i10010A705A43E42B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_57-1751541504676.png" alt="Ak107_57-1751541504676.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_58-1751541504659.png" style="width: 18px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282288iBC7451F073EA101C/image-dimensions/18x18?v=v2" width="18" height="18" role="button" title="Ak107_58-1751541504659.png" alt="Ak107_58-1751541504659.png" /&gt;&lt;/span&gt;Switch over the node role using Switch Role function from Master node Cloud Connector and proceed with Master Node upgrade with above explained installation steps.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_59-1751541504680.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282289iD9FF23F77D571CEE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_59-1751541504680.png" alt="Ak107_59-1751541504680.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ak107_60-1751541504685.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282291i23E19ED0D5D05FBF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ak107_60-1751541504685.png" alt="Ak107_60-1751541504685.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now Master Node has become Shadow and Shadow has become Master node. Proceed with SCC upgrade on new Shadow instance.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;C. Post-Upgrade Steps&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Perform below Post Steps after upgrade is finished.&lt;/STRONG&gt;&lt;OL class="lia-list-style-type-lower-roman"&gt;&lt;LI&gt;Log in to SCC UI on both nodes and verify version under&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;About&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Ensure HA synchronization is healthy and all backend systems show green status.&lt;/LI&gt;&lt;LI&gt;Review logs (/usr/local/sap/scc/log/) for errors.&lt;/LI&gt;&lt;LI&gt;Validate all configurations and test connectivity.&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;Troubleshooting Tips&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SCC Node Fails to Sync Post-Upgrade&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Revalidate HA configuration.&lt;/LI&gt;&lt;LI&gt;Restart both services and monitor logs.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Backend Systems Not Reachable After Upgrade&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;Ensure no changes occurred in firewall or routing&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Role Switching Issues&lt;/STRONG&gt;:&lt;UL&gt;&lt;LI&gt;Use SCC UI to promote/demote node roles manually if automatic sync fails&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Upgrading SAP Cloud Connector in a high availability environment requires a coordinated, node-by-node approach to ensure service continuity. By following backup, role switching, upgrade, and validation steps, you can execute a smooth upgrade with no loss in availability.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Please refer below blog for Upgrading SCC in Linux environment.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-connector-upgrade-in-high-availability-environment-with-suse/ba-p/13978533" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-connector-upgrade-in-high-av...&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Have you recently upgraded your HA-enabled SAP Cloud Connector? Share your experience or questions in the comments section below!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;STRONG&gt;References:&lt;/STRONG&gt;&lt;/U&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;2539713 - Upgrade to a new version of the Cloud Connector&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://me.sap.com/notes/2539713/E" target="_blank" rel="noopener noreferrer"&gt;https://me.sap.com/notes/2539713/E&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/upgrade?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/upgrade?locale=en-US&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/upgrade-sap-cloud-connector-in-high-availability-environments-with-windows/ba-p/14143625"/>
    <published>2025-07-05T11:13:19.630000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/leverage-high-availability-feature-of-cloud-connector-from-abap-backend/ba-p/14151801</id>
    <title>Leverage High Availability feature of Cloud Connector from ABAP backend System for Service Channel</title>
    <updated>2025-07-14T13:18:25.484000+02:00</updated>
    <author>
      <name>Subhopriyo_Lahiry</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1467449</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1605927664"&gt;&lt;U&gt;Introduction:&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;This guide explains the idea to consume the high available solution of cloud connector from an On-Premise ABAP/Private Cloud ABAP system, where the SAP ABAP application is calling the cloud services of ABAP Cloud tenant in BTP using RFC (On-Premise to Cloud Connectivity) via service channel defined in the Cloud Connector.&lt;/P&gt;&lt;P&gt;The Cloud Connector have in built product High Available feature, with two node setup, one acting as Master and other as Shadow. For the On-Premise ABAP/Private Cloud ABAP system to be able to call the ABAP Cloud tenant services, a type-3 ABAP connection RFC has to be defined in the backend ABAP system with the destination of Cloud Connector host. In High Available cloud connector setup, the RFC in backend ABAP system fails if it does not have the current master host of the Cloud Connector as defined target host. To bridge this gap, a TCP-Network Load Balancer (Layer 4) is needed between the ABAP system and the Cloud Connector, to redirect the connection to the current master instance of the Cloud Connector.&lt;/P&gt;&lt;P&gt;The scope of this guide is to cover the steps in Cloud Connector, On-Premise ABAP/Private Cloud ABAP system, and the hyperscaler specific Load Balancer. The steps required in BTP to provision ABAP Cloud Tenant (IBP RTI) is out of scope, although you can follow the SAP learning link which explains the steps to provision an ABAP Cloud Tenant in BTP, &lt;A target="_self"&gt;ABAP Tenant Provision in BTP .&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This blog could be useful to all and any use cases where not only ABAP RFC but any clients to route the traffic to the Cloud Connector seamlessly based on their active master node.&lt;/P&gt;&lt;P&gt;RISE/ECS customers can also make use of this blog to setup and complete their IBP-RTI setup and for any other use case where a client need to route to active master node of cloud connector with the help of a TCP-Load Balancer (network layer 4).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1409414159"&gt;&lt;U&gt;Prerequisites:&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;ABAP Cloud Tenant in BTP. &lt;/SPAN&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Note down the &lt;/SPAN&gt;&lt;U&gt;&lt;EM&gt;ABAP tenant endpoint&lt;/EM&gt;&lt;/U&gt;&lt;SPAN&gt; and the &lt;/SPAN&gt;&lt;U&gt;&lt;EM&gt;instance number&lt;/EM&gt;&lt;/U&gt;&lt;SPAN&gt; while creating the instance or the service key of the instance.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;SPAN&gt;Cloud Connector version 2.18.1.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;High Available Cloud Connector instance with two nodes, master and shadow.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;On-Premise ABAP/Private Cloud ABAP system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Network Load Balancer (TCP - Layer 4).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1212900654"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1016387149"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-819873644"&gt;&lt;U&gt;Dependencies on Prerequisite:&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-752442858"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;FONT size="3"&gt;Why Network Load Balancer?&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The connection initiates from On-Premise ABAP/Private Cloud ABAP system. In order to consume the cloud services of ABAP Cloud Tenant, the communication channel has to be a type-3 ABAP connection RFC. The RFC works at network layer 4, hence the next hop of RFC has to be a network load balancer which also functions at network layer 4. The other alternative for Load Balancer is ALB or Application Load Balancer/Gateway, which works at network layer 7 and cannot listen on requests coming from RFC.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-555929353"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;FONT size="3"&gt;Why Cloud Connector version 2.18.1?&lt;/FONT&gt;&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Starting with Cloud Connector version 2.18.1, SAP introduced a new API, &lt;STRONG&gt;&lt;I&gt;/exposed?action=ensureMasterRole&lt;/I&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;I&gt; .&lt;/I&gt;&lt;/STRONG&gt; This API can be used to identify the current role of the Cloud Connector nodes and the result can be interpreted by an NLB or Network Load Balancer with the help of return codes of the API, which is explained as below:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Current Master&lt;/STRONG&gt; -&amp;gt; &lt;A href="https://%3chostname%3e:8443/exposed?action=ensureMasterRole" target="_blank" rel="noopener nofollow noreferrer"&gt;https://&amp;lt;hostname&amp;gt;:8443/exposed?action=ensureMasterRole&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Response: &lt;FONT color="#008000"&gt;&lt;I&gt;true&lt;/I&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;HTTP Return Code: &lt;FONT color="#008000"&gt;&lt;I&gt;200&lt;/I&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Result: &lt;FONT color="#008000"&gt;&lt;EM&gt;Healthy&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Current Shadow&lt;/STRONG&gt; -&amp;gt; &lt;A href="https://%3chostname%3e:8443/exposed?action=ensureMasterRole" target="_blank" rel="noopener nofollow noreferrer"&gt;https://&amp;lt;hostname&amp;gt;:8443/exposed?action=ensureMasterRole&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Response: &lt;FONT color="#FF0000"&gt;&lt;I&gt;false&lt;/I&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;HTTP Return Code: &lt;FONT color="#FF0000"&gt;&lt;I&gt;409&lt;/I&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Result&lt;I&gt;: &lt;FONT color="#FF0000"&gt;Unhealthy&lt;/FONT&gt;&lt;/I&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Network Load Balancer cannot interpret text response of any uri endpoint/api, it can only read the HTTP Return Code. Hence with the newly introduced api, a health-probe can be configured in the Network Load Balancer, which will only consider the HTTP Return Code 200 as healthy and any other HTTP Return Code as unhealthy. Hence, when the HTTP Return Code in 200, Network Load Balancer can identify the cloud connector node as "&lt;I&gt;master" &lt;/I&gt;and only forward request to the &lt;I&gt;master &lt;/I&gt;&amp;nbsp;node of the Cloud Connector Instance.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-230333129"&gt;&lt;U&gt;Architecture:&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_0-1752490105794.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286188i2D21790366C6271D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_0-1752490105794.png" alt="Subhopriyo_Lahiry_0-1752490105794.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-33819624"&gt;&lt;U&gt;Configuration Steps:&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--33611162"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; Cloud Connector&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;1. Connect the subaccount in BTP where ABAP Cloud Tenant is provisioned.&lt;BR /&gt;2. Define Service Channel in the connected subaccount to connect to ABAP Cloud Tenant from "On-Premises to Cloud".&lt;BR /&gt;3. ABAP Cloud Tenant Host : ABAP Cloud Tenant Endpoint API [&lt;EM&gt;Details can be found from service key of ABAP Cloud Tenant Instance&lt;/EM&gt;].&lt;BR /&gt;4. Local Instance Number: Instance Number of ABAP Cloud Tenant, which you define while provisioning in BTP. [&lt;EM&gt;Check Prerequisites first point&lt;/EM&gt;].&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_1-1752490326006.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286190i9E4166B3E953BE90/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_1-1752490326006.png" alt="Subhopriyo_Lahiry_1-1752490326006.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_2-1752490337452.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286191iF3FAE8E3FE734370/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_2-1752490337452.png" alt="Subhopriyo_Lahiry_2-1752490337452.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;After adding the above details, it should be connected, status should be green and look like below:&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_3-1752490390220.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286193iBCF99A03A7BC59DA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_3-1752490390220.png" alt="Subhopriyo_Lahiry_3-1752490390220.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-117129690"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--79383815"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Network Load Balancer (Internal)&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Below steps are documented in Azure, but the concept can be translated to AWS and GCP as well. The Load Balancer should belong to the same Virtual Network and Subnet of the Cloud Connector and ABAP On-Premise/Private Cloud.&lt;/P&gt;&lt;P&gt;1. Add the two cloud connector high available node hostnames as the backend pools of the Load Balancer.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_4-1752490508906.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286195i67D2DA1B839D2124/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_4-1752490508906.png" alt="Subhopriyo_Lahiry_4-1752490508906.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; 2.&amp;nbsp;Add health probe with&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Protocol : &lt;FONT color="#FF0000"&gt;HTTPS&lt;/FONT&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Port : &lt;FONT color="#FF0000"&gt;8443&lt;/FONT&gt; (Cloud Connector Standard port)&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Path : &lt;FONT color="#FF0000"&gt;/exposed?action=ensureMasterRole&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_5-1752491018117.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286196iAA23665B984FE10D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_5-1752491018117.png" alt="Subhopriyo_Lahiry_5-1752491018117.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;3. Add Load Balancing Rules with below details:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;Frontend IP configuration&lt;/U&gt;&lt;SPAN&gt;: Frontend IP address of the LB ( whatever comes as default) as static.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;Backend pool&lt;/U&gt;&lt;SPAN&gt; : Select the defined backend pool from step 1.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;Protocol&lt;/U&gt;&lt;SPAN&gt; : TCP.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;Port&lt;/U&gt;&lt;SPAN&gt; : 33&amp;lt;nn&amp;gt;. This is the port on which the Load Balancer will listen for incoming requests.&lt;/SPAN&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;lt;nn&amp;gt; -&amp;gt; ABAP Cloud tenant Instance Number.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;U&gt;Backend Port&lt;/U&gt;&lt;SPAN&gt; : 33&amp;lt;nn&amp;gt;. This is the port on which the Load Balancer will forward the request as next hop. &lt;/SPAN&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;lt;nn&amp;gt; -&amp;gt; ABAP Cloud tenant Instance Number.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;U&gt;Health Probe&lt;/U&gt;&lt;SPAN&gt; : Select the health probe defined from step 2.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_6-1752491164951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286197i3D92691D7618ACC8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_6-1752491164951.png" alt="Subhopriyo_Lahiry_6-1752491164951.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--275897320"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; On-Premise / Private Cloud ABAP system:&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;1. Create a type-3 ABAP Connection RFC from SM59, with details as below:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;U&gt;Target Host&lt;/U&gt;&lt;SPAN&gt; : FQDN/IP of TCP Load Balancer.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;U&gt;Instance No&lt;/U&gt;&lt;SPAN&gt;&lt;U&gt;.&lt;/U&gt; : ABAP Cloud Tenant Instance Number, as defined during provisioning in BTP.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_7-1752491414102.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286198iAFC72E8B1417866E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_7-1752491414102.png" alt="Subhopriyo_Lahiry_7-1752491414102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. Connect test should be successful.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subhopriyo_Lahiry_8-1752491452651.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286199i89BD18CA59087CCA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Subhopriyo_Lahiry_8-1752491452651.png" alt="Subhopriyo_Lahiry_8-1752491452651.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--179007818"&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;U&gt;Bibliography:&lt;/U&gt;&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;This blog is a configuration optimisation over the previously very well explained blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/ibp-rti-cloud-connector-high-availability-setup/ba-p/13934136" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/ibp-rti-cloud-connector-high-availability-setup/ba-p/13934136&lt;/A&gt;&amp;nbsp;by Laxman Singh, in which he explained the setup using custom health probe, but starting from cloud connector version 2.18.1 custom probe is no longer needed as it can be achieved with standard api. This is important for RISE customers, as custom probe is not allowed in RISE.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/monitoring-apis#loiof6e7a7bc6af345d2a334c2427a31d294__masterRole" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/monitoring-apis#loiof6e7a7bc6af345d2a334c2427a31d294__masterRole&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/3439494" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://me.sap.com/notes/3439494&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-service-channel-for-rfc?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-service-channel-for-rfc?locale=en-US&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://learning.sap.com/learning-journeys/setting-up-an-abap-environment-on-sap-btp/preparing-to-set-up-an-abap-environment_da85b82a-eb42-4eec-92f0-225b99402a2d" target="_blank" rel="noopener noreferrer"&gt;&lt;SPAN&gt;https://learning.sap.com/learning-journeys/setting-up-an-abap-environment-on-sap-btp/preparing-to-set-up-an-abap-environment_da85b82a-eb42-4eec-92f0-225b99402a2d&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/leverage-high-availability-feature-of-cloud-connector-from-abap-backend/ba-p/14151801"/>
    <published>2025-07-14T13:18:25.484000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-s-4hana-cloud-data-via-sap-build-code-on-the-sap-btp-platform/ba-p/14146303</id>
    <title>Accessing S/4HANA Cloud Data via SAP Build Code on the SAP BTP Platform</title>
    <updated>2025-07-16T11:09:48.847000+02:00</updated>
    <author>
      <name>SubramaniyanVenkatraman</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1536504</uri>
    </author>
    <content>&lt;P&gt;Recently, I had the opportunity to contribute to the development of an agentic use case, where I need to fetch data from an S/4HANA Cloud system using existing OData services.&amp;nbsp;This experience gave me hands-on exposure to working with S/4HANA Cloud and understanding how to integrate its data seamlessly into an external application.&lt;/P&gt;&lt;P&gt;In this blog post, I’ll walk you through the step-by-step process of retrieving data from an S/4HANA Cloud system using OData.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is SAP Business Technology Platform?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;SAP BTP (Business Technology Platform) is SAP’s unified platform-as-a-service (PaaS) offering that provides tools, services, and runtimes for building, integrating, and extending SAP and non-SAP applications in the cloud.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is SAP Cloud Connector?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The SAP Cloud Connector is a key component in the SAP Business Technology Platform (BTP) landscape. It acts as a secure bridge between your on-premise systems (like SAP S/4HANA on-prem or other internal services) and SAP BTP or cloud-based applications.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;What is Destination Service?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;The SAP Destination Service is a managed service on SAP Business Technology Platform (BTP) that simplifies and secures how your cloud applications connect to remote systems such as SAP S/4HANA Cloud, on-premise systems, or third-party APIs.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Instead of hardcoding URLs, credentials, and connection details inside your app, you create a destination configuration in BTP and refer to it in your code.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Download and Install SAP Cloud Connector&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;You can download the Cloud Connector compatible with your machine from the following link: &lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_0-1751905832976.png" style="width: 594px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283580iBD425B307D084A40/image-dimensions/594x220?v=v2" width="594" height="220" role="button" title="Subu1_0-1751905832976.png" alt="Subu1_0-1751905832976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 1. Cloud Connector download&lt;/P&gt;&lt;P&gt;For Windows, you can choose between the ZIP archive and the MSI installer. The ZIP archive is suitable for development use cases, while the MSI installer is recommended for productive environments, as it installs the Cloud Connector as a service on the server.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Initial Configuration&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;To configure the SCC, open a browser and navigate to:&lt;BR /&gt;https://&amp;lt;hostname&amp;gt;:8443&lt;/P&gt;&lt;P&gt;Replace &amp;lt;hostname&amp;gt; with the name of the machine where the connector is installed. The port number should match the one configured during installation, by default, it is &lt;STRONG&gt;8443&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To find the hostname of your machine, open Command Prompt and enter:&lt;BR /&gt;hostname&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_0-1751906070203.png" style="width: 455px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283584iA7C98747F6067952/image-dimensions/455x281?v=v2" width="455" height="281" role="button" title="Subu1_0-1751906070203.png" alt="Subu1_0-1751906070203.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 2. Cloud Connector Login&amp;nbsp;&lt;/P&gt;&lt;P&gt;Enter the default credentials (case-sensitive) and click Login:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Username&lt;/STRONG&gt;: Administrator&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password&lt;/STRONG&gt;: manage&lt;/P&gt;&lt;P&gt;Upon your first login, you'll be prompted to change the password. After updating it, select Master as the installation type and click Save.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_1-1751906070207.png" style="width: 647px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283583iC2DF2AE585678D97/image-dimensions/647x189?v=v2" width="647" height="189" role="button" title="Subu1_1-1751906070207.png" alt="Subu1_1-1751906070207.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 3. Reset password for SCC&lt;/P&gt;&lt;P&gt;The next step is to add your BTP subaccount to the Cloud Connector.&lt;/P&gt;&lt;P&gt;Select &lt;STRONG&gt;"Choose Manually"&lt;/STRONG&gt; to enter your subaccount details manually.&lt;/P&gt;&lt;P&gt;On the following screen, provide the required information about your BTP subaccount. This is necessary to establish a secure tunnel between the Cloud Connector (SCC) and your SAP BTP subaccount.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Region:&lt;/STRONG&gt; The region where your subaccount was created (see the picture below).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Subaccount:&lt;/STRONG&gt; Your subaccount ID (see the picture below).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Login E-Mail:&lt;/STRONG&gt; The email address used when creating the BTP account.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password:&lt;/STRONG&gt; The password used when creating the BTP account.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_2-1751906070208.png" style="width: 647px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283582iBBB5E81F0FBE019B/image-dimensions/647x207?v=v2" width="647" height="207" role="button" title="Subu1_2-1751906070208.png" alt="Subu1_2-1751906070208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 4. Connect BTP Sub Account to SCC&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_3-1751906070210.png" style="width: 577px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283585i2B634AC444043702/image-dimensions/577x423?v=v2" width="577" height="423" role="button" title="Subu1_3-1751906070210.png" alt="Subu1_3-1751906070210.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 5: Cloud Connector – BTP Sub Account Registration&lt;/P&gt;&lt;P&gt;Once successfully added your sub account you will see the screenshot as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_4-1751906070217.png" style="width: 653px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283586i9962B65516FCA896/image-dimensions/653x320?v=v2" width="653" height="320" role="button" title="Subu1_4-1751906070217.png" alt="Subu1_4-1751906070217.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 6. Successful Sub Account Registration&lt;/P&gt;&lt;P&gt;This shows that you have successfully connected your sub account with the cloud connector.&lt;/P&gt;&lt;P&gt;Now its time to connect your On-Premise system.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;Connecting “Cloud to On-Premise” Connection:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Connect your on-premise system to the cloud connector so that it can be access in Business Technology Platform.&lt;/P&gt;&lt;P&gt;Under the sub account ID in your cloud connector click on Cloud to On-Premise in the left menu and then click on ‘+’ sign to add the system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_5-1751906070219.png" style="width: 654px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283587i38320B5D070D0339/image-dimensions/654x147?v=v2" width="654" height="147" role="button" title="Subu1_5-1751906070219.png" alt="Subu1_5-1751906070219.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 7. Add S/4 HANA Cloud System in SCC&lt;/P&gt;&lt;P&gt;In the pop up that open choose ABAP System as the backend type and choose protocol as HTTP.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_6-1751906070220.png" style="width: 594px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283588i08233CF834511404/image-dimensions/594x266?v=v2" width="594" height="266" role="button" title="Subu1_6-1751906070220.png" alt="Subu1_6-1751906070220.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 8. Add Back End system type&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_7-1751906070221.png" style="width: 575px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283589i90C980499D916BBB/image-dimensions/575x250?v=v2" width="575" height="250" role="button" title="Subu1_7-1751906070221.png" alt="Subu1_7-1751906070221.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 9: Define Protocol for Backend Connection&lt;/P&gt;&lt;P&gt;For the “internal host” use the hostname or the ip address of the ABAP system and its corresponding ICM port number.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_8-1751906070222.png" style="width: 570px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283590i9C96AB2604DBE652/image-dimensions/570x254?v=v2" width="570" height="254" role="button" title="Subu1_8-1751906070222.png" alt="Subu1_8-1751906070222.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 10: Configuring System Host Details&lt;/P&gt;&lt;P&gt;The “Virtual Host” is the hostname you'll use within BTP. You can either use the default value, which matches the Internal Host, or choose a different, less identifiable name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_23-1751906803846.png" style="width: 589px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283613iB9477F9D55A9A81A/image-dimensions/589x258?v=v2" width="589" height="258" role="button" title="Subu1_23-1751906803846.png" alt="Subu1_23-1751906803846.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 11. Configuring Virtual Host&lt;/P&gt;&lt;P&gt;We'll leave the “Principal Type” set to “None” for now.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_24-1751906857120.png" style="width: 562px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283614iE8E706CF9446CAD2/image-dimensions/562x250?v=v2" width="562" height="250" role="button" title="Subu1_24-1751906857120.png" alt="Subu1_24-1751906857120.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 12. Configure Principal Propagation&lt;/P&gt;&lt;P&gt;Select to use virtual host for “Host in Request Header”.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_25-1751906921412.png" style="width: 572px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283615iCFF53A0C11EBF11C/image-dimensions/572x254?v=v2" width="572" height="254" role="button" title="Subu1_25-1751906921412.png" alt="Subu1_25-1751906921412.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 13: Selecting Virtual Host Option&lt;/P&gt;&lt;P&gt;Provide the SAP ABAP system name.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_12-1751906070226.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283596i7EFA72A5119A333C/image-dimensions/552x243?v=v2" width="552" height="243" role="button" title="Subu1_12-1751906070226.png" alt="Subu1_12-1751906070226.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 14. Selecting ABAP System&amp;nbsp;&lt;/P&gt;&lt;P&gt;Check the summary and click on finish.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_13-1751906070227.png" style="width: 575px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283594i5E799C382D674F96/image-dimensions/575x257?v=v2" width="575" height="257" role="button" title="Subu1_13-1751906070227.png" alt="Subu1_13-1751906070227.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 15. Summary&lt;/P&gt;&lt;P&gt;After successfully creating mapping we need to create resource which is the actual service. Click on the ‘+’ sign under the resources section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_14-1751906070230.png" style="width: 603px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283595iDFF1FCD9D6E57CBE/image-dimensions/603x175?v=v2" width="603" height="175" role="button" title="Subu1_14-1751906070230.png" alt="Subu1_14-1751906070230.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 16: Resource&amp;nbsp;&lt;/P&gt;&lt;P&gt;To grant the subaccount access to all services, enter &lt;STRONG&gt;/sap&lt;/STRONG&gt; in the URL path and choose &lt;STRONG&gt;"Path and All Sub-Paths"&lt;/STRONG&gt; under the Access Policy setting. This setup can be adjusted later to restrict access to specific resources, which is strongly advised for production environments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_15-1751906070231.png" style="width: 553px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283597iEF74383BD358B23B/image-dimensions/553x336?v=v2" width="553" height="336" role="button" title="Subu1_15-1751906070231.png" alt="Subu1_15-1751906070231.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 17: Adding a New Resource&lt;/P&gt;&lt;P&gt;Now check the resource available and ensure that the backend system is reachable as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_16-1751906070235.png" style="width: 595px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283598iBC0AE0FD4DA58552/image-dimensions/595x171?v=v2" width="595" height="171" role="button" title="Subu1_16-1751906070235.png" alt="Subu1_16-1751906070235.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 18. Check for connection status&lt;/P&gt;&lt;P&gt;Once the system is reachable you will see the status as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_17-1751906070238.png" style="width: 609px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283599i293D8DF11A6808FF/image-dimensions/609x186?v=v2" width="609" height="186" role="button" title="Subu1_17-1751906070238.png" alt="Subu1_17-1751906070238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 19: Verifying System Reachability&lt;/P&gt;&lt;P&gt;If you face some issues in reaching backend system maintain the below configurations at&lt;/P&gt;&lt;P&gt;“Run-&amp;gt;drivers-&amp;gt;Click on ok-&amp;gt; Go to etc folder-&amp;gt;edit hosts”&lt;/P&gt;&lt;P&gt;Add the host details at the bottom and click on SAVE as an example below:&lt;/P&gt;&lt;P&gt;&amp;nbsp;127.54.99.98&amp;nbsp; &amp;nbsp; test.com&lt;/P&gt;&lt;P&gt;If not able to edit copy paste in different location and then change and paste again.&lt;/P&gt;&lt;P&gt;Now you will be able to see the connected CC in your BTP account as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_18-1751906070243.png" style="width: 633px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283602iF17E5BA900AD483A/image-dimensions/633x313?v=v2" width="633" height="313" role="button" title="Subu1_18-1751906070243.png" alt="Subu1_18-1751906070243.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 20. Cloud Connector status in BTP&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Create a Destination Service&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Now lets create a destination service.&lt;/P&gt;&lt;P&gt;BTP (Business Technology Platform) destinations serve as configuration endpoints that define how to establish secure connections with external systems or services. Commonly used in cloud environments, these destinations facilitate communication between different cloud-based applications by specifying connection parameters like endpoint URLs, authentication methods, and additional settings. You can create and manage BTP destinations through the SAP BTP Cockpit or by using the SAP Cloud SDK. They are applicable in various use cases, including accessing external data sources, calling third-party web services, or delivering notifications to external platforms.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_19-1751906070248.png" style="width: 598px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283601i72C5196420226574/image-dimensions/598x296?v=v2" width="598" height="296" role="button" title="Subu1_19-1751906070248.png" alt="Subu1_19-1751906070248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 21: Creating a Destination in SAP BTP&lt;/P&gt;&lt;P&gt;Maintain the below configuration details:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;: Name of your destination&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Type&lt;/STRONG&gt;: HTTP / HTTPS&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;URL&lt;/STRONG&gt;: Enter the virtual host name maintained in Cloud Connector&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;: Basic Authentication&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User&lt;/STRONG&gt;: Enter the backend username&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Password&lt;/STRONG&gt;: Enter the corresponding password&lt;/P&gt;&lt;P&gt;In the additional properties maintain the below pairs:&lt;/P&gt;&lt;P&gt;"WebIDEEnabled": "true"&lt;/P&gt;&lt;P&gt;“HTML5.DynamicDestination” :"true"&lt;/P&gt;&lt;P&gt;"AppgyverEnabled" :"true"&lt;/P&gt;&lt;P&gt;“sap-platform”:”ABAP”&lt;/P&gt;&lt;P&gt;“sap.build.usage”:”true”&lt;/P&gt;&lt;P&gt;“webIDEUsage”:”odata_gen”&lt;/P&gt;&lt;P&gt;“sap-client”:”000”&lt;/P&gt;&lt;P&gt;These parameters are mantatory in certain ways to consume the destination service via SAP Build Code.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_20-1751906070251.png" style="width: 600px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283600i0B04CDAE458CE41B/image-dimensions/600x228?v=v2" width="600" height="228" role="button" title="Subu1_20-1751906070251.png" alt="Subu1_20-1751906070251.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 22. BTP Destination Service&lt;/P&gt;&lt;P&gt;Click on “Save” to save the destination and click on Check Destination to check if the connection is successful.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_21-1751906070255.png" style="width: 604px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283603iDC2D92901035ED43/image-dimensions/604x214?v=v2" width="604" height="214" role="button" title="Subu1_21-1751906070255.png" alt="Subu1_21-1751906070255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 23. Check Connection&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Create a SAP Build Code Project&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now lets create a SAP Build code project. Go to Instances and Subscription and click on SAP Build Code. Hope the SAP Build code is already subscribed to your sub account.&lt;/P&gt;&lt;P&gt;In the SAP Build Code click on Create to create a new project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_22-1751906070263.png" style="width: 600px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283604i124A998BDCA1F71F/image-dimensions/600x216?v=v2" width="600" height="216" role="button" title="Subu1_22-1751906070263.png" alt="Subu1_22-1751906070263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 24. Create a SAP Build Code project&lt;/P&gt;&lt;P&gt;Click on Application -&amp;gt; Next -&amp;gt; Full Stack -&amp;gt; Next -&amp;gt; Full stack Node.JS&lt;/P&gt;&lt;P&gt;Enter the name of the project and click on Review to review the details and then click on Create to create the project.&lt;/P&gt;&lt;P&gt;Once the project is created copy paste the below code:&lt;/P&gt;&lt;P&gt;For demonstration purposes, I have used an example involving the retrieval and modification of Purchase Order data.&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;from flask import Flask, request, jsonify
import os
import requests
import json
import base64

# ---------------------------------------------------------------------
# Application Initialization
# ---------------------------------------------------------------------
app = Flask(__name__)

# ---------------------------------------------------------------------
# Fetching port details
# ---------------------------------------------------------------------
cf_port = os.getenv("PORT")

# ---------------------------------------------------------------------
# Getting OAuth Token
# ---------------------------------------------------------------------
def get_oauth_token(destination_credentials):
    oauth_url = destination_credentials['url'] + "/oauth/token"
    client_id = destination_credentials['clientid']
    client_secret = destination_credentials['clientsecret']

    data = {
        'grant_type': 'client_credentials',
        'client_id': client_id,
        'client_secret': client_secret,
    }

    headers = {
        'Content-Type': 'application/x-www-form-urlencoded'
    }

    response = requests.post(oauth_url, data=data, headers=headers)

    if response.status_code == 200:
        return response.json()['access_token']
    else:
        raise Exception(f"Failed to get OAuth token: {response.status_code} - {response.text}")

# ---------------------------------------------------------------------
# Method to fetch records 
# ---------------------------------------------------------------------
def get_records(lv_dest, lv_string):
    # Get VCAP_SERVICES
    vcap_services = json.loads(os.getenv("VCAP_SERVICES"))

    # Get credentials for Destination service
    destination_credentials = vcap_services['destination'][0]['credentials']
    connectivity_credentials = vcap_services['connectivity'][0]['credentials']
    destination_name = lv_dest
    dest_token = get_oauth_token(destination_credentials)

    # Fetch destination config
    dest_url = f"{destination_credentials['uri']}/destination-configuration/v1/destinations/{destination_name}"
    headers = {"Authorization": f"Bearer {dest_token}"}
    dest_response = requests.get(dest_url, headers=headers)
    dest_response.raise_for_status()
    dest_config = dest_response.json()['destinationConfiguration']

    #  Build full URL
    target_url = dest_config['URL'] + lv_string

    # Token for Connectivity Proxy
    conn_token = get_oauth_token(connectivity_credentials)

    # Use Connectivity Proxy (Cloud Connector)
    proxies = {
        "http": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}",
        "https": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}"
    }

    backend_user = dest_config['User']
    backend_password = dest_config['Password']
    auth_string = f"{backend_user}:{backend_password}"
    auth_encoded = base64.b64encode(auth_string.encode()).decode()

    # Headers for proxy request
    headers = {
        "Accept": "application/json",
        "Proxy-Authorization": f"Bearer {conn_token}",
        "Authorization": f"Basic {auth_encoded}"
    }

    if 'CloudConnectorLocationId' in dest_config:
        headers['SAP-Connectivity-SCC-Location_ID'] = dest_config['CloudConnectorLocationId']

    # Make the proxied request
    response = requests.get(target_url, headers=headers, proxies=proxies)
    response.raise_for_status()
    print("Status:", response.status_code)
    print("Headers:", response.headers)
    print("Body:", response.text)
    return response.json()

# ---------------------------------------------------------------------
# Method to update a record
# ---------------------------------------------------------------------
def update_record(destination_name, path, payload):
    # Get VCAP_SERVICES
    vcap_services = json.loads(os.getenv("VCAP_SERVICES"))

    # Get credentials for Connectivity and Destination service
    destination_credentials = vcap_services['destination'][0]['credentials']
    connectivity_credentials = vcap_services['connectivity'][0]['credentials']
    dest_token = get_oauth_token(destination_credentials)

    # Destination config
    dest_url = f"{destination_credentials['uri']}/destination-configuration/v1/destinations/{destination_name}"
    headers = {"Authorization": f"Bearer {dest_token}"}
    dest_response = requests.get(dest_url, headers=headers)
    dest_response.raise_for_status()
    dest_config = dest_response.json()['destinationConfiguration']

    #  Build full URL
    target_url = dest_config['URL'] + path

    # Token for Connectivity Proxy
    conn_token = get_oauth_token(connectivity_credentials)

    # Use Connectivity Proxy (Cloud Connector)
    proxies = {
        "http": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}",
        "https": f"http://{connectivity_credentials['onpremise_proxy_host']}:{connectivity_credentials['onpremise_proxy_port']}"
    }

    backend_user = dest_config['User']
    backend_password = dest_config['Password']
    auth_string = f"{backend_user}:{backend_password}"
    auth_encoded = base64.b64encode(auth_string.encode()).decode()

    # Headers for proxy request
    common_headers = {
        "Proxy-Authorization": f"Bearer {conn_token}",
        "Authorization": f"Basic {auth_encoded}",
        "Accept": "application/json"
    }

    if 'CloudConnectorLocationId' in dest_config:
        common_headers['SAP-Connectivity-SCC-Location_ID'] = dest_config['CloudConnectorLocationId']

    # Fetch CSRF Token and Cookies
    token_headers = common_headers.copy()
    token_headers["x-csrf-token"] = "Fetch"

    session = requests.Session()
    token_response = session.get(target_url, headers=token_headers, proxies=proxies)

    if token_response.status_code != 200:
        return token_response.status_code, token_response.text

    csrf_token = token_response.headers.get("x-csrf-token")
    if not csrf_token:
        return 403, "CSRF token not returned"

    # Send PATCH with token and cookies
    update_headers = common_headers.copy()
    update_headers["x-csrf-token"] = csrf_token
    update_headers["Content-Type"] = "application/json"

    # Use session to preserve cookies
    patch_response = session.patch(target_url, headers=update_headers, json=payload, proxies=proxies)

    return patch_response.status_code, patch_response.text

# ---------------------------------------------------------------------
# Update endpoint (POST or GET for testing)
# ---------------------------------------------------------------------
@app.route('/update_data', methods=['GET', 'POST'])
def update_data():
    if request.method == 'GET':
        purchase_order = "12345"
        item = "10"
        update_payload = {
            "DocumentCurrency": "EUR",
        }
    else:
        if not request.is_json:
            return jsonify({"error": "Request must be application/json"}), 415

        data = request.get_json()
        purchase_order = data.get("PurchaseOrder")
        item = data.get("PurchaseOrderItem")

        if not purchase_order or not item:
            return jsonify({"error": "Missing PurchaseOrder or PurchaseOrderItem"}), 400

        item = str(item).zfill(5)  # Pad item number to 5 digits

        update_payload = {
            "OrderQuantity": 15,
        }

    path = f"/sap/opu/odata4/sap/api_purchaseorder_2/srvd_a2x/sap/purchaseorder/0001/PurchaseOrderItem(PurchaseOrder='{purchase_order}',PurchaseOrderItem='{item}')?sap-client=001&amp;amp;$format=json" #Change the OData URL

    status_code, response_text = update_record('Destination_name', path, update_payload) #Modify Destination name

    return jsonify({
        "status_code": status_code,
        "response": response_text
    })

# ---------------------------------------------------------------------
# Fetch record endpoint
# ---------------------------------------------------------------------
@app.route('/fetch_data', methods=['GET'])
def fetch_data():
    lv_request = get_records('Destination_name', '/sap/opu/odata4/sap/api_purchaseorder_2/srvd_a2x/sap/purchaseorder/0001/PurchaseOrderItem?sap-client=001&amp;amp;$format=json') #Change Destination name and OData URL
    return jsonify(lv_request)

# ---------------------------------------------------------------------
# Home page
# ---------------------------------------------------------------------
@app.route('/', methods=['GET'])
def home():
    lv_return = {
        "result": [
            {
                'message':  'Welcome to the homepage!',
                'Fetch_data' : 'Use /fetch_data',
                'Update_data' : 'Use /update_data'
            }
        ]
    }
    return jsonify(status='200', replies=lv_return)


# ---------------------------------------------------------------------
# Main method
# ---------------------------------------------------------------------
if __name__ == '__main__':
# If the app is running locally
    if cf_port is None:
# Use port 5000
        app.run(host='0.0.0.0', port=5000, debug=True)
    else:
# Else use cloud foundry default port
        app.run(host='0.0.0.0', port=int(cf_port), debug=False)&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Create a manifest.yml file and paste the below:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;---
applications:
- name: data_read  #Replace with your app name
  random-route: true
  path: ./
  memory: 1028M
  buildpacks:
  - python_buildpack
  command: python backend.py  #Python file name
  services:
  - service_name_001
  env:
    PYTHON_VERSION: 3.11.10&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In the manifest.yml file above, most sections are self-explanatory and have been annotated with comments. The key part to focus on is the services section. To use the configured destination service, you need to create an instance of it. This service is crucial when your application needs to interact with remote systems, such as SAP S/4HANA Cloud, on-premise systems, or third-party APIs.&lt;/P&gt;&lt;P&gt;The destination service is bound to you app so that it can access the destination definition.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;What happens behind the scene?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;When you bind the Destination Service to your app:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;BTP injects the credentials into your app's environment as VCAP_SERVICES&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Your app code can use a destination name to resolve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The target URL&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authentication method (Basic, OAuth2, etc.)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Proxy type (Internet or OnPremise)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you are connecting to an on-premise system, it routes through SAP Cloud Connector.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;How to create a service in BTP?&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Log in to SAP BTP Cockpit&lt;/LI&gt;&lt;LI&gt;Navigate to your subaccount → Cloud Foundry environment → Space.&lt;/LI&gt;&lt;LI&gt;Go to the Services -&amp;gt; Instances&amp;nbsp;section.&lt;/LI&gt;&lt;LI&gt;Click Create Instance.&lt;/LI&gt;&lt;LI&gt;Choose a Service&lt;SPAN&gt; (e.g.:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;"Destination" for Destination Service&lt;/LI&gt;&lt;LI&gt;"Connectivity" for accessing on-premise systems&lt;/LI&gt;&lt;LI&gt;"xsuaa" for user authentication/authorization&lt;/LI&gt;&lt;LI&gt;"hana-cloud" or postgresql for databases&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Choose a plan (e.g. lite, standard, etc.)&lt;/LI&gt;&lt;LI&gt;Enter the name&lt;/LI&gt;&lt;LI&gt;Click Create&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_0-1751923651041.png" style="width: 593px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283657i69E3B1708C898F44/image-dimensions/593x555?v=v2" width="593" height="555" role="button" title="Subu1_0-1751923651041.png" alt="Subu1_0-1751923651041.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 25. Create a service&lt;/P&gt;&lt;P&gt;Alternatively you can also create a service using bash command as below:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;cf create-service destination lite service_name_001 #Replace with your service name&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once the coding is complete, you can proceed with testing the functionality.&lt;/P&gt;&lt;P&gt;Using terminal login to cloud foundry, use the command&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;cf login&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_1-1751911193537.png" style="width: 574px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283623i457FA664D3A81A60/image-dimensions/574x158?v=v2" width="574" height="158" role="button" title="Subu1_1-1751911193537.png" alt="Subu1_1-1751911193537.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Fig 26. Login to CF&lt;/P&gt;&lt;P&gt;Once the login is successful you will see the below message&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_1-1751923900662.png" style="width: 583px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283658iDFB1A4C327B6F3D9/image-dimensions/583x169?v=v2" width="583" height="169" role="button" title="Subu1_1-1751923900662.png" alt="Subu1_1-1751923900662.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 27. CF login&lt;/P&gt;&lt;P&gt;After which you can deploy your app using the below command&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;cf push&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Once the app is deployed navigate to the cloud foundry -&amp;gt; your space -&amp;gt; your app, get the application routes url for testing.&lt;/P&gt;&lt;P&gt;Use,&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;application_routes_url/&amp;nbsp; &amp;nbsp;&lt;/LI&gt;&lt;LI&gt;application_routes_url/fetch_data&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;application_routes_url/update_data&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Test results&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Home page&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Subu1_2-1751924285431.png" style="width: 524px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283661i0DD99C2D87ACB091/image-dimensions/524x309?v=v2" width="524" height="309" role="button" title="Subu1_2-1751924285431.png" alt="Subu1_2-1751924285431.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 28. Home page&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Fetch Data&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SubramaniyanVenkatraman_0-1752026985083.png" style="width: 618px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284347i95D36853D49AEA9B/image-dimensions/618x133?v=v2" width="618" height="133" role="button" title="SubramaniyanVenkatraman_0-1752026985083.png" alt="SubramaniyanVenkatraman_0-1752026985083.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Fig 29. Fetch data via OData&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Integrating SAP BTP with SAP S/4HANA Cloud using the Destination Service and SAP Cloud Connector provides a secure and scalable way to extend your enterprise systems into the cloud. In this blog, we explored how to configure the necessary services, set up destinations, and connect a cloud application to S/4HANA Cloud to fetch and modify Purchase Order data using OData APIs.&lt;/P&gt;&lt;P&gt;Whether you're building a full-stack application or a lightweight service to automate business processes, understanding the role of Destination Service and Cloud Connector is critical to securely bridging the gap between your cloud apps and backend systems. This approach not only enhances flexibility but also ensures your architecture stays modular, maintainable, and cloud-ready.&lt;/P&gt;&lt;P&gt;I hope this blog serves as a helpful starting point for anyone new to SAP BTP and Destination service. Stay tuned for more hands-on insights and real-world examples from my journey with agentic use cases and enterprise integration!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/accessing-s-4hana-cloud-data-via-sap-build-code-on-the-sap-btp-platform/ba-p/14146303"/>
    <published>2025-07-16T11:09:48.847000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915</id>
    <title>Exposing SAP S4 Onprem data to external System || Odata Service || BTP || Destination-Connectivity</title>
    <updated>2025-07-24T09:09:11.979000+02:00</updated>
    <author>
      <name>Ace_D</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1501366</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735011379"&gt;&lt;STRONG&gt;Prerequisites from BTP Side&lt;/STRONG&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Account&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Access to SAP Business Technology Platform (BTP) with appropriate entitlements.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP Cloud Connector Setup&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP Cloud Connector installed and configured to connect your on-premise S/4HANA system to SAP BTP.&lt;/LI&gt;&lt;LI&gt;Destination configured in BTP cockpit pointing to your on-premise system.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connectivity Service and Destination Service&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;SAP BTP Connectivity service and destination service instance on the BTP account.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Foundry Environment&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Cloud Foundry space set up in your BTP subaccount to deploy the application.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Use Case:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets take a simple use case for creating a RAP service on S4, which is a wrapper API call on the reprocess IDOC function module.&lt;/P&gt;&lt;P&gt;For this we will create a RAP service on the S4 box, than activate the service with the &lt;STRONG&gt;/IWFND/MAINT_SERVICE&amp;nbsp;&lt;/STRONG&gt;and activate the &lt;STRONG&gt;ICF Node as well.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Note: In this blog we will not go through the steps of setting cloud connector and destination on the BTP account. We will assume that destination with cloud connector setup is already available on the BTP.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create and activate the RAP service on the S4 Box.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;We will create a unmanaged rap scenario with custom entity and than we will create a service definition and top of service definition we will create service binding.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752479114889.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286063i6147300A58FD94EB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752479114889.png" alt="Ace_D_0-1752479114889.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Lets create the class for the query implementation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752479219667.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286066i8FE4DD17F2125A3B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752479219667.png" alt="Ace_D_1-1752479219667.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752479284513.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286068i7DF33D859E64B0B5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752479284513.png" alt="Ace_D_3-1752479284513.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752479314425.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286069i1ADC607EAFF20853/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752479314425.png" alt="Ace_D_4-1752479314425.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We are calling the FM to reprocess the idoc and checking the relevant table to get the latest reprocessed idoc status for the same.&lt;/P&gt;&lt;P&gt;Now we will create a service definition and service binding for the custom entity created.&lt;/P&gt;&lt;P&gt;Service Definition&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752479854976.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286073i72B0728E2CDB8D9C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752479854976.png" alt="Ace_D_8-1752479854976.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;And overall project will look something like this.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752479511558.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286070iB8D8CB8704C75416/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752479511558.png" alt="Ace_D_5-1752479511558.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here i have created two types of service bindings v2 and v4 but we will be using only v2 for this.&lt;/P&gt;&lt;P&gt;So overall we created below 4 artifacts.&lt;/P&gt;&lt;P&gt;1. Custom entity&lt;/P&gt;&lt;P&gt;2. Class&lt;/P&gt;&lt;P&gt;3. Service definition&lt;/P&gt;&lt;P&gt;4. Service binding&lt;/P&gt;&lt;P&gt;Now to test the service we will publish the service first and than call the generated url&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752479816432.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286072iDC562CE467DBAAA5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752479816432.png" alt="Ace_D_7-1752479816432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;if you see the image, i have published the service and after publish we also got the custom entity that we have created, click on the &lt;STRONG&gt;service url&lt;/STRONG&gt; and it will open in browser asking for authentication of S4 user id and password.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752480025822.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286074iD29880ABB4A5E44A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752480025822.png" alt="Ace_D_9-1752480025822.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the authentication is successful you should be able to see this.&lt;/P&gt;&lt;P&gt;Now lets open the SAP GUI so that i can show you the ICF node activation, which is generally taken care by basis team.&lt;/P&gt;&lt;P&gt;Open the Tcode:&amp;nbsp;&lt;STRONG&gt;/IWFND/MAINT_SERVICE&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_10-1752480290098.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286075i2C11D72626448B10/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_10-1752480290098.png" alt="Ace_D_10-1752480290098.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here you can find your activated service binding and make sure all components of the service looks as it is in the image.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Assuming cloud connector and destination is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;With this we completed the S4 box setup, now its ready to communicate with other external systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Creating the Destination service and Connectivity service on the BTP Account.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Login in to BTP account and lets create 2 service instances with service keys.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752483153170.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286097iDCC3A3321CE1ECB0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752483153170.png" alt="Ace_D_11-1752483153170.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1.&amp;nbsp;&lt;STRONG&gt;Destination service&lt;/STRONG&gt;, this will help us to get the destination details, Destination service gets all the registered destinations on the BTP, from which we can filter out the destination that is up for our S4 onprem box.&lt;/P&gt;&lt;P&gt;Destination service will give us all the relevant things like user id passwd, location and etc. for that destination.&lt;/P&gt;&lt;P&gt;Service key for the destination service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752483270245.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286098iBE180D64FD0F615E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752483270245.png" alt="Ace_D_12-1752483270245.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752483330309.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286099i127A1F287FB75995/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752483330309.png" alt="Ace_D_13-1752483330309.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. &lt;STRONG&gt;Connectivity Service,&amp;nbsp;&lt;/STRONG&gt;Since we are trying to get the data out of onprem system we will have to use connectivity service from btp, which will provide us proxies, this proxies will be use to call the onprem odata url.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752483491742.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286106i3806395799EEF5CB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752483491742.png" alt="Ace_D_14-1752483491742.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752483598535.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286107iCD11D07C5A492C3E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752483598535.png" alt="Ace_D_15-1752483598535.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It is important to paste here the service keys for better understanding since we will be using many things from the service key into our application&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Lets create a python application to call the onprem service.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important things to consider here.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;By using destination and connectivity service we cannot test the application on local system, we will have to deploy our app on CF to test the same.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;We will use the flask requests and certain other libraries for the python programming&lt;/P&gt;&lt;P&gt;file: .env file to store all the secrets this secrets are from the service keys only.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_2-1752492372749.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286202iF6300349E7896528/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_2-1752492372749.png" alt="Ace_D_2-1752492372749.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;File: Requirements.txt&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_0-1752492015085.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286200i27F53BD3C09B09AE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_0-1752492015085.png" alt="Ace_D_0-1752492015085.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;File: Runtime.txt&lt;/P&gt;&lt;P&gt;python-3.11.*&lt;/P&gt;&lt;P&gt;file: manifest.yaml&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_1-1752492157202.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286201iA56CB734CFA3967C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_1-1752492157202.png" alt="Ace_D_1-1752492157202.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;file:idocapis.py (should be same as mentioned in Manifest.yml file&lt;/P&gt;&lt;P&gt;Load all the required libraries.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_3-1752492555784.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286203iEB454EAAAAA7E66C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_3-1752492555784.png" alt="Ace_D_3-1752492555784.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;define the function to get the token&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_4-1752493129840.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286204i152BA582C8BA1F8B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_4-1752493129840.png" alt="Ace_D_4-1752493129840.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get the list of all destinations on the BTP&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_5-1752493241781.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286205iA640B84C01B00E5E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_5-1752493241781.png" alt="Ace_D_5-1752493241781.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define the function to construct the URL for the odata call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_6-1752493319173.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286206i83806D03EC8AE6C7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_6-1752493319173.png" alt="Ace_D_6-1752493319173.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to get token for the connectivity service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_7-1752493411094.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286213i4C439E0B0047EB4E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_7-1752493411094.png" alt="Ace_D_7-1752493411094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define function to call the odata service with connectivity things&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_8-1752493551879.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286242iDE3AED9EE0D95C35/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_8-1752493551879.png" alt="Ace_D_8-1752493551879.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_9-1752493573946.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286243i670226B5E2674B07/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_9-1752493573946.png" alt="Ace_D_9-1752493573946.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now lets define the final route in flask to call this service&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_13-1752494450583.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286281i0C7C7F657EECF5CA/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_13-1752494450583.png" alt="Ace_D_13-1752494450583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;One thing to note here the&amp;nbsp;&lt;STRONG&gt;RESOURCE variable will depend on the destination url of the onprem that is setup on BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_11-1752494105816.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286279i7A1D0EA83E29C50A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_11-1752494105816.png" alt="Ace_D_11-1752494105816.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_12-1752494133009.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286280iBAC4EB399CB3AEFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_12-1752494133009.png" alt="Ace_D_12-1752494133009.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;STEP 4: Deployment&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets deploy the app on the CF by pushing the app to the cloud foundry from the BAS&lt;/P&gt;&lt;P&gt;Use command &lt;STRONG&gt;cf push&lt;/STRONG&gt; after successful authentication for your cloud foundry space.&lt;/P&gt;&lt;P&gt;After the deployment on the cloud we can get the url that is generated on the cloud.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_14-1752495094785.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286283iF188D4ACAB2AC66A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_14-1752495094785.png" alt="Ace_D_14-1752495094785.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Testing the application:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Lets create a small python program to call this API in local now to test it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ace_D_15-1752495325813.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286284iA1C1678704489B7A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ace_D_15-1752495325813.png" alt="Ace_D_15-1752495325813.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You should get response coming from your S4 onPrem system.&lt;/P&gt;&lt;P&gt;Thanks for staying till the end!!!&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/exposing-sap-s4-onprem-data-to-external-system-odata-service-btp/ba-p/14151915"/>
    <published>2025-07-24T09:09:11.979000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-july-31st-2025/ba-p/14168233</id>
    <title>SAP Developer News July 31st, 2025</title>
    <updated>2025-07-31T21:10:00.034000+02:00</updated>
    <author>
      <name>Eberenwaobiora</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1937986</uri>
    </author>
    <content>&lt;P&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F4_vluAVEY-4%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D4_vluAVEY-4&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F4_vluAVEY-4%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="400" height="225" scrolling="no" title="Integration Suite update, Terraform Provider beta, GitHub repo, Community Voice | SAP Developer News" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1865219489"&gt;&lt;SPAN&gt;DESCRIPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;PODCAST&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: &lt;A href="https://podcast.opensap.info/sap-developers/2025/07/31/%f0%9f%94%94sap-developer-news-july-31st-2025/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://podcast.opensap.info/sap-developers/2025/07/31/%f0%9f%94%94sap-developer-news-july-31st-2025/&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;SAP Integration Suite updates&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;SAP Integration Suite – Update Version of an Integration Flow Component: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-update-version-of-an-integration-flow-component/ba-p/14158284&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The E in Event-Driven Architecture: Introducing SAP’s new Event-Add for ERP: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/the-e-in-event-driven-architecture-introducing-sap-s-new-event-add-for-erp/ba-p/14160285&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Unlocking the Power of Events: A Deep Dive into the Event Add-on for ERP: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-the-power-of-events-a-deep-dive-into-the-event-add-on-for-erp/ba-p/14167261" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/unlocking-the-power-of-events-a-deep-dive-into-the-event-add-on-for-erp/ba-p/14167261&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Queue Browser: Deep Message Visibility for Event Mesh in SAP Integration Suite: &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/queue-browser-deep-message-visibility-for-event-mesh-in-sap-integration/ba-p/14159563" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/queue-browser-deep-message-visibility-for-event-mesh-in-sap-integration/ba-p/14159563&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;The new Terraform Provider for SAP Cloud Connector (beta release)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Announcement &lt;/SPAN&gt;&lt;A href="https://www.linkedin.com/posts/christian-lechner-inthecloud_already-automating-your-sap-btp-infrastructure-activity-7355533613737607169-sQa2?utm_source=share&amp;amp;utm_medium=member_desktop&amp;amp;rcm=ACoAAABARDEBWvk2ZWecbZaLPAQjl2eMyfc2zzE" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://www.linkedin.com/posts/christian-lechner-inthecloud_already-automating-your-sap-btp-infrastructure-activity-7355533613737607169-sQa2&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Registry entry &lt;/SPAN&gt;&lt;A href="https://registry.terraform.io/providers/SAP/scc/latest" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://registry.terraform.io/providers/SAP/scc/latest&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Repository &lt;/SPAN&gt;&lt;A href="https://github.com/SAP/terraform-provider-scc" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/SAP/terraform-provider-scc&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Awesome-cap repository on GitHub&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://github.com/mauriciolauffer/awesome-cap" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;SPAN&gt;https://github.com/mauriciolauffer/awesome-cap&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Return of the SAP Community Voice newsletter&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;First edition &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/what-s-new/the-return-of-sap-community-voice/ba-p/14166197" target="_blank"&gt;&lt;SPAN&gt;https://community.sap.com/t5/what-s-new/the-return-of-sap-community-voice/ba-p/14166197&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1668705984"&gt;&lt;SPAN&gt;CHAPTER TITLES&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;0:00 Intro&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;0:10 SAP Integration Suite updates&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;1:56 &lt;/SPAN&gt;&lt;SPAN&gt;The new Terraform Provider for SAP Cloud Connector (beta release)&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;2:49 awesome-cap repository on GitHub&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3:22 Return of the SAP Community Voice newsletter&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1472192479"&gt;&lt;SPAN&gt;TRANSCRIPTION&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Intro]&lt;/STRONG&gt; This is the SAP Developer News for July the 31st, 2025.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Antonio]&lt;/STRONG&gt; Hola, SAP developers. There is a new feature in the latest release of SAP Cloud Integration that I'm sure you'll be very excited about. It is now possible to easily update the version of an integration flow component. Previously, updating the version of a component was done manually. For example, you wanted to update the version of an adapter, meant reconfiguring it from scratch. This was quite painful and error-prone. The new feature enables a one-click update to update a component which is backward-compatible to the latest version without any loss of the existing properties, configurations, or externalized parameters. Cool, right? Check out Kamlesh's blog post to learn more about the new feature. In the event-driven space, have you heard about SAP's new event add-on for ERP? You can leverage the add-on to event-enable your SAP on-premise backends, for example, SAP S/4HANA or SAP ERP, and expose consume events to and from SAP Integration Suite Advanced Event Mesh. Check out Carsten's blog post series to learn more about it. Also, there is a new feature in the event mesh capability of SAP Integration Suite. It is called Queue Browser, and it will allow you to inspect and visualize messages in a queue via the web UI without consuming the messages from the queue. It is quite powerful as you can examine the message metadata, for example, headers, statuses, and errors, and troubleshoot maybe a more-formed payload in the message. Check out Arley's blog posts for more information. Ciao!&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[DJ]&lt;/STRONG&gt; You've probably heard of the Terraform Provider for SAP BTP, which allows you to create and manage your resources on BTP declaratively using an open standard. Well, the Terraform team have just released the beta of the Terraform Provider for SAP Cloud Connector. This essential piece of connectivity software in your SAP landscapes is now able to be managed declaratively, just like your assets on BTP. What's not to like? Check it out. It's a beta, and the team would love you to try it out, kick the tires, and send them thoughts on what you think. Links in the description.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[Kevin]&lt;/STRONG&gt; So if you were wondering what kind of awesome tools libraries and sources for CAP are out there look no further Mauricio Lauffer got you he has this brand new repository on github which is a list of all of those things and that list is awesome and the repository is called awesome cap so check it out right now and maybe also contribute your awesome links to the repository today.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;&lt;STRONG&gt;[DJ]&lt;/STRONG&gt; remember the SAP community voice &lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;online email based newsletter well it's back online but this time in the form of blog posts on the SAP community platform in case you don't know this newsletter highlights interesting blog posts community news events and lots more check it out the first edition in blog post form is from our Jerry, Jerry Jander link in the description.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/sap-developer-news-july-31st-2025/ba-p/14168233"/>
    <published>2025-07-31T21:10:00.034000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607</id>
    <title>Build A Web App and Connect to S/4HANA with SAP Integration Suite</title>
    <updated>2025-08-13T12:45:21.973000+02:00</updated>
    <author>
      <name>alexanderroan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/561103</uri>
    </author>
    <content>&lt;P&gt;A big part of the magic behind AI, advanced analytics, and {insert tech buzzword here} is the humble API!&lt;/P&gt;&lt;P&gt;I remember the excitement about service-oriented architecture in the late 1990s and early 2000s. Back when most organisations had 'fat' ERPs with extensive customisation, the idea that we could split things up into different apps and connect in a standardised way was refreshing.&lt;/P&gt;&lt;P&gt;I recently noticed a &lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&amp;nbsp;on the SAP community events calendar that involved connecting systems to S/4HANA using SAP Integration Suite.&lt;/P&gt;&lt;P&gt;I thought it might be fun to build a web app and see if I could successfully connect it to S/4HANA.&lt;/P&gt;&lt;P&gt;A basic understanding of frontend to enterprise backend via cloud architecture is useful for everyone; business experts, technology experts, and people experts&lt;/P&gt;&lt;P&gt;The article is broken into three parts: an introduction, a step-by-step explanation for generalists, and my build/test notes for anyone working on something similar. The third section includes details on all the test tools, and configuration settings.&lt;/P&gt;&lt;P&gt;A couple of quick disclaimers:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;I'm not an integration expert:&lt;UL&gt;&lt;LI&gt;I don't look at integration suite vs. other solutions&lt;/LI&gt;&lt;LI&gt;I don't cover best practices, typical challenges, good use cases&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;My solution here is likely not optimal:&lt;UL&gt;&lt;LI&gt;It's just a vanilla HTML, CSS, JS frontend&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId-1608011118"&gt;Part 1: introduction&lt;/H1&gt;&lt;H2 id="toc-hId-1540580332"&gt;From web app to S/4HANA&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300221i6AE07F957A2E6A24/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-1.png" alt="integration-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The plan:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The frontend is a web page to search for data from within S/4HANA&lt;/LI&gt;&lt;LI&gt;The web server handles communication between the frontend and SAP Cloud&lt;/LI&gt;&lt;LI&gt;SAP Integration Suite will route and format the message for S/4HANA&lt;/LI&gt;&lt;LI&gt;S/4HANA is the source of data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Tools/technology:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Utilise the free trial account for SAP BTP and Integration Suite&lt;/LI&gt;&lt;LI&gt;Build the frontend and web app ourselves&lt;/LI&gt;&lt;LI&gt;We can't access S/4HANA. However, the CodeJam provides a S/4HANA mock server that mimics the behaviour of an API within S/4HANA.&lt;/LI&gt;&lt;LI&gt;If we use a mock system, we will need to run it locally. So, adjusting the architecture.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300223iF83EF9D1F958295D/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-2.png" alt="integration-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This adds SAP Cloud Connector which allows an "on-premise" application to connect with SAP Cloud.&lt;/P&gt;&lt;H2 id="toc-hId-1344066827"&gt;The front end&lt;/H2&gt;&lt;P&gt;The completed app offers a summary view and a detailed view. Here's a short &lt;A href="https://youtu.be/wNgAwEfLyX0" target="_self" rel="nofollow noopener noreferrer"&gt;screen recording&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1276636041"&gt;Summary view&lt;/H3&gt;&lt;P&gt;This is a screenshot from the web browser (firefox).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-3.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300227i15B2BBB969C15471/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-3.png" alt="integration-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The top part of the page has a search form that allows you to search for a business partner. The bottom part of the page shows the results with a selection of key fields in a card style layout.&lt;/P&gt;&lt;P&gt;The mock system we are using allows for four different search possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Search for a single business partner by number&lt;/LI&gt;&lt;LI&gt;Search for all business partners&lt;/LI&gt;&lt;LI&gt;Search for a single business partner by number, including address details&lt;/LI&gt;&lt;LI&gt;Search for all business partners, including address details.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080122536"&gt;Detail view&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300230iFE51F5F8AD6D02A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-4.png" alt="integration-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The detail view shows the results in a table. This table has a horizontal scroll bar, which can be adjusted to view all the fields. The table includes 'raw' results, so there are some 'technical' entries like `[object Object]` and some blanks, which I think is fine for this mock up stage.&lt;/P&gt;&lt;H3 id="toc-hId-883609031"&gt;Responsive view&lt;/H3&gt;&lt;P&gt;For tablets and mobile, the card view resizes with the browser window.&lt;/P&gt;&lt;P&gt;![the front end - summary view on mobile](/assets/images/blog/integration/integration-5.png)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300231i01B740227C1E13DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-5.png" alt="Integration-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I'll come back to how this front end was built after running through the integration flow.&lt;/P&gt;&lt;H2 id="toc-hId-558012807"&gt;S/4HANA&lt;/H2&gt;&lt;P&gt;The value of this flow is being able to design and build a frontend to access real-time, trusted business data from S/4HANA in a standardised way. In a real-world example, our frontend could be an employee portal or supplier portal.&lt;/P&gt;&lt;P&gt;S/4HANA is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP's enterprise software for large organisations. It handles processes such as purchasing, manufacturing, sales, shipping, finance, etc.&lt;/LI&gt;&lt;LI&gt;An evolution from their earlier ERP products (R/1, R/2, R/3, ECC).&lt;/LI&gt;&lt;LI&gt;A complex platform comprising thousands of programs, tables, and customisations used by many large enterprises.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;S/4HANA already comes with a web frontend called Fiori, which includes thousands of apps. However, in this example imagine we are building something for a casual user that does not require the full capability of Fiori. Or, just consider it's for fun.&lt;/P&gt;&lt;P&gt;Further reading on S/4HANA:&lt;/P&gt;&lt;P&gt;[SAP help - S/4HANA](&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE?locale=en-US&lt;/A&gt;)&lt;/P&gt;&lt;H2 id="toc-hId-361499302"&gt;Business partner&lt;/H2&gt;&lt;P&gt;The mock server simulates one of the business partner APIs for S/4HANA.&lt;/P&gt;&lt;P&gt;A business partner is a reference or master data record that represents a third party that an organisation works with. This includes customers, suppliers, and employees.&lt;/P&gt;&lt;P&gt;Business partner master data is organised by key fields such as "category" and "role".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300232iDF2DB3D934F8EECC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-6.png" alt="Integration-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;All business partners have general data such as name, address, etc., then they have role-specific data, which may include, but are not limited to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Purchasing data&lt;/LI&gt;&lt;LI&gt;Sales data&lt;/LI&gt;&lt;LI&gt;Accounting data&lt;/LI&gt;&lt;LI&gt;And so on.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To understand how business partner data is used, consider a typical ERP process like order-to-cash:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300233i882EADCDD4912385/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-7.png" alt="Integration-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This is a summary of the order to cash process. During sales, deliveries, and billing, information from the business partner master record is utilised.&lt;/P&gt;&lt;P&gt;The business partner master stores long-term stable information about the customer. It's used for both reference and validation during transaction entry.&lt;/P&gt;&lt;P&gt;This ensures there is consistency across transactions over time in terms of how they reference business partners. This is critical for reporting. Consider comparability, aggregation, etc.&lt;/P&gt;&lt;P&gt;Further reading on business partners:&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_ON-PREMISE/74b0b157c81944ffaac6ebc07245b9dc/45653b5856de0846e10000000a441470.html?locale=en-US&amp;amp;version=LATEST" target="_self" rel="noopener noreferrer"&gt;Help - Business Partner&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-164985797"&gt;S/4HANA Architecture&lt;/H2&gt;&lt;P&gt;The mock server simulates an S/4HANA API. Let's look inside S/4HANA.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300236i8B0B2CC5994D164A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-8.png" alt="Integration-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Starting from the top right, S/4HANA has two primary ways for users to interact. The traditional SAP graphical user interface (GUI) and the modern Fiori web-based user interface.&lt;/P&gt;&lt;P&gt;I've drawn APIs to the left of these. The APIs allow applications to interact with S/4HANA.&lt;/P&gt;&lt;P&gt;Consider the data model in S/4HANA in two separate parts. The first is the traditional HANA database. This is where master data and transactional data are stored. On top of this is the virtual data model. This consists of core data services views. This is a way to define different sets of data to meet the needs of APIs and Fiori Apps.&lt;/P&gt;&lt;P&gt;In this example, we are using a business partner data API. Behind the scenes, the API sources data from CDS views, which in turn connect to the HANA DB tables.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--160610427"&gt;Part 2: step by step walkthrough (for everyone)&lt;/H1&gt;&lt;P&gt;In this section, I'll summarise the process and technology involved at each step.&lt;/P&gt;&lt;H2 id="toc-hId-119213144"&gt;Point 1: Web communication&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-map-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300239i27A3BC33FE94D8D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-map-1.png" alt="integration-map-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Building an integration flow between web connected applications relies on protocols and standards for web communication. Let's run through the main concepts.&lt;/P&gt;&lt;H3 id="toc-hId--370703368"&gt;Client/server&lt;/H3&gt;&lt;P&gt;The terms client and server are used to describe the requester and receiver. For example, the web browser on a computer is a client, and google search is a server.&lt;/P&gt;&lt;P&gt;Internet communications use the HTTP protocol.&lt;/P&gt;&lt;P&gt;![HTTP communication](/assets/images/blog/integration/integration-10.png)&lt;/P&gt;&lt;P&gt;Hypertext Transfer Protocol (HTTP) is a standard protocol for communication between clients and web servers. Web pages are written in Hypertext Markup Language (HTML).&lt;/P&gt;&lt;P&gt;The term Uniform Resource Locator (URL) is used to describe an address.&lt;/P&gt;&lt;H3 id="toc-hId--567216873"&gt;The structure of a URL&lt;/H3&gt;&lt;P&gt;URLs have five key parts:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Protocol: `http://`&lt;/LI&gt;&lt;LI&gt;Domain: `&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;www.example.com&lt;/A&gt;`&lt;/LI&gt;&lt;LI&gt;Path: `/pages/`&lt;/LI&gt;&lt;LI&gt;Query string: `?id=1&amp;amp;cat=test`&lt;/LI&gt;&lt;LI&gt;Fragment: `#article` (an internal page reference, often not present)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;When it comes to APIs, the query string provides the ability to specify parameters for search and filter. In this case, the query string could include a business partner number.&lt;/P&gt;&lt;H3 id="toc-hId--763730378"&gt;HTTPS&lt;/H3&gt;&lt;P&gt;HTTPS uses the HTTP protocol, but it adds a secure transport layer. HTTPS means the HTTP message is encrypted before transmission.&lt;/P&gt;&lt;P&gt;The only part that isn't encrypted is the domain name.&lt;/P&gt;&lt;H3 id="toc-hId--960243883"&gt;Internet protocol (IP) address&lt;/H3&gt;&lt;P&gt;While URLs are designed to be human-readable. An IP is a numerical label like "192.0.2.1" that identifies a computer or network.&lt;/P&gt;&lt;P&gt;URLs are used for navigation. IPs are used for routing and communication. They identify a specific device on a network (laptop, server, etc.).&lt;/P&gt;&lt;P&gt;An IP address can be used in place of a domain name with HTTP and HTTPS&lt;/P&gt;&lt;P&gt;"&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;While an IP address represents a computer. The term "port" is used to specific a specific input/output location.&lt;/P&gt;&lt;P&gt;Ports are identified using 4 digits.&lt;/P&gt;&lt;P&gt;"http://{server}:{port}"&lt;BR /&gt;"&lt;A href="http://192.0.2.1:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1:1000&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;A server is often referred to by 'host'&lt;/P&gt;&lt;P&gt;"http://{host}:{port}"&lt;/P&gt;&lt;P&gt;You can access ports on your own computer by using its IP or "localhost"&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:1000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:1000&lt;/A&gt;"&lt;/P&gt;&lt;H3 id="toc-hId--1156757388"&gt;From domain to IP&lt;/H3&gt;&lt;P&gt;The web browser uses a domain lookup service to translate a URL into an IP address.&lt;/P&gt;&lt;P&gt;"&lt;A href="http://www.example.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://www.example.com&lt;/A&gt;" becomes "&lt;A href="http://192.0.2.1" target="_blank" rel="noopener nofollow noreferrer"&gt;http://192.0.2.1&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is called the Domain Name System (DNS). Popular look up services include: Cloudflare, Google DNS, and OpenDNS.&lt;/P&gt;&lt;H3 id="toc-hId--1353270893"&gt;Messages&lt;/H3&gt;&lt;P&gt;The communications themselves can be thought of as messages. They contain a header and a body.&lt;/P&gt;&lt;P&gt;The header includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The URL&lt;/LI&gt;&lt;LI&gt;The method, most commonly GET and POST&lt;/LI&gt;&lt;LI&gt;GET sends a request without a body&lt;/LI&gt;&lt;LI&gt;POST sends a request with a body&lt;/LI&gt;&lt;LI&gt;Additional information on the content type and authorisation&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The body includes detailed content. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;If you fill in a form on a web page, it would include the form data&lt;/LI&gt;&lt;LI&gt;If a server returns a web page, it would include the web page.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1549784398"&gt;Server Responses&lt;/H3&gt;&lt;P&gt;When a server receives a request, it responds with a status code and a body. Status codes include '200' representing "ok" and '404' representing 'Not Found'.&lt;/P&gt;&lt;P&gt;(404 has definitely reached meme levels of fame!).&lt;/P&gt;&lt;P&gt;The body that's returned depends on the status and the server's purpose.&lt;/P&gt;&lt;H3 id="toc-hId--1746297903"&gt;Real life examples&lt;/H3&gt;&lt;P&gt;Consider visiting the BBC website from a web browser, a simple GET request would return the home page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300240i98D1E11DB146673D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-1.png" alt="Integration-10-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the other hand, consider logging into the BBC website. In this case, the browser sends the login name and password. Therefore, a POST request is used, and the request includes a body.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300241i9C9D28EC27350605/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-2.png" alt="Integration-10-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--1942811408"&gt;Web connectivity and SAP&lt;/H3&gt;&lt;P&gt;Most SAP applications can use HTTPS communication. This is possibly one of the simplest ways we could define "Cloud" strategy.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;S/4HANA Cloud Public and S/4HANA Cloud Private can both utilise HTTPS&lt;/LI&gt;&lt;LI&gt;SAP BTP which includes SAP Integration Suite can utilise HTTPS&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Outside the SAP Cloud, we have systems like S/4HANA On-Premise. This is usually at an SAP customer's data centre or their 3rd party hosting service provider's data centre. On premise systems are usually not directly connected to the public internet. This is where SAP provide Cloud Connector to create a secure tunnel between on-premise and SAP Cloud.&lt;/P&gt;&lt;H3 id="toc-hId--1971141222"&gt;HTTP data transfer standards&lt;/H3&gt;&lt;P&gt;There are further standards as to how data is transferred using HTTP.&lt;/P&gt;&lt;P&gt;There are multiple standards for data transfer with HTTP. One of the earlier and more common standards is REST (Representational State Transfer).&lt;/P&gt;&lt;P&gt;Many SAP APIs utilise OData (Open data transfer protocol).&lt;/P&gt;&lt;H2 id="toc-hId--1874251720"&gt;Point 2: S/4HANA business partner API mock server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300244i0C0E251EDEC4B8A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-2.png" alt="Integration-map-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt;&amp;nbsp;Mimic the business partner API of an S/4HANA system.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple JavaScript server that can be run locally.&lt;/P&gt;&lt;P&gt;The mock server provided by the SAP community provides a simple way to simulate the design and test of an S/4HANA API.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The mock server mimics the business partner (A2X) API&lt;/LI&gt;&lt;LI&gt;This is one of the S/4HANA APIs (programmed inside S/4HANA)&lt;/LI&gt;&lt;LI&gt;In the case of the mock server, it's a JavaScript server&lt;/LI&gt;&lt;LI&gt;The mock server has limited functionality, it supports:&lt;UL&gt;&lt;LI&gt;Sample data for a few business partners&lt;/LI&gt;&lt;LI&gt;Retrieve all business partners&lt;/LI&gt;&lt;LI&gt;Retrieve a single business partner&lt;/LI&gt;&lt;LI&gt;Include additional address data in the response.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Installing and running the mock server is simple. The instructions are in part 3. When we run it our computer a local address is returned.&lt;/P&gt;&lt;P&gt;On my computer, it runs on "&lt;A href="http://localhost:3005/" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;This is the address for the Business Partner API. Entering this address in the web browser gives the following response:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300247i85F8DBD3A3C0907C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-3.png" alt="Integration-10-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The first item refers to the business partner API. This is the first point in the exercise where we can see the path for the Business Partner API:&lt;/P&gt;&lt;P&gt;"/sap/opu/odata/sap/API_BUSINESS_PARTNER"&lt;/P&gt;&lt;P&gt;The API path is just appended to the host, so:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;Clicking on the link in the browser shows additional information about the API. Note that the only services listed are A_BusinessPartner and A_BusinessPartnerAddress.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300248iD5D9B28D88C78E83/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-4.png" alt="Integration-10-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When building an integration flow, the mix of host names, port names, and paths can quickly become confusing. It's useful to track these as we go.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-10-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300249i78F4EB26BF7E6792/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-10-5.png" alt="Integration-10-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Further reading on the mock server:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;The CodeJam repo&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://learning.sap.com/learning-journeys/develop-advanced-extensions-with-sap-cloud-sdk/exercise-setting-up-the-mock-server_c734679d-9ce9-4905-82c3-ed13603a671d" target="_self" rel="noopener noreferrer"&gt;SAP Learning&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2070765225"&gt;Point 3: Application programming interface (API&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300253i7FD22496BC81C5DF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-3.png" alt="Integration-map-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provide a standard way to define and operate services for an application that can be consumed by other applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; SAP have a large catalogue of standard APIs that come with S/4HANA.&lt;/P&gt;&lt;H3 id="toc-hId-1734285559"&gt;The Business partner API&lt;/H3&gt;&lt;P&gt;The API that was introduced under the S/4HANA business partner mock server is called 'business partner (A2X)'. It is a SAP standard API that uses the OData V2 standard.&lt;/P&gt;&lt;P&gt;While HTTP is the communication protocol. OData is an open standard related to the data.&lt;/P&gt;&lt;P&gt;When viewing the API details in the web browser, the display was JSON. This is JavaScript Object Notation, which is used in Odata. Point 5. in the flow will show more detail on this API.&lt;/P&gt;&lt;P&gt;Further reading on APIs and Odata:&lt;/P&gt;&lt;P&gt;-&amp;nbsp;&lt;A href="https://spec.openapis.org/oas/latest.html" target="_self" rel="nofollow noopener noreferrer"&gt;Open API spec&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://www.odata.org/" target="_self" rel="nofollow noopener noreferrer"&gt;OData&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1831175061"&gt;Point 4: Business technology platform (BTP)&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300256iC627FB8F7F6F5B78/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-4.png" alt="Integration-map-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Skipping Cloud Connector for now, brings us to BTP. Details from BTP are needed to set up Cloud Connector.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Enable customers to manage and build on SAP applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A set of tools encompassing various capabilities and environments.&lt;/P&gt;&lt;P&gt;SAP offer a free trial for BTP, which can be used to build and test integration flows. Instructions on how to register and set up BTP are included in part 3.&lt;/P&gt;&lt;P&gt;The BTP cockpit is where we can search for and set up different services.&lt;/P&gt;&lt;P&gt;It supports multiple infrastructures and runtimes so you can manage/build various types of applications from traditional SAP ABAP to web apps.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports multiple infrastructures/runtimes &amp;amp; languages, including:&lt;UL&gt;&lt;LI&gt;Cloud Foundry: develop new apps/services, multiple languages, runtimes&lt;/LI&gt;&lt;LI&gt;ABAP: extend ABAP based products (S/4HANA)&lt;/LI&gt;&lt;LI&gt;Kyma: Kubernetes to develop/run cloud-native apps&lt;/LI&gt;&lt;LI&gt;Neo: HTML5, Java, and HANA extended apps&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;BTP has multiple regions and infrastructure providers&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Regional deployment&lt;UL&gt;&lt;LI&gt;Provided by SAP or Infrastructure-as-a-Provider (IaaS)&lt;/LI&gt;&lt;LI&gt;AWS, Azure, Google Cloud, Alibaba Cloud&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The key features of BTP include managing and building:&lt;UL&gt;&lt;LI&gt;Compose business processes&lt;/LI&gt;&lt;LI&gt;Application development and automation&lt;/LI&gt;&lt;LI&gt;Build and extend SAP applications&lt;/LI&gt;&lt;LI&gt;Integrate data&lt;/LI&gt;&lt;LI&gt;Analytics&lt;/LI&gt;&lt;LI&gt;Intelligent technologies&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;SAP Integration Suite utilises the Cloud Foundry environment. After we set up Business Technology Suite and SAP Intelligent Suite, a Cloud Foundry API endpoint will be provided in BTP.&lt;/P&gt;&lt;P&gt;In my case, this is "&lt;A href="https://api.cf.ap21.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.cf.ap21.hana.ondemand.com&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300258i04DE1404995C9368/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-11.png" alt="integration-11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1634661556"&gt;Point 5. Business Accelerator Hub&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300259iB0C161A99F8D04C2/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-5.png" alt="Integration-map-5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Provides a central source of information on SAP's APIs&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A web page with API details. Highly integrated with BTP.&lt;/P&gt;&lt;P&gt;Business Accelerator hub is a web resource from SAP. I've drawn it inside BTP as it closely relates to BTP content. It's a central repository for APIs from SAP &amp;amp; selected partners.&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/" target="_self" rel="noopener noreferrer"&gt;api.sap.com&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Main features&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Discover, explore, and test APIs&lt;/LI&gt;&lt;LI&gt;Consume integration and workflow content&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The Business Partner (A2X) API that is tested here can be viewed on Business Accelerator Hub.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login to business accelerator hub&lt;/LI&gt;&lt;LI&gt;Search 'business partner (A2X)'&lt;/LI&gt;&lt;LI&gt;Click on the entry in the results&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300265iA01898E1E22775A1/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-12.png" alt="integration-12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Some features of business accelerator hub:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Try out the APIs (sandbox environment)&lt;UL&gt;&lt;LI&gt;Useful to view a sample of the response&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API capabilities:&lt;UL&gt;&lt;LI&gt;'API Reference' tab, scroll down to 'Business Partner' and click on it&lt;/LI&gt;&lt;LI&gt;This shows the list of capabilities of the API&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;View the API specification&lt;UL&gt;&lt;LI&gt;'Overview' tab, scroll down to 'API Specification' and click on it&lt;/LI&gt;&lt;LI&gt;Download OpenAPI JSON&lt;/LI&gt;&lt;LI&gt;View in web browser, text editor to see extensive details&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The API hub is a useful resource in terms of discovering and designing potential API use.&lt;/P&gt;&lt;P&gt;From the mock server specification, we know it's limited to only a few capabilities. We can find the path names for each of these on API hub:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300267iB9991B6EA91D1FC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-1.png" alt="Integration-12-1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This confirms the mock server only has a small fraction of the full business partner (A2X) capabilities. This makes sense given how extensive business partner data is in SAP. It's noteworthy that the mock server only supports 'read' activities. We can't test creating or changing a business partner.&lt;/P&gt;&lt;P&gt;The details of each of these requests can be viewed by clicking into them.&lt;/P&gt;&lt;P&gt;While there are three request paths. The address path can be added to the "all business partners" or "single business partner", so there are four possibilities:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All business partners&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;All business partners with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Single business partner with address&lt;UL&gt;&lt;LI&gt;"/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress"&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These paths describe services of the API and are appended to the base URL.For example:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('{BusinessPartner}')/to_BusinessPartnerAddress&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;The correct terminology for these URLs:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;"('{business partner}')" in the example is a placeholder for a business partner number.&lt;/P&gt;&lt;P&gt;Updating the flow diagram with these details:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-12-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300270i7171352709F09CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-12-2.png" alt="Integration-12-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1438148051"&gt;Point 6: SAP Integration Suite&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300271i8FBBDE02F7A3CF64/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-6.png" alt="Integration-map-6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Design and manage communications between applications.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A service of SAP BTP.&lt;/P&gt;&lt;P&gt;SAP Integration Suite is one of the services available in Business Technology Platform. Therefore, a prerequisite is to register for the BTP free trial.&lt;/P&gt;&lt;P&gt;SAP Integration Suite can then be found under 'Services Marketplace'.&lt;/P&gt;&lt;P&gt;SAP Intelligent suite can be used for Cloud, on-premise, and hybrid scenarios. It includes pre-built, best-practice integration packs&lt;/P&gt;&lt;P&gt;Technically, it's a Java based app, and utilises the Apache Camel framework.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300274iC625747A413A6229/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-13.png" alt="Integration-13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The steps to install and set up are covered in part 3. After the initial set up you can navigate to the application.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300276i32A7F841634A21EB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-14.png" alt="Integration-14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;For this demo/test, the two key menus within Integration Suite are:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Design &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;LI&gt;Monitor &amp;gt; Integrations and APIs&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The design area allows us to create an integration flow which involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Specifying source or 'sender' system&lt;/LI&gt;&lt;LI&gt;Specifying target or 'receiver' system&lt;/LI&gt;&lt;LI&gt;Adding flow steps&lt;/LI&gt;&lt;LI&gt;Modify message header&lt;/LI&gt;&lt;LI&gt;Modify message contents&lt;/LI&gt;&lt;LI&gt;Route steps between sender and receiver.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Within design, there is a graphical editor to build the integration flow.&lt;/P&gt;&lt;H3 id="toc-hId-948231539"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300279iBAFE6B3B4B1AE952/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15.png" alt="Integration-15.png" /&gt;&lt;/span&gt;&lt;/H3&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-751718034"&gt;Business Partner Integration Flow&lt;/H3&gt;&lt;P&gt;Creating the integration flow involves setting the sender details and designing the required transformations to meet the receiver (API) requirements.&lt;/P&gt;&lt;P&gt;As we work through this keep in mind the API expects one of four paths depending on the search scenario:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-A.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300281i7F82A0BD6569F827/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-A.png" alt="Integration-15-A.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-555204529"&gt;The sender&lt;/H3&gt;&lt;P&gt;The sender represents the address that SAP Integration Suite will listen on. This is the address we send a message to from our upstream app. In this case a web app.&lt;/P&gt;&lt;P&gt;This address is built up in three parts:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A base which is provided when we deploy the integration flow&lt;/LI&gt;&lt;LI&gt;An 'Address' that we specify in the integration flow&lt;/LI&gt;&lt;LI&gt;Further path details from the web app.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The base of the endpoint is something along the lines of:&lt;/P&gt;&lt;P&gt;https://{trial-account-specific-details}-rt.cfapps.ap21.hana.ondemand.com/http/&lt;/P&gt;&lt;P&gt;For the address name, this demo/test uses the path `/request-business-partners/*` The "`*`" at the end allow us to send requests with additional details that can be utilised in the flow logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-2.png" style="width: 813px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300287iEFB652F16F584247/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-2.png" alt="Integration-15-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app will send four different types of message to match the four API scenarios, for the demo/test I will use:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"/api/bp/single"&lt;/LI&gt;&lt;LI&gt;"/api/bp/all"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/add"&lt;/LI&gt;&lt;LI&gt;"/api/bp/single/all"&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The web app will also include the BP number in the message body.&lt;/P&gt;&lt;P&gt;We don't need to specify these in the Integration Flow as the `*` will allow them all to pass as long as they are preceded by "request-business-partners/"&lt;/P&gt;&lt;P&gt;Adding this information to the mapping table.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-B.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300290i5293141B171F7138/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-B.png" alt="Integration-15-B.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-526874715"&gt;Routing and Transformations&lt;/H3&gt;&lt;P&gt;The integration flow routes and transforms the received messages to meet the API requirements at the receiver. This involves:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Routing of messages from receiver to sender based on their content&lt;/LI&gt;&lt;LI&gt;1:1 relationship for each of the four scenarios&lt;/LI&gt;&lt;LI&gt;Transform the URLs&lt;/LI&gt;&lt;LI&gt;A part of the transformation is extraction of the business partner number from the received message and the placement of it into the API format URL.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-330361210"&gt;The receiver&lt;/H3&gt;&lt;P&gt;The receiver is set up to match the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300292i4EB268C6A7AECB21/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-3.png" alt="Integration-15-3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More detail on the settings of each step are in part 3.&lt;/P&gt;&lt;P&gt;At this point, the integration flow is:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-15-4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300293i3A47FABC1963733D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-15-4.png" alt="Integration-15-4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As an alternative, the web app could have been programmed to send messages that already fit the API requirements. However, in some scenarios sender systems may be inflexible or difficult to develop on, making these transformation capabilities in Integration Suite important.&lt;/P&gt;&lt;P&gt;Further reading on SAP Integration Suite:&lt;/P&gt;&lt;P&gt;- &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-sap-integration-suite?locale=en-US" target="_self" rel="noopener noreferrer"&gt;Help - What is integration suite&lt;/A&gt;&lt;BR /&gt;- &lt;A href="https://camel.apache.org/" target="_self" rel="nofollow noopener noreferrer"&gt;Apache Camel&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-427250712"&gt;Point 7. Cloud Connector&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300294iE46B3CEEA68DFE85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-7.png" alt="Integration-map-7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow SAP BTP to communicate to On-Premise SAP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; An application that can provide a secure connection between SAP Cloud and On-Premise applications.&lt;/P&gt;&lt;P&gt;In the previous part, we defined the address details of the S/4HANA business partner mock server as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Base URL/host: &lt;A href="http://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Base path: /sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/LI&gt;&lt;LI&gt;Entity set: /A_BusinessPartner&lt;/LI&gt;&lt;LI&gt;Key Access: ('1234567')&lt;/LI&gt;&lt;LI&gt;Navigation property: /to_BusinessPartnerAddress&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you paid attention to the screenshot of the receiver configuration in Intelligent Suite, you will note that it was set to&lt;/P&gt;&lt;P&gt;`&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')`&lt;/P&gt;&lt;P&gt;The domain was "s4-mock:3006" not "localhost:3005".&lt;/P&gt;&lt;P&gt;This is because we can't connect SAP Cloud directly to an on-premise system. The S/4HANA business partner mock server is a JavaScript server that runs locally on desktop/laptop and is hence considered 'on-premise' or outside the SAP Cloud.&lt;/P&gt;&lt;P&gt;SAP provides "SAP Cloud Connector" to connect on-premise applications to the SAP Cloud.&lt;/P&gt;&lt;P&gt;It's a JavaScript application that can be installed and run locally. Part of the set-up involves entering authentication details from BTP.&lt;/P&gt;&lt;P&gt;After it's set-up, Cloud Connector will accept messages from Integration Suite and forward them to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The detailed set-up is covered in part 3.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300295i06526E809FBCA319/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16.png" alt="Integration-16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The screenshot above shows the "Cloud to On-Premise" mapping. A virtual host "s4-mock:3006" is mapped to the S4/HANA business partner mock server running locally on "localhost:3005".&lt;/P&gt;&lt;P&gt;Updating the integration flow:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-16-2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300296i574EC1489A20E013/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-16-2.png" alt="Integration-16-2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-230737207"&gt;Point 8: Web app&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300297i052F2A545DBA8042/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-8.png" alt="Integration-map-8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The web app is an application that uses JavaScript as a programming language. Web browsers have JavaScript engines and can run JavaScript code.&lt;/P&gt;&lt;P&gt;There are two parts to the web app. The frontend and the backend.&lt;/P&gt;&lt;P&gt;Think of JavaScript in two categories. frontend JavaScript and server (backend) JavaScript.&lt;/P&gt;&lt;H3 id="toc-hId--259179305"&gt;Frontend JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Runs in the web browser, utilising the browsers JavaScript engine&lt;/LI&gt;&lt;LI&gt;Is oriented towards manipulating web documents (HTML documents), for example:&lt;/LI&gt;&lt;LI&gt;Retrieve fields from HTML (e.g. sign up form)&lt;/LI&gt;&lt;LI&gt;Update HTML (e.g. show results, dynamically add a new page)&lt;/LI&gt;&lt;LI&gt;The JavaScript engine in the browser has limitations.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--455692810"&gt;Server JavaScript&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Installed on a server (can also be run on a desktop/laptop)&lt;/LI&gt;&lt;LI&gt;A popular engine is Node.js&lt;/LI&gt;&lt;LI&gt;Is oriented towards messaging, connectivity, security, authentication&lt;/LI&gt;&lt;LI&gt;Has a lot less limitations than the web browser.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We could try to send a request from the frontend to SAP Integration Suite, but because it comes from a browser, it will likely result in errors.&lt;/P&gt;&lt;P&gt;I did try sending a message to Integration Suite from the browser, but received various CORS errors. CORS, or Cross-Origin Resource Sharing, is a browser security feature that controls whether a web page on one domain can access resources from a different domain.&lt;/P&gt;&lt;P&gt;Therefore, the frontend will send a request to the backend, which will then prepare the message and send it as a request to SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Let's look at the frontend first, then the backend.&lt;/P&gt;&lt;H2 id="toc-hId--358803308"&gt;Point 8.1 Web app: frontend&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Search for and display business partner details on a web page.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt; A simple web app based on HTML, CSS and JavaScript.&lt;/P&gt;&lt;P&gt;The frontend can be built with plain HTML, CSS and JavaScript.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;HTML: Used to define the content of the web page&lt;/LI&gt;&lt;LI&gt;CSS: Used to apply styles to the web page (layout, colours, font, etc.)&lt;/LI&gt;&lt;LI&gt;Javascript&amp;amp;colon; Use for programming logic, for example:&lt;UL&gt;&lt;LI&gt;Get input field values from HTML&lt;/LI&gt;&lt;LI&gt;Fetch data from the server&lt;/LI&gt;&lt;LI&gt;Restructure data for display&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;HTML, CSS, and JavaScript are written in their own files. They are typically in the same folder.&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;frontend/&lt;BR /&gt;├── index.html&lt;BR /&gt;├── styles.css&lt;BR /&gt;└── script.js&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;The HTML file includes references to the 'styles.css' and 'script.js' documents. These can all be written in simple text editors, but applications like 'visual studio code' help with syntax highlighting and formatting.&lt;/P&gt;&lt;P&gt;For demo/test these files can simply be kept on a computers hard drive. Or they could be hosted on a static web server like Netlify or GitHub pages.&lt;/P&gt;&lt;H2 id="toc-hId--555316813"&gt;Point 8.2: Web app - HTML&lt;/H2&gt;&lt;P&gt;Web pages are written with HTML, they are hierarchically structured documents where 'tags' are used to denote different types of element which contain content.&lt;/P&gt;&lt;P&gt;As a simple illustration, the following would create a web page with a title, a text input field, a submit button and a space for results.&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;header&amp;gt;
&amp;lt;p&amp;gt;This is the page title&amp;lt;/p&amp;gt;
&amp;lt;body&amp;gt;
&amp;lt;article&amp;gt;
  &amp;lt;form&amp;gt;
    &amp;lt;label&amp;gt;Enter business partner number
      &amp;lt;input type="text" /&amp;gt;
    &amp;lt;/label&amp;gt;
    &amp;lt;button type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
  &amp;lt;/form&amp;gt;
  &amp;lt;div id="js-results"&amp;gt;
    // Results go here
  &amp;lt;/div&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would display:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300300i9BF0AF4B0E0552B9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-17.png" alt="Integration-17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A simple element such as paragraph is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;p&amp;gt;enter paragraph&amp;lt;/p&amp;gt;`&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;A more complex element, an input field is denoted by&lt;UL&gt;&lt;LI&gt;`&amp;lt;input type="text" /&amp;gt;`&lt;/LI&gt;&lt;LI&gt;In this case, `type` is an attribute set to `text` for text field&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1045233325"&gt;Getting HTML to talk to CSS and JavaScript**&lt;/H3&gt;&lt;P&gt;There are two attributes that allow them to work together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;"id": for example id="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;LI&gt;"class": for example class="bp-input" (where bp-input is a variable name)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These attributes can be added to HTML elements to allow us to access those elements with CSS and JavaScript. The difference between the two is a single "id" value is unique and should only be used once in an HTML document, while a class can be applied to multiple HTML elements.&lt;/P&gt;&lt;P&gt;The body of the web app frontend is:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;body&amp;gt;
&amp;lt;header class="header"&amp;gt;
&amp;lt;div class="header-title"&amp;gt;
&amp;lt;img class="logo" src="assets/team.png"&amp;gt;
&amp;lt;p class="title"&amp;gt;Employee portal: business partner search&amp;lt;/p&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;nav class="nav"&amp;gt;
&amp;lt;a href="/index.html"&amp;gt;Home&amp;lt;/a&amp;gt;
&amp;lt;/nav&amp;gt;
&amp;lt;/header&amp;gt;
&amp;lt;article class="bp-article flow"&amp;gt;
&amp;lt;h2&amp;gt;Search&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;form id="bp-form" class="bp-search"&amp;gt;
&amp;lt;label for="bp-inp-number"&amp;gt;Business partner number:&amp;lt;/label&amp;gt;
&amp;lt;p class="text-small"&amp;gt;(Enter 7 digit number or leave blank to return all)&amp;lt;/p&amp;gt;
&amp;lt;input id="bp-inp-number" class="bp-inp-number" name="bp" type="text" /&amp;gt;
&amp;lt;p id="bp-error" class="bp-error"&amp;gt;&amp;lt;/p&amp;gt;
&amp;lt;p class="options"&amp;gt;Options:&amp;lt;/p&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-address" value="add" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-address" name="bp-input-address"&amp;gt;Include address details&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;div&amp;gt;
&amp;lt;input id="bp-inp-tab" value="tab" type="checkbox" /&amp;gt;
&amp;lt;label class="text-small" for="bp-inp-tabulate" name="bp-inp-tabulate"&amp;gt;Show results in table&amp;lt;/label&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;button id="js-inp-sub" type="submit"&amp;gt;Submit&amp;lt;/button&amp;gt;
&amp;lt;/form&amp;gt;
&amp;lt;h2&amp;gt;Results&amp;lt;/h2&amp;gt;
&amp;lt;div class="divider"&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;div id="js-bp-results" class="bp-results"&amp;gt;
&amp;lt;/div&amp;gt;
&amp;lt;/article&amp;gt;
&amp;lt;/body&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;It's not very complex. Most of the complexity is in the CSS styling and the JavaScript programming to return the results.&lt;/P&gt;&lt;P&gt;This segregation of content (HTML), styles (CSS), and programming logic (JS) makes working with frontend well structured.&lt;/P&gt;&lt;P&gt;The web app initial HTML includes:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A header bar with the logo, page name and home link&lt;/LI&gt;&lt;LI&gt;A search section with search field options&lt;UL&gt;&lt;LI&gt;BP number&lt;/LI&gt;&lt;LI&gt;Checkbox to get address&lt;/LI&gt;&lt;LI&gt;Checkbox to show results in detail view&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is how this looks without styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-18.png" style="width: 824px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300306i6242F0F51B915194/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-18.png" alt="integration-18.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The version with styling was shown at the start of the article.&lt;/P&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-html" target="_self" rel="nofollow noopener noreferrer"&gt;HTML file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--948343823"&gt;Point 8.3: Web app - CSS&lt;/H2&gt;&lt;P&gt;Cascading style sheets (CSS) are used to apply styles to HTML documents. Consider an HTML document with three lines of text:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;p id="line-one"&amp;gt;This is text line one&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line two&amp;lt;/p&amp;gt;
&amp;lt;p class="other-lines"&amp;gt;This is text line three&amp;lt;/p&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These can be styled with CSS as follows:&lt;/P&gt;&lt;pre class="lia-code-sample language-css"&gt;&lt;code&gt;#line-one {
color: red;
font-size: 1.2rem;
}

.other-lines {
color: blue;
text-decoration: underline;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This would show:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-19.png" style="width: 472px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300316iF0420D2F7368485B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-19.png" alt="Integration-19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The complete CSS for the demo/test web app is lengthy. Around 200 lines. Here is a snippet to get an idea of what it looks like:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="integration-20.png" style="width: 822px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300317i8B8CC471FF9421E6/image-size/large?v=v2&amp;amp;px=999" role="button" title="integration-20.png" alt="integration-20.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CSS is easy to pick up, but challenging to master!&lt;/P&gt;&lt;P&gt;Looking at the class "bp-search". This applies to the area of the HTML document where the search fields are collected. The CSS here does things like orient those search fields in a column "flex-direction:column" and apply a border and a shadow.&lt;/P&gt;&lt;P&gt;This is how our page looks with styling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300318i0AF0854FE34C5F34/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-21.png" alt="Integration-21.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Here is the full &lt;A href="https://alexroan.com/asssets/documents/integration/frontend-css.css" target="_self" rel="nofollow noopener noreferrer"&gt;CSS file&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--976673637"&gt;Point 8.4: Web app - JavaScript&lt;/H2&gt;&lt;P&gt;Frontend JavaScript is able to retrieve, edit and add elements to the HTML document. Writing the JavaScript is possibly the most challenging part of this demo/test, so I'll just summarise what the code does:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for a click of the 'submit' button&lt;/LI&gt;&lt;LI&gt;Get the value of the form input elements&lt;UL&gt;&lt;LI&gt;The Business partner number&lt;/LI&gt;&lt;LI&gt;The status of the 'include address details' checkbox&lt;/LI&gt;&lt;LI&gt;The status of the 'show results in table' checkbox&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Check the business partner value is valid&lt;UL&gt;&lt;LI&gt;It has to be blank or a 7-digit number&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Create a variable object called 'request' to track the request type&lt;/LI&gt;&lt;LI&gt;The variable includes:&lt;UL&gt;&lt;LI&gt;request URL&lt;/LI&gt;&lt;LI&gt;request method&lt;/LI&gt;&lt;LI&gt;request body&lt;/LI&gt;&lt;LI&gt;(The ability to track multiple values in an Object is a key JS feature)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Based on the input fields, identify the request type &amp;amp; update the 'request' object.&lt;UL&gt;&lt;LI&gt;The combinations are:&lt;UL&gt;&lt;LI&gt;If bp number is blank and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is blank and get address is checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address isn't checked&lt;/LI&gt;&lt;LI&gt;If bp number is entered and get address is checked.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;At this point, the request object will store a set of values based on the input selections. The values will be one of the four options listed in the earlier tables.&lt;/P&gt;&lt;P&gt;The JavaScript now has what it needs to send a request to SAP Integration Suite. The rest of the JavaScript handles various things:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Use the JavaScript method 'fetch()' to send requests to the server&lt;/LI&gt;&lt;LI&gt;Handle security and authorisation&lt;/LI&gt;&lt;LI&gt;Getting a token if needed&lt;/LI&gt;&lt;LI&gt;Sending a token with requests&lt;/LI&gt;&lt;LI&gt;Handling errors&lt;/LI&gt;&lt;LI&gt;If successful, capturing the returned data&lt;/LI&gt;&lt;LI&gt;Working through the returned data and updating the HTML&lt;/LI&gt;&lt;LI&gt;Creating cards for the summary view&lt;/LI&gt;&lt;LI&gt;Creating a table for the detailed view&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the &lt;A href="https://alexroan.com/assets/documents/integration/frontend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript.&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1173187142"&gt;Point 9. Web app: backend server&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-map-9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300319i957338C0D7C637CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-map-9.png" alt="Integration-map-9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Purpose:&lt;/STRONG&gt; Allow a web frontend to communicate with SAP BTP.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What is it:&lt;/STRONG&gt;&amp;nbsp;A JavaScript web backend server for message formatting and routing.&lt;/P&gt;&lt;P&gt;The backend server is locally hosted on our computer for this test/demo, but in reality would be on a web server somewhere.&lt;/P&gt;&lt;P&gt;It's written in express, which is a framework on Node.js. It's quite different from frontend JavaScript.&lt;/P&gt;&lt;P&gt;The logic of the backend is:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Listen for communication from the frontend&lt;/LI&gt;&lt;LI&gt;If a message is received:&lt;UL&gt;&lt;LI&gt;Do some manipulation of the message related to authorisations&lt;/LI&gt;&lt;LI&gt;Using fetch() try sending a request to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;More authorisation/security handling&lt;/LI&gt;&lt;LI&gt;If successful, return the response back to the browser&lt;/LI&gt;&lt;LI&gt;If unsuccessful, log and return the error.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Here is the backend &lt;A href="https://alexroan.com/assets/documents/integration/backend-javascript.js" target="_self" rel="nofollow noopener noreferrer"&gt;JavaScript code&lt;/A&gt;. This needs to be set up as part of a Node.js server.&lt;/P&gt;&lt;P&gt;The JavaScript server is a bit more complex than the frontend. The server folder contains:&lt;/P&gt;&lt;P&gt;```&lt;BR /&gt;web-app-server/&lt;BR /&gt;├── node_modules/ # created by npm install&lt;BR /&gt;├── package-lock.json # created/updated by npm install&lt;BR /&gt;├── package.json # you write this (or generate with `npm init`)&lt;BR /&gt;└── server.js # your server code&lt;BR /&gt;```&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;server.js contains the actual JavaScript code for the server.&lt;/LI&gt;&lt;LI&gt;package.json defines project settings, dependencies, and scripts.&lt;/LI&gt;&lt;LI&gt;node_modules/ and package-lock.json are automatically generated when dependencies are installed using npm install.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The port can be specified in 'server.js'. I choose port 5000.&lt;/P&gt;&lt;P&gt;This means the server will run on '&lt;A href="http://localhost:5000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:5000&lt;/A&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-24.png" style="width: 650px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300322i6AC5E5AE7259389E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-24.png" alt="Integration-24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After writing package.json and server.js, the following steps are required in terminal to initialise the server, install express, and then start the server.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;cd web-app-server&lt;/LI&gt;&lt;LI&gt;npm init -y&lt;/LI&gt;&lt;LI&gt;npm install express&lt;/LI&gt;&lt;LI&gt;node server.js&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We can now update the flow diagram with the details for the frontend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Integration-25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300323iD986EC04D7C226DD/image-size/large?v=v2&amp;amp;px=999" role="button" title="Integration-25.png" alt="Integration-25.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1369700647"&gt;One flow, many messages&lt;/H2&gt;&lt;P&gt;Looking at the diagram, a click on the search button triggers a message that passes through four stages:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;From the frontend (browser) to the backend web server&lt;/LI&gt;&lt;LI&gt;From the web server to SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;From Integration Suite to Cloud Connector&lt;/LI&gt;&lt;LI&gt;From Cloud Connector to the S/4HANA system&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;JavaScript doesn’t normally “wait” for things to happen — it’s designed to keep running while other operations (like network requests) complete in the background.&lt;/P&gt;&lt;P&gt;However, the fetch() function is asynchronous, which means it starts a request and immediately returns a kind of “promise” — a placeholder that will eventually be resolved when the response comes back (or if it fails).&lt;/P&gt;&lt;P&gt;When testing this flow, there are multiple layers where errors can occur:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The browser console (frontend logs)&lt;/LI&gt;&lt;LI&gt;The backend server console (Node.js logs)&lt;/LI&gt;&lt;LI&gt;Integration Suite’s monitoring tools&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The message can fail at any step, and it sometimes takes a bit of detective work to figure out where it failed and why.&lt;/P&gt;&lt;P&gt;If everything works, and S/4HANA returns a successful response (status code 200), that response flows automatically back through the same chain — each layer staying in a “waiting” state until the result is passed back to the frontend and displayed to the user.&lt;/P&gt;&lt;P&gt;Don't worry if it's not 100% clear, it took me a while to figure this out.&lt;/P&gt;&lt;H2 id="toc-hId--1566214152"&gt;Conclusions to the walkthrough&lt;/H2&gt;&lt;P&gt;It's really fun to build your own frontend and connect it to a real enterprise grade system.&lt;/P&gt;&lt;P&gt;A few important considerations:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Precision is needed with the integration configuration:&lt;UL&gt;&lt;LI&gt;Host names, types, routing, transformation are all sensitive to mistakes&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;The JavaScript is a little complex, but it is all well established&lt;/LI&gt;&lt;LI&gt;A JavaScript and Node.js course and some googling could enable anyone to create this.&lt;/LI&gt;&lt;LI&gt;Using the S/4HANA business partner mock server is a quick and fun way to test out a potential integration with S/4HANA. However, it is just a mock server with limited features and a build and test with a real S/4HANA system would be required.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;However, it's easily achievable with a little study and practice and it opens the possibility to develop a wide range of things.&lt;/P&gt;&lt;P&gt;The APIs brings together:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Real-time fast access to a wide range of business data thanks to S/4HANA.&lt;BR /&gt;Extreme flexibility on the frontend side thanks to modern HTML, CSS and JS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This integration could have been much simpler by just having the frontend deliver a URL in the format required for the API. We don't really need the complexity of Integration Suite for this.&lt;/P&gt;&lt;P&gt;---&lt;/P&gt;&lt;H1 id="toc-hId--1469324650"&gt;Part 3: building the integration flow (for IT people)&lt;/H1&gt;&lt;P&gt;In this section I'll share my rough notes from the process of building this front end and integration flow. This is a copy and paste of my original notes in markdown so I apologise for the lack of formatting. I do list all the required tools which may be helpful for people trying this out.&lt;/P&gt;&lt;P&gt;Before starting, I'd recommend working through the CodeJam:&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/sap-codejam/sap-codejam-connecting-systems-and-services-using-sap-integration-suite/ec-p/14110686#M848" target="_self"&gt;SAP CodeJam&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;The instructions are on a &lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam" target="_self" rel="nofollow noopener noreferrer"&gt;GitHub repository.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--1959241162"&gt;Information sources &amp;amp; tools&lt;/H2&gt;&lt;H3 id="toc-hId-1845809622"&gt;SAP Accounts: BTP and Integration Suite&lt;/H3&gt;&lt;P&gt;A trial account for business technology platform is required.&lt;/P&gt;&lt;P&gt;[BTP trial](&lt;A href="https://developers.sap.com/tutorials/hcp-create-trial-account.html" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/hcp-create-trial-account.html&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;And a a trial for Integration Suite&lt;/P&gt;&lt;P&gt;[Integration Suite trial](&lt;A href="https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6" target="_blank" rel="noopener noreferrer"&gt;https://developers.sap.com/tutorials/cp-starter-isuite-onboard-subscribe.html#f55ec71c-2853-4b83-8092-4e3031f8d6e6&lt;/A&gt;)&lt;/P&gt;&lt;P&gt;See the pre-requisites [pre-requisites](&lt;A href="https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-samples/connecting-systems-services-integration-suite-codejam/blob/main/prerequisites.md&lt;/A&gt;) document in the CodeJam repository.&lt;/P&gt;&lt;H3 id="toc-hId-1649296117"&gt;Containerisation &amp;amp; Docker&lt;/H3&gt;&lt;P&gt;When running the S/4HANA business partner mock server locally, one option is to install the necessary JavaScript runtime environment and run it manually. Another option is to run it inside a container.&lt;/P&gt;&lt;P&gt;Containers are a key concept in Cloud architecture.&lt;/P&gt;&lt;P&gt;A container packages an app and all it's dependencies together so that it can run independently of the underlying computer (server, laptop, etc.).&lt;/P&gt;&lt;P&gt;This is a key concept for Cloud as it allows applications to run on different hardware and operating systems with minimal set up effort.&lt;/P&gt;&lt;P&gt;Docker is a platform to build and manage containers.&lt;/P&gt;&lt;P&gt;Docker and container features:&lt;/P&gt;&lt;P&gt;- Package an app and all it's dependencies&lt;BR /&gt;- A container is like a lightweight virtual machine&lt;BR /&gt;- Key terms&lt;BR /&gt;- image: blueprint (.zip) containing app, dependencies, and OS&lt;BR /&gt;- container: running instance of an image&lt;BR /&gt;- dockerfile: instructions to build image&lt;BR /&gt;- volume: how to persist data outside the container&lt;BR /&gt;- port mapping: expose internal port to machine (e.g. 8080 to 3001).&lt;/P&gt;&lt;P&gt;I'll come back to this in the section on running the BP mock server.&lt;/P&gt;&lt;H3 id="toc-hId-1452782612"&gt;Data basics&lt;/H3&gt;&lt;P&gt;The following data standards/formats are used in this exercise:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON (JavaScript Object Notation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A lightweight, human-readable format for storing and sharing structured data&lt;BR /&gt;- Looks like nested key-value pairs (like a shopping list with categories)&lt;BR /&gt;- Commonly used in web apps and APIs for sending data between systems.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567",&lt;BR /&gt;"employee_name": "Alexander"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XPATH&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A query language used to navigate and extract data from XML or HTML documents&lt;BR /&gt;- Lets you point to specific elements using a path-like syntax&lt;BR /&gt;- Example: find the third paragraph inside a section&lt;BR /&gt;- Used in tools like web scrapers and automation scripts.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XPATH&lt;BR /&gt;//title[contains(text(), 'Programming')]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;XML (eXtensible Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- A flexible, tag-based format for representing structured data&lt;BR /&gt;- Similar to HTML in appearance&lt;BR /&gt;- But used for data storage and exchange, not page display.&lt;/P&gt;&lt;P&gt;For example:&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;book id="bk01"&amp;gt;&lt;BR /&gt;&amp;lt;author&amp;gt;Roan, Alexander&amp;lt;/author&amp;gt;&lt;BR /&gt;&amp;lt;title&amp;gt;Front end to S/4HANA&amp;lt;/title&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;HTML (HyperText Markup Language)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The standard language for building web pages and displaying content in browsers&lt;BR /&gt;- Uses tags to define elements like headings, paragraphs, links, and images&lt;BR /&gt;- Focused on structure and layout, not data exchange.&lt;/P&gt;&lt;H3 id="toc-hId-1256269107"&gt;Terminal&lt;/H3&gt;&lt;P&gt;I worked through this demo/test on Mac so I used Terminal, which is the Mac default command line interface (CLI).&lt;/P&gt;&lt;P&gt;The CLI is necessary for activities such as setting up and starting servers or working with docker containers.&lt;/P&gt;&lt;P&gt;Terminal basics&lt;/P&gt;&lt;P&gt;- Open a folder `cd &amp;lt;folder name&amp;gt;` (change directory)&lt;BR /&gt;- `cd` on it's own will go to the home directory&lt;BR /&gt;- (Note that `~` represents home directory in terminal)&lt;BR /&gt;- `cd ..` will go up a folder&lt;BR /&gt;- List folders `ls` (list files in the current directory)&lt;BR /&gt;- Open a file `open &amp;lt;file name&amp;gt;` (open a file)&lt;BR /&gt;- Quit sub-screen and return to terminal `q`&lt;BR /&gt;- Stop a running process hold control and c&lt;BR /&gt;- Clear terminal `clear`&lt;/P&gt;&lt;P&gt;To run JavaScript servers, JavaScript runtime is required. It's easier to install and manage things like this using a package manager in Terminal. Homebrew is a popular package manager for Mac.&lt;/P&gt;&lt;P&gt;Homebrew&lt;/P&gt;&lt;P&gt;- A package manager for Mac&lt;BR /&gt;- To install homebrew homebrew:&lt;BR /&gt;- Launch terminal (launchpad &amp;gt; other &amp;gt; terminal)&lt;BR /&gt;- Visit [Homebrew](&lt;A href="https://brew.sh/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://brew.sh/&lt;/A&gt;) in your web browser&lt;BR /&gt;- Copy the installation command&lt;BR /&gt;- Paste it into terminal press enter.&lt;/P&gt;&lt;H3 id="toc-hId-1227939293"&gt;Java/JavaScript&lt;/H3&gt;&lt;P&gt;To complete the demo/test a few different JavaScript things are needed.&lt;/P&gt;&lt;P&gt;Node.js&lt;/P&gt;&lt;P&gt;- This is a JavaScript that can be installed locally to create and run web-servers and web applications&lt;BR /&gt;- Install using Homebrew&lt;BR /&gt;- In terminal, enter: `brew install node`&lt;BR /&gt;- Test the installation of Node.js&lt;BR /&gt;- In terminal, enter: `node -v`, it should return the node version number.&lt;/P&gt;&lt;P&gt;NPM&lt;/P&gt;&lt;P&gt;- NPM is the node package manager&lt;BR /&gt;- It's installed with Node.js&lt;BR /&gt;- It's used to run a server&lt;BR /&gt;- Install it in any directory a Node.js server sits in&lt;BR /&gt;- To check the installation of NPM&lt;BR /&gt;- In terminal, enter: `npm -v`, it should return the npm version number&lt;/P&gt;&lt;P&gt;Java development kit (JDK)&lt;/P&gt;&lt;P&gt;- Cloud Connector is a more complex application and requires JDK&lt;BR /&gt;- More notes in the Cloud Connector section.&lt;/P&gt;&lt;H3 id="toc-hId-1031425788"&gt;API client (Bruno/Postman)&lt;/H3&gt;&lt;P&gt;The CodeJam utilised [Bruno](&lt;A href="https://www.usebruno.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.usebruno.com/&lt;/A&gt;) for API testing.&lt;/P&gt;&lt;P&gt;For the CodeJam a folder of pre-configured settings for Bruno is provided. However I'd suggest to start experimenting without the pre-configuration to build a solid understanding of the basics.&lt;/P&gt;&lt;P&gt;I'll include more notes in later sections.&lt;/P&gt;&lt;H2 id="toc-hId-1128315290"&gt;Building and testing an integration flow&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-638398778"&gt;Set up the S/4HANA business partner mock server&lt;/H3&gt;&lt;P&gt;Start by setting up the S/4HANA business partner mock server&lt;/P&gt;&lt;P&gt;- Download the mock server from [GitHub](&lt;A href="https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/SAP-archive/cloud-s4-sdk-book/tree/mock-server&lt;/A&gt;)&lt;BR /&gt;- Scroll down to the readme&lt;BR /&gt;- Either download the archive linked under 'How to run this server'&lt;BR /&gt;- Or if using GitHub clone the repository and checked the branch 'mock-server'&lt;BR /&gt;- Move it to a convenient folder of your choice&lt;BR /&gt;- I set it a `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-441885273"&gt;Run the server: option 1: use NPM&lt;/H3&gt;&lt;P&gt;Node.js and the node package manager (NPM) can be used to run the server directly on a computer.&lt;/P&gt;&lt;P&gt;- Open terminal&lt;BR /&gt;- Navigate to `users/&amp;lt;username&amp;gt;/projects/integration/cloud-s4-sdk-book`&lt;BR /&gt;- (or wherever you saved the folder)&lt;BR /&gt;- Enter: `npm install` (install node package manager in the folder)&lt;BR /&gt;- Enter: `npm start` (start the server)&lt;BR /&gt;- This should return something like:&lt;/P&gt;&lt;P&gt;```shell&lt;BR /&gt;&amp;gt; bupa-mock-odata@1.0.0 start&lt;BR /&gt;&amp;gt; node server.js&lt;BR /&gt;Mock server started on port 3000 after 1 ms, running - stop with CTRL+C (or CMD+C)...&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;Terminal tells us which port the server is running on. Port "3000" is accesible in the browser or an API client via "&lt;A href="http://localhost:3000" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000&lt;/A&gt;".&lt;/P&gt;&lt;P&gt;To stop the server in terminal use `ctrl+c`.&lt;/P&gt;&lt;P&gt;For the curious, you can look at the files that make up the mock server in the above folder. Check out:&lt;/P&gt;&lt;P&gt;- server.js&lt;BR /&gt;- This includes the JavaScript code for the server&lt;BR /&gt;- The code references other files such as app.js&lt;BR /&gt;- package.json&lt;BR /&gt;- This is like a configuration file for a node.js server&lt;BR /&gt;- business partner &amp;gt; business-partner-data.json&lt;BR /&gt;- This contains the demo test business partner data.&lt;/P&gt;&lt;P&gt;Theoretically you could use this Node.js server as a template to simulate other SAP Odata APIs with some adjustments to these files.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-245371768"&gt;Run the server: option 2: use Docker&lt;/H3&gt;&lt;P&gt;The mock server can also be run as a Docker container. This is a little more convenient as after the first run we can stop and start it from the Docker desktop app.&lt;/P&gt;&lt;P&gt;Note the server already has a Dockerfile, so it's already set up to run as a container.&lt;/P&gt;&lt;P&gt;If we run something inside a docker container we need to interact with it via ports on the container. The application is really running contained inside a container. When we run a docker container we provide a mapping between a local port on the computer and the container port. We can then access the docker application via this mapping.&lt;/P&gt;&lt;P&gt;To run as a Docker container:&lt;/P&gt;&lt;P&gt;- Launch the docker app&lt;BR /&gt;- Open terminal&lt;BR /&gt;- Enter `docker run -p 3005:8080 bp-mock-server`&lt;BR /&gt;- 3005 is the local port&lt;BR /&gt;- 8080 is the docker container port&lt;BR /&gt;- Local port can be any free port on your computer. I choose 3005&lt;BR /&gt;- The container port is 8080&lt;BR /&gt;- View the status of the container in the Docker app&lt;BR /&gt;- Use the browser to check `http//localhost:3005`&lt;/P&gt;&lt;P&gt;Note if there wasn't already a dockerfile we would need to create one and build the app before running it.&lt;/P&gt;&lt;P&gt;**A simple docker demo**&lt;/P&gt;&lt;P&gt;This was my first time using docker, so I experimented by creating a simple "Hello, World!" style server from scratch. Here it is if you want to try:&lt;/P&gt;&lt;P&gt;- Create a JS file "index.js"&lt;BR /&gt;- Add `console.log("hello from docker");`&lt;BR /&gt;- This just prints text to the console (Terminal)&lt;BR /&gt;- Create a package file "package.json"&lt;BR /&gt;- Add the following JSON to "package.json"&lt;/P&gt;&lt;P&gt;```json&lt;BR /&gt;{&lt;BR /&gt;"name": "hello-docker",&lt;BR /&gt;"version": "1.0.0",&lt;BR /&gt;"main": "index.js",&lt;BR /&gt;"scripts": {&lt;BR /&gt;"start": "node index.js"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- Create a dockerfile "dockerfile"&lt;BR /&gt;- Add the following to "dockerfile"&lt;/P&gt;&lt;P&gt;```Dockerfile&lt;BR /&gt;FROM node:18&lt;/P&gt;&lt;P&gt;WORKDIR /usr/src/app&lt;/P&gt;&lt;P&gt;COPY package*.json ./&lt;BR /&gt;RUN npm install&lt;/P&gt;&lt;P&gt;COPY . .&lt;/P&gt;&lt;P&gt;CMD ["npm", "start"]&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;You can see Docker uses NPM, in the same way we would with a manual run, but it's installing and running NPM inside the container, not on the computer.&lt;/P&gt;&lt;P&gt;To build and run:&lt;/P&gt;&lt;P&gt;- Build docker container `docker build -t hello-docker .`&lt;BR /&gt;- Run docker container `docker run hello-docker`&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-342261270"&gt;Testing with the web browser&lt;/H2&gt;&lt;P&gt;The simplest way to test the API is running locally is to put the local address in the web browser.&lt;/P&gt;&lt;P&gt;- For NPM it was "http//localhost:3000"&lt;BR /&gt;- For docker image it was "http//localhost:3005"&lt;/P&gt;&lt;P&gt;The main domain should return the API details including the links such as:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3000/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;BR /&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;To access the service to return the general data of all business partners we add A_BusinessPartner&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;"&lt;/P&gt;&lt;P&gt;In the browser, this should return a JSON document containing the list of business partners.&lt;/P&gt;&lt;P&gt;We can pick a business partner number from the list and use it with the path to select a specific business partner:&lt;/P&gt;&lt;P&gt;"&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner('1003764&lt;/A&gt;')"&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-145747765"&gt;Testing with an API client (Bruno)&lt;/H2&gt;&lt;P&gt;Rather than just using the web browser to check the API an API client can be used, this has a few benefits:&lt;/P&gt;&lt;P&gt;- We can build the URLs through a selection of 'input fields'&lt;BR /&gt;- We can save different requests for easy and quick re-testing&lt;BR /&gt;- We can pass data in the request body&lt;/P&gt;&lt;P&gt;To test with Bruno:&lt;/P&gt;&lt;P&gt;- Launch Bruno&lt;BR /&gt;- Use the '...' menu to create a collection&lt;BR /&gt;- Name it 'bp-mock'&lt;BR /&gt;- Specify a location. I used "users/{username}/projects/integration"&lt;/P&gt;&lt;P&gt;Create a request for all business partners&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'All business partners'&lt;BR /&gt;- Under URL select 'GET' and enter the URL that returns all business partners&lt;BR /&gt;- `&lt;A href="http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner" target="_blank" rel="noopener nofollow noreferrer"&gt;http://localhost:3005/sap/opu/odata/sap/API_BUSINESS_PARTNER/A_BusinessPartner&lt;/A&gt;`&lt;/P&gt;&lt;P&gt;Run a request&lt;/P&gt;&lt;P&gt;- Look to the right of the 'GET' line on the main page and click the '-&amp;gt;' to run&lt;BR /&gt;- The right panel will show the JSON response&lt;BR /&gt;- The same response as shown earlier in the web browser.&lt;/P&gt;&lt;P&gt;Create a request for a single business partner (1003765)&lt;/P&gt;&lt;P&gt;- Use the '...' menu next to bp-mock and select 'new request'&lt;BR /&gt;- Enter request name 'Specific business partners'&lt;BR /&gt;- Enter the same URL details as above.&lt;BR /&gt;- In the 'params' tab click '+ param' and enter&lt;BR /&gt;- Name: `&amp;amp;filter`&lt;BR /&gt;- Path: 'BusinessPartner eq '1003766'&lt;BR /&gt;- Run the request. A single business partner should be returned.&lt;/P&gt;&lt;P&gt;Note as the params are entered the URL dynamically updates.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Basics on OData API URLs&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- The base for the API is "/API_Business_Partner"&lt;BR /&gt;- A service of the API is then appended "/A_BusinessPartner"&lt;BR /&gt;- Queries can then by added, OData queries include:&lt;BR /&gt;- Filtering: `/A_BusinessPartner?$filter=Name eq 'Max'`&lt;BR /&gt;- Selecting fields: `/A_BusinessPartner?$select=Name,City`&lt;BR /&gt;- Pagination: `/A_BusinessPartner?$top=5&amp;amp;$skip=10`&lt;BR /&gt;- Accessing nested data: `/A_BusinessPartner?$expand=Address`&lt;BR /&gt;- When working with OData:&lt;BR /&gt;- Field names are case sensitive&lt;BR /&gt;- String values in single quotes&lt;/P&gt;&lt;P&gt;Keep in mind the S/4HANA mock business partner server only includes limited functionality. The above filters and selects won't work.&lt;/P&gt;&lt;H3 id="toc-hId--344168747"&gt;Java SDK for SAP Cloud Connector&lt;/H3&gt;&lt;P&gt;The next step is to set up SAP Cloud Connector&lt;/P&gt;&lt;P&gt;Recall Cloud Connector will provide a secure tunnel allowing SAP Cloud to talk to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;Cloud Connector requires a full Java Development Kit (JDK).&lt;/P&gt;&lt;P&gt;- You can use "javac -version" in terminal to check if you already have JDK&lt;BR /&gt;- There is a SAP Help page for [Cloud Connector](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector?locale=en-US&lt;/A&gt;)&lt;BR /&gt;- Check the [prerequisites](&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/prerequisites?locale=en-US#jdks&lt;/A&gt;) section, it lists the JDK options&lt;BR /&gt;- I choose SAP machine 21 JDK&lt;BR /&gt;- You can download this from [GitHub](&lt;A href="https://sap.github.io/SapMachine/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://sap.github.io/SapMachine/&lt;/A&gt;)&lt;BR /&gt;- I have a dev folder for items like this in my home folder&lt;BR /&gt;- "Users/{username}/dev"&lt;BR /&gt;- Use Homebrew to install&lt;BR /&gt;- Open terminal and enter "brew install openjdk@21"&lt;/P&gt;&lt;P&gt;It's likely you may run into version, compatibility, authorisation issues. These are all very common and a web search should help.&lt;/P&gt;&lt;H3 id="toc-hId--540682252"&gt;Install Cloud Connect&lt;/H3&gt;&lt;P&gt;Next install Cloud Connector.&lt;/P&gt;&lt;P&gt;Cloud connector is listed under the SAP development tools page under [Cloud](&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;https://tools.hana.ondemand.com/#cloud&lt;/A&gt;).&lt;/P&gt;&lt;P&gt;- Download the cloud connector file for your OS&lt;BR /&gt;- My Mac is Apple Silicon so I chose 'sapcc-2.18.1.2-macosx-aarch64.tar.gz'&lt;BR /&gt;- Unzip and move it to a folder of your choice&lt;BR /&gt;- Navigate inside the downloaded folder in terminal&lt;BR /&gt;- Check contents with 'ls', you should see a 'go.sh' file&lt;BR /&gt;- Enter: './go.sh' this will run Cloud Connector&lt;BR /&gt;- Cloud connector should now be running, note the address in the terminal log&lt;BR /&gt;- Login with default account: 'Administrator' and password: 'manage'&lt;BR /&gt;- Change password&lt;BR /&gt;- Keep a note of the account and password.&lt;/P&gt;&lt;P&gt;I received authorisation issues on the first attempt to run it:&lt;/P&gt;&lt;P&gt;- Click through them, then goto apple &amp;gt; settings &amp;gt; privacy&amp;amp;security&lt;BR /&gt;- Scroll down to security and click 'allow anyway'&lt;BR /&gt;- Try: './go.sh' again.&lt;/P&gt;&lt;H3 id="toc-hId--569012066"&gt;Install and set up SAP Integration Suite&lt;/H3&gt;&lt;P&gt;To continue from here SAP Integration has to be installed and active as per the earlier instructions.&lt;/P&gt;&lt;H3 id="toc-hId--765525571"&gt;Connect SAP Cloud Connector to SAP Integration Suite&lt;/H3&gt;&lt;P&gt;As Cloud Connector bridges between SAP Cloud and the S/4HANA business partner mock server we need to set it up to connect to SAP Cloud. We get the security/authentication data to do this from our SAP BTP trial account.&lt;/P&gt;&lt;P&gt;- After logging into Cloud Connector click '+Add Subaccount'&lt;BR /&gt;- Hit 'next' to skip the HTTPS settings&lt;BR /&gt;- Select 'Configure using authentication data'&lt;BR /&gt;- Select 'Add subaccount authentication data from file '&lt;BR /&gt;- In your browser got to your SAP BTP trial homepage&lt;BR /&gt;- Click on your subaccount&lt;BR /&gt;- On the left menu expand Connectivity and select Cloud Connectors&lt;BR /&gt;- Click on 'download authentication data'&lt;BR /&gt;- Return to Cloud Connector&lt;BR /&gt;- Click browse and select the downloaded file 'authentication.data'&lt;BR /&gt;- Click next&lt;BR /&gt;- Leave location ID blank&lt;BR /&gt;- (This would be relevant if there were multiple Cloud Connectors)&lt;BR /&gt;- Click finish.&lt;/P&gt;&lt;P&gt;Double check the settings in the subaccount overview:&lt;/P&gt;&lt;P&gt;- BTP trial region = Cloud Connector region&lt;BR /&gt;- BTP Subaccount ID = Cloud Connector Subaccount&lt;BR /&gt;- The region host in Cloud Connector = Cloud Foundry API Endpoint in BTP.&lt;/P&gt;&lt;H3 id="toc-hId--962039076"&gt;Cloud Connector to Mock BP Server&lt;/H3&gt;&lt;P&gt;There's no security on S/4HANA business partner mock server so it is simply a matter of adding the address.&lt;/P&gt;&lt;P&gt;- In Cloud Connector, on the left sidebar click 'Cloud to On-Premise'&lt;BR /&gt;- To the right of 'Mapping Virtual to Internal Systems' click `+`&lt;BR /&gt;- Select back-end, enter: "Non-SAP system", click 'next'&lt;BR /&gt;- Select protocol: "HTTP", click 'next'&lt;BR /&gt;- For internal host enter "localhost"&lt;BR /&gt;- For internal port enter: "3005"&lt;BR /&gt;- For virtual host: "s4-mock"&lt;BR /&gt;- For virtual Port: "3006"&lt;BR /&gt;- Uncheck allow principal propagation&lt;BR /&gt;- Click through to finish.&lt;/P&gt;&lt;P&gt;Replace the internal port name with the one your mock server is running on locally. You are free to choose the virtual host and port.&lt;/P&gt;&lt;P&gt;It's critical to select "Non-SAP system" and HTTP, not HTTPS.&lt;/P&gt;&lt;P&gt;A new entry will appear under 'Mapping Virtual to Internal Systems'&lt;/P&gt;&lt;P&gt;- Make sure your mock bp server is still running on the host and IP you entered&lt;BR /&gt;- From the icons on the right, click on 'check availability..'&lt;BR /&gt;- You should see status 'reachable'&lt;/P&gt;&lt;P&gt;At this stage `&lt;A href="https://localhost:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://localhost:3005&lt;/A&gt;` is now mapped to `&lt;A href="https://s4-mock:3005" target="_blank" rel="noopener nofollow noreferrer"&gt;https://s4-mock:3005&lt;/A&gt;` in the SAP Cloud.&lt;/P&gt;&lt;P&gt;You can also check in integration suite to see if Cloud Connector is connected.&lt;/P&gt;&lt;P&gt;- In the left hand menu select connectivity &amp;gt; cloud connectors.&lt;/P&gt;&lt;P&gt;Errors at this stage are likely related to&lt;/P&gt;&lt;P&gt;- Mistakes in the host name, port name, or system type&lt;BR /&gt;- The mock server or cloud connector is not running.&lt;/P&gt;&lt;H3 id="toc-hId--1158552581"&gt;Design integration flow&lt;/H3&gt;&lt;H4 id="toc-hId--1648469093"&gt;Create an integration flow&lt;/H4&gt;&lt;P&gt;- Login to BTP trial home&lt;BR /&gt;- From the left hand menu expand Services and select Instances and subscriptions&lt;BR /&gt;- Under 'Subscriptions' click on 'Integration Suite'&lt;BR /&gt;- On the left menu select expand 'Design' and select 'Integrations and APIs'&lt;BR /&gt;- Choose 'Create' on the top right to create a new package.&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Shift to the 'Artifacts' tab&lt;BR /&gt;- Select 'Add' and choose 'Integration Flow' from the list&lt;BR /&gt;- Give it a name&lt;BR /&gt;- Click add&lt;BR /&gt;- Click on the newly created integration flow&lt;/P&gt;&lt;P&gt;The integration flow screen is read-only by default, click edit.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set up the sender&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Define an 'address' for the SAP Integration Suite endpoint.&lt;/P&gt;&lt;P&gt;- Click on sender&lt;BR /&gt;- Click connector arrow&lt;BR /&gt;- Drag to start event&lt;BR /&gt;- In adapter type pop-up select HTTPS&lt;BR /&gt;- To configure the adapter click on the drawn line (if not selected)&lt;BR /&gt;- The settings are in the bottom panel, drag it up to expand it&lt;BR /&gt;- Navigate to 'connection' tab, enter the following:&lt;BR /&gt;- Address: `/request-business-partners`&lt;BR /&gt;- Authorisation: `User Role`&lt;BR /&gt;- User Role: `ESBMessaging.send`&lt;BR /&gt;- CSRF Protected: `Unchecked` (Cross-site request forgery).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add flow elements&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The CodeJam has excellent instructions for walking through different flow steps as per their exercises.&lt;/P&gt;&lt;P&gt;I will summarise a few elements I used in my design.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Router&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Router](/assets/images/blog/integration/Integration-23-A.png)&lt;/P&gt;&lt;P&gt;- The router allows you to split the flow based on a condition.&lt;BR /&gt;- This example splits the flow into 4 based on the incoming URL&lt;BR /&gt;- For example where the incoming URL ends in "single/add"&lt;BR /&gt;- Re-call our integration flow address was "request-business-partners"&lt;BR /&gt;- In this case a message arrives to "request-business-partners/single/add"&lt;BR /&gt;- Intelligent Suite assigns the last part to the variable CamelHttpPath&lt;BR /&gt;- Which is part of the message header hence: header.CamelHttpPath.&lt;/P&gt;&lt;P&gt;The route path we are looking at in this example is the one that returns a single business partner with address data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 1&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Case 1:&lt;/P&gt;&lt;P&gt;- The content modifier allows us to modify the message header or body.&lt;BR /&gt;- In the above screenshot a content modifier is added directly after the routing.&lt;BR /&gt;- This deletes the CamelHttpPath, in this case "single/add"&lt;BR /&gt;- After routing we no longer need this part of the URL in the message header.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;JSON to XML converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- This converts the JSON in the message body to XML.&lt;BR /&gt;- In the case of searching for a single BP the message body includes JSON:&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1234567"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- This will be converted to XML&lt;/P&gt;&lt;P&gt;```XML&lt;BR /&gt;&amp;lt;root&amp;gt;&lt;BR /&gt;&amp;lt;employee_id&amp;gt;1234567&amp;lt;/employee_id&amp;gt;&lt;BR /&gt;&amp;lt;/root&amp;gt;&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content modifier - case 2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;![Content modifier](/assets/images/blog/integration/Integration-23-B.png)&lt;/P&gt;&lt;P&gt;- In this case the content modifier gets "employee_id" from the message body&lt;BR /&gt;- And assigns it to a new variable&lt;BR /&gt;- XPath can be used to access the XML value&lt;BR /&gt;- "/root/employee_id"&lt;BR /&gt;- The variable name is set as employee_id&lt;BR /&gt;- The data type is set as a Java string.&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;Request Reply&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Request reply let's us send a request to a server.&lt;/P&gt;&lt;P&gt;- Click on the Set employee_id&lt;BR /&gt;- Click add flow step on the canvas&lt;BR /&gt;- Select 'Request Reply' under call &amp;gt; external call&lt;BR /&gt;- Click on 'Request Reply'&lt;BR /&gt;- Click on 'connector' and drag to the receiver&lt;BR /&gt;- Select adapter type 'HTTP'&lt;BR /&gt;- Under 'HTTP' in the connector properties, select 'Connection'&lt;BR /&gt;- Enter the address of the cloud connector:&lt;BR /&gt;- The path for a single business partner with address data involves updating:&lt;BR /&gt;- Address: "&lt;A href="http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id" target="_blank" rel="noopener nofollow noreferrer"&gt;http://s4-mock:3006/sap/opu/odata/sap/API_Business_Partner/A_BusinessPartner('${property.employee_id&lt;/A&gt;}')"&lt;BR /&gt;- Query: "$expand=to_BusinessPartnerAddress"&lt;BR /&gt;- Proxy Type: `On-premise`&lt;BR /&gt;- Method: `GET`&lt;BR /&gt;- Authentication: `None`&lt;BR /&gt;- Save&lt;BR /&gt;- Deploy&lt;/P&gt;&lt;P&gt;To check deployment status go to Monitor &amp;gt; Integration and APIs. On this page the endpoint to access the service is shown:&lt;/P&gt;&lt;P&gt;"https://{your trial}-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;/P&gt;&lt;H4 id="toc-hId--1844982598"&gt;Test Cloud Integration with API client&lt;/H4&gt;&lt;P&gt;At this point we can test consuming the API through SAP Integration Suite.&lt;/P&gt;&lt;P&gt;Unlike testing the local mock server, we need to deal with authentication and security. The way this works is:&lt;/P&gt;&lt;P&gt;- We pass a "client id" and "secret" to a "token URL"&lt;BR /&gt;- BTP passes back a "token" which is valid for a certain period of time&lt;BR /&gt;- This "token" has to be attached to any requests to the API in Intelligent Suite.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Accessing security details&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;- Navigate to your BTP trial account&lt;BR /&gt;- Expand services and click on 'instances and subscriptions'&lt;BR /&gt;- Scroll down to instances and look for your integration flow instance&lt;BR /&gt;- Integration Suite uses Cloud Foundry so the runtime will be cloud foundry&lt;BR /&gt;- It will likely be named 'default_it-rt_integration-flow'&lt;BR /&gt;- Scroll down to service keys and click on the service key, note the values for:&lt;BR /&gt;- "clientid"&lt;BR /&gt;- "clientsecret"&lt;BR /&gt;- "url"&lt;BR /&gt;- "tokenurl"&lt;/P&gt;&lt;P&gt;For local testing we can hardcode these values in our test tools, but be careful not to upload or share these anywhere.&lt;/P&gt;&lt;P&gt;In production, never hardcode secrets or tokens. Use environment variables or a secure credential store.&lt;/P&gt;&lt;P&gt;**Request a token with Bruno**&lt;/P&gt;&lt;P&gt;In Bruno create a new request:&lt;/P&gt;&lt;P&gt;- Name: `TOKEN`&lt;BR /&gt;- Method: `POST`&lt;BR /&gt;- URL: enter the "tokenurl" from above&lt;BR /&gt;- Navigate to the Params tab:&lt;BR /&gt;- Select 'Add Param'&lt;BR /&gt;- Enter name: `grant_type` path: `client_credentials`&lt;BR /&gt;- Navigate to Auth&lt;BR /&gt;- Switch 'Inherit' to 'Basic Auth' and enter:&lt;BR /&gt;- Username: `client_id`&lt;BR /&gt;- Password: `client_secret`&lt;BR /&gt;- Save&lt;/P&gt;&lt;P&gt;Send the request. This should return a JSON document with a long value in "access_token". There should also be a expiry time e.g. 4199 seconds.&lt;/P&gt;&lt;P&gt;When sending a request, if the token is not valid Integration Suite will return a 401 error code. This means we need to request a new token.&lt;/P&gt;&lt;P&gt;Within Bruno we can save this token value to a variable. This saves us from copying and pasting it into other requests.&lt;/P&gt;&lt;P&gt;- Goto Environments &amp;gt; Configure &amp;gt; Create Environment&lt;BR /&gt;- Name: 'integration-flow'&lt;BR /&gt;- Click '+ Add Variable'&lt;BR /&gt;- Enter name: 'access_token'&lt;BR /&gt;- For value, leave it blank&lt;BR /&gt;- Save and close&lt;/P&gt;&lt;P&gt;Navigate to 'scripts' under the TOKEN request. Under Post Request enter:&lt;/P&gt;&lt;P&gt;```JS&lt;BR /&gt;if (res.status == 200) {&lt;BR /&gt;const token = res.body.access_token;&lt;BR /&gt;bru.setEnvVar("access_token",token);&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;P&gt;- If the request receives a response (status 200)&lt;BR /&gt;- Get the access_token value from the response&lt;BR /&gt;- Assign to environment variable "access_token".&lt;/P&gt;&lt;P&gt;Save and run the TOKEN request.&lt;BR /&gt;Goto the environment and click 'configure'. You should see the access_token variable updated with the value from the response.&lt;/P&gt;&lt;P&gt;**Test the API with a request with for a single BP**&lt;/P&gt;&lt;P&gt;- In Bruno create a new request&lt;BR /&gt;- Name: "BP via integration suite"&lt;BR /&gt;- URL: "https://{your-trial}.it-cpitrial03-rt.cfapps.ap21.hana.ondemand.com/http/request-business-partners"&lt;BR /&gt;- Replace the above with your actual endpoint from Intelligent Suite.&lt;BR /&gt;- Navigate to the 'Auth' tab&lt;BR /&gt;- Click on 'Inherit' and change to 'Bearer Token'&lt;BR /&gt;- In Token enter: `{{access_token}}`&lt;BR /&gt;- This eferences an environment variable in Bruno&lt;BR /&gt;- Add the request body&lt;BR /&gt;- The JSON with our employee ID&lt;/P&gt;&lt;P&gt;```JSON&lt;BR /&gt;{&lt;BR /&gt;"employee_id": "1003764"&lt;BR /&gt;}&lt;BR /&gt;```&lt;/P&gt;&lt;H2 id="toc-hId--1454690089"&gt;Building and testing a frontend&lt;/H2&gt;&lt;P&gt;At this point a request to SAP Integration Suite should be successfully routed and transformed to the S/4HANA business partner mock server.&lt;/P&gt;&lt;P&gt;The next part would be building and testing the web app. However, there is too much to cover in building and testing the frontend to cover in this post. I may produce a video on this if anyone is interested.&lt;/P&gt;&lt;H2 id="toc-hId--1651203594"&gt;Final thoughts&lt;/H2&gt;&lt;P&gt;This technology stack is definitely a bit overkill for a simple 'search' portal, but it is fairly easy to put together as long as you are careful when specifying paths, hosts and port names.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you'd like to discuss further please feel free to connect on &lt;A href="https://www.linkedin.com/in/alexanderroan/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn - Alexander Roan&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/build-a-web-app-and-connect-to-s-4hana-with-sap-integration-suite/ba-p/14179607"/>
    <published>2025-08-13T12:45:21.973000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/strengthening-sap-btp-security-sso-with-cloud-connector-using-token-based/ba-p/14186995</id>
    <title>🔐 Strengthening SAP BTP Security: SSO with Cloud Connector Using Token-Based Auth (Replacing SUSER)</title>
    <updated>2025-08-22T11:13:39.813000+02:00</updated>
    <author>
      <name>sushilgupta857</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/720925</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737749421" id="toc-hId-1737931145"&gt;About Me&lt;/H2&gt;&lt;P&gt;Hare Krishna&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class="lia-unicode-emoji"&gt;&lt;span class="lia-unicode-emoji" title=":folded_hands:"&gt;🙏&lt;/span&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;I am an SAP BTP Cloud Architect sharing practical insights, solutions, and real-world experiences from the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1541235916" id="toc-hId-1541417640"&gt;&lt;span class="lia-unicode-emoji" title=":globe_showing_europe_africa:"&gt;🌍&lt;/span&gt;Introduction&lt;/H2&gt;&lt;P&gt;Security is at the heart of SAP BTP (Business Technology Platform) administration. Traditionally, basic authentication with &lt;STRONG&gt;SUSER credentials&lt;/STRONG&gt; was required when connecting SAP Cloud Connector (SCC) with a BTP subaccount. While functional, this approach has critical drawbacks:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Static credentials stored in config&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Weak auditability&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Complex user/password management&lt;/P&gt;&lt;P&gt;With the adoption of &lt;STRONG&gt;token-based authentication and Single Sign-On (SSO)&lt;/STRONG&gt; using a &lt;STRONG&gt;Custom Identity Provider (IdP)&lt;/STRONG&gt;, SAP now offers a smarter and more secure way of handling access. This blog explains how the shift strengthens security, simplifies user management, and eliminates the dependency on SUSER credentials.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1344904135"&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;What’s New: Token-Based Authentication for the SCC ↔ Subaccount Link&lt;/H2&gt;&lt;P&gt;Instead of sending an S-user + password when adding/maintaining the subaccount in SCC, you trigger an &lt;STRONG&gt;SSO flow&lt;/STRONG&gt;: the subaccount’s &lt;STRONG&gt;trust configuration&lt;/STRONG&gt; redirects to your &lt;STRONG&gt;Custom IdP&lt;/STRONG&gt;, issues a &lt;STRONG&gt;short-lived token&lt;/STRONG&gt;, and &lt;STRONG&gt;BTP validates&lt;/STRONG&gt; it to complete the SCC connection.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why it matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":cross_mark:"&gt;❌&lt;/span&gt;No static S-user secrets in SCC&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Short-lived tokens + centralized IdP policies/MFA&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Clean audit trail and easy revocation&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1148390630"&gt;&lt;span class="lia-unicode-emoji" title=":gear:"&gt;⚙️&lt;/span&gt;Step-by-Step Configuration (Corrected)&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Step 1 — Configure Custom IdP in the BTP Subaccount&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;BTP Cockpit → &lt;STRONG&gt;Subaccount → Security → Trust Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add/enable your &lt;STRONG&gt;Custom IdP&lt;/STRONG&gt; (SAP IAS / Azure AD / Okta, etc.) for user logon&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Ensure metadata/trust is correct (SAML/OIDC per your org standard)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 2 — Provision the Admin &amp;amp; Map Roles (in Subaccount)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Ensure the &lt;STRONG&gt;admin user exists in the subaccount&lt;/STRONG&gt; and is mapped to the Custom IdP&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Assign the &lt;STRONG&gt;Cloud Connector Administrator&lt;/STRONG&gt; role collection (name may vary by tenant)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Without this mapping, the token flow will fail when SCC tries to connect&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 3 — Connect SCC to the Subaccount via Token-Based SSO&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;In &lt;STRONG&gt;SCC Admin UI&lt;/STRONG&gt; → &lt;STRONG&gt;Subaccounts&lt;/STRONG&gt; → &lt;EM&gt;Add / Maintain Subaccount&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Choose &lt;STRONG&gt;token-based/SSO&lt;/STRONG&gt; (not username/password)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;The flow opens the &lt;STRONG&gt;BTP subaccount trust&lt;/STRONG&gt; → &lt;STRONG&gt;redirects to your Custom IdP&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Authenticate as the mapped admin; on success, &lt;STRONG&gt;BTP validates the token&lt;/STRONG&gt; and &lt;STRONG&gt;SCC shows the subaccount as connected&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 4 — Validate the Connection&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Confirm SCC shows &lt;STRONG&gt;Connected&lt;/STRONG&gt; (region, Subaccount ID, location ID as applicable)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Optionally verify in &lt;STRONG&gt;BTP cockpit&lt;/STRONG&gt; (Connectivity / Cloud Connector view) that the subaccount link is healthy&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 5 — Existing Subaccounts (Legacy) – Do It at Certificate Renewal&lt;/STRONG&gt;&lt;/P&gt;&lt;BLOCKQUOTE&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt;For old subaccounts already connected with S-user: &lt;STRONG&gt;switch to token-based SSO during the certificate renewal window&lt;/STRONG&gt;.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Keep the same subaccount; update trust to Custom IdP (if not already)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Re-establish the SCC ↔ subaccount link using &lt;STRONG&gt;token-based SSO&lt;/STRONG&gt; (no S-user)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;This upgrades security without spinning up a new subaccount&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/BLOCKQUOTE&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-951877125"&gt;&lt;span class="lia-unicode-emoji" title=":shield:"&gt;🛡&lt;/span&gt;️ Key Benefits&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;No S-user secrets&lt;/STRONG&gt; stored in SCC&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;MFA &amp;amp; policies&lt;/STRONG&gt; enforced centrally at your IdP&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Auditable&lt;/STRONG&gt; (IdP + BTP logs)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Lower ops overhead&lt;/STRONG&gt; (no password rotations, fewer incidents)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-755363620"&gt;&lt;span class="lia-unicode-emoji" title=":building_construction:"&gt;🏗&lt;/span&gt;️ Architecture Flow — SCC ↔ Subaccount Token-Based SSO&lt;/H2&gt;&lt;P&gt;[Cloud Connector]&lt;BR /&gt;│ (1. Connect/renew request to subaccount)&lt;BR /&gt;▼&lt;BR /&gt;[SAP BTP Subaccount – Trust Configuration]&lt;BR /&gt;│ (2. Redirects to Custom IdP for auth)&lt;BR /&gt;▼&lt;BR /&gt;[Custom Identity Provider (IdP)]&lt;BR /&gt;│ (3. User/admin authenticates → token issued)&lt;BR /&gt;▼&lt;BR /&gt;[SAP BTP Subaccount]&lt;BR /&gt;│ (4. Validates token &amp;amp; completes trust)&lt;BR /&gt;▼&lt;BR /&gt;[Secure Connection Established: SCC ↔ Subaccount]&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step notes&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;SCC initiates the subaccount connection (add/renew).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Subaccount trust hands off to your IdP.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;IdP authenticates the &lt;STRONG&gt;mapped&lt;/STRONG&gt; admin and issues a token.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;BTP validates token; the SCC ↔ subaccount link is finalized—&lt;STRONG&gt;no S-user&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-558850115"&gt;&lt;span class="lia-unicode-emoji" title=":camera_with_flash:"&gt;📸&lt;/span&gt;Real-Life Example (With Screenshots)&lt;/H2&gt;&lt;P&gt;Here’s how this setup looks in actual environment( BTP trial account is used for performing this setup)&lt;/P&gt;&lt;P&gt;Create user in SAP BTP Subaccount, Provide Cloud Connector administrator privileges.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_27_04-Users - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" style="width: 742px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303812i0AB7EF84A7E7495C/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_27_04-Users - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" alt="2025-08-22 13_27_04-Users - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We will. be using IAS as custom identity provider. Create User in IAS as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_34_28-Administration Console for Cloud Identity Services.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303813i591A5E92DD806DFC/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_34_28-Administration Console for Cloud Identity Services.png" alt="2025-08-22 13_34_28-Administration Console for Cloud Identity Services.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Login to Cloud connector, Provide required details and update&amp;nbsp;&lt;SPAN&gt;$SAP-CP-SSO-PASSCODE$ in Login E-mail section&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_37_02-Cloud Connector.png" style="width: 766px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303811iA4F2636DC499F1FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_37_02-Cloud Connector.png" alt="2025-08-22 13_37_02-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Make sure Subaccount is connected to IAS using OIDC or SAML Protocols In trust configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_38_23-Trust Configuration - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303810i80955FD0049AE33B/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_38_23-Trust Configuration - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" alt="2025-08-22 13_38_23-Trust Configuration - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now Create URL like shown below:&amp;nbsp;&lt;SPAN&gt;The URL pattern is&amp;nbsp;&lt;/SPAN&gt;https://&amp;lt;subdomain&amp;gt;.authentication.&amp;lt;btp-XSUAA-host&amp;gt;/passcode&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_39_15-New Tab.png" style="width: 810px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303814i28B9EDF884BF5DAD/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_39_15-New Tab.png" alt="2025-08-22 13_39_15-New Tab.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When you access the URl, It will redirect to IAS for authentication&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_40_29-SAP BTP subaccount BTP tools_ Sign In.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303815i0274D7EC1A2C9661/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_40_29-SAP BTP subaccount BTP tools_ Sign In.png" alt="2025-08-22 13_40_29-SAP BTP subaccount BTP tools_ Sign In.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Post successful User authentication, Temporary authentication code is generated. Use it in Cloud connector&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_41_06-Welcome.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303816i46386913D51508E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_41_06-Welcome.png" alt="2025-08-22 13_41_06-Welcome.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Update the token in cloud connector configurations shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_41_21-Cloud Connector.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303817i5C143094F396086B/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_41_21-Cloud Connector.png" alt="2025-08-22 13_41_21-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Cloud connector is successfully connected to Subaccount.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_42_05-Cloud Connector.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303818i02A582D851E80B5E/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_42_05-Cloud Connector.png" alt="2025-08-22 13_42_05-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now for Legacy systems, where users are already using SUSERID and password, while cert renewal, we can use the SSO mechanism to generate token and renew the certificate.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_42_35-Cloud Connector.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303819i847584176DD008ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_42_35-Cloud Connector.png" alt="2025-08-22 13_42_35-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;click on enter user and password&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_42_43-Cloud Connector.png" style="width: 780px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303820i55F0D2138127BF53/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_42_43-Cloud Connector.png" alt="2025-08-22 13_42_43-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Enter Username , and generate the token using&lt;SPAN&gt;&amp;nbsp;URL pattern is&amp;nbsp;&lt;/SPAN&gt;https://&amp;lt;subdomain&amp;gt;.authentication.&amp;lt;btp-XSUAA-host&amp;gt;/passcode&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_42_59-Cloud Connector.png" style="width: 771px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303821i68FD2D46CF9FE638/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_42_59-Cloud Connector.png" alt="2025-08-22 13_42_59-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Token is successfully generated&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_43_18-Welcome.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303822i038CC8210552859A/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_43_18-Welcome.png" alt="2025-08-22 13_43_18-Welcome.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Certificate is renewed successfully&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 13_43_53-.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303823iDC7F4B85A0B8E618/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 13_43_53-.png" alt="2025-08-22 13_43_53-.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Cloud connector is successfully connected in Subaccount:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-22 14_05_13-Cloud Connectors - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303824iBF9BD567953660F4/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-22 14_05_13-Cloud Connectors - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" alt="2025-08-22 14_05_13-Cloud Connectors - BTP tools _ 93e6ed2etrial _ Trial Home - SAP BTP Cockpit.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-362336610"&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;Lessons Learned&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The &lt;STRONG&gt;security move&lt;/STRONG&gt; is about the &lt;STRONG&gt;SCC ↔ subaccount link&lt;/STRONG&gt;, not just SCC UI logon&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Provisioning &amp;amp; role mapping in the &lt;STRONG&gt;subaccount&lt;/STRONG&gt; is critical for the token flow&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use the &lt;STRONG&gt;certificate renewal&lt;/STRONG&gt; window to modernize legacy S-user connections with minimal disruption&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-165823105"&gt;&lt;span class="lia-unicode-emoji" title=":question_mark:"&gt;❓&lt;/span&gt;FAQs&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Q1. Do we still need S-user anywhere for this connection?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;No. After token-based SSO is configured, the SCC ↔ subaccount link does &lt;STRONG&gt;not&lt;/STRONG&gt; use S-user.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q2. Which IdPs are supported?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;STRONG&gt;SAP IAS, Azure AD, Okta, Ping&lt;/STRONG&gt;, etc., via SAML/OIDC per enterprise policy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q3. Extra cost?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;No new SAP license; enterprise IdP subscriptions/policies apply as usual.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q4. Is this mandatory for all subaccounts now?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Not mandated, but it’s the &lt;STRONG&gt;recommended&lt;/STRONG&gt; security posture going forward.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q5. Must the admin user exist in the subaccount?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Yes. The user must be &lt;STRONG&gt;provisioned in the subaccount&lt;/STRONG&gt;, mapped to the &lt;STRONG&gt;Custom IdP&lt;/STRONG&gt;, and assigned &lt;STRONG&gt;Cloud Connector Administrator&lt;/STRONG&gt;. Otherwise, the SSO/token step fails.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q6. How do old subaccounts switch from S-user to token-based SSO?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Use the &lt;STRONG&gt;certificate renewal&lt;/STRONG&gt; process to re-establish the link with token-based SSO—no new subaccount needed.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--30690400"&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;Key Takeaway&lt;/H2&gt;&lt;P&gt;Modernize the &lt;STRONG&gt;SCC ↔ subaccount&lt;/STRONG&gt; connection with &lt;STRONG&gt;token-based SSO&lt;/STRONG&gt;. You’ll remove S-user secrets, enforce corporate IdP controls (MFA, policies), gain clean auditability, and cut down operational toil. For legacy links, plan the switch at the &lt;STRONG&gt;next certificate renewal&lt;/STRONG&gt;.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-120050452"&gt;&lt;span class="lia-unicode-emoji" title=":small_blue_diamond:"&gt;🔹&lt;/span&gt;Bonus Update – What’s New in Cloud Connector&lt;/H2&gt;&lt;P&gt;Although this blog is about &lt;STRONG&gt;SSO in Cloud Connector&lt;/STRONG&gt;, here’s a quick surprise update:&lt;/P&gt;&lt;P&gt;SAP introduced a &lt;STRONG&gt;new option to upload authentication data&lt;/STRONG&gt; starting with &lt;STRONG&gt;Cloud Connector 2.17.0&lt;/STRONG&gt; (released in &lt;STRONG&gt;May 2024&lt;/STRONG&gt;).&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Instead of manually entering region, subaccount ID, and other details, you can now simply upload the authentication.data file.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;This file is generated using the &lt;STRONG&gt;credentials of the user you log in with to the BTP cockpit&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;That user must have the &lt;STRONG&gt;necessary authorizations to perform Cloud Connector administrator tasks&lt;/STRONG&gt; in order for the upload to succeed.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;This makes subaccount onboarding and certificate renewal much easier and less error-prone.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;So if you’re running &lt;STRONG&gt;Cloud Connector 2.17.0 or newer&lt;/STRONG&gt;, you can take advantage of this simplified workflow.&lt;/P&gt;&lt;H3 id="toc-hId--369866060"&gt;Below are the steps with screenshots:&lt;/H3&gt;&lt;P&gt;Login to BTP cockpit, Select Cloud Connectors. Now Click on &lt;STRONG&gt;Download authorisation Data&lt;/STRONG&gt; Option as highlighted below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-23 00_36_25-Photos.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304104i19E44A9DD0FE9208/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-23 00_36_25-Photos.png" alt="2025-08-23 00_36_25-Photos.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In Cloud connector when we add Subaccount, Select option "Configure using authentication data from File"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-23 00_37_40-Cloud Connector.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304106i368C969B4F6DC9B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-23 00_37_40-Cloud Connector.png" alt="2025-08-23 00_37_40-Cloud Connector.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will successfully connect the Cloud connector with Subaccount using the UserID of user which you used to login to BTP cockpit.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="2025-08-23 00_38_43-Photos.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304105iF002D4C2FEDBDC66/image-size/large?v=v2&amp;amp;px=999" role="button" title="2025-08-23 00_38_43-Photos.png" alt="2025-08-23 00_38_43-Photos.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Same process can be followed for renewal of certificates as well !&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/strengthening-sap-btp-security-sso-with-cloud-connector-using-token-based/ba-p/14186995"/>
    <published>2025-08-22T11:13:39.813000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-guide-provisioning-users-from-ldap-docker-based-into-sap-cloud/ba-p/14197562</id>
    <title>How-to Guide: Provisioning Users from LDAP (Docker-based) into SAP Cloud Identity Services (IPS)</title>
    <updated>2025-08-28T18:44:06.372000+02:00</updated>
    <author>
      <name>bpasynkov</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1847</uri>
    </author>
    <content>&lt;P&gt;Setting up user provisioning from a corporate LDAP into SAP Cloud Identity Service (CIS) — Identity Provisioning (IPS) is not the most common task — most customers today rely on Microsoft Entra ID (in sync with AD FS, for example).&lt;/P&gt;&lt;P&gt;But sometimes LDAP is still needed. I decided to reproduce this scenario and, at the same time, get my first hands-on with Docker: run OpenLDAP, connect User Interface, wire it through SAP Cloud Connector, and test provisioning into CIS → Identity Directory (IdDS).&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Goal&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Spin up OpenLDAP in Docker with a GUI (phpLDAPadmin).&lt;/LI&gt;&lt;LI&gt;Configure Docker networking and port mapping.&lt;/LI&gt;&lt;LI&gt;Connect LDAP to SAP Cloud Connector (SCC).&lt;/LI&gt;&lt;LI&gt;Set up Identity Provisioning (IPS) to write into CIS.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="LDAP2.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306063i011FE59E8DB5CF2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="LDAP2.drawio.png" alt="LDAP2.drawio.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;The beauty of containers is their lightweight nature and the ability to spin up everything with a single script.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;For this setup I used:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://hub.docker.com/r/bitnami/openldap" target="_self" rel="nofollow noopener noreferrer"&gt;bitnami/openldap&lt;/A&gt; → the LDAP server holding user entries.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://github.com/osixia/docker-phpLDAPadmin" target="_self" rel="nofollow noopener noreferrer"&gt;osixia/phpldapadmin&lt;/A&gt; → the GUI for user administration, so I don’t have to manage everything via CLI.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;By exposing ports from the internal Docker network (via docker-compose), you can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;access phpLDAPadmin locally in the browser to create test users,&lt;/LI&gt;&lt;LI&gt;connect a local SAP Cloud Connector instance to the same LDAP through the mapped port, and then expose it into your BTP Subaccount.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Next step: solving a few practical issues.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1. Running OpenLDAP in a container&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Problem: OpenLDAP by default only listens inside the container (389) and is not accessible from the host.&lt;/LI&gt;&lt;LI&gt;Solution: map a host port, e.g. 13890:389.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 2. Docker Networking (docker-compose)&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Problem: containers may not see each other by hostname if not attached to the same user-defined network. Basic networking tools (nc, telnet) are also missing inside the images.&lt;/LI&gt;&lt;LI&gt;Solution: create a custom &lt;A href="https://docs.docker.com/reference/compose-file/networks/" target="_self" rel="nofollow noopener noreferrer"&gt;Docker network&lt;/A&gt; in &lt;A href="https://docs.docker.com/get-started/docker-concepts/the-basics/what-is-docker-compose/" target="_self" rel="nofollow noopener noreferrer"&gt;docker-compose&lt;/A&gt; and connect both openldap and phpldapadmin to it. Inside the network use port 389; for external access, use the mapped port.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 3. phpLDAPadmin Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Problem: phpLDAPadmin expects to connect to localhost:389 by default.&lt;/LI&gt;&lt;LI&gt;Solution: configure environment variables in docker-compose.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Intermediate Result&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;OpenLDAP and phpLDAPadmin are up and running in Docker.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Internal networking and port mapping are configured.&lt;/LI&gt;&lt;LI&gt;You can now add test users via GUI and prepare LDAP for SCC → IPS integration.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Connecting SAP Cloud Connector (SCC)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In SCC, create a new connection for your BTP Subaccount using LDAP protocol, pointing to localhost:13890.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="20%" height="30px"&gt;Back-end Type&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;Protocol&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;Internal Host&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;Virtual Host&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;&lt;SPAN class=""&gt;Principal Type&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="20%" height="30px"&gt;Non-ABAP System&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;LDAP&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;localhost:13890&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;ldap:389&lt;/TD&gt;&lt;TD width="20%" height="30px"&gt;None&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Important: your Subaccount must have the &lt;EM&gt;Connectivity service plan&lt;/EM&gt; enabled in SAP Cloud Identity Services. This allows IPS &lt;A href="https://help.sap.com/docs/cloud-identity-services/cloud-identity-services/connect-to-on-premise-systems-in-sap-cloud-identity-infrastructure" target="_self" rel="noopener noreferrer"&gt;to reach on-prem systems via SCC&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;After successful setup, BTP Cockpit shows something like:&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Exposed Back-End Systems (SCC Location ID)&lt;/EM&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;ldap:389&lt;/TD&gt;&lt;TD width="25%"&gt;LDAP&lt;/TD&gt;&lt;TD width="25%"&gt;Non-SAP System&lt;/TD&gt;&lt;TD width="25%"&gt;Available&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Configuring Identity Provisioning (IPS)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In IPS, create an LDAP source according to the usual &lt;A href="https://help.sap.com/docs/cloud-identity-services/cloud-identity-services/ldap-server" target="_self" rel="noopener noreferrer"&gt;SAP Help documentation&lt;/A&gt;. You can use default Transformations here.&amp;nbsp;&lt;EM&gt;Key detail&lt;/EM&gt;: the LDAP user object &lt;STRONG&gt;must contain the mail attribute&lt;/STRONG&gt;. If not present, IPS will skip the entry. Even the two default users shipped with the OpenLDAP container are enough to test the provisioning chain.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;End-to-end check:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;LDAP → SCC → BTP → IPS → Identity Directory&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Using containers makes it extremely fast to spin up a fully working LDAP provisioning scenario for SAP BTP. This approach is safe and easily reproducible also for testing transformations and mapping without touching a production corporate directory.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;P.S.&lt;/STRONG&gt;&amp;nbsp;Below you can find my &lt;EM&gt;docker-compose.yml&lt;/EM&gt; file &lt;STRONG&gt;as a reference for your own setup&lt;/STRONG&gt;:&lt;/P&gt;&lt;pre class="lia-code-sample language-yaml"&gt;&lt;code&gt;services:
  openldap:
    image: bitnami/openldap:latest
    container_name: openldap
    environment:
      LDAP_ADMIN_USERNAME: admin
      LDAP_ADMIN_PASSWORD: password
      LDAP_PORT_NUMBER: 389
    networks:
      ldap-net:
        aliases:
          - openldap 
    ports:
      - "13890:389"
      - "16360:1636"

  phpldapadmin:
    image: osixia/phpldapadmin:latest
    container_name: phpldapadmin
    environment:
      PHPLDAPADMIN_LDAP_HOSTS: openldap
      PHPLDAPADMIN_HTTPS: "false"   # deactivate HTTPS
    networks:
      - ldap-net
    ports:
      - "8080:80"
    depends_on:
      - openldap
      
networks:
  ldap-net:&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-guide-provisioning-users-from-ldap-docker-based-into-sap-cloud/ba-p/14197562"/>
    <published>2025-08-28T18:44:06.372000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-work-zone-security/ba-p/14142813</id>
    <title>SAP Build Work Zone Security</title>
    <updated>2025-09-02T08:56:52.779000+02:00</updated>
    <author>
      <name>AkumaryafirAk</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1430983</uri>
    </author>
    <content>&lt;P&gt;I've been spending quite some time recently diving deep into SAP Build Work Zone security, and let me tell you, it's a journey. Terms like &lt;STRONG&gt;#IAS&lt;/STRONG&gt;, &lt;STRONG&gt;#BTP&lt;/STRONG&gt; Subaccount &lt;STRONG&gt;#trusts&lt;/STRONG&gt;, and &lt;STRONG&gt;#ShadowUsers&lt;/STRONG&gt; can sometimes feel like a maze.&lt;/P&gt;&lt;P&gt;But then, an analogy clicked for me - the &lt;STRONG&gt;#DigitalMall&lt;/STRONG&gt; and suddenly, the whole complex architecture started making perfect sense. I wanted to share this breakdown with all of you, hoping it helps.&lt;/P&gt;&lt;P&gt;Let's imagine SAP Build Work Zone as a bustling, modern Digital Mall, where users (you, the &lt;STRONG&gt;#shoppers&lt;/STRONG&gt;) come to access various &lt;STRONG&gt;#stores&lt;/STRONG&gt; (business applications) and "services" (collaboration features). Every security layer has a purpose, just like every part of a well run mall&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;#TheGrandOpening&lt;/STRONG&gt;: Understanding this Digital Mall's Foundation&lt;/P&gt;&lt;P&gt;Before anyone even walks in, the mall has a master plan and a way to organize its offerings:&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;SAP BTP Subaccount&lt;/STRONG&gt;: Think of this as the Mall's Main Entrance &amp;amp; Security Gate. It's the primary gateway, controlling who can even step foot inside your digital space. It's where core permissions are managed.&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;SAP Build Work Zone Tenant&lt;/STRONG&gt;: This is your specific, unique instance of the Mall itself - your personalized shopping experience!&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; #&lt;STRONG&gt;ContentManager&lt;/STRONG&gt;: This acts like the Mall's Central Directory or Information Kiosk. It lists all the "stores" (your business applications) available within the mall, helping shoppers find what they need&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;Content Providers&lt;/STRONG&gt;: These are the "Department Stores" (like SAP S/4HANA&lt;BR /&gt;SuccessFactors) or even smaller "Boutiques" (your custom applications). They reside outside your immediate mall structure but integrate seamlessly, making their offerings available inside your Work Zone.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;Stepping Inside: Your Identity &amp;amp; Basic Mall Access&amp;lt;&amp;lt;&amp;lt;&amp;lt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, for the really crucial part: how does a "shopper" (your user) actually get into the Digital Mall, and how is their identity validated at the main entrance?&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;#SAPCloudIdentityServices&lt;/STRONG&gt; - Identity Authentication (IAS): The Mall's Central Security System / ID Proxy&lt;/P&gt;&lt;P&gt;This is the mandatory first stop for any user trying to enter your Work Zone mall. &lt;STRONG&gt;#IAS&lt;/STRONG&gt; is your primary &lt;STRONG&gt;#IdentityProvider&lt;/STRONG&gt; [IDP]&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;#Proxy&lt;/STRONG&gt; Mode: If your organization uses its own Corporate IdP (like Azure AD, Okta), IAS acts as a clever proxy. You authenticate against your corporate system, and IAS then receives that verified identity, federating it onward in a way Work Zone understands. It's seamless, you just show your corporate ID.&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;#TheDigitalIdCard&lt;/STRONG&gt; (SAML Assertion / OIDC Token): Once authenticated, IAS issues a secure token. This token is packed with vital information, essentially your digital "ID Card" that gets you past the main gate:&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; &lt;STRONG&gt;#SubjectNameIdentifier&lt;/STRONG&gt; (SNI): This is your main identifier (e.g., your Login Name or Employee ID). It's what the BTP Subaccount primarily uses.&lt;/P&gt;&lt;P&gt;#&lt;STRONG&gt;Assertion Attribute (often IAS UUID)&lt;/STRONG&gt;: This is a unique, stable, and persistent ID assigned by IAS. It's super important for internal Work Zone component communication later on, especially with the DWS (our "Community Center," which I'll cover in Part 2!)&lt;/P&gt;&lt;P&gt;---&amp;gt; Other standard user attributes like email, first name, last name.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;SAP BTP Subaccount Trust Configuration: The Main Gate's Agreement with IAS&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Your BTP Subaccount (the main gate) has a "trust agreement" with IAS. This allows it to confidently accept those digital ID cards (tokens) from IAS.&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt; #&lt;STRONG&gt;The XSUAA Shadow User&lt;/STRONG&gt;: Your Mall Access Card. This is one of the most critical concepts&lt;/P&gt;&lt;P&gt;When a user successfully authenticates via IAS for the first time, a "Shadow User" record is either created or identified in the BTP Subaccount's internal user list. Think of this as your personal "&lt;STRONG&gt;Mall Access Card&lt;/STRONG&gt;" record.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Why is it needed? Even if IAS knows who you are, the BTP Subaccount needs its own local record (the shadow user) to attach BTP Role Collections to it. These &lt;STRONG&gt;role&lt;/STRONG&gt; &lt;STRONG&gt;collections&lt;/STRONG&gt; are your "&lt;STRONG&gt;Mall-wide Privileges&lt;/STRONG&gt;" (e.g., WorkZone_User, WorkZone_Admin) that determine what you can do across the whole Work Zone platform.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; Crucial Point: If a shadow user doesn't exist (and automatic creation isn't enabled), login to Work Zone will fail because there is no local identity to attach permissions to.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Principal Propagation: Seamless Access to Department Stores!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once you're in the mall and launch an app from an On-Premise Backend System (like an S/4HANA Fiori app via SAP Cloud Connector), you don't want to log in again, right?&lt;/P&gt;&lt;P&gt;This is where ##&lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt; comes in! Your identity (using the IAS SNI from the BTP trust) is seamlessly passed through the BTP Destination Service and SAP Cloud Connector directly to the backend system. The S/ 4HANA system then recognizes you and authorizes your access based on your roles within S/4HANA. It's like your Mall Access Card automatically opening the staff-only doors in a department store.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;This is just the exciting first step of understanding Work Zone security. In Part 2, coming next.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The Digital Workplace Service (DWS) (the Mall's Community Center).&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;User and User List Provisioning (how the Community Center gets its member lists).&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The critical differences between Internal vs. External Users (different types of Community Center members).&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;And how SCIM APIs are the "automated delivery trucks" for all this data!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Stay tuned for more insights, and in the meantime, I'd love to hear your thoughts or questions on this first part in the comments below!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Happy Work Zone-ing!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Lets connect and learn together &lt;span class="lia-unicode-emoji" title=":victory_hand:"&gt;✌️&lt;/span&gt;&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-work-zone-security/ba-p/14142813"/>
    <published>2025-09-02T08:56:52.779000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-data-cloud-series-part-3-customer-managed-data-products/ba-p/14195545</id>
    <title>SAP Business Data Cloud Series – Part 3: Customer-Managed Data Products</title>
    <updated>2025-09-10T04:27:11.039000+02:00</updated>
    <author>
      <name>jeet_kapase</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/16635</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1866021921" id="toc-hId-1867903595"&gt;Introduction:&lt;/H3&gt;&lt;P&gt;In Part 1(&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-data-cloud-series-part-1-introduction-to-data-products/ba-p/14142919" target="_self"&gt;SAP Business Data Cloud Series – Part 1: Introduction to Data Products&lt;/A&gt;) of this blog series, we explored the fundamentals of Data Products in SAP Business Data Cloud (BDC). In Part 2(&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-data-cloud-series-part-2-extend-sap-s-4hana-managed-data/ba-p/14174030" target="_blank"&gt;SAP Business Data Cloud Series – Part 2: Extend SAP S/4HANA Managed Data Products&lt;/A&gt;) we explored on how to extend SAP S/4HANA Data Products. Now, in Part 3, we dive into the practical aspect of creating custom data products for the source SAP S/4HANA Cloud Private Edition and Share it with SAP databricks.&lt;/P&gt;&lt;P&gt;In this article, we’ll explore a common scenario where a customer has a custom CDS entity in SAP S/4HANA and wants to harmonize its data with SAP-managed data products. We’ll demonstrate how to create a custom data product based on that custom CDS entity, for example, ZCDS_CAMPAIGN and how to delta-share with SAP databricks.&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-291092332" id="toc-hId-1671390090"&gt;High-level Workflow for the SAP S/4HANA, Customer Managed Data Product:&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757470973135.png" style="width: 687px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311976i51D2FC53385CC525/image-dimensions/687x623/is-moderation-mode/true?v=v2" width="687" height="623" role="button" title="jeetendrakapase_0-1757470973135.png" alt="jeetendrakapase_0-1757470973135.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669508416" id="toc-hId-1474876585"&gt;&lt;STRONG&gt;Steps to create a SAP S/4HANA Customer Managed Data Product.&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;STRONG&gt;1. Identify, create, or extend a CDS entity: &lt;/STRONG&gt;To build a customer-managed data product in an SAP S/4HANA system, the recommended approach is to leverage CDS views/entities. In this example, we’ll create a custom CDS entity as shown below.&lt;/P&gt;&lt;P&gt;Note: &lt;EM&gt;As a best practice, customers should&amp;nbsp;&lt;STRONG&gt;leverage SAP-released CDS views first&lt;/STRONG&gt;, extend them where needed, and only create&amp;nbsp;&lt;STRONG&gt;custom CDS views&lt;/STRONG&gt;&amp;nbsp;when business requirements demand it. This is fully permissible under the&amp;nbsp;&lt;STRONG&gt;clean core paradigm&lt;/STRONG&gt;, as business requirements ultimately take priority.&lt;/EM&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@ObjectModel.usageType.dataClass: #TRANSACTIONAL
@ObjectModel.usageType.serviceQuality: #A
@ObjectModel.usageType.sizeCategory: #XL
@ObjectModel.representativeKey: 'CampaignID'
@ObjectModel.modelingPattern:         #ANALYTICAL_DIMENSION
@ObjectModel.supportedCapabilities: [ #ANALYTICAL_DIMENSION,
                                      #CDS_MODELING_DATA_SOURCE,
                                      #CDS_MODELING_ASSOCIATION_TARGET,
                                      #SQL_DATA_SOURCE,
                                      #EXTRACTION_DATA_SOURCE ]

@ObjectModel.sapObjectNodeType.name: 'CampaignID'
@EndUserText.label: 'CDS View for Campaigning Data'
@Analytics.dataCategory: #DIMENSION
@Analytics.internalName: #LOCAL
@Analytics: {
    dataExtraction: {
        enabled: true,
        delta.changeDataCapture: {
            mapping:[
                {
                    table: 'zcampaign', role: #MAIN,
                    viewElement: ['CampaignID'],
                    tableElement: ['campaign_id']
                }
            ]
        }
    }
 }

@VDM.viewType: #BASIC
@Metadata.allowExtensions: true
@Metadata.ignorePropagatedAnnotations: true

define view entity ZCDS_campaign as select from zcampaign
{
 @EndUserText.label: 'Campaign_ID'
    key zcampaign.campaign_id as CampaignId,
    @EndUserText.label: 'Campaign_Name'
    zcampaign.campaign_name as CampaignName,
     @EndUserText.label: 'Channel'
    zcampaign.channel as Channel,
    zcampaign.type as Type,
    zcampaign.start_date as StartDate,
    zcampaign.end_date as EndDate,
    zcampaign.status as Status,
     @Semantics.amount.currencyCode: 'BudgetCurrency'
    zcampaign.budget as Budget,
    zcampaign.budget_currency as BudgetCurrency,
     @Semantics.amount.currencyCode: 'ActualSpendCurrency'
    zcampaign.actual_spend as ActualSpend,
    zcampaign.actual_spend_currency as ActualSpendCurrency,
    zcampaign.created_by as CreatedBy,
    zcampaign.created_on as CreatedOn
    
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;2. SAP S/4HANA Private Cloud or On-Premise Edition requires a Cloud Connector:&lt;/STRONG&gt; Configure the Cloud Connector to enable communication between your on-premise/private cloud system and SAP Datasphere (public cloud). This setup is a prerequisite for creating an &lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/be5967d099974c69b77f4549425ca4c0/a49a1e3cc50f4af89711d8306bdd8f26.html" target="_self" rel="noopener noreferrer"&gt;SAP S/4HANA&lt;/A&gt; or &lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/be5967d099974c69b77f4549425ca4c0/a75c1aacf951449ba3b740c7e46da3a9.html" target="_self" rel="noopener noreferrer"&gt;ABAP connection&lt;/A&gt; in SAP Datasphere for using the replication flow feature.&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-datasphere-integration-with-sap-s-4hana-sap-cloud-connector-setup-guide/ba-p/14224459" target="_self"&gt;&lt;STRONG&gt;SAP Datasphere Integration with SAP S/4HANA: SAP Cloud Connector Setup Guide&lt;/STRONG&gt;&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Create a Datasphere Space of Type HANA Data Lake Files:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;An administrator can create a space backed by SAP HANA Data Lake Files in the object store. File spaces are designed for cost-efficient staging, loading, and preparing large volumes of data.&lt;/P&gt;&lt;P&gt;For detailed instructions, refer to the help guide:&lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/c8a54ee704e94e15926551293243fd1d/2a6bc3f6d79b4c39a01b6d58d043fbaf.html" target="_self" rel="noopener noreferrer"&gt; Create a File Space in the Object Store&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Additional &lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/9f804b8efa8043539289f42f372c4862/33f8ef4ec359409fb75925a68c23ebc3.html" target="_self" rel="noopener noreferrer"&gt;configuration&lt;/A&gt; is required while configuring the SAP Datasphere tenant. e.g.&amp;nbsp; Memory must be 128GB or more. Check via &lt;A href="https://bdc-pricing-estimator-sac-sacus10.cfapps.us10.hana.ondemand.com/" target="_self" rel="nofollow noopener noreferrer"&gt;SAP BDC Estimator.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757439837802.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311855iA7495682F7F23C0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757439837802.png" alt="jeetendrakapase_0-1757439837802.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If you have configured correctly then you should also see the same under the SAP Datasphere, Tenant configuration. Please note this view is only available to the SAP Datasphere system owner.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757440104618.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311864iF914184CBC78AAD6/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757440104618.png" alt="jeetendrakapase_1-1757440104618.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;SAP Datasphere object store: Storage type will be SAP HANA Data Lake Files. In our scenario we have created a space with a name&amp;nbsp;&lt;EM&gt;Workshop: OBJECT STORE&lt;/EM&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757440332599.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311867i7504212940BDE227/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757440332599.png" alt="jeetendrakapase_0-1757440332599.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Create a SAP S/4HANA Connection in the SAP Datasphere Object Store Space,&amp;nbsp;&lt;EM&gt;Workshop: OBJECT STORE&lt;/EM&gt; :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;4.1 Create a new connection or use the existing connection of type SAP S/4HANA on-premise or ABAP:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757440527188.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311871i16ECD11B0E98F5D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757440527188.png" alt="jeetendrakapase_1-1757440527188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;4.2 Fill in the connection configuration details as show below and important step is select the cloud connector which was setup and configured in the step 2.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757438559949.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311850i6882A41FD5E3A64A/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757438559949.png" alt="jeetendrakapase_1-1757438559949.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.3 Provide the connection name and description:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757438613408.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311851iA917C257FAB136F4/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757438613408.png" alt="jeetendrakapase_2-1757438613408.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.4 Validate and test the connection making sure replication flows are enabled:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757440616171.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311872i04C3455F48788529/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757440616171.png" alt="jeetendrakapase_2-1757440616171.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can also use or create the SAP ABAP connection type for this use case.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757441448676.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311875i1AFB931F73F0E1B1/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757441448676.png" alt="jeetendrakapase_0-1757441448676.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Create a Replication Flow to Load Data from CDS Entity into SAP Datasphere Object Store (HDLF):&lt;/STRONG&gt;&lt;BR /&gt;Set up a replication flow with the source system &lt;EM&gt;SAP_S4H_RI4&lt;/EM&gt; and CDS entity &lt;EM&gt;ZCDS_CAMPAIGN&lt;/EM&gt;. Define the target as a Datasphere local table &lt;EM&gt;ZCDS_CAMPAIGN_BRONZE&lt;/EM&gt;. This table, serving as the Bronze layer, will store source records and structures in their original form.&lt;/P&gt;&lt;P&gt;5.1 Create a new replication flow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757442253861.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311882i22BE01D7A3E62F58/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757442253861.png" alt="jeetendrakapase_0-1757442253861.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.2 Select the Source &lt;EM&gt;SAP_S4H_RI4&lt;/EM&gt; and Container (Source Objects) ZCDS_CAMPAIGN&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757442337508.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311884iB79B05D7E1455643/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757442337508.png" alt="jeetendrakapase_1-1757442337508.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757442489540.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311885i8B6566C82A3C61BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757442489540.png" alt="jeetendrakapase_2-1757442489540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.3 Select the target as connection as a SAP Datasphere&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757446943694.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311914i5AD49CD8722AA758/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757446943694.png" alt="jeetendrakapase_0-1757446943694.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.4 Provide the target object local table name ZCDS_CAMPAIGN_BRONZE and Deploy the replication flow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757447070646.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311916iF5362528603943A3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757447070646.png" alt="jeetendrakapase_2-1757447070646.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.5 Execute the replication flow and check the run details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_3-1757447133249.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311917i8ABFB87011D5AED2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_3-1757447133249.png" alt="jeetendrakapase_3-1757447133249.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.6 Perform the merge table activity:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_4-1757447196060.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311919iE277FCCC7ABA8494/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_4-1757447196060.png" alt="jeetendrakapase_4-1757447196060.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_5-1757447342809.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311923i19D2D2ECD5551A08/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_5-1757447342809.png" alt="jeetendrakapase_5-1757447342809.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5.7 Post merge table activity, data will be available to preview and Test it.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_6-1757447404478.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311924i91AE7B2D4C360242/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_6-1757447404478.png" alt="jeetendrakapase_6-1757447404478.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.&amp;nbsp;Bronze to Silver layer medallion transformation using a Transformation Flow:&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;In many cases, data from the Bronze layer needs to be refined into a Silver layer through transformations such as splitting, merging, adding/removing columns, joins, or unions.&lt;/P&gt;&lt;P&gt;In our scenario, we will split the values in the &lt;EM&gt;Channel&lt;/EM&gt; column into two columns &lt;EM&gt;Channel, Allocated Percentage&lt;/EM&gt; (multiple rows) and apply necessary calculations.&lt;/P&gt;&lt;P&gt;6.1 Create a new Transformation Flow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757453446185.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311928i097F8952F5432C2C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757453446185.png" alt="jeetendrakapase_0-1757453446185.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2 Define the transformation steps:&lt;/P&gt;&lt;P&gt;Source table:&lt;EM&gt;HDLFT_CAMPAIGN_BRONZE&lt;/EM&gt;&amp;nbsp; and Target table: &lt;EM&gt;HDLFT_CAMPAIGN_SILVER . P&lt;/EM&gt;ython script operator for performing the transformation logic.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757453655211.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311929iDA9097649549272C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757453655211.png" alt="jeetendrakapase_1-1757453655211.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757453734167.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311930iF2F8275C260BDF8C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757453734167.png" alt="jeetendrakapase_2-1757453734167.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-python"&gt;&lt;code&gt;def transform(data):
    """
    This function body should contain all the desired transformations on incoming data of Pandas DataFrame.
    Permitted builtin functions as well as permitted NumPy and Pandas objects and functions are available inside this function.
    Permitted NumPy and Pandas objects and functions can be used with aliases 'np' and 'pd' respectively.
    Python standard libraries like 'time', 'datetime', 're', 'random', 'math', 'calendar' and 'dateutil.parser' can be used without any alias.
    This function executes in a sandbox mode. Please refer the documentation for permitted objects and functions.
    Using any restricted functions or objects would cause an internal exception and result in a run failure.
    Any code outside this function body will not be executed and inclusion of such code is discouraged.
    :param data: Pandas DataFrame
    :return: Pandas DataFrame
    """
    #####################################################
    # Provide the function body for data transformation #
    #####################################################
    rows = []

    for _, row in data.iterrows():
        channel_str = row['Channel']

        if pd.isnull(channel_str) or not str(channel_str).strip():
            continue

        entries = str(channel_str).split(';')
        channel_map = {}  # To store channel_name -&amp;gt; summed Decimal %

        for entry in entries:
            entry = entry.strip()
            if not entry:
                continue

            if '(' in entry and '%' in entry:
                channel_name = entry.split('(')[0].strip()
                percent_str = entry.split('(')[1].replace(')', '').replace('%', '').strip()

                try:
                    percent_val = Decimal(percent_str)
                except:
                    percent_val = Decimal('0')

                if channel_name in channel_map:
                    channel_map[channel_name] += percent_val
                else:
                    channel_map[channel_name] = percent_val

        for channel_name, total_percent in channel_map.items():
            new_row = row.copy()
            new_row['Channel'] = channel_name
            new_row['AllocatedPercentage'] = total_percent
            
            if total_percent &amp;gt; 0:
                new_row['ActualSpend'] = (new_row['ActualSpend'] * (total_percent/100) )
            
            rows.append(new_row)

    data = pd.DataFrame(rows)
    return data&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6.3 Execute the transformation flow and test the output from the local table &lt;EM&gt;HDLFT_CAMPAIGN_SILVER&lt;/EM&gt;:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757466839017.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311956iD7489194BC0140CA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757466839017.png" alt="jeetendrakapase_1-1757466839017.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757466699277.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311952i25B52F491F73205D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757466699277.png" alt="jeetendrakapase_0-1757466699277.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;Wonderful our silver layer of the data is ready and transformed as per the business requirement. Now let us create the customer managed data product and share with the SAP databricks. You can also share the local table from HANA Data Lake File space to HANA cloud DB space and build the models on top of it, e.g. Building a report that provides access to 5 years of worth where most recent 2 years are persisted on the storage type in-memory/disk while rest 3 years are persisted on the storage type file and union model is build to combine this data.&lt;/STRONG&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;7. &lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/e4059f908d16406492956e5dbcf142dc/b07e95d07a1e4569b87d9bb57b732bcf.html" target="_self" rel="noopener noreferrer"&gt;Creating Custom Delta Share Data Products&lt;/A&gt;:&amp;nbsp;&lt;/STRONG&gt;Create a Formations Profile with Data Product visibility option as &lt;STRONG&gt;&lt;EM&gt;Formations&lt;/EM&gt;&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757467550978.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311958i6D00AC8A9FC574C0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757467550978.png" alt="jeetendrakapase_0-1757467550978.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757467495757.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311957i847F2827DE17D1C9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757467495757.png" alt="jeetendrakapase_0-1757467495757.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;8.&amp;nbsp;Context is automatically created.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757467607998.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311959iDEA2E0477BF42366/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757467607998.png" alt="jeetendrakapase_1-1757467607998.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;9. After creating your Unified Customer Landscape Formations profile, you can proceed to create a Delta Share data product:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757467878540.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311960iA3E6FF3326DA730C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757467878540.png" alt="jeetendrakapase_2-1757467878540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;10. List the Custom Data Product, so that It will be discoverable in the SAP BDC Catalog &amp;amp; Marketplace:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_3-1757467991597.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311961iFA8FB7C6DE1DF317/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_3-1757467991597.png" alt="jeetendrakapase_3-1757467991597.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_4-1757468025227.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311962i9758E90A2FC0BA1A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_4-1757468025227.png" alt="jeetendrakapase_4-1757468025227.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;11. Search and Discover the Data Product &lt;EM&gt;"Sales Campaign Gold Data"&lt;/EM&gt; in SAP BDC Catalog &amp;amp; Marketplace:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_5-1757468149233.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311964i7AA4850F976F0DA5/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_5-1757468149233.png" alt="jeetendrakapase_5-1757468149233.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;12. Share the Data Product &lt;EM&gt;"Sales Campaign Gold Data"&lt;/EM&gt;&amp;nbsp; with supported BDC target systems in our scenario it is SAP databricks:&amp;nbsp;&lt;/STRONG&gt;We are sharing the data product with SAP databricks workspace WS_IT.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_6-1757468242453.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311965i4446E1CE8CB489D1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_6-1757468242453.png" alt="jeetendrakapase_6-1757468242453.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note: SAP databricks is part of our SAP BDC formation, hence it is available under the target system options.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_7-1757468350476.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311966iF0257F6EF076FD5C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_7-1757468350476.png" alt="jeetendrakapase_7-1757468350476.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;13. Validate the sharing is enabled and correct target system:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_0-1757470106343.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311972iDCD1C1DDA28F6865/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_0-1757470106343.png" alt="jeetendrakapase_0-1757470106343.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;14.&amp;nbsp;Validate the Delta-Shared &lt;EM&gt;Sales Campaign Gold Data&lt;/EM&gt; product in SAP Databricks by checking the WS_IT workspace with verifying its presence and data preview in the Unity Catalog.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_2-1757470388857.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311974i3A71F42FE2C566B9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_2-1757470388857.png" alt="jeetendrakapase_2-1757470388857.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeetendrakapase_1-1757470227392.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311973iD4B34ABEFDDE84C0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="jeetendrakapase_1-1757470227392.png" alt="jeetendrakapase_1-1757470227392.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1278363080"&gt;Summary:&amp;nbsp;&lt;/H3&gt;&lt;P&gt;In this part of the SAP Business Data Cloud (BDC) series focusing on the data products, we explored how to build a &lt;STRONG&gt;custom data product&lt;/STRONG&gt; in SAP S/4HANA Cloud Private Edition using a custom CDS entity (e.g., &lt;EM&gt;ZCDS_CAMPAIGN&lt;/EM&gt;). We walked through setting up prerequisites like the Cloud Connector, creating a Datasphere file space, and configuring connections. Using the &lt;STRONG&gt;bronze–silver transformation approach&lt;/STRONG&gt;, we replicated and refined campaign data for harmonization. Finally, we created and published a &lt;STRONG&gt;custom Delta Share data product&lt;/STRONG&gt;, making it discoverable in the BDC Catalog and consumable in SAP Databricks for advanced analytics and ML scenarios.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-business-data-cloud-series-part-3-customer-managed-data-products/ba-p/14195545"/>
    <published>2025-09-10T04:27:11.039000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-datasphere-integration-with-sap-s-4hana-sap-cloud-connector-setup-guide/ba-p/14224459</id>
    <title>SAP Datasphere Integration with SAP S/4HANA: SAP Cloud Connector Setup Guide</title>
    <updated>2025-09-23T23:36:19.259000+02:00</updated>
    <author>
      <name>jeet_kapase</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/16635</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760954663"&gt;Introduction:&amp;nbsp;&lt;/H2&gt;&lt;P&gt;In this article, we will explore SAP Cloud Connector what it is, its purpose, and the scenarios where it becomes essential. Whether you are working with &lt;STRONG&gt;SAP S/4HANA Private Cloud or connecting SAP S/4HANA on-premise systems to the cloud&lt;/STRONG&gt;, the SAP Cloud Connector plays a critical role. We will also provide a step-by-step guide on its configuration and setup, helping you seamlessly bridge your on-premise and SAP Datasphere cloud environments.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1564441158"&gt;What is SAP Cloud Connector?&lt;/H2&gt;&lt;P data-unlink="true"&gt;The &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector" target="_self" rel="noopener noreferrer"&gt;SAP Cloud Connector&lt;/A&gt; acts as a&lt;/STRONG&gt; &lt;STRONG&gt;secure link between SAP Datasphere and on-premises systems&lt;/STRONG&gt;, enabling seamless integration without exposing your entire internal network (behind the firewall). It runs as an on-premises agent or middleware in a secured environment and functions as a reverse invoke proxy, providing controlled access to selected systems and resources.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Key benefits&lt;/STRONG&gt; include fine-grained control over which on-premises systems cloud applications can access, automatic recovery of broken connections, and audit logging of inbound traffic and configuration changes. It also supports high-availability setups for enterprise scenarios.&lt;/P&gt;&lt;P&gt;Compared to opening firewall ports or using DMZ reverse proxies, the Cloud Connector is easier and safer to deploy. It supports multiple protocols, including HTTP and RFC for native ABAP system access, and allows secure propagation of cloud user identities to on-premises systems. With simple installation, low TCO, and standard SAP support, it’s an efficient solution for connecting cloud and on-premises landscapes.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1367927653"&gt;Does it support data encryption ?&lt;/H2&gt;&lt;P&gt;Yes,&amp;nbsp;TLS encryption is used for the tunnel&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1171414148"&gt;What are the SAP Datasphere &lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/9f804b8efa8043539289f42f372c4862/8de01dd25c1e443e8e2de7d2fbe1364d.html" target="_self" rel="noopener noreferrer"&gt;data integration features, and in which scenarios is the SAP Cloud Connector required?&lt;/A&gt;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;Replication Flows – For example, connecting to SAP ABAP CDS views and replicating data to the cloud.&lt;/LI&gt;&lt;LI&gt;Data Flows – For scenarios like extracting, transforming, and loading data from on-premises sources, including SAP ABAP CDS views.&lt;/LI&gt;&lt;LI&gt;Model Import – Importing existing ABAP CDS data models from on-premises systems into SAP Datasphere for further analytics and integration.&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-974900643"&gt;SAP Cloud Connector &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector-faq" target="_self" rel="noopener noreferrer"&gt;FAQs&lt;/A&gt;&lt;/H2&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-778387138"&gt;Where can I find information about SAP Cloud Connector licensing, downloading, and installation ?&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/2827108/E" target="_self" rel="noopener noreferrer"&gt;2827108 - SAP Cloud Connector licensing, download and installation information.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;It does not required separate license and it is free to use.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_self" rel="nofollow noopener noreferrer"&gt;Download: SAP Cloud Connector.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/9f804b8efa8043539289f42f372c4862/35141e7668774958b5e59495f7a7828e.html" target="_self" rel="noopener noreferrer"&gt;Installation and Setup.&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-581873633"&gt;What are the Sizing Recommendations?&amp;nbsp;&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/sizing-for-master-instance" target="_self" rel="noopener noreferrer"&gt;Sizing for the Master Instance&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/sizing-for-shadow-instance" target="_self" rel="noopener noreferrer"&gt;Sizing for the Shadow Instance&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-385360128"&gt;What are the best practices and recommendations for setting up SAP Cloud Connector?&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Always Use the Latest Version: &lt;/STRONG&gt;Install or update to the latest Cloud Connector release to take advantage of new features and security improvements.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dedicated Server Setup:&lt;/STRONG&gt;&amp;nbsp;Install on a dedicated server within your corporate network that has direct, unblocked access to the source system. &lt;U&gt;Ideally, this server should be physically close to the source systems it connects to.&lt;/U&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;High Availability Setup:&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Master (Primary Installation): Main Cloud Connector instance for normal or HA setups.&lt;/LI&gt;&lt;LI&gt;Shadow (Backup Installation): Secondary instance for HA, providing failover support.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Environment-Specific Installations:&lt;/STRONG&gt;&amp;nbsp;recommended to have a separate Cloud Connector for each environment (development, testing, production) to ensure stability and isolation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;User Configuration&lt;/STRONG&gt;: Use an email ID linked to the subaccount or global account instead of an S-User for easier management.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Proper Sizing:&lt;/STRONG&gt;&amp;nbsp;Ensure the server has sufficient resources (CPU, memory, network bandwidth) to handle the expected load.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Regular Log Review:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;Continuously monitor logs and metrics to detect performance issues or connectivity problems and resolve them promptly.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-188846623"&gt;SAP Cloud Connector Troubleshooting Guides:&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://ga.support.sap.com/index.html#/tree/2183/actions/27936" target="_self" rel="noopener noreferrer"&gt;Common Issues and Guided Answers.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/cloud-connector-troubleshooting" target="_self" rel="noopener noreferrer"&gt;Logs and Troubleshooting.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/3369433/E" target="_self" rel="noopener noreferrer"&gt;3369433 - How to troubleshoot Cloud Connector related issues when creating connection in SAP Datasphere&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--7666882"&gt;Steps to Install, Configure and Setup the SAP Cloud Connector:&lt;/H2&gt;&lt;H3 id="toc-hId--150329037"&gt;Step 1: Download, Prerequisites, and Install the Cloud Connector&lt;/H3&gt;&lt;P&gt;Before you begin configuration, make sure the following prerequisites are in place:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://tools.hana.ondemand.com/#cloud" target="_self" rel="nofollow noopener noreferrer"&gt;Download: SAP Cloud Connector.&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;Cloud Connector&lt;/STRONG&gt; is installed in your on-premise network. (See &lt;EM&gt;Cloud Connector Installation&lt;/EM&gt; in the SAP BTP Connectivity documentation.)&lt;/LI&gt;&lt;LI&gt;If you’re using egress firewalling, add these domains to the firewall/proxy allowlist:&lt;UL&gt;&lt;LI&gt;&amp;nbsp;*.hanacloud.ondemand.com&lt;/LI&gt;&lt;LI&gt;*.k8s-hana.ondemand.com&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;You need an &lt;STRONG&gt;SAP BTP account&lt;/STRONG&gt;. If you don’t already have one, create it by registering in the SAP BTP cockpit.&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--346842542"&gt;Step 2: Launch and Login&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;After installation, an user:&lt;EM&gt;&lt;STRONG&gt;Administrator&lt;/STRONG&gt; &lt;/EM&gt;account is created with the initial password: &lt;EM&gt;&lt;STRONG&gt;manage&lt;/STRONG&gt; &lt;/EM&gt;(case-sensitive). You’ll be prompted to change it on first login. Default/Initial login details &lt;EM&gt;&lt;STRONG&gt;Administrator&lt;/STRONG&gt; /&amp;nbsp;&lt;STRONG&gt;manage&lt;/STRONG&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Access the Cloud Connector Administration at:&lt;BR /&gt;https://&amp;lt;hostname&amp;gt;:8443 (replace &amp;lt;hostname&amp;gt; with the machine name, or use localhost if installed locally).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://me.sap.com/notes/0002388242" target="_self" rel="noopener noreferrer"&gt;2388242&lt;/A&gt; - KBA: How to reset SAP Cloud Connector built-in user's password&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--543356047"&gt;Step 3: Add Your SAP BTP Subaccount&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_1-1758649489986.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319090i07D501A7B4C0B530/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_1-1758649489986.png" alt="jeet_kapase_1-1758649489986.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You’ll need details from your &lt;STRONG&gt;SAP Datasphere subaccount&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Subaccount&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Region Host (&amp;nbsp;&lt;A href="https://help.sap.com/docs/SAP_ASSET_STRATEGY_AND_PERFORMANCE_MANAGEMENT/2eaa87093ab54ddb81f54bb56316e844/7063598cfb88425e81358925fa8df38c.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Data Center - Providers and Regions&lt;/A&gt;)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Sub Account User (usually the email ID tied to your BTP account)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If account info is missing, enter your SAP BTP user ID manually. For troubleshooting, see KBA: &lt;A href="https://me.sap.com/notes/2397165/E" target="_self" rel="noopener noreferrer"&gt;2397165&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_0-1758649323624.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319089i4D28B611DCE5C91A/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_0-1758649323624.png" alt="jeet_kapase_0-1758649323624.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://me.sap.com/notes/0002571763" target="_blank" rel="noopener noreferrer"&gt;2571763 - Authorization problem in SAP Cloud Connector when adding Cloud Foundry subaccount&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For auth errors refer Log and Trace Files: scc_core.trc&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Note: Initially SAP BTP Core account details in SAP Datasphere will not be available, you must provide the SAP BTP account email and save. SAP Datasphere tenant owner can perform this.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_2-1758649555429.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319091iF72130E28A6F837A/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_2-1758649555429.png" alt="jeet_kapase_2-1758649555429.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--739869552"&gt;Step 4: Verify Connection&lt;/H3&gt;&lt;P&gt;Once the subaccount is added, the status should display &lt;STRONG&gt;Connected&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_0-1758653018442.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319094iDE0A62043B6CC3CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_0-1758653018442.png" alt="jeet_kapase_0-1758653018442.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--936383057"&gt;Step 5: Configure the Cloud Connector&lt;/H3&gt;&lt;P&gt;For this guide, we’ll focus on &lt;STRONG&gt;Replication Flow&lt;/STRONG&gt; scenarios using &lt;A href="https://help.sap.com/docs/SAP_DATASPHERE/9f804b8efa8043539289f42f372c4862/f289920243a34127b0c8b13012a1a4b5.html?locale=en-US" target="_self" rel="noopener noreferrer"&gt;&lt;STRONG&gt;RFC and HTTPS protocols&lt;/STRONG&gt;&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_1-1758653066019.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319095iAACE3425BFE1D509/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_1-1758653066019.png" alt="jeet_kapase_1-1758653066019.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--1132896562"&gt;Step 6: Add the SAP S/4HANA (ABAP) System&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Select &lt;STRONG&gt;Cloud to On-Premise&lt;/STRONG&gt; scenario and Back-end Type: &lt;STRONG&gt;ABAP System&lt;/STRONG&gt;.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_4-1758653299629.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319099i0C634C6EFD6ACEAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_4-1758653299629.png" alt="jeet_kapase_4-1758653299629.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Choose &lt;STRONG&gt;HTTPS protocol&lt;/STRONG&gt;.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_5-1758653403344.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319100iC773C80223E39232/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_5-1758653403344.png" alt="jeet_kapase_5-1758653403344.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Use &lt;STRONG&gt;without load balancing&lt;/STRONG&gt; (application server + instance number).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_0-1758653563213.png" style="width: 556px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319101i49A59FBD66F56495/image-dimensions/556x257?v=v2" width="556" height="257" role="button" title="jeet_kapase_0-1758653563213.png" alt="jeet_kapase_0-1758653563213.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enter your &lt;STRONG&gt;SAP S/4HANA internal host and port.&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_1-1758653620477.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319102i76B856934CD9E88F/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_1-1758653620477.png" alt="jeet_kapase_1-1758653620477.png" /&gt;&lt;/span&gt;&lt;P&gt;&lt;EM&gt;&lt;STRONG&gt;How to find internal host and port from SAP S/4HANA ?&lt;/STRONG&gt;&lt;/EM&gt; (Run T-Code SMICM → &lt;EM&gt;Services&lt;/EM&gt;).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_2-1758653842741.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319105i8ADD817E04AA52B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_2-1758653842741.png" alt="jeet_kapase_2-1758653842741.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_1-1758654112250.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319114i860D53C7DC6154D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_1-1758654112250.png" alt="jeet_kapase_1-1758654112250.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Leaving defaults for principal propagation and system certificate. (check your requirement and change)&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_3-1758653874534.png" style="width: 509px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319107iD917795B743154DF/image-dimensions/509x239?v=v2" width="509" height="239" role="button" title="jeet_kapase_3-1758653874534.png" alt="jeet_kapase_3-1758653874534.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_4-1758653882033.png" style="width: 513px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319108iF08B78213BBC00AF/image-dimensions/513x233?v=v2" width="513" height="233" role="button" title="jeet_kapase_4-1758653882033.png" alt="jeet_kapase_4-1758653882033.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Define a &lt;STRONG&gt;virtual host name&lt;/STRONG&gt; (recommended: different from the internal name).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_0-1758654015402.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319112i55E33102136C1A2B/image-dimensions/552x254?v=v2" width="552" height="254" role="button" title="jeet_kapase_0-1758654015402.png" alt="jeet_kapase_0-1758654015402.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Provide a &lt;STRONG&gt;System ID&lt;/STRONG&gt; (e.g., RI4) and description, then finish setup.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_3-1758654183395.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319116iF20E14199090FBE7/image-dimensions/538x246?v=v2" width="538" height="246" role="button" title="jeet_kapase_3-1758654183395.png" alt="jeet_kapase_3-1758654183395.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_4-1758654192047.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319117iCCB845720DD69340/image-dimensions/536x251?v=v2" width="536" height="251" role="button" title="jeet_kapase_4-1758654192047.png" alt="jeet_kapase_4-1758654192047.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_5-1758654231463.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319119iE207080482130B07/image-dimensions/540x247?v=v2" width="540" height="247" role="button" title="jeet_kapase_5-1758654231463.png" alt="jeet_kapase_5-1758654231463.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_6-1758654258007.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319120i12A0861CC6D474E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_6-1758654258007.png" alt="jeet_kapase_6-1758654258007.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Test connectivity – status should show &lt;STRONG&gt;Reachable&lt;/STRONG&gt;.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_7-1758654298645.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319121i1E559116FB0702F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_7-1758654298645.png" alt="jeet_kapase_7-1758654298645.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add resources – in this scenario, we added all resources under /.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_8-1758654342880.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319122iF0786CE5F6BB6CED/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_8-1758654342880.png" alt="jeet_kapase_8-1758654342880.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_0-1758654456958.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319123iE2A1BC72C4E153BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_0-1758654456958.png" alt="jeet_kapase_0-1758654456958.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--1329410067"&gt;Step 7: Add RFC Protocol Resources&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Select &lt;STRONG&gt;RFC protocol&lt;/STRONG&gt;.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_1-1758654477019.png" style="width: 560px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319124iCDEE1D96A196DC3C/image-dimensions/560x264?v=v2" width="560" height="264" role="button" title="jeet_kapase_1-1758654477019.png" alt="jeet_kapase_1-1758654477019.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_2-1758654505382.png" style="width: 564px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319125i2187506DA5660D9E/image-dimensions/564x261?v=v2" width="564" height="261" role="button" title="jeet_kapase_2-1758654505382.png" alt="jeet_kapase_2-1758654505382.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Enter system mapping details (System ID + description).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_3-1758654540707.png" style="width: 568px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319126i81462D066986D21C/image-dimensions/568x261?v=v2" width="568" height="261" role="button" title="jeet_kapase_3-1758654540707.png" alt="jeet_kapase_3-1758654540707.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_4-1758654667483.png" style="width: 566px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319127iAC623298B8A67A9C/image-dimensions/566x264?v=v2" width="566" height="264" role="button" title="jeet_kapase_4-1758654667483.png" alt="jeet_kapase_4-1758654667483.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_5-1758654692013.png" style="width: 572px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319128iF9438F04F8405103/image-dimensions/572x266?v=v2" width="572" height="266" role="button" title="jeet_kapase_5-1758654692013.png" alt="jeet_kapase_5-1758654692013.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_6-1758654712766.png" style="width: 577px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319129iDD612D5A38FA19F9/image-dimensions/577x263?v=v2" width="577" height="263" role="button" title="jeet_kapase_6-1758654712766.png" alt="jeet_kapase_6-1758654712766.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_7-1758654744856.png" style="width: 593px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319130iD37FB812B9563825/image-dimensions/593x272?v=v2" width="593" height="272" role="button" title="jeet_kapase_7-1758654744856.png" alt="jeet_kapase_7-1758654744856.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_8-1758654881605.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319131iDC4173A5DC92631F/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_8-1758654881605.png" alt="jeet_kapase_8-1758654881605.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Finish setup and test connectivity.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_14-1758655109390.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319138i76477CC5001A449C/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_14-1758655109390.png" alt="jeet_kapase_14-1758655109390.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Map required resources:&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_10-1758654952322.png" style="width: 641px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319133i4155062464F749A0/image-dimensions/641x175?v=v2" width="641" height="175" role="button" title="jeet_kapase_10-1758654952322.png" alt="jeet_kapase_10-1758654952322.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;With &lt;STRONG&gt;Prefix&lt;/STRONG&gt; (e.g., DHAMB_)&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_12-1758655045260.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319136i5CAEE106ADDE014A/image-dimensions/702x285?v=v2" width="702" height="285" role="button" title="jeet_kapase_12-1758655045260.png" alt="jeet_kapase_12-1758655045260.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;With &lt;STRONG&gt;Exact Name&lt;/STRONG&gt; (e.g., RFC_FUNCTION_SEARCH)&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_15-1758655166140.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319141i2F6A143AC59339DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_15-1758655166140.png" alt="jeet_kapase_15-1758655166140.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Ensure the status turns &lt;STRONG&gt;Green&lt;/STRONG&gt; for all resources.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_16-1758655216140.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319143i4F1B630F1979AA10/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_16-1758655216140.png" alt="jeet_kapase_16-1758655216140.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--1525923572"&gt;Step 8: Maintain IP Allow list in SAP Datasphere&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Identify the &lt;STRONG&gt;public IP address&lt;/STRONG&gt; of the host where Cloud Connector is installed (e.g., via whatismyip.com or ip.me or whatever way you are aware of).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_17-1758655253115.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319144iD5ED9A868223641F/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_17-1758655253115.png" alt="jeet_kapase_17-1758655253115.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add this IP under &lt;STRONG&gt;Trusted Cloud Connector IPs&lt;/STRONG&gt; in SAP Datasphere:&lt;BR /&gt;&lt;EM&gt;System → Configuration → IP Allowlist&lt;/EM&gt;.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_18-1758655285574.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319145i49BB8D93CF80AB07/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_18-1758655285574.png" alt="jeet_kapase_18-1758655285574.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_19-1758655332002.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319146i740B619B305995C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_19-1758655332002.png" alt="jeet_kapase_19-1758655332002.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;HR /&gt;&lt;H3 id="toc-hId--1722437077"&gt;Step 9: Maintain the Cloud Connector Location ID in SAP Datasphere&lt;/H3&gt;&lt;P&gt;Go to:&lt;BR /&gt;&lt;EM&gt;SAP Datasphere →System → Administration → Data Source Configuration&lt;/EM&gt; and maintain the &lt;STRONG&gt;Cloud Connector Location ID&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_21-1758655470742.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319148i085BF9BA7E146364/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_21-1758655470742.png" alt="jeet_kapase_21-1758655470742.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jeet_kapase_20-1758655408255.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/319147i5DA7B968FD7C2B45/image-size/large?v=v2&amp;amp;px=999" role="button" title="jeet_kapase_20-1758655408255.png" alt="jeet_kapase_20-1758655408255.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;HR /&gt;&lt;P&gt;&lt;EM&gt;With these steps completed, your &lt;STRONG&gt;SAP Cloud Connector&lt;/STRONG&gt; is successfully installed, connected, and configured to integrate and create a native connection type of SAP S/4HANA on-premise with SAP Datasphere.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1625547575"&gt;Summary:&amp;nbsp;&lt;/H2&gt;&lt;P&gt;In this blog, we saw how the SAP Cloud Connector helps connect SAP Datasphere with on-premise systems in a secure and easy way. It supports features like Replication Flows, Data Flows, and Model Import for smooth data integration. We also looked at the benefits such as simple setup, better security, high availability, and low cost. With best practices like keeping it updated, using a dedicated server, and regular monitoring, you can ensure reliable performance. Finally, we walked through the step-by-step setup to successfully link SAP S/4HANA with SAP Datasphere.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-datasphere-integration-with-sap-s-4hana-sap-cloud-connector-setup-guide/ba-p/14224459"/>
    <published>2025-09-23T23:36:19.259000+02:00</published>
  </entry>
</feed>
