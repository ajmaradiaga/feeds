<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/Cloud-Integration-blog-posts.xml</id>
  <title>SAP Community - Cloud Integration</title>
  <updated>2025-08-02T05:00:09.590602+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/Cloud Integration/pd-p/67837800100800006801" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>Cloud Integration blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/modernizing-for-a-clean-core-idoc-to-events-amp-apis-in-sap-pi-po-to/ba-p/14144273</id>
    <title>Modernizing for a Clean Core: IDoc to Events &amp; APIs in SAP PI/PO to Integration Suite Migration</title>
    <updated>2025-07-04T08:14:01.213000+02:00</updated>
    <author>
      <name>arunmaarirajha_kv</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2033343</uri>
    </author>
    <content>&lt;P&gt;Many organizations with an SAP-centric ERP landscape are embarking on business transformation journeys, moving from SAP ECC to S/4HANA. At the middleware layer, this shift is accompanied by migrating from the trusted workhorse SAP PI/PO to the more modern SAP Integration Suite. To support customers on this path, SAP continues to innovate — for example, by introducing support for pipeline approach in migration tooling, providing Clean Core modernization recommendations, and much more.&lt;/P&gt;&lt;P&gt;Today, let’s explore one specific area: IDoc-based scenarios in SAP PI/PO and their evolution in a cloud-native world.&lt;/P&gt;&lt;P&gt;IDoc has long been a reliable standard for data interchange in SAP, especially in B2B contexts. While IDocs are still supported in SAP Integration Suite via native IDOC adapter, modern cloud-native integration architectures increasingly emphasize open standards and protocols like OData, REST APIs, AMQP and so on. In line with this, SAP recommends adopting modern patterns such as events and APIs instead of IDocs, aligning with the broader&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/learning-journeys/managing-clean-core-for-sap-s-4hana-cloud/exploring-how-to-make-landscapes-core-compliant-1" target="_blank" rel="noopener noreferrer"&gt;Clean Core philosophy&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;This article demonstrates how an IDoc-based scenario in SAP PI/PO can be migrated to Integration Suite through modernization — not merely a lift-and-shift approach. While modernization may take more effort initially, it delivers long-term benefits: interoperability, cloud-native agility, future readiness to absorb SAP released innovation and upgrades. The good news? With the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://roadmaps.sap.com/board?q=idoc&amp;amp;range=FIRST-LAST#;INNO=FB43B7777CB01EEFA79DB3AABB235A78" target="_blank" rel="noopener noreferrer"&gt;Clean Core modernization recommendations for IDocs&lt;/A&gt;, released in Q2 2025, migration assessment reports now directly suggest API and event-based alternatives to achieve the same functional requirement.&lt;/P&gt;&lt;P&gt;Let’s illustrate this with an example.&lt;/P&gt;&lt;P&gt;In our SAP PI/PO system, we have an outbound IDoc interface (ADRMAS03) used to push Business Partner (BP) address changes to an external application, SAP Commerce Cloud, through REST API.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="228.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282606iBD943F56E696556C/image-size/large?v=v2&amp;amp;px=999" role="button" title="228.png" alt="228.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="229.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282608i487C6E7ADA117BE1/image-size/large?v=v2&amp;amp;px=999" role="button" title="229.png" alt="229.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When we run the scenario evaluation using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-migration-assessment" target="_blank" rel="noopener noreferrer"&gt;Migration Assessment&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;capability of Integration Suite, on this SAP PI/PO system, the report (with the new recommendations feature) suggests usage of Business Events and APIs, as modern successors to the ADRMAS03 IDoc.&lt;/P&gt;&lt;P&gt;In the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Recommendations&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sheet of the report, we can see the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/modernization-recommendations" target="_blank" rel="noopener noreferrer"&gt;Modernization Recommendation&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;applicable for this interface, for each modernization category.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="230.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282609iD76F587095E3992C/image-size/large?v=v2&amp;amp;px=999" role="button" title="230.png" alt="230.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Further, in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;API Recommendations&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Business Event Recommendations&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;sheets, we can notice relevant APIs (SOAP, OData) and events being recommended.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="232.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282611i3B1DF45E82FBAE74/image-size/large?v=v2&amp;amp;px=999" role="button" title="232.png" alt="232.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="231.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282610iCA1858A6353A087A/image-size/large?v=v2&amp;amp;px=999" role="button" title="231.png" alt="231.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We can explore the schema (list of fields and whether its for bulk request or delta), mode (push/pull), pattern (sync/async) from&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://hub.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP business accelerator hub&lt;/A&gt;. Selecting the right one is a combined architectural &amp;amp; functional design decision. In any case, always prioritize standard APIs and events before considering custom implementations — this is the essence of the Clean Core approach.&lt;/P&gt;&lt;P&gt;For our scenario, we use the BP Change event to receive a notification whenever an address-related attribute of a Business Partner changes in S/4HANA. The necessary backend setup in S4HANA such as outbound channel creation, bindings, etc. are completed. When a BP address change occurs, an event is triggered to SAP Event Mesh.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="233.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282612iE0B0CFA4ACF07DB9/image-size/large?v=v2&amp;amp;px=999" role="button" title="233.png" alt="233.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Then, we consume this event in a Cloud Integration iFlow. Since the event payload only contains minimal details (event type and BP number), we enrich it by calling an S/4HANA OData API (as recommended in the migration assessment) to fetch detailed BP address information.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="234.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282613i459B7A5037B59316/image-size/large?v=v2&amp;amp;px=999" role="button" title="234.png" alt="234.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;From the S4HANA system, let us modify some address related attributes for a BP#.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="235.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282614iAAD78D8F4653F32E/image-size/large?v=v2&amp;amp;px=999" role="button" title="235.png" alt="235.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="236.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282615iDD0FC18818C194AC/image-size/large?v=v2&amp;amp;px=999" role="button" title="236.png" alt="236.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="237.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282616iC6EAD0422A2CD249/image-size/large?v=v2&amp;amp;px=999" role="button" title="237.png" alt="237.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Following is the OData adapter configuration. We fetch the BP number from the event payload using a content modifier and assign to exchange property, for using in the Odata call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="241.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282617i679B4D892C470AE4/image-size/large?v=v2&amp;amp;px=999" role="button" title="241.png" alt="241.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="242.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282618iC53D67B107F8F296/image-size/large?v=v2&amp;amp;px=999" role="button" title="242.png" alt="242.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="238.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282619i436D63A23293EB8A/image-size/large?v=v2&amp;amp;px=999" role="button" title="238.png" alt="238.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Next, we transform this enriched response into the schema expected by the target application — matching the existing interface design from SAP PI/PO (screenshot below for reference).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="239.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282620iECDF09B2A2DC04BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="239.png" alt="239.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="240.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282621i2E7D300D5CEF0E3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="240.png" alt="240.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="243.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282622i59701734DC38E1CE/image-size/large?v=v2&amp;amp;px=999" role="button" title="243.png" alt="243.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Thus, we have modernized an idoc based SAP PI/PO interface into one that leverages modern cloud native patterns such as APIs and event, without losing the functional need. This pattern is significant given that the communication with external application is API based. IDoc usage still makes sense in certain scenarios, especially for EDI (Electronic Data Interchange) with external partners. Therefore, this type of extensive evaluation is required to ensure adoption of best-fit integration architecture.&lt;/P&gt;&lt;P&gt;The bottom line is that migration isn’t simply a lift-and-shift undertaking; it’s a strategic modernization initiative. Ultimately, thoughtful architectural decisions guided by each business scenario are key to reaping long term benefits. This is why modernization takes time — and why it’s important to start your SAP PI/PO to Integration Suite journey early, leveraging the available time to build a future-ready, clean-core integration landscape.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/modernizing-for-a-clean-core-idoc-to-events-amp-apis-in-sap-pi-po-to/ba-p/14144273"/>
    <published>2025-07-04T08:14:01.213000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/adapters-in-sap-cloud-integration-when-and-how-to-use-them/ba-p/14138566</id>
    <title>Adapters in SAP Cloud Integration: When and how to use them</title>
    <updated>2025-07-05T11:08:26.522000+02:00</updated>
    <author>
      <name>Imon12</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2106155</uri>
    </author>
    <content>&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;INTRODUCTION&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;The links that are identified as adapters in SAP Cloud Platform Integration allows the integration layer to communicate with both internal and external systems using a variety of protocols, data formats, and authentication techniques.&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;APPLICATIONS OF Adapters&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;Whenever possible, use an adaptor which includes:&lt;/DIV&gt;&lt;OL&gt;&lt;LI&gt;&amp;nbsp;Two systems interact via different protocols (e.g., SOAP to HTTP).&lt;/LI&gt;&lt;LI&gt;Data is required to be sent to or received from a system.&lt;/LI&gt;&lt;LI&gt;Either synchronous (HTTP, OData) or asynchronous (IDoc, AS2) communication is utilized in the data exchange.&lt;/LI&gt;&lt;LI&gt;The system needs specific security requirements (OAuth, SAML, certificates) and formats (XML, JSON, CSV).&lt;/LI&gt;&lt;/OL&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;When to Use an Adapter and How to Apply in CPI?&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;The&lt;STRONG&gt; Hypertext Transfer Protocol&lt;/STRONG&gt; is used to receive webhook calls or establish a connection using REST APIs. To expose an endpoint, use HTTP Sender; to use an API, use HTTP Receiver. Set authentication, headers, and the method (GET/POST).&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;SOAP&lt;/STRONG&gt; when utilising WSDL-based SOAP web services. Either define a WSDL structure in the Sender or configure a WSDL URL in the SOAP Receiver. Make use of certificates and Basic/Auth.&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;OData&lt;/STRONG&gt; for SuccessFactors or S/4HANA CRUD operations. Use a receiver adapter for OData V2/V4. Entity, headers, and SAML or OAuth2 authentication needs to be specified.&lt;/DIV&gt;&lt;DIV&gt;For structured SAP messages, starting with those from SAP ECC/S4, use &lt;STRONG&gt;IDoc&lt;/STRONG&gt; in order to get IDocs from SAP and to use IDoc Sender. Also, it would be able to push information into SAP via RFC, using IDoc Receiver which requires connectivity to SAP.&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;SFTP&lt;/STRONG&gt; is used for file-based integration (which includes uploads and downloads in.csv and.xml formats). Besides it is used to poll files from various servers, use SFTP Sender. SFTP is also used to upload files using Receiver while setting up user/key authentication, host, and port.&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Mail&lt;/STRONG&gt; is used when email sending or receiving is necessary for integration. For sending emails, we can use a mail receiver (SMTP). To check the inbox, use Mail Sender (IMAP/POP3). Making use of MIME converters.&lt;/DIV&gt;&lt;DIV&gt;The &lt;STRONG&gt;Success Factors&lt;/STRONG&gt; is used to integrate with SF Employee Central via OData. Utilize the appropriate OData entity routes, set up your OAuth2 credentials, and use the SuccessFactors Receiver Adapter.&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;AS2&lt;/STRONG&gt; is used for secure B2B/EDI communication (pharma, retail, etc.).For outgoing messages, use AS2 Receiver; for incoming messages, use AS2 Sender. In addition to that AS2 can set up partner agreements, EDI settings, and digital certificates.&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;JDBC &lt;/STRONG&gt;adapter is used while logging into SQL, Oracle, or MySQL databases on-premises. For secure on-premises access, utilize the JDBC Receiver and set up drivers, SQL queries, and Cloud Connector.&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Ariba&lt;/STRONG&gt; is used for SAP Ariba integration which is related to procurement. Ariba Network Adapter should be used for setting up document types (PO, invoice) and certifications which is typically asynchronous.&lt;/DIV&gt;&lt;DIV&gt;"&lt;STRONG&gt;Twitter/FB/3rd&lt;/STRONG&gt;" is utilized when public APIs or social media are used for integration. Use an appropriate API endpoint with an HTTP adapter which can manage API keys or OAuth2 tokens.&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Essential Setup Procedures (How to Apply in Integration Flow)&lt;/STRONG&gt;&lt;/DIV&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;1. Select the adapter:&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;In your iFlow, drag a Sender or Receiver participant.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;2. Set up the adapter:&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;Select the appropriate adapter type, such as OData or HTTP.&lt;/LI&gt;&lt;LI&gt;Add details specific to the protocol (URL, method, headers).&lt;/LI&gt;&lt;LI&gt;Establish authentication.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;3. Transform and Map:&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;To format or update the message, use Script, Message Mapping, or Content Modifier.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;4. Examine the iFlow:&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;Install the Monitor and use it to look for incoming and outgoing messages.&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV&gt;&lt;STRONG&gt;Ideal Methods&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;Use externalized parameters (such as credentials or URLs) through Value Mapping or security artifacts whenever possible .&lt;/LI&gt;&lt;LI&gt;Use secure authentication methods like OAuth2, SAML, or certificates for sensitive systems (like IDoc and OData).&lt;/LI&gt;&lt;LI&gt;To cope with adapter problems (which might include file not found or timeout), use Exception Subprocesses.&lt;/LI&gt;&lt;LI&gt;Install Cloud Connector if you're interacting with on-premise services&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;CONCLUSION&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Adapters enables systems to interact via different protocols synchronously or asynchronously. Adapters also enforces security, helps in implementing message transformations exchanged between different protocols or data formats and scheduling event-driven integration.&amp;nbsp; Hence adapters are one of the best tools in SAP CPI which helps developers to maintain an effective and secure way to send data within different systems .&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/adapters-in-sap-cloud-integration-when-and-how-to-use-them/ba-p/14138566"/>
    <published>2025-07-05T11:08:26.522000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413</id>
    <title>Creating MIGs and MAGs Using Integration Advisor in SAP BTP Cockpit</title>
    <updated>2025-07-05T11:12:38.722000+02:00</updated>
    <author>
      <name>ManaswiniPuli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940178</uri>
    </author>
    <content>&lt;P&gt;As I began working with SAP’s Integration Advisor, I realized how much it simplifies defining message structures and mappings. I discovered a step-by-step approach to creating message guidelines and mappings. In this blog, I will walk you through how to leverage MIGs and MAGs in SAP BTP Cockpit to efficiently build message structures and mappings that comply with standards.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;What are MIGs and MAGs?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Message Implementation Guidelines (MIGs)&lt;/STRONG&gt; define the structure and format of messages, helping to create custom, standard-compliant message templates.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Message Guidelines(MAGs)&lt;/STRONG&gt; specify how different message formats map to each other, enabling seamless data transformation between systems.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1605059914"&gt;Step-by-Step Guide: Creating MIG for Purchase Order&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Access Integration Suite&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Log in to &lt;STRONG&gt;SAP BTP Cockpit&lt;/STRONG&gt; using your registered &lt;STRONG&gt;email and password&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Go to your &lt;STRONG&gt;Subaccount&lt;/STRONG&gt; and navigate to &lt;STRONG&gt;Subscriptions&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Click on&lt;STRONG&gt;&amp;nbsp; Integration Suite&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Navigate to MIGs&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In the Integration Suite launchpad, go to the left-hand menu.&lt;/LI&gt;&lt;LI&gt;Under the &lt;STRONG&gt;Design&lt;/STRONG&gt; section, click on &lt;STRONG&gt;MIGs (Message Implementation Guidelines)&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_0-1751524033508.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282005i6CF87AC0E8F4E5E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_0-1751524033508.png" alt="ManaswiniPuli_0-1751524033508.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Create a New MIG for Purchase Order&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1.Click on the &lt;STRONG&gt;“Create”&lt;/STRONG&gt; button at the top right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_1-1751524033511.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282007i0B5C4C02B62DD7C9/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_1-1751524033511.png" alt="ManaswiniPuli_1-1751524033511.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;2. In the &lt;/SPAN&gt;&lt;STRONG&gt;Type System&lt;/STRONG&gt;&lt;SPAN&gt; section, under the &lt;/SPAN&gt;&lt;STRONG&gt;Standard&lt;/STRONG&gt;&lt;SPAN&gt; field, select &lt;/SPAN&gt;&lt;STRONG&gt;X12&lt;/STRONG&gt;&lt;SPAN&gt; (for ANSI X12 standard).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_2-1751524033514.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282006iA8A0553A36B234FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_2-1751524033514.png" alt="ManaswiniPuli_2-1751524033514.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;3. On clicking &lt;/SPAN&gt;&lt;STRONG&gt;X12&lt;/STRONG&gt;&lt;SPAN&gt; in the &lt;/SPAN&gt;&lt;STRONG&gt;Standard&lt;/STRONG&gt;&lt;SPAN&gt; field, a list of available &lt;/SPAN&gt;&lt;STRONG&gt;message types&lt;/STRONG&gt;&lt;SPAN&gt; will appear.&amp;nbsp;&lt;/SPAN&gt;In the search bar, type &lt;STRONG&gt;850&lt;/STRONG&gt; and select:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Message Type&lt;/STRONG&gt;: 850 – Purchase Order&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_3-1751524033517.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282010iCAA789F67686F6CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_3-1751524033517.png" alt="ManaswiniPuli_3-1751524033517.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;4. After selecting the message type, a list of available &lt;/SPAN&gt;&lt;STRONG&gt;versions&lt;/STRONG&gt;&lt;SPAN&gt; will appear.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;Choose the appropriate version, typically &lt;/SPAN&gt;&lt;STRONG&gt;004010&lt;/STRONG&gt;&lt;SPAN&gt; for X12.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_4-1751524033518.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282008iA283D3D1DB3B01F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_4-1751524033518.png" alt="ManaswiniPuli_4-1751524033518.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;5. Once the version is selected, the &lt;/SPAN&gt;&lt;STRONG&gt;Envelope&lt;/STRONG&gt;&lt;SPAN&gt; selection screen appears. From the available options, choose &lt;/SPAN&gt;&lt;STRONG&gt;None&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;This means the message will not be wrapped in any predefined envelope structure.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_5-1751524033520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282009i3554D04631F643A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_5-1751524033520.png" alt="ManaswiniPuli_5-1751524033520.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;6. The next screen shows the &lt;/SPAN&gt;&lt;STRONG&gt;Sample Payload&lt;/STRONG&gt;&lt;SPAN&gt;, which you can skip by clicking &lt;/SPAN&gt;&lt;STRONG&gt;Next&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;/&lt;/SPAN&gt;&lt;STRONG&gt;Continue&lt;/STRONG&gt;&lt;SPAN&gt; without making any changes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_6-1751524033522.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282011iA11E25AABE4F8584/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_6-1751524033522.png" alt="ManaswiniPuli_6-1751524033522.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;7. In the final step, provide the following details&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Name&lt;/STRONG&gt;: Enter a meaningful name, e.g., &lt;STRONG&gt;X12_850_PurchaseOrder_MIG&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Direction&lt;/STRONG&gt;: Choose the option that best fits your integration scenario:&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;STRONG&gt;Inbound&lt;/STRONG&gt;: When your system is receiving data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Outbound&lt;/STRONG&gt;: When your system is sending data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Both&lt;/STRONG&gt;: When your system will both send and receive data.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;EM&gt;Here, we are selecting &lt;STRONG&gt;Inbound&lt;/STRONG&gt; since the system is receiving data.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_7-1751524033524.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282013i9307A89E6947BBEA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_7-1751524033524.png" alt="ManaswiniPuli_7-1751524033524.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; Own Business Context&lt;/STRONG&gt;: Select the appropriate business context that matches your integration scenario.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; This helps categorize and manage your MIG efficiently.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;For example, select &lt;STRONG&gt;Business Process Role&lt;/STRONG&gt; and choose &lt;STRONG&gt;Request Order&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_8-1751524033526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282012iA270C2AD834BFA57/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_8-1751524033526.png" alt="ManaswiniPuli_8-1751524033526.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;8. Click &lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt; to complete the setup and open the MIG editor.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;9. After clicking &lt;STRONG&gt;Create&lt;/STRONG&gt;, the MIG editor opens.&lt;/P&gt;&lt;P&gt;Select the required &lt;STRONG&gt;nodes&lt;/STRONG&gt; relevant to your integration scenario. Once the nodes are selected, click &lt;STRONG&gt;Save&lt;/STRONG&gt; to store the MIG configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_9-1751524033531.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282016iFF0000577462AA00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_9-1751524033531.png" alt="ManaswiniPuli_9-1751524033531.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;10.&lt;/SPAN&gt;&lt;STRONG&gt; Verify the Created MIG&lt;/STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;To verify that the MIG has been created, go to the MIGs tab under the Design section and&amp;nbsp;confirm that it is listed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_10-1751524033534.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282015i2456CCF62A82A039/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_10-1751524033534.png" alt="ManaswiniPuli_10-1751524033534.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1408546409"&gt;Step-by-Step Guide: Creating MIG for Sales Order&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Create a New MIG for Sales Order&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. Click on the &lt;STRONG&gt;“Create”&lt;/STRONG&gt; button at the top right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_11-1751524033536.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282014iA7CBF0D2042CD566/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_11-1751524033536.png" alt="ManaswiniPuli_11-1751524033536.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;2. In the &lt;/SPAN&gt;&lt;STRONG&gt;Type System &lt;/STRONG&gt;&lt;SPAN&gt;section, under the &lt;/SPAN&gt;&lt;STRONG&gt;Standard&lt;/STRONG&gt;&lt;SPAN&gt; field, select &lt;/SPAN&gt;&lt;STRONG&gt;SAP S/4HANA Cloud SOAP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_12-1751524033543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282019iD43B796672A37B56/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_12-1751524033543.png" alt="ManaswiniPuli_12-1751524033543.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;3. On clicking &lt;/SPAN&gt;&lt;STRONG&gt;SAP S/4HANA Cloud SOAP&lt;/STRONG&gt;&lt;SPAN&gt; in the &lt;/SPAN&gt;&lt;STRONG&gt;Standard&lt;/STRONG&gt;&lt;SPAN&gt; field, a list of available &lt;/SPAN&gt;&lt;STRONG&gt;message types &lt;/STRONG&gt;&lt;SPAN&gt;will appear. Search and select &lt;/SPAN&gt;&lt;STRONG&gt;SalesOrderBulkRequest-SalesOrderBulkRequest&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_13-1751524033549.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282018i24BBBC5EE355D9EE/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_13-1751524033549.png" alt="ManaswiniPuli_13-1751524033549.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;4. After selecting the message type, a list of available versions will appear.&lt;/SPAN&gt;&amp;nbsp;Choose the appropriate version — typically &lt;STRONG&gt;1905&lt;/STRONG&gt; for &lt;STRONG&gt;SalesOrderBulkRequest – SalesOrderBulkRequest&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_14-1751524033550.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282017i21F8D99F9A90BDBA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_14-1751524033550.png" alt="ManaswiniPuli_14-1751524033550.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;5. The next screen shows the &lt;/SPAN&gt;&lt;STRONG&gt;Sample Payload&lt;/STRONG&gt;&lt;SPAN&gt;, which you can skip by clicking &lt;/SPAN&gt;&lt;STRONG&gt;Next&amp;nbsp;&lt;/STRONG&gt;&lt;SPAN&gt;/&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Continue&lt;/STRONG&gt;&lt;SPAN&gt; without making any changes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_15-1751524033552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282020i22334BFAE7C433FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_15-1751524033552.png" alt="ManaswiniPuli_15-1751524033552.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;6. In the final step, provide the following details&lt;/SPAN&gt;&lt;STRONG&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;Name&lt;/STRONG&gt;: Enter a meaningful name, e.g., &lt;STRONG&gt;SOAP_SalesOrder_MIG&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Direction&lt;/STRONG&gt;: Choose the option that best fits your integration scenario:&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Inbound&lt;/STRONG&gt;: When your system is receiving data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Outbound&lt;/STRONG&gt;: When your system is sending data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Both&lt;/STRONG&gt;: When your system will both send and receive data.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;EM&gt;Here, we are selecting &lt;STRONG&gt;Inbound&lt;/STRONG&gt; since the system is receiving data.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_16-1751524033554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282022i18AC6DC6A708E563/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_16-1751524033554.png" alt="ManaswiniPuli_16-1751524033554.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Own Business Context&lt;/STRONG&gt;: Select the appropriate business context that matches your integration scenario.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;This helps categorize and manage your MIG efficiently.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; For example, select &lt;STRONG&gt;Business Process Role&lt;/STRONG&gt; and choose &lt;STRONG&gt;Request Order&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_17-1751524033556.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282021i8CAF6D10921FD82E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_17-1751524033556.png" alt="ManaswiniPuli_17-1751524033556.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;7. Click &lt;/SPAN&gt;&lt;STRONG&gt;Create&lt;/STRONG&gt;&lt;SPAN&gt; to complete the setup and open the MIG editor.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;8. After clicking &lt;STRONG&gt;Create&lt;/STRONG&gt;, the MIG editor opens. Select the required &lt;STRONG&gt;nodes&lt;/STRONG&gt; relevant to your integration scenario. Once the nodes are selected, click &lt;STRONG&gt;Save&lt;/STRONG&gt; to store the MIG configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_18-1751524033560.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282023i44F52B9501FCC756/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_18-1751524033560.png" alt="ManaswiniPuli_18-1751524033560.png" /&gt;&lt;/span&gt;&lt;SPAN&gt;9.&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Verify the Created MIG&lt;/STRONG&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;To verify that the MIG has been created, go to the MIGs tab under the Design section and&amp;nbsp;confirm that it is listed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_19-1751524033564.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282025i71D4AF7DF3C6EFA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_19-1751524033564.png" alt="ManaswiniPuli_19-1751524033564.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1212032904"&gt;Creating MAG (Message Mapping Guideline) in SAP Integration Suite&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Navigate to the MAGs Section&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, go to the &lt;STRONG&gt;Design&lt;/STRONG&gt; section.&lt;/LI&gt;&lt;LI&gt;Click on the &lt;STRONG&gt;MAGs&lt;/STRONG&gt; tab.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Click on Create&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;Click the Create button to begin a new Message Mapping Guideline and select &lt;STRONG&gt;Standard MAG&lt;/STRONG&gt; as the type.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_20-1751524033566.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282024i9D76A453E7CE6113/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_20-1751524033566.png" alt="ManaswiniPuli_20-1751524033566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Select the Source MIG&lt;/STRONG&gt;&lt;BR /&gt;In the &lt;STRONG&gt;Source&lt;/STRONG&gt; section, select the appropriate &lt;STRONG&gt;Source MIG&lt;/STRONG&gt; (e.g., X12_850_PurchaseOrder_MIG)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_21-1751524033569.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282026iD82BB6C1C1163B93/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_21-1751524033569.png" alt="ManaswiniPuli_21-1751524033569.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Step 4: Select the Target MIG&lt;/STRONG&gt;&lt;BR /&gt;In the &lt;STRONG&gt;Target&lt;/STRONG&gt; section, select the appropriate &lt;STRONG&gt;Target MIG&lt;/STRONG&gt; (e.g., SOAP_SalesOrder_MIG)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_22-1751524033571.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282028i16BB77CF421913EB/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_22-1751524033571.png" alt="ManaswiniPuli_22-1751524033571.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Step 5: Click on Create&lt;/STRONG&gt;&lt;BR /&gt;After selecting the source and target MIGs, click &lt;STRONG&gt;Create&lt;/STRONG&gt; to generate the MAG and open the mapping editor.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_23-1751524033574.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282027iB2DE625A2D4C8A3E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_23-1751524033574.png" alt="ManaswiniPuli_23-1751524033574.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Perform Field Mapping&lt;/STRONG&gt;&lt;BR /&gt;Once the MAG editor opens, map the relevant fields from the &lt;STRONG&gt;source structure&lt;/STRONG&gt; to the corresponding fields in the &lt;STRONG&gt;target structure&lt;/STRONG&gt; by dragging and dropping between them.&lt;BR /&gt;Apply any necessary transformations, constants as per your integration requirements.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_24-1751524033579.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282029i063DBFD563DA5B6B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_24-1751524033579.png" alt="ManaswiniPuli_24-1751524033579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: Save the MAG&lt;/STRONG&gt;&lt;BR /&gt;After completing the field mappings, click &lt;STRONG&gt;Save&lt;/STRONG&gt; to store your MAG configuration.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: Export the MAG&lt;/STRONG&gt;&lt;BR /&gt;Click &lt;STRONG&gt;Export&lt;/STRONG&gt; and select &lt;STRONG&gt;SAP Cloud Integration Runtime Artifacts&lt;/STRONG&gt; to generate the artifact for use in Integration Flow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_25-1751524033584.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282030i2810C9A24E13E216/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_25-1751524033584.png" alt="ManaswiniPuli_25-1751524033584.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9: Extract the Exported Files&lt;/STRONG&gt;&lt;BR /&gt;Download and extract the ZIP file. It contains the Mapping, Source MIG, and Target MIG folders.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Inside the &lt;/SPAN&gt;&lt;STRONG&gt;Source&lt;/STRONG&gt;&lt;SPAN&gt; and &lt;/SPAN&gt;&lt;STRONG&gt;Target&lt;/STRONG&gt;&lt;SPAN&gt; MIG folders, you will find the required files for integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_0-1751526200403.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282044i98B8A5072B9CF73E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_0-1751526200403.png" alt="ManaswiniPuli_0-1751526200403.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;With MIGs and MAGs in place, you’re prepared to leverage them in integration scenarios for efficient data processing. &lt;/SPAN&gt;&lt;SPAN&gt;Stay tuned for more insights to help you build effective integrations!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;BR /&gt;&lt;SPAN&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413"/>
    <published>2025-07-05T11:12:38.722000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/master-data-replication-creation-of-communication-arrangement-sap-com-0659/ba-p/14146357</id>
    <title>Master Data Replication: Creation of Communication Arrangement SAP_COM_0659</title>
    <updated>2025-07-07T18:47:30.471000+02:00</updated>
    <author>
      <name>Janarthanan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/669</uri>
    </author>
    <content>&lt;H2 id="prerequisites" id="toc-hId-1734231173"&gt;&lt;SPAN&gt;Prerequisites&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;Before you create a communication arrangement, go to SAP BTP Cockpit, select the respective service instance, and copy the service binding&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;How to copy Service key (or) binding&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;Go to BTP :MDI subaccount and follow the below steps&lt;/P&gt;&lt;P class=""&gt;Step1: go to MDI subaccount&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;step2: Click Service binding from the instance&lt;/P&gt;&lt;P class=""&gt;Step3 : select json mode and click copy json&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Janarthanan_1-1751906351330.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283607iE67F85FD9DC3205A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Janarthanan_1-1751906351330.png" alt="Janarthanan_1-1751906351330.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;you have copied the service key&lt;/P&gt;&lt;H2 id="procedure" id="toc-hId-1537717668"&gt;&lt;SPAN&gt;Procedure&lt;/SPAN&gt;&lt;/H2&gt;&lt;DIV class=""&gt;&lt;H3 id="toc-hId-1470286882"&gt;Automated Creation&lt;/H3&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;Log on to the SAP Fiori launchpad in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP S/4HANA Cloud Public Edition&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Select the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Communication Arrangement&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;app.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Click&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;New&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and in the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;New Communication Arrangement&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;dialog, select the scenario&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP_COM_0659&lt;/SPAN&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Paste the service binding that you copied from the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP BTP Cockpit&lt;/SPAN&gt;. (Paste the&amp;nbsp; json)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;Choose&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;Create&lt;/SPAN&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV class=""&gt;Verify the auto-filled details:&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Arrangement Name&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Communication System&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Outbound Communication&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN class=""&gt;Outbound Services&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;Save your communication arrangement.&lt;/LI&gt;&lt;/OL&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Regards&lt;/P&gt;&lt;P&gt;Janarthanan&lt;/P&gt;&lt;P&gt;#SAP_COM_0659 #&lt;SPAN&gt;SAP Master Data Integration&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/master-data-replication-creation-of-communication-arrangement-sap-com-0659/ba-p/14146357"/>
    <published>2025-07-07T18:47:30.471000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/regex-filtering-in-file-name-for-sftp-sender-adapter-in-cloud-integration/ba-p/14146845</id>
    <title>Regex Filtering in File Name for SFTP Sender Adapter in Cloud Integration</title>
    <updated>2025-07-08T10:06:31.288000+02:00</updated>
    <author>
      <name>RaghuVamseedhar</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191580</uri>
    </author>
    <content>&lt;P&gt;SAP has quietly introduced Regex Filtering in the SFTP Sender Adapter, starting with adapter version 1.17 for SFTP Sender and version 1.18 for SFTP Poll Enrich.&lt;BR /&gt;Previously, although SAP documentation claimed regex support, it was not truly evaluated by the runtime. Only simple expressions using * and ? were interpreted:&lt;BR /&gt;* - matches zero or more characters&lt;BR /&gt;? - matches exactly one character&lt;/P&gt;&lt;P&gt;For example:&lt;BR /&gt;ab* matches: ab, abc, abcd&lt;BR /&gt;ab? matches: abc, ab1&lt;BR /&gt;This limitation created a challenge in SAP Process Orchestration (PO) to SAP Cloud Integration (CI) migration projects, where regex filtering in PO SFTP channels was already supported.&lt;/P&gt;&lt;P&gt;From SFTP adapter version 1.17 onward, a new checkbox - &lt;STRONG&gt;Regex Filtering&lt;/STRONG&gt; - is available. Once enabled, the file name input field can evaluate actual regular expressions, bringing it in line with PO capabilities.&lt;BR /&gt;For example, to pick up files named &lt;STRONG&gt;abc.txt&lt;/STRONG&gt; or &lt;STRONG&gt;123.txt&lt;/STRONG&gt;, you can now use:&lt;BR /&gt;&lt;STRONG&gt;^(abc\.txt|123\.txt)$&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Old SFTP adapter&lt;/TD&gt;&lt;TD width="50%"&gt;New SFTP adapter&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RaghuVamseedhar_3-1751961677114.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283849iD33936D10EAF294A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RaghuVamseedhar_3-1751961677114.png" alt="RaghuVamseedhar_3-1751961677114.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="RaghuVamseedhar_2-1751961570062.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/283846i64C528206248AD8E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="RaghuVamseedhar_2-1751961570062.png" alt="RaghuVamseedhar_2-1751961570062.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;If you are not Seeing the 'Regex Filtering' Option, it likely means you are using an older adapter version.&lt;BR /&gt;Solution: Delete the existing SFTP channel and create a new one using the latest adapter version.&lt;/P&gt;&lt;P&gt;FYI...You can take AI (ChatGPT, Copilot) help to come up with regex you need and use it in SFTP channel.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/regex-filtering-in-file-name-for-sftp-sender-adapter-in-cloud-integration/ba-p/14146845"/>
    <published>2025-07-08T10:06:31.288000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/streamlining-b2b-integration-with-ai-powered-sap-cpi-accelerating-data/ba-p/14143578</id>
    <title>Streamlining B2B Integration with AI-Powered SAP CPI: Accelerating Data Transformations</title>
    <updated>2025-07-14T16:07:13.979000+02:00</updated>
    <author>
      <name>ARAVINDRAJAMANI</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1692318</uri>
    </author>
    <content>&lt;P class=""&gt;In today’s interconnected business ecosystem, seamless data exchange between systems is vital for operational excellence. SAP Cloud Platform Integration (CPI), a key component of the SAP Business Technology Platform (BTP), leverages AI-driven tools like the Integration Advisor to simplify complex B2B integrations, such as transforming EDI to IDoc formats. This article explores how Integration Advisor’s AI capabilities enhance accuracy and speed, provides a practical example of a B2B transformation, and explains how to implement it in SAP CPI Integration flows&lt;/P&gt;&lt;H3 id="toc-hId-1863226504"&gt;Integration Advisor&lt;/H3&gt;&lt;P class=""&gt;The Integration Advisor, a cloud-based tool within SAP CPI, streamlines integration by automating the creation of Message Implementation Guidelines (MIGs) and Mapping Guidelines (MAGs). MIGs define source and target message structures (e.g., EDI and IDoc), while MAGs specify field mappings. Powered by machine learning, the Advisor analyzes industry standards, SAP metadata, and crowd-sourced patterns to propose mappings, validate data consistency, and provide reusable templates. This reduces manual effort, ensures compliance, and fosters collaboration across teams and partners.&lt;/P&gt;&lt;H3 id="toc-hId-1666712999"&gt;Key Features of Integration Advisor&lt;/H3&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Automated Mapping Proposals&lt;/STRONG&gt;: AI suggests field mappings based on standards and historical data.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Standard Libraries&lt;/STRONG&gt;: Supports common B2B formats for rapid setup.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Collaboration Tools&lt;/STRONG&gt;: Enables sharing of MIGs and MAGs for stakeholder alignment.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1470199494"&gt;Benefits of AI-Assisted Integration&lt;/H3&gt;&lt;P class=""&gt;Integration Advisor’s AI capabilities deliver significant advantages:&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Automation&lt;/STRONG&gt;: Generates mappings for B2B transformations, reducing setup time by up to 60%.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Accuracy&lt;/STRONG&gt;: Minimizes errors by 50–70% through data validation.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Scalability&lt;/STRONG&gt;: Reusable templates support large-scale integrations.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Collaboration&lt;/STRONG&gt;: Shared guidelines streamline coordination with partners.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1273685989"&gt;Practical Example : Transforming EDI 850 to ORDERS05 IDoc&lt;/H3&gt;&lt;P class=""&gt;Consider a global retailer integrating a supplier’s EDI purchase order with its SAP S/4HANA system, which uses IDoc for order processing. Below are the steps&lt;/P&gt;&lt;OL class=""&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;STRONG&gt;Create MIGs&lt;/STRONG&gt;: Define the source MIG for the EDI message, including segments like order details, partner information, and line items. Define the target MIG for the IDoc, covering segments like header, partner, and line items.&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_0-1751536739276.png" style="width: 584px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282128i1E7FA0C2A000B582/image-dimensions/584x303?v=v2" width="584" height="303" role="button" title="ARAVINDRAJAMANI_0-1751536739276.png" alt="ARAVINDRAJAMANI_0-1751536739276.png" /&gt;&lt;/span&gt;&lt;P&gt;Now choose ASC XI2 as we will create MIG for EDI 850 first .&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_1-1751536966874.png" style="width: 569px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282129iC63C929E7692B4C5/image-dimensions/569x305?v=v2" width="569" height="305" role="button" title="ARAVINDRAJAMANI_1-1751536966874.png" alt="ARAVINDRAJAMANI_1-1751536966874.png" /&gt;&lt;/span&gt;&lt;P&gt;Now search for 850 which is for Purchase Orders&amp;nbsp; and then choose version 4010&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_4-1751537118260.png" style="width: 670px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282132iAFE2DCF86BCB5F00/image-dimensions/670x129?v=v2" width="670" height="129" role="button" title="ARAVINDRAJAMANI_4-1751537118260.png" alt="ARAVINDRAJAMANI_4-1751537118260.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_5-1751537172171.png" style="width: 682px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282133i73E887963279A42F/image-dimensions/682x79?v=v2" width="682" height="79" role="button" title="ARAVINDRAJAMANI_5-1751537172171.png" alt="ARAVINDRAJAMANI_5-1751537172171.png" /&gt;&lt;/span&gt;&lt;P&gt;In the next step , choose without envelope which skips the Edi envelopes as they are not required for our POC . In the Next Step click on skip unless we have any EDI sample File to provide&amp;nbsp; and click next&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_6-1751537302408.png" style="width: 681px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282134iA4BFE67742354A12/image-dimensions/681x80?v=v2" width="681" height="80" role="button" title="ARAVINDRAJAMANI_6-1751537302408.png" alt="ARAVINDRAJAMANI_6-1751537302408.png" /&gt;&lt;/span&gt;&lt;P&gt;In the Next step , give the name to the MIG , direction is Inbound as EDI 850 is&amp;nbsp; inbound to ECC/ S4 . Also choose a business context accordingly and click on create&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_7-1751537511733.png" style="width: 616px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282135i196C9C0FE833BF3C/image-dimensions/616x331?v=v2" width="616" height="331" role="button" title="ARAVINDRAJAMANI_7-1751537511733.png" alt="ARAVINDRAJAMANI_7-1751537511733.png" /&gt;&lt;/span&gt;&lt;P&gt;The MIG is created and we can choose the required segments for the structure and save it .&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_8-1751537636105.png" style="width: 597px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282137i9BB26FC11579FBCF/image-dimensions/597x339?v=v2" width="597" height="339" role="button" title="ARAVINDRAJAMANI_8-1751537636105.png" alt="ARAVINDRAJAMANI_8-1751537636105.png" /&gt;&lt;/span&gt;&lt;P&gt;The Get Proposals option leverages AI&amp;nbsp; and shows the confidence level for mapping and other related activities&amp;nbsp; . click on Save and then Activate&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_9-1751537816313.png" style="width: 614px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282138iF915D0370CC4B5C6/image-dimensions/614x321?v=v2" width="614" height="321" role="button" title="ARAVINDRAJAMANI_9-1751537816313.png" alt="ARAVINDRAJAMANI_9-1751537816313.png" /&gt;&lt;/span&gt;&lt;P&gt;In order to get the CPI runtime Artifacts , click on Export &amp;gt; SAP Cloud Integration Runtime Artifacts . A Zip will be extracted which contains the multiple files which can be used in Integration flows&amp;nbsp;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_10-1751538176233.png" style="width: 548px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282139iA4926C2B064019A4/image-dimensions/548x267?v=v2" width="548" height="267" role="button" title="ARAVINDRAJAMANI_10-1751538176233.png" alt="ARAVINDRAJAMANI_10-1751538176233.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;ASC-X12_850_004010.xsd&lt;/STRONG&gt;: An XSD (XML Schema Definition) file defining the structure and data types of the EDI 850 (ASC X12 004010) message. Used to validate the EDI input data against its expected format in SAP CPI.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;X12-850_postproc.xsl&lt;/STRONG&gt;: An XSLT (Extensible Stylesheet Language Transformations) stylesheet applied post-processing to transform or refine the EDI data after initial parsing. Used to adjust the output for compatibility with downstream systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;X12-850_preproc.xsl&lt;/STRONG&gt;: An XSLT stylesheet used for pre-processing the EDI 850 data before mapping. It handles tasks like segment normalization or data cleansing to prepare it for transformation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;X12-850_RD.xsd&lt;/STRONG&gt;: An XSD file representing the runtime data model or reference structure for the EDI 850 message. Used by SAP CPI to ensure the transformed data adheres to the expected runtime schema.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;X12-850_testdata_CPI.xml&lt;/STRONG&gt;: An XML file containing sample test data for the EDI 850 message, formatted for CPI. Used to test and validate the integration flow within SAP CPI.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;X12-850_testdata_EDI.txt&lt;/STRONG&gt;: A text file with sample EDI 850 data in its raw format. Used as input for testing the parsing and transformation process.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;X12-850_testdata_ICA.xml&lt;/STRONG&gt;: An XML file with test data structured according to the Integration Content Advisor’s intermediate format. Used to verify the mapping logic during development.&lt;/P&gt;&lt;P&gt;&amp;nbsp;In a Similar way , we can create a MIG for ORDERS05 IDOC as well&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_12-1751539209243.png" style="width: 612px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282176iB05645D330AA2C51/image-dimensions/612x306?v=v2" width="612" height="306" role="button" title="ARAVINDRAJAMANI_12-1751539209243.png" alt="ARAVINDRAJAMANI_12-1751539209243.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2.&amp;nbsp; Create MAG :&amp;nbsp;&lt;/STRONG&gt;To create MAG , Click on MAGs under Design and then click create &amp;gt; choose Standard MAGs&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_13-1751539370219.png" style="width: 597px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282178i8BE725B210B637A4/image-dimensions/597x221?v=v2" width="597" height="221" role="button" title="ARAVINDRAJAMANI_13-1751539370219.png" alt="ARAVINDRAJAMANI_13-1751539370219.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now select the Source and target MIGs and then click on create&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_14-1751539551846.png" style="width: 568px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282184iB842CA02359E61F2/image-dimensions/568x304?v=v2" width="568" height="304" role="button" title="ARAVINDRAJAMANI_14-1751539551846.png" alt="ARAVINDRAJAMANI_14-1751539551846.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now the MAG is created as below and it doesn't have any mapping / transformation logic in it .&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_15-1751539626506.png" style="width: 629px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282186i7A5B49DE8A6F1877/image-dimensions/629x347?v=v2" width="629" height="347" role="button" title="ARAVINDRAJAMANI_15-1751539626506.png" alt="ARAVINDRAJAMANI_15-1751539626506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now , click on proposal which will provide us the list of mapping proposals generated . In our case , we had 600 + proposals generated with the help of AI . Now Select Best proposal and then use Only for Valid Mappings so that the proposals get imported to the mapping .&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ARAVINDRAJAMANI_16-1751540646508.png" style="width: 646px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282194iF07E7216D84FE8B6/image-dimensions/646x358?v=v2" width="646" height="358" role="button" title="ARAVINDRAJAMANI_16-1751540646508.png" alt="ARAVINDRAJAMANI_16-1751540646508.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If any mapping logic is required apart from proposals , we can manually add them as we do in normal message&amp;nbsp; mapping . We can stimulate the mapping using the stimulate option .&amp;nbsp;&lt;/P&gt;&lt;P&gt;Once Done , save and activate the MAG. Upon clicking export Option we can get the cpi runtime components .&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Time and Cost Savings&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Manually mapping EDI to IDoc can take 6–8 hours due to complex segment structures. Integration Advisor’s AI reduces this to 2–3 hours, achieving a 60–75% time savings. Error reduction of 50–70% minimizes rework, enhancing efficiency.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Drawbacks&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This functionality is not mature enough to provide proper proposals . Multiple conflicting proposals were there and multiple important segments didnt have any proposals at all. MIG is very useful to generate the xsds of EDI and other standard formats , whereas MAG is not that useful as MIGs&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Integration Advisor Is Transformative&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;As businesses connect ERP systems, suppliers, and third-party platforms, the demand for rapid, reliable integrations grows. Integration Advisor addresses this by automating mappings, ensuring data integrity, and adapting to B2B standards. For example, a manufacturing firm reduced integration timelines from two weeks to four days using Integration Advisor, improving supplier order accuracy.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Best Practices for Success&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class=""&gt;&lt;LI&gt;&lt;P&gt;Use Standard Libraries: Leverage metadata for accurate MIGs.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Validate Early: Test mappings with sample data to catch issues.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Collaborate: Share MIGs and MAGs for stakeholder alignment.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Monitor iFlows: Use SAP CPI’s tools to optimize performance and troubleshoot errors.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-948089765"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;SAP CPI’s Integration Advisor, with its AI-driven capabilities, revolutionizes B2B connectivity by simplifying EDI-to-IDoc transformations. By automating mappings, reducing errors, and enabling seamless iFlow integration, it empowers enterprises to achieve operational excellence. Integration professionals should harness Integration Advisor and SAP CPI iFlows to streamline workflows and drive competitive advantage.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/streamlining-b2b-integration-with-ai-powered-sap-cpi-accelerating-data/ba-p/14143578"/>
    <published>2025-07-14T16:07:13.979000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/automating-iflow-documentation-with-sap-integration-suite-and-gemini-ai/ba-p/14153802</id>
    <title>Automating iFlow Documentation with SAP Integration Suite and Gemini AI</title>
    <updated>2025-07-18T14:27:58.950000+02:00</updated>
    <author>
      <name>Andrew-Fawzy</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1691795</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1735069966"&gt;&lt;STRONG&gt;🧭 Introduction&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;Documenting integration flows in &lt;STRONG&gt;SAP Cloud Platform Integration (CPI)&lt;/STRONG&gt; is a critical but often tedious task. Manual documentation is time-consuming, error-prone, and difficult to maintain—especially in dynamic environments where iFlows evolve frequently.&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;To address this, an automated documentation generator was developed, that utilizes the OData APIs from SAP Integration Suite in combination with Gemini AI. This solution dynamically extracts iFlow metadata and resources, processes them into a structured format, and sends them to Gemini AI to generate a comprehensive technical specification document. The result is a scalable, secure, and intelligent system that can document any iFlow in a subaccount on-demand or on a schedule.&lt;/P&gt;&lt;H2 id="toc-hId-1538556461"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":building_construction:"&gt;🏗&lt;/span&gt;️ Architectural Overview&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;The architecture orchestrates several components of the SAP Integration Suite and Gemini AI to automate the documentation process. Below is a visual representation of the architecture:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_0-1752743318104.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287775iB0732AD96CF5304B/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_0-1752743318104.png" alt="AndrewFawzy_0-1752743318104.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1471125675"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":repeat_button:"&gt;🔁&lt;/span&gt;CPI Integration Flow (iFlow)&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;At the heart of the solution is a &lt;STRONG&gt;CPI Integration Flow&lt;/STRONG&gt; that orchestrates the entire automation. This iFlow can be triggered:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Periodically&lt;/STRONG&gt; (e.g., every Week)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;On-demand&lt;/STRONG&gt; (via manual or external trigger)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The iFlow performs the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Retrieves iFlow metadata and resources&lt;/LI&gt;&lt;LI&gt;Prepares and formats the data&lt;/LI&gt;&lt;LI&gt;Sends it to Gemini AI&lt;/LI&gt;&lt;LI&gt;Stores the generated documentation in a Datastore&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1274612170"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;Accessing SAP Integration Suite OData APIs&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The iFlow uses &lt;STRONG&gt;OData APIs&lt;/STRONG&gt; exposed by the SAP Integration Suite to access:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;iFlow Metadata&lt;/STRONG&gt; (design-time artifacts)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Resources&lt;/STRONG&gt; such as:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Groovy scripts&lt;/LI&gt;&lt;LI&gt;XSLT mappings&lt;/LI&gt;&lt;LI&gt;EDMX schemas&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;You could try out those endpoints here: &lt;/STRONG&gt;&lt;A href="https://api.sap.com/api/IntegrationContent/tryout" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Business Accelerator Hub&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1207181384"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;Authentication&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;The iFlow uses &lt;STRONG&gt;OAuth2 client credentials&lt;/STRONG&gt; to authenticate against the &lt;STRONG&gt;SAP BTP XSUAA service&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;A &lt;STRONG&gt;Process Integration Runtime (PIR)&lt;/STRONG&gt; service instance is bound to the subaccount.&lt;/LI&gt;&lt;LI&gt;Oauth Client Credential is created in the Security Materials.&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1010667879"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;SAP CPI Odata Interfaces&lt;/STRONG&gt;&lt;/H4&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;iFlow Metadata&lt;/STRONG&gt;: {{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='{Id}',Version='{Version}')/$value&lt;UL&gt;&lt;LI&gt;Returns a Zip folder containing the flow's configuration file, ".iflw" file.&lt;/LI&gt;&lt;LI&gt;The retrieved data includes:&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Flow Steps&lt;/STRONG&gt;: Activities like Router, Content Modifier, Join, Splitter, Gather, etc.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Sequence Flows&lt;/STRONG&gt;: Logical connections between steps&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Metadata&lt;/STRONG&gt;: Flow name, version, and other properties&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Resource List&lt;/STRONG&gt;: {{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='{Id}',Version='{Version}')/Resources&lt;UL&gt;&lt;LI&gt;This endpoint returns a list including all resources utilized within the IFlow&lt;/LI&gt;&lt;LI&gt;The retrieved data includes resources such as Groovy scripts, XSLT mappings, EDMX files.&lt;/LI&gt;&lt;LI&gt;Sample Request:&amp;nbsp;&amp;nbsp;&lt;A href="https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;UL&gt;&lt;LI&gt;Sample Response:&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt; &amp;lt;?xml version='1.0' encoding='utf-8'?&amp;gt;
&amp;lt;feed xmlns="http://www.w3.org/2005/Atom" xmlns:m="http://schemas.microsoft.com/ado/2007/08/dataservices/metadata" xmlns:d="http://schemas.microsoft.com/ado/2007/08/dataservices" xml:base="https://sandbox.api.sap.com:9006/cpi/api/v1/"&amp;gt;
    &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources&amp;lt;/id&amp;gt;
    &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
    &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
    &amp;lt;author&amp;gt;
        &amp;lt;name/&amp;gt;
    &amp;lt;/author&amp;gt;
    &amp;lt;link href="Resources" rel="self" title="Resources"/&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='eDocPeruInvoiceTransmissionSimplified.wsdl',ResourceType='wsdl')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;eDocPeruInvoiceTransmissionSimplified.wsdl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;wsdl&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType&amp;gt;wsdl&amp;lt;/d:ReferencedResourceType&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;3307&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='billServiceFlat.wsdl',ResourceType='wsdl')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;billServiceFlat.wsdl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;wsdl&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType&amp;gt;wsdl&amp;lt;/d:ReferencedResourceType&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4992&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='PipelineNominationModify.xsd',ResourceType='xsd')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;PipelineNominationModify.xsd&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;xsd&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType&amp;gt;wsdl&amp;lt;/d:ReferencedResourceType&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4235&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='AddExtensionContent.xsl',ResourceType='xslt')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;AddExtensionContent.xsl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;xslt&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;1850&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='AddSignatureInfo.xsl',ResourceType='xslt')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;AddSignatureInfo.xsl&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;xslt&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;2006&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='ApplicationResponseAccepted.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;ApplicationResponseAccepted.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4428&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='Boleta.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='Boleta.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='Boleta.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='Boleta.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;Boleta.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;11088&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='ApplicationResponseRejected.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;ApplicationResponseRejected.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;4350&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='Invoice.xml',ResourceType='edmx')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='Invoice.xml',ResourceType='edmx')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='Invoice.xml',ResourceType='edmx')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='Invoice.xml',ResourceType='edmx')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;Invoice.xml&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;edmx&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;13667&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
    &amp;lt;entry&amp;gt;
        &amp;lt;id&amp;gt;https://sandbox.api.sap.com:9006/cpi/api/v1/Resources(Name='unzip.gsh',ResourceType='groovy')&amp;lt;/id&amp;gt;
        &amp;lt;title type="text"&amp;gt;Resources&amp;lt;/title&amp;gt;
        &amp;lt;updated&amp;gt;2025-07-15T07:57:50.251Z&amp;lt;/updated&amp;gt;
        &amp;lt;category term="com.sap.hci.api.Resource" scheme="http://schemas.microsoft.com/ado/2007/08/dataservices/scheme"/&amp;gt;
        &amp;lt;link href="Resources(Name='unzip.gsh',ResourceType='groovy')" rel="edit" title="Resource"/&amp;gt;
        &amp;lt;link href="Resources(Name='unzip.gsh',ResourceType='groovy')/$value" rel="edit-media" type="application/octet-stream"/&amp;gt;
        &amp;lt;content type="application/octet-stream" src="Resources(Name='unzip.gsh',ResourceType='groovy')/$value"/&amp;gt;
        &amp;lt;m:properties&amp;gt;
            &amp;lt;d:Name&amp;gt;unzip.gsh&amp;lt;/d:Name&amp;gt;
            &amp;lt;d:ResourceType&amp;gt;groovy&amp;lt;/d:ResourceType&amp;gt;
            &amp;lt;d:ReferencedResourceType m:null="true"/&amp;gt;
            &amp;lt;d:ResourceSize&amp;gt;825&amp;lt;/d:ResourceSize&amp;gt;
            &amp;lt;d:ResourceSizeUnit&amp;gt;Bytes&amp;lt;/d:ResourceSizeUnit&amp;gt;
            &amp;lt;d:ResourceContent m:null="true"/&amp;gt;
        &amp;lt;/m:properties&amp;gt;
    &amp;lt;/entry&amp;gt;
&amp;lt;/feed&amp;gt;​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Individual Resource Content&lt;/STRONG&gt;: /IntegrationDesigntimeArtifacts(Id='{Id}',Version='active')/Resources(Name='{Name}',ResourceType='{Type}')/$value&lt;UL&gt;&lt;LI&gt;This endpoint returns the value of the resource specified in the URL.&lt;/LI&gt;&lt;LI&gt;Sample Request:&amp;nbsp;&lt;A href="https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources(Name=unzip.gsh,ResourceType=groovy)/$value" target="_blank" rel="noopener noreferrer"&gt;https://sandbox.api.sap.com/cpi/api/v1/IntegrationDesigntimeArtifacts(Id=IntegrationFlowWithConfiguration,Version=active)/Resources(Name=unzip.gsh,ResourceType=groovy)/$value"&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;Sample Response:&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
import java.util.HashMap;
import java.util.zip.ZipEntry;

def Message processData(Message message) {
	
	def body = message.getBody(InputStream.class);
	def zipStream = new java.util.zip.ZipInputStream(body);
	def stringBuffer = new StringBuffer();

	ZipEntry entry=zipStream.getNextEntry();
    byte[] buf=new byte[1024];
    while (entry != null) {
      if (entry.getName().endsWith(".xml")) {
        ByteArrayOutputStream out=new ByteArrayOutputStream();
        int n;
        while ((n=zipStream.read(buf,0,1024)) &amp;gt; -1) {
          out.write(buf,0,n);
        }
       	message.setBody(new String(out.toByteArray()));
      	break;
      }
      zipStream.closeEntry();
      entry=zipStream.getNextEntry();
    }

	return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;🧹 Pre-processing for Gemini AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before sending the data to Gemini AI, the iFlow performs several pre-processing steps:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧩 Structuring the Input&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The metadata and resources are wrapped in XML under &amp;lt;Resources&amp;gt; and &amp;lt;FlowSteps&amp;gt; tags.&lt;/LI&gt;&lt;LI&gt;The entire structure is &lt;STRONG&gt;Base64 encoded&lt;/STRONG&gt; to ensure safe transmission.&lt;/LI&gt;&lt;LI&gt;The encoded data is embedded in a &lt;STRONG&gt;JSON payload&lt;/STRONG&gt; with system instructions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;🧠 Instruction Format&lt;/STRONG&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "system_instruction": {
    "parts": [
      {
        "text": "You are an SAP CPI Developer... create a technical specification document."
      }
    ]
  },
  "contents": [
    {
      "parts": [
        {
          "inline_data": {
            "mime_type": "text/plain",
            "data": "${property.Base64Body}"
          }
        },
        {
          "text": "Here is the configuration... provide a detailed explanation..."
        }
      ]
    }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":robot_face:"&gt;🤖&lt;/span&gt;Sending to Gemini AI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The structured payload is sent to &lt;STRONG&gt;Gemini AI&lt;/STRONG&gt; using its REST API:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;API Call&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Endpoint&lt;/STRONG&gt;: &lt;A href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" target="_blank" rel="noopener nofollow noreferrer"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Method&lt;/STRONG&gt;: POST&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authorization:&amp;nbsp;x-goog-api-key added to request's headers&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers&lt;/STRONG&gt;:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Content-Type: application/json&lt;/LI&gt;&lt;LI&gt;x-goog-api-key: {{Gemini_API_Key}}&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;For more information regarding Gemini APIs check &lt;A href="https://ai.google.dev/gemini-api/docs" target="_blank" rel="noopener nofollow noreferrer"&gt;Gemini Api Documentation.&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Sample Request Body:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "contents": [
      {
        "parts": [
          {
            "text": "How does AI work?"
          }
        ]
      }
    ]
  }&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Sample Response:&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "candidates": [
    {
      "content": {
        "parts": [
          {
            "text": "AI, or Artificial Intelligence, is a broad field of computer science that aims to create machines that can perform tasks that typically require human intelligence. This includes things like learning, problem-solving, decision-making, understanding language, recognizing patterns, and even creativity.\n\nWhile \"AI\" can encompass many approaches, the dominant paradigm today is **Machine Learning (ML)**, and more specifically, **Deep Learning (DL)**. Here's a simplified breakdown of how it generally works:\n\n### The Core Ingredients of AI (especially Machine Learning)\n\n1.  **Data:** This is the \"fuel\" for AI. AI systems learn from vast amounts of data, much like humans learn from experience. This data can be anything:\n    *   **Labeled Data:** Images with descriptions (\"cat,\" \"dog\"), text with sentiment (\"positive,\" \"negative\"), or numerical tables with outcomes. This is used for **supervised learning**.\n    *   **Unlabeled Data:** Just raw images, text, or numbers without specific tags. This is used for **unsupervised learning** (finding patterns) or **reinforcement learning** (trial and error).\n\n2.  **Algorithms:** These are the \"recipes\" or \"instructions\" that the AI uses to learn from the data and make decisions. They are mathematical models and computational procedures. Examples include:\n    *   **Neural Networks:** Inspired by the human brain, these are layers of interconnected \"neurons\" that process information. Deep Learning uses *many* layers.\n    *   **Decision Trees:** Flowchart-like structures for making decisions.\n    *   **Regression Models:** Used for predicting continuous values (e.g., house prices).\n    *   **Clustering Algorithms:** Grouping similar data points together.\n\n3.  **Computing Power:** Training complex AI models, especially deep learning ones, requires immense computational resources.\n    *   **GPUs (Graphics Processing Units):** These are particularly good at parallel processing, making them ideal for the heavy mathematical computations involved in training neural networks.\n    *   **Cloud Computing:** Services like AWS, Google Cloud, and Azure provide scalable computing power for AI development.\n\n### How AI Learns (The Process)\n\nLet's use a common example: training an AI to recognize cats in photos.\n\n1.  **Data Collection &amp;amp; Preparation:**\n    *   You gather thousands, even millions, of images.\n    *   For supervised learning, you label each image: \"This is a cat,\" \"This is a dog,\" \"This is a car.\" This creates the dataset.\n\n2.  **Model Training (The Learning Phase):**\n    *   You feed this labeled dataset into a chosen algorithm (e.g., a deep neural network).\n    *   The algorithm starts by making random \"guesses\" about what constitutes a cat.\n    *   It then compares its guesses to the actual labels. If it misidentifies a cat as a dog, it incurs an \"error\" or \"loss.\"\n    *   Through a process called **backpropagation** (in neural networks), the algorithm adjusts its internal parameters (like the \"weights\" and \"biases\" of the connections between neurons) slightly to reduce that error.\n    *   This process is repeated thousands or millions of times, with the algorithm continuously refining its internal understanding of what patterns correlate to \"cat-ness.\"\n    *   Essentially, it learns to identify specific features (e.g., pointed ears, whiskers, specific fur patterns) and combine them to accurately classify an image as a \"cat.\"\n\n3.  **Model Evaluation:**\n    *   After training, the model is tested on a *separate* set of data it has never seen before (the \"test set\"). This ensures it has truly learned and isn't just memorizing the training data.\n    *   Its performance is measured by metrics like accuracy, precision, and recall.\n\n4.  **Inference (Prediction/Deployment):**\n    *   Once the model is trained and evaluated, it's ready for use.\n    *   When you feed a *new, unseen* image to the trained AI model, it applies the patterns it learned during training to predict whether the image contains a cat, dog, or something else. This prediction is usually very fast.\n\n### Key Branches and Concepts in AI\n\n*   **Machine Learning (ML):** The core idea is that computers learn from data without being explicitly programmed for every possible scenario.\n    *   **Supervised Learning:** Learning from labeled examples (e.g., predicting house prices based on features and past sales data).\n    *   **Unsupervised Learning:** Finding hidden patterns or structures in unlabeled data (e.g., segmenting customers into groups based on their purchasing behavior).\n    *   **Reinforcement Learning:** An agent learns by interacting with an environment, receiving rewards for good actions and penalties for bad ones (e.g., training an AI to play chess or control a robot).\n\n*   **Deep Learning (DL):** A *subset* of Machine Learning that uses Artificial Neural Networks with many layers (\"deep\" networks). This has been particularly successful in tasks like image recognition, natural language processing, and speech recognition due to its ability to learn complex patterns directly from raw data.\n\n*   **Natural Language Processing (NLP):** Enables computers to understand, interpret, generate, and manipulate human language (e.g., chatbots, translation services, spam filters).\n\n*   **Computer Vision (CV):** Allows computers to \"see\" and interpret visual information from images and videos (e.g., facial recognition, self-driving cars, medical image analysis).\n\n*   **Robotics:** Involves the design, construction, operation, and use of robots. AI often powers the \"brain\" of robots, enabling them to perceive their environment, navigate, and make decisions.\n\n### In Summary:\n\nAI, especially through Machine Learning and Deep Learning, works by providing algorithms with massive amounts of data. These algorithms then learn complex patterns and relationships within that data. Once trained, they can apply this learned \"knowledge\" to new, unseen data to make predictions, classify information, generate content, or make decisions, effectively mimicking aspects of human intelligence."
          }
        ],
        "role": "model"
      },
      "finishReason": "STOP",
      "index": 0
    }
  ],
  "usageMetadata": {
    "promptTokenCount": 5,
    "candidatesTokenCount": 1294,
    "totalTokenCount": 2777,
    "promptTokensDetails": [
      {
        "modality": "TEXT",
        "tokenCount": 5
      }
    ],
    "thoughtsTokenCount": 1478
  },
  "modelVersion": "gemini-2.5-flash",
  "responseId": "w1234"
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":inbox_tray:"&gt;📥&lt;/span&gt;Handling the Response&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The response contains a &lt;STRONG&gt;text block&lt;/STRONG&gt; with the generated documentation.&lt;/LI&gt;&lt;LI&gt;The iFlow uses &lt;STRONG&gt;XPath&lt;/STRONG&gt; and &lt;STRONG&gt;Content Modifier&lt;/STRONG&gt; steps to extract the relevant content.&lt;/LI&gt;&lt;LI&gt;The final output is stored for future access.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":floppy_disk:"&gt;💾&lt;/span&gt;Output Storage&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The AI-generated documentation is stored in a &lt;STRONG&gt;data store&lt;/STRONG&gt;, which can be:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;CPI’s internal datastore&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;External database&lt;/STRONG&gt; (e.g., SAP HANA, PostgreSQL)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This allows teams to retrieve and review documentation at any time.&lt;/P&gt;&lt;H2 id="toc-hId-555988936"&gt;&lt;STRONG&gt;Step-by-Step guide on how to Implement&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;FONT color="#FF0000"&gt;&lt;STRONG&gt;N.B: Please Externalize all Parameters, URLs, and Keys when possible to avoid exposing them to AI model.&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;The Integration flow is divided into 4 processes:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-07-14 130552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287231i357C30DBC6651B85/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-07-14 130552.png" alt="Screenshot 2025-07-14 130552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-488558150"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="toc-hId-292044645"&gt;1. Main Integration Process:&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_3-1752658031249.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287187i4FBB14A042CCBD2E/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_3-1752658031249.png" alt="AndrewFawzy_3-1752658031249.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Steps:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. Timer Start:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The flow runs once deployed&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AndrewFawzy_4-1752658031250.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287186iE1DACAA15E3AFF47/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_4-1752658031250.png" alt="AndrewFawzy_4-1752658031250.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Set Parameters:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Both Flow name &lt;FONT color="#FF0000"&gt;represented by its ID&lt;/FONT&gt; and flow version of the flow that we want to create a TSD for are specified, additionally ExceptionLogging property is set to yes if we want to log error details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_5-1752658031259.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287188iCB2D99329E744FCD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_5-1752658031259.png" alt="AndrewFawzy_5-1752658031259.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="25%"&gt;Property Name&lt;/TD&gt;&lt;TD width="25%"&gt;Source Type&lt;/TD&gt;&lt;TD width="25%"&gt;Value&lt;/TD&gt;&lt;TD width="25%"&gt;Description&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;FlowName&lt;/TD&gt;&lt;TD width="25%"&gt;Constant&lt;/TD&gt;&lt;TD width="25%"&gt;{{Flow_ID}}&lt;/TD&gt;&lt;TD width="25%"&gt;Specify Flow ID&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;FlowVersion&lt;/TD&gt;&lt;TD width="25%"&gt;Constant&lt;/TD&gt;&lt;TD width="25%"&gt;{{Flow_Version}}&lt;/TD&gt;&lt;TD width="25%"&gt;Specify Flow Version&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="25%"&gt;ExceptionLogging&lt;/TD&gt;&lt;TD width="25%"&gt;Constant&lt;/TD&gt;&lt;TD width="25%"&gt;{{logException}}&lt;/TD&gt;&lt;TD width="25%"&gt;use Yes if you want to log exceptions&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Parallel multicast:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A parallel multicast is used to execute the local integration processes "Get Flow Resources" and "Get Flow Steps" at the same time.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_6-1752658031262.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287189i08A41E1C6E205717/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_6-1752658031262.png" alt="AndrewFawzy_6-1752658031262.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. Process Calls and Gather&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Each of the parallel branches includes a Process Call component to Call the local Integration Processes.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_7-1752658031267.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287191i2820B964135D8694/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_7-1752658031267.png" alt="AndrewFawzy_7-1752658031267.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_8-1752658031274.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287190i5ACE37CADD382BAD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_8-1752658031274.png" alt="AndrewFawzy_8-1752658031274.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. Join and Gather&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A join component is used to bring the messages from different routes into a single one, and the gather aggregates the different payloads into a single payload.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_9-1752658031280.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287192iBE8282596EC1B585/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_9-1752658031280.png" alt="AndrewFawzy_9-1752658031280.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6. Gemini AI process Call:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The returned response from the previous Process Calls is sent to the Gemini AI Process call for further processing and sending to Gemini AI.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_10-1752658031285.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287193i53E96F9204F06A18/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_10-1752658031285.png" alt="AndrewFawzy_10-1752658031285.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;7. Save response:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A Datastore is used to saves the response returned by the Gemini Process Call, it sets the ID of the message to the name of the IFlow.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_11-1752658031293.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287194i49F29CEFD1539432/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_11-1752658031293.png" alt="AndrewFawzy_11-1752658031293.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;8. Exception Handling:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;An exception subprocess is added to all Local Integration processes to handle exceptions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_12-1752658031294.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287195i7D205EDF4C5E57A3/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_12-1752658031294.png" alt="AndrewFawzy_12-1752658031294.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
def Message processData(Message message) {
  // get a map of properties
  def map = message.getProperties();
  def body = message.getBody(java.lang.String) as String;
  // get an exception java class instance
  def ex = map.get("CamelExceptionCaught");
  def exceptionLogging = map.get("ExceptionLogging");
  if (exceptionLogging != null &amp;amp;&amp;amp; exceptionLogging == "Yes" &amp;amp;&amp;amp; ex != null) {
    def messageLog = messageLogFactory.getMessageLog(message);
    messageLog.addAttachmentAsString("Exception Body ", body, "text/plain");
    // an http adapter throws an instance of
    // org.apache.camel.component.ahc.AhcOperationFailedException
    if (ex.getClass().getCanonicalName().equals(
            "org.apache.camel.component.ahc.AhcOperationFailedException")) {
      // save the http error response as a message attachment
      messageLog.addAttachmentAsString(
          "http.ResponseBody", ex.getResponseBody(), "text/plain");
      // copy the http error response to an exchange property
      message.setProperty("http.ResponseBody", ex.getResponseBody());
      // copy the http error response to the message body
      message.setBody(ex.getResponseBody());
      // copy the value of http error code (i.e. 500) to a property
      message.setProperty("http.StatusCode", ex.getStatusCode());
      // copy the value of http error text (i.e. "Internal Server Error") to a
      // property
      message.setProperty("http.StatusText", ex.getStatusText());
    }
  }
  return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-95531140"&gt;2. Get Flow Steps&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_13-1752658031297.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287196iD36B21CB0E99AE90/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_13-1752658031297.png" alt="AndrewFawzy_13-1752658031297.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. Get Flow Configuration File:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;GET&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;/STRONG&gt;{{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/$value&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt; Client Secret Credential&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating the Oauth 2.0 client secret credential please follow this &lt;A href="https://www.abusinesstech.com/post/understanding-oauth2-client-credentials-in-sap-cpi" target="_blank" rel="noopener nofollow noreferrer"&gt;Post&lt;/A&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_14-1752658031303.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287197i1C1B402E73F37CE4/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_14-1752658031303.png" alt="AndrewFawzy_14-1752658031303.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Zip Splitter:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Zip splitter is used to iterate on the files within the zip file returned by the previous step and selects only the Flow Configuration File based on the file name pattern “.iflw”&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_15-1752658031308.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287198i2B92D0ED0FC6CFDD/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_15-1752658031308.png" alt="AndrewFawzy_15-1752658031308.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Remove Namespace XSLT&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This step is used to remove unwanted namespaces from the IFlow's configuration file using xslt mapping file&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_16-1752658031314.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287200i7AAB520CC8C36111/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_16-1752658031314.png" alt="AndrewFawzy_16-1752658031314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Code:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;&amp;lt;xsl:output method="xml" version="1.0" encoding="UTF-8" /&amp;gt;

        &amp;lt;xsl:template match="*"&amp;gt;

                &amp;lt;xsl:element name="{local-name()}" &amp;gt;

                        &amp;lt;xsl:apply-templates select="@* | node()"/&amp;gt;

                &amp;lt;/xsl:element&amp;gt;

        &amp;lt;/xsl:template&amp;gt;

&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. XML Modifier&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Remove xml declaration and external DTDs&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_17-1752658031318.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287199i20F540AA7DE77221/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_17-1752658031318.png" alt="AndrewFawzy_17-1752658031318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. Zip Splitter Gather:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A gather is used to aggregate the payloads from the zip splitter into a single payload.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_18-1752658031321.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287201i7B7AC3B53B6D07A4/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_18-1752658031321.png" alt="AndrewFawzy_18-1752658031321.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--176213734"&gt;3. Get Flow Resources&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_19-1752658031324.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287202i8CF46D06728768CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_19-1752658031324.png" alt="AndrewFawzy_19-1752658031324.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1.Get Resources List:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;GET&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;/STRONG&gt;{{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt; Client Secret Credential&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating the Oauth 2.0 client secret credential please follow this &lt;A href="https://www.abusinesstech.com/post/understanding-oauth2-client-credentials-in-sap-cpi" target="_blank" rel="noopener nofollow noreferrer"&gt;Post&lt;/A&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_20-1752658031333.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287203i84CB38555C7DDB7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_20-1752658031333.png" alt="AndrewFawzy_20-1752658031333.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Remove Namespaces&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This step is used to remove unwanted namespaces from the IFlow's configuration file using xslt mapping file&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_21-1752658031337.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287204iCEBBFBF255098C87/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_21-1752658031337.png" alt="AndrewFawzy_21-1752658031337.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;XSLT :&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:stylesheet version="1.0" xmlns:xsl="http://www.w3.org/1999/XSL/Transform"&amp;gt;&amp;lt;xsl:output method="xml" version="1.0" encoding="UTF-8" /&amp;gt;

        &amp;lt;xsl:template match="*"&amp;gt;

                &amp;lt;xsl:element name="{local-name()}" &amp;gt;

                        &amp;lt;xsl:apply-templates select="@* | node()"/&amp;gt;

                &amp;lt;/xsl:element&amp;gt;

        &amp;lt;/xsl:template&amp;gt;

&amp;lt;/xsl:stylesheet&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Iterate over Returned Resource List&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;General splitter is used to iterate over resources using xpath '//entry' as each resource is enclosed with "entry" XML tag as shown in the sample request mentioned in the "Endpoints Section".&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_22-1752658031342.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287205iE1992D7C51232DC0/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_22-1752658031342.png" alt="AndrewFawzy_22-1752658031342.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. Extract Resource name and&amp;nbsp; Resource type&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Those values are extracted to be used in retrieving the resource in subsequent step using Xpaths.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_23-1752658031348.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287206i96D937DDF4D3301B/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_23-1752658031348.png" alt="AndrewFawzy_23-1752658031348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Exchange Properties:&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Source Value&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;&lt;STRONG&gt;Data Type&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Name&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;//Name&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;java.lang.String&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;ResourceType&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;//ResourceType&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;java.lang.String&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;Url&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;//entryId&lt;/TD&gt;&lt;TD width="33.333333333333336%" height="30px"&gt;java.lang.String&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. Get single resource value&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;GET&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;/STRONG&gt;{{CPI_Tenant_URL}}/IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources(Name='${property.Name}',ResourceType='${property.ResourceType}')/$value&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt; Client Secret Credential&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating the Oauth 2.0 client secret credential please follow this &lt;A href="https://www.abusinesstech.com/post/understanding-oauth2-client-credentials-in-sap-cpi" target="_blank" rel="noopener nofollow noreferrer"&gt;Post&lt;/A&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_24-1752658031356.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287208i7FE1CA60DF35C987/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_24-1752658031356.png" alt="AndrewFawzy_24-1752658031356.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6. Set Resource body by enclosing the resource value by its name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_25-1752658031363.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287207i4DDF6E142EE11C6F/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_25-1752658031363.png" alt="AndrewFawzy_25-1752658031363.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;${property.Name}&amp;gt;
    ${in.body}
&amp;lt;/${property.Name}&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;7. Gather Resources:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A gather step is used to aggregate all retrieved resources into a single payload.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_26-1752658031369.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287209iFDF961ED8C258226/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_26-1752658031369.png" alt="AndrewFawzy_26-1752658031369.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;8. Content Modifier:&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;A content modifier is used to add XML tags for Gemini to identify the resources.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_27-1752658031377.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287210iD9D9B8AE86771B32/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_27-1752658031377.png" alt="AndrewFawzy_27-1752658031377.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Sample:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Resources&amp;gt;
    ${in.body}
&amp;lt;/Resources&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--372727239"&gt;&amp;nbsp;4. Gemini AI utilization&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_28-1752658031382.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287211i0336D1ACBF34E113/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_28-1752658031382.png" alt="AndrewFawzy_28-1752658031382.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. Base-64 Encoding Step:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The XML message constructed at the previous step is encoded using 64-Base to be sent to the AI model as plain text.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_29-1752658031389.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287212i32862DA1C62E50E0/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_29-1752658031389.png" alt="AndrewFawzy_29-1752658031389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. Formatting Body&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Remove unwanted characters Remove new lines, and carriage return&lt;/P&gt;&lt;P&gt;Code:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
 def Message processData(Message message) {
     def body = message.getBody(String);
     String backspace = '\n' as char;
     String enter = '\r' as char;
     body = body.replace(backspace, "");
     body = body.trim();
     body = body.replace(enter, "");
     body = body.trim();
     message.setBody(body);
    return message;
 }&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;3. Add headers and Create body&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Creates the JSON structure payload that is send to the Gemini AI API to generate the documentation and adds a Message Header "Content-Type" with value "application/json".&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;STRONG&gt;For more information regarding Gemini APIs check &lt;A href="https://ai.google.dev/gemini-api/docs" target="_blank" rel="noopener nofollow noreferrer"&gt;Gemini Api Documentation.&lt;/A&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_32-1752658031419.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287215i69A1A98D8EF323AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_32-1752658031419.png" alt="AndrewFawzy_32-1752658031419.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Body set to &lt;STRONG&gt;Expression&lt;/STRONG&gt;:&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "system_instruction": {
      "parts": [
        {
          "text": "You are an SAP CPI Developer, your main role is to get SAP CPI Iflows configuration and form them create a technical specification document."
        }
      ]
    },
    "contents": [
      {
        "parts": [
          {"inline_data": {"mime_type": "text/plain", "data": "${property.Base64Body}" } },
          {"text": "Here is the configurations create a Tsd providing a detailed explanation on what this iflow does and steps involved and documentation of scripts and mappings, you will find in the text the following an xml tag definition this includes the flow steps and another tag Resources which includes all scripts, mappings used are attached"}
        ]
      }
    ]
  }&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;4. POST&amp;nbsp; request to Gemini API&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Method:&amp;nbsp; &lt;/STRONG&gt;POST&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Address:&amp;nbsp;&lt;SPAN&gt;&lt;A class="" title="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generatecontent" href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent" target="_blank" rel="noreferrer noopener nofollow"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.5-flash:generateContent&lt;/A&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&amp;nbsp;added as a request header "x-goog-api-key"&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Headers:&amp;nbsp;&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Content-Type: &lt;/STRONG&gt;application/json&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;x-goog-api-key:&amp;nbsp;&lt;/STRONG&gt;{{Gemini_API_Key}}&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;For creating your api key follow this &lt;A href="https://ai.google.dev/gemini-api/docs/api-key#rest" target="_blank" rel="noopener nofollow noreferrer"&gt;Gemini API Key.&lt;/A&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_0-1752742358554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287757iD277BA304E767DAB/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_0-1752742358554.png" alt="AndrewFawzy_0-1752742358554.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;5. JSON to XML Converter&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This step is used to convert the JSON body to XML to be able to extract response using Xpath.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_34-1752658031435.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287217i94B5BA86159EB427/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_34-1752658031435.png" alt="AndrewFawzy_34-1752658031435.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6. Extract documentation from Payload:&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Xpath is used to extract the response from the payload and stored in an Exchange Property "response" and within the same content modifier the body is set to ${property.response}&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_35-1752658031448.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287218i7AD708E7728D22BA/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_35-1752658031448.png" alt="AndrewFawzy_35-1752658031448.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="AndrewFawzy_36-1752658031455.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287219iFE52EE4FD6916893/image-size/large?v=v2&amp;amp;px=999" role="button" title="AndrewFawzy_36-1752658031455.png" alt="AndrewFawzy_36-1752658031455.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId--569240744"&gt;Deployment and Document Generation&lt;/H3&gt;&lt;P&gt;The Flow was deployed setting the Parameters to flow name and version of this IFlow.&lt;/P&gt;&lt;P&gt;Here was the response saved to the DataStore:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;Technical Specification Document: CPI Iflow - Gemini AI Integration for Technical Documentation
1. Introduction

This document outlines the technical specifications for a CPI (Cloud Platform Integration) iflow designed to automatically generate technical specification documents (TSD) from CPI iflow configurations. This iflow leverages the Gemini AI model for natural language processing and document generation.

2. Iflow Overview

The iflow automates the process of extracting iflow configuration and resources, sending them to the Gemini AI model, and receiving a generated TSD as output. The process comprises the following steps:

Triggering: A timer-based start event initiates the process at regular intervals.
Configuration Retrieval: Configuration details of the Iflow including FlowSteps and Resources like scripts and mappings are retrieved.
Data Transformation: The configurations are extracted and unwanted namespace are removed.
AI Processing: The configuration data is sent to Gemini AI model to generate the TSD based on the configurations
TSD Storage: The generated TSD is stored in a datastore.
3. Flow Steps

The iflow is structured into several interconnected integration processes and flow steps.

3.1 Main Integration Process (Process_1Integration Process)

StartEvent_4 (Start Timer):
Type: Timer Start Event
Description: Initiates the iflow execution based on a defined schedule.
Schedule: The process is scheduled to run every 5 minutes
CallActivity_30439543 (Set Parameters):
Type: Content Enricher
Description: Sets the properties ExceptionLogging, FlowVersion, and FlowName for the iflow. These properties are used in the subsequent steps for retrieving the iflow configuration and resources.
Properties:
ExceptionLogging: Set to {{ExceptionLogging}} (presumably a value defined in an externalized parameter). It controls the exception handling of Iflow.
FlowVersion: Set to {{FlowVersion}} (presumably a value defined in an externalized parameter). The version of the Iflow to retrieve.
FlowName: Set to {{FlowName}} (presumably a value defined in an externalized parameter). The name of the Iflow to retrieve.
ParallelGateway_30439597 (Parallel Multicast):
Type: Parallel Multicast
Description: Splits the process into two parallel branches to retrieve flow steps and flow resources concurrently.
Branch 1: Get Flow Steps
CallActivity_30439599 (Get Flow Steps):
Type: Process Call (Non-Looping Process)
Description: Calls the Process_30439551 local integration process to retrieve the flow steps configuration.
Branch 2: Get Flow Resources
CallActivity_30439601 (Get Flow Resources):
Type: Process Call (Non-Looping Process)
Description: Calls the Process_30439570 local integration process to retrieve the iflow's resources (scripts, mappings).
ParallelGateway_30439539 (Join):
Type: Join
Description: Waits for both parallel branches (Get Flow Steps and Get Flow Resources) to complete before merging the results.
CallActivity_30439533 (Gather flow and resources):
Type: Gather
Description: Combines the results from the two parallel branches (flow steps configuration and resources).
CallActivity_30439650 (Gemini AI):
Type: Process Call (Non-Looping Process)
Description: calls Process_30439625 Gemini AI processing to create the TSD based on the gathered Iflow definitions and Iflow Resource configurations
CallActivity_30439545 (Save Response to DataStore):
Type: Data Store Operations (Put)
Description: Saves the Gemini AI processing output (TSD) to a datastore named IflowDocumentation.
Configuration:
StorageName: IflowDocumentation
messageId: ${property.FlowName}Doc (Unique identifier for the datastore entry)
expire: 30 (Retention period in days)
visibility: local(available only to the current iflow)
EndEvent_2 (End):
Type: Message End Event
Description: Ends the iflow execution.
3.2 Get Flow Steps (Process_30439551)

StartEvent_30439552 (Start):
Type: Start Event
Description: The process is triggered from Main Integration process by calling the Process ID
ServiceTask_30439555 (GetFlow):
Type: External Call (HTTP)
Description: Retrieves Iflow Definitions, version, and ID from CPI OData API (IntegrationDesigntimeArtifacts).
Address: {{CPI_Tenant_URL}}IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/$value
Authentication: Client Secret Authentication using {{CPI_OAuth_Cred}} credential.
CallActivity_30439556 (Zip Splitter):
Type: Splitter (Zip Splitter)
Description: Splits the retrieved .iflw file content into individual entries, assuming the content comes as a zipped file.
CallActivity_30439557 (Remove Namespaces):
Type: Mapping
Description: Removes unnecessary XML namespaces from the XML structure using XSLTMapping1.xsl.
CallActivity_30439558 (XML Modifier):
Type: XML Modifier
Description: Further modifies the XML by removing external DTDs and XML declarations to clean the XML structure.
CallActivity_30439560 (Zip Splitter Gather):
Type: Gather
Description: Concatenates the split files into a single message body.
EndEvent_30439553 (End):
Type: End Event
Description: Completes the local integration process
3.3 Get Flow Resources (Process_30439570)

StartEvent_30439571 (Start):
Type: Start Event
Description: The process is triggered from Main Integration process by calling the Process ID
ServiceTask_30439574 (Get Resources):
Type: External Call (HTTP)
Description: Retrieves a list of Resources for the specified Iflow from CPI OData API.
Address: {{CPI_Tenant_URL}}IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources
Authentication: Client Secret Authentication using {{CPI_OAuth_Cred}} credential.
CallActivity_30439575 (Remove Namespaces):
Type: Mapping
Description: Removes unnecessary XML namespaces from the retrieved resource data using XSLTMapping1.xsl.
CallActivity_30439576 (iterate over resources):
Type: Splitter (General Splitter)
Description: Splits the list of resources into individual resource entries to process each separately. It splits the resource from //entry xpath
CallActivity_30439577 (Extract Parameters):
Type: Content Enricher
Description: Extracts parameters such as Name, ResourceType, and URL from each resource entry. The parameters are extracted using xpath. The resources have been splitted from //entry therefore this is used as a xpath
**Properties**:
Name: //Name
ResourceType: //ResourceType
Url: //entry/id
ServiceTask_30439578 (Get Single Resource):
Type: External Call (HTTP)
Description: Retrieves the content of each resource based on extracted URL.
Address: {{CPI_Tenant_URL}}IntegrationDesigntimeArtifacts(Id='${property.FlowName}',Version='${property.FlowVersion}')/Resources(Name='${property.Name}',ResourceType='${property.ResourceType}')/$value
Authentication: Client Secret Authentication using {{CPIOAuthCred}} credential.
CallActivity_30439580 (Set Resource Body):
Type: Content Enricher
Description: Creates body for each extracted resources.
Configuration
wrapContent: "&amp;lt;${property.Name}&amp;gt; ${in.body} &amp;lt;/${property.Name}&amp;gt;"
CallActivity_30439581 (Gather Resources):
Type: Gather
Description: Concatenates all extracted resource content into a single XML structure.
CallActivity_30439582 (Add Resource Tag):
Type: Content Enricher
Description: Wraps the concatenated resource content within &amp;lt;Resources&amp;gt; tags.
Configuration
wrapContent: "&amp;lt;Resources&amp;gt;${in.body}&amp;lt;/Resources&amp;gt;"
EndEvent_30439572 (End):
Type: End Event
Description: Completes the local integration process
3.4 Gemini AI (Process_30439625)

StartEvent_30439626 (Start):
Type: Start Event
Description: The process is triggered from Main Integration process by calling the Process ID
CallActivity_30439629 (Base64 Encoder):
Type: Encoder (Base64 Encode)
Description: Encodes the body, which contains Iflow definitions and Resources, to base64
CallActivity_30439630 (Format Body):
Type: Script
Description: Removes special characters, trims the body and replaces enter and backspace characters
CallActivity_30439631 (Save and Create Body):
Type: Content Enricher
Description: Create HTTP body to be sent to Gemini API
Properties:
content-type: application/json
wrapContent:
{
    "system_instruction": {
      "parts": [
        {
          "text": "You are an SAP CPI Developer, your main role is to get SAP CPI Iflows configuration and form them create a technical specification document."
        }
      ]
    },
    "contents": [
      {
        "parts": [
          {"inline_data": {"mime_type": "text/plain", "data": "${property.Base64Body}" } },
          {"text": "Here are the configurations, create a Tsd providing a detailed explanation of what this iflow does and steps involved and documentation of scripts and mappings, you will find in the document attached the following an xml tag definitions this includes the flow steps and another tag Resources which includes all scripts, mappings used are attached"}
        ]
      }
    ]
  }
ServiceTask_30439632 (Send to Gemini):
Type: External Call (HTTP)
Description: Sends the formatted request to the Gemini AI endpoint.
Address: {{Gemini_API_Endpoint}}
HTTP Method: POST
HTTP Headers: 
Content-Type: application/json
x-goog-api-key: {{Gemini_API_Key}}
CallActivity_30439633 (JSON to XML Converter):
Type: JSON to XML Converter
Description: Converts the JSON response from Gemini AI into an XML structure.
addXMLRootElement: true
additionalRootElementName: root
CallActivity_30439634 (Extract Response):
Type: Content Enricher
Description: Extracts the generated TSD content from the XML response.
Properties
response: //text The response property is extracted using xpath from Gemini API
EndEvent_30439627 (End):
Type: End Event
Description: Completes the local integration process
4. Resources

This section describes the resources used in the iflow, including scripts, mappings, and credentials.

Scripts
script5.groovy:
Description: This script is used to format the XML body before it is passed to Gemini.
It removes special characters, trims the body and replaces enter and backspace characters
script6.groovy:
Description: Exception Handling script to log exception message along with Iflow payload in case of error.
Mappings
XSLTMapping1.xsl:
Description: Removes namespaces from a give xml
Credentials
{{CPIBasicCred}}: Client Secret authentication credential used to access the CPI OData API.
{{Gemini_API_Key}}: The Gemini API key.
5. Parameters

The following externalized parameters are used in the iflow:

{{FlowName}}: Name of the iflow to document.
{{FlowVersion}}: Version of the iflow to document.
{{CPI_Tenant_URL}}: Base URL of the CPI tenant.
{{Gemini_API_Endpoint}}: The Gemini API endpoint.
{{Client_Secret_Auth}}: Authentication method to be used
6. Error Handling

The iflow uses a local exception subprocess (SubProcess_30439605, SubProcess_30439612, SubProcess_30439619, SubProcess_30439642) to catch and handle potential errors:

StartEvent_30439606, StartEvent_30439613, StartEvent_30439620, StartEvent_30439643 (Error Start): Start events of the exception subprocesses, triggered when an error occurs.
CallActivity_30439609, CallActivity_30439616, CallActivity_30439623, CallActivity_30439646 (Print Exception): Script call activities that logs exception details into MPL.
EndEvent_30439607, EndEvent_30439614, EndEvent_30439621, EndEvent_30439644 (End): End event of the exception subprocesses.
7. Security Considerations

Sensitive information like CPI credentials and the Gemini API key must be stored securely using CPI's secure parameter store.
Access to the iflow and its configuration should be restricted to authorized personnel only.
8. Deployment

The iflow can be deployed through the SAP CPI web UI or using the Cloud Management API.
Ensure all externalized parameters are configured appropriately.
9. Monitoring

Monitor the iflow execution logs in CPI for any errors or performance bottlenecks.
Track datastore entries in IflowDocumentation datastore for completed TSD generation runs.
10. Notes

The quality of the generated TSD depends on the Gemini AI model.
The accuracy of the generated documentation relies on the configurations of the flowsteps.
This document serves as a guide for developers to support and enhance the integration.&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId--472351242"&gt;&lt;STRONG&gt;Benefits and Use Cases&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Here’s how the solution delivers &lt;STRONG&gt;real business value&lt;/STRONG&gt; across several dimensions:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Benefits of Automated iFlow Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":stopwatch:"&gt;⏱&lt;/span&gt;️ Time Saved&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Manual documentation&lt;/STRONG&gt; of iFlows typically involves opening each flow, inspecting steps, copying scripts, and writing descriptions—this can take &lt;STRONG&gt;hours per flow&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Your automated approach reduces this to &lt;STRONG&gt;minutes&lt;/STRONG&gt;, or even &lt;STRONG&gt;seconds&lt;/STRONG&gt;, by:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;Programmatically retrieving metadata and resources&lt;/LI&gt;&lt;LI&gt;Using Gemini AI to generate structured documentation instantly&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;This is especially impactful in environments with &lt;STRONG&gt;dozens or hundreds of iFlows&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":clipboard:"&gt;📋&lt;/span&gt;Consistency in Documentation&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Manual documentation often varies in &lt;STRONG&gt;structure&lt;/STRONG&gt;, &lt;STRONG&gt;terminology&lt;/STRONG&gt;, and &lt;STRONG&gt;depth&lt;/STRONG&gt;, depending on who writes it.&lt;/LI&gt;&lt;LI&gt;Gemini AI ensures:&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Standardized format&lt;/STRONG&gt; across all iFlows&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Consistent terminology&lt;/STRONG&gt; and technical descriptions&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Repeatable output&lt;/STRONG&gt;, regardless of who triggers the flow&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;This improves &lt;STRONG&gt;readability&lt;/STRONG&gt;, &lt;STRONG&gt;maintainability&lt;/STRONG&gt;, and &lt;STRONG&gt;collaboration&lt;/STRONG&gt; across teams.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;🧾 Use in Audits, Onboarding, and Handovers&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Audits&lt;/STRONG&gt;: Automatically generated documentation provides a clear, traceable record of integration logic and configurations, helping meet compliance requirements.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Onboarding&lt;/STRONG&gt;: New developers or integration consultants can quickly understand existing flows without needing to reverse-engineer them.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Handovers&lt;/STRONG&gt;: When projects transition between teams or vendors, having up-to-date technical specs ensures smooth knowledge transfer and reduces risk.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--668864747"&gt;&lt;STRONG&gt;Conclusion and Next Steps&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this project, we built an automated solution that leverages the&amp;nbsp;&lt;STRONG&gt;SAP Integration Suite OData APIs&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Gemini AI&lt;/STRONG&gt;&amp;nbsp;to generate technical documentation for any iFlow within a subaccount. The solution:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Dynamically retrieves iFlow metadata and resources (Groovy scripts, XSLT, EDMX)&lt;/LI&gt;&lt;LI&gt;Prepares and formats the data into a structured context&lt;/LI&gt;&lt;LI&gt;Sends it to Gemini AI to generate a detailed technical specification&lt;/LI&gt;&lt;LI&gt;Stores the output in a persistent data store for future reference&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach significantly reduces manual effort, ensures consistency, and supports better documentation practices across integration landscapes&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;H2 id="toc-hId--865378252"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":raising_hands:"&gt;🙌&lt;/span&gt;Try It, Share It, Connect!&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;If you found this solution helpful or inspiring, here’s how you can take the next step:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&amp;nbsp;Try It Out&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Clone or replicate the approach in your own SAP Integration Suite tenant.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Customize it to fit your documentation standards or integration landscape.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Experiment with different AI prompts or formats to tailor the output.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;Share Your Feedback&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;I’d love to hear how this worked for you!&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Did it save time? Improve clarity? Spark new ideas?&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Drop your thoughts in the comments or reach out directly.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Your feedback and collaboration can help evolve this into an even more powerful tool for the SAP Integration community.&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/automating-iflow-documentation-with-sap-integration-suite-and-gemini-ai/ba-p/14153802"/>
    <published>2025-07-18T14:27:58.950000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036</id>
    <title>Event driven architecture Postman to Solace: Event Publishing Using SAP CPI  : part-4</title>
    <updated>2025-07-20T14:40:42.941000+02:00</updated>
    <author>
      <name>pavanKolla</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2108029</uri>
    </author>
    <content>&lt;P&gt;Hello SAP Community!&lt;/P&gt;&lt;P&gt;In this blog i would like to share the implementation of publisher part of my use case Event driven architecture using solace Event broker.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-1 : Setup a postman :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the method POST and use the SAP cpi endpoint in the url section&amp;nbsp; and hit with the target payload that i am given below&lt;/P&gt;&lt;P&gt;Payload:&lt;/P&gt;&lt;P&gt;If its product's:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Products&amp;gt;
    &amp;lt;Product&amp;gt;
        &amp;lt;ProductID&amp;gt;P1001&amp;lt;/ProductID&amp;gt;
        &amp;lt;ProductName&amp;gt;Wireless Mouse&amp;lt;/ProductName&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;25.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;150&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Product&amp;gt;
 &amp;lt;/Products&amp;gt;
 &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If it's suppliers :&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;Suppliers&amp;gt;
    &amp;lt;Supplier&amp;gt;
        &amp;lt;ID&amp;gt;P1001&amp;lt;/ID&amp;gt;
        &amp;lt;Name&amp;gt;Wireless Mouse&amp;lt;/Name&amp;gt;
        &amp;lt;Category&amp;gt;Electronics&amp;lt;/Category&amp;gt;
        &amp;lt;Price&amp;gt;27.99&amp;lt;/Price&amp;gt;
        &amp;lt;Currency&amp;gt;USD&amp;lt;/Currency&amp;gt;
        &amp;lt;StockQuantity&amp;gt;200&amp;lt;/StockQuantity&amp;gt;
        &amp;lt;UnitOfMeasure&amp;gt;EA&amp;lt;/UnitOfMeasure&amp;gt;
        &amp;lt;Supplier&amp;gt;LogiTech Inc.&amp;lt;/Supplier&amp;gt;
    &amp;lt;/Supplier&amp;gt;
&amp;lt;/Suppliers&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step-2: Implementing layer-1-Routing layer:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1.start with HTTPS sender adapter&lt;/P&gt;&lt;P&gt;2.Add the Groovy Script to separate the target 2nd layer&lt;/P&gt;&lt;P&gt;Here is the groovy code :&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.util.XmlSlurper

Message processData(Message message) {
    def body = message.getBody(String) // Get XML as a string
    def xml = new XmlSlurper().parseText(body) // Parse XML

    def targetRoute = ""

    // Check the root element or a specific tag (adjust as needed)
    if (xml.name() == "Products") {
        targetRoute = "publisher_solace_inbound_products_layer-2"
    } else if (xml.name() == "Suppliers") {
        targetRoute = "publisher_solace_inbound_suppliers_layer_2"
    } else {
        targetRoute = "publisher_solace_inbound_books_layer_2"
    }

    message.setProperty("routeTo", targetRoute) // Store the route in a property
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Implementation: This is the Routing layer paste the groovy code that i given above .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285791iF48C381B451E6CC3/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer1.png" alt="layer1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Exception Handling like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285793i034C0EBC623E6091/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1ex.png" alt="l1ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Declare the content modifier like below add Exchange properties like below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285792i7E82A8BC3E4CC29C/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1cm1.png" alt="l1cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add the routing condition to separate whether it is recoverable/non-recoverable errors&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285798i2BEB5132CC69BB50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r1.png" alt="l1r1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1r2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285799i63C98E8D05D6DDCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1r2.png" alt="l1r2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the retry purpose called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1.png" style="width: 713px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285794iC71111671BFF36F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1.png" alt="l1lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier as like the below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lipcm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285800i9F49724C5DD8D6B7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lipcm1.png" alt="l1lipcm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the another layers that are global retry layers and jms retry for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip1processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285803i580F57A13C5E319E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip1processdir.png" alt="l1lip1processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Based the routing condition above implement the Local Integration Process separately this is the&amp;nbsp;Local Integration Process for the Mail triggering if any Business logic/non-recoverable error occurs called by using process call&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285795i85B14D3622E34C66/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2.png" alt="l1lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the content modifier like the below for mail triggering&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2cm1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285801i88F68C1F014C0191/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2cm1.png" alt="l1lip2cm1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Through process direct adapter call the mail triggering iflow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l1lip2processdir.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285804iCBB81ECE35FC195B/image-size/large?v=v2&amp;amp;px=999" role="button" title="l1lip2processdir.png" alt="l1lip2processdir.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-3 : Implementing layer -2: publishing layer :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here in this layer the data which is coming from the layer 1 is published to the solace queues and in this layer there are multiple layer-2's like products layer2 ,suppliers layer2,books layer2 bases on the first layer the target 2nd layer been hitted.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Implementation:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Configure the Process direct sender adapter that is coming from the layer-1&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="layer2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285806i754DFB221444871C/image-size/large?v=v2&amp;amp;px=999" role="button" title="layer2.png" alt="layer2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2processdirect.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285813iC9BC2FB6DB5A2FF1/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2processdirect.png" alt="l2processdirect.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the Advance Event Mesh adapter to publish the data into the solace queues, before configuring it make sure you had setup the solace credentials in the Security material that i had given in the part-2 of my blog series&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285807i085F908775E53A57/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq.png" alt="l2aemq.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2aemq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285808iF7E9F37A30C0DE50/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2aemq2.png" alt="l2aemq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Setup the Exception handling for retry purpose&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2ex.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285809iC2E0965EFC5D7620/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2ex.png" alt="l2ex.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for retry purpose&amp;nbsp; as same as the layer-1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip1.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285810i1F04D0EE85B899F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip1.png" alt="l2lip1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Implement the Local Integration process for mail triggering as same like the layer -1 above&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="l2lip2.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/285811i2E9A319F0145CB4E/image-size/large?v=v2&amp;amp;px=999" role="button" title="l2lip2.png" alt="l2lip2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you want to know how to implement Error handling using jms please refer my blog .&lt;/P&gt;&lt;P&gt;Link - [ &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/handling-connectivity-and-recoverable-errors-in-sap-cpi-with-jms-queues/ba-p/14137974&lt;/A&gt;&amp;nbsp;]&lt;/P&gt;&lt;P&gt;I would continue the Subscriber part in the part-5 Stay tuned!!!&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-postman-to-solace-event-publishing-using-sap-cpi/ba-p/14151036"/>
    <published>2025-07-20T14:40:42.941000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298</id>
    <title>Improving Exception Handling using Generative AI in SAP Cloud Integration (SAP CI/CPI)</title>
    <updated>2025-07-20T22:13:28.565000+02:00</updated>
    <author>
      <name>adarshrao_rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/882299</uri>
    </author>
    <content>&lt;P&gt;When it comes to integrating different systems within a business, SAP Cloud Integration (SAP CI/CPI) capability in Integration Suite Service of SAP BTP is a go-to tool. However, as these integrations become more complex, handling exceptions - errors and issues, efficiently becomes increasingly important. Generative AI can help businesses tackle these challenges by automating error detection and providing useful insights. Here’s what you can gain from using AI:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;User - Friendly Error Messages&lt;/STRONG&gt;: Sender systems can receive clear, simple error messages that anyone can understand, not just tech experts.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Better Monitoring&lt;/STRONG&gt;: You can see these user-friendly error message logs in SAP CI/CPI dashboards, making it easier to track and fix issues.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Identify Error Causes&lt;/STRONG&gt;: AI can help identify why an error occurred, offering a better understanding of the issue.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Suggest Solutions&lt;/STRONG&gt;: It can also suggest ways to address and fix the error.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Simplify Troubleshooting&lt;/STRONG&gt;: Both tech and non-tech staff can troubleshoot errors more easily.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reduce Resolution Time&lt;/STRONG&gt;: Speed up the process of solving errors.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prepare for the Future&lt;/STRONG&gt;: The insights gained can improve how errors are classified and handled in the future by agentic AIs in SAP BTP.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1735183649"&gt;1. Exception Handling&lt;/H2&gt;&lt;P&gt;There are two main ways to integrate AI into your error handling processes in SAP CI/CPI:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Exception Subprocess&lt;/STRONG&gt;: Incorporate Generative AI into an existing integration flow’s exception subprocess for smooth operation. &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/handle-exceptions-guidelines-basics?locale=en-US&amp;amp;q=handling+error" target="_self" rel="noopener noreferrer"&gt;Read More&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Common Exception Handling iFlow&lt;/STRONG&gt;: Set up a separate flow dedicated to handling exceptions, where you pass error information from the main flow for centralized handling. &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/outsource-exception-handling-into-separate-integration-flow?locale=en-US&amp;amp;q=common+error+handling" target="_self" rel="noopener noreferrer"&gt;Read More&lt;/A&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In this example, I have used &amp;nbsp;exception subprocess approach within a simple integration flow and Google Gemini AI model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753038949536.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288966iBC2882D3D965BC0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753038949536.png" alt="adarshrao_rao_0-1753038949536.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1538670144"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1342156639"&gt;2. Understanding Gen-AI Prompt Format and get API Key&lt;/H2&gt;&lt;P&gt;For Google Gemini, go to &lt;A href="https://aistudio.google.com/prompts/new_chat" target="_blank" rel="noopener nofollow noreferrer"&gt;https://aistudio.google.com/prompts/new_chat&lt;/A&gt; and click on Get API Key, Create API Key.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1753038949539.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288967iBF9B7A104E0D596F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1753038949539.png" alt="adarshrao_rao_1-1753038949539.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_2-1753038949545.png" style="width: 631px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288968i9889286D348144CD/image-dimensions/631x470?v=v2" width="631" height="470" role="button" title="adarshrao_rao_2-1753038949545.png" alt="adarshrao_rao_2-1753038949545.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here, you can see the format of the request which is expected by Google Gemini API.&lt;/P&gt;&lt;H2 id="toc-hId-1145643134"&gt;3. Implementation Steps&lt;/H2&gt;&lt;P&gt;Following are the steps which I have implemented in Exception Subprocess&lt;/P&gt;&lt;P&gt;1. Content Modifer - Set APIKey &amp;amp; Gen-AI Prompt&lt;BR /&gt;To set the API key and content type as requested by Google Gemini&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_3-1753038949546.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288969i4D1FA3BC99C83904/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_3-1753038949546.png" alt="adarshrao_rao_3-1753038949546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To set the required prompt format, I have created the below exchange properties and externalized it&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_4-1753038949548.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288970iB2A656592833DC0D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_4-1753038949548.png" alt="adarshrao_rao_4-1753038949548.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Value stored in Gen AI prompt is&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{     "contents": [       {         "parts": [           {             "text": " You are an SAP Integration consultant skilled in troubleshooting in SAP Cloud Integration (CPI). Above error is persisting while sending the message from sender to receiver system. For this error, Please respond using the following format, with each section clearly separated by a single line break in a direct and professional tone: 1. User-Friendly Error Message: A one sentence error that can be easily understood by non-technical stakeholders 2. Possible Reasons for the Error: List common causes for encountering this error in SAP CPI integration scenarios. 3. Possible Steps to Resolve the Error: Provide possible troubleshooting steps to address the issue and potentially resolve it. 4. HTTP Response: Provide appropriate HTTP error code (numerical value only) to be sent to sender system. "            }         ]       }     ]   }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&lt;U&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&lt;/U&gt;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;All the values are externalized so that, different models like Microsoft Co-pilot or GTP 4 can be used.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;2. Groovy script – setGenAIPrompt&lt;/P&gt;&lt;P&gt;This script is used to get the error which is caught from the main integration process by the CamelExceptionCaught property, add this error in the prompt to get the tailored response from Gemini and set the prompt structure required by Gemini AI model.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message



def Message processData(Message message) {

    // Retrieve properties from the message

    def camelExceptionCaught = message.getProperty("CamelExceptionCaught")

    def genAIPrompt = message.getProperty("GenAIPrompt")

    def startPrompt = message.getProperty("StartPrompt")



    // Initialize updatedGenAIPrompt as null or empty, it'll be used to set message body eventually

    def updatedGenAIPrompt = null

   

    if (genAIPrompt &amp;amp;&amp;amp; startPrompt &amp;amp;&amp;amp; camelExceptionCaught) {

        // Find the position of startPrompt in genAIPrompt

        def startIndex = genAIPrompt.indexOf(startPrompt)



        if (startIndex != -1) {

            // Insert space and CamelExceptionCaught after StartPrompt

            updatedGenAIPrompt = genAIPrompt.substring(0, startIndex + startPrompt.length()) +

                                 " " +

                                 camelExceptionCaught +

                                 genAIPrompt.substring(startIndex + startPrompt.length())

                                

            // Set the updatedGenAIPrompt back to a message property

            message.setProperty("UpdatedGenAIPrompt", updatedGenAIPrompt)

        }

    }

   

    if (updatedGenAIPrompt != null) {

        // Set the modified prompt as the message body

        message.setBody(updatedGenAIPrompt)

    }

   

    return message

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;3. Request Reply - Call Google Gemini&lt;/P&gt;&lt;P&gt;I have use HTTP adapter to call Google Gemini&lt;BR /&gt;URL: &lt;A href="https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent" target="_blank" rel="noopener nofollow noreferrer"&gt;https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_5-1753038949550.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288971i460BFCF5B4A5CCA3/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_5-1753038949550.png" alt="adarshrao_rao_5-1753038949550.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Groovy script – captureGenAIResponse&lt;/P&gt;&lt;P&gt;This groovy script is used to capture Custom Error, Possible reason and Possible solution for the error from Gen AI response. Also, handle the errors caused if generative AI is not reachable&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

import groovy.json.JsonSlurper



def Message processData(Message message) {

    // Retrieve properties

    def captureCustomErrorKey = message.getProperty("CaptureCustomError")

    def capturePossibleReasonKey = message.getProperty("CapturePossibleReason")

    def capturePossibleSolutionKey = message.getProperty("CapturePossibleSolution")

    def captureHTTPCodeKey = message.getProperty("CaptureHTTPCode")  // This should be "HTTP Response:"



    // Get the message body and parse it as JSON

    def payload = message.getBody(String)

    def jsonSlurper = new JsonSlurper()



    // Initialize extracted values

    def extractedCustomErrorMessage = null

    def extractedPossibleReason = null

    def extractedPossibleSolution = null

    def extractedPHTTPCode = null



    try {

        // Try parsing the JSON

        def parsedJson = jsonSlurper.parseText(payload)

       

        // Extract the text section from the JSON

        def textContent = parsedJson.candidates[0]?.content?.parts[0]?.text



        if (textContent) {

            // Log the text content to verify structure

            messageLogFactory.getMessageLog(message)?.addAttachmentAsString("Text Content", textContent, "text/plain")



            // Extract values based on keys

            extractedCustomErrorMessage = extractValueFollowingKey(textContent, captureCustomErrorKey)

            extractedPossibleReason = extractValueFollowingKey(textContent, capturePossibleReasonKey)

            extractedPossibleSolution = extractValueFollowingKey(textContent, capturePossibleSolutionKey)



            // Specifically extract the HTTP response code after "HTTP Response:"

            extractedPHTTPCode = extractHTTPResponseCode(textContent, captureHTTPCodeKey)

        }

    } catch (Exception e) {

        // Log exception and proceed with null outputs

        messageLogFactory.getMessageLog(message)?.addAttachmentAsString("Exception", e.toString(), "text/plain")

    }



    // Handle extraction results

    message.setProperty("ExtractedCustomErrorMessage", extractedCustomErrorMessage)

    message.setProperty("ExtractedPossibleReason", extractedPossibleReason)

    message.setProperty("ExtractedPossibleSolution", extractedPossibleSolution)

    message.setProperty("ExtractedPHTTPCode", extractedPHTTPCode)

   

    // Set HTTP Code as the message body for demonstration; it will be null if extraction fails

    message.setBody(extractedPHTTPCode)



    return message

}



// Function to extract value that follows a given key in the text content

def extractValueFollowingKey(String textContent, String key) {

    if (key) {

        def keyIndex = textContent.indexOf(key)

        if (keyIndex != -1) {

            def startIndex = keyIndex + key.length()

            if (startIndex != -1) {

                def endIndex = textContent.indexOf("\n\n", startIndex)

                endIndex = endIndex != -1 ? endIndex : textContent.length()



                def extractedText = textContent.substring(startIndex, endIndex).trim()

                extractedText = extractedText.replaceAll('\\*', '')  // Clean up undesired characters

                return extractedText

            }

        }

    }

    return null

}



// Specific extraction utility for HTTP Code.

def extractHTTPResponseCode(String textContent, String key) {

    if (key) {

        def keyIndex = textContent.indexOf(key)

        if (keyIndex != -1) {

            def startIndex = keyIndex + key.length()

            if (startIndex != -1) {

                // Find the end, which is the next newline after the code and description

                def endIndex = textContent.indexOf("\n", startIndex)

                endIndex = endIndex != -1 ? endIndex : textContent.length()



                return textContent.substring(startIndex, endIndex).trim()

            }

        }

    }

    return null

}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Content Modifier - Set Content Type for Error Response&lt;/P&gt;&lt;P&gt;In this content modifier the header Content-Type is explicitly set if the error response needs to be sent to the sender system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_6-1753038949551.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288972i59DE40D618C2F062/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_6-1753038949551.png" alt="adarshrao_rao_6-1753038949551.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. Groovy Script – generateErrorResponse&lt;/P&gt;&lt;P&gt;This script is used to log the custom error in the error log, create custom headers and generate an error response if the sender system needs it. I have implemented all the three in this script to show that it is possible.&lt;/P&gt;&lt;P&gt;Based on your requirement, custom error log or custom header or error response can be set.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message



def Message processData(Message message) {

    // Retrieve properties

    def camelExceptionCaught = message.getProperty("CamelExceptionCaught")

    def extractedCustomErrorMessage = message.getProperty("ExtractedCustomErrorMessage")

    def extractedPossibleReason = message.getProperty("ExtractedPossibleReason")

    def extractedPossibleSolution = message.getProperty("ExtractedPossibleSolution")

    def extractedPHTTPCode = message.getProperty("ExtractedPHTTPCode")



    // Set the CamelHttpResponseCode header

    if (extractedPHTTPCode) {

        message.setHeader("CamelHttpResponseCode", extractedPHTTPCode)

    }



    // Create custom headers

    def messageLog = messageLogFactory.getMessageLog(message)

    if (messageLog != null) {

        messageLog.addCustomHeaderProperty("CustomError", extractedCustomErrorMessage ?: "No custom error message available.")

        messageLog.addCustomHeaderProperty("PossibleReason", extractedPossibleReason ?: "No possible reason available.")

        messageLog.addCustomHeaderProperty("PossibleSolution", extractedPossibleSolution ?: "No possible solution available.")

    }



    // Attach extracted values as message attachments

    def possibleReasonAttachment = extractedPossibleReason ?: "No possible reason available."

    def possibleSolutionAttachment = extractedPossibleSolution ?: "No possible solution available."

   

    if (messageLog != null) {

        messageLog.addAttachmentAsString("PossibleReason", possibleReasonAttachment, "text/plain")

        messageLog.addAttachmentAsString("PossibleSolution", possibleSolutionAttachment, "text/plain")

    }



    // Create dynamic response in XML format

    def responseXml = """&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;

&amp;lt;Error_Response&amp;gt;

    &amp;lt;SystemError&amp;gt;${camelExceptionCaught}&amp;lt;/SystemError&amp;gt;

    &amp;lt;CustomError&amp;gt;${extractedCustomErrorMessage ?: "No custom error message available."}&amp;lt;/CustomError&amp;gt;

    &amp;lt;PossibleReason&amp;gt;${extractedPossibleReason ?: "No possible reason available."}&amp;lt;/PossibleReason&amp;gt;

    &amp;lt;PossibleSolution&amp;gt;${extractedPossibleSolution ?: "No possible solution available."}&amp;lt;/PossibleSolution&amp;gt;

&amp;lt;/Error_Response&amp;gt;"""



    // Set XML response as the message body

    message.setBody(responseXml)





if (camelExceptionCaught) {

        throw new Exception("\nSystem Error: ${camelExceptionCaught}\nCustom Error from GenAI: ${extractedCustomErrorMessage ?: 'No custom error message available.'}")

    }



    return message

}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-949129629"&gt;5. Testing&lt;/H2&gt;&lt;P&gt;To test, I am using an API client Bruno, which will mimic the sender system. I have maintained the receiver system URL as &lt;A href="http://sample.com" target="_blank" rel="noopener nofollow noreferrer"&gt;http://sample.com&lt;/A&gt;. So, the message will fail because it is not a valid URL.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753041124487.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288990i37656FA3E35862AC/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753041124487.png" alt="adarshrao_rao_0-1753041124487.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;1. Triggering the iflow from Bruno as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_7-1753038949552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288974iBDFDD5C97258E7F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_7-1753038949552.png" alt="adarshrao_rao_7-1753038949552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp; Without Exception Handling using Gen AI, I get the response as below in Bruno as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_8-1753038949552.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288973i97EAFCB3DDA4BF77/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_8-1753038949552.png" alt="adarshrao_rao_8-1753038949552.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. In the iFlow, I have checked Return Exception to Sender under Error Configuration&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_9-1753038949553.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288975i4AEAA92853922641/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_9-1753038949553.png" alt="adarshrao_rao_9-1753038949553.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Now, with Exception Handling using Gen AI, I get the response in Bruno as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_10-1753038949554.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288977i7669DA012F9293C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_10-1753038949554.png" alt="adarshrao_rao_10-1753038949554.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. In Cloud Integration Message Monitoring we see that the message is in error&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_11-1753038949555.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288976i237CAC7C65B49FCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_11-1753038949555.png" alt="adarshrao_rao_11-1753038949555.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;6. Error log is as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_12-1753038949557.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288978i90CBBCDD64DD9B4F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_12-1753038949557.png" alt="adarshrao_rao_12-1753038949557.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7. Custom Headers are successful set with Custom Error, Possible Reason and Possible Solution as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_13-1753038949559.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288980iBA66864E371C0162/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_13-1753038949559.png" alt="adarshrao_rao_13-1753038949559.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8. Attachments are also set with Possible Reason and Possible Solution as shown below&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_14-1753038949561.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288979i0BBACD85C72B0099/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_14-1753038949561.png" alt="adarshrao_rao_14-1753038949561.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_15-1753038949563.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288981iD95F690D8E4F6E07/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_15-1753038949563.png" alt="adarshrao_rao_15-1753038949563.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_16-1753038949566.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288982i6175A8EA7C72658D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_16-1753038949566.png" alt="adarshrao_rao_16-1753038949566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;9. If you have a requirement to send the error response with not just custom error from Gen AI but sending possible reason and solution then set the event in the Exception Subprocess as End Message. The only downside is the message in Cloud Integration will be end with status Completed rather than Error.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_17-1753038949567.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288983i970E4AB7AE6FEACB/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_17-1753038949567.png" alt="adarshrao_rao_17-1753038949567.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Go to Groovy Script - generateErrorResponse and comment the lines 46, 47 and 48 which was done to throw custom exception as shown below&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_18-1753038949567.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288985i5C433E02AD507DF2/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_18-1753038949567.png" alt="adarshrao_rao_18-1753038949567.png" /&gt;&lt;/span&gt;In the script, I am setting the appropriate HTTP code for CamelHttpResponseCode from Google Gemini response.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_19-1753038949568.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288984i4FB20C444BA295A8/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_19-1753038949568.png" alt="adarshrao_rao_19-1753038949568.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;10. When the message is triggered, we can see that the error response is received in Bruno with correct HTTP response code as shown below.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_20-1753038949574.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288986i2F379F13D938CB7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_20-1753038949574.png" alt="adarshrao_rao_20-1753038949574.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11. If the correct response code is not set from Google Gemini, then HTTP 200 is received in sender system which will be incorrect, and we can’t identify if the message failed or not without opening the response message&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_21-1753038949576.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288987i5EB710143ECB1B9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_21-1753038949576.png" alt="adarshrao_rao_21-1753038949576.png" /&gt;&lt;/span&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_22-1753038949580.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288989i5F1B3810894EA049/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_22-1753038949580.png" alt="adarshrao_rao_22-1753038949580.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;12. Now, if there is an issue with reaching Generative AI then it is handled in Groovy Scripts. For testing, I will use incorrect URL&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_23-1753038949583.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288988iB33A6C87CF1C1C78/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_23-1753038949583.png" alt="adarshrao_rao_23-1753038949583.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-752616124"&gt;6. Conclusion&lt;/H2&gt;&lt;P&gt;In this blog, I have tried to provide an overview of how we can make use of Generative AI for Exception Handling in SAP Cloud Integration. Of course, the exception subprocess can be improved and tailored as per the requirement in your integration landscape.&lt;/P&gt;&lt;P&gt;Generative AI offers a new way to handle errors in SAP CI/CPI by automating processes that would typically take much longer. By enhancing error handling, businesses can reduce downtime and improve overall efficiency. With the technology constantly advancing, using AI in exception handling can help businesses stay ahead of the curve, making their operations more reliable. Through simple implementation steps, regular testing, and adapting based on feedback, businesses can fully leverage AI for a smarter, more resilient future.&lt;/P&gt;&lt;H2 id="toc-hId-556102619"&gt;7. Additional Read&lt;/H2&gt;&lt;P&gt;Exception Handling in SAP CPI : &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/handle-errors-gracefully?locale=en-US&amp;amp;q=handling+error" target="_self" rel="noopener noreferrer"&gt;SAP Help&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I invite you to share your thoughts in the comments below. Whether you have questions about using generative AI for exception handling, experiences to share, or suggestions for improvement, your feedback is invaluable. It helps others who are navigating similar journeys and contributes to a community of shared knowledge. I look forward to hearing from you!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298"/>
    <published>2025-07-20T22:13:28.565000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/google-bigquery-adapter-for-sap-integration-suite/ba-p/14160511</id>
    <title>Google BigQuery Adapter for SAP Integration Suite</title>
    <updated>2025-07-23T16:43:28.043000+02:00</updated>
    <author>
      <name>Swati_Singh1</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/312844</uri>
    </author>
    <content>&lt;P&gt;Many of our day-to-day business activities require storage, processing and insights - Google BigQuery is a data warehousing offering from Google that provides all of the above and much more. It can store massive volumes of data and provide quick processing and efficient analysis.&lt;/P&gt;&lt;P&gt;To harness the ability of Google BigQuery in your SAP Integrations, SAP has released Google BigQuery for SAP Integration Suite that facilitates management and access to data residing on Google BigQuery. Now you can maximize your productivity with data related integrations using Google BigQuery Adapter.&lt;/P&gt;&lt;H2 id="toc-hId-1735901261"&gt;Google BigQuery Adapter Features&lt;/H2&gt;&lt;P&gt;Google BigQuery Adapter has the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Supports &lt;STRONG&gt;OAuth2 Service Account&lt;/STRONG&gt; and &lt;STRONG&gt;Workload Identity Federation&lt;/STRONG&gt; authentication methods.&lt;/LI&gt;&lt;LI&gt;Enables accessing and managing Big Query resources like datasets, jobs, tables, table data, routines, projects, row access policies, and models.&lt;/LI&gt;&lt;LI&gt;Supports convenient metadata retrieval using &lt;STRONG&gt;List&lt;/STRONG&gt; operation data that used the &lt;STRONG&gt;Page Token&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;LI&gt;Supports &lt;STRONG&gt;Basic&lt;/STRONG&gt; configuration for convenient processing capability whereas &lt;STRONG&gt;Advanced&lt;/STRONG&gt; enables proficient users to perform calls with greater control while connecting to any API endpoint.&lt;/LI&gt;&lt;LI&gt;Supports&lt;STRONG&gt; DML operations&lt;/STRONG&gt; like insert, update, patch for Google BigQuery resources.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539387756"&gt;Update a Dataset&lt;/H2&gt;&lt;P&gt;In this blog post, we will demo a scenario to get you started with a basic Google BigQuery Adapter feature. We will see how to update details for an existing dataset residing in Google BigQuery.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_0-1753278988951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290441iE6CD54DB19C62132/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_0-1753278988951.png" alt="Ashish_Kuvvarapu_0-1753278988951.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The following prerequisites are required to be completed on the application side of Google BigQuery.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create a dataset or have access to an existing one. For more information, see &lt;A href="https://cloud.google.com/bigquery/docs/datasets" target="_self" rel="nofollow noopener noreferrer"&gt;Create Datasets&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;You must also ensure the correct permissions are available to the service user to update a dataset. For more information, see &lt;A href="https://cloud.google.com/bigquery/docs/updating-datasets" target="_self" rel="nofollow noopener noreferrer"&gt;Dataset Permissions&lt;/A&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1342874251"&gt;Create a Payload using Content Modifier&lt;/H2&gt;&lt;P&gt;One of the first tasks we do after creating a new integration flow, is to prepare the payload that contains information to be updated in the target dataset in Google BigQuery.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "kind": "bigquery#dataset",
  "etag": "etag_value",
  "id": "gbq_docs.org_primary_dataset",
  "selfLink": "https://bigquery.googleapis.com/bigquery/v2/projects/gbq_docs/datasets/org_primary_dataset",
  "datasetReference": {
    "projectId": "gbq_docs",
    "datasetId": "org_primary_dataset"
  },
  "friendlyName": "EmployeeDataset",
  "description": "This dataset stores analytical data.",
  "defaultTableExpirationMs": "3600000",
  "defaultPartitionExpirationMs": "86400000",
  "labels": {
    "env": "dev",
    "team": "analytics"
  }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;As you can see above, we intend to add metadata details like description, tags, labels etc.&lt;/P&gt;&lt;H2 id="toc-hId-1146360746"&gt;Connect to Google BigQuery using the Google BigQuery Adapter&lt;/H2&gt;&lt;P&gt;The Connection tab contains connection and authentication parameters for Google BigQuery.&lt;/P&gt;&lt;P&gt;Before you set the connection details, see Creating a Keystore in the Adapter Guide.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_1-1753279066188.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290442iD67722B41328FFB4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_1-1753279066188.png" alt="Ashish_Kuvvarapu_1-1753279066188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Address&lt;/TD&gt;&lt;TD width="50%"&gt;Specify the name for the Google BigQuery service. Default:&amp;nbsp;&lt;A href="https://bigquery.googleapis.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://bigquery.googleapis.com/&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Authentication Type&lt;/TD&gt;&lt;TD width="50%"&gt;Select as &lt;STRONG&gt;OAuth2 Service Account&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;OAuth2 Token URL&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the OAuth2 Token URL which identifies as the authorization server for producing a JWT token internally.&lt;/P&gt;&lt;P data-unlink="true"&gt;Default: https://www.googleapis.com/oauth2/v4/token&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Client Email&lt;/TD&gt;&lt;TD width="50%"&gt;Specify the Google Service Account Client Email.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Private Key Alias&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the security artifact storing the Google Service Account Private Key.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Scope&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the scope of the connection to Google BigQuery service.&lt;/P&gt;&lt;P&gt;Default: &lt;A href="https://www.googleapis.com/auth/bigquery" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.googleapis.com/auth/bigquery&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-949847241"&gt;Update Dataset Operation&lt;/H2&gt;&lt;P&gt;Now you can run the Update Dataset operation on your target dataset under your project.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Ashish_Kuvvarapu_2-1753279100792.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290449i3B9B14301EE1DC2A/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Ashish_Kuvvarapu_2-1753279100792.png" alt="Ashish_Kuvvarapu_2-1753279100792.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Select the required configuration type as &lt;STRONG&gt;Basic&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Entity&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Select &lt;STRONG&gt;Datasets&lt;/STRONG&gt; as the entity&amp;nbsp;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Project ID&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the Google BigQuery project ID.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Dataset ID&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the Dataset ID to be used.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;You can achieve the same using Advanced configuration type as well.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description/Values&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Select the required configuration type as &lt;STRONG&gt;Advanced&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="50px"&gt;&lt;P&gt;HTTP Method&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%" height="50px"&gt;Select as &lt;STRONG&gt;POST&lt;/STRONG&gt;.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Relative URL&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;/bigquery/v2/projects/{projectId}/datasets/{datasetid}&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-753333736"&gt;Run and Verify Output&lt;/H2&gt;&lt;P&gt;After saving the above configuration, deploy the flow and verify that the changes are reflected on the dataset. You should be able to see some of them as shown below&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Labels&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;env : dev team : analytics&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Description&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;This dataset stores analytical data.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-556820231"&gt;Quick Links&lt;/H2&gt;&lt;P&gt;For detailed information about Google BigQuery configuration, see &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/google-bigquery-adapter" target="_self" rel="noopener noreferrer"&gt;Google BigQuery&lt;/A&gt; and &lt;A href="https://api.sap.com/odata/1.0/catalog.svc/Files('a646792466e04c8c8b50042867ea13db')/$value" target="_self" rel="noopener noreferrer"&gt;Google BigQuery Adapter Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Note: The Google BigQuery adapter is available as part of your SAP Integration Suite license.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/google-bigquery-adapter-for-sap-integration-suite/ba-p/14160511"/>
    <published>2025-07-23T16:43:28.043000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116</id>
    <title>Process Integration Pipeline Extension - Restart via Data Store</title>
    <updated>2025-07-23T17:38:26.286000+02:00</updated>
    <author>
      <name>mate_moricz</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/191315</uri>
    </author>
    <content>&lt;P&gt;If you use the &lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline concept&lt;/A&gt; on your SAP Cloud Integration tenant, then you'll be familiar with the error handling process. In case of a message processing error, the message will be retried from the JMS processing queues and upon reaching the maximum number of retries, the message is sent to a Dead Letter Queue (DLQ) to stop further processing. The message then has to be &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#dead-letter-queue-handling" target="_self" rel="noopener noreferrer"&gt;moved&lt;/A&gt; from the DLQ back to the processing queues of the pipeline.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="move_jms.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/286931iB391DAA7CA2855E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="move_jms.png" alt="move_jms.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The move feature in the queue monitor only enables you to move all messages within a queue. Currently, you can't move a single message from one queue to another. Selective message move is a &lt;A href="https://roadmaps.sap.com/board?PRODUCT=000D3A47875C1EDB98A8A910864AC24B&amp;amp;q=move&amp;amp;range=CURRENT-LAST#;INNO=CB93051A54FD1EDFBDB6AEC234D1AC40" target="_self" rel="noopener noreferrer"&gt;planned roadmap item for Q3 2025.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;There are multiple restrictions imposed by this retry handling process:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;It is not possible to figure out to which scenarios the messages belong in the DLQ&lt;/LI&gt;&lt;LI&gt;It is not possible to schedule a restart job with periodic retries of erroneous messages.&lt;/LI&gt;&lt;LI&gt;It is not possible to execute selective move of messages from JMS queue (to be solved by Q3 2025 as mentioned).&lt;/LI&gt;&lt;LI&gt;There is no API to move messages from DLQ to normal processing queues.&lt;/LI&gt;&lt;LI&gt;There is no API to read JMS queue content and select required messages based on query conditions (JMS Message ID cannot be set from an Integration Flow and there is not any configurable tag for JMS message).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;An additional aspect is the resource limit of the JMS broker:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;There is a hard size limit of JMS broker and JMS queues (default 95% of broker). In case of an unplanned outage of a receiver system, messages might be flooding generic pipeline queues like Outbound (Q4) JMS queue.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;To solve these issues, we have created a package called the&amp;nbsp;&lt;A href="https://hub.sap.com/package/processintegrationpipelineextensionrestartviadatastore/overview" target="_self" rel="noopener noreferrer"&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/A&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;which is now available in SAP Business Accelerator Hub. This package helps to automate message retries via scheduled jobs and APIs by utilizing Data Stores instead of DLQs on the JMS broker. There is no change required to the standard&amp;nbsp;Process Integration Pipeline package due to the available &lt;A href="https://community.sap.com/t5/integration-blog-posts/latest-pipeline-concept-enhancements-custom-error-handling-and-others/ba-p/13757664" target="_self"&gt;custom error handling extension&lt;/A&gt;&amp;nbsp;from version&amp;nbsp;1.0.5 on.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog describes the concept of the extension, but not the detailed configuration of each Integration Flow.. A detailed configuration guide is attached to the Integration Package.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1735063274"&gt;Integration Package contents&lt;/H2&gt;&lt;P&gt;The package consists of multiple Integration Flows and a Script Collection. Below schema describes the logical connection between the Integration Flows.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753260008506.png" style="width: 911px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290178i5594727031643E89/image-dimensions/911x435?v=v2" width="911" height="435" role="button" title="mate_moricz_1-1753260008506.png" alt="mate_moricz_1-1753260008506.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow implements Custom Error Handling for exceptions occurring in the generic steps of the Process Integration Pipeline. It leverages the public Pipeline extension exit, as described in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/monitoring-and-error-handling-pipeline-concept#loioed9b82cb928049e6990a4d784aa6aac7__section_pm1_ggs_5bc" target="_blank" rel="noopener noreferrer"&gt;Custom Exception Handling documentation&lt;/A&gt;. Its primary function is to determine whether retries should continue through the JMS persistence layer or, if all configured JMS retries are exhausted, to move the message out of the queue into the Data Store while capturing all necessary restart attributes and forming the Data Store entry body.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Restart Executor from Data Store to JMS&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow handles message reprocessing by moving messages from the Data Store back to the source JMS processing queue, allowing the JMS layer to manage the actual retry process. It is triggered via Process Direct and requires XML input specifying the source Data Store, maximum retry count, and the retry subject – either a list of Data Store entry names or an Interface PID for dynamically retrying all associated Data Store entries.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline DS Retry - Template - Restart Job&lt;/STRONG&gt;&lt;SPAN&gt;. This Integration Flow represents a Restart Job that automatically reprocesses messages from the Data Store based on assigned restart configuration profiles. Execution is scheduled using a Start Timer event. Provided as a template, this Integration Flow allows for the creation of multiple customized copies in a custom package, with different Job Profiles maintained in the Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Retries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow enables on-demand restart operations via API clients like Postman. It exposes an HTTP endpoint to trigger restarts for specified Data Store entries or based on selection criteria. Additional operations allow users to retrieve a list of Data Stores in the tenant, fetch entries from a specific Data Store, and move entries between Data Stores (e.g., transferring entries from the “Retry” Data Store to the “NoRetry” Data Store to prevent automatic retriggering).&lt;/SPAN&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Pipeline API - Data Store Manage Entries &lt;/STRONG&gt;&lt;SPAN&gt;(Optional). This Integration Flow provides API-based management of Data Store entries, separate from the "Manage Retries" API, to enforce role-based access. It allows users to read messages from a selected Data Store, delete messages (individually or based on query conditions), and add messages to the Data Store (this capability can be disabled at the Integration Flow level).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1538549769"&gt;Data Store Entry Format&lt;/H2&gt;&lt;P&gt;The&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores &lt;/EM&gt;Integration Flow will write the messages into Data Stores in a specific pattern which can be used to easily identify the corresponding scenario, message restart by filter criteria.&amp;nbsp; The following pattern is used:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;PartnerId&lt;SPAN&gt;~PipelineStage(~Receiver )~MplId~UTC-Timestamp(~RetryCount )&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;PartnerId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A unique identifier in the Process Integration Pipeline that defines the configuration scenario. It is derived from the sender system name and sender interface name. More details can be found in the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/using-partner-directory-in-pipeline-concept#partner-id" target="_blank" rel="noopener noreferrer"&gt;Partner ID documentation&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;PipelineStage (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – Identifies the stage in the Process Integration Pipeline where the exception occurred. &lt;/SPAN&gt;It uses predefined two-letter identifiers enclosed in parentheses (e.g., (IB)), resulting in a four-character code&lt;SPAN&gt;:&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;(IB)&lt;/STRONG&gt;&lt;SPAN&gt; – Inbound Stage: The message was received by an inbound Integration Flow, stored in the first JMS queue, and encountered an exception during the next processing step.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(RD)&lt;/STRONG&gt;&lt;SPAN&gt; – Receiver Determination Stage: The inbound conversion was successful, but an error occurred while identifying the receiver system.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(ID)&lt;/STRONG&gt;&lt;SPAN&gt; – Interface Determination Stage: The receiver system was identified, but an error occurred while determining the target inbound interface for that receiver (i.e., the Process Direct endpoint of the outbound Integration Flow).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(OB)&lt;/STRONG&gt;&lt;SPAN&gt; – Outbound Stage: The message was successfully routed, but an error occurred during message conversion to the outbound format or while transmitting data to the receiver. This is the most common error-handling stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;(NA)&lt;/STRONG&gt;&lt;SPAN&gt; – The error originated from an unknown or custom Integration Flow (e.g., a copy of the generic flow or an interface-specific flow connected to the retry extension).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – The receiver business system or alias to which the message is to be delivered. This field is optional because in the |IB| and |RD| stages, the receiver is still unknown. It is assigned only starting from the |ID| stage.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;MplId (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – The Message Processing Log ID (Message GUID) of the erroneous message, a 28-character unique identifier assigned to each message in Cloud Integration. Even though the Message Processing Log ID is directly visible in the Data Store UI, this identifier is required to guarantee uniqueness in terms of Data Store entry ID as a timestamp will not guarantee uniqueness.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UTC-Timestamp (Mandatory)&lt;/STRONG&gt;&lt;SPAN&gt; – A timestamp marking when the message first entered the Custom Error Handling Integration Flow. It follows the ISO 8601 format:&amp;nbsp;&lt;/SPAN&gt;yyyy-MM-dd'T'HH:mm:ss.SSS'Z' (Example: 2025-04-20T06:51:11.123Z)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;RetryCount (Optional)&lt;/STRONG&gt;&lt;SPAN&gt; – A counter tracking Data Store restart attempts. For a new erroneous message using Data Store-based restarts, this counter starts at 0 and increments with each retry attempt. This prevents exceeding the maximum allowed retries (MaxDataStoreRetries).&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The entry written to the Data Store contains the message payload and the potential attachments in a Base64-encoded format. Additionally a message header is included which contains metadata required for further processing such as:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The source JMS queue where the message will be placed for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The entry name of the Data Store record&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The Data Store name used for reprocessing&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The maximum retry count assigned to the interface in the Partner Directory (or a default of 3 retries from the Data Store)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The exception message, also stored in Base64-encoded format&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;The structure looks as follows:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;Message&amp;gt;
	&amp;lt;MsgHeader&amp;gt;
		&amp;lt;RestartQueue&amp;gt;${property.SourceJMSQueue}&amp;lt;/RestartQueue&amp;gt;
		&amp;lt;EntryID&amp;gt;${property.EntryID}&amp;lt;/EntryID&amp;gt;
		&amp;lt;RetryDataStore&amp;gt;${property.RetryDataStore}&amp;lt;/RetryDataStore&amp;gt;
		&amp;lt;MaxRetryCount&amp;gt;${property.MaxDataStoreRetries}&amp;lt;/MaxRetryCount&amp;gt;
		&amp;lt;Error&amp;gt;exception.message.Base64encoded&amp;lt;/Error&amp;gt;
	&amp;lt;/MsgHeader&amp;gt;
	&amp;lt;Payload&amp;gt;Payload.Base64encoded&amp;lt;/Payload&amp;gt;
	&amp;lt;Attachments&amp;gt; (minOccurs="0")
		&amp;lt;Attachment&amp;gt; (maxOccurs="unbounded")
			&amp;lt;AttachmentName&amp;gt;attachmentName&amp;lt;/AttachmentName&amp;gt;
			&amp;lt;AttachmentContentType&amp;gt;contType&amp;lt;/AttachmentContentType&amp;gt;
			&amp;lt;AttachmentContent&amp;gt;content.Base64&amp;lt;/AttachmentContent&amp;gt;
		&amp;lt;/Attachment&amp;gt;
	&amp;lt;/Attachments&amp;gt;
&amp;lt;/Message&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1342036264"&gt;Data Store Options&lt;/H2&gt;&lt;P&gt;The extension package utilizes two data store options: RetryStore and NoRetryStore. The Integration Flow &lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/EM&gt;&amp;nbsp;determines – based on the number of JMS retries, PartnerId configuration in Partner Directory and the pipeline Stage where the error occurred – into which kind of Data Store the message is placed.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should be automatically restarted in case of an error in inbound or outbound processing or in the integrated runtime, it will be put into this store. The messages in this store option can be restarted via the Restart Job Template Integration Flow. If the maximum number of retries is not reached for restarted messages, they will be put back into this store with an increased retry counter.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;NoRetryStore&lt;/STRONG&gt;&lt;SPAN&gt; – If a message should not be restarted automatically in case of failing receiver or interface determination or when the maximum number of retries have been reached by an already restarted message, it will be put into this store. The messages in this store option can be restarted explicitly &lt;/SPAN&gt;&lt;SPAN&gt;via the Integration Flow &lt;EM&gt;Pipeline API - Data Store Manage Retries&amp;nbsp;&lt;/EM&gt;or via even by the Restart Job if needed.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1145522759"&gt;Restart configuration settings for scenarios&lt;/H2&gt;&lt;P&gt;The Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;will put the failed messages into Data Stores based on &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt; configuration defined in the Partner Directory via String Parameters. If the configuration is missing in the Partner Directory for a given &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, default values will be applied.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;RetryDataStore&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the name of the Data Store where the erroneous message should be stored in case of exceeding maximum number of retry attempts at JMS layer.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Note that even when set to a specific value, messages destined for the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; will have the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; postfix appended to the Data Store name and they require no explicit configuration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If &lt;EM&gt;&lt;I&gt;RetryDataStore&lt;/I&gt;&lt;/EM&gt; String parameter is not set for the &lt;EM&gt;&lt;I&gt;PartnerId&lt;/I&gt;&lt;/EM&gt;, then the data store names used will be &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_Retry&lt;/I&gt;&lt;/EM&gt; and &lt;EM&gt;&lt;I&gt;&amp;lt;PartnerId&amp;gt;_NoRetry&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;restartMode&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to either &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(Data Store) or &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;JMS&lt;/I&gt;&lt;/EM&gt; &lt;/STRONG&gt;(JMS queue) to define how the messages should be restarted. Default option is &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;DS&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; if not set.&lt;/SPAN&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;DS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue, but in case of an error immediately taking it to a Data Store (preferred and default)&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JMS:&lt;/STRONG&gt;&lt;SPAN&gt; putting a message back to the JMS queue and in case of an error executing retries in this JMS queue according to the maximum number of JMS retries&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;MaxDataStoreRetries&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the number of retries after a restart of a message. If the limit is reached, the messaged is moved into the “&lt;EM&gt;&lt;I&gt;_NoRetry”&lt;/I&gt;&lt;/EM&gt; Data Store. &lt;/SPAN&gt;Default number is 5.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753260232208.png" style="width: 679px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290183iB0248737819ED8F1/image-dimensions/679x404?v=v2" width="679" height="404" role="button" title="mate_moricz_2-1753260232208.png" alt="mate_moricz_2-1753260232208.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949009254"&gt;Restart job configuration&amp;nbsp;&lt;/H2&gt;&lt;P&gt;The Integration Flow “&lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;” relies on the configuration of different Restart Job Profiles. Multiple variants can be configured to have different scheduled versions of the Restart Job for specific interfaces.&lt;/P&gt;&lt;P&gt;Note that interfaces must be explicitly specified, no regex pattern is applicable in the profiles. Also, there is no default Job Profile applicable for all integration scenarios, i.e. if there is no defined job profile for the interface – the messages won’t be restarted&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Status&lt;/STRONG&gt;&lt;SPAN&gt; – Can be set to “&lt;EM&gt;&lt;I&gt;active”&lt;/I&gt;&lt;/EM&gt; or “&lt;EM&gt;&lt;I&gt;inactive”&lt;/I&gt;&lt;/EM&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;InterfacePidList&lt;/STRONG&gt;&lt;SPAN&gt; – Defines the list of the interfaces (or integration scenarios) for which the message restarts should be triggered. Multiple scenarios can be set by using the character semicolon &lt;STRONG&gt;&lt;EM&gt;&lt;I&gt;“;”&lt;/I&gt;&lt;/EM&gt;&lt;/STRONG&gt; as a delimiter. The Restart Job will consider the scenario-specific configuration defined in the Partner Directory (assigned Data Store, number of retries and restart mode).&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Store&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt;&lt;SPAN&gt; If not set, &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt; stores will be always&amp;nbsp;used (with value &lt;EM&gt;&lt;I&gt;Retry&lt;/I&gt;&lt;/EM&gt;). In case of emergencies or if the API based restart can’t be used, restart from the &lt;EM&gt;&lt;I&gt;NoRetryStore&lt;/I&gt;&lt;/EM&gt; can be set for scheduled Restart Jobs. &lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Filters within the Restart Job Profile. If not set, all entries from the given Data Store will be restarted.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Receiver&lt;/STRONG&gt;&lt;SPAN&gt; – (&lt;/SPAN&gt; &lt;SPAN&gt;Receiver name to select all the entries from the Data Store that belong to the specified receiver (for the stages when receiver is unknown (e.g. Inbound), the value “&lt;EM&gt;&lt;I&gt;null&lt;/I&gt;&lt;/EM&gt;” can be sent and then all entries without receiver will be selected). Example of value: &lt;EM&gt;&lt;I&gt;“S4HCLNT100”. &lt;/I&gt;&lt;/EM&gt;Note that the parameter setting is global for all interfaces maintained in the &lt;EM&gt;&lt;I&gt;InterfacePidList&lt;/I&gt;&lt;/EM&gt; parameter, it can’t be set for each interface separately.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeFrom&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval start timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name later than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-01T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;TimeTo&lt;/STRONG&gt;&lt;SPAN&gt; – (Optional parameter): Interval end timestamp in UTC format to select all the entries from the Data Store that have timestamp in DS Entry name earlier than specified timestamp. Example of value: “&lt;EM&gt;&lt;I&gt;2025-06-02T09:00:00.000Z&lt;/I&gt;&lt;/EM&gt;”.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_1-1753261119683.png" style="width: 601px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290215i9B8F1F9C2D096BAA/image-dimensions/601x275?v=v2" width="601" height="275" role="button" title="mate_moricz_1-1753261119683.png" alt="mate_moricz_1-1753261119683.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below screenshot shows a Restart Job profile with the optional parameters.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_2-1753261204824.png" style="width: 599px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290216iC66249024E4F1415/image-dimensions/599x384?v=v2" width="599" height="384" role="button" title="mate_moricz_2-1753261204824.png" alt="mate_moricz_2-1753261204824.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The Restart Job from the template Integration Flow &lt;EM&gt;&lt;I&gt;Pipeline DS Retry - Template - Restart Job&lt;/I&gt;&lt;/EM&gt;&amp;nbsp;can be configured to use a schedule-based trigger (start Timer event). Default configuration is to run &lt;EM&gt;&lt;I&gt;On Deployment.&lt;/I&gt;&lt;/EM&gt;&lt;/P&gt;&lt;DIV&gt;&lt;H2 id="toc-hId-752495749"&gt;&lt;SPAN&gt;On-Demand Restarts or Data Store management via HTTP API&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;There are 2 optional Integration Flows in the package which can be used for on-demand operations. They expose 2 HTTP endpoints to manage Retry related operations and to manage Data Store entries. The functionality is divided into 2 Integration Flows for more granular control on authorization level who is allowed to call Restart operations only and who is allowed to Cancel messages (manipulate Data Store entries).&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="mate_moricz_0-1753261055289.png" style="width: 947px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290213i2EE2FC23FCB080E3/image-dimensions/947x424?v=v2" width="947" height="424" role="button" title="mate_moricz_0-1753261055289.png" alt="mate_moricz_0-1753261055289.png" /&gt;&lt;/span&gt;&lt;DIV&gt;&lt;P&gt;These 2 additional Integration Flows are acting as APIs for more granular control of messages in the Data Stores than the Restart Job. On the other hand, these must be handled with caution as it requires deep understanding of the extension package on how to restart a corresponding package.&lt;/P&gt;&lt;H2 id="toc-hId-555982244"&gt;Configuration steps to use the package&lt;/H2&gt;&lt;DIV&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Configure and Deploy mandatory Integration Artefacts of DS Restart Extension package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Assign Data Store Restart Configuration for Configuration Scenarios in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Enable Custom Exception Handling in generic Integration Flows of Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create Restart Job Profiles in Partner Directory.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a Restart Job Integration Flow from Template, Configure Parameters and Deploy.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;(Optional) Configure and Deploy Integration Flows for On-Demand Restarts or Data Store management via HTTP API.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-359468739"&gt;Further improvements&lt;/H2&gt;&lt;P&gt;We are planning to add further improvements to the package such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Configurable no restart stages&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Add default Restart Job Profile if scenarios are not maintained explicitly&lt;/LI&gt;&lt;LI&gt;Catch mapping errors in the outbound stages and move these messages into the NoRetry store (as there is no option to edit a message like in SAP PO)&lt;/LI&gt;&lt;LI&gt;Catch routing errors for the Integrated Messaging Runtime&lt;/LI&gt;&lt;LI&gt;Current Receiver filter in the Restart Job Profile setting is global, needs to be changed to scenario-specific filter&lt;/LI&gt;&lt;LI&gt;Add extension point in the&amp;nbsp;&lt;EM&gt;Pipeline DS Retry - Custom Error Handling with Data Stores&amp;nbsp;&lt;/EM&gt;Integration Flow for potential custom alerting requirement&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If you have any further ideas to enhance the package, let us know in the comments.&lt;/P&gt;&lt;H2 id="toc-hId-162955234"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The &lt;EM&gt;Process Integration Pipeline Extension - Restart via Data Store&lt;/EM&gt; package offers a viable solution to the challenges faced when utilizing the Process Integration Pipeline concept. By automating message retries through scheduled jobs and APIs, and shifting reliance from Dead Letter Queues to Data Stores,&amp;nbsp;&lt;SPAN&gt;users can effectively manage message restarts as an alternative to the standard error handling of the Pipeline concept. By leveraging the Pipeline’s custom exit for error handling, this can be achieved without requiring changes to the standard Process Integration Pipeline package.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/process-integration-pipeline-extension-restart-via-data-store/ba-p/14153116"/>
    <published>2025-07-23T17:38:26.286000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cpi-buttons-helpful-tools-for-sap-integration-suite-developer/ba-p/14156345</id>
    <title>CPI Buttons: Helpful Tools for SAP Integration Suite Developer</title>
    <updated>2025-07-24T09:15:47.831000+02:00</updated>
    <author>
      <name>emreanil</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1700700</uri>
    </author>
    <content>&lt;P&gt;In my &lt;A href="#https://community.sap.com/t5/technology-blog-posts-by-members/quot-pd-where-used-quot-button-an-extension-for-sap-integration-suite/ba-p/14125200" target="_self" rel="nofollow noopener noreferrer"&gt;previous blog post&lt;/A&gt;, I introduced an extension called &lt;STRONG&gt;PD Where Used&lt;/STRONG&gt;, which helped SAP Integration Suite developers quickly identify where &lt;STRONG&gt;ProcessDirect&lt;/STRONG&gt; endpoints were consumed.&lt;/P&gt;&lt;P&gt;Since then, I’ve gathered feedback and added new features that help integration consultants save time, especially when dealing with large numbers of iFlows. The result is a new, enhanced extension:&lt;/P&gt;&lt;H2 id="toc-hId-1735154661"&gt;CPI Buttons&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;CPI Buttons&lt;/STRONG&gt; is an extension that combines several small but helpful tools to make working with the SAP Integration Suite more efficient. It includes the original &lt;STRONG&gt;PD Where Used&lt;/STRONG&gt; functionality along with new features for navigation, documentation, and artifact discovery.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1538641156"&gt;Why CPI Buttons?&lt;/H2&gt;&lt;P&gt;Many daily tasks in integration projects are repetitive and time-consuming:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Tracing ProcessDirect usage across iFlows&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Tracing JMS usage across iFlows&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Exporting artifact metadata for documentation&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Finding out which iFlow corresponds to a known endpoint&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This extension adds a few non-intrusive buttons directly to the Integration Suite interface to streamline these actions.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1342127651"&gt;Features&lt;/H2&gt;&lt;H3 id="toc-hId-1274696865"&gt;Where Used (PD and JMS)&lt;/H3&gt;&lt;P&gt;This feature appears in the &lt;STRONG&gt;iFlow Design&lt;/STRONG&gt; page and allows you to scan:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;PD Where Used&lt;/STRONG&gt;: Lists other iFlows that consume current flow’s ProcessDirect endpoints.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;JMS Where Used&lt;/STRONG&gt;: Lists other iFlows that send or receive messages using the same JMS queues.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All flow names in the results are clickable, allowing you to directly navigate to the corresponding iFlow.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="pdwhereused2.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288523i6D48DF200EA09E5E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pdwhereused2.gif" alt="pdwhereused2.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="jmswhereused2.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288522iF15487BC80D09D2F/image-size/large?v=v2&amp;amp;px=999" role="button" title="jmswhereused2.gif" alt="jmswhereused2.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-949100641"&gt;&lt;STRONG&gt;Export Integration Content to Excel&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;You’ll find two “Export to Excel” buttons:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;In the &lt;STRONG&gt;Design screen&lt;/STRONG&gt;: Exports all design-time iFlows with technical and business metadata&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;In the &lt;STRONG&gt;Monitoring screen&lt;/STRONG&gt;: Exports deployed artifacts, grouped by type (IntegrationFlow, ValueMapping, etc.)&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These exports help you with documentation, audit preparation, or simply analyzing your integration landscape.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="export in mnt.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288524i90956A10C0267CEB/image-size/large?v=v2&amp;amp;px=999" role="button" title="export in mnt.png" alt="export in mnt.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="export to excel button in shell design.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288525iDD4B2FA8296AFC55/image-size/large?v=v2&amp;amp;px=999" role="button" title="export to excel button in shell design.png" alt="export to excel button in shell design.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Untitled.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288527i59FEB683ED4C4A67/image-size/large?v=v2&amp;amp;px=999" role="button" title="Untitled.png" alt="Untitled.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-881669855"&gt;Endpoint Search Bar (Monitoring Page)&lt;/H3&gt;&lt;P&gt;Support projects often suffer from inconsistent naming conventions between iFlow names and endpoint URLs. It’s common to know an endpoint (from logs, alerts, tickets) but not which iFlow it's connected to.&lt;/P&gt;&lt;P&gt;This search bar, added to the &lt;STRONG&gt;Monitoring page&lt;/STRONG&gt;, allows you to paste any known endpoint and shows the corresponding iFlow instantly via a toast popup.&lt;/P&gt;&lt;P&gt;Only exact matches are considered to avoid false positives. After pasting the endpoint to the searchbar, you should push the enter button.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="endpointsearch2.gif" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/288528i75C78C0F4655B79E/image-size/large?v=v2&amp;amp;px=999" role="button" title="endpointsearch2.gif" alt="endpointsearch2.gif" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-556073631"&gt;&lt;STRONG&gt;Platform Compatibility&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;CPI Buttons has been tested and works reliably on both SAP Integration Suite (Cloud Foundry) and Neo environments.&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-359560126"&gt;Installation&lt;/H2&gt;&lt;P&gt;For Chrome: Install directly from &lt;A href="https://chromewebstore.google.com/detail/cpi-buttons/jhmmppnlbopemjlalhnbbffflkonhcol" target="_self" rel="nofollow noopener noreferrer"&gt;Chrome Web Store&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Once installed, the new buttons will appear automatically in the relevant SAP Integration Suite screens.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-163046621"&gt;Feedback&lt;/H2&gt;&lt;P&gt;If you find &lt;STRONG&gt;CPI Buttons&lt;/STRONG&gt; useful, feel free to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Share with your team&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Connect with me on &lt;A href="https://www.linkedin.com/in/eakucuk/" target="_self" rel="nofollow noopener noreferrer"&gt;LinkedIn&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Comment on SAP Community with suggestions or feature requests&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Emre Anil Kucuk&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cpi-buttons-helpful-tools-for-sap-integration-suite-developer/ba-p/14156345"/>
    <published>2025-07-24T09:15:47.831000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/beginners-guide-to-advanced-event-mesh/ba-p/14160854</id>
    <title>Beginners Guide to Advanced Event Mesh</title>
    <updated>2025-07-24T19:38:48.018000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1606821552"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will show the common scenarios of Advanced Event Mesh. To get familiar with basic concepts, go through the below links as a prerequisite.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-basic-concepts/ba-p/13572050" target="_blank"&gt;&lt;SPAN&gt;Advanced Event Mesh: Basic Concepts&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-create-your-first-event-broker/ba-p/13571945" target="_blank"&gt;Advanced Event Mesh: Create your first event broker&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/advanced-event-mesh-queue/ba-p/13574698" target="_blank"&gt;Advanced Event Mesh: Queue&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Advanced event mesh is powered by Solace and throughout the blog post I will use a solace trial account. All the steps remain same if you are using AEM (Advanced Event Mesh).&lt;/P&gt;&lt;P&gt;In this blog post, the following topics will be covered.&lt;/P&gt;&lt;UL class="lia-list-style-type-square"&gt;&lt;LI&gt;Publish Message to Queue using AEM adapter&lt;/LI&gt;&lt;LI&gt;Consume Message from Queue using AEM adapter&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;DMQ Setup and Error Handling&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Direct Message&lt;/LI&gt;&lt;LI&gt;Durable topic endpoint&lt;/LI&gt;&lt;LI&gt;Use of Selector&lt;/LI&gt;&lt;LI&gt;Send NACK to Publisher&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Time-to-Live&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;Rest Delivery Point&lt;/LI&gt;&lt;LI&gt;Replay Log&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Parallel Consumers&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Request Reply Pattern&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1539390766"&gt;&lt;U&gt;Scenario 1:&amp;nbsp;&lt;STRONG&gt;Publish Message to Queue using AEM adapter&lt;/STRONG&gt;&lt;/U&gt;&lt;/H2&gt;&lt;H2 id="toc-hId-1342877261"&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1:&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Create a queue in AEM&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290621iC6074800661F8CC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pic1.png" alt="Pic1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1146363756"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Create an iFlow&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290622iFD2EF4CA7744712E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Configure HTTP sender adapter&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290624i8384715FAECDD8FA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Configure AEM receiver adapter.&amp;nbsp;Here, the password secure alias is of type Secure Parameter.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290625i1CE663D6B9E2BA16/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The queue name is populated based on the value of Camel header - CamelHttpPath&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290626iEA4E50394B278A2A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic5.png" alt="pic5.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;The message is set as DMQ eligible.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290627iE48BC6BCB83F7BCC/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-949850251"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Send event message using API testing tool to the endpoint:&amp;nbsp;&lt;SPAN&gt;https://&amp;lt;host&amp;gt;/http/generic/order&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290638iF54AA38F1805B400/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic7.png" alt="pic7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-753336746"&gt;Step 4:&lt;/H2&gt;&lt;P&gt;Validate if the message is pushed to the AEM queue&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290639i5BE9EF92F2528F47/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-427740522"&gt;&lt;U&gt;Scenario 2:&amp;nbsp;&lt;STRONG&gt;Consume Message from Queue using AEM adapter&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-360309736"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Create an iFlow to consumer message from the AEM queue. Set Allowed headers as * to trace the incoming headers.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290657iB3EECA80B4123FD5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure AEM sender channel&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290655iCB315C9F6B5FFD84/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-163796231"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Check message trace in Cloud Integration and verfiy headers. As the publisher iFlow set the the header DMQ eligible as true, the 'IsDMQEligible' header is true.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290658i8384CCFDF138EB1D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--32717274"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Verify the consumer status attached to the AEM queue.&amp;nbsp; Here, it reflects 'Messages Confimed Delivered' as 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290660iB9EBA690461C792E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H1 id="toc-hId-411426585"&gt;&lt;U&gt;Scenario 3:&amp;nbsp;DMQ Setup and Error Handling&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;To move a message to DEAD Message queue upon delivery failure, follow the steps below.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--78489927"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Configure AEM queue as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic14.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290674iDCE5654391468F40/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic14.png" alt="pic14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic15.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290675iD35BE07431A55647/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic15.png" alt="pic15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Also, the queue is subscribed to the topic expression order/&amp;gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic17.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290699i46DF08487EFA60B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic17.png" alt="pic17.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;H2 id="toc-hId--275003432"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--471516937"&gt;&lt;SPAN&gt;Step 2:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Change receiver channel configuration in order to push event message to a topic.&amp;nbsp;The topic name is dynamically set using the header - CamelHttpPath .&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290701iCBD430E46E440983/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic18.png" alt="pic18.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;SPAN&gt;The sender channel will consume messages from the queue named ‘order’. The message sent from the publisher iFlow is a JSON message. In order to simulate failure, XML to JSON converter block is added .&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic24.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290791i5F394882ADC9A341/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic24.png" alt="pic24.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;SPAN&gt;&lt;SPAN&gt;Notice the acknowledgement mode is 'Automatic Immediate' at Cloud Integration (Consumer).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic20.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290703i9E27FF6CCB4DA0A7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic20.png" alt="pic20.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId--668030442"&gt;&lt;SPAN&gt;&lt;SPAN&gt;Step 3:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;POST message to the endpoint &lt;/SPAN&gt;&lt;SPAN&gt;&lt;A target="_blank" rel="noopener"&gt;https://&amp;lt;host&amp;gt;/http/generic/order&lt;/A&gt;. No message will be pushed to the queue, because the topic subscription order/&amp;gt; expects at least one level after order.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic21.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290704i4DB8D6A7DD42635D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic21.png" alt="pic21.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290787i44C777A310C778E8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic22.png" alt="pic22.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;H2 id="toc-hId--864543947"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId--1061057452"&gt;Step 4:&lt;/H2&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;Push message to the endpoint&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;A target="_blank" rel="noopener"&gt;https://&amp;lt;host&amp;gt;/http/generic/order/create&lt;/A&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic23.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290788i5E6B085EB962D6D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic23.png" alt="pic23.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;But, observe the message is successfully deleted from the queue. It is because acknowledgment mode is 'automatic immediate'.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic22.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290792i0060F19F2AE2736F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic22.png" alt="pic22.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;SPAN&gt;Now, the retry happens in Cloud Integration 4 times and then the message is marked as failed.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic25.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291140i830D53EFEB5DD68C/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic25.png" alt="pic25.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;The below shows the trace of Run 1. The header 'DeliveryCount' is set from AEM. The header 'LocalProcessingAttempt' refers to processing attempts at Cloud Integration.&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Pic26.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290796iFD894F15D0A46C61/image-size/large?v=v2&amp;amp;px=999" role="button" title="Pic26.png" alt="Pic26.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;At run 5,&amp;nbsp; LocalProcessingAttempt value will be 5. After run 5, the message moves to failed state, as the maximum message processing attempts is set as 5.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic27.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290833i794C46321035808E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic27.png" alt="pic27.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;H2 id="toc-hId--1257570957"&gt;Step 5:&lt;/H2&gt;&lt;P&gt;Now, change the acknowledge mode to 'Automatic on Exchange Complete'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic28.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290837iAD4C80286CFE4F86/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic28.png" alt="pic28.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;Trigger the event message from API testing tool.&amp;nbsp;&lt;SPAN&gt;After trigger, the message is still in the queue, while retry is going on at Cloud Integration.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic29.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290841iB059A0701B8BA1D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic29.png" alt="pic29.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;SPAN&gt;Now, after 4 retries, in Cloud Integration, failed status is sent back to the AEM.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic30.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290843iF6641703926D6186/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic30.png" alt="pic30.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;During the 5th run, we can see the local processing attempt as 5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic32.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290846i130425AFEF233B35/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic32.png" alt="pic32.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we have provided, the re-delivery count as 3 in AEM, the AEM re-delivers it 3 times.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic31.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290845i2D4D729B3EBB60F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic31.png" alt="pic31.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below shows 1st re-delivery i.e, 2nd delivery from AEM (Run 5 at Cloud Integration)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic33.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290847iE32C75EB29C53539/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic33.png" alt="pic33.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;3rd re-delivery from AEM&amp;nbsp;(Run 5 at Cloud Integration)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic34.png" style="width: 986px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290848iE1A8D124F345D116/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic34.png" alt="pic34.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Then the message is moved to DMQ (Dead Message Queue). Please note, the DMQ queue must be created beforehand. DMQs are not automatically created during message failure.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic35.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290849i7E39079208A3C7F6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic35.png" alt="pic35.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic36.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290850i58FDD6DF857C9517/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic36.png" alt="pic36.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--1160681455"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--1357194960"&gt;&lt;U&gt;Scenario 4:&amp;nbsp;&lt;STRONG&gt;Direct Message&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For direct message, if we use topic, no queue or topic endpoint configuration is required at AEM. If consumer is available during publishing of message, the message will be consumed, else the message will be lost.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1678927781"&gt;&lt;SPAN&gt;Step 1:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Configure Publisher iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic37.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290851iFACC73D447C1FDFA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic37.png" alt="pic37.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--1875441286"&gt;&lt;SPAN&gt;Step 2:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Configure Consumer iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic38.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290853iA5DC1A99EDE40932/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic38.png" alt="pic38.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--2071954791"&gt;&lt;SPAN&gt;Step 3:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Test and validate.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic39.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290854i54BAE817D3535F4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic39.png" alt="pic39.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic40.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290855i29F4F0EB4BF0AC54/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic40.png" alt="pic40.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--1975065289"&gt;&lt;U&gt;Scenario 5: &lt;STRONG&gt;Durable topic endpoint&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1829985495"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Create a topic endpoint at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic41.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290893i30D83B02B9A5747B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic41.png" alt="pic41.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1633471990"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Configure the AEM receiver adapter which acts as a publisher.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic42.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290898iE594719D65228B8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic42.png" alt="pic42.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the AEM sender adapter which acts as a subscriber.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic43.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290899i12DEEFDC36C8EFED/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic43.png" alt="pic43.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Durable Topic endpoint supports a single subscription. Once a consumer is attached, the topic name gets populated.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic44.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290901iD88E84210C502EF6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic44.png" alt="pic44.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, currently the topic endpoint has 2 messages queued.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1436958485"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Change the topic name at Cloud Integration side to 'product/create'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic45.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290907i7031B5674641AE40/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic45.png" alt="pic45.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After changing the topic name to 'product/create' and deploying the consumer iFlow, all existing messages are deleted automatically without delivering it to the consumer and the recent topic name gets reflected.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic46.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290912i4477764CC85AFF46/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic46.png" alt="pic46.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1533847987"&gt;&lt;U&gt;Scenario 6: Use of Selector&lt;/U&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1043931475"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Configure Publisher iFlow as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic47.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290916iC7A8E5D494AF399F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic47.png" alt="pic47.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Set event type, priorty and status as user properties.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic48.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290917iEBE79C4AD51195AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic48.png" alt="pic48.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic50.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290919iB7F1B64273E62414/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic50.png" alt="pic50.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-847417970"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Populate the selector field at AEM sender adapter as below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic51.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290920i573343B7C2BA8B45/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic51.png" alt="pic51.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-819088156"&gt;Step 3:&lt;/H2&gt;&lt;P&gt;Test with payload field values as below:&lt;/P&gt;&lt;TABLE border="1" width="94.90771198830409%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;data/eventType&lt;/TD&gt;&lt;TD width="44.908400877545695%"&gt;order.updated&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;data/status&lt;/TD&gt;&lt;TD width="44.908400877545695%"&gt;delayed&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;data/priority&lt;/TD&gt;&lt;TD width="44.908400877545695%"&gt;high&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic52.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290922iBF31347C5651BE5F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic52.png" alt="pic52.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check the trace of consumed message at Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic53.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290942i0A230330A0075032/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic53.png" alt="pic53.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now, test with payload field values as below:&lt;/P&gt;&lt;TABLE border="1" width="845"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="441.516px" height="30px"&gt;data/eventType&lt;/TD&gt;&lt;TD width="402.484px" height="30px"&gt;order.updated&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="441.516px" height="30px"&gt;data/priority&lt;/TD&gt;&lt;TD width="402.484px" height="30px"&gt;high&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic54.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291228iF0EF981B59809CFE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic54.png" alt="pic54.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The message is not consumed from the queue as the selector does not match.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic55.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290949i98761AD56CA07A5A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic55.png" alt="pic55.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-915977658"&gt;&lt;U&gt;Scenario 7:&amp;nbsp;&lt;STRONG&gt;Send NACK to Publisher&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;General behavior is&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;If topic subscription does not exist for delivery mode &lt;EM&gt;persisted(guaranteed)&lt;/EM&gt; or &lt;EM&gt;direct&lt;/EM&gt;, no error response is sent to the publisher&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If queue does not exist for delivery mode &lt;EM&gt;persisted(guaranteed)&lt;/EM&gt;, error response is sent to the publisher&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic57.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290968i33854A2A8617A08E/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic57.png" alt="pic57.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;If the queue does not exist for delivery mode &lt;EM&gt;direct&lt;/EM&gt;, no error response is sent to the publisher.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The profile related to used client username (solace-cloud-client) is 'default' at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic58.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290970i10921FB16D2759F1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic58.png" alt="pic58.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;Go to 'default' profile at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic60.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290971iACE050A7AEB5D13B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic60.png" alt="pic60.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After 'Reject Messages to Sender On No Subscription Match Discard' is enabled, if no matching topic subscription is found for persistent delivery mode, an error message is returned to the publisher.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic61.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290976i34F09850674DF65B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic61.png" alt="pic61.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, if we stop the incoming calls to the queue,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic62.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290991i38387B817B363A53/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic62.png" alt="pic62.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we will get the error message as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic63.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290997i9F7E835277C656C3/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic63.png" alt="pic63.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, we change the property 'Reject Messages to Sender on Discard' on the queue to ‘Always’,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic64.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290998i41138C90FE54CC02/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic64.png" alt="pic64.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;we will get the error message as below,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic65.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/290999iB2B5BBC4DE9DF43F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic65.png" alt="pic65.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-719464153"&gt;&lt;U&gt;Scenario 8:&amp;nbsp;&lt;STRONG&gt;TTL (Time to Live)&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;Enable TTL feature of queue at AEM.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic66.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291001i606DE7D2FE6F0AD0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic66.png" alt="pic66.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If the message is not consumed, the message will be moved to DMQ after 1 min.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Here, no TTL specific settings are configured in the receiver channel at Cloud Integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If we don’t want to store it in the DMQ and discard the message after TTL, set DMQ eligible to false at publisher iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic67.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291002iC9AF3ED1D503564B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic67.png" alt="pic67.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After TTL, the stats will reflect the same at AEM.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic69.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291004i7EDF55607845D1FD/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic69.png" alt="pic69.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If TTL is set at receiver adapter, the minimum of the queue level TTL and the publisher level TTL takes effect.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic70.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291006i23F62FB47ADD4EEE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic70.png" alt="pic70.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-522950648"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-326437143"&gt;&lt;U&gt;Scenario 9: RDP (REST Delivery Point)&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;We have a common DMQ queue for all processes and the Rest Delivery points to Cloud Integration endpoint. Based on the endpoint, Cloud Integration forwards it for relevant processing of the DMQ messages.&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Business Object&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Endpoint&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Business Partner&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;redeliver/businesspartner/&amp;lt;BPNumber&amp;gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;Order&lt;/SPAN&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;SPAN&gt;redeliver/order/&amp;lt;OrderNumber&amp;gt;&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId--163479369"&gt;Step 1:&lt;/H2&gt;&lt;P&gt;Design the publisher iFlow as below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic71.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291014iA5A86E2089B5F2C8/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic71.png" alt="pic71.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;User Property named ‘identifier’ is added in AEM receiver adapter.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic72.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291017iDC942A34096784D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic72.png" alt="pic72.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--359992874"&gt;Step 2:&lt;/H2&gt;&lt;P&gt;Create RDP at AEM.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic73.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291028iDD0D5E98A5AA49E9/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic73.png" alt="pic73.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Create Rest Consumer with authentication type ‘OAuth2’ for Cloud Integration&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic74.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291031i1C22EA77E23CF9A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic74.png" alt="pic74.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Bind the AEM queue to the RDP endpoint.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic75.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291033iF2FCAAC85C4F866D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic75.png" alt="pic75.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;On the queue bindings settings, turn on the 'Substitution Expressions' for 'Request Target Evaluation'.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The below substitution expression is used for target endpoint genertion. The expression ${topic(1)} represents the 1st level of the topic.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;/http/redeliver/${topic(1)}/${userPropertyAsString("identifier")}&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic75.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291038iC1E75653930261EF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic75.png" alt="pic75.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In case of failure at RDP, it retries forever unless we disable 'Try Forever' and set 'Maximum Redelivery Count' at DMQ.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic77.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291052i8E34A3ADCC9F61CC/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic77.png" alt="pic77.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId--556506379"&gt;&lt;SPAN&gt;Step 3:&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;The generated endpoint for order message is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic78.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291053i2EA1E84EDA9325AB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic78.png" alt="pic78.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The generated endpoint for business partner message is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic79.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291054i3F55CCA3CA31E608/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic79.png" alt="pic79.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--459616877"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--656130382"&gt;&lt;U&gt;Scenario 10:&amp;nbsp;&lt;STRONG&gt;Replay Log&lt;/STRONG&gt;&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;If replay log is enabled, the messages can be replayed from Broker without publisher intervention.&amp;nbsp;&lt;SPAN&gt;To avoid saving the log for all queues, we can enable logging based on topic subscription.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic80.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291056iB4476E4B9E0047F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic80.png" alt="pic80.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic81.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291058i95FE8DA4C3DD1900/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic81.png" alt="pic81.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For example, the consumer 'Cloud Integration' forwards message to a target but the target system is down. All the messages from that point need to be replayed. For that, we need a start pointer and '&lt;/SPAN&gt;&lt;SPAN&gt;ReplicationGroupMessageId' can be used. As a pre-requisite, r&lt;/SPAN&gt;&lt;SPAN&gt;eplication group message id for each message should be logged as a custom header at Cloud Integration.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic82.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291061i78FA1A7A5D0126E4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic82.png" alt="pic82.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, replay all the messages after the above replication group message id. Please note that selective replay of messages or providing an end replication group message id is not possible. Therefore, idempotency must be implemented on the target side to avoid processing duplicate messages.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic83.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291069iC7914E3285F415C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic83.png" alt="pic83.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic84.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291071i5D3AB816268F88CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic84.png" alt="pic84.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Messages after Replication Group Message ID will be replayed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic85.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291072i539B7859FA886E9F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic85.png" alt="pic85.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Similarly, we can create a new queue and attach it to a new consumer and replay the previous log related to its topic subscription from the beginning or from a particular date and time or based on replication group message id.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--684460196"&gt;&lt;U&gt;Scenario 11:&amp;nbsp;Parallel Consumers&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;No. of consumers = (no. of worker node) * (no. of parallel consumer).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic87.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291077i147DDF3C8901F325/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic87.png" alt="pic87.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If the tenant has 2 worker nodes and 1 parallel consumer, the consumer attached the queue will show up as below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic86.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291078i86448972D098B48B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic86.png" alt="pic86.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If we increase the parallel consumer to 5, &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic88.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291080i174609F5D2752BE7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic88.png" alt="pic88.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;the consumer count becomes 10.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic89.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291082iFC0ED6E2A4F086EA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic89.png" alt="pic89.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Only 1 consumer is active, the remaining 9 consumers are in inactive state. This is because the queue type is 'Exclusive'.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now, if we change the queue type to ‘Non-Exclusive’,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic90.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291083i79857255A3B547AA/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic90.png" alt="pic90.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;all the consumers are active.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic91.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291084iA3087C31D9501336/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic91.png" alt="pic91.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;E.g., if we want a particular object id (say Business Partner) to be processed by the same consumer, we can utilize the partition concept. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;S&lt;/SPAN&gt;&lt;SPAN&gt;et the partition count as 5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic92.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291085iA45559FCD26B2AAF/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic92.png" alt="pic92.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic93.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291087iBB1F2AAA12F8EDBE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic93.png" alt="pic93.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Set the parallel consumers as 3&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic94.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291088i29DE6C3C193D5F0A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic94.png" alt="pic94.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;As the tenant has 2 worker nodes, the total no. of consumer will show up as 6.&amp;nbsp;&lt;SPAN&gt;Only 1 consumer is inactive. Remaining consumers are in active state as the number of partition count is 5.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic95.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291089i0B17307611C8095F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic95.png" alt="pic95.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;If we set 'JMSXGroupID' value, it will be used as a partition key.&amp;nbsp;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic96.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291090iDC841DDD6D62863A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic96.png" alt="pic96.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;For example, for BP number '10001234', the message was consumed by Flow ID 248 and for BP number '10001236', it was consumed by Flow ID 281.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;All the updates related to BP '10001236', are lined up for the same consumer.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic98.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291092i063CF5ABE600E7BC/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic98.png" alt="pic98.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic99.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291093i5D4F5683AD079B42/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic99.png" alt="pic99.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--880973701"&gt;&lt;U&gt;Scenario 12: Request Reply Pattern&lt;/U&gt;&lt;/H1&gt;&lt;P&gt;The publisher iFlow is designed as below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic102.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291099iB8685F92142FC04F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic102.png" alt="pic102.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure the AEM receiver channel as below.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic100.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291096i51D08A48BE741F7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic100.png" alt="pic100.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This will create a non-durable queue at AEM when the message is sent from publisher iFlow.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic101.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291098i9DF60083CC67AC7A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic101.png" alt="pic101.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Consumer iFlow receives the headers populated from Publisher iFlow related to response propagation, such as&amp;nbsp;&lt;EM&gt;ReplyToDestination&lt;/EM&gt;, &lt;EM&gt;ReplyToEndpointType&lt;/EM&gt; and &lt;EM&gt;CorrelationId&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic103.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291100i7727E259B177B710/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic103.png" alt="pic103.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic104.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291101iE5C1FBFA5A911A93/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic104.png" alt="pic104.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Design Consumer iFlow as below&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic105.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291104i3A8FEF4838E9CB72/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic105.png" alt="pic105.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note: The delay is used here only to simulate processing time instead of adding additional pallets.&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;AEM receiver adapter is used to send back the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic106.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291114i4747512158DC8995/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic106.png" alt="pic106.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic107.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291115iB9923241A9A90D28/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic107.png" alt="pic107.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After 'request-reply' step in the publisher iFlow message trace, we will see the response headers.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic108.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291116iE5A6B0C349D84A19/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic108.png" alt="pic108.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Lets test the publisher iFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic109.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291227i6F9868EF3389CFD7/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic109.png" alt="pic109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As we can see, the response message is received.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Thank you for reading this blog post.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/beginners-guide-to-advanced-event-mesh/ba-p/14160854"/>
    <published>2025-07-24T19:38:48.018000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695</id>
    <title>Step-by-Step Guide: Secure File Exchange with AS2 Adapter in SAP Cloud Integration</title>
    <updated>2025-07-25T07:47:44.145000+02:00</updated>
    <author>
      <name>Rishikasairi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940355</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1734144805"&gt;&lt;SPAN&gt;Sending and Receiving with AS2&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;Ready for a quick, hands-on story about sending files safely between companies? In this part, we’ll walk through how to set up the AS2 protocol—a popular way to send important documents online, keeping them private and making sure they arrive as intended.&lt;/P&gt;&lt;P&gt;You’ll learn how to:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Set up your system to send and receive files using AS2&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Turn on security features to keep your files safe while they travel&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Get a special receipt (called an MDN) every time a file is delivered, so you know it made it safely&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Handle big batches of files and make sure each one is tracked properly&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All of this is designed so you can follow along in just 10–15 minutes—no fuss, no confusion. By the end, you’ll have a working setup that connects smoothly with the tools we’ll cover next.&lt;/P&gt;&lt;P&gt;In this blog I am using two tenants One as sender Adapter [who is receiving the Data]and one as |Receiver Adapter [who is sending the Data].&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Workflow Mechanism &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Tenant 1: Sender Adapter Configuration&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Details&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authentication 1&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Role-Based via Load Balancer with &lt;STRONG&gt;ESB Messaging&lt;/STRONG&gt; role&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Decryption&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Use &lt;STRONG&gt;Receiver's Certificate&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Signing&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Use &lt;STRONG&gt;own Keypair Name&lt;/STRONG&gt; Algorithm: e.g., SHA256withRSA&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN (Message Disposition Notification)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Asynchronous MDN&lt;/STRONG&gt; - Use &lt;STRONG&gt;same certificate&lt;/STRONG&gt; used in Decryption - &lt;STRONG&gt;Authentication&lt;/STRONG&gt;: Basic Auth or Client Certificate (depends on Tenant 2 setup) - Triggered by &lt;STRONG&gt;Asynchronous iFlow&lt;/STRONG&gt; from Tenant 2&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Tenant 2: Receiver Adapter Configuration&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Details&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Basic Auth or Client Certificate - Use &lt;STRONG&gt;Client ID/Secret&lt;/STRONG&gt; or &lt;STRONG&gt;PFX file&lt;/STRONG&gt; received from Sender&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Encryption&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Create and configure a &lt;STRONG&gt;Key Pair&lt;/STRONG&gt; - Specify keypair name in &lt;STRONG&gt;Encryption Section&lt;/STRONG&gt; - Use the &lt;STRONG&gt;same algorithm&lt;/STRONG&gt; as the keypair&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Signing&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Upload and configure the &lt;STRONG&gt;Sender’s Certificate&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN Synchronous&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Use Sender’s certificate for &lt;STRONG&gt;signing&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN Asynchronous&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- &lt;STRONG&gt;No authentication required&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Tenant 2: Asynchronous Flow (for MDN callback)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Feature&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Details&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authorization&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;- Role-based access - Forward the &lt;STRONG&gt;PFX file&lt;/STRONG&gt; to Tenant 1 (Sender) - Used to sign MDN or decrypt incoming AS2 messages&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;AS2 sender (Receiving data) Configurations&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1: Create an I Flow&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Log in to SAP Cloud Integration (CPI)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Open your CPI tenant.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Go to Design.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Create a New Integration Flow:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click on Artifacts under your desired package.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click Add &amp;gt; Integration Flow.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Provide a Name and Description.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click OK.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_0-1751539462542.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282179iE481BAA1B0BAC4F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_0-1751539462542.png" alt="Rishikasairi_0-1751539462542.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2: Add Sender and Start Message&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Add Sender:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the IFlow canvas, drag the Sender element from the palette to the left side of the flow.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Configure Sender with AS2 Adapter&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click on the Sender element.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Connect Sender to Start Message&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;In the Adapter Type dropdown, select AS2.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Click the pencil/edit icon to modify the AS2 adapter settings&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_1-1751539535217.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282182i4F1B4EE41219A1F5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_1-1751539535217.jpeg" alt="Rishikasairi_1-1751539535217.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3: In the connection tab of AS2 Adapter&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Address:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This is the endpoint path to which the AS2 messages will be sent.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Use a unique and descriptive path (e.g., &lt;/SPAN&gt;&lt;SPAN&gt;/as2/receiver-partner&lt;/SPAN&gt;&lt;SPAN&gt;).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensure it is consistent with your partner configuration.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Authorization:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;You need to specify the authorization type for accessing the AS2 endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Typically, this is "User Role".&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;User Role:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;The user role assigned here must have access rights to call or expose the AS2 endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Example: &lt;/SPAN&gt;&lt;SPAN&gt;ESBMessaging.send&lt;/SPAN&gt;&lt;SPAN&gt;, &lt;/SPAN&gt;&lt;SPAN&gt;AS2InboundUser&lt;/SPAN&gt;&lt;SPAN&gt;, or any custom role with proper permissions.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_2-1751539535221.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282181i5FEF37FFA245D18F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_2-1751539535221.jpeg" alt="Rishikasairi_2-1751539535221.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;This the role that I was being used in the AS2 Endpoint creation iflow. If you would like to create a new role. Create in the Manage Security Material &amp;gt; User Roles and you can assign the role in the Integration flow service key instance so that this service key instance credentials can be used for authentication.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_3-1751539535228.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282183iED4FA93F6D490601/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_3-1751539535228.jpeg" alt="Rishikasairi_3-1751539535228.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I have assigned role in the Integration flow Instance (DEV) and Updated the Instance.&lt;/P&gt;&lt;P&gt;I have assigned role in the Integration flow Instance (DEV) and Updated the Instance.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_4-1751539649132.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282189iA529CA00DDCF1D6F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_4-1751539649132.jpeg" alt="Rishikasairi_4-1751539649132.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4: In the processing Tab of AS2 Adapter&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;PARTNER ID RESOLUTION&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Source: &lt;/SPAN&gt;&lt;SPAN&gt;Authorized User&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This means the AS2 partner is determined based on the authenticated user calling the endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;The user must be mapped to a partner AS2 ID in your system.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;EXPECTED MESSAGES&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;These fields define criteria to filter and validate inbound AS2 messages:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Message ID Left Part / Right Part:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Typically used to validate a pattern in the AS2 message ID.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Default is &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt; which means no filtering is applied.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Partner AS2 ID:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Expected AS2 identifier of the partner.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt; means no specific partner filtering.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Own AS2 ID:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Your tenant's AS2 ID. Used to verify the &lt;/SPAN&gt;&lt;SPAN&gt;To:&lt;/SPAN&gt;&lt;SPAN&gt; AS2 header.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;If set to &lt;/SPAN&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt;, it's not enforced.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Message Subject:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Can be used to filter messages based on the subject header.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;0&lt;/SPAN&gt;&lt;SPAN&gt; means subject is not checked.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Number of Concurrent Processes:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Controls parallel processing of incoming messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Set to &lt;/SPAN&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;SPAN&gt; in screenshot — means single-threaded processing for this endpoint.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;MESSAGE SETTINGS&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Mandatory File Name:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If enabled, the AS2 message must include a filename.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Useful for systems relying on filename-based routing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Duplicate Message ID:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;If enabled, it checks for duplicate AS2 message IDs and avoids processing them again.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Prevents reprocessing of already received messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Duplicate File Name:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Checks for duplicate file names in incoming messages.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_5-1751539649137.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282188i965EEAE116AE5154/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_5-1751539649137.jpeg" alt="Rishikasairi_5-1751539649137.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 5: Configuration of Security tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;MESSAGE DECRYPTION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Decryption Configuration Type: &lt;/STRONG&gt;&lt;SPAN&gt;Channel Configuration&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This means the decryption settings are configured directly in the adapter, not inherited from integration flow settings.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Decrypt Message: (Checked)&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This indicates the incoming AS2 message is expected to be &lt;STRONG&gt;encrypted&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;CPI will decrypt it using the specified &lt;STRONG&gt;private key&lt;/STRONG&gt;.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Private Key Alias:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;This is the alias of the private key created in the &lt;STRONG&gt;Keystore&lt;/STRONG&gt; of your tenant.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;CPI uses this private key to &lt;STRONG&gt;decrypt&lt;/STRONG&gt; the AS2 message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;You have to create the Keypair in the keystore &lt;/SPAN&gt;&lt;SPAN&gt;(with alias like &lt;/SPAN&gt;&lt;SPAN&gt;as2_decryption_key&lt;/SPAN&gt;&lt;SPAN&gt;).&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&amp;nbsp; After Creating it, we have to download the certificate of the keypair which we have created.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensure the certificate is sent to the person who is encrypting data.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;SIGNATURE VERIFICATION&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Verify Signature: Not Required&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Means the inbound AS2 message is not expected to be signed.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;CPI will not verify the digital signature of the message.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Required: TRUSTED CERTIFICATE&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Enforces signature verification.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Verifies if signature is present but doesn’t fail if it's missing.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Add the Certificate in the &lt;STRONG&gt;keystore which received from the receiver&lt;/STRONG&gt; with the name and mention it in the public key alias&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Required: TRUSTED ROOT CERTIFICATE&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;For this get the root certificate from the Receiver and upload in the Keystore with alias name and mention in the Iflow.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_6-1751539649143.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282187iDE5638B93B561284/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_6-1751539649143.jpeg" alt="Rishikasairi_6-1751539649143.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 6: Configuration of MDN tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Private Key Alias for Signature:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Used to sign the MDN (Message Disposition Notification).&lt;/LI&gt;&lt;LI&gt;Ensure the alias exists in Keystore. (This is the name of the keypair that you have used in the decryption process)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Signature Encoding:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Format of the MDN signature.&lt;/LI&gt;&lt;LI&gt;Options: binary or base64. [ Better to keep it required as we have Provide private key]&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Propagate MDN Details to Exchange:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Sends MDN info (like disposition, timestamp) to integration flow.&lt;/LI&gt;&lt;LI&gt;Optional – enable if needed by downstream logic. [Better to keep it required]&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Negative MDN on Processing Failures:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Sends a negative MDN if message processing fails.&lt;/LI&gt;&lt;LI&gt;Useful for notifying partners about issues.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Asynchronous MDN Connection Settings:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Proxy Type:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Typically set to Internet.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Method to authenticate async MDN responses.&lt;/LI&gt;&lt;LI&gt;Usually None unless required by proxy.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Timeout (in ms):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Wait time for async MDN.&lt;/LI&gt;&lt;LI&gt;Example: 300000 ms = 5 minutes.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Feature/Aspect&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Synchronous MDN (AS2)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Asynchronous MDN (AS2)&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MDN Handling&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN (receipt) is generated and attached to the log immediately when the AS2 endpoint is hit, regardless of payload correctness.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN response is delayed; the system waits to send the MDN to another AS2 endpoint (possibly on a different tenant).&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Endpoint&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN returned to sender in the same HTTP session as the original message.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;MDN sent to a different AS2 endpoint (may be on another tenant), not in the same session.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Authentication&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Uses the sender's own credentials or local settings.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Requires the PFX file (certificate) of the target AS2 endpoint’s tenant for authentication.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Use Case&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Immediate acknowledgment, simple integration, and logging.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;SPAN&gt;Flexible routing, multi-tenant or cross-system integrations, delayed or custom processing.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_7-1751539789921.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282192i991AD05F84DAEBD4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_7-1751539789921.jpeg" alt="Rishikasairi_7-1751539789921.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 7: Configuration of Delivery Assurance tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Quality of Service:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set to &lt;STRONG&gt;Exactly Once&lt;/STRONG&gt; – ensures no duplicate message processing.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Retry Interval (in min):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Initial retry delay.&lt;/LI&gt;&lt;LI&gt;Example: 1 min before first retry.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Exponential Backoff:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Retries wait longer after each failure (e.g., 1 → 2 → 4 min).&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Maximum Retry Interval (in min):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Max delay between retries.&lt;/LI&gt;&lt;LI&gt;Example: 60 min.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Dead-Letter Queue:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Failed messages go to DLQ after max retries – helps in error analysis.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Encrypt Message During Persistence:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Ensures messages are encrypted when stored – enhances security.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_8-1751539789926.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282191iA39A844882A5EBCB/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_8-1751539789926.jpeg" alt="Rishikasairi_8-1751539789926.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 8: Configuration of Conditions tab in AS2 Adapter:&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Body Size (in MB):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Max size for the main AS2 message body.&lt;/LI&gt;&lt;LI&gt;Example: 40 MB&lt;/LI&gt;&lt;LI&gt;Set based on expected payload size.&lt;/LI&gt;&lt;LI&gt;Helps avoid memory overload.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Attachments Size (in MB):&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Max total size for all attachments.&lt;/LI&gt;&lt;LI&gt;Example: 100 MB&lt;/LI&gt;&lt;LI&gt;Set based on typical file sizes (e.g., PDFs, XML).&lt;/LI&gt;&lt;LI&gt;Prevents oversized message issues.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_9-1751539789932.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282193iB93453CC7792B0A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_9-1751539789932.jpeg" alt="Rishikasairi_9-1751539789932.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note the As2 Endpoint after it gets deployed stage.&lt;/P&gt;&lt;P&gt;&lt;FONT size="4"&gt;&lt;STRONG&gt;AS2 Receiver Adapter (Sending Request with payload)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_14-1751541347175.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282239i68F4B146280EC152/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_14-1751541347175.jpeg" alt="Rishikasairi_14-1751541347175.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Create a new Iflow in the same tenant or any other different tenant (&lt;STRONG&gt;Would be best if it is another tenant&lt;/STRONG&gt;)&lt;/LI&gt;&lt;LI&gt;Design the iflow as specified in the above manner with all the necessary pallet functions&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_15-1751541347189.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282237iBF391B15B0ECE508/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_15-1751541347189.jpeg" alt="Rishikasairi_15-1751541347189.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the Connection tab. Give the as2 endpoint that you have from the sender adapter.&lt;/LI&gt;&lt;LI&gt;Select the authentication to be basic and paste the credential name from the security material.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Now for the basic authentication. Get the Client id and client secret from the &lt;STRONG&gt;Sender Adapter&lt;/STRONG&gt; tenant which can be found in integration flow plan service key.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_54-1751542585404.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282295i245E8400EDF7EF3A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_54-1751542585404.png" alt="Rishikasairi_54-1751542585404.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_55-1751542602692.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282296iDE6053C811CB2CDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_55-1751542602692.png" alt="Rishikasairi_55-1751542602692.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;After you have gained the client id and client secret. Go to Monitor&amp;gt;Manage Security material&amp;gt; Security Material&lt;/LI&gt;&lt;LI&gt;Select Create&amp;gt;User Credentials&lt;/LI&gt;&lt;LI&gt;Paste the Client id in the user section and the client secret in password and repeat password with a proper naming convention.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_56-1751542696960.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282298i9E98F368E8339E27/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_56-1751542696960.jpeg" alt="Rishikasairi_56-1751542696960.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the processing tab. Give a proper File name for transferring and fill all the sections that you have done in the &lt;STRONG&gt;sender adapter iflow with the same ones.&lt;BR /&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Mention the content type to be application/edi-x12 as we are transferring the payload from EDI format.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_57-1751542696969.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282297iE40A4922A900A273/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_57-1751542696969.jpeg" alt="Rishikasairi_57-1751542696969.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Security Tab.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Select the Compress message for reducing the size of the payload you need to send.&lt;/LI&gt;&lt;LI&gt;For Signing Message, you need to create Keypair in the Keystore&amp;gt;Monitor tab with the alias name AS2_signing.&lt;/LI&gt;&lt;LI&gt;Give the alias name in private key alias&lt;/LI&gt;&lt;LI&gt;You have to download the certificate from the keypair (which you have created just now for signing) and give it to the sender in the other tenant.&lt;/LI&gt;&lt;LI&gt;For Encrypting the Message, you need to get the certificate from the person who is decrypting, then you have to upload certificate in the keystore &amp;gt; Monitor(with the alias name as as2_decrypting).&lt;/LI&gt;&lt;LI&gt;Mention the alias name in the public key alias.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_58-1751542837451.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282307iD55CC0EBE7D880C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_58-1751542837451.png" alt="Rishikasairi_58-1751542837451.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_59-1751542837461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282308i90231EBA2B1FD6F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_59-1751542837461.png" alt="Rishikasairi_59-1751542837461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the MDN. There will be four options to be selected [ Synchronous, Asynchronous, Dynamic , None ]&lt;/P&gt;&lt;P&gt;If you select the Synchronous type [ In case you want the response when you sent the request]&lt;BR /&gt;You can request signing, with the specific Algorithm.&lt;/P&gt;&lt;P&gt;If you need to verify signature. You need to give the Private key alias. Which is the certificate that you will get from the sender adapter which can be found in the Keystore.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_61-1751543014657.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282309iA442C1F2391D2085/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_61-1751543014657.jpeg" alt="Rishikasairi_61-1751543014657.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Paste the EDI payload in the content modifier as specified above.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;ISA*01*0000000000*01*0000000000*ZZ*ABCDEFGHIJKLMNO*ZZ*123456789012345*101127*1719*U*00401*000003438*0*P*&amp;gt;&lt;BR /&gt;GS*PO*4405197800*999999999*20101127*1719*1421*X*004010VICS&lt;BR /&gt;ST*850*000000010&lt;BR /&gt;BEG*00*SA*08292233294**20101127*610385385&lt;BR /&gt;REF*DP*038&lt;BR /&gt;REF*PS*R&lt;BR /&gt;ITD*14*3*2**45**46&lt;BR /&gt;DTM*002*20101214&lt;BR /&gt;PKG*F*68***PALLETIZE SHIPMENT&lt;BR /&gt;PKG*F*66***REGULAR&lt;BR /&gt;TD5*A*92*P3**SEE XYZ RETAIL ROUTING GUIDE&lt;BR /&gt;N1*ST*XYZ RETAIL*9*0003947268292&lt;BR /&gt;N3*31875 SOLON RD&lt;BR /&gt;N4*SOLON*OH*44139&lt;BR /&gt;PO1*1*120*EA*9.25*TE*CB*065322-117*PR*RO*VN*AB3542&lt;BR /&gt;PID*F****SMALL WIDGET&lt;BR /&gt;PO4*4*4*EA*PLT94**3*LR*15*CT&lt;BR /&gt;PO1*2*220*EA*13.79*TE*CB*066850-116*PR*RO*VN*RD5322&lt;BR /&gt;PID*F****MEDIUM WIDGET&lt;BR /&gt;PO4*2*2*EA&lt;BR /&gt;PO1*3*126*EA*10.99*TE*CB*060733-110*PR*RO*VN*XY5266&lt;BR /&gt;PID*F****LARGE WIDGET&lt;BR /&gt;PO4*6*1*EA*PLT94**3*LR*12*CT&lt;BR /&gt;PO1*4*76*EA*4.35*TE*CB*065308-116*PR*RO*VN*VX2332&lt;BR /&gt;PID*F****NANO WIDGET&lt;BR /&gt;PO4*4*4*EA*PLT94**6*LR*19*CT&lt;BR /&gt;PO1*5*72*EA*7.5*TE*CB*065374-118*PR*RO*VN*RV0524&lt;BR /&gt;PID*F****BLUE WIDGET&lt;BR /&gt;PO4*4*4*EA&lt;BR /&gt;PO1*6*696*EA*9.55*TE*CB*067504-118*PR*RO*VN*DX1875&lt;BR /&gt;PID*F****ORANGE WIDGET&lt;BR /&gt;PO4*6*6*EA*PLT94**3*LR*10*CT&lt;BR /&gt;CTT*6&lt;BR /&gt;AMT*1*13045.94&lt;BR /&gt;SE*33*000000010&lt;BR /&gt;GE*1*1421&lt;BR /&gt;IEA*1*000003438&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This is the integration flow for which the MDN Attachment need to be sent as we have selected asynchronous Communication.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In the Connection tab specify a path for the as2 endpoint.&lt;/LI&gt;&lt;LI&gt;Select the Authorization to be UserRole/Client_Certificate[In my case I selected User Role]&lt;/LI&gt;&lt;LI&gt;You need to send the &lt;STRONG&gt;PFX file to the SENDER ADAPTER &lt;/STRONG&gt;iflow tenant because you will be receiving the response asynchronously from the sender adapter.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;Monitoring the Artifacts in Trace Mode&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_62-1751543086834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282310i4FE3684550903D28/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_62-1751543086834.png" alt="Rishikasairi_62-1751543086834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_64-1751543189397.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282312iC394591CF2B5D6F8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_64-1751543189397.png" alt="Rishikasairi_64-1751543189397.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_65-1751543189410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282313i6BC23863C49E3944/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_65-1751543189410.png" alt="Rishikasairi_65-1751543189410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Creation of PFX Certificate &lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Creation of PFX Certificate contains these below steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Go to the Integration flow instance [DEV]&lt;/LI&gt;&lt;LI&gt;Create a certificate in the Instance.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_66-1751543189423.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282314iDC2A55DFEE0478DC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_66-1751543189423.jpeg" alt="Rishikasairi_66-1751543189423.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;3. After creating Certificate (From the Form tab) Copy the Certificate and Align them as shown in image and save the file as &amp;lt;filename&amp;gt;.cert&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_67-1751543189437.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282316i91B10CE47686E65A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_67-1751543189437.jpeg" alt="Rishikasairi_67-1751543189437.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;4. Copy the Key, align as shown in image, save the file as &amp;lt;filename&amp;gt;.key&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_68-1751543189455.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282317i3AE8217501938E5C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_68-1751543189455.jpeg" alt="Rishikasairi_68-1751543189455.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_69-1751543189471.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282315i485B500A6F50C17B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_69-1751543189471.jpeg" alt="Rishikasairi_69-1751543189471.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_70-1751543189475.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282318iA59D2FC254DB6134/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_70-1751543189475.jpeg" alt="Rishikasairi_70-1751543189475.jpeg" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Now use this website (or any other online websites for pfx generation)&lt;SPAN&gt;&lt;A href="https://www.sslshopper.com/ssl-converter.html" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.sslshopper.com/ssl-converter.html&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Rishikasairi_71-1751543189482.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/282319iE7359F7319D3D7CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="Rishikasairi_71-1751543189482.jpeg" alt="Rishikasairi_71-1751543189482.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;OL&gt;&lt;LI&gt;Upload the cert file and key file in this website with the proper pfx password (remember the password)&lt;/LI&gt;&lt;LI&gt;Click on Create and download PFX file.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;EM&gt;Stay tuned for the next part, where we’ll get started with API proxies!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;BR /&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695"/>
    <published>2025-07-25T07:47:44.145000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/intelligent-orchestration-in-iflows-business-aware-routing-with-sap-btp-s/ba-p/14162148</id>
    <title>Intelligent Orchestration in Iflows: Business-Aware Routing with SAP BTP’s AI Services</title>
    <updated>2025-07-25T08:30:59.592000+02:00</updated>
    <author>
      <name>arunmaarirajha_kv</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2033343</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Reimagining flow decisions in Integration Suite&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For the longest time, SAP’s integration platforms — from &lt;STRONG&gt;SAP PI/PO&lt;/STRONG&gt; to &lt;STRONG&gt;Integration Suite&lt;/STRONG&gt; — have empowered developers to model decisions in integration flows (Iflows) using deterministic, rule-based logic.&amp;nbsp;These decisions often control how an Iflow behaves: which mapping logic to apply, which receiver system to call, or which transformation branch to follow.&lt;BR /&gt;The common approaches include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Static routing&lt;/STRONG&gt; via Routers based on payload elements or fields&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic configurations&lt;/STRONG&gt;, such as externalized parameters passed at runtime&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Lookups to external systems&lt;/STRONG&gt; (e.g., JDBC or SOAP) to evaluate conditions at runtime — achieved in Integration Suite via patterns like &lt;EM&gt;Request-Reply&lt;/EM&gt; or &lt;EM&gt;Content Enricher&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These mechanisms work — but they come with growing challenges:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Rules get &lt;STRONG&gt;combinatorially complex&lt;/STRONG&gt; with more conditions&lt;/LI&gt;&lt;LI&gt;Lookup tables become &lt;STRONG&gt;burdensome to maintain&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Decisions become &lt;STRONG&gt;rigid and hard to evolve&lt;/STRONG&gt; over time&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;What if Iflows could use a &lt;STRONG&gt;machine learning model&lt;/STRONG&gt; trained on past outcomes to make decisions — not through rigid logic, but through inferred patterns?&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;BTP AI Services: Letting Iflows Tap into ML-Driven Decisioning&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;BTP AI services&lt;/STRONG&gt; offer a comprehensive suite of capabilities for embedding intelligence across applications, extensions, and integrations.&lt;/P&gt;&lt;P&gt;Key components include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Data Attribute Recommendation (DAR) – a low-code ML service for classification &amp;amp; regression problems&lt;/LI&gt;&lt;LI&gt;AI Core – for custom ML model lifecycle management&lt;/LI&gt;&lt;LI&gt;AI Launchpad – for model deployment and lifecycle governance&lt;/LI&gt;&lt;LI&gt;Document Information Extraction (DOX) – for intelligent document processing&lt;/LI&gt;&lt;LI&gt;Personalized recommendations&amp;nbsp;– &lt;SPAN&gt;to deliver tailored content and product suggestions to users&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Translation Hub&amp;nbsp;–&amp;nbsp;&lt;SPAN&gt;enables you to efficiently translate content into multiple languages&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Among these, DAR is particularly compelling for Iflow-based routing logic. It allows developers to train a classification model — and call it at runtime — without deep ML or data science expertise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A Concrete Example: Intelligent Sales Order fulfilment routing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let us walk through a realistic sales order routing scenario — where &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; collaborates with &lt;STRONG&gt;BTP’s Data Attribute Recommendation (DAR)&lt;/STRONG&gt; to make machine learning-driven decisions, rather than relying on static rules or lookup tables.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Scenario:&amp;nbsp;&lt;/STRONG&gt;When a new Sales Order (SO) is received in SAP S/4HANA, an Iflow must determine the appropriate fulfilment path — such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Domestic delivery team&lt;/LI&gt;&lt;LI&gt;Export logistics provider&lt;/LI&gt;&lt;LI&gt;Specialized handling team (e.g., for hazardous or fragile goods)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Traditionally, this might involve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Hardcoded logic like:&lt;BR /&gt;IF LAND1 = 'DE' AND MATKL = 'X' THEN ROUTE = 'Domestic'&lt;/LI&gt;&lt;LI&gt;Maintaining large lookup tables&lt;/LI&gt;&lt;LI&gt;Database queries that are difficult to scale or evolve&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;But this approach quickly becomes brittle as the business grows — especially with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;New customer segments&lt;/LI&gt;&lt;LI&gt;Emerging market combinations&lt;/LI&gt;&lt;LI&gt;Expanding SKU diversity&lt;/LI&gt;&lt;LI&gt;Frequent business exceptions&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;ML-Driven Approach with DAR&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Instead of rule-based routing, we use DAR to learn from historical sales orders:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;What fulfillment team handled similar orders in the past?&lt;/LI&gt;&lt;LI&gt;What patterns exist in routing decisions based on order attributes?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This lets the Iflow become intelligent — delegating routing logic to an ML model trained on past behaviour.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Untitled Diagram.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291270iA095DF619549FEAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Untitled Diagram.png" alt="Untitled Diagram.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Flow: From Sales Order to fulfilment&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;1. Incoming Sales Order Fields (Features)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Iflow extracts relevant attributes from the sales order.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;VKORG&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales organization&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;VTWEG&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Distribution channel&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SPART&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Division&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;KUNNR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Customer number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;LAND1&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Country of destination&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MATNR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MATKL&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material group&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;AUART&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales document type (e.g., OR, RE)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;NETWR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Net value of the order&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;WAERK&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Currency&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;2. Label to Predict&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The ML model (via DAR) predicts the fulfillment team:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Label&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Meaning&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;DOMESTIC&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Domestic delivery team&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;EXPORT&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Export logistics team&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SPECIAL_PRODUCTS&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Specialized handling (e.g., fragile items)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;ESCALATE&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Manual assignment required (e.g., exception)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;3. Runtime Intelligence in the Iflow&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Iflow receives the incoming Sales Order from SAP S/4HANA&lt;/LI&gt;&lt;LI&gt;It extracts key features (as above)&lt;/LI&gt;&lt;LI&gt;Sends them via API to DAR&lt;/LI&gt;&lt;LI&gt;DAR returns a prediction (e.g., EXPORT)&lt;/LI&gt;&lt;LI&gt;Iflow routes the order to the correct 3PL provider or internal team&lt;/LI&gt;&lt;LI&gt;Decision and outcome are logged for traceability&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;4. Training the Model: From Logs to Intelligence&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To train DAR:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Historical sales orders are extracted from SAP S/4HANA&lt;/LI&gt;&lt;LI&gt;Actual fulfilment team assignments (from workflow logs or processing systems) are used as ground truth&lt;/LI&gt;&lt;LI&gt;A dataset is formed with order features (inputs) and assigned team (label)&lt;/LI&gt;&lt;LI&gt;No need for manual feature engineering — DAR handles sampling, validation, and training automatically&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;5. Closing the Loop: Human-in-the-Loop &amp;amp; Retraining&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To ensure explainability and continuous learning:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All DAR predictions + actual outcomes are logged in HANA Cloud&lt;/LI&gt;&lt;LI&gt;A CAP application provides a UI for humans to review and validate predictions&lt;/LI&gt;&lt;LI&gt;Only validated cases are used for periodic retraining, ensuring the model evolves with the business&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;FAQs – &lt;SPAN&gt;Key Questions and Considerations&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;1.&amp;nbsp;When does this truly add value?&lt;BR /&gt;When routing errors or sub-optimal routing could lead to real business impact — e.g., SLA violations, shipment delays, customer churn — not just minor inconvenience. Conversely, when ML helps route to the most suitable receiver — say Team B instead of A — it can improve fulfillment speed, reduce costs, or ensure better customer handling, translating into real business advantage.&lt;/P&gt;&lt;P&gt;2. How complex is adopting DAR in terms of learning curve?&lt;BR /&gt;DAR is low-code and API-driven plug and play service — you don’t need to tune algorithms or handle model lifecycle related heavy lifting. Even integration developers can use it by defining schemas and calling APIs for training, deploying, inferencing and re-training.&lt;/P&gt;&lt;P&gt;3. Why is model re-training important?&lt;BR /&gt;Because business context evolves. As your product mix, customer base, or regional distribution changes, the patterns shift (called data drift or concept drift). Retraining ensures your model stays accurate and doesn’t stale out.&lt;/P&gt;&lt;P&gt;4. Isn’t GenAI the next big thing? Does ML still matter?&lt;BR /&gt;Absolutely. GenAI excels at natural language tasks — like document generation or summarization. But for structured data decisions like classification or regression, ML models like DAR are more reliable, interpretable, and consistent. They are trained on enterprise-labeled history, not general-purpose text.&lt;/P&gt;&lt;P&gt;5. Isn’t this just another API call, which we do all the time to enrich our payload?&lt;BR /&gt;Technically yes — but functionally, it’s transformational. It lets you embed intelligence directly into your Iflow’s runtime logic. It’s not just wiring systems — it’s wiring business decisions.&lt;/P&gt;&lt;P&gt;6. Isn’t putting ML in middleware against “separation of concerns”, particularly when it is supposed to act as a pass-through layer?&lt;BR /&gt;&lt;SPAN&gt;No. The &lt;/SPAN&gt;ML model and its lifecycle&lt;SPAN&gt; are maintained outside Integration Suite (e.g., in DAR or AI Core). The Iflow just consumes the result — maintaining clean separation but gaining powerful synergy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Infusing AI into Integration Suite isn’t about over-engineering — it’s about &lt;STRONG&gt;elevating Integration Suite’s behaviour from rule-based mechanics to context-aware intelligence&lt;/STRONG&gt;.&amp;nbsp;With BTP AI services like DAR, integration developers can go beyond static routing and hardcoded decisions. They can orchestrate intelligent flows that learn from business history — and adapt as the world changes.&amp;nbsp;As integration professionals, we’re not just moving data. We’re moving contextual, intelligent decisions.&lt;/P&gt;&lt;P&gt;Here are some essential links for you to get started and apply AI in meeting your business requirements:&lt;BR /&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/data-attribute-recommendation?region=all" target="_blank" rel="noopener nofollow noreferrer"&gt;Explore SAP Data Attribute Recommendation service&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://developers.sap.com/tutorial-navigator.html?tag=software-product%3Atechnology-platform%2Fsap-ai-services%2Fdata-attribute-recommendation" target="_blank" rel="noopener noreferrer"&gt;SAP Tutorials: Implement your ML service&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This blog focused solely on intelligent routing within iFlows. But the potential of infusing AI into Integration Suite goes far beyond — limited only by the developer’s creativity. With the upcoming &lt;A href="https://roadmaps.sap.com/board?q=ai%2520adapter&amp;amp;range=CURRENT-LAST#;INNO=6DF54C88F6211EEFBE81C4731A722137" target="_self" rel="noopener noreferrer"&gt;AI Adapter (planned for Q3)&lt;/A&gt;, things are bound to get even more exciting.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;“Stay hungry, stay foolish.”&lt;/EM&gt; — Steve Jobs&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Perhaps that same spirit can guide us as we collectively navigate the future of intelligent integration.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/intelligent-orchestration-in-iflows-business-aware-routing-with-sap-btp-s/ba-p/14162148"/>
    <published>2025-07-25T08:30:59.592000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-master-data-integration-mdi-meets-sap-advanced-event-mesh-aem/ba-p/14166195</id>
    <title>SAP Master Data Integration (MDI) meets SAP Advanced Event Mesh (AEM)</title>
    <updated>2025-07-31T09:21:15.559000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the ever-growing landscape of SAP BTP and modular cloud architecture, seamless integration between services is more important than ever. One powerful combination that's gaining traction is &lt;STRONG&gt;SAP Master Data Integration (MDI)&lt;/STRONG&gt; working in tandem with &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt;. The foundation for MDI is the One Domain Model (ODM) – a standardized data model. In this blog post, we’ll walk you through the setup to connect MDI with AEM and enable &lt;STRONG&gt;real-time event-driven integration for your master data.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s dive into what makes this integration so valuable — and how you can get started.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Why Combine MDI and AEM?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP MDI&lt;/STRONG&gt; ensures consistent and harmonized master data across SAP applications and services, based on Data Replication Framework Technology (DRF).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP ODM &lt;/STRONG&gt;It is a standardized domain model to unify and harmonize business objects like Customer, Product, Supplier, etc.) across SAP’s cloud solutions&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP AEM&lt;/STRONG&gt; provides a high-performance event broker that allows for reliable and scalable event distribution across systems.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Bringing these together enables:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Configure only&lt;/LI&gt;&lt;LI&gt;Real-time data propagation of master data via events&lt;/LI&gt;&lt;LI&gt;Decoupled and scalable architecture&lt;/LI&gt;&lt;LI&gt;Simplified integration for consuming systems in SAP but also NON-SAP applications&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;MDI Content: &lt;SPAN&gt;&lt;A href="https://api.sap.com/package/sap-mdi-masterDataIntegration/rest" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/package/sap-mdi-masterDataIntegration/rest&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️&lt;/STRONG&gt;&lt;STRONG&gt; Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before we get into the setup, make sure you have the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;An instance of &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt; created and available, I do not show this in this blog&lt;/LI&gt;&lt;LI&gt;An instance of &lt;STRONG&gt;SAP Master Data Integration (MDI)&lt;/STRONG&gt;, which is one focus of this blog&lt;/LI&gt;&lt;LI&gt;An instance of &lt;STRONG&gt;SAP Integration Suite, Cloud Integration,&lt;/STRONG&gt; which is one focus of this blog&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connectivity setup&lt;/STRONG&gt; between MDI and the involved SAP components, which is one focus of this blog&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Setup Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Create Master Data Integration (MDI) service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Assign &lt;SPAN&gt;s4hana-onpremise&lt;/SPAN&gt;&amp;nbsp;service plan. &lt;SPAN&gt;For our setup we are using a S/4HANA OnPremise system, in case you have a S/4HANA Cloud system choose another service Plan &lt;/SPAN&gt;Create an Instance&lt;SPAN&gt; for Master Data Integration and create a ServiceKey for connection setup,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MDI_Instance.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293611iCBC714EA4E991706/image-size/large?v=v2&amp;amp;px=999" role="button" title="MDI_Instance.png" alt="MDI_Instance.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Distribution Model &lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/master-data-integration/sap-business-data-orchestration-8ce78b673ef04cc1bcfeb01c93ef7885/manage-distribution-models" target="_blank" rel="noopener noreferrer"&gt;(sap.help.com)&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Select the Provide and Consumer fro your scenario and the ODM object you would like to replicate, for this blog we have used the latest version of CostCenter. Save nad active the Distribution Model.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DistributionMOdelDetails.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293612i36CA00FEF7E9D569/image-size/large?v=v2&amp;amp;px=999" role="button" title="DistributionMOdelDetails.png" alt="DistributionMOdelDetails.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The MDI setup has been completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Enable your SAP Backend for MDI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Establishing oAuth Profile for Outbound Connection &lt;/STRONG&gt;to SAP Master Data Integration via SAP transaction oa2c_config&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Creating Destination to MDI &amp;nbsp;&lt;/STRONG&gt;via SAP transaction SM59 while using the oAuth profile&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Configuring to Destination&lt;/STRONG&gt; for Connecting to SAP Master Data Integration via SAP transaction S_SAL_71000052&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Defining BGRFC Destinations&lt;/STRONG&gt; via SAP transaction sbgrfcconf&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Extracting AIF Content&lt;/STRONG&gt; via SAP transcation /AIF/CONTENT_EXTRACT&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Publishing ODATA V4 Service Groups&lt;/STRONG&gt; via /IWFND/V4_ADMIN&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AIF_Monitor.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293614i56CABFF8C42227E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="AIF_Monitor.png" alt="AIF_Monitor.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The SAP S/4HANA setup and underlying connection setup between SAP and MDI has been completed. The screenshot above shows the AIF Monitor to the master data exchange between both components.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Enable your SAP Integration Suite&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For the setup we will combine two adapters of the Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="IFLOW.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293622i19C932FB8D849C03/image-size/large?v=v2&amp;amp;px=999" role="button" title="IFLOW.png" alt="IFLOW.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To read the master data from MDI we have used&amp;nbsp;S&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/sap-master-data-integration-receiver-adapter?locale=en-US" target="_self" rel="noopener noreferrer"&gt;AP Master Data Integration Receiver Adapter&lt;/A&gt; which will be trigged via scheduler.&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MDI Adapter.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293625iDBFFDC5507FDB6B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="MDI Adapter.png" alt="MDI Adapter.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;To provide the master data event to SAP AEM we have use the SAP AEM adapter and connected it to a queue. Another valid approach could be to throw a topic.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AEMAdapter.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293626iE377F2D8C83288D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="AEMAdapter.png" alt="AEMAdapter.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;The Cloud Integration setup has been completed.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;4. Test the End-to-End Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create or update a master data record (e.g., Cost Center) in the source system connected to MDI ( e.g. transaction KS02)&lt;/LI&gt;&lt;LI&gt;Cost Center should be available in MDI (check e.g. in CALM)&lt;/LI&gt;&lt;LI&gt;MDI publishes the dataset to the Integration Suite&lt;/LI&gt;&lt;LI&gt;AEM broker receives in the defined queue and processes the master data event according to the subscription setup&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Check logs or dashboards to confirm message delivery.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For this blog I simply checked the queue insights view of my used broker and the SAP AEM TryMe feature. The master data event has been received and is ready for distribution/subscription.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="QueueInsights.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293627iD19225390DB37AC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="QueueInsights.png" alt="QueueInsights.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bildschirmfoto 2025-07-30 um 1.26.37 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293897i82CAC544D7988F1E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bildschirmfoto 2025-07-30 um 1.26.37 PM.png" alt="Bildschirmfoto 2025-07-30 um 1.26.37 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Can MDI Directly Publish to AEM?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP Master Data Integration currently emits events not directly to &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt;. MDI uses &lt;STRONG&gt;could use Integration Suite, Cloud Integration&lt;/STRONG&gt; through BTP’s managed messaging infrastructure.&lt;/P&gt;&lt;P&gt;As of mid-2025, there’s:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;No native support&lt;/STRONG&gt; to configure MDI to push events directly to AEM&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;No configuration options in the MDI UI to define AEM as the event target&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrating &lt;STRONG&gt;SAP Master Data Integration&lt;/STRONG&gt; with &lt;STRONG&gt;SAP Advanced Event Mesh&lt;/STRONG&gt; is a powerful way to enable real-time, event-driven architectures across your SAP landscape. It decouples systems, ensures scalability, and improves responsiveness in your integrations.&lt;/P&gt;&lt;P&gt;Whether you're syncing business partner data across applications or building modular apps that respond to master data changes, this combo of MDI + AEM provides the reliability and flexibility you need.&lt;/P&gt;&lt;P&gt;Be aware that we are currently preparing some more technical blogs explaing the setup of DRF+AIF and DRF+RAP without using MDI&lt;/P&gt;&lt;P&gt;Have you tried integrating MDI with AEM? Share your use cases and challenges in the comments!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-master-data-integration-mdi-meets-sap-advanced-event-mesh-aem/ba-p/14166195"/>
    <published>2025-07-31T09:21:15.559000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/decoupling-strategies-for-http-based-integrations-in-sap-cloud-integration/ba-p/14167141</id>
    <title>Decoupling Strategies for HTTP-Based Integrations in SAP Cloud Integration</title>
    <updated>2025-07-31T10:35:42.233000+02:00</updated>
    <author>
      <name>jirifridrich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/146600</uri>
    </author>
    <content>&lt;P&gt;In many integration scenarios, your sender communicates over HTTP and expects a synchronous response within a strict timeout window. Meanwhile, your integration flow may involve asynchronous processing that takes significantly longer.&lt;/P&gt;&lt;P&gt;Recently our integration partner expressed a concern that their timeout cannot exceed 3 seconds, but processing at our side took over a minute. In such case you have a few options how to decouple the integration flow, respond to your sender and continue processing the request:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;JMS queue&lt;/LI&gt;&lt;LI&gt;Event-based platform&lt;/LI&gt;&lt;LI&gt;SOAP adapter&lt;/LI&gt;&lt;LI&gt;DataStore&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1865188766"&gt;JMS queue&lt;/H3&gt;&lt;P&gt;Recommended and most common option&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Use case:&lt;/STRONG&gt; Ideal when you want to immediately acknowledge the HTTP request and process it asynchronously&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;How it helps:&lt;/STRONG&gt; You can push the message to a JMS queue quickly, send an HTTP 200/202 response back to the sender within their timeout, and continue processing in a separate flow that consumes from the queue&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt; Reliable, durable, retry mechanisms, and native to CPI&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Limitation&lt;/STRONG&gt;: Certain number of JMS queues. Especially if you have AS2 integration partners, you can quickly run out of your available JMS queues&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1668675261"&gt;Event-Based Platform&lt;/H3&gt;&lt;P&gt;Stand-alone software products like&amp;nbsp;SAP Event Mesh or Kafka&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Use case:&lt;/STRONG&gt; When you're operating in an event-driven architecture and want to loosely couple components&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;How it helps:&lt;/STRONG&gt; You can publish an event to a broker, respond quickly to the sender, and let a separate consumer handle the processing&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt; Scales well, decouples systems further, fits microservice/event-driven design&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Limitation:&lt;/STRONG&gt;&amp;nbsp;May be a little of overkill for a single-use scenario, complex setup and requires integration with Event Mesh or external brokers&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1472161756"&gt;SOAP adapter&lt;/H3&gt;&lt;P&gt;You create a small helper iflow with HTTP Sender, where you just provide answer to the Sender and call your processing iflow via SOAP adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_1-1753883237967.png" style="width: 829px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294074i94BF7950D4F8074F/image-dimensions/829x423?v=v2" width="829" height="423" role="button" title="jirifridrich_1-1753883237967.png" alt="jirifridrich_1-1753883237967.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This approach requires modifying the sender configuration of your processing iFlow to accept SOAP requests. You’ll also need to configure the SOAP adapter to allow asynchronous behavior.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_0-1753882877185.png" style="width: 769px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294068iD6A7AA08AA77701D/image-dimensions/769x563?v=v2" width="769" height="563" role="button" title="jirifridrich_0-1753882877185.png" alt="jirifridrich_0-1753882877185.png" /&gt;&lt;/span&gt;&lt;BR /&gt;This settings ensures that the caller receives immediate response and processing continues further in more of an asynchronous way.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Use case:&lt;/STRONG&gt; Simple calls, where we can easily transform the HTTP call into a SOAP call. That also requires converting any incoming payload into XML&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;How it helps:&lt;/STRONG&gt; SOAP can work in both sync and async behavior, based on the SOAP Sender adapter setting&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt; Quick-win solution for simple calls, doesn't require queues, persistence or dedicated software&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Limitation:&lt;/STRONG&gt; Large payloads in non-XML format will be complicated to handle&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1275648251"&gt;DataStore&lt;/H3&gt;&lt;P&gt;A fall-back option, not really recommended, but still usable if above options are not for you&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use case&lt;/STRONG&gt;:&amp;nbsp;When you don't have access to JMS queues or Event Mesh, and you're dealing with low-to-medium volume messages that can tolerate delayed, batch-style processing.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How it helps:&amp;nbsp;&lt;/STRONG&gt;You persist the incoming message to the CPI Datastore, respond immediately to the HTTP sender (e.g., with HTTP 202 Accepted), and then use a separate, scheduled iFlow to retrieve the message from the Datastore and continue processing asynchronously.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Benefits&lt;/STRONG&gt;:&amp;nbsp;Provides basic persistence and decoupling, useful for non-critical or internal scenarios.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Limitation:&lt;/STRONG&gt;&amp;nbsp;No built-in retry mechanism, requires manual polling logic via scheduler, not suited for high-throughput or time-sensitive processing.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;As we can see, all above solutions have their pros and cons. Ideally, the best option would be to achieve this at the HTTP adapter itself. Nevertheless, HTTP adapter is synchronous by design and there is no configuration which could change this.&lt;/P&gt;&lt;P&gt;We also explored workarounds such as routing the HTTP request through a parallel or sequential multicast before forwarding it to the processing iFlow. However, this approach did not reliably solve the issue.&lt;/P&gt;&lt;P&gt;I will be grateful for any tip or insight on this topic, solving the issue with HTTP adapter or in any other way.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/decoupling-strategies-for-http-based-integrations-in-sap-cloud-integration/ba-p/14167141"/>
    <published>2025-07-31T10:35:42.233000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666</id>
    <title>Event-driven Architecture:  Creating Fullstate Events in SAP S/4HANA for SAP EMIS</title>
    <updated>2025-07-31T12:41:30.451000+02:00</updated>
    <author>
      <name>vanessadayanc</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126506</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In modern SAP S/4HANA landscapes, Event-driven architecture (EDA) enables decoupled, and scalable integrations across systems. SAP business events are often represented as &lt;STRONG&gt;n&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;otification events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; especially in context master data events, such as&amp;nbsp; business partner creation or changes. Notification events merely signal that something happened (e.g., "Business Partner Created"), where as &lt;STRONG&gt;f&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ull state events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; deliver the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;complete state of business object &lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;in real time.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Benefits of Full State Events:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Decoupled Consumers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: No need for consumers to call back to S/4HANA — all relevant data is included in the event.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Higher Resilience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Event consumers remain functional even if source systems are temporarily unavailable.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Faster Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Downstream applications and services can act immediatly, without additional round trips.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified Architectures&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Reduces dependency on S/4HANA APIs, lowering system coupling and load.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Full state events are a powerful enabler for real-time, loosely coupled digital processes — especially in complex, hybrid SAP environments. However, since f&lt;/SPAN&gt;&lt;SPAN&gt;ull state events are not available for many business objects in SAP S/4HANA feature scope, this blog series outlines some approaches to fullfill the requirements of a specific event-driven use case in context of business partner events:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (1/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) – Intro &amp;amp; SAP Standard Business Events&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (2/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - RAP Edition&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (3/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - Event-enablement Addon Edition &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1864150953"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Intro&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Event-driven architecture (EDA) is a software architecture paradigm in which system components interact through the production, detection, and consumption of events. Instead of relying on a synchronous request/response model, EDA uses asynchronous communication, enabling components to react to state changes or occurrences in real time. This approach increas flexibility, scalability, and responsiveness, particularly in complex, distributed systems. In the context of SAP S/4HANA this paradigm shift is reflected in concept of so called “business events”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An overview of released business events, for example&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;for the SAP S/4HANA Private Cloud, can be found in the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A class="" href="https://api.sap.com/products/SAPS4HANACloudPrivateEdition/events/events" target="_blank" rel="noreferrer noopener"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP Business Accelorator Hub.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example: If you want to be notified about the creation or modification of business partner master data, you can use the SAP business event for business partners.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752651776823.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287152i146D264070AF4D32/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752651776823.png" alt="vanessadayanc_0-1752651776823.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Many of SAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;standard&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;events&lt;/SPAN&gt; &lt;SPAN class=""&gt;are&lt;/SPAN&gt;&amp;nbsp;n&lt;SPAN class=""&gt;otification&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;events. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;No&lt;/SPAN&gt;&lt;SPAN class=""&gt;tification events i&lt;/SPAN&gt;&lt;SPAN class=""&gt;nform s&lt;/SPAN&gt;&lt;SPAN class=""&gt;ubscribers about the occurrence of an event, triggering actions or workflows without providing detailed context. They typically&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;SPAN class=""&gt;ontain&lt;/SPAN&gt;&lt;SPAN class=""&gt; minimal informations, like an event ID or type, sufficient for consumers to decide whether further data retrieval is necessary. &lt;/SPAN&gt;&lt;SPAN class=""&gt;In case of our business partner e&lt;/SPAN&gt;&lt;SPAN class=""&gt;xample,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;only includes&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the &lt;/SPAN&gt;&lt;SPAN class=""&gt;Busin&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;ssPartner&lt;/SPAN&gt;&lt;SPAN class=""&gt; ID. Additionally SAP standard events&lt;/SPAN&gt; &lt;SPAN class=""&gt;can’&lt;/SPAN&gt;&lt;SPAN class=""&gt;t&lt;/SPAN&gt;&lt;SPAN class=""&gt; be &lt;/SPAN&gt;&lt;SPAN class=""&gt;filter&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;SPAN class=""&gt; in SAP S/4HANA&lt;/SPAN&gt;&amp;nbsp;out of the box, meaning s&lt;SPAN class=""&gt;ubscribers receive notifications for all creation or change events of every business partner even if only a dedicated type or group is relevant for them.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Depending on the specific use case, it is advisable to evaluate whether notification events or full state events are more suitable. A comparison can be found below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="693px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Criterion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Notification Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Full State Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Announces that &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;something happened&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; minor &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;context&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Announces&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;something&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;happened&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;and&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ncludes&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;entire&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;current&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt;&lt;SPAN class=""&gt; an &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;business&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Content&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Minimal &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;info&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;event&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; type, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;affected&lt;/SPAN&gt; &lt;SPAN class=""&gt;entity&lt;/SPAN&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;u&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pdated)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Typical Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Created.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 (&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Updated.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Use Case&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;triggering&lt;/SPAN&gt; &lt;SPAN class=""&gt;workflows&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;alerts&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;initiates&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;or&lt;/SPAN&gt;&lt;SPAN class=""&gt; simple &lt;/SPAN&gt;&lt;SPAN class=""&gt;notifications&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;replication&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;synchronization&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;direct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;downstream&lt;/SPAN&gt; &lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data Dependency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;fetch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; additional &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Self-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;contained&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; — &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Coupling&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tightly coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – consumers&amp;nbsp;de&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pend&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; on &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; APIs&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Loosely coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – events are self-contained&lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Failure Tolerance&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Lower – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; down, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;retrieval&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;may&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; fail&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher –&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;act&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;availability&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Payload Size&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Small&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Larger&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Producer Complexity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Low – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;basic&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;metadata&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;required&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;must&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;serialize&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;include&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example Payload&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerCreated", "partnerId": "BP12345" }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerUpdated", "partner": { ...full partner data... } &lt;/SPAN&gt;&lt;SPAN&gt;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1753097963462.png" style="width: 621px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289310i2B29551E66A0EE15/image-dimensions/621x210?v=v2" width="621" height="210" role="button" title="vanessadayanc_0-1753097963462.png" alt="vanessadayanc_0-1753097963462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check: &lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/presenting-event-sources_e4194f4f-a986-418d-9c3b-ee71bb4ed101" target="_self" rel="noopener noreferrer"&gt;Presenting Event Sources&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1796720167"&gt;&lt;SPAN&gt;The Use Case&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The use case aims &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;enable&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; automatic validation of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; country-&lt;/SPAN&gt;&lt;SPAN class=""&gt;specific&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;for&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness partners&lt;/SPAN&gt; &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&lt;SPAN class=""&gt; code 'CH'. Whenever a b&lt;/SPAN&gt;&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number is provided, it&lt;/SPAN&gt; &lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;SPAN class=""&gt;automatically&lt;/SPAN&gt; &lt;SPAN class=""&gt;checked&lt;/SPAN&gt; &lt;SPAN class=""&gt;against&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT IDs service&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;published&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;SPAN class=""&gt;Each&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&amp;nbsp;maintains&amp;nbsp;&lt;SPAN class=""&gt;its&lt;/SPAN&gt;&lt;SPAN class=""&gt; own &lt;/SPAN&gt;&lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;administration, e.g. Switzerland offers a public SOAP API&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;validating&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; Swiss VAT ID. This&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;automated&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number check&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;ensures&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;complete&lt;/SPAN&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;management&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt; &lt;SPAN class=""&gt;master&lt;/SPAN&gt; &lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;SPAN class=""&gt;. In this specific case,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;use&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;SPAN class=""&gt; also important&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;audits conducted&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1600206662"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;Expected&amp;nbsp;features/functionalities&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;If a business partner is created or changed and has the country value 'CH' in any of its addresses, the VAT ID with the BPTaxNumberType = 'CH1' should be validated using the public SOAP API. If the VAT validation was successful, no further action is required. However if no VAT is maintained or the validation fails, both an email and a message to a webhook should be generated.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1403693157"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Environment&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The event is produced in the SAP S/4HANA Private Cloud. The requirement is implemented using the SAP Integration Suite and its components: SAP Event Mesh Integration Suite (EMIS) and Cloud Integration. A mail adapter and a webhook are used as consumers of the event. Alternatively, instead of SAP EMIS you can also use the SAP Advanced Event Mesh (AEM). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Schaubild.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293441i38896C0AEFEA7A73/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Schaubild.jpg" alt="Schaubild.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Simplified presentation of the use case with a full state event in a high level architecture.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set-Up-Connectivity:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To set up connectivity for SAP S/4HANA Private Cloud and SAP EMIS (or SAP AEM) you can refer to the following blog posts:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-s-4hana-direct-connectivity-with-event-mesh-in-integration-suite/ba-p/13752534" target="_blank"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP S/4HANA direct connectivity &lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt;ith Event Mesh in Integration Suite&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/rap-business-events-with-sap-integration-suite-advanced-event-mesh-and-sap/ba-p/13913393" target="_self"&gt;RAP Business Events with SAP Integration Suite, Advanced Event Mesh and SAP S/4HANA On Premise 2023&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1207179652"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Variante&lt;/SPAN&gt;&lt;SPAN class=""&gt; 1 &lt;/SPAN&gt;&lt;SPAN class=""&gt;– &lt;/SPAN&gt;&lt;SPAN class=""&gt;Using &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP Business Event&lt;/SPAN&gt;&lt;SPAN class=""&gt; for &lt;/SPAN&gt;&lt;SPAN class=""&gt;Business&lt;/SPAN&gt; &lt;SPAN class=""&gt;Partner&lt;/SPAN&gt;&lt;SPAN class=""&gt; Create/Change&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752652200462.png" style="width: 504px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287155iB46B37412A89FDAA/image-dimensions/504x87?v=v2" width="504" height="87" role="button" title="vanessadayanc_1-1752652200462.png" alt="vanessadayanc_1-1752652200462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the standard event, which is used first, a simple structure (notification event) is applied: the message contains only the ID field and the data in JSON format. A connection to EMIS/AEM is used, which requires an additional API call to retrieve the full data &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;before&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;further&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;take&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;place&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;This&lt;/SPAN&gt; &lt;SPAN class=""&gt;iFlo&lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt; becomes more complex due to the&lt;/SPAN&gt;&amp;nbsp;extra&amp;nbsp;&lt;SPAN class=""&gt;API Call.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the HTTPS sender adapter &lt;/SPAN&gt;&lt;SPAN class=""&gt;only &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;JSON-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;formatted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;body&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;sent&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"BusinessPartner":"1000540" 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Using the received BusinessPartnerNumber a query is made to SAP S/4HANA to retrieve additional data (such as name, address, country, BPTaxNumber, etc.).&amp;nbsp;&lt;/SPAN&gt;There are two options for the receiver adapter to obtain this data:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;You can use an HTTP receiver adapter to receive the payload in JSON format or&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;an OData receiver adapter to receive the payload in XML format.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN class=""&gt;In this interface there is no option to select the country directly. Therefore it was decided to use OData to retrieve the data in XML format and apply filtering during processing.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the OData receiver a&lt;/SPAN&gt;&lt;SPAN class=""&gt;dapter&lt;/SPAN&gt;&lt;SPAN class=""&gt; the following settings are required&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752664672097.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287266iC0978C19948709C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752664672097.png" alt="vanessadayanc_0-1752664672097.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752664721215.png" style="width: 449px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287267i327E8AAD2CAE12CD/image-dimensions/449x137?v=v2" width="449" height="137" role="button" title="vanessadayanc_1-1752664721215.png" alt="vanessadayanc_1-1752664721215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After &lt;/SPAN&gt;&lt;SPAN class=""&gt;receivíng&lt;/SPAN&gt;&lt;SPAN class=""&gt; the data, the next step is t&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; route &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;messages&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;where&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;country is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;'CH' (S&lt;/SPAN&gt;&lt;SPAN class=""&gt;witzerland&lt;/SPAN&gt;&lt;SPAN class=""&gt;). &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;A &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;message&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;mapping&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;then&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; performend &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; check &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxType&lt;/SPAN&gt;&lt;SPAN class=""&gt; = 'CH1'. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_4-1752652296718.png" style="width: 475px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287158iE20A8D9AF81111C7/image-dimensions/475x202?v=v2" width="475" height="202" role="button" title="vanessadayanc_4-1752652296718.png" alt="vanessadayanc_4-1752652296718.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We&lt;/SPAN&gt; &lt;SPAN class=""&gt;us&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;g&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roovy &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;cript&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt; &lt;SPAN class=""&gt;set&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roperties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, so &lt;/SPAN&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt; &lt;SPAN class=""&gt;we&lt;/SPAN&gt; &lt;SPAN class=""&gt;can&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;later&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; send &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;emails&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;containing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;important&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. The &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ayload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;properties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;are&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;extracted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;has&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;now&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;been&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;converted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; XML &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; JSON, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
  "A_BusinessPartner": { 
    "A_BusinessPartnerType": { 
      "BusinessPartner": "1000540", 
      "BusinessPartnerUUID": "6045bd9c-ea28-1fe0-8df5-064c8dfd4727", 
      "BusinessPartnerName": "Test RealCore Schweiz GmbH", 
      "to_BusinessPartnerAddress": { 
        "A_BusinessPartnerAddressType": [ 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "1", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29648" 
          }, 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "2", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29663" 
          }, 
        ] 
      }, 
      "to_BusinessPartnerTax": { 
        "A_BusinessPartnerTaxNumberType": { 
          "BusinessPartner": "1000540", 
          "BPTaxType": "CH1", 
          "BPTaxNumber": "CHE359123374", 
          "BPTaxLongNumber": "", 
          "AuthorizationGroup": "" 
        } 
      } 
    } 
  } 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; perform &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;action&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;you&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ne&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;set&lt;/SPAN&gt;&lt;SPAN class=""&gt; and send a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;h&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;eader&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;in &lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;all&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. In &lt;/SPAN&gt;&lt;SPAN class=""&gt;our&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;use&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;case&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;header&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;indicate&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;validation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;A href="https://www.uid-wse.admin.ch/V5.0/PublicServices.svc" target="_self" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; to webservice and actions)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The HTTP receiver adapter &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;used&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;make&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;API call to &lt;/SPAN&gt;&lt;SPAN class=""&gt;validate&lt;/SPAN&gt;&lt;SPAN class=""&gt; the &lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_6-1752652391710.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287161iD64CA3DF9A0186BF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_6-1752652391710.png" alt="vanessadayanc_6-1752652391710.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;he API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;call&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;returns&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a simple &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;response&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"&amp;gt; 
  &amp;lt;s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&amp;gt; 
    &amp;lt;ValidateVatNumberResponse xmlns="http://www.uid.admin.ch/xmlns/uid-wse"&amp;gt; 
      &amp;lt;ValidateVatNumberResult&amp;gt;true&amp;lt;/ValidateVatNumberResult&amp;gt; 
    &amp;lt;/ValidateVatNumberResponse&amp;gt; 
  &amp;lt;/s:Body&amp;gt; 
&amp;lt;/s:Envelope&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;All &lt;/SPAN&gt;&lt;SPAN class=""&gt;together&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;complete&amp;nbsp;&lt;SPAN class=""&gt;iFlow&lt;/SPAN&gt; &lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_7-1752652431621.png" style="width: 690px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287162i17A282525BFB8203/image-dimensions/690x231?v=v2" width="690" height="231" role="button" title="vanessadayanc_7-1752652431621.png" alt="vanessadayanc_7-1752652431621.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the teaser one benefit of full state events was &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;highlighted&lt;/SPAN&gt;&lt;/SPAN&gt;: &lt;EM&gt;&lt;STRONG&gt;Simplified Architectures&lt;/STRONG&gt;&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;: Reduceing dependency on S/4HANA APIs, and lowering system coupling and load.&lt;/EM&gt;&amp;nbsp;However, with the interface described above, the simplified architecture is not archieved. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;address&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;another&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;solution&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requir&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ed&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;STRONG&gt;RAP event &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A RAP event can be used to archieve simpler architecture, providing pre-selected and filtered events.&amp;nbsp;Therefore, the solution chosen is to implement a custom RAP event.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;You&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; find &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;more&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; in &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;SPAN class=""&gt;next&lt;/SPAN&gt;&amp;nbsp;blog of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt; &lt;SPAN class=""&gt;serie&lt;/SPAN&gt;&lt;SPAN class=""&gt;: Event-&lt;/SPAN&gt;&lt;SPAN class=""&gt;driven&lt;/SPAN&gt;&lt;SPAN class=""&gt; Architecture: &lt;/SPAN&gt;&lt;SPAN class=""&gt;Creating&lt;/SPAN&gt; &lt;SPAN class=""&gt;Fullstate&lt;/SPAN&gt;&lt;SPAN class=""&gt; Events in SAP S/4HANA &lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;SPAN class=""&gt; SAP Event Mesh on Integration Suite (EMIS) - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;RAP Edition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;coming&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;soon&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;…).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666"/>
    <published>2025-07-31T12:41:30.451000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-access-policies-in-sap-cloud-integration-ci-cpi-for-multi-team/ba-p/14168567</id>
    <title>Streamlining Access Policies in SAP Cloud Integration(CI/CPI)  for Multi-Team Tenant</title>
    <updated>2025-07-31T22:23:14.032000+02:00</updated>
    <author>
      <name>adarshrao_rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/882299</uri>
    </author>
    <content>&lt;P&gt;Access policies within SAP Cloud Integration (CI/CPI) are crucial for managing and organizing resources effectively when multiple teams are working within the same tenant. While there is an excellent blog available which covers the basics on access policies (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-access-policies-for-integration-packages/ba-p/13648901" target="_self"&gt;blog&lt;/A&gt;), this blog aims to address the unique challenges that arise when multiple teams need tailored access and wish to avoid clutter caused by unnecessary package creation.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Understanding the Requirements:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;If your tenant is bustling with unwanted or empty packages, think names like "PoC Package" or "Test123"—then it’s likely time to optimize your access policies. This blog offers practical solutions for the following requirements:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Dedicated Access for Teams:&lt;/STRONG&gt; Ensure that different teams within your organization do not have unauthorized access to each other’s integration packages.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Targeted Permissions:&lt;/STRONG&gt; Assign package access exclusively to the designated teams.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Artifact Creation Control:&lt;/STRONG&gt; Prevent teams from creating integration artifacts like iFlows, Value Mappings, and Message Mappings in unassigned packages.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prevent Package Clutter:&lt;/STRONG&gt; Implement a strategy to avoid the creation of unnecessary packages within the tenant.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Example Scenario:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Consider three teams: Team 1, Team 2, and Team 3.&lt;/P&gt;&lt;P&gt;Two users are part of this setup—User 1 belongs to Team 1, and User 2&amp;nbsp; belongs to Team 2.&lt;/P&gt;&lt;P&gt;Users should have access to packages as depicted below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tablepic.png" style="width: 963px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294752iAD0FD261C9141802/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="tablepic.png" alt="tablepic.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 849px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294749iE77707C5A89FA39F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;For Requirements #1 and #2:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 1&lt;/STRONG&gt; should have access to Team 1 Package and Housekeeping Package. Here’s how:&lt;/P&gt;&lt;P&gt;Create a new role within Access Policy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 495px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294787iE9C69D9F10E1CA88/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Assign the required packages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 773px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294789i1F76B852CF0F2A3D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define a custom role in BTP Cockpit.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294796i43A24CA4E2D66EA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Associate this role with a custom Role Collection.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 839px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294798i0C41347DF437B133/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Link this Role Collection to User 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 880px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294800i7F2029EDF99BA8FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 2&lt;/STRONG&gt; is to be granted Team 2 Package access following similar steps.&lt;/P&gt;&lt;P&gt;Create a new role within Access Policy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 495px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294794i164AE78284D78758/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Assign the required packages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic5.png" style="width: 775px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294795i3CC566639DFE2D6A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic5.png" alt="pic5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define a custom role in BTP Cockpit.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294797i0C8F110DC0CF4569/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic7.png" alt="pic7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Associate this role with a custom Role Collection.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 838px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294799i9F5AEC75E7E670B6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Link this Role Collection to User 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 880px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294801i41E857BD59617A12/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Testing User Access:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 1:&lt;/STRONG&gt; Can edit and incorporate integration artifacts within the Housekeeping Package and Team 1 Package, but not Team 2 Package.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic14.png" style="width: 665px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294813i8B660B5046999FDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic14.png" alt="pic14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 2:&lt;/STRONG&gt; Can modify and add integration artifacts in Team 2 Package but lacks the same permissions for Team 1 Package.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic15.png" style="width: 664px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294814iC80122C732FD29D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic15.png" alt="pic15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;For more, please refer &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/managing-access-policies?locale=en-US" target="_self" rel="noopener noreferrer"&gt;here&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Kindly Note:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Both User 1 and User 2 can edit &lt;STRONG&gt;Team 3 Package&lt;/STRONG&gt; and &lt;STRONG&gt;create integration artifacts&lt;/STRONG&gt; which should not be the case as per our &lt;STRONG&gt;requirement #3&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Solution for Requirement #3:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;To prevent integration artifact creation in unassigned packages, create a new role in Access Policy that permits artifact creation. Importantly, do &lt;STRONG&gt;NOT&lt;/STRONG&gt; assign this role or its collection to User 1 and User 2. Consequently, neither user will be able to create integration artifacts in unauthorized packages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 491px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294802i7279436BECE2B6F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 757px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294803i34D1F8B6A08000C4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More Integration Artifacts can be added to this list.&lt;/P&gt;&lt;P&gt;Whenever user tries to access Integration Suite, following is checked in sequence.&lt;/P&gt;&lt;P&gt;1. Whether standard Role Collection is assigned to view the artifact&lt;/P&gt;&lt;P&gt;2. Whether Access Policy is applied on the content accessed&lt;/P&gt;&lt;P&gt;3. Whether User is provided access in Access Policy to edit the content&lt;/P&gt;&lt;P&gt;Now, User 1 and 2 can create integration artifacts only in their assigned packages and they can't create integration artifacts in any other packages.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Handling Unnecessary Package Creation:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;User 1 &amp;amp; 2 can still create new packages but because of &lt;STRONG&gt;Solution #3&lt;/STRONG&gt;&amp;nbsp;they cannot create any integration artifacts inside them, thereby minimizing clutter. Now, lets check how to automatically remove these empty packages from the tenant.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Solution Overview:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I have created an iFlow which connects to Integration Content APIs to detect empty packages without integration artifacts and automatically delete them.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;iFlow Design :&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflowpic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294817iA3D3BEF5F8E6BF31/image-size/large?v=v2&amp;amp;px=999" role="button" title="iflowpic2.png" alt="iflowpic2.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;For Integration Content API Reference, please refer this &lt;A href="https://api.sap.com/api/IntegrationContent/resource/Integration_Package_Discover" target="_self" rel="noopener noreferrer"&gt;link&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Following steps involved in this iflow:&lt;/P&gt;&lt;P&gt;1. Call GetAccess Token : This will call the Local Integration Process :&amp;nbsp;Get Access Token (1)&lt;/P&gt;&lt;P&gt;2. In Get Access Token, we are calling the token URL from Service key of SAP Process Integration Runtime service which has api plan&lt;/P&gt;&lt;P&gt;3.&amp;nbsp;captureAccessToken - Groovy Script: we parse json response, capture the access token and set it to a access token property&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper

def Message processData(Message message) {
    // Step 1: Get the JSON string from the message body
    def body = message.getBody(String)
    
    // Step 2: Parse the JSON input using JsonSlurper
    def jsonSlurper = new JsonSlurper()
    def jsonObject = jsonSlurper.parseText(body)
    
    // Step 3: Capture the access_token value
    def accessToken = jsonObject.access_token
    
    // Step 4: Set this value to the property accessToken
    message.setProperty("accessToken", accessToken)
    
    // Return the modified message
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;Set Authorization Header - Content Modifier: We set Accept and Authorization Headers&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294820i7232D3259DDCDF51/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic16.png" alt="pic16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Request Reply : To call the API and get the list of all the Integration Packages in the tenant&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic17.png" style="width: 963px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294822i89F0895D002E94A2/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic17.png" alt="pic17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. JSON to XML Converter : This is used to convert JSON to XML structure&lt;/P&gt;&lt;P&gt;7. General Splitter - Since the response contains all the packages in a single response, we can split it based on the XPATH //results&lt;/P&gt;&lt;P&gt;8.&amp;nbsp;Call - Empty Package Check : To call the Local Integration Process-&amp;nbsp;Empty Package Check(2)&lt;/P&gt;&lt;P&gt;9. Set Package id - Content Modifier : to set the packageid property&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294825iC44ECDC04182A51C/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic18.png" alt="pic18.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;10. Request - Reply : To check if Integration Design Time Artifacts are available inside each package&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753989628720.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294826iDC6C753EC32BC7F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753989628720.png" alt="adarshrao_rao_0-1753989628720.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11.&amp;nbsp;Call - Delete Empty Packages: To call the Local Integration Process&amp;nbsp;Delete Empty Packages(3)&lt;/P&gt;&lt;P&gt;12.&amp;nbsp;deleteEmptyPackages - Groovy Script: To parse the response and check if the response is empty (which indicates Package is empty), set the property deletePackage as true. If not, set it as false&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper

def Message processData(Message message) {
    // Retrieve the body of the message
    String body = message.getBody(String)
    
    // Parse the JSON input using JsonSlurper
    def jsonSlurper = new JsonSlurper()
    def jsonObject = jsonSlurper.parseText(body)
    
    // Check if the JSON structure matches {"d":{"results":[]}}
    def isEmptyResults = jsonObject?.d?.results?.isEmpty()
    
    // Set the property deletePackage based on the check
    if (isEmptyResults) {
        message.setProperty("deletePackage", true)
    } else {
        message.setProperty("deletePackage", false)
    }

    // Return the modified message
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;13. Router: To route the messages based on the deletePackage value&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic19.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294827iAA9ED41AB5354008/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic19.png" alt="pic19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14. Request - Reply: To call the API for Package deletion&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1753990125834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294828iD42A5AB313E9230F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1753990125834.png" alt="adarshrao_rao_1-1753990125834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;15. Exception Handling: If the package is locked then the message fails. Hence, setting a custom header with likely cause. This can be extended as per your requirement.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Testing:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Empty packages are created by User 1 &amp;amp; 2 because they can't create Integration Artifacts inside it because of &lt;STRONG&gt;Solution#3&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_2-1753990548526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294832i2972294738FF07D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_2-1753990548526.png" alt="adarshrao_rao_2-1753990548526.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Run the flow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_3-1753990634966.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294833iDD69EDE66FA028D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_3-1753990634966.png" alt="adarshrao_rao_3-1753990634966.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;All the empty packages are deleted now&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_4-1753990702403.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294834iB403E1EF4587F698/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_4-1753990702403.png" alt="adarshrao_rao_4-1753990702403.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now, if one of the empty package is locked under a user then the flow will fail and likely cause is set as custom header which is set in exception subprocess&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_5-1753990915543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294836iCEC626C0516D5B8A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_5-1753990915543.png" alt="adarshrao_rao_5-1753990915543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_6-1753990983815.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294838i2942CA2DEC22F2CD/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_6-1753990983815.png" alt="adarshrao_rao_6-1753990983815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Efficient management of access policies within SAP Cloud Integration is essential for organizations utilizing shared environments among multiple teams. By implementing tailored access controls, you can ensure that each team has exclusive access to their designated packages. This approach optimizes collaborative workflows by preventing unauthorized modifications to integration packages.&lt;BR /&gt;Furthermore,&amp;nbsp; restriction on the creation of integration artifacts in unassigned packages helps in maintaining a structured and clutter-free tenant. Introducing automated solutions, like the iFlow for detecting and deleting empty packages, further streamlines operations by eliminating unnecessary resource allocation.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I invite you to share your thoughts in the comments below. Whether you have questions about Access Policies, experiences to share, or suggestions for improvement, your feedback is invaluable. It helps others who are navigating similar journeys and contributes to a community of shared knowledge. I look forward to hearing from you!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-access-policies-in-sap-cloud-integration-ci-cpi-for-multi-team/ba-p/14168567"/>
    <published>2025-07-31T22:23:14.032000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/sap-ibp-new-integration-option-introducing-sap-cloud-integration-from-btp-s/ba-p/14169516</id>
    <title>SAP IBP new Integration Option : Introducing SAP Cloud Integration from BTP's Integration Suite</title>
    <updated>2025-08-01T15:58:10.401000+02:00</updated>
    <author>
      <name>SofianePebre</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1476236</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;Hello SAP Community,&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Recently,&amp;nbsp;changes in the integration layer for SAP Integrated Business Planning (IBP) were announced as you can read in the following blog entry :&amp;nbsp;&lt;A href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/enhancing-sap-ibp-integration-evolution-and-innovation/ba-p/14042395" target="_blank"&gt;Enhancing SAP IBP integration - Evolution and Innovation&lt;/A&gt; or see in the latest IBP What’s New webinar for 2508 with regards to Integration.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":megaphone:"&gt;📣&lt;/span&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;U&gt;Key message&lt;/U&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":megaphone:"&gt;📣&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;While SAP Cloud Integration for Data Services (CI-DS) will remain the main ETL solution for a 1000+ existing IBP customers, especially when it comes to integrating time series data, innovations in the IBP model structure (The new harmonized planning area allowing to support both time series and order based planning) have led us to rethink and improve the integration layer for a more scalable and efficient offering.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Rest assured: &lt;STRONG&gt;there is currently no plan to sunset CI-DS&lt;/STRONG&gt;, it will continue to be supported by SAP in the future.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;For new IBP customers post release 2508, we encourage making use of the new harmonized planning area (sample PA called SAPIBP2) whose main integration method is SAP Real Time Integration (RTI) for master data as well as orders &amp;amp; stock. Anything else, especially time series data, can be covered with &lt;STRONG&gt;SAP Cloud Integration (CI)&lt;/STRONG&gt;—part of SAP Business Technology Platform (BTP) Integration Suite.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;So what is SAP CI and how can we use it to integrate data between SAP IBP and SAP S/4HANA (private cloud / on premise) ?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;This is what we will cover in this blog series.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Overview: What is SAP Cloud Integration?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;SAP Cloud Integration is the central, cloud‑native iPaaS offering within &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, enabling seamless connection of &lt;STRONG&gt;cloud and on‑premise applications&lt;/STRONG&gt;, both SAP and non‑SAP.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Core capabilities include:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Integration flow design &amp;amp; monitoring via web‑based tooling,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Support for synchronous and asynchronous patterns, event‑based, batch, messaging, content‑based routing, IDoc/RFC flows,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Built‑in security, governance, and stateful processing with error handling and restart capabilities.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Key Capabilities &amp;amp; Integration Patterns&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Prepacked integration content, accelerators and templates supported,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Full lifecycle support: orchestration, transformation, routing, monitoring,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Protocol &amp;amp; messaging flexibility: HTTP/HTTPS, SOAP, REST/OData, RFC/IDoc, SFTP, JMS, AS2, mail, LDAP, JDBC, plus a custom Adapter SDK,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Custom adapter framework: build your own adapters to any protocol or legacy system.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Integration Options: Adapters, APIs, Open Connectors&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;SAP‑standard adapters: e.g. SuccessFactors, Ariba, S/4HANA, Concur, SAP CRM, SAP Cloud for Customer (C4C) and now IBP,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Open Connectors: simplified connectivity to third‑party SaaS such as Salesforce, AWS, Dynamics CRM,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;APIs / web services: support for REST/OData or SOAP interfaces,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;File‑based and database integration: via SFTP, JDBC adapters,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Messaging-based integration: JMS, AS2 to handle enterprise messaging.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Let’s now focus on the initial configuration needed in the various systems to secure this IBP to S/4HANA (private/on prem) integration via CI.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1754053539935.png" style="width: 791px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295267iD136AAB2043F565A/image-dimensions/791x365/is-moderation-mode/true?v=v2" width="791" height="365" role="button" title="SofianePebre_0-1754053539935.png" alt="SofianePebre_0-1754053539935.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Initial Setup in BTP &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;To be able to use CI for integration purposes with IBP, you first need the following:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;A license to SAP BTP (Purchase at&amp;nbsp;&lt;A href="https://store.sap.com/dcp/en/product/display-9999951781_live_v1/sap-business-technology-platform" target="_blank" rel="noopener noreferrer"&gt;SAP Store&lt;/A&gt;),&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;A global account must have been setup for your company, check with your IT team as it is possible you already have one for other purposes if you have a BTP license. In that case, you can use the same.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;You need to create a BTP subaccount to consume the Integration Suite service via your BTP global account administrator.&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Make sure&amp;nbsp;Cloud Foundry Environment is enabled for your subaccount&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Note that Integration Suite&amp;nbsp;service runs only on the SAP BTP, Cloud Foundry environment.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;To consume this application, you need to create a subscription to the Integration Suite. In the navigation bar of the&amp;nbsp;SAP BTP&amp;nbsp;cockpit, select&amp;nbsp;Services→Service Marketplace. All resources your subaccount is entitled to consume are shown as tiles.&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on&amp;nbsp;...&amp;nbsp;(Create)&amp;nbsp;in the top-right corner of the Integration Suite tile. An intuitive wizard opens to guide you in a step-by-step procedure.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Check your subscription from your subaccount via the Services→Instances and Subscriptions section&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1754053925947.png" style="width: 767px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295277iDF287DF085C3B6CA/image-dimensions/767x447/is-moderation-mode/true?v=v2" width="767" height="447" role="button" title="SofianePebre_0-1754053925947.png" alt="SofianePebre_0-1754053925947.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Now, to provision the Cloud Integration tenant from the Integration Suite in the next steps, you need to add additional role.&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;User Name &lt;/EM&gt;which should be the email address,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Identity Provider &lt;/EM&gt;choose for example Default Identity Provider,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Email.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the Security→Users section of BTP cockpit, select Create&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Fill in the following on the new user dialog:&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Choose Assign Role Collection and select “Integration_Provisioner”,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_3-1754042901842.png" style="width: 756px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295135i7DB7A762D5DB4041/image-dimensions/756x325/is-moderation-mode/true?v=v2" width="756" height="325" role="button" title="SofianePebre_3-1754042901842.png" alt="SofianePebre_3-1754042901842.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;You can access your Integration Suite subscription as shown below with the above credentials.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_4-1754042901846.png" style="width: 706px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295136i80DA8B9E42F19AD4/image-dimensions/706x203/is-moderation-mode/true?v=v2" width="706" height="203" role="button" title="SofianePebre_4-1754042901846.png" alt="SofianePebre_4-1754042901846.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Initial Setup in Integration Suite &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Now that you can access the Integration Suite application, you need to activate its capabilities to provision the Cloud Integration tenant.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_5-1754042901848.png" style="width: 640px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295134i882ACD4D276D18E8/image-dimensions/640x392/is-moderation-mode/true?v=v2" width="640" height="392" role="button" title="SofianePebre_5-1754042901848.png" alt="SofianePebre_5-1754042901848.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;From the Integration Suite, choose Home from the left side navigation bar.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Add Capabilities (or Manage Capabilities if this step was already executed for other purposes),&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the first step of the new dialog, select Build Integration Scenarios and choose Next,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_6-1754042901850.png" style="width: 734px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295138iF6A32B4C1E074B53/image-dimensions/734x345/is-moderation-mode/true?v=v2" width="734" height="345" role="button" title="SofianePebre_6-1754042901850.png" alt="SofianePebre_6-1754042901850.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the second step, select your environment between Production and Non Production and choose Next,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Finally in the third step, choose Activate.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Once the activation is finished, you should be able to see the added features from the newly provisioned CI tenant on the navigation bar to the left:&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_7-1754042901852.png" style="width: 701px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295139i7E6E097EAD83EC79/image-dimensions/701x284/is-moderation-mode/true?v=v2" width="701" height="284" role="button" title="SofianePebre_7-1754042901852.png" alt="SofianePebre_7-1754042901852.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Initial Setup in IBP&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Now you can lay the groundwork on the IBP application side by setting up your communication arrangement based on the communication scenario "&lt;EM&gt;Planning – Integration Suite – Cloud Integration Integration (SAP_COM_0931)"&lt;/EM&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;First, create your &lt;STRONG&gt;Communication User&lt;/STRONG&gt; that will be called during the integration. Use the Maintain Communication Users application for this purpose.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_8-1754042901853.png" style="width: 153px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295137iA55D871812D5BA11/image-dimensions/153x153/is-moderation-mode/true?v=v2" width="153" height="153" role="button" title="SofianePebre_8-1754042901853.png" alt="SofianePebre_8-1754042901853.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Maintain Communication Users screen, choose New.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Create Communication User screen, enter the following data:&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;username,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;description,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;password&lt;/EM&gt; (this will be used in the BTP application to conclude the setup).&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Alternatively, you can create a certificate-based authentication method.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_9-1754042901855.png" style="width: 787px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295141iA702483F1C38B782/image-dimensions/787x418/is-moderation-mode/true?v=v2" width="787" height="418" role="button" title="SofianePebre_9-1754042901855.png" alt="SofianePebre_9-1754042901855.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Note: above names are set as examples only.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on create.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Next, access the Communication System application to define IBP as the partner for inbound communication from CI.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_10-1754042901856.png" style="width: 154px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295140i29A2CA46E52EE6DB/image-dimensions/154x153/is-moderation-mode/true?v=v2" width="154" height="153" role="button" title="SofianePebre_10-1754042901856.png" alt="SofianePebre_10-1754042901856.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication Systems screen, choose New.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the New Communication System dialog box, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;System ID,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;System Name.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Create from said dialog box&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication System screen, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Select the checkbox for&lt;EM&gt; Inbound Only,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Add the communication user created in the previous step : &lt;EM&gt;User Name/Client ID&lt;/EM&gt;,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_11-1754042901858.png" style="width: 763px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295142i4E125B063B2CD284/image-dimensions/763x416/is-moderation-mode/true?v=v2" width="763" height="416" role="button" title="SofianePebre_11-1754042901858.png" alt="SofianePebre_11-1754042901858.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_12-1754042901859.png" style="width: 770px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295144i8C8CB23408469E8A/image-dimensions/770x77/is-moderation-mode/true?v=v2" width="770" height="77" role="button" title="SofianePebre_12-1754042901859.png" alt="SofianePebre_12-1754042901859.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Note: above names are set as examples only.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Save.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Finally, access the Communication Arrangement application to expose inbound and outbound services that enable the communication between IBP and CI.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_13-1754042901859.png" style="width: 132px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295143iF72B1D9CFE19398D/image-dimensions/132x131/is-moderation-mode/true?v=v2" width="132" height="131" role="button" title="SofianePebre_13-1754042901859.png" alt="SofianePebre_13-1754042901859.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication Arrangement screen, choose New.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the New Communication Arrangement dialog box, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Scenario,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Arrangement Name.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Create from said dialog box&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication Arrangement screen, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Select the communication system created in the previous step : &lt;EM&gt;Communication System.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1754057029902.png" style="width: 854px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295290i6735CBBEA5D741C3/image-dimensions/854x239/is-moderation-mode/true?v=v2" width="854" height="239" role="button" title="SofianePebre_0-1754057029902.png" alt="SofianePebre_0-1754057029902.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Note: above names are set as examples only.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Save.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;The configuration for integration on the IBP side is finished.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Next blog entries will cover the following:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;start working in the Integration Suite by defining destinations representing the systems (IBP and S/4HANA) the integration flows (i-flows) will connect to via RFC connections.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;start configuring i-flows, leveraging standard prebuilt CI packages and the ERP (or S/4HANA) integration addon for SAP IBP as a starting point.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Sources&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Overview of &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-sap-integration-suite?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer"&gt;SAP Integration Suite&lt;/A&gt; and &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/sap-cloud-integration?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud Integration&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Additional information on &lt;A href="https://community.sap.com/Activating%20and%20Managing%20Capabilities" target="_blank" rel="noopener nofollow noreferrer"&gt;Integrating capabilities in Integration Suite&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/sap-ibp-new-integration-option-introducing-sap-cloud-integration-from-btp-s/ba-p/14169516"/>
    <published>2025-08-01T15:58:10.401000+02:00</published>
  </entry>
</feed>
