<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/Cloud-Integration-blog-posts.xml</id>
  <title>SAP Community - Cloud Integration</title>
  <updated>2025-09-24T14:00:10.404563+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/Cloud Integration/pd-p/67837800100800006801" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>Cloud Integration blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/custom-groovy-exception-classes-in-sap-cpi/ba-p/14190767</id>
    <title>Custom Groovy exception classes in SAP CPI</title>
    <updated>2025-09-04T06:56:27.590000+02:00</updated>
    <author>
      <name>JacobVandborg</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1696323</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1609591188"&gt;Intro&lt;/H1&gt;&lt;P&gt;On multiple occasions, I've found myself limited by only being able to &lt;EM&gt;throw new Exception()&lt;/EM&gt; from a Groovy script - especially when the logic needed to throw both functional and technical errors. There's always the possibility to look for existing exception classes that might suit my need, but I wanted exceptions completely tailored to my integrations. As I found out, it's actually not that difficult.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1413077683"&gt;How to&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;So how do you define and throw a custom exception from a Groovy script in SAP CPI? Easy - just define the exception class in your Groovy script and throw it. But how? Here's a very simplified example.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

def Message processData(Message msg) {
    String exceptionToThrow = msg.getProperty("exceptionToThrow")?.toLowerCase()

    switch (exceptionToThrow) {
        case "functional":
            throw new MyCustomFunctionalException("Functional message", "Whatever subject you like")
            break
        case "technical":
            throw new MyCustomTechnicalException("Technical message", 110)
            break
        default:
            break
    }
    return msg
}

class MyCustomFunctionalException extends Exception {
    private String subject

    MyCustomFunctionalException(String msg, String subject) {
        super(msg)
        this.subject = subject
    }

    String getErrorType() {
        return "FUNCTIONAL"
    }

    String getSubject() {
        return subject
    }
}

class MyCustomTechnicalException extends Exception {
    private int errorCode

    MyCustomTechnicalException(String msg, int errorCode) {
        super(msg)
        this.errorCode = errorCode
    }

    String getErrorType() {
        return "TECHNICAL"
    }

    int getErrorCode() {
        return errorCode
    }
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the example, two classes are defined that extend the the Exception class.Both exception classes include a getErrorType() method, which returns - you guessed it - the error type (FUNCTIONAL/TECHNICAL). Unique to the functional exception class is the method getSubject() and unique to the technical exception class is the method getErrorCode(). These values are set in the constructor of the respective classes.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;So, now that you can throw custom exception classes from a Groovy script - what can you actually do with them? You could create another Groovy script in your Exception Subprocess that will perform different actions depending on the error type. Again, here's a very simplified example.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

def Message processData(Message msg) {
    def camelExceptionCaught = msg.getProperty("CamelExceptionCaught") as Exception
    def rootException = getRootException(camelExceptionCaught)
    def rootExceptionName = rootException.getClass().getCanonicalName()

    def errorType = ""
    def errorMessage = ""
    def errorDetails = ""

    // Classify root exception and extract relevant metadata
    switch (rootExceptionName) {
        case "MyCustomFunctionalException":
            errorType = rootException.getErrorType()
            errorMessage = rootException.getMessage()
            errorDetails = "Subject : " + rootException.getSubject()
            break
        case "MyCustomTechnicalException":
            errorType = rootException.getErrorType()
            errorMessage = rootException.getMessage()
            errorDetails = "Error code : " + rootException.getErrorCode()
            break
        default:
            errorType = "Unclassified"
            errorMessage = rootException.getMessage()
            break
    }

    msg.setProperty("errorType", errorType)
    msg.setProperty("errorMessage", errorMessage)
    msg.setProperty("errorDetails", errorDetails)
    msg.setProperty("rootExceptionName", rootExceptionName)

    return msg
}

/**
 * Traverses exception causes to find the root exception.
 *
 *  throwable The top-level caught exception.
 * @return The deepest cause (root) of the exception chain.
 */
Exception getRootException(Throwable throwable) {
    def cause = throwable
    while (cause?.getCause() != null &amp;amp;&amp;amp; cause.getCause() != cause) {
        cause = cause.getCause()
    }
    return (Exception) cause
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1216564178"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;From the two examples, you can see how easy it is to define, throw, and handle custom exceptions in Groovy script.&amp;nbsp;I’ve used this technique many times when &lt;EM&gt;throw new Exception()&lt;/EM&gt;&amp;nbsp;just wasn’t powerful enough.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/custom-groovy-exception-classes-in-sap-cpi/ba-p/14190767"/>
    <published>2025-09-04T06:56:27.590000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-simplifying-error-handling-with-a-generic-retry-iflow/ba-p/14206093</id>
    <title>SAP Cloud Integration – Simplifying Error Handling with a Generic Retry iFlow for Kafka</title>
    <updated>2025-09-04T07:00:32.070000+02:00</updated>
    <author>
      <name>ShraddhaFatale</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1640391</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Traditional Retry Handling in SAP Cloud Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Apache Kafka is an open-source distributed event streaming platform used for building real-time data pipelines and applications. It allows you to publish, store, and process streams of records in a fault-tolerant and highly scalable way. It is often used for high-throughput, low-latency messaging between systems.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In enterprise-level integration cases, temporary failures are an unfortunate reality — particularly in the context of asynchronous messaging systems such as Apache Kafka. Ensuring these momentary glitches do not lead to data loss or message failure is essential.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In SAP Cloud Integration (CI) iFlows with Kafka, retries are traditionally handled by leveraging Kafka consumer offset management, which allows unprocessed messages to be redelivered. While this ensures reliable message delivery in case of temporary errors, it also introduces challenges such as potential message duplication, out-of-order processing, and difficulty in distinguishing between transient and permanent errors. These factors can complicate error handling and increase the complexity of downstream processing.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the Retry Mechanism iFlow for Kafka&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This blog presents a reusable Retry Mechanism iFlow designed specifically for Kafka as the source. It includes configurable retry logic, failure escalation by JIRA ticket, exponential wait time, and dead-letter handling using Apache Kafka — all packaged into a generic integration flow you can insert into numerous pipelines.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Features&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Generic &amp;amp; Reusable: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;To be used across iFlows where Kafka is the sender.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Dynamic Configuration:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Retry Count&lt;/LI&gt;&lt;LI&gt;Retry Interval&lt;/LI&gt;&lt;LI&gt;Kafka Original &amp;amp; DMQ Topic&lt;/LI&gt;&lt;/OL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Optional JIRA ticket creation: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;For persistent failures.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp; Dead Message Queue (DMQ) Handling: &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Failed messages are routed to a Kafka topic for traceability.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Configurable Parameters &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;(passed via headers from source iFlow)&lt;/SPAN&gt;&lt;/P&gt;&lt;TABLE width="642"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;Retry Interval (in seconds)&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Wait time before each retry attempt.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;Maximum Retry Attempts&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Number of times a message retry is attempted.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;Kafka Original Topic (Header)&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Destination topic for reprocessing.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="274"&gt;&lt;P&gt;&lt;SPAN&gt;DMQ Topic (Header)&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="369"&gt;&lt;P&gt;&lt;SPAN&gt;Topic for persistently failed messages.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Flow Diagram&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_0-1756904376475.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308571i8D132863E8153A3C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_0-1756904376475.png" alt="ShraddhaFatale_0-1756904376475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Flow &lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Below is a sample Integration Flow created to handle retries selectively for connectivity and interface errors.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_1-1756904376478.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308570i4C65E51E1CFAA2F0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_1-1756904376478.png" alt="ShraddhaFatale_1-1756904376478.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Flow Logic Explained&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;1&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;STRONG&gt;Start&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Triggered via Process Direct Adapter when an error occurs in the main iFlow.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Retry?&amp;nbsp;&lt;/STRONG&gt;Checks if the message has exceeded maximum retries.&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Yes &lt;/STRONG&gt;→ Retry sequence.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;No → &lt;/STRONG&gt;DMQ + Escalation flow&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_2-1756904376479.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308572iFB42382B3808380B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_2-1756904376479.png" alt="ShraddhaFatale_2-1756904376479.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;NOTE:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;The expression retryCount[last] accesses the last element of the retryCount header array to ensure the latest retry attempt is evaluated during routing.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Retry Sequence&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Sleep&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Groovy script reads waitTime and retryCount headers, calculates an exponential backoff delay (waitTime^retryCount), sleeps for that duration in milliseconds, and sets the new waitTime header accordingly. It preserves the original message body throughout the process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;

def Message processData(Message message) {
    // Get all headers
    Map&amp;lt;String, Object&amp;gt; headers = message.getHeaders()

    // --- Extract last value from 'waitTime' header ---
    def waitTimeHeader = headers.get("waitTime")
    Integer waitTime = 1 // Default fallback

    if (waitTimeHeader instanceof List || waitTimeHeader?.getClass()?.isArray()) {
        def lastValue = waitTimeHeader[-1]
        waitTime = lastValue?.toString()?.toInteger() ?: 1
    } else if (waitTimeHeader != null) {
        waitTime = waitTimeHeader?.toString()?.toInteger() ?: 1
    }

    // --- Extract last value from 'retryCount' header ---
    def retryCountHeader = headers.get("retryCount")
    Integer retryCount = 1 // Default fallback

    if (retryCountHeader instanceof List || retryCountHeader?.getClass()?.isArray()) {
        def lastValue = retryCountHeader[-1]
        retryCount = lastValue?.toString()?.toInteger() ?: 1
    } else if (retryCountHeader != null) {
        retryCount = retryCountHeader?.toString()?.toInteger() ?: 1
    }

    // --- Calculate exponential backoff ---
    Integer sleepTimeInSeconds = Math.pow(waitTime, retryCount) as Integer
    Integer sleepTimeInMillis = sleepTimeInSeconds * 1000

    // Set new header
    message.setHeader("waitTime", sleepTimeInSeconds)

    // Preserve original body and sleep
    def body = message.getBody()
    sleep(sleepTimeInMillis)

    message.setBody(body)
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Increment Retry Counter&lt;BR /&gt;&lt;/STRONG&gt;This Groovy script reads the retryCount header (handling both single values and arrays), retrieves the last value, increments it by 1, and sets it back in the message header. It ensures retry tracking is correctly updated for each attempt.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message

def Message processData(Message message) {
    // Get all headers
    Map&amp;lt;String, Object&amp;gt; headers = message.getHeaders()

    // Extract retryCount header
    def retryCountHeader = headers.get("retryCount")
    Integer currentCount = 0 // Default fallback

    // If retryCount is an array or list, get the last value
    if (retryCountHeader instanceof List || retryCountHeader?.getClass()?.isArray()) {
        def lastValue = retryCountHeader[-1]
        currentCount = lastValue?.toString()?.toInteger() ?: 0
    } else if (retryCountHeader != null) {
        // Handle as single value
        currentCount = retryCountHeader?.toString()?.toInteger() ?: 0
    }

    // Increment the counter
    currentCount += 1

    // Set the updated value back to the header
    message.setHeader("retryCount", currentCount)

    return message
}
​&lt;/code&gt;&lt;/pre&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Restore Original Payload&lt;BR /&gt;&lt;/STRONG&gt;Ensures original data is intact for reprocessing&lt;STRONG&gt;.&lt;BR /&gt;&lt;/STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_10-1756904768075.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308594i31FC0515968647A9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_10-1756904768075.png" alt="ShraddhaFatale_10-1756904768075.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Resend to Kafka Topic&lt;BR /&gt;&lt;/STRONG&gt;Message is pushed back to the original Kafka topic.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_11-1756904768076.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308595iDDFD236D0B73D39A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_11-1756904768076.png" alt="ShraddhaFatale_11-1756904768076.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_12-1756904768077.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308596iD01469CF44D4B834/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_12-1756904768077.png" alt="ShraddhaFatale_12-1756904768077.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Failure Handling &amp;amp; Escalation&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Send to DMQ&lt;/STRONG&gt;&lt;BR /&gt;Routes the message to a &lt;STRONG&gt;Dead Message Queue Topic&lt;/STRONG&gt; on Kafka for monitoring or auditing. Similar configuration as above, change the Topic name accordingly.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JIRA Ticket creation?&lt;/STRONG&gt;&lt;BR /&gt;Based on user’s configuration in main iflow, determines if a JIRA ticket can be created or not.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_13-1756904823967.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308597i6E97EDE2F7458625/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_13-1756904823967.png" alt="ShraddhaFatale_13-1756904823967.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Construct Body&lt;/STRONG&gt;&lt;BR /&gt;Adds message context, failure reason, and other metadata in a body.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Creates JIRA Ticket&lt;/STRONG&gt;&lt;BR /&gt;Sends alert to support or integration teams. In this blog I am not covering all Jira configurations, for more information on the this please go through &lt;SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/jira-adapter-for-sap-integration-suite/ba-p/13930290" target="_blank"&gt;Jira Adapter for SAP Integration Suite&lt;/A&gt;.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Jira Adapter Response&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_17-1756905005529.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308608iFB0E35DB71030102/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_17-1756905005529.png" alt="ShraddhaFatale_17-1756905005529.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Jira Ticket&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_18-1756905020546.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308609iA8766C3A7E87D5C6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_18-1756905020546.png" alt="ShraddhaFatale_18-1756905020546.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Escalation End&lt;/STRONG&gt;&lt;BR /&gt;Ends process after notification or after DMQ routing if alerts are disabled.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Integration Points&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Apache Kafka: &lt;/STRONG&gt;As the core message broker retry target and DMQ for message persistence.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;JIRA Adapter: &lt;/STRONG&gt;For failure escalation and ticket creation.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Split-in-iFlow Pattern: When Kafka Isn’t the Source&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In scenarios where the &lt;STRONG&gt;source adapter is not Kafka&lt;/STRONG&gt; (e.g., HTTP, IDoc, SFTP), you can still use the Retry Mechanism by applying a &lt;STRONG&gt;split-iFlow design&lt;/STRONG&gt;:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pattern Overview&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;IFlow&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;Role&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;iFlow 1: Sender Adapter → Kafka&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Ingest source data, sends to Kafka (Original Topic), sets required headers.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;iFlow 2: Kafka → Processing&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Handles mapping, transformation, and receiver logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Error Path&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;On failure, calls Retry Mechanism iFlow (via Process Direct).&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Retry Cycle&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="321"&gt;&lt;P&gt;&lt;SPAN&gt;Retry iFlow manages reprocessing or escalation based on logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This architecture maintains loose coupling, dynamic routing, and centralized error handling across varied protocols and business cases.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShraddhaFatale_16-1756904951566.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308601i2D3D2289E50B0857/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="ShraddhaFatale_16-1756904951566.png" alt="ShraddhaFatale_16-1756904951566.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why This Matters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Reduces custom retry logic across iFlows.&lt;/LI&gt;&lt;LI&gt;Centralizes failure handling and monitoring.&lt;/LI&gt;&lt;LI&gt;Makes Kafka-based processing more robust and recoverable.&lt;/LI&gt;&lt;LI&gt;Aligns with event-driven architecture best practices.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Retry Mechanism iFlow is a foundational building block for resilient Kafka integrations in SAP Cloud Integration. Whether you’re integrating external systems, APIs, or internal processes — having a centralized, configurable retry logic ensures smoother operations and reduces manual interventions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/cloud-integration-what-you-need-to-know-about-the-kafka-adapter/ba-p/13495070" target="_blank"&gt;&lt;STRONG&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/cloud-integration-what-you-need-to-know-about-the-kafka-adapter/ba-p/13495070&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/optimized-error-management-and-retry-strategy-with-kafka-on-sap-cloud/ba-p/13810790" target="_blank"&gt;&lt;STRONG&gt;https://community.sap.com/t5/technology-blog-posts-by-members/optimized-error-management-and-retry-strategy-with-kafka-on-sap-cloud/ba-p/13810790&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://medium.com/@lahirurajapakshe.stack/apache-kafka-retry-mechanism-documentation-4cf67f80d6f7" target="_blank" rel="noopener nofollow noreferrer"&gt;&lt;STRONG&gt;https://medium.com/@lahirurajapakshe.stack/apache-kafka-retry-mechanism-documentation-4cf67f80d6f7&lt;/STRONG&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-simplifying-error-handling-with-a-generic-retry-iflow/ba-p/14206093"/>
    <published>2025-09-04T07:00:32.070000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/new-learning-journey-integrating-sap-sales-cloud-and-sap-service-cloud/ba-p/14208710</id>
    <title>New Learning Journey Integrating SAP Sales Cloud and SAP Service Cloud Version 2 with SAP S/4HANA</title>
    <updated>2025-09-05T15:23:46.964000+02:00</updated>
    <author>
      <name>FernandoRedondo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/7571</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Hey SAP CX Community! It's Fernando here, checking in!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Over the past few years, we've been creating numerous educational resources focused on integration topics for SAP Sales and Service Cloud version 1.&amp;nbsp;&lt;/SPAN&gt; From this year on, o&lt;SPAN&gt;ur upcoming focus will be on version 2 extensibility and integration topics&lt;/SPAN&gt;.&amp;nbsp;&lt;SPAN&gt;Today, we are thrilled to announce in this blog post the next major learning milestone for those looking to master the integration of SAP Sales and Service Cloud version 2 with SAP S/4HANA.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Join me in welcoming our newest addition to the&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;A href="https://learning.sap.com/" target="_self" rel="noreferrer noopener"&gt;SAP's learning platform&lt;/A&gt;&lt;/SPAN&gt;:&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Map Path Icon" style="width: 97px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/239485i5BF549AB9D745C1E/image-dimensions/97x97?v=v2" width="97" height="97" role="button" title="FernandoRedondo_0-1742376626121.png" alt="FernandoRedondo_0-1742376626121.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;&lt;BR /&gt;New Learning Journey&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;A href="https://learning.sap.com/learning-journeys/integrating-sap-sales-cloud-and-sap-service-cloud-version-2-with-sap-s-4hana" target="_self" rel="noreferrer noopener"&gt;Integrating SAP Sales Cloud and SAP Service Cloud Version 2 with SAP S/4HANA&lt;/A&gt;&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you're an integration developer looking to prepare for integrating SAP Sales and Service Cloud version 2 with SAP S/4HANA using Cloud Integration, you've come to the right place. Here, you'll gain the practical knowledge needed to manage the entire end-to-end integration project.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We've structured our content to ensure that, after finishing this learning journey, integration developers, administrators, and consultants will have the skills to set up, configure, and implement the integration between SAP Sales and Service Cloud version 2 and SAP S/4HANA for master data replication.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Here's a sneak peek of how it appears:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="C4H48B Course Image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309952iC9659975F63607FC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="C4H48B Course Image.png" alt="C4H48B Course Image.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Au&lt;/STRONG&gt;&lt;STRONG&gt;dience&lt;BR /&gt;&lt;/STRONG&gt;The course is meant to be helpful for:&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;Integration Developers&lt;/LI&gt;&lt;LI&gt;Technical Consultants&lt;/LI&gt;&lt;LI&gt;Administrators&lt;/LI&gt;&lt;LI&gt;Architects&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Learning Objectives&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;After completing this learning journey, integration developers and technical consultants will gain an overview of the fundamental technical aspects, architecture, and scenarios for the integration between SAP Sales and Service Cloud Version 2, and SAP S/4HANA. You will be able to develop end-to-end integration between these systems based on identifying involved systems, exploring integration scenarios, preparing your system landscape, performing the master data replication procedure, and gaining skills on monitoring and troubleshooting techniques.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Learning Content&lt;BR /&gt;&lt;/STRONG&gt;The learning journey consists of 6 units and provides more than 8 hours of content:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Introducing the Integration of SAP Sales Cloud and SAP Service Cloud Version 2 with SAP S/4HANA&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This unit introduces SAP Sales and Service Cloud integration with SAP S/4HANA, covering SAP's integration strategy, involved systems, standard scenarios, and the course's scope.&lt;/SPAN&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Preparing Technical System Settings&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Covers the preparation of technical system settings for integrating SAP Sales and Service Cloud with SAP S/4HANA, including detailed system landscape exploration, communication settings, credential setup, integration package configuration, trust establishment, and Cloud Connector configuration.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Preparing Functional Dependencies in SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This unit focuses on preparing functional dependencies in SAP Sales and Service Cloud, including examining object dependencies, understanding external ID mapping and code list maintenance, and setting up code list integration using Incoterms as an example.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Setting Up and Running Product Replication from SAP S/4HANA to SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&lt;SPAN&gt;T&lt;/SPAN&gt;&lt;/SPAN&gt;eaches how to set up and run product replication from SAP S/4HANA to SAP Sales and Service Cloud, including configuring communication settings, integration flows, web services, and executing the replication process.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Setting Up and Running Business Partner Replication from SAP S/4HANA to SAP Sales Cloud and SAP Service Cloud Version 2&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;This unit covers setting up and running business partner replication from SAP S/4HANA to SAP Sales and Service Cloud, including configuring communication settings, integration flows, service groups, data replication framework, business partner confirmation, and executing the replication process.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;SPAN&gt;Monitoring Messages and Troubleshooting&lt;/SPAN&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;Last unit on monitoring messages and troubleshooting in the integration process between SAP S/4HANA and SAP Sales and Service Cloud, including identifying monitoring tools, analyzing common issues, and resolving them effectively.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;After completing successfully this Learning Journey you'll be granted with a digital badge like this one which could be shared and linked to your social networks:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="C4H48B Badge.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310006i9D9C71EC152B87BE/image-size/small/is-moderation-mode/true?v=v2&amp;amp;px=200" role="button" title="C4H48B Badge.png" alt="C4H48B Badge.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Give it a try! We plan to create more extensibility learning content for SAP Sales and Service Cloud version 2, and we'd appreciate your feedback on whether these lessons are useful for you or your team.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Additional&amp;nbsp;Resources&lt;BR /&gt;&lt;/STRONG&gt;&lt;SPAN&gt;There is a related live session for&amp;nbsp;. You can find more free learning journeys at the&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;, where you can build in-demand SAP skills for&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/products/customer-experience" target="_blank" rel="noopener noreferrer"&gt;variety of topics&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;specifically the SAP CX Solutions portfolio. If you are more in for quick video learning, then, look for our videos&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://learning.sap.com/videos?page=1&amp;amp;lsc_product_category=CRM+and+Customer+Experience&amp;amp;lsc_product=SAP+Integration+Suite&amp;amp;lsc_product=SAP+Extension+Suite&amp;amp;lsc_product=SAP+BTP%2C+Kyma+runtime" target="_blank" rel="noopener noreferrer"&gt;Integration and Extensibility videos for SAP Customer Experience&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;to get updates on the latest integration and extensibility videos for SAP Customer Experience solutions&lt;/SPAN&gt;&lt;EM&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;You can find a related live session on&lt;SPAN&gt;&lt;A href="https://learning.sap.com/live-sessions/starting-with-sap-integration-suite-for-customer-experience-" target="_self" rel="noreferrer noopener"&gt;Starting with SAP Integration Suite for Customer Experience&lt;/A&gt;&lt;/SPAN&gt;. For additional free learning journeys, visit the&amp;nbsp;&lt;A href="https://learning.sap.com/products/customer-experience/integration-and-extensibility" target="_blank" rel="noopener noreferrer"&gt;SAP Learning site for Integration and Extesibility&lt;/A&gt;&amp;nbsp;to build&amp;nbsp;&lt;SPAN&gt;in-demand&lt;/SPAN&gt; SAP skills on a variety of topics, for the SAP CX Solutions portfolio. If you enjoy quick video learning, explore our&amp;nbsp;&lt;A href="https://learning.sap.com/videos?page=1&amp;amp;lsc_product_category=CRM+and+Customer+Experience&amp;amp;lsc_product=SAP+Integration+Suite&amp;amp;lsc_product=SAP+Extension+Suite&amp;amp;lsc_product=SAP+BTP%2C+Kyma+runtime" target="_blank" rel="noopener noreferrer"&gt;Integration and Extensibility videos for SAP Customer Experience&lt;/A&gt; for the newest updates on integration and extensibility for SAP Customer Experience solutions.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/new-learning-journey-integrating-sap-sales-cloud-and-sap-service-cloud/ba-p/14208710"/>
    <published>2025-09-05T15:23:46.964000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/demystifying-the-oauth2-saml-bearer-assertion-usage-in-sap-integration/ba-p/14177915</id>
    <title>Demystifying the OAuth2 SAML Bearer Assertion usage in SAP Integration Suite</title>
    <updated>2025-09-08T05:34:05.936000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737037167"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;In the rapidly evolving landscape of enterprise integration, authentication and authorization are no longer mere checkpoints — they are the guardians of trust between systems. Within SAP Integration Suite, the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion &amp;amp; JWT Bearer grant types&lt;/STRONG&gt; stand out as a &lt;U&gt;powerful&lt;/U&gt; yet often &lt;U&gt;less-understood&lt;/U&gt; mechanisms for secure API access, especially in hybrid enterprise landscapes where &lt;U&gt;user identity&lt;/U&gt; is federated across multiple systems.&lt;/P&gt;&lt;P&gt;If you have ever stared at an &lt;U&gt;&lt;EM&gt;urn:ietf:params:oauth:grant-type:saml2-bearer&lt;/EM&gt;&lt;/U&gt;&amp;nbsp;or&amp;nbsp;&lt;U&gt;&lt;EM&gt;urn:ietf:params:oauth:grant-type:jwt-bearer&lt;/EM&gt;&lt;/U&gt; parameter as a supported grant type and wondered &lt;EM&gt;how this elegant string actually translates into a trusted access token&lt;/EM&gt;, you are not alone. Many integration developers and security practitioners have encountered it — often through trial, error, and a bit of documentation spelunking.&lt;/P&gt;&lt;P&gt;In this article, we’ll go beyond the surface. We’ll explore:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;What OAuth2.0 SAML Bearer Assertion is really doing under the hood&lt;/STRONG&gt; — and why it exists in the first place.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How this plays into SAP Integration Suite’s XSUAA and the broader BTP security model&lt;/STRONG&gt;, particularly in securing IFlows and APIs within SAP Integration Suite.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Practical configuration patterns and gotchas&lt;/STRONG&gt; that can save you hours of troubleshooting.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;A few examples&lt;/STRONG&gt;&amp;nbsp;of exchanging a signed SAML assertion for an OAuth access token, demystifying the process step by step.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540523662"&gt;&lt;STRONG&gt;2. When is the OAuth2.0 SAML Bearer Assertion relevant for an Integration Developer?&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Traditionally, most communication handled by &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; has been &lt;STRONG&gt;system-to-system&lt;/STRONG&gt;, where a technical client or application authenticates itself, and the &lt;STRONG&gt;user context&lt;/STRONG&gt; is irrelevant. In such scenarios, the &lt;STRONG&gt;Client Credentials&lt;/STRONG&gt; grant type has been sufficient, since all that mattered was verifying that the calling system was trusted.&lt;/P&gt;&lt;P&gt;But this picture is evolving. Today, &lt;STRONG&gt;IFlows and APIs are two sides of the same coin&lt;/STRONG&gt;: while IFlows orchestrate integration logic, APIs expose functionality that must often act on behalf of a specific user. Increasingly, organizations expect &lt;STRONG&gt;end-user identity and authorizations&lt;/STRONG&gt; established in one system (e.g., via a corporate IdP or another SAP application) to be &lt;STRONG&gt;seamlessly propagated into Cloud Integration&lt;/STRONG&gt; and carried forward all the way to the backend system.&lt;/P&gt;&lt;P&gt;This is exactly where the &lt;STRONG&gt;OAuth 2.0 SAML Bearer Assertion&lt;/STRONG&gt; grant type becomes relevant. It provides a standards-based mechanism to exchange a trusted user identity assertion for an access token in Cloud Integration. That access token can then be forwarded downstream, ensuring that the &lt;STRONG&gt;original user’s context&lt;/STRONG&gt; — along with their authorizations — is preserved across system boundaries.&lt;/P&gt;&lt;P&gt;For the integration developer, this means that Cloud Integration is no longer just a technical middleware layer. It becomes an active participant in &lt;STRONG&gt;identity propagation&lt;/STRONG&gt;, enabling end-to-end security models that align with enterprise zero-trust principles and modern API-driven architectures.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;To demonstrate the concepts required for achieving identity propagation, this article utilizes the SAP Cloud Connector, X.509 certificates, and backend configurations that I have already explained in detail in &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016?utm_source=chatgpt.com" target="_new"&gt;my earlier blog post on technical user propagation&lt;/A&gt;. While that post specifically focuses on &lt;STRONG&gt;technical user&lt;/STRONG&gt; propagation, the configuration steps are not very different for the &lt;STRONG&gt;user propagation&lt;/STRONG&gt; scenario described here. I therefore recommend that readers familiarize themselves with those concepts first, as they provide a solid foundation for this discussion.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;One of the scenarios in &lt;STRONG&gt;this&lt;/STRONG&gt; blog post will also refer back to the earlier article to highlight the applicability of the &lt;STRONG&gt;authorization code grant type&lt;/STRONG&gt; in Cloud Integration—particularly when authorizing users from a corporate IdP such as Entra ID, using &lt;STRONG&gt;OpenID Connect&lt;/STRONG&gt;–based federation in conjunction with &lt;STRONG&gt;SAP Cloud Identity Services (SAP IAS)&lt;/STRONG&gt;. For a broader perspective, I also suggest referring to &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108?utm_source=chatgpt.com" target="_self"&gt;my linked blog post&lt;/A&gt;, which explains single sign-on to SAP Cloud Integration runtime from an external application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Taken together, these resources provide a complete 360-degree view of securing and implementing user-linked flows in SAP Integration Suite.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-1344010157"&gt;&lt;STRONG&gt;3. Full support for OAuth2.0 SAML Bearer Assertion in Cloud Integration&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;It is important to emphasize that SAP Cloud Integration fully supports the OAuth2 SAML Bearer Assertion flow both at the '&lt;STRONG&gt;sender'&lt;/STRONG&gt;&amp;nbsp;and at the '&lt;STRONG&gt;receiver' side&lt;/STRONG&gt;.&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;On the &lt;STRONG&gt;inbound side&lt;/STRONG&gt;, Cloud Integration can authenticate and authorize incoming requests based on the &lt;STRONG&gt;user’s identity&lt;/STRONG&gt;, ensuring that calls made to IFlows are evaluated not just at the technical client level but also with the context of the end user. This enables developers to enforce fine-grained authorization rules and maintain auditability of user actions.&amp;nbsp;&lt;BR /&gt;The following simplified illustration shows how OAuth2 SAML and JWT Bearer grants act as the enablers that make this flow possible.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DIAGRAM 1.drawio.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307579iEC0BC1F28C5D7290/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="DIAGRAM 1.drawio.png" alt="DIAGRAM 1.drawio.png" /&gt;&lt;/span&gt;&lt;BR /&gt;You can specify these grant types while creating a service instance for the &lt;EM&gt;Process Integration Runtime.&lt;/EM&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/306947i83528CB7C87A87A6/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-29 at 9.01.40 PM.png" alt="Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Here's an example snippet to create a service instance with the SAMLBearer and JWTBearer grant types&lt;/span&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;On the &lt;STRONG&gt;outbound side&lt;/STRONG&gt;, Cloud Integration can establish an &lt;STRONG&gt;OAuth2 SAML Bearer Assertion&lt;/STRONG&gt; when calling downstream systems such as &lt;STRONG&gt;SAP SuccessFactors, SAP S/4HANA Cloud,&amp;nbsp; S/4HANA On-Premise&lt;/STRONG&gt; (wrapped under the familiar &lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt; pattern), etc.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DIAGRAM 2.drawio.png" style="width: 450px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307580iD6FA24559A181645/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="DIAGRAM 2.drawio.png" alt="DIAGRAM 2.drawio.png" /&gt;&lt;/span&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This capability is not new. Even in the days of &lt;STRONG&gt;Neo&lt;/STRONG&gt;, Cloud Integration has supported the &lt;STRONG&gt;OAuth2 SAML Bearer flow&lt;/STRONG&gt; for connecting to SAP SuccessFactors — both through technical credentials and via user-based assertions using an email identifier. The topic has been well covered in the community, including several blog posts authored by my colleague, Deepak Deshpande. (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-principal-propagation-with-successfactors-odata-v2/ba-p/13368194" target="_self"&gt;here&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-oauth2-saml-bearer-x-509-certificate-authentication/bc-p/13501610" target="_self"&gt;here&lt;/A&gt;)&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.36.51 PM.png" style="width: 386px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307572i9314CEF8EE52DBF2/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-01 at 4.36.51 PM.png" alt="Screenshot 2025-09-01 at 4.36.51 PM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Beyond this, any system within the BTP ecosystem that leverages the &lt;STRONG&gt;BTP Connectivity Service&lt;/STRONG&gt;—including &lt;STRONG&gt;S/4HANA Cloud&lt;/STRONG&gt;—can take part in the identity propagation chain. In the sections that follow, we will explore some of the possibilities this enables, such as &lt;STRONG&gt;chaining into another iFlow&lt;/STRONG&gt; (within the same or a different subaccount) or invoking a service exposed through &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/transitioning-to-odata-provisioning-capability-in-sap-integration-suite/transitioning-odata-provisioning-from-sap-btp-serverless-runtime-to-sap-integration-suite" target="_self" rel="noopener noreferrer"&gt;OData&lt;/A&gt; Provisioning&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.42.11 PM.png" style="width: 328px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307573i309866CD89F19087/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-01 at 4.42.11 PM.png" alt="Screenshot 2025-09-01 at 4.42.11 PM.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This dual capability positions Cloud Integration as a true enabler of &lt;STRONG&gt;end-to-end user identity propagation&lt;/STRONG&gt;, bridging the gap between modern identity-aware APIs and enterprise backend systems, while ensuring security models remain consistent across landscapes.&lt;/P&gt;&lt;H2 id="toc-hId-1147496652"&gt;&lt;STRONG&gt;4. Understanding the "&lt;EM&gt;SAML&lt;/EM&gt;" in OAuth2 SAML Bearer Assertion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The term OAuth2 SAML Bearer Assertion&amp;nbsp;(RFC:&amp;nbsp;&lt;A href="https://datatracker.ietf.org/doc/html/rfc7522" target="_blank" rel="noopener nofollow noreferrer"&gt;RFC 7522&lt;/A&gt;)&amp;nbsp;can often feel confusing at first glance, particularly with the placement of the word '&lt;STRONG&gt;SAML&lt;/STRONG&gt;'.&lt;/P&gt;&lt;P&gt;"&lt;EM&gt;Where is SAML in this picture?", &lt;/EM&gt;you may ask,&amp;nbsp; as practitioners know for a fact that SAP BTP is based on &lt;U&gt;OAuth2.0&lt;/U&gt; and &lt;U&gt;OIDC-based&lt;/U&gt; security standards. Let's unpack this.&lt;/P&gt;&lt;P&gt;Fundamentally, classical&lt;STRONG&gt; Identity Providers (IdP) &lt;/STRONG&gt;like Entra ID,&amp;nbsp;SAP IAS, or corporate ADFS are designed to issue signed &lt;EM&gt;assertions&lt;/EM&gt; asserting a user’s identity and attributes. These assertions are trusted pieces of information that downstream systems can use to authenticate a user without requiring them to re-enter credentials.&amp;nbsp; In addition, in an enterprise integration landscape, the Identity Provider role is &lt;U&gt;not limited&lt;/U&gt; to classical IdPs. Connectivity and middleware components themselves can also &lt;EM&gt;&lt;STRONG&gt;act as&amp;nbsp;&lt;/STRONG&gt;&lt;/EM&gt;an Identity Provider and trusted issuers of SAML assertions. The process of SAML to OAuth2 token exchange sequence is as follows :&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;The SAML assertion issued by the assumed Identity Provider acts as a '&lt;STRONG&gt;credential wrapper&lt;/STRONG&gt;' — it carries the authenticated user identity, roles, and authorizations.&lt;/LI&gt;&lt;LI&gt;The &lt;STRONG&gt;Authorization Server&lt;/STRONG&gt; (in BTP Integration Suite tenant,&amp;nbsp; i.e., &lt;STRONG&gt;XSUAA&lt;/STRONG&gt;) consumes this signed assertion and, if trusted and valid, exchanges it for an OAuth 2.0 access token, per the RFC spec (&lt;A href="https://datatracker.ietf.org/doc/html/rfc7522" target="_blank" rel="noopener nofollow noreferrer"&gt;RFC 7522&lt;/A&gt;).&lt;/LI&gt;&lt;LI&gt;This access token, representing the user identity, can then be presented to the target system, which, based on its security directive, can &lt;STRONG&gt;authenticate&lt;/STRONG&gt; and &lt;STRONG&gt;authorize&lt;/STRONG&gt; the identity from the token.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Let's look at a few notable examples where this process is at play:&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-roman"&gt;&lt;LI&gt;The classical approach to setting up a SAML trust between an &lt;STRONG&gt;Identity Provider&lt;/STRONG&gt; and a &lt;STRONG&gt;Service Provider&lt;/STRONG&gt; lends itself to setting up for the OAuth2 bearer exchange flow, particularly between Entra ID and SAP BTP, based on the '&lt;U&gt;&lt;EM&gt;on-behalf-of&lt;/EM&gt;&lt;/U&gt;' directive. Explained so elegantly in these two blog posts authored by &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/principal-propagation-in-a-multi-cloud-solution-between-microsoft-azure-and/ba-p/13479950" target="_self"&gt;Martin&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/principal-propagation-between-azure-ad-and-an-on-premise-sap-system-through/bc-p/13503735" target="_self"&gt;Niklas&lt;/A&gt;, respectively, applicable for services secured by the BTP XSUAA Service.&lt;BR /&gt;Note that this classical 'trust' setup also equally applies between, say, Entra ID and &lt;STRONG&gt;SAP NetWeaver&lt;/STRONG&gt; ABAP AS. Martin Pankraz and I demonstrated the setup in &lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/integrating-low-code-solutions-with-microsoft-using-sap-integration-suite/ba-p/13789298" target="_self"&gt;this&lt;/A&gt; blog post.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP BTP Connectivity Service&lt;/STRONG&gt; can generate signed SAML assertions when bridging secure connections to backend systems. For example, the BTP Destination type '&lt;STRONG&gt;OAuth2SAMLBearerAssertion&lt;/STRONG&gt;' leverages this principal. See example below:&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-01 at 4.46.21 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/307574i4B305C0237472715/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-01 at 4.46.21 PM.png" alt="Screenshot 2025-09-01 at 4.46.21 PM.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API Management's&lt;/STRONG&gt;&amp;nbsp;gateway acts as an identity provider that injects a user’s authenticated identity into a signed assertion to downstream services. Customers frequently use policy templates like &lt;A href="https://api.sap.com/policytemplate/SAPCloudFoundrySAML2OAuthFlow" target="_self" rel="noopener noreferrer"&gt;this&lt;/A&gt; one listed in the &lt;U&gt;API Business Accelerator Hub&lt;/U&gt;.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; itself uses the BTP Connectivity Services' principles by providing out-of-the-box Security Materials that support OAuth2 SAML Bearer exchange. We'll get to more of this bit in this very blog post.&amp;nbsp;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This means that within the BTP ecosystem, the ability to &lt;EM&gt;mint&lt;/EM&gt; a signed SAML assertion is not confined to a single component but distributed across the connectivity and security services that are orchestrating secure communication flows.&lt;/P&gt;&lt;P&gt;Put simply, the "&lt;STRONG&gt;SAML&lt;/STRONG&gt;"&amp;nbsp;in OAuth2 SAML Bearer Assertion is the &lt;STRONG&gt;trusted identity assertion format&lt;/STRONG&gt; that enables one system to confidently vouch for a user’s identity to another. When combined with OAuth 2.0, it bridges the gap between &lt;STRONG&gt;user-centric authentication (SAML)&lt;/STRONG&gt; and &lt;STRONG&gt;token-based authorization (OAuth)&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;On that note, you may have come across the &lt;STRONG&gt;OAuth2 JWT Bearer&lt;/STRONG&gt; grant type as well. Let’s weave that into our context.&lt;/P&gt;&lt;H2 id="toc-hId-950983147"&gt;&lt;STRONG&gt;5. The OAuth2 JWT Bearer grant type&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;While the OAuth2 SAML Bearer grant type leverages a SAML 2.0 assertion to obtain an access token, its close cousin — the &lt;STRONG&gt;OAuth2 JWT Bearer&lt;/STRONG&gt; grant type — follows a similar token exchange pattern but uses a &lt;STRONG&gt;signed JSON Web Token (JWT)&lt;/STRONG&gt; instead of SAML. In the context of SAP BTP XSUAA, the JWT Bearer flow is often chosen when the identity assertion is already in JWT format, such as when integrating with systems that natively issue JWTs (e.g., other BTP applications, certain identity providers, or trusted microservices).&lt;/P&gt;&lt;P&gt;However, for the purposes of this article, we will not be focusing on the JWT Bearer approach. The reason is that &lt;STRONG&gt;SAP Cloud Integration only partially supports it&lt;/STRONG&gt; — JWT Bearer can be used when authenticating inbound requests to an iFlow, but it is &lt;STRONG&gt;not available as a selectable option in the “Security Material”&lt;/STRONG&gt; when making outbound calls from Cloud Integration to a target system. As such, its utility is currently more limited in end-to-end integration scenarios compared to the SAML Bearer flow.&lt;/P&gt;&lt;H2 id="toc-hId-754469642"&gt;&lt;STRONG&gt;6. Configurations needed to achieve OAuth2 SAML Bearer exchange&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;Since we are on the topic of the role of &lt;STRONG&gt;Identity Providers&lt;/STRONG&gt; (&lt;EM&gt;actual&lt;/EM&gt; or &lt;EM&gt;assumed&lt;/EM&gt;) during an OAuth2 SAML Bearer handshake, let us weave in the role of the &lt;STRONG&gt;Trust Configuration&lt;/STRONG&gt; setting in the BTP Cockpit — a subject that is often less understood in the context of SAP Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;EM&gt;Why is this less understood?&lt;/EM&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;In BTP landscapes, the &lt;EM&gt;Trust Configuration&lt;/EM&gt; in the cockpit is primarily associated with &lt;STRONG&gt;browser-based BTP applications&lt;/STRONG&gt; that require coupling between an &lt;STRONG&gt;Identity Provider (IdP)&lt;/STRONG&gt; (such as SAP IAS or a corporate IdP) and the &lt;STRONG&gt;Service Provider (SP)&lt;/STRONG&gt; role of the application. This trust relationship governs how users log in interactively to applications and how their identities are federated.&lt;/P&gt;&lt;P&gt;This implies that at the &lt;STRONG&gt;design time (UI) level&lt;/STRONG&gt;, configuring the Trust relationship ensures that developers and administrators can access the Integration Suite tools via their corporate IDP.&lt;/P&gt;&lt;P&gt;However, customers often struggle to apply the same concept when it comes to the &lt;STRONG&gt;runtime&lt;/STRONG&gt; — where iFlows and APIs need to be authenticated and authorized via &lt;STRONG&gt;user identities&lt;/STRONG&gt;. This is precisely where dialing in the &lt;STRONG&gt;correct runtime configurations for OAuth2 SAML Bearer exchange&lt;/STRONG&gt; becomes critical.&lt;/P&gt;&lt;P&gt;To keep this practical, let’s break the discussion into multiple scenarios and examine the configurations required for each. Here is a table that captures the different scenarios covered in this blog post :&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 1&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&amp;nbsp;[INBOUND] Invoking an IFlow via BTP Destination / Connectivity Service&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 2 variant 1&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&lt;P&gt;Scenario 1 + [OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="17.02470461868958%"&gt;Scenario 2 variant 2&lt;/TD&gt;&lt;TD width="82.97529538131043%"&gt;&amp;nbsp;Authorization Code grant type&amp;nbsp; +&amp;nbsp;[OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId-816121575"&gt;6.1. Scenario 1: [INBOUND] Invoking an IFlow via a BTP Destination:&lt;/H4&gt;&lt;P&gt;There are use cases where a &lt;STRONG&gt;Fiori/UI5 application&lt;/STRONG&gt; deployed on BTP uses a destination to call an IFlow, ensuring the user’s identity (via OAuth2 SAML Bearer) is securely propagated into the integration layer. Similarly, &lt;STRONG&gt;SAP Build Process Automation&lt;/STRONG&gt; can leverage destinations in its Actions framework to trigger IFlows as part of an automated workflow, often requiring identity propagation so that downstream systems know which user initiated the process. Beyond these, other scenarios include &lt;STRONG&gt;SAP Work Zone&lt;/STRONG&gt; or &lt;STRONG&gt;SAP Launchpad&lt;/STRONG&gt; extensions invoking integration services, as well as custom applications running in the Cloud Foundry runtime consuming iFlows via destinations.&lt;/P&gt;&lt;P&gt;In practice, customers often face challenges in identifying the correct configurations to make this scenario work. Below is a detailed cluster of the configurations involved.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;OAuth token endpoint address:&lt;/STRONG&gt; Customers often assume the default '&lt;EM&gt;.../oauth/token&lt;/EM&gt;' endpoint applies universally, but this is not the case. OAuthSAMLBearer looks for the '.../&lt;EM&gt;oauth/token/alias/&lt;/EM&gt;' endpoint.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Exchange of trust between subaccounts&lt;/STRONG&gt; where the services reside.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Implicit trust within the same subaccount:&lt;/STRONG&gt; Even if both services are in the same subaccount, an implicit trust relationship must still be established. This small step can save hours of troubleshooting.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BTP Destination and Integration Flow&lt;/STRONG&gt; settings to support OAuth2 SAML Bearer handshake.&lt;/LI&gt;&lt;LI&gt;A quick walkthrough of the &lt;STRONG&gt;SAP Business Application Studio&lt;/STRONG&gt; template wizard building blocks, enabling an SAP Fiori application to validate everything completed so far.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;Here is a solution blueprint of what we will put together:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-4.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309417iB09768E7A05C5824/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-4.drawio.png" alt="iflow diagrams-Page-4.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s review these configurations step by step.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;1. &lt;STRONG&gt;OAuth token alias endpoint.&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;&lt;H4 id="toc-hId-619608070"&gt;Step No&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;H4 id="toc-hId-423094565"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;H4 id="toc-hId-226581060"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;1.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;Download the '&lt;STRONG&gt;SAML Metadata&lt;/STRONG&gt;' from the '&lt;STRONG&gt;Trust Configuration&lt;/STRONG&gt;' section of your BTP Cockpit&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.36.56 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308275i5AE7A4A3711E75A1/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.36.56 PM.png" alt="Screenshot 2025-09-02 at 6.36.56 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;2.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;Locate and copy the value of the '&lt;STRONG&gt;entityID&lt;/STRONG&gt;' element from the downloaded XML file&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.39.08 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308276i4FFF8592D4B0944B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.39.08 PM.png" alt="Screenshot 2025-09-02 at 6.39.08 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.595417114214108%"&gt;3.&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;P&gt;Locate and copy the '&lt;STRONG&gt;Location&lt;/STRONG&gt;' element. There are multiple attributes present; make sure you copy the one that contains the '&lt;U&gt;&lt;EM&gt;.../oauth/token/alias/...&lt;/EM&gt;&lt;/U&gt;' URL pattern.&lt;/P&gt;&lt;P&gt;This will be the token endpoint we will use in subsequent configuration screens.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="49.23021840315074%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 6.38.57 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308277i660CDC65954D97C8/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 6.38.57 PM.png" alt="Screenshot 2025-09-02 at 6.38.57 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;2. &amp;amp; 3.&amp;nbsp;&lt;STRONG&gt;Exchange of Trust between subaccount / Implicit trust within the same subaccount.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Follow the instructions in this BTP&amp;nbsp;&lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/user-propagation-between-cloud-foundry-applications" target="_blank" rel="noopener noreferrer"&gt;help guide&lt;/A&gt;: construct the &lt;EM&gt;EntityDescriptor&lt;/EM&gt; metadata exactly as specified and upload it as &lt;STRONG&gt;Trusted Metadata&lt;/STRONG&gt; in your target subaccount—namely, the subaccount hosting the Integration Suite.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;&lt;H4 id="toc-hId--467649540"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;&lt;H4 id="toc-hId--664163045"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;H4 id="toc-hId--860676550"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;1&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Identify your &lt;STRONG&gt;source&lt;/STRONG&gt; and &lt;STRONG&gt;target&lt;/STRONG&gt; subaccounts, and carefully construct the &lt;U&gt;&lt;EM&gt;EntityDescriptor&lt;/EM&gt;&lt;/U&gt; snippet using the settings provided in the &lt;EM&gt;User Propagation between Cloud Foundry Applications&lt;/EM&gt; guide.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Note:&lt;/STRONG&gt; As mentioned earlier, this step is required even if the source and target services reside within the same BTP subaccount. In such cases, the configuration establishes a &lt;STRONG&gt;self-trust&lt;/STRONG&gt; relationship.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.07.06 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308287iF754F3C69D008E4C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.07.06 PM.png" alt="Screenshot 2025-09-02 at 10.07.06 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;2.&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;Go to the &lt;STRONG&gt;Destination Trust&lt;/STRONG&gt; section in your BTP Cockpit of the source subaccount and import the &lt;STRONG&gt;Active Trust Certificate&lt;/STRONG&gt;. In addition, follow the recommended best practices to set up a &lt;U&gt;Passive Trust Certificate&lt;/U&gt; as well, ensuring a smooth switchover and preventing disruptions when the active certificate approaches expiry.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 8.47.32 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308280iC2E9C01380F70775/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 8.47.32 PM.png" alt="Screenshot 2025-09-02 at 8.47.32 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.917651271034732%"&gt;3.&lt;/TD&gt;&lt;TD width="41.38918725384891%"&gt;Here is a snapshot of the &lt;EM&gt;EntityDescriptor&lt;/EM&gt; file taken from my account configuration.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 9.52.14 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308281i05AADBAD5A5639CE/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 9.52.14 PM.png" alt="Screenshot 2025-09-02 at 9.52.14 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Upload the prepared file by clicking on the '&lt;STRONG&gt;New SAML Trust Configuration&lt;/STRONG&gt;' button in your target subaccount.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Disable the &lt;STRONG&gt;Available for User Logon&lt;/STRONG&gt; and &lt;STRONG&gt;Create Shadow User&lt;/STRONG&gt; options. Disabling the latter ensures that only pre-onboarded users are propagated, which is more secure than allowing all users to be automatically created and propagated.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 3.40.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308283iB785E7D1666F62BB/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 3.40.27 PM.png" alt="Screenshot 2025-09-02 at 3.40.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Because we disabled shadow user creation, go to the &lt;STRONG&gt;Users&lt;/STRONG&gt; section and explicitly &lt;STRONG&gt;create&lt;/STRONG&gt; the users that need to be propagated.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.00.34 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308285iFAD3B00705F35C11/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.00.34 PM.png" alt="Screenshot 2025-09-02 at 10.00.34 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;Once the user has been created, we still need to ensure that the necessary roles and scopes from the source token are available for propagation. There are two ways to achieve this. The simplest approach is to assign the newly created user to a &lt;STRONG&gt;Role Collection&lt;/STRONG&gt; that includes the &lt;STRONG&gt;MessagingSend&lt;/STRONG&gt; role.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 10.02.52 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308286iA296EAE7B3FCC306/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 10.02.52 PM.png" alt="Screenshot 2025-09-02 at 10.02.52 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;Rather than explicitly assigning individual users to a role collection, a more elegant approach is to map a &lt;STRONG&gt;group&lt;/STRONG&gt; from the identity provider to the desired role collection. This ensures that the corresponding scopes from the original token are automatically granted to the user principal in the target token as well.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 2.13.33 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308793i01FE56174ABF9DFD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 2.13.33 PM.png" alt="Screenshot 2025-09-03 at 2.13.33 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;4. &lt;STRONG&gt;BTP Destination and IFlow settings:&lt;/STRONG&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1057190055"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1253703560"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD&gt;&lt;H4 id="toc-hId--1450217065"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.59541711421411%"&gt;1.&lt;/TD&gt;&lt;TD width="42.248478338703904%"&gt;Create a &lt;EM&gt;service instance&lt;/EM&gt; of the Process Integration Runtime, selecting only the &lt;STRONG&gt;saml2-bearer&lt;/STRONG&gt; grant type. This configuration strengthens IFlow security by &lt;U&gt;preventing&lt;/U&gt; the use of other grant types (such as client credentials or password).&lt;/TD&gt;&lt;TD width="48.156104547081995%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 11.07.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308306i83FC90AF422C1069/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 11.07.27 PM.png" alt="Screenshot 2025-09-02 at 11.07.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.59541711421411%"&gt;2.&amp;nbsp;&lt;/TD&gt;&lt;TD width="42.248478338703904%"&gt;&lt;P&gt;Make sure to create a BTP Destination in the 'source' subaccount (i.e., the subaccount that hosts the client app). I've highlighted the key settings.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;U&gt;URL&lt;/U&gt; - The target IFlow's runtime host alias.&lt;BR /&gt;&lt;U&gt;Audience&lt;/U&gt; - the entityID captured in step 6.1.1.2.&lt;BR /&gt;&lt;U&gt;Token Service URL&lt;/U&gt; - the '&lt;EM&gt;/oauth/token/alias&lt;/EM&gt;' endpoint as explained above.&lt;BR /&gt;&lt;U&gt;includeAttributes&lt;/U&gt; = true. This is needed to support the Identity Provider group assignment demonstrated in step 6.1.2.7.&lt;BR /&gt;&lt;U&gt;nameIDFromat&lt;/U&gt; = 'urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress' to support the propagation of email address&lt;/P&gt;&lt;/TD&gt;&lt;TD width="48.156104547081995%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 2.49.43 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308796i378B3130FF2E7458/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 2.49.43 PM.png" alt="Screenshot 2025-09-03 at 2.49.43 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;To demonstrate an end-to-end flow, I’ve created an IFlow that uses an &lt;STRONG&gt;OData V2&lt;/STRONG&gt; adapter at both the Sender and Receiver. This approach was chosen because SAP Business Application Studio makes it straightforward to build a Fiori app that consumes an OData service.&lt;/P&gt;&lt;P&gt;This first variant of the receiver adapter connects to an S/4HANA On-premise backend using &lt;STRONG&gt;&lt;EM&gt;principal propagation&lt;/EM&gt;&lt;/STRONG&gt;. It demonstrates how an inbound OAuth2 SAML Bearer assertion grant type carries the full user context, which can then be propagated downstream.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 11.59.45 AM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308771i6343E452F0A8F074/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 11.59.45 AM.png" alt="Screenshot 2025-09-03 at 11.59.45 AM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;The second receiver adapter variant connects to an S/4HANA Cloud system using &lt;EM&gt;&lt;STRONG&gt;OAuth2 SAML Bearer&lt;/STRONG&gt;&lt;/EM&gt; security material. While we will cover this approach in the next scenario, the detailed configuration within the S/4HANA backend lies outside the scope of this blog post.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 12.01.41 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308772iE6AFD6D9B904270E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 12.01.41 PM.png" alt="Screenshot 2025-09-03 at 12.01.41 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;To test the settings, let’s shift focus to &lt;STRONG&gt;SAP Business Application Studio (BAS)&lt;/STRONG&gt; in the source subaccount, where we’ll build a small app that connects through the BTP Destination to the IFlow running in the target subaccount, using the OAuth2 SAML Bearer bridge. Note that we are using the BAS only as a means to simulate the &lt;STRONG&gt;user login&lt;/STRONG&gt; experience.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-03 at 1.15.40 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308797iB85B7CE9B836271D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-03 at 1.15.40 PM.png" alt="Screenshot 2025-09-03 at 1.15.40 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;If you encounter an error code 500 and notice no entries showing that the IFlow was invoked (for example, in the &lt;STRONG&gt;HTTP Access Log&lt;/STRONG&gt;), it most likely indicates that the token exchange failed. In this case, review the configuration steps carefully to ensure accuracy.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 3.21.08 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308309i20DF552A9ACB3138/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 3.21.08 PM.png" alt="Screenshot 2025-09-02 at 3.21.08 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;When all configurations are correctly set, the &lt;STRONG&gt;Next&lt;/STRONG&gt; button becomes enabled. This confirms that the system successfully retrieved the OData metadata by querying the backend through the configured destination type. In the Application Wizard template block’s Output console, you can see the call dispatched to the Integration Flow, which can also be verified in the Message Processing Logs (MPL)&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-02 at 4.09.32 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308310i15AEADDD1398B38E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-02 at 4.09.32 PM.png" alt="Screenshot 2025-09-02 at 4.09.32 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;8.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;While this successfully concludes our demonstration, feel free to complete the Wizard and run/deploy the generated application to see the end-to-end response light up.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;This completes one successful round-trip.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.35.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309454i37AC93F42AF02418/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.35.27 PM.png" alt="Screenshot 2025-09-04 at 12.35.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H4 id="toc-hId--1646730570"&gt;&amp;nbsp;&lt;/H4&gt;&lt;H4 id="toc-hId--1843244075"&gt;6.2. Scenario 2:&amp;nbsp; [OUTBOUND] Using Security Material to make an outbound OAuth2 SAML Bearer call&lt;/H4&gt;&lt;P&gt;As described in section &lt;U&gt;3.b.2&lt;/U&gt;, we will now focus on leveraging Cloud Integration’s capability to use the generic OAuth2 SAML Bearer security material, rather than the ones targeting SuccessFactors, as they are already well covered in the community.&lt;/P&gt;&lt;P&gt;One might ask: &lt;EM&gt;how do we set up an environment that makes it simple to simulate and test the user flow&lt;/EM&gt;? The good news is that Scenario 1 has already given us the &lt;STRONG&gt;user interaction&lt;/STRONG&gt; layer. All we need to do now is &lt;STRONG&gt;chain&lt;/STRONG&gt; the IFlow we created earlier with another one, letting the &lt;STRONG&gt;outbound of the first serve as the inbound&lt;/STRONG&gt; of the second. This allows us to validate the flow end-to-end in both directions.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a53ju9.jpg" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309423iC989A0F6078E14D1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="a53ju9.jpg" alt="a53ju9.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To keep the discourse engaging, we will explore yet another variant for testing the outbound OAuth2 SAML Bearer setup. Here, we’ll use Cloud Integration’s capability to trigger an &lt;STRONG&gt;Authorization Code&lt;/STRONG&gt; grant type exchange, simulating a real user login, and then build on that to invoke the OAuth2 SAML Bearer method.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.2.1. Scenario 2 - Variant 1:&lt;/STRONG&gt;&lt;BR /&gt;Here's the solution blueprint of the first variant, where we extend scenario 1 and &lt;EM&gt;chain&lt;/EM&gt; an intermediate IFlow with the main IFlow.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-5.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309471i90104E0050C12D36/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-5.drawio.png" alt="iflow diagrams-Page-5.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The sequence of events from the client to Business Application Studio follows the same pattern as in Scenario 1. The difference here is that instead of directly calling the &lt;STRONG&gt;main IFlow&lt;/STRONG&gt;,&amp;nbsp; we have intentionally introduced an &lt;STRONG&gt;intermediate IFlow&lt;/STRONG&gt; (step callout 1 in the blueprint above), which is configured with OAuth2 SAML Bearer security material to eventually connect with the &lt;STRONG&gt;&lt;EM&gt;main IFlow&lt;/EM&gt;&lt;/STRONG&gt;. Since the main IFlow accepts only the OAuth2 SAML grant type (step callout 2), this setup allows the connection to be seamlessly extended to the backend using Principal Propagation.&lt;/P&gt;&lt;P&gt;Regardless of whether the intermediate and main IFlows are in the same or separate subaccounts, a &lt;STRONG&gt;SAML trust&lt;/STRONG&gt; between the &lt;EM&gt;source&lt;/EM&gt; and &lt;EM&gt;target&lt;/EM&gt; is &lt;STRONG&gt;mandatory&lt;/STRONG&gt;, as highlighted in Procedure 2 of Scenario 1.&lt;/P&gt;&lt;P&gt;Let's take a look at the key configuration steps:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="58px"&gt;&lt;H4 id="toc-hId--2039757580"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="58px"&gt;&lt;H4 id="toc-hId-2058696211"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="58px"&gt;&lt;H4 id="toc-hId-2030366397"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="112px"&gt;1.&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="112px"&gt;Notice that&amp;nbsp; I've created a metadata called '&lt;STRONG&gt;self-trust&lt;/STRONG&gt;' with the &lt;EM&gt;entityDescriptor&lt;/EM&gt; for the subaccount. In my case, both the &lt;U&gt;intermediate&lt;/U&gt; and &lt;U&gt;main&lt;/U&gt; IFlow are on the same Integration Suite tenant, hence the '&lt;U&gt;self&lt;/U&gt;' trust.&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="112px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 6.58.17 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309495i274DFF721C10DD9A/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 6.58.17 PM.png" alt="Screenshot 2025-09-04 at 6.58.17 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.760394644115578%" height="112px"&gt;2.&lt;/TD&gt;&lt;TD width="42.84707540521494%" height="112px"&gt;Create a security material of type OAuth2 SAML Bearer. Set the target system type as '&lt;STRONG&gt;SAP BTP (CF)&lt;/STRONG&gt;'.&amp;nbsp; For the attributes, use the same settings as the ones we used in step 6.1.4.2 of the previous scenario.&amp;nbsp;&lt;/TD&gt;&lt;TD width="47.39252995066949%" height="112px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.52.25 PM.png" style="width: 359px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309497i4554E1FD554EB476/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.52.25 PM.png" alt="Screenshot 2025-09-04 at 12.52.25 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD height="57px"&gt;3.&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;You may notice that under the hood, this internally generates a &lt;STRONG&gt;BTP Destination&lt;/STRONG&gt; in the subaccount with &lt;STRONG&gt;OAuth2SAMLBearer&lt;/STRONG&gt;.&lt;/TD&gt;&lt;TD height="57px"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 6.55.26 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309498i8678CFD7DE33806D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 6.55.26 PM.png" alt="Screenshot 2025-09-04 at 6.55.26 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;Notice the change here on the IFlow we built in scenario 1 (step 3 of 6.1.4). Instead of directly calling the backend URL, we have turned this into an &lt;STRONG&gt;Intermediate&lt;/STRONG&gt; IFlow that chains into the final &lt;STRONG&gt;main&lt;/STRONG&gt; IFlow, with the authentication set to the &lt;STRONG&gt;OAuth2 SAML Bearer&lt;/STRONG&gt; security material created in step 2.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-05 at 4.54.30 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310242i141E3876406DA05F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-05 at 4.54.30 PM.png" alt="Screenshot 2025-09-05 at 4.54.30 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;As you can verify in the screenshot, the &lt;STRONG&gt;main&lt;/STRONG&gt; IFlow is the one that invokes the backend with &lt;STRONG&gt;principal propagation&lt;/STRONG&gt;.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 1.25.41 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309499i0A1845A6E3E43015/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 1.25.41 PM.png" alt="Screenshot 2025-09-04 at 1.25.41 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Let's go back to the app we built in scenario 1 and refresh the page. We should see the UI populate with the expected recordset after successfully negotiating the flows across the chained &lt;STRONG&gt;intermediate&lt;/STRONG&gt; and &lt;STRONG&gt;main&lt;/STRONG&gt; IFlows all the way to the backend.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 12.35.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309515i2DD9B00B2A38C1D0/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 12.35.27 PM.png" alt="Screenshot 2025-09-04 at 12.35.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;As a confirmation step, look up the activity in the message processing logs (MPL) section, and you will see that both the intermediate and final IFlows were executed and in the right sequence.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 1.22.58 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309516iCA386F666893BE4E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 1.22.58 PM.png" alt="Screenshot 2025-09-04 at 1.22.58 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;6.2.2. Scenario 2 - Variant 2:&amp;nbsp;&lt;BR /&gt;&lt;/STRONG&gt;Rather than using &lt;STRONG&gt;Business Application Studio&lt;/STRONG&gt; as the user-centric app to trigger the intermediate IFlow, we will instead leverage the &lt;STRONG&gt;&lt;EM&gt;Authorization Code&lt;/EM&gt; &lt;/STRONG&gt;grant type. From a technical perspective, the Authorization Code flow differs from the OAuth2 SAML Bearer grant; however, in principle, both achieve the same outcome:&lt;STRONG&gt; propagating a user session&lt;/STRONG&gt; within an OAuth access token.&lt;/P&gt;&lt;P&gt;This raises the question—&lt;EM&gt;how do we introduce the Authorization Code grant flow? &lt;/EM&gt;&lt;/P&gt;&lt;P&gt;Cloud Integration natively &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/deploying-oauth2-authorization-code" target="_self" rel="noopener noreferrer"&gt;supports&lt;/A&gt; the Authorization Code grant type as security material. While it was originally introduced to support adapters such as &lt;STRONG&gt;Dropbox&lt;/STRONG&gt; and &lt;STRONG&gt;Microsoft 365&lt;/STRONG&gt;, which rely on this flow, we can extend its utility further. By attaching this &lt;STRONG&gt;security material&lt;/STRONG&gt; to any outbound call through the &lt;STRONG&gt;HTTP Receiver adapter&lt;/STRONG&gt;—and applying a small amount of scripting (see step 6.2.2.3)—we can retrieve an access token from the authorization code using the &lt;STRONG&gt;SecureStoreService&lt;/STRONG&gt; &lt;A href="https://help.sap.com/doc/471310fc71c94c2d913884e2ff1b4039/Cloud/en-US/com/sap/it/api/securestore/SecureStoreService.html#getAccesTokenForOauth2AuthorizationCodeCredential-java.lang.String-" target="_self" rel="noopener noreferrer"&gt;API.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Here is a solution blueprint of what we aim to achieve:&lt;BR /&gt;For simplicity, a &lt;STRONG&gt;timer-based IFlow&lt;/STRONG&gt; will initiate an outbound call to the &lt;U&gt;intermediate&lt;/U&gt; IFlow, attaching an access token extracted from the security material (constructed via the &lt;STRONG&gt;authorization code&lt;/STRONG&gt; exchange)&amp;nbsp; that represents an authenticated user. This user may either be provisioned through the default Cloud Identity Service or authenticated via a corporate IdP such as Entra ID, as outlined in one of my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108" target="_self"&gt;earlier&lt;/A&gt; blog posts. The interaction sequence between the intermediate IFlow and the final IFlow remains unchanged.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflow diagrams-Page-3.drawio.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310626i1029D34621866527/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="iflow diagrams-Page-3.drawio.png" alt="iflow diagrams-Page-3.drawio.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.1 First, let's go over the configuration steps to establish the authorization code:&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="9.702828499820981%"&gt;&lt;H4 id="toc-hId-1833852892"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="43.1077694235589%"&gt;&lt;H4 id="toc-hId-1637339387"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="47.18940207662013%"&gt;&lt;H4 id="toc-hId-1440825882"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="9.702828499820981%"&gt;1.&lt;/TD&gt;&lt;TD width="43.1077694235589%"&gt;In your source subaccount, create a new &lt;STRONG&gt;&lt;EM&gt;OAuth2 Authorization Code&lt;/EM&gt;&lt;/STRONG&gt; security material. During setup, a &lt;STRONG&gt;&lt;EM&gt;Redirect URL&lt;/EM&gt;&lt;/STRONG&gt; will be generated—make sure to note this URL, as it will be required in the next step when configuring a service key with the Authorization Code grant type.&lt;/TD&gt;&lt;TD width="47.18940207662013%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 7.54.36 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309520iDFE949E38A72EB5E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 7.54.36 PM.png" alt="Screenshot 2025-09-04 at 7.54.36 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;2.&lt;/TD&gt;&lt;TD&gt;In the BTP Cockpit, when creating a new instance of the &lt;EM&gt;Process Integration Runtime&lt;/EM&gt; service, select both the &lt;STRONG&gt;&lt;EM&gt;Refresh Token&lt;/EM&gt;&lt;/STRONG&gt; and &lt;STRONG&gt;&lt;EM&gt;Authorization Code&lt;/EM&gt;&lt;/STRONG&gt; grant types. Then, paste the Redirect URL captured in Step 1 into the &lt;STRONG&gt;&lt;EM&gt;Redirect URI&lt;/EM&gt;&amp;nbsp;&lt;/STRONG&gt;field.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 7.59.30 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309521iA0C1C87927D67E1D/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 7.59.30 PM.png" alt="Screenshot 2025-09-04 at 7.59.30 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&lt;/TD&gt;&lt;TD&gt;After creating the service key, make sure to note the &lt;STRONG&gt;client credentials&lt;/STRONG&gt;, along with the &lt;STRONG&gt;authorization&lt;/STRONG&gt; and &lt;STRONG&gt;token&lt;/STRONG&gt; &lt;STRONG&gt;URL&lt;/STRONG&gt; endpoints, as these will be required in a later step.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.02.01 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309522i7EE278AD4A4F439B/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.02.01 PM.png" alt="Screenshot 2025-09-04 at 8.02.01 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Go back to the security material creation screen and enter the parameters copied from the previous step.&lt;/P&gt;&lt;P&gt;You may specify a user name for the user entity you want to create, but this value will be overridden by the actual user identity provided during browser logon step.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.03.52 PM.png" style="width: 322px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309523i2C49E65A39A30AAA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.03.52 PM.png" alt="Screenshot 2025-09-04 at 8.03.52 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;After the security material is created, click on the '&lt;STRONG&gt;Authorize&lt;/STRONG&gt;' button under the &lt;STRONG&gt;...&lt;/STRONG&gt; column. This will kick off the authorization code flow process in a new browser window. and will present the auth code to the specified redirect_uri.&amp;nbsp;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.06.02 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/309524i606256757B086D19/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.06.02 PM.png" alt="Screenshot 2025-09-04 at 8.06.02 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;You will be asked to authenticate yourself to an identity provider of your choosing, depending on the IDP settings as enabled in BTP's '&lt;STRONG&gt;Trust Configuration'&lt;/STRONG&gt;. Note that I'll be authenticating into SAP Identity Service, which in turn is configured to federate with multiple corporate IDPs via OIDC settings, as explained in my &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/single-sign-on-to-sap-cloud-integration-cpi-runtime-from-an-external/ba-p/13655108" target="_self"&gt;linked&lt;/A&gt; blog.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.09.18 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310702i15C3B8FC49B33A84/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.09.18 PM.png" alt="Screenshot 2025-09-04 at 8.09.18 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;7.&lt;/TD&gt;&lt;TD&gt;I'm being led into authenticating against Entra ID and my &lt;STRONG&gt;*.outlook.com&lt;/STRONG&gt; email is being propagated as the authenticated user context into Cloud Integration.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-04 at 8.10.34 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310703i375CAA177552E49E/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-04 at 8.10.34 PM.png" alt="Screenshot 2025-09-04 at 8.10.34 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;8.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;After successfully logging the user in, the browser redirects to the specified '&lt;STRONG&gt;redirect_uri'&lt;/STRONG&gt; with the negotiated '&lt;STRONG&gt;code&lt;/STRONG&gt;'.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;This completes our authentication process.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 4.32.20 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310704iCDA7B6A9FFE2ACC4/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-07 at 4.32.20 PM.png" alt="Screenshot 2025-09-07 at 4.32.20 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;6.2.2.2 Next step, let's review the time-triggered IFlow that kicks off the entire process. The first sequence in the flow is a 'timer' step. To keep things simple, it just triggers off upon deployment.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 4.59.43 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310707i0859AFEA787C1E7D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-07 at 4.59.43 PM.png" alt="Screenshot 2025-09-07 at 4.59.43 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.3. In the second step, we add a Groovy script that taps into the SecureStoreService API to read the &lt;EM&gt;Authorization Code&lt;/EM&gt; security material defined in the previous step. The script then exchanges the authorization code with the token endpoint to fetch a valid access token.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.securestore.SecureStoreService
import com.sap.it.api.ITApiFactory

def Message processData(Message message) {
    
    // Name of your OAuth2 Authorization Code credential (as defined in Security Material)
    def credentialName = "auth-code-demo"

    // Get an instance of SecureStoreService
    def secureStoreService = ITApiFactory.getApi(SecureStoreService.class, null)

    if (secureStoreService == null) {
        throw new IllegalStateException("SecureStoreService not available")
    }

    // Fetch the access token
    def tokenResponse = secureStoreService.getAccesTokenForOauth2AuthorizationCodeCredential(credentialName)

    if (tokenResponse == null) {
        throw new IllegalStateException("Failed to retrieve access token for credential: ${credentialName}")
    }

    // Extract access token string
    def accessToken = tokenResponse.getAccessToken()

    // Optional: log for debug (mask in production!)
    //messageLogFactory.getMessageLog(message).addAttachmentAsString("OAuth2 Access Token", accessToken, "text/plain")

    // Store token in message header for downstream adapters
    message.setHeader("Authorization", "Bearer " + accessToken)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;6.2.2.4 The third step in the sequence is to call the OData entity set through the &lt;EM&gt;intermediate&lt;/EM&gt; IFlow. Note that the authorization setting is explicitly configured as &lt;EM&gt;None&lt;/EM&gt;, since the bearer token is already applied in the preceding Groovy script step. Also, do note that the intermediate IFlow eventually calls the final IFlow, as we studied in step 4 of 6.2.1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-07 at 5.00.36 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310708i8E961EE95568703B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-07 at 5.00.36 PM.png" alt="Screenshot 2025-09-07 at 5.00.36 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6.2.2.5 The final step in the sequence is to log the response returned after the &lt;EM&gt;final&lt;/EM&gt; IFlow executes, which is handled by a simple Groovy script.&lt;/P&gt;&lt;P&gt;6.2.2.6. After triggering the process, you can verify the outcome in the Message Processing Logs (MPL). You should see an entry in the &lt;EM&gt;Completed&lt;/EM&gt; state, with the Attachments section containing a text representation of the backend response.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":trophy:"&gt;🏆&lt;/span&gt;Congratulations on reaching this stage!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-05 at 4.50.04 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310762i0E817501ECDD4AA1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-05 at 4.50.04 PM.png" alt="Screenshot 2025-09-05 at 4.50.04 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1831118391"&gt;Closing summary:&lt;/H2&gt;&lt;P&gt;In this blog, we explored how OAuth2 SAML Bearer assertion support in SAP Cloud Integration serves as a powerful mechanism for securing IFlows and APIs. By leveraging trust configurations, user propagation, and the integration of identity providers, we demonstrated how this grant type enables secure end-to-end flows while maintaining user context. Along the way, we also highlighted related patterns—such as the use of Authorization Code grant type in specific scenarios—and showed how these capabilities extend the flexibility of SAP Integration Suite when working with corporate identity providers and SAP Cloud Identity Services.&lt;/P&gt;&lt;P&gt;As integration landscapes continue to evolve, adopting OAuth2 SAML Bearer assertion not only strengthens security but also ensures compliance with modern identity federation standards. With the concepts and examples covered here, you now have a foundation to design flows that are both secure and user-aware—critical ingredients for enterprise-grade integrations.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/demystifying-the-oauth2-saml-bearer-assertion-usage-in-sap-integration/ba-p/14177915"/>
    <published>2025-09-08T05:34:05.936000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/aggregator-component-in-sap-cloud-integration-correlation-function/ba-p/14208959</id>
    <title>Aggregator component in SAP Cloud Integration - Correlation function</title>
    <updated>2025-09-08T09:30:00.075000+02:00</updated>
    <author>
      <name>jirifridrich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/146600</uri>
    </author>
    <content>&lt;P&gt;The &lt;STRONG&gt;Aggregator&lt;/STRONG&gt; component is a very powerful and versatile component, which can be used for many different things. Today we will focus on the &lt;STRONG&gt;Correlation&lt;/STRONG&gt; feature.&lt;/P&gt;&lt;P&gt;Working with data file interfaces, it is common that data arrives in a raw and flat format, often containing multiple records that belong logically together. In SAP Cloud Integration (CPI), the Aggregator step helps us collect and group these messages so that they can be processed as a single unit.&lt;/P&gt;&lt;P&gt;In this blog post, we will look at scenario where we receive General Ledger (GL) records that must be paired into Credit and Debit entries, based on a common GL ID. We’ll use the Correlation function of the Aggregator to achieve this grouping. The Aggregator may be overlooked as the first go-to option and we may be thinking about Groovy scripts or XSLT transformation, but Aggregator is the smoothest way to do this.&lt;/P&gt;&lt;H3 id="toc-hId-1888314309"&gt;The Input Data&lt;/H3&gt;&lt;P&gt;Our source system delivers data in a flat, delimited structure:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;US01|01 01 180000039|US01|0011040120|0011040120||01012025|01012025|01012025|D|USD|100.00|USD|100.00|||||||||||||||||||||||||||||||||||
US01|01 01 180000039|US01|0011040100|0011040100||01012025|01012025|01012025|C|USD|100.00|USD|100.00|||||||||||||||||||||||||||||||||||
US01|02 01 180000080|US01|0011040120|0011040120||02012025|02012025|02012025|D|USD|150.00|USD|150.00|||||||||||||||||||||||||||||||||||
US01|02 01 180000080|US01|0011040100|0011040100||02012025|02012025|02012025|C|USD|150.00|USD|150.00|||||||||||||||||||||||||||||||||||&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;These are four GL records, which actually form &lt;STRONG&gt;two logical pairs&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Debit &amp;amp; Credit for GL ID &lt;/SPAN&gt;&lt;EM&gt;01 01 180000039&lt;/EM&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Debit &amp;amp; Credit for GL ID &lt;/SPAN&gt;&lt;EM&gt;02 01 180000080&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The field at &lt;STRONG&gt;position 2&lt;/STRONG&gt;&amp;nbsp;is the GL Id and field at &lt;STRONG&gt;position&amp;nbsp;10&lt;/STRONG&gt; indicates whether it is Debit (D) or Credit (C).&lt;/P&gt;&lt;H3 id="toc-hId-1691800804"&gt;Converting Flat Data to XML&lt;/H3&gt;&lt;P&gt;Since the Aggregator works with XML, our first task is to transform the flat file into XML. This is done using CSV to XML Converter component.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_0-1757084139561.png" style="width: 337px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310033i1B563ADF70DB392C/image-dimensions/337x282/is-moderation-mode/true?v=v2" width="337" height="282" role="button" title="jirifridrich_0-1757084139561.png" alt="jirifridrich_0-1757084139561.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here we have to provide:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;XSD schema – to&amp;nbsp;define the structure of the incoming message.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="jirifridrich_1-1757084439858.png" style="width: 285px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310036i8DA8D3EEB27ECE97/image-dimensions/285x190/is-moderation-mode/true?v=v2" width="285" height="190" role="button" title="jirifridrich_1-1757084439858.png" alt="jirifridrich_1-1757084439858.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Path to target element - this is the path in xsd where the GL&amp;nbsp;record is actually stored&lt;/LI&gt;&lt;LI&gt;Field separator&amp;nbsp;- a pipe in our case&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;After the message passes this step, we get one XML with four records like this.&lt;BR /&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_2-1757084668477.png" style="width: 269px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310039iBEA17071A6C0B7A3/image-dimensions/269x209/is-moderation-mode/true?v=v2" width="269" height="209" role="button" title="jirifridrich_2-1757084668477.png" alt="jirifridrich_2-1757084668477.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now we have to split this single XML into separate messages using &lt;STRONG&gt;Splitter&lt;/STRONG&gt; to be able to use the Aggregator component, as it works with individual XMLs and performs the aggregation / correlation on them. We are splitting again on the&amp;nbsp;&lt;EM&gt;/root/item&lt;/EM&gt; xpath.&lt;BR /&gt;You can see the sequence on the screenshot above: Converter -&amp;gt; Splitter -&amp;gt; Aggregator.&lt;/P&gt;&lt;H3 id="toc-hId-1495287299"&gt;Grouping with the Aggregator&lt;/H3&gt;&lt;P&gt;Now comes the interesting part: &lt;STRONG&gt;Aggregator with Correlation&lt;/STRONG&gt;.&lt;BR /&gt;In the Aggregator step, we configure the &lt;STRONG&gt;Correlation Expression&lt;/STRONG&gt; to use the GL_Id field.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_3-1757084922612.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/310041i152C2028B551BF5F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="jirifridrich_3-1757084922612.png" alt="jirifridrich_3-1757084922612.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This ensures that &lt;STRONG&gt;all records sharing the same GL_Id are collected into a single group&lt;/STRONG&gt;. Once the group is complete (for example, after receiving both Debit and Credit), the Aggregator releases the combined message.&lt;/P&gt;&lt;P&gt;As a result, instead of four separate records, we get &lt;STRONG&gt;two XML documents&lt;/STRONG&gt; grouped on GL_Id value. In the terms of SAP, we got a paired GL posting record with Debit and Credit side.&lt;/P&gt;&lt;H3 id="toc-hId-1298773794"&gt;Mapping to S/4HANA&lt;/H3&gt;&lt;P&gt;Of course, SAP S/4HANA expects different field names and a slightly different XML structure for posting GL documents.&lt;BR /&gt;Here we typically use an &lt;STRONG&gt;XSLT mapping&lt;/STRONG&gt; or a &lt;STRONG&gt;Message Mapping&lt;/STRONG&gt; step to transform the aggregator’s output into the required S/4HANA format.&lt;BR /&gt;These steps are highly dependent on the target API (e.g. &lt;EM&gt;Journal Entry API&lt;/EM&gt;), but conceptually it’s just restructuring fields.&lt;/P&gt;&lt;H3 id="toc-hId-1102260289"&gt;End-to-End Flow&lt;/H3&gt;&lt;P&gt;Summarizing the integration steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Receive Flat File&lt;/STRONG&gt; (pipe-delimited records).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Convert to XML&lt;/STRONG&gt; using XSD + converter.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Split&lt;/STRONG&gt; per individual records&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Aggregate Records&lt;/STRONG&gt; by GL_Id with Correlation.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Transform to S/4HANA Format&lt;/STRONG&gt; via XSLT mapping.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Send to S/4HANA&lt;/STRONG&gt; using the standard OData/HTTPS adapter.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The Correlation feature of the Aggregator in SAP CPI is very helpful. It allows us to logically group related records—even if they arrive as separate messages—so that downstream systems like S/4HANA receive them as consistent and balanced documents.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/aggregator-component-in-sap-cloud-integration-correlation-function/ba-p/14208959"/>
    <published>2025-09-08T09:30:00.075000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-configure-email-alerts-for-cpi-failures-using-sap-btp/ba-p/14184727</id>
    <title>How to Configure Email Alerts for CPI Failures Using SAP BTP</title>
    <updated>2025-09-09T06:17:17.814000+02:00</updated>
    <author>
      <name>D_Simon</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1666556</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;SAP BTP Alert Notification&lt;/STRONG&gt; is a service that sends real-time alerts for system events and integration failures. It helps teams stay informed about critical issues without manual monitoring. This PPT covers how to create and configure alert notifications, integrate them with SAP CPI, and send automated error emails when integration flows fail.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt; – &lt;U&gt;Create Alert Notification Instance in SAP BTP&lt;BR /&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;1. Log in to your SAP BTP account.&lt;BR /&gt;2. Navigate to your Subaccount.&lt;BR /&gt;3. Go to Service Marketplace and search for "Alert Notification".&lt;BR /&gt;4. Click on the Alert Notification tile.&lt;BR /&gt;5. On the top-right corner, click Create.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_0-1755669625331.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302753i0ADE0C5C705E0E12/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_0-1755669625331.png" alt="D_Simon_0-1755669625331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. In the creation form:&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;a. Space is optional.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;b. Provide a meaningful Instance Name.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;c. Click Create.&lt;BR /&gt;7. Once created, go to Instances and Subscriptions.&lt;BR /&gt;8. Locate your Alert Notification instance and click the three dots on the right.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; 9. Select Create Service Key and save the key.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_1-1755669802480.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302756i4BBF8A7D499CC1CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_1-1755669802480.png" alt="D_Simon_1-1755669802480.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;once open the create service key hear we have mention one meaning full name&lt;BR /&gt;and configuration parameters in side just type this one input&lt;BR /&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;{"&lt;FONT color="#0000FF"&gt;type&lt;/FONT&gt;" : "BASIC"}&lt;/FONT&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_2-1755669980832.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302759i73813471DCFE3BA0/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_2-1755669980832.png" alt="D_Simon_2-1755669980832.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After creation you are got it this type of creation credentials&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_3-1755670032317.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302760iD37F4CB2AC1913ED/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_3-1755670032317.png" alt="D_Simon_3-1755670032317.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt; – &lt;U&gt;Create Email Action&lt;BR /&gt;&lt;/U&gt;&lt;/P&gt;&lt;P&gt;1. In the Alert Notification dashboard, click on Actions (top-Left).&lt;BR /&gt;2. Click Create, then select Email.&lt;BR /&gt;3. Click Next.&lt;BR /&gt;4. Provide:&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; a. A meaningful Name.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; b. A valid Email Address.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; c. Other fields are optional.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_4-1755670170058.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302761i1828D57637D39E73/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_4-1755670170058.png" alt="D_Simon_4-1755670170058.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Click &lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;BR /&gt;6. Check your email for a token message.&lt;BR /&gt;7. Copy the token and come to you Alert notification tab click on action and click on email click on &lt;STRONG&gt;confirm Action&lt;/STRONG&gt; button and&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;paste it into the &lt;STRONG&gt;Confirm Token&lt;/STRONG&gt; field.&lt;BR /&gt;8. If successful, you’ll see a green &lt;STRONG&gt;Enabled&lt;/STRONG&gt; status.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt; – &lt;U&gt;Create Store&lt;BR /&gt;&lt;/U&gt;1. Go to the Actions tab.&lt;BR /&gt;2. Click Create, then select Store.&lt;BR /&gt;3. Enter a meaningful Name.&lt;BR /&gt;4. Other fields are optional.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_5-1755670381989.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302763iA7844C76386E0BCD/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_5-1755670381989.png" alt="D_Simon_5-1755670381989.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Click Create.&lt;BR /&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt; –&lt;U&gt; Create Condition&lt;BR /&gt;&lt;/U&gt;1. In the Alert Notification dashboard, go to &lt;STRONG&gt;Conditions&lt;/STRONG&gt;. &lt;U&gt;&lt;BR /&gt;&lt;/U&gt;2. Click &lt;STRONG&gt;Create&lt;/STRONG&gt;. &lt;U&gt;&lt;BR /&gt;&lt;/U&gt;3. In the &lt;STRONG&gt;Condition&lt;/STRONG&gt; field: &lt;U&gt;&lt;BR /&gt;&lt;/U&gt;&amp;nbsp; &amp;nbsp; a. Choose &lt;STRONG&gt;Category&lt;/STRONG&gt;. &lt;U&gt;&lt;BR /&gt;&lt;/U&gt;&amp;nbsp; &amp;nbsp; b. Set operator to &lt;STRONG&gt;Is Equal To.&lt;/STRONG&gt; &lt;U&gt;&lt;BR /&gt;&lt;/U&gt;&amp;nbsp; &amp;nbsp; c. Set value to &lt;STRONG&gt;NOTIFICATION&lt;/STRONG&gt;.&lt;BR /&gt;4. Other fields are optional.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_6-1755670584605.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302764i65F2DA8C6ABBB898/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_6-1755670584605.png" alt="D_Simon_6-1755670584605.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Click &lt;STRONG&gt;Create&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5&lt;/STRONG&gt; – &lt;U&gt;Create Subscription and Send Test Event&lt;BR /&gt;&lt;/U&gt;1. Go to the Subscriptions tab.&lt;BR /&gt;2. Click Create.&lt;BR /&gt;3. Provide a meaningful Name.&lt;BR /&gt;4. In the Select Conditions tab:&lt;BR /&gt;a. Enable all checkboxes for previously created actions and conditions.&lt;BR /&gt;5. Click Create.&lt;BR /&gt;6. To test, click Send Test Event and paste the following JSON:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;{
"eventType": "MyDemoEventType",
"resource": {
"resourceName": "DemoApp",
"resourceType": "app"
},
"severity": "INFO",
"category": "NOTIFICATION",
"subject": "My Demo Notification",
"body": "Sample event body."                                                                                                                                                                                                     } &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;BR /&gt;7. Click Send and check your email for the notification.&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;FONT color="#FF0000"&gt;&lt;U&gt;&lt;STRONG&gt;Configure SAP Cloud Platform Integration&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/U&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;Before you start with this section, you should have:&lt;BR /&gt;&lt;/STRONG&gt;1. Credentials name for a user that has permissions in the CPI tenant. The default value is CPI_USER.&lt;BR /&gt;2. Service Technical Client Name: Credentials name for the technical client created in SAP Cloud Platform Alert Notification.&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;Supported types are Basic Authentication or OAuth2 Client Credentials flow. The default value is SERVICE_TECHNICAL_CLIENT.&lt;BR /&gt;&amp;nbsp;It should hold the basic or OAuth credentials that we have configured in the previous section.&lt;BR /&gt;Once you have done this, follow the steps below:&lt;BR /&gt;&lt;STRONG&gt;STEP :-1&lt;BR /&gt;&lt;/STRONG&gt;Go to the Discover section in SAP Cloud Platform integration and search for SAP Cloud&amp;nbsp;Platform Alert Notification. hear we are got is one Standed structure like flow blow&amp;nbsp;Screen shoot.&amp;nbsp;&lt;BR /&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_7-1755671481015.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302767iAE6586B322402558/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_7-1755671481015.png" alt="D_Simon_7-1755671481015.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;in discover tab once you are identifies this one copy it ,than after go to Design tab click on that particular artifact. Click on the Integration Flow it should look like this.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_8-1755671557484.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302768i0BF8F5A1DE556156/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_8-1755671557484.png" alt="D_Simon_8-1755671557484.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Click on the Configure button. On the first screen, set a timer to point how often do you want it to run. The default is 5 minutes. look like below image&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_9-1755671656258.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302770iA315F04AE668A8A2/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_9-1755671656258.png" alt="D_Simon_9-1755671656258.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;than after click on Receiver tab below look like this&amp;nbsp;&lt;STRONG&gt;.&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_10-1755671860474.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302772i581198E46EF56609/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_10-1755671860474.png" alt="D_Simon_10-1755671860474.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;we have to fill it hear CI Tenant Base URL , Authentication, Credential Name. this all our CPI credentials Go to BTP hear we are to create service keys You can use the default instance’s key (default_it-rt_api) if available, or create a new service key of type API (not&lt;BR /&gt;integration-flow!) and assign the Monitoring Read role. Save the details from the JSON, you will need them later. see look like under&amp;nbsp;&lt;STRONG&gt;,&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_11-1755671980883.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302775i2D8AB6A2B8D03502/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_11-1755671980883.png" alt="D_Simon_11-1755671980883.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT color="#FF6600"&gt;&lt;STRONG&gt;CI Tenant Base URL&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt;:- Go to BTP click on API credentials copy hear URL and paste it hear .&lt;/P&gt;&lt;P&gt;&lt;U&gt;&lt;FONT color="#FF6600"&gt;&lt;STRONG&gt;Authentiction&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/U&gt; :- hear go to your Security Material hear you have Create OAuth2 Client&amp;nbsp;Credentials go to BTP before what ever you are create API that credentials COPY it&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_12-1755672333860.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302776iAAE869E8177ED74D/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_12-1755672333860.png" alt="D_Simon_12-1755672333860.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Hear copy token url paste it hear , copy that client id, and client secret just paste it hear and one meaning full name you can put it hear my meaning full name i was put it hear CI_USER .&lt;/P&gt;&lt;P&gt;Than after go to &lt;FONT color="#FF6600"&gt;More&lt;/FONT&gt; Tab ,look like this &lt;STRONG&gt;below&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_13-1755672464410.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302778i3B8FEEB3C2F0E277/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_13-1755672464410.png" alt="D_Simon_13-1755672464410.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ci Tenant Base Url automatically fetch it hear . Create another Security Artifact for the connection to the ANS(Alert notification service). This is Basic authentication, so the type is User Credentials. Go to BTP inside ANS home page you can open it click on it service key,&lt;BR /&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt; service key what ever you are created . Come to integration suite go to monitor click&amp;nbsp; on Security Material click on user&lt;BR /&gt;credentials mention that user name and password look like below .&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_14-1755672638543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302780iE673BDB7A9D86493/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_14-1755672638543.png" alt="D_Simon_14-1755672638543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;what ever you are created hear Name that name mention in MORE tab service technical client&lt;BR /&gt;name.&lt;BR /&gt;And &lt;FONT color="#FF6600"&gt;SERVICE RESOURCE EVEVT URL IS&lt;/FONT&gt; :- The resource event base URL you can copy&lt;BR /&gt;from the service key on the ANS(Alert notification service ) instance:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_15-1755673113685.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302787i3273E88FBDABB5FF/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_15-1755673113685.png" alt="D_Simon_15-1755673113685.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You then have to add the following path to the URL (that you've copied from the&lt;BR /&gt;service key above):&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="D_Simon_16-1755673168005.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302789i7BD2265C2559B703/image-size/large?v=v2&amp;amp;px=999" role="button" title="D_Simon_16-1755673168005.png" alt="D_Simon_16-1755673168005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;look like above .&lt;/P&gt;&lt;P&gt;Finally Click on the Deploy button. Once the integration flow is deployed, and some integration flow in your tenant fails, you will receive an email with similar content.&lt;/P&gt;&lt;P&gt;Refernce purpose follow below links :-&lt;/P&gt;&lt;P data-unlink="true"&gt;1.&amp;nbsp;Getting Started with SAP Alert Notification Service for SAP BTP | SAP Tutorials&amp;nbsp;&lt;BR /&gt;2.&amp;nbsp;Connect SAP Platform Integration with Alert Notifi... - SAP Community&amp;nbsp;&lt;BR /&gt;&lt;BR /&gt;&lt;EM&gt;I hope this blog helps you in configuring SAP BTP Alert Notification with SAP CPI. Please share your thoughts or questions in the comments.&lt;/EM&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/application-development-and-automation-blog-posts/how-to-configure-email-alerts-for-cpi-failures-using-sap-btp/ba-p/14184727"/>
    <published>2025-09-09T06:17:17.814000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/completing-the-b2b-migration-into-sap-integration-suite-vision/ba-p/14211567</id>
    <title>Completing the B2B migration into SAP Integration Suite vision</title>
    <updated>2025-09-09T09:40:32.196000+02:00</updated>
    <author>
      <name>DG</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3313</uri>
    </author>
    <content>&lt;P class=""&gt;&lt;SPAN&gt;The last part to be migrated is the B2B integrations you have like EDIFACT, X12 or what formats you are using. The official guidance is to use MIG and MAGs to handle the migration. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;It is not really ideal because it will require a large investment in recreation of all your partner mappings. There can be cases where it make sense and a good way to streamline your B2B setup. Many of your partner mappings have probably not been touched for years. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;SAP has also published a version of a &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/reusing-sap-pi-po-b2b-mapping-content-in-cloud-integration-trading-partner/ba-p/14147241" target="_self"&gt;way to handle the migration&lt;/A&gt;s. That will allow you to reuse the mappings. Do give it a try to see how it will work for you. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;I published something about our vision for the migration &lt;/SPAN&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/b2b-migration-from-sap-pi-po-to-integration-suite-a-vision/ba-p/13576366" target="_blank"&gt;&lt;SPAN&gt;2 years ago&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN&gt; about how I saw that you could migrate to it.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;We have now completed this journey about making it possible to perform the migration in an end to end flow. I would say it is much more complete than I had expected. It now feels like a smooth process with tooling that supports you all the way. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;We wanted to create a tool that extended the standard usage of SAP TPM, but removed some of the biggest challenges that exists when working with it. &lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1630860040"&gt;&lt;SPAN&gt;Can the migration work&lt;/SPAN&gt;&lt;/H1&gt;&lt;P class=""&gt;&lt;SPAN&gt;We and one of our partners have been able to work with the initial version of the migration. It has been possible to retrain the message mapping and perform small changes in the used Java, UDF, XSLT to make it work. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;We created a simple iflow with Process Direct and then the mappings that had been migrated with Figaf. We also added a XML formatter that translated between SAP PI B2B format and the MIG format. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Our customer said that the message mappings were not causing any problems. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;But the strategy work and you can run your migration this way. &lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1434346535"&gt;&lt;SPAN&gt;End to end Flow&lt;/SPAN&gt;&lt;/H1&gt;&lt;P class=""&gt;Here is an example of how this works end-to-end and shows you that the migration is possible.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;div class="video-embed-center video-embed"&gt;&lt;iframe class="embedly-embed" src="https://cdn.embedly.com/widgets/media.html?src=https%3A%2F%2Fwww.youtube.com%2Fembed%2F858Zh9sZo88%3Ffeature%3Doembed&amp;amp;display_name=YouTube&amp;amp;url=https%3A%2F%2Fwww.youtube.com%2Fwatch%3Fv%3D858Zh9sZo88&amp;amp;image=https%3A%2F%2Fi.ytimg.com%2Fvi%2F858Zh9sZo88%2Fhqdefault.jpg&amp;amp;type=text%2Fhtml&amp;amp;schema=youtube" width="200" height="112" scrolling="no" title="B2B PI to CPI Migration procedure Quick Operation Mapping migration example end to end" frameborder="0" allow="autoplay; fullscreen; encrypted-media; picture-in-picture;" allowfullscreen="true"&gt;&lt;/iframe&gt;&lt;/div&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1237833030"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Steps in the migration&lt;/SPAN&gt;&lt;/H1&gt;&lt;H2 id="toc-hId-1170402244"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Test data recording from SAP PI&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN&gt;Before you can migrate your integration, you must have some test cases. Here we can record messages from SAP PI and filter one the content to find the message for the correct partners. This is something we have had for a long time.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-973888739"&gt;&lt;SPAN&gt;Partner creation&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN&gt;We have added a streamlined way to create partners. Currently you need to fill in a lot of different values and if you will need to create a partner. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Then you get partners created in a standard and consisted way with identifies and connected system. This will make the transport process easier. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;There are still going to be some manual changes that you will need to fill for the adapters but this should simplify your operation.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-777375234"&gt;&lt;SPAN&gt;Migration overview&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN&gt;We have built a specific overview of how your migration is going. This is going to make it easier to see what you have migrated and what still is missing. You can see what is migrated to what agreements.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-09-09 093230.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311419i19561C6B5FF612FA/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-09-09 093230.png" alt="Screenshot 2025-09-09 093230.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-580861729"&gt;&lt;SPAN&gt;Operation mapping migration&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN&gt;We have decided to migrate from Operation Mapping and then convert it to Process Direct flow. Here you can use Figaf functions for converting UDF to groovy, or use the Cloud Integration Function Libraries. We recommend that you migrate the TPM lookup to Groovy because then you can easy get to find and replace the functions that you need. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;To create the agreement you need to select&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN&gt;Self&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN&gt;Partner&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN&gt;Agreement template (yes you need to create them with MAGs, to easily find MIGs used)&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P class=""&gt;&lt;SPAN&gt;Then you from the dropdown can fill in the information used in the Agreement&lt;/SPAN&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;&lt;SPAN&gt;Once everything is filled in correctly you just click migrate which will create all the objects needed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-09-09 093344.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311420i0E04CA9C10E585B0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-09-09 093344.png" alt="Screenshot 2025-09-09 093344.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;We do support the use of generic mappings, if you want to use the target iflows consistently.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-384348224"&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Testing&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN&gt;Once you have deployed the flow and the agreement, you can migrate the test. Then the test case can run on the TPM flows.&lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;Then you will need to perform the corrections to ensure it produces the correct result. &lt;/SPAN&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;The cool part about this is that you can keep the test cases and use them when something change either to the Integration Suite, or you need to change something else as a part of the maintenance of your partners. &lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-187834719"&gt;&lt;SPAN&gt;Road map&lt;/SPAN&gt;&lt;/H2&gt;&lt;P class=""&gt;&lt;SPAN&gt;We are currently working on a way that allows you to transport the Agreements as we do for all the other objects. This will make it much easier to have one way to manage all integrations. &lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId--137761505"&gt;&lt;SPAN&gt;Learn more&lt;/SPAN&gt;&lt;/H1&gt;&lt;P class=""&gt;You can explore this with our &lt;A href="https://figaf.com/figaf-migration-edition/" target="_self" rel="nofollow noopener noreferrer"&gt;free migration edition&lt;/A&gt;, which will allow you to migrate 10 Operations mappings and test them.&lt;/P&gt;&lt;P class=""&gt;&lt;SPAN&gt;There are several prerequisite steps that you need to follow to create a solid foundation. You can see the steps here. You can &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/guide-for-migrating-pi-po-b2b-mappings-to-integration-suite-b2b-tpm/ba-p/14186491" target="_self"&gt;see this guide&lt;/A&gt;. &lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/completing-the-b2b-migration-into-sap-integration-suite-vision/ba-p/14211567"/>
    <published>2025-09-09T09:40:32.196000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/seamless-integration-of-google-cloud-bigquery-with-sap-analytics-cloud-sac/ba-p/14190989</id>
    <title>Seamless Integration of Google Cloud BigQuery with SAP Analytics Cloud (SAC): Step-by-Step Guide</title>
    <updated>2025-09-09T11:58:23.601000+02:00</updated>
    <author>
      <name>pratyushg13</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126076</uri>
    </author>
    <content>&lt;P&gt;On a recent project, I integrated &lt;STRONG&gt;Google Cloud BigQuery&lt;/STRONG&gt; with &lt;STRONG&gt;SAP Analytics Cloud (SAC)&lt;/STRONG&gt;. After exploring both platforms, I’ve put together a simple, step-by-step guide—plus a few key features—to help you connect them quickly. BigQuery handles huge datasets with speed, while SAC turns that data into clear reports, dashboards, and plans. Together, they take you from raw numbers to smarter decisions.&lt;/P&gt;&lt;P&gt;In this blog, I’ll show you exactly how to set up the integration—from creating a table in BigQuery to keeping your SAC model updated and refreshed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ChatGPT Image Aug 25, 2025, 03_09_13 PM.PNG" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304505iB16D0016B7017DA7/image-size/large?v=v2&amp;amp;px=999" role="button" title="ChatGPT Image Aug 25, 2025, 03_09_13 PM.PNG" alt="ChatGPT Image Aug 25, 2025, 03_09_13 PM.PNG" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Key Benefits of BigQuery–SAC Integration&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Seamless Cloud-to-Cloud Integration – No complex middleware; connect directly between GCP and SAC.&lt;/LI&gt;&lt;LI&gt;Analytics Made Simple: SAC lets you turn data into dashboards, forecasts, and actionable insights.&lt;/LI&gt;&lt;LI&gt;Faster Decision-Making – SAC visualizations update as soon as data refreshes, giving near real-time insights.&lt;/LI&gt;&lt;LI&gt;Collaboration Made Easy – SAC allows teams across finance, operations, and strategy to work with the same live data.&lt;/LI&gt;&lt;LI&gt;Automation – Schedule regular refreshes so your dashboards and reports stay up to date automatically.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before we dive in, you’ll need:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;A Google Cloud project with BigQuery enabled.&lt;/LI&gt;&lt;LI&gt;Access to an SAP Analytics Cloud tenant with permissions to create models and connections.&lt;/LI&gt;&lt;LI&gt;A BigQuery dataset and an SAC model that share the same schema. (The column data types in BigQuery must match the dimensions and measures in your SAC model.)&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1867758612"&gt;Step 1: Create a Table in Google BigQuery&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Open GCP Console and navigate to BigQuery Studio.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Create a Dataset within your GCP project.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Within the dataset, create a Table and define its schema. Ensure the schema aligns with the structure of your SAC model (synchronized dimensions and measures).&amp;nbsp;Since I created a table with multiple data types, you can see its schema in the image below.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture1.png" style="width: 903px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304529i8A369AF8C5E067A5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture1.png" alt="Picture1.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;SPAN&gt;Populate the table with data if it’s empty. You can do this via:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Python Notebook in GCP .&lt;/LI&gt;&lt;LI&gt;Manual uploads (CSV/JSON).&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;SPAN&gt;Example workflow to load data into a BigQuery table (if it has no existing data): Navigate to 'Notebooks'&amp;nbsp;within your GCP project, open a new notebook, load the data using Python, and then verify that the table is populated with the required test or business data.&amp;nbsp;For this example, I loaded some test data into the table using Python code in a notebook.&lt;/SPAN&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture2.png" style="width: 903px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304530i5965FA254A127B55/image-size/large?v=v2&amp;amp;px=999" role="button" title="Picture2.png" alt="Picture2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1671245107"&gt;Step 2: Prepare the Model in SAP Analytics Cloud (SAC)&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;Log in to SAP Analytics Cloud.&lt;/LI&gt;&lt;LI&gt;Navigate to Modeler and create a Blank Model.&lt;/LI&gt;&lt;LI&gt;Ensure the model structure (dimensions and measures) matches the BigQuery table schema.The image below shows the measures and dimensions, with data types matching those in the BigQuery table.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture3.png" style="width: 626px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308498i3F32CD7FF4CB46BD/image-dimensions/626x310/is-moderation-mode/true?v=v2" width="626" height="310" role="button" title="Picture3.png" alt="Picture3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1474731602"&gt;Step 3: Create a Connection Between SAC and BigQuery&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;In SAC, go to Main Menu &amp;gt; Connections.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Click on Add Connection (+).&lt;/LI&gt;&lt;LI&gt;Choose Google BigQuery.&lt;/LI&gt;&lt;LI&gt;Sign in using the same Google account linked to your GCP project.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Once authenticated, select the relevant Project from the dropdown.&lt;BR /&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Save the connection. You’ve now linked SAC with your BigQuery environment.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture5.png" style="width: 328px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/308503i37C1CB1D380521C1/image-dimensions/328x304/is-moderation-mode/true?v=v2" width="328" height="304" role="button" title="Picture5.png" alt="Picture5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1278218097"&gt;Step 4: Import Data from BigQuery into SAC&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your SAC model and open Data Management.&lt;/LI&gt;&lt;LI&gt;Select Import Job.&lt;/LI&gt;&lt;LI&gt;Choose Google BigQuery as the data source.&lt;/LI&gt;&lt;LI&gt;Select the connection you created earlier.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture6.png" style="width: 355px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305177iB46AC5796EF6D90B/image-dimensions/355x273?v=v2" width="355" height="273" role="button" title="Picture6.png" alt="Picture6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; 5.&amp;nbsp;Choose between:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Freehand SQL Query (for custom queries).&lt;/LI&gt;&lt;LI&gt;Build a Query (drag-and-drop interface) (For most use cases, Build a Query works best: - Select your dataset and table. - Add all required dimensions and measures. - Finalize your query). Here, I chose the Build a Query option, as shown in the image below.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture7.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305171i6C05A5056327EDF9/image-dimensions/565x353?v=v2" width="565" height="353" role="button" title="Picture7.png" alt="Picture7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;6.&amp;nbsp; Configure the import job by:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Preparing the data.&lt;/LI&gt;&lt;LI&gt;Mapping dimensions to facts&lt;/LI&gt;&lt;LI&gt;Reviewing and confirming the import steps.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture8.png" style="width: 581px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305172i224BF5B4C1AE5E27/image-dimensions/581x279?v=v2" width="581" height="279" role="button" title="Picture8.png" alt="Picture8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;7. Run the import. Once completed, SAC will display a &lt;STRONG&gt;success notification&lt;/STRONG&gt; along with row-level details in the job timeline.&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture9.png" style="width: 648px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304555iC270EB9B2E99639D/image-dimensions/648x136?v=v2" width="648" height="136" role="button" title="Picture9.png" alt="Picture9.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1081704592"&gt;&lt;SPAN&gt;Step 5: Validate the Imported Data&lt;/SPAN&gt;&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Navigate back to your Model Structure Workspace in SAC.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Verify that the data has been successfully imported.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensure measures and dimensions are mapped correctly.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Test the model with basic visualizations or planning functions to confirm accuracy.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;As shown in the image below, the entire BigQuery table is now visible in the Data Foundation area.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Picture10.png" style="width: 665px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304573i4BC77B457EE7C192/image-dimensions/665x424?v=v2" width="665" height="424" role="button" title="Picture10.png" alt="Picture10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-885191087"&gt;&lt;SPAN&gt;Step 6: Refresh and Schedule Your Import Job&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;One-time imports are fine for demos, but real business data changes constantly. Luckily, SAC lets you refresh and schedule updates:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Update: Brings in the latest changes while keeping existing data.&lt;/LI&gt;&lt;LI&gt;Append: Adds new rows without touching what’s already there.&lt;/LI&gt;&lt;LI&gt;Clean and Replace: Wipes the old dataset and replaces it with fresh data.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You can also schedule refreshes (daily, weekly, or custom) so your dashboards are always up to date — no manual work required.&lt;/P&gt;&lt;H3 id="toc-hId-688677582"&gt;&lt;SPAN&gt;Key Takeaways&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Integration is straightforward once the schemas in BigQuery and SAC are aligned.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;BigQuery serves as a powerful backend, while SAC empowers users with visualization and planning tools.&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Refresh options and scheduling help keep your models in sync automatically&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-492164077"&gt;&lt;SPAN&gt;Conclusion&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;Integrating Google BigQuery with SAP Analytics Cloud isn’t complicated, but it’s incredibly powerful. With just a few steps, you can combine BigQuery’s scalable data engine with SAC’s interactive analytics and planning features. Whether you’re experimenting with test data or working at an enterprise level, the process is the same: build your table, set up your model, connect, import, validate, and schedule updates.&lt;/P&gt;&lt;P&gt;By following the steps in this guide, you can set up the integration with ease and keep your models refreshed automatically.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/seamless-integration-of-google-cloud-bigquery-with-sap-analytics-cloud-sac/ba-p/14190989"/>
    <published>2025-09-09T11:58:23.601000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-ci-cpi-iflow-technical-specification-document/ba-p/14212348</id>
    <title>SAP Cloud Integration(CI/CPI) iFlow Technical Specification Document Generation Using Generative AI</title>
    <updated>2025-09-09T19:11:27.254000+02:00</updated>
    <author>
      <name>adarshrao_rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/882299</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1759970567"&gt;Introduction&lt;/H2&gt;&lt;P&gt;Creating technical specification documents for SAP Integration Suite iFlows is a time-consuming and manual process. This post introduces a Python-based solution that leverages Generative AI (Google Gemini API) to automatically generate comprehensive, human-friendly technical documentation from your iFlow XML files. The solution also visualizes message flows, extracts Groovy scripts, and summarizes key configuration details making your documentation process faster, more accurate, and scalable.&lt;/P&gt;&lt;H2 id="toc-hId-1563457062"&gt;What Does This Solution Do?&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Parses SAP iFlow XML files&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and extracts all relevant technical details.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Generates a professional Word document (.docx)&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;with sections like Overview, High-Level Design, Message Flow, Technical Description, Sender/Receiver, Mappings, Security, Error Handling, and Appendix.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Uses Generative AI (Gemini API)&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to summarize complex XML sections into readable, technical prose.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Visualizes BPMN message flows&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;as diagrams.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extracts and explains Groovy scripts&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;used in the iFlow.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Supports versioning, change history, and metadata extraction.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1366943557"&gt;How Does It Work?&lt;/H2&gt;&lt;H3 id="toc-hId-1299512771"&gt;1.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Configuration&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;The script reads a configuration file (config_file.json) that specifies:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The Gemini API endpoint and key (Please &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/improving-exception-handling-using-generative-ai-in-sap-cloud-integration/ba-p/14157298" target="_self"&gt;refer&lt;/A&gt; to get the API key)&lt;/LI&gt;&lt;LI&gt;The source iFlow XML file path&lt;/LI&gt;&lt;LI&gt;The output Word document path&lt;/LI&gt;&lt;LI&gt;(Optional) Folder containing Groovy scripts&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1102999266"&gt;2.&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;Main Steps&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Load and Parse XML:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Uses Python’s&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;xml.etree.ElementTree&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;to parse the iFlow XML.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Extract Sections:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Finds and extracts sections like processes, message flows, extension elements, properties, etc.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Summarize with AI:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Sends XML fragments to Gemini API for concise, technical summaries.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Generate Tables and Diagrams:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Creates tables for properties, mappings, sender/receiver, and visualizes BPMN flows using&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;matplotlib&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;networkx.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Document Assembly:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Builds a Word document with all sections, formatted tables, diagrams, and AI-generated summaries.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-777403042"&gt;How to Use the Script&lt;/H2&gt;&lt;H3 id="toc-hId-709972256"&gt;&lt;STRONG&gt;Prerequisites&lt;/STRONG&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Python 3.8+&lt;/LI&gt;&lt;LI&gt;Required libraries:&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;docx,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;matplotlib,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;networkx,&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;requests&lt;/LI&gt;&lt;LI&gt;Access to Google Gemini API (API key required)&lt;/LI&gt;&lt;LI&gt;Your SAP iFlow XML file&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-513458751"&gt;&lt;STRONG&gt;Setup Steps&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1757444472484.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311896i35C6933B6A7B6A2C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1757444472484.png" alt="adarshrao_rao_1-1757444472484.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-316945246"&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;1. Clone the Repository&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/H3&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;git clone https://github.com/Adarshrao23/sap-ci-iflow-ai-spec-generator.git
cd sap-ci-iflow-ai-spec-generator&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;or use Microsoft Visual Studio Code and copy the below files to your project.&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/Adarshrao23/sap-ci-iflow-ai-spec-generator" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/Adarshrao23/sap-ci-iflow-ai-spec-generator&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1757432084844.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311826i2E55B9B7B2AB58A3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1757432084844.png" alt="adarshrao_rao_0-1757432084844.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;&lt;STRONG&gt;2. Install all the Dependencies&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;pip3 install python-docx matplotlib networkx requests​&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Prepare Your Configuration&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Create a&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;config_file.json&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;like:&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
    "gemini_api_url": "https://generativelanguage.googleapis.com/v1beta/models/gemini-2.0-flash:generateContent",
    "gemini_api_key": "your api key",
    "source_xml_path": "source .iflw file path",
    "target_docx_path": "Target path where TS needs to be generated",
    "groovy_scripts_folder":"Groovy script folder path"
  }&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;4. Run the Script&lt;/STRONG&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;Dynamic_generate_iflow_spec_using_ai.py&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;5. Check the Output&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The generated Word document will be at the path specified in&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;target_docx_path.&lt;/LI&gt;&lt;LI&gt;Diagrams and tables will be embedded.&lt;/LI&gt;&lt;LI&gt;AI-generated summaries will make the document readable and professional.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--8650978"&gt;Example Output Structure&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Title Page&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Table of Contents&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Change History&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Overview&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(AI-generated summary)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;High-Level iFlow Design&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(AI summary + BPMN diagram)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Message Flow&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;(AI summary + table)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Technical Description&lt;/STRONG&gt;&lt;UL&gt;&lt;LI&gt;Main Integration Process&lt;/LI&gt;&lt;LI&gt;Local Integration Process&lt;/LI&gt;&lt;LI&gt;Sender/Receiver (tables)&lt;/LI&gt;&lt;LI&gt;Mappings (tables)&lt;/LI&gt;&lt;LI&gt;Security (table)&lt;/LI&gt;&lt;LI&gt;Groovy Scripts (code + AI explanation)&lt;/LI&gt;&lt;LI&gt;Error Handling &amp;amp; Logging (AI summary + tables)&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Version and Metadata&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Appendix&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-142089874"&gt;Testing&lt;/H2&gt;&lt;P&gt;1. Download the iFlow for which you want to create Technical Specification Document. In my case I have created this sample iFlow and I will download it to my local machine.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1757433672358.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311830iBD425AB2708ECA09/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1757433672358.png" alt="adarshrao_rao_0-1757433672358.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2. I will prepare the config_file.json by updating Google Gemini API key, .iflw file path, oath where TS document should be generated and groovy script folder path.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1757433961129.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311832i5078DE910A386F97/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="adarshrao_rao_0-1757433961129.png" alt="adarshrao_rao_0-1757433961129.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. Run&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;Dynamic_generate_iflow_spec_using_ai.py&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4. Technical Specification Document is generated. I have upload the sample in the Repository.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1757434245094.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311834iD3E63A487B0540F2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1757434245094.png" alt="adarshrao_rao_1-1757434245094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId--54423631"&gt;Business Value&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Saves Time:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Automates a tedious documentation process.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Improves Quality:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;AI summaries are readable and technical.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Ensures Consistency:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Standardizes documentation format.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Easy to Extend:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Add more sections or customize as needed.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--250937136"&gt;Extending and Customizing&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Add More AI Summaries:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;You can tweak prompts sent to Gemini for different sections.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Support More File Types:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Extend parsing logic for other SAP artifacts.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Integrate with CI/CD:&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;Automate documentation generation in your DevOps pipeline.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Document Structure&lt;/STRONG&gt;: Flexibility to modify the template as per your requirement&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId--447450641"&gt;Source Code&lt;/H2&gt;&lt;P&gt;Find the full source code here:&amp;nbsp;&lt;A href="https://github.com/Adarshrao23/sap-ci-iflow-ai-spec-generator" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/Adarshrao23/sap-ci-iflow-ai-spec-generator&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;FONT size="4"&gt;Note:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;This solution is currently in its pilot phase. I am actively working on enhancements and welcome feedback or suggestions for future improvements!&lt;/SPAN&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;H2 id="toc-hId--643964146"&gt;Feedback &amp;amp; Contributions&lt;/H2&gt;&lt;P&gt;Feel free to fork the repo, submit issues, or contribute enhancements.&lt;BR /&gt;Comment below if you have questions or want to share your experience!&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q: Is my data sent to Google Gemini API?&lt;/STRONG&gt;&lt;BR /&gt;A: Yes, XML fragments are sent for summarization. Do not use sensitive data.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q: Can I use this for other SAP artifacts?&lt;/STRONG&gt;&lt;BR /&gt;A: Yes, with minor modifications to the XML parsing logic.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q: How do I add more sections?&lt;/STRONG&gt;&lt;BR /&gt;A: Extend the&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;generate_iflow_spec()&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;function and add new extraction/summarization logic.&lt;/P&gt;&lt;H2 id="toc-hId--840477651"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This solution brings the power of Generative AI to SAP Cloud Integration iFlow documentation, making your integration projects more efficient and your documentation more valuable. Please try it out, share feedback, and help improve the SAP integration ecosystem!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-integration-ci-cpi-iflow-technical-specification-document/ba-p/14212348"/>
    <published>2025-09-09T19:11:27.254000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol3-%E9%9F%B3%E5%A3%B0api%E3%82%92%E8%A9%A6%E3%81%99/ba-p/14213970</id>
    <title>SAP Integration SuiteのAI Adapterの使い方 Vol3.音声APIを試す</title>
    <updated>2025-09-11T05:39:56.368000+02:00</updated>
    <author>
      <name>yasuyukiuno</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/557133</uri>
    </author>
    <content>&lt;P&gt;SAP Integration SuiteのAIアダプタがようやくリリースされたので試してみました。&lt;BR /&gt;この記事ではIntegration Suite AIアダプターの利用方法をステップバイステップで解説します。&lt;BR /&gt;最も基本的なAIアダプタ利用方法は、&lt;A title="SAP Integration SuiteのAI Adapterの使い方 Vol1.基本編" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932" target="_blank"&gt;第1回の記事&lt;/A&gt;、&lt;A title="SAP Integration SuiteのAI Adapterの使い方 Vol2.基本編" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol2-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14203431" target="_blank"&gt;第2回の記事&lt;/A&gt;を参考にして下さい。&lt;/P&gt;&lt;P&gt;第3回のテーマは、『Chat Completions API以外も呼び出してみよう』です。&lt;/P&gt;&lt;H2 id="toc-hId-964073342" id="toc-hId-1760006209"&gt;AI Adapterについて&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;はその名の通り、対話型AIとやり取りをするために利用するアダプタです。&lt;BR /&gt;2025年2Qにリリースされたばかりの新アダプタとなります。&lt;/P&gt;&lt;P&gt;・AI アダプタでは、 SAP AI Coreを利用した&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;と、Chat GPT APIを利用した&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;の2 つのAI利用方法があります。&lt;/P&gt;&lt;P&gt;この記事では第1回、第2回の記事に引き続き、後者の&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;を利用しAIアダプタを試してみます。&lt;/P&gt;&lt;H2 id="toc-hId-964073342" id="toc-hId-1563492704"&gt;Open AI APIの種別&lt;/H2&gt;&lt;P&gt;第1回、第2回の記事では、Chat Completions APIを利用してきました。&lt;BR /&gt;Chat Completions APIでは自然言語での応答作成、文章要約などができますが、Open AIのAPIはテキストで会話ができるだけではありません。&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;音声合成(Text to Speech)&lt;/LI&gt;&lt;LI&gt;音声認識(Speech to Text)&lt;/LI&gt;&lt;LI&gt;音声翻訳(Speech Translation)&lt;/LI&gt;&lt;LI&gt;画像生成(Text to Image)&lt;/LI&gt;&lt;LI&gt;画像理解(Image Captioning / Analysis)&lt;/LI&gt;&lt;LI&gt;ファイルアップロード(Files): OpenAI APIにファイル(.txt, .jsonなど)をアップロードして後続APIに利用&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A title="SAP Integration SuiteのAI Adapterの使い方 Vol2.基本編" href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol2-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14203431" target="_blank"&gt;第2回の記事&lt;/A&gt;で作ったiFlowを修正し、上記のAPIも呼び出せるか試してみます。&lt;BR /&gt;(そもそもIntegration Suiteでどのようなユースケースで利用するかは別として・・・ケイパビリティを確認しましょう)&lt;/P&gt;&lt;P&gt;第2回の記事のiFlowからの変更点を中心に示します。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1366979199"&gt;1.Text to Speech APIを試す。&lt;/H2&gt;&lt;P&gt;AIアダプタの設定：下図のようにText to Speech APIに変更する&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_7-1757560875325.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312602iEF5412A9914B0F68/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_7-1757560875325.png" alt="yasuyukiuno_7-1757560875325.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Content Modifier設定：下図参照&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_8-1757561061902.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312630i764CD7D19FC10963/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_8-1757561061902.png" alt="yasuyukiuno_8-1757561061902.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{
  "model": "tts-1",
  "input": "Today is a wonderful day to develop Integration Flow",
  "voice": "alloy"
}&lt;/code&gt;&lt;/pre&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1170465694"&gt;2.動作確認&lt;/H2&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;トレースモードで実行したところ、AIアダプタからの戻り値にバイナリデータが含まれていました。ダウンロードしてみます。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_10-1757561325314.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312643i2794DD38FA39EA91/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_10-1757561325314.png" alt="yasuyukiuno_10-1757561325314.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;エディタで開くと文字化けしています。&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_11-1757561357378.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/312661iCBE170E21726E4F7/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_11-1757561357378.png" alt="yasuyukiuno_11-1757561357378.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;ダウンロードしたファイルはaudio/mpeg形式です。『output.mp3』にファイル名を変更し、再生してみます。&lt;/P&gt;&lt;P&gt;下記にoutput.mp3をアップロードしましたので、正しく生成されているか確認してみてください。&lt;A href="https://drive.google.com/file/d/1__Yucju2dRmpf-GpWzIAjfJccbQhjeOl/view?usp=drive_link" target="_blank" rel="nofollow noopener noreferrer"&gt;https://drive.google.com/file/d/1__Yucju2dRmpf-GpWzIAjfJccbQhjeOl/view?usp=drive_link&lt;/A&gt;&lt;/P&gt;&lt;P&gt;次回は画像系のOpen AI APIを試そうと思います。&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol3-%E9%9F%B3%E5%A3%B0api%E3%82%92%E8%A9%A6%E3%81%99/ba-p/14213970"/>
    <published>2025-09-11T05:39:56.368000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/kickstart-your-sap-btp-journey/ba-p/14175662</id>
    <title>Kickstart Your SAP BTP Journey</title>
    <updated>2025-09-12T15:45:00.687000+02:00</updated>
    <author>
      <name>etienne_antoniutti</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1743004</uri>
    </author>
    <content>&lt;H4 id="toc-hId-1995140292"&gt;&lt;EM&gt;All you need to know and where to start&lt;/EM&gt;&lt;/H4&gt;&lt;P&gt;You may have come across articles, presentations, interviews or discussions about SAP Business Technology Platform (SAP BTP). You heard the term quite often, but you might still be asking: &amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;What exactly is SAP BTP?&lt;/LI&gt;&lt;LI&gt;Why is SAP BTP important?&lt;/LI&gt;&lt;LI&gt;And how do I begin exploring SAP BTP’s potential?&lt;/LI&gt;&lt;LI&gt;How does SAP BTP fit into the clean core strategy?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;You’re now at the right place.&lt;/P&gt;&lt;P&gt;Whether you're a &lt;STRONG&gt;decision maker looking to drive IT strategy&lt;/STRONG&gt;, an &lt;STRONG&gt;IT professional building solutions&lt;/STRONG&gt;, a &lt;STRONG&gt;business user focused on innovation&lt;/STRONG&gt;, or part of the &lt;STRONG&gt;academic community exploring cutting-edge technologies&lt;/STRONG&gt;, this post is your launchpad into the world of SAP BTP.&lt;/P&gt;&lt;P&gt;Curious where you fit in? Keep reading to discover the tools, learning paths, and support SAP BTP offers for every IT role: from developers and architects to students, educators, and decision makers.&lt;/P&gt;&lt;P&gt;No matter your background or goals, there’s a starting point tailored just for you.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1669544068"&gt;What We’ll Cover Here&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;A href="#_What_Is_SAP" target="_self" rel="nofollow noopener noreferrer"&gt;What Is SAP BTP?&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_Why_SAP_BTP" target="_self" rel="nofollow noopener noreferrer"&gt;Why SAP BTP Matters&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_SAP_BTP_and_clean_core" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;SPAN&gt;SAP BTP and clean core&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_Try_Before_You_Buy" target="_self" rel="nofollow noopener noreferrer"&gt;Try Before You Buy: Trials &amp;amp; Pricing Models&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_Real_Talk_What_Others_Do" target="_self" rel="nofollow noopener noreferrer"&gt;Real Talk: What Are Others Doing with SAP BTP?&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_SAP_BTP_Essentials" target="_self" rel="nofollow noopener noreferrer"&gt;SAP BTP Essentials: Resources for Every IT Role&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_Stay_Ahead_Strategy_Roadmaps_Updates" target="_self" rel="nofollow noopener noreferrer"&gt;Stay Ahead: Strategy, Roadmaps &amp;amp; Updates&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="#_Start_Building_Today" target="_self" rel="nofollow noopener noreferrer"&gt;Start building today!&lt;/A&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1473030563"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="_What_Is_SAP" id="toc-hId-1276517058"&gt;&lt;SPAN&gt;What is SAP BTP?&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;SAP BTP is an intuitive, modern development and innovation platform for both professional IT and business users. It is a unified platform that brings quickly together everything you need to build any idea or business vision to life, extending, and integrating existing business applications, whether they’re SAP or not.&lt;/P&gt;&lt;P&gt;With self-service &lt;STRONG&gt;data discovery&lt;/STRONG&gt;, &lt;STRONG&gt;modeling&lt;/STRONG&gt;, &lt;STRONG&gt;planning&lt;/STRONG&gt;, and &lt;STRONG&gt;analytics&lt;/STRONG&gt; for business users in a &lt;STRONG&gt;governed environment&lt;/STRONG&gt;, it provides &lt;STRONG&gt;integration&lt;/STRONG&gt; solutions to connect and streamline applications and processes across the entire enterprise, offering &lt;STRONG&gt;pre-built business content&lt;/STRONG&gt; like built-in data products, integrations, workflows, app templates, and &lt;STRONG&gt;AI services.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here’s what’s in the toolbox:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://www.sap.com/products/technology-platform/build.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;App Development &amp;amp; Automation&lt;/STRONG&gt;&lt;/A&gt;: Rapidly develop applications or automate processes using low-code/no-code tools or opt for professional-code development when advanced customization and control are required&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://www.sap.com/products/data-cloud/analytics.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Data &amp;amp; Analytics&lt;/STRONG&gt;:&lt;/A&gt; Turn your data into decisions with built-in analytics and planning tools.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://www.sap.com/products/technology-platform/integration-suite.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Integration&lt;/STRONG&gt;&lt;/A&gt;: Connect SAP or non-SAP systems like a pro.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://www.sap.com/products/technology-platform/ai.html" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Artificial Intelligence&lt;/STRONG&gt;&lt;/A&gt;: Infuse AI into your workflows, apps, and decisions.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://help.sap.com/docs/btp/sap-business-technology-platform/sap-business-technology-platform" target="_blank" rel="noopener noreferrer"&gt;&lt;STRONG&gt;Platform Foundation&lt;/STRONG&gt;&lt;/A&gt;: Secure, scalable, and ready for hybrid cloud environments.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Simply put, &lt;STRONG&gt;SAP BTP enables you to innovate and stay relevant by building on established foundations.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="_Why_SAP_BTP" id="toc-hId-1080003553"&gt;Why SAP BTP Matters?&lt;/H3&gt;&lt;P&gt;Because digital transformation is not just a trend, it’s essential for &lt;STRONG&gt;adaptability&lt;/STRONG&gt; and &lt;STRONG&gt;resilience&lt;/STRONG&gt;, a.k.a. survival.&lt;/P&gt;&lt;P&gt;With SAP BTP, you can:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Automate&lt;/STRONG&gt; repetitive tasks and free up time for real work.&lt;/LI&gt;&lt;LI&gt;Connect all of your systems, so they &lt;STRONG&gt;integrate.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Build custom apps&lt;/STRONG&gt; tailored to your business needs and vision.&lt;/LI&gt;&lt;LI&gt;Use &lt;STRONG&gt;AI&lt;/STRONG&gt; to make smarter decisions, faster.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connect&lt;/STRONG&gt; and harmonize all your &lt;STRONG&gt;data, eliminating data silos&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Get &lt;STRONG&gt;mission-critical insights&lt;/STRONG&gt; from your data without a background in data science&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;And the best part? You don’t have to start from scratch.&lt;BR /&gt;&lt;SPAN&gt;SAP BTP offers thousands of &lt;/SPAN&gt;&lt;STRONG&gt;pre-built content packages&lt;/STRONG&gt;&lt;SPAN&gt;, from application or automation templates to &lt;/SPAN&gt;&lt;STRONG&gt;integration&lt;/STRONG&gt;&lt;SPAN&gt; flows to &lt;/SPAN&gt;&lt;STRONG&gt;dashboards&lt;/STRONG&gt;&lt;SPAN&gt; to &lt;/SPAN&gt;&lt;STRONG&gt;AI services&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="_SAP_BTP_and_clean_core" id="toc-hId-883490048"&gt;SAP BTP and clean core&lt;/H3&gt;&lt;P&gt;&lt;A href="https://www.sap.com/resources/what-is-a-clean-core" target="_blank" rel="noopener noreferrer"&gt;Clean core&lt;/A&gt;&amp;nbsp;is a &lt;STRONG&gt;set of guiding principles&lt;/STRONG&gt; that support &lt;STRONG&gt;continuous business&lt;/STRONG&gt; transformation by designing &lt;STRONG&gt;agile, innovative and efficient ERP systems&lt;/STRONG&gt;. The principles focus on &lt;STRONG&gt;building resilient business processes and extensions&lt;/STRONG&gt; supported by seamless integration, efficient operations, and data quality.&lt;/P&gt;&lt;P&gt;Central to the clean core strategy are &lt;A href="https://www.sap.com/documents/2024/09/20aece06-d87e-0010-bca6-c68f7e60039b.html" target="_blank" rel="noopener noreferrer"&gt;Side-by-side extensions&lt;/A&gt;,&lt;I&gt; &lt;/I&gt;powered by &lt;STRONG&gt;SAP BTP.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Side-by-side extensions allow organizations to enhance their SAP landscapes without directly modifying the core SAP S/4HANA system: instead of embedding custom code within the core, new functionalities, integrations, and custom applications are developed and deployed independently on SAP BTP.&lt;/P&gt;&lt;P&gt;This approach leverages SAP BTP's robust services, including various runtime environments (like Cloud Foundry, Kyma, and the ABAP Environment), development tools (like SAP Business Application Studio and CAP), and critical integration services (like &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; and &lt;STRONG&gt;SAP Event Mesh&lt;/STRONG&gt;). Connectivity is securely handled by tools like the &lt;STRONG&gt;SAP Cloud Connector&lt;/STRONG&gt; for on-premise systems and the &lt;STRONG&gt;Destination Service&lt;/STRONG&gt;, ensuring seamless data exchange via standard &lt;STRONG&gt;APIs&lt;/STRONG&gt; and business events from the core.&lt;/P&gt;&lt;H2 id="toc-hId-557893824"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H3 id="_Try_Before_You_Buy" id="toc-hId-490463038"&gt;Try Before You Buy: Free Trials &amp;amp; Flexible Pricing Models&lt;BR /&gt;&lt;EM&gt;Not ready to commit? No problem&lt;/EM&gt;&lt;/H3&gt;&lt;P&gt;SAP BTP offers a &lt;STRONG&gt;90-day free trial&lt;/STRONG&gt; with access to &lt;STRONG&gt;30+ services&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;You can explore, experiment, and learn at your own pace how to build, deploy, and integrate with a full suite of platform services.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/technology-platform/trial.html" target="_blank" rel="noopener noreferrer"&gt;Start here your free trial&lt;/A&gt; of SAP Business Technology Platform.&lt;/P&gt;&lt;P&gt;When you're ready to scale, you’ve got options:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Free Tier&lt;/STRONG&gt;: Build small apps, pay only for what you use.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Pay-As-You-Go&lt;/STRONG&gt;: Great for dynamic needs and innovation projects.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Enterprise Agreement&lt;/STRONG&gt;: Predictable pricing for known use cases.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Explore all the possibilities SAP BTP unlocks. We’ve outlined the opportunities below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="etienne_antoniutti_1-1754685556432.png" style="width: 927px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298790iC57AE7BE45EA1C0F/image-dimensions/927x408?v=v2" width="927" height="408" role="button" title="etienne_antoniutti_1-1754685556432.png" alt="etienne_antoniutti_1-1754685556432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-293949533"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="_Real_Talk_What_Others_Do" id="toc-hId-97436028"&gt;Real Talk: What Are Others Doing with SAP BTP?&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Thousands of organizations, from global enterprises to emerging startups, are already leveraging &lt;STRONG&gt;SAP BTP to transform their operations&lt;/STRONG&gt;. Let their success inspire you.&lt;BR /&gt;They are using SAP BTP to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Automate&lt;/STRONG&gt; supply chains&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Personalize&lt;/STRONG&gt; customer experiences&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Streamline&lt;/STRONG&gt; HR processes&lt;/LI&gt;&lt;LI&gt;Build &lt;STRONG&gt;AI-powered&lt;/STRONG&gt; finance tools ... and &lt;STRONG&gt;achieve much more&lt;/STRONG&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;With over 33,000 customers and 3,200 partners, you'll be in excellent company.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/technology-platform/customer-stories.html?sort=latest_desc" target="_blank" rel="noopener noreferrer"&gt;See how SAP BTP customers are achieving a measurable impact across industries and lines of business.&lt;/A&gt;&lt;/P&gt;&lt;H3 id="toc-hId--174308846"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H3 id="_SAP_BTP_Essentials" id="toc-hId--370822351"&gt;SAP BTP Essentials: Resources for Every IT Role&lt;/H3&gt;&lt;P&gt;Here’s your go-to list of resources to get rolling, matched to your role:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="etienne_antoniutti_0-1757431626502.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/311823iD90E4D75F41EFAD2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="etienne_antoniutti_0-1757431626502.png" alt="etienne_antoniutti_0-1757431626502.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; This table is a starting point. Resource-role mappings are suggestions. Feel free to explore beyond your role based on your needs and interests. Find below what each of the resources has to offer.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;A href="https://discovery-center.cloud.sap/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center&lt;/A&gt; - Learn about &lt;STRONG&gt;SAP BTP Services&lt;/STRONG&gt; in detail:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Start your experience with Guided Missions to bring real life use-cases to life&lt;/LI&gt;&lt;LI&gt;Reference established &lt;STRONG&gt;architectures patterns&lt;/STRONG&gt; to guide your design and implementation&lt;/LI&gt;&lt;LI&gt;Understand how SAP BTP’s &lt;STRONG&gt;AI capabilities&lt;/STRONG&gt; are used to infuse &lt;STRONG&gt;AI features&lt;/STRONG&gt; into SAP’s solution portfolio&lt;/LI&gt;&lt;LI&gt;Create an &lt;STRONG&gt;estimate&lt;/STRONG&gt; of your services to get a first impression about the usage cost.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://support.sap.com/en/product/onboarding-resource-center/business-technology-platform.html" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Learning&lt;/A&gt; - &lt;STRONG&gt;Free&lt;/STRONG&gt; learning journeys tailored to your role and pace:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Familiarize yourself with the basic concepts of SAP BTP.&lt;/LI&gt;&lt;LI&gt;Get enabled.&lt;/LI&gt;&lt;LI&gt;Plan your implementation.&lt;/LI&gt;&lt;LI&gt;Prepare for your go-live.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-btp-guidance-framework/guidance-framework" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Guidance Framework&lt;/A&gt; - Provides a central access point for architects, developers, and administrators to build and run enterprise-grade solutions on SAP BTP:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Decision Guides&lt;/STRONG&gt;: Quickly identify the best technology options for your specific needs.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reference Architectures&lt;/STRONG&gt;: Explore solution templates to effectively design and build on BTP, understanding key concepts and capabilities.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Methodologies&lt;/STRONG&gt;: Access guided approaches to boost your cloud technology maturity, spanning both technical and organizational aspects.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Technology Recommendations&lt;/STRONG&gt;: Evaluate and choose the right implementation options across various technology domains.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;DevOps Principles&lt;/STRONG&gt;: Empower your development and operations teams to achieve greater efficiency.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://api.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub &lt;/A&gt;&amp;nbsp;- &lt;STRONG&gt;Kickstart&lt;/STRONG&gt; your projects with ready-to-use Business Content available for SAP BTP:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Integration:&lt;/STRONG&gt; Access over 4,000 pre-built objects, including integration flows, scripts, value mappings, and message mappings, to streamline your connections with SAP Integration Suite&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Development &amp;amp; Automation:&lt;/STRONG&gt; Accelerate your projects with approximately 650 pre-built workflows, automations, applications, templates, and actions ready for use with SAP Build&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Analytics:&lt;/STRONG&gt; Jump-start your data insights using pre-built dashboards, stories, and data models specifically designed for SAP BTP's analytics capabilities&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Information:&lt;/STRONG&gt; Explore a rich repository of resources, including APIs, events, CDS views, business objects, interfaces, adapters, process blueprints, and SAP-validated partner use cases.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;A href="https://pages.community.sap.com/topics/business-technology-platform" target="_blank" rel="noopener noreferrer"&gt;SAP Community&lt;/A&gt; - Connect with fellow SAP BTP users, ask questions and share ideas, get help and help others.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="_Stay_Ahead_Strategy_Roadmaps_Updates" id="toc-hId--567335856"&gt;Stay Ahead: Strategy, Roadmaps &amp;amp; Updates&lt;/H3&gt;&lt;P&gt;&lt;A href="https://readiness-at-scale.enable-now.cloud.sap/pub/20230621_ras/index.html?library=library.txt&amp;amp;show=book!BO_EC8330B09B97CDBE#slide!SL_120BDFE08096029D" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Release Navigator&lt;/A&gt; - Keep up with the latest innovations and updates across SAP BTP, track new features and plan your adoption.&lt;/P&gt;&lt;P&gt;&lt;A href="https://roadmaps.sap.com/" target="_blank" rel="noopener noreferrer"&gt;Road Map Explorer&lt;/A&gt; - Discover SAP’s product strategies and planned innovations with this go-to interactive tool. It highlights key advancements and offers a robust planning horizon, helping you precisely detail your transformation journey.&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.sap.com/products/technology-platform/resources.html?sort=title_asc&amp;amp;tab=fundamentals&amp;amp;pdf-asset=d29a141c-e47d-0010-bca6-c68f7e60039b&amp;amp;page=1" target="_blank" rel="noopener noreferrer"&gt;Strategy White Paper for SAP BTP&lt;/A&gt; - When you are ready to get deeper, discover more with SAP’s strategy for SAP BTP.&lt;/P&gt;&lt;H2 id="toc-hId--470446354"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H3 id="_Start_Building_Today" id="toc-hId--960362866"&gt;Start Building today!&lt;/H3&gt;&lt;P&gt;Start your journey today with the &lt;A href="https://www.sap.com/products/technology-platform/trial.html" target="_blank" rel="noopener noreferrer"&gt;SAP BTP Trial&lt;/A&gt; or explore your first mission at the &lt;A href="https://discovery-center.cloud.sap/" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Discovery Center.&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Got further questions? Drop them below and let’s build something amazing, together.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/kickstart-your-sap-btp-journey/ba-p/14175662"/>
    <published>2025-09-12T15:45:00.687000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/local-odata-api-access-in-edge-integration-cell-runtimes/ba-p/14195001</id>
    <title>Local OData API Access in Edge Integration Cell Runtimes</title>
    <updated>2025-09-17T11:51:01.184000+02:00</updated>
    <author>
      <name>amiryousefi</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/759806</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1609733224"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;With the usage of Edge Integration Cell runtime, a mixture of Cloud and On-Prem solutions is utilized in some aspects. One of these aspects is calling the monitoring APIs. When the clients try to make such API calls in the Edge Integration Cell runtimes, their queries are bypassing the cloud to reach the corresponding edge cluster, which is done through the Web UI. Hence, there is no possibility to directly access to the APIs without the Web UI. As long as the connectivity to the cloud is available, these scenarios will work properly. However, in case the cloud connection is broken, the clients will not be able to use such functionalities and consequently will not be able to monitor their edge runtime properly.&amp;nbsp;&lt;/P&gt;&lt;P&gt;To tackle the above problem, a new feature is added to the cloud integration for the edge-enabled runtimes by which the clients are able to call a subset of monitoring APIs without the intervention of cloud, so called "&lt;STRONG&gt;Local API Access&lt;/STRONG&gt;".&amp;nbsp;&lt;SPAN&gt;This feature is available starting with Cloud Integration software version 6.71.x&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;In this Blog I will try to address this topic and how can this feature be used by the clients properly. We will see how can we configure the edge clusters to enable the Local Access(API Plan). I will also provide the information on how the APIs can be called and finally will provide a list of the APIs which are currently exposed locally.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1413219719"&gt;&lt;STRONG&gt;Configure Cluster to Support API Plan&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;The first step for using Local API Access, is activating the API Plan support to the cluster. This can be done using the ELMO UI. By selecting the desired cluster and modify the configuration, you will see the new settings available also for the API Plan: &lt;STRONG&gt;API Virtual Host&lt;/STRONG&gt; and &lt;STRONG&gt;API Virtual Host Key Alias&lt;/STRONG&gt;. These settings are also available upon on-boarding of a new edge node. This is also depicted in the following picture.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;API Virtual Host&lt;/STRONG&gt; can be any preferred valid domain name of your choice. In case this is supposed to be exposed to internet, then this also needs to be registered in the DNS as well.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;API Virtual Host Key Alias&amp;nbsp;&lt;/STRONG&gt;is similar to what you have in the default virtual host. This is the alias of keystore entry which contains a valid key and is stored on the corresponding edge runtime.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Configuring API Plan Support in ELMO UI" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305508i9903DE28E7917590/image-size/large?v=v2&amp;amp;px=999" role="button" title="amiryousefi_0-1756295015930.png" alt="Configuring API Plan Support in ELMO UI" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Configuring API Plan Support in ELMO UI&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Once these settings are applied, the corresponding new resources will be created in the K8s cluster&amp;nbsp;including a new Gateway which is created for directly accessing the APIs. The Edge runtime will now be able to handle local API calls.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1216706214"&gt;&lt;STRONG&gt;Required Authentication Setups for calling APIs&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;At the time of writing this Blog and in the initial increment of this feature only the certificate-based authentication is supported for local API Accesses. As the clients are making calls against the new API Virtual Host directly and this is handled by HTTPS connectivity, an MTLS connectivity is required to be established to the cluster. The clients are required to provide the public and private keys for a TLS Connection. The required service key(needed for the public and private keys) can be achieved using the BTP Account Cockpit in cloud integration. You need to create(or use the existing one) a new API Service instance for accessing APIs as followed&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Service:&amp;nbsp;&lt;STRONG&gt;Process Integration Runtime&amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Plan:&lt;STRONG&gt; Process Integration API access&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Service Instance Creation for API Plan" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305540i590AE0483DCA046C/image-size/large?v=v2&amp;amp;px=999" role="button" title="amiryousefi_0-1756298707179.png" alt="Service Instance Creation for API Plan" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Service Instance Creation for API Plan&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;You then need to create a new service key (or use the existing one) in the above Service Instance using the &lt;STRONG&gt;Certificate&amp;nbsp;&lt;/STRONG&gt;client type. Once this is created successfully use the created credentials for the TLS connection. You can use the certificate chain as well as the key entry&amp;nbsp;which are provided there in the newly created credential.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Creating new Certificate Key for API Plan Service Instance" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305541i181171705FFCBE87/image-size/large?v=v2&amp;amp;px=999" role="button" title="amiryousefi_1-1756299166933.png" alt="Creating new Certificate Key for API Plan Service Instance" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Creating new Certificate Key for API Plan Service Instance&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Accessing Certificate and Private Key for calling Local APIs" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/305545iC99BC02FBBB752B3/image-size/large?v=v2&amp;amp;px=999" role="button" title="amiryousefi_0-1756299514146.png" alt="Accessing Certificate and Private Key for calling Local APIs" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Accessing Certificate and Private Key for calling Local APIs&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;You need to consider that accessing certain APIs requires also special permissions(Roles) and for having proper access to the APIs you need to assign all the required Roles to your service instance at the time of creation too.&amp;nbsp;&lt;/P&gt;&lt;P&gt;You can use the certificates and key in the above in order to establish a TLS connection to your cluster and calling the desired API with your favorite REST Client. For simplicity, you can also keep the above data in two different files and simply refer to them in your REST Clients e.g. Curl.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1020192709"&gt;Calling the APIs&amp;nbsp;&lt;/H1&gt;&lt;P&gt;So far, we have seen how to activate the API plan on the edge runtimes and also how to properly setup the required athentication parameters to make the API Calls. We are now good to see how the actual API call works. For this, you need add a &lt;STRONG&gt;/local&lt;/STRONG&gt; prefix to your defined Virtual Host followed by &lt;STRONG&gt;/ap1/v1/&amp;lt;Desired Endpoint&amp;gt;&lt;/STRONG&gt;. Adding the /local prefix here is important, as this will be used to distinguish the local API calls from the calls via cloud. If you do not use the /local prefix then a 401 Unauthorized error would be thrown, even if you use a valid credential.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Here is an example of the API Call:&amp;nbsp;&lt;A target="_self"&gt;https://&amp;lt;YOUR_DEFINED_VIRTUAL_HOST&amp;gt;/local/api/v1/&amp;lt;DESIRED_ENDPOINT_TO_BE_CALLED&amp;gt;&lt;/A&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;&amp;lt;YOUR_DEFINED_VIRTUAL_HOST&amp;gt;: &lt;/STRONG&gt;This is the Virtual Host that you have defined for your your edge Runtime in ELMO UI&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;/local: &lt;/STRONG&gt;This prefix is required to be added to the endpoint call in order to distinguish the local calls from the calls via cloud&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;/api/v1&lt;/STRONG&gt;: Conventially used for calling APIs, similar to the calls over the cloud&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;/&amp;lt;DESIRED_ENDPOINT_TO_BE_CALLED&amp;gt;: &lt;/STRONG&gt;The desired endpoint which is supposed to be called. This is similar to the calls over cloud.&lt;BR /&gt;&lt;UL&gt;&lt;LI&gt;e.g. &lt;STRONG&gt;MessageProcessingLogs&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;As mentioned earlier, for the initial increment of this feature only a subset of the APIs are exposed for local access, here is the list these APIs:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;/&lt;A href="https://api.sap.com/api/MessageProcessingLogs/resource/Logs" target="_self" rel="noopener noreferrer"&gt;MessageProcessingLogs&lt;/A&gt;&lt;UL&gt;&lt;LI&gt;Including sub-entities&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;/MessageProcessingLogErrorInformations&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;/MessageProcessingLogAttachments&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;/MessageProcessingLogCustomHeaderProperties&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;/&lt;A href="https://api.sap.com/api/MessageStore/resource/Entries" target="_self" rel="noopener noreferrer"&gt;MessageStoreEntries&lt;/A&gt;&lt;UL&gt;&lt;LI&gt;Including sub-entities&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;/MessageStoreEntryProperties&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;/MessageStoreEntryAttachments&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;/MessageStoreEntryAttachmentProperties&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;/&lt;A href="https://api.sap.com/api/MessageStore/path/get_DataStores" target="_self" rel="noopener noreferrer"&gt;DataStores&lt;/A&gt;&lt;UL&gt;&lt;LI&gt;Including sub-entities&amp;nbsp;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;/DataStoreEntries&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;/&lt;A href="https://api.sap.com/api/MessageStore/path/get_JmsBrokers__Broker1__" target="_self" rel="noopener noreferrer"&gt;JmsBrokers&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;/&lt;A href="https://api.sap.com/api/MessageStore/path/get_Variables" target="_self" rel="noopener noreferrer"&gt;Variables&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The complete definition and usage of the APIs is defined in the official SAP &lt;A href="https://api.sap.com/" target="_self" rel="noopener noreferrer"&gt;API documentation page&lt;/A&gt;&amp;nbsp;. The usage of the APIs should be adapted according to the above explanations for the local accesses. Please consider that the APIs are only exposed for the Monitoring purposes. This means, that only Get REST API calls are allowed to be done locally and none of the other methods would be available.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/local-odata-api-access-in-edge-integration-cell-runtimes/ba-p/14195001"/>
    <published>2025-09-17T11:51:01.184000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/effortless-integration-archiving-service-cloud-v2-emails-to-opentext/ba-p/14215149</id>
    <title>Effortless Integration: Archiving Service Cloud V2 Emails to OpenText</title>
    <updated>2025-09-18T14:52:31.475000+02:00</updated>
    <author>
      <name>cphelm</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1501067</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;How It Works: A Seamless Process&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This integration is triggered whenever a case is created or updated in SAP Service Cloud V2. The process is designed for a seamless, hands-off user experience:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A user triggers the process from a custom field within SAP Service Cloud V2&lt;/LI&gt;&lt;LI&gt;The iFlow retrieves the most recent email and any attachments associated with the specific service case.&lt;/LI&gt;&lt;LI&gt;The email body is converted into a universally readable PDF format to ensure compliance and audit readiness.&lt;/LI&gt;&lt;LI&gt;The system downloads all attachments linked to the email.&lt;/LI&gt;&lt;LI&gt;Finally, the formatted email and attachments are uploaded to OpenText and linked to the corresponding case for streamlined case management and compliance.&lt;/LI&gt;&lt;LI&gt;OpenText content management is embedded within SAP Service Cloud and users have access to OpenText’s embedded AI for analyzing documents stored within the workspace.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Picture1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316442i200C82C10A52651A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Picture1.png" alt="Picture1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Picture2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316441iA84DD222AF2D7AC5/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Picture2.png" alt="Picture2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Key Features You'll Love&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic Email Retrieval: The iFlow is configured to always fetch the most recent email, ensuring you have the latest information at your fingertips.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Universal Format: By converting the email body to a PDF, the solution guarantees that your records are stored in a universally readable and compliant format.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Comprehensive Attachment Handling: The process supports multiple attachments, archiving them alongside the email for a complete record.&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;Robust Error Handling: The system includes error-handling branches to automatically retry processes or log failures, ensuring reliability and data integrity.&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;P&gt;&lt;STRONG&gt;Technical Reliability&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This iFlow is deployed in &lt;STRONG&gt;SAP Cloud Integration and is triggered by an HTTP API call from &lt;STRONG&gt;SAP Service Cloud V2. It uses OAuth2-based authentication for secure communication with both SAP Service Cloud V2 and &lt;STRONG&gt;OpenText APIs. A custom Python API deployed on &lt;STRONG&gt;Cloud Foundry helps prepare the content for archiving.&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Picture3.png" style="width: 576px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316444iCFD93362FD893866/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Picture3.png" alt="Picture3.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/effortless-integration-archiving-service-cloud-v2-emails-to-opentext/ba-p/14215149"/>
    <published>2025-09-18T14:52:31.475000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/service-interfaces-and-abap-proxy-generation-support-in-sap-integration/ba-p/14221742</id>
    <title>Service Interfaces and ABAP Proxy generation support in SAP Integration Suite</title>
    <updated>2025-09-18T21:59:40.280000+02:00</updated>
    <author>
      <name>radhika_javvaji</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/272095</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog describes how to import Service Interface objects from SAP PI /PO ESR to Cloud Integration Capability of SAP Integration Suite and also the procedure to connect SAP R3 or S/4 HANA systems to Integration Suite tenant and generate ABAP-Proxies.&lt;/P&gt;&lt;P&gt;This feature is available in SAP Integration Suite Cloud Integration (&lt;STRONG&gt;&lt;SPAN&gt;6.69.41 )&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;EM&gt;standard&lt;/EM&gt;&amp;nbsp;and&amp;nbsp;&lt;EM&gt;above&lt;/EM&gt;&amp;nbsp;service plans.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Pre-requisites :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. Configuring Cloud Connector&lt;BR /&gt;&lt;BR /&gt;The first step is to configure SAP Cloud Connector with on premise ES Repository. Cloud connector is an installable application that allows you to establish communication between on premise and cloud applications. To know more about SAP Cloud Connector, see&amp;nbsp;&lt;A href="https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/e6c7616abb5710148cfcf3e75d96d596.html" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/viewer/cca91383641e40ffbe03bdc78f00f681/Cloud/en-US/e6c7616abb5710148cfcf3e75d9...&lt;/A&gt;&lt;BR /&gt;&lt;BR /&gt;2. Configure Connection to ESR&lt;/P&gt;&lt;P&gt;Please refer to the following documentation for details on configuration of ESR system details in Cloud Integration Settings page.&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-connectivity-to-es-repository" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/integration-suite/sap-integration-suite/configuring-connectivity-to-es-rep...&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Once the ES Repository configurations are completed, you can import the Service Interface objects &amp;nbsp;from your ES Repository.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Importing Service Interface Artifact :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;1. Create a new Integration Package or Open an existing Integration Package.&lt;BR /&gt;&lt;BR /&gt;2. Click on Edit and switch to the Artifacts tab&lt;BR /&gt;&lt;BR /&gt;3. Expand Add menu &amp;nbsp;and select Service Interface option from the list.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_0-1758220213342.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316670i94A76A2F19861DBF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_0-1758220213342.png" alt="radhika_javvaji_0-1758220213342.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.&amp;nbsp;&lt;SPAN&gt;A Wizard with title Add Service Interface &amp;nbsp;and steps to be followed is displayed.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_1-1758221121289.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316675i5AB10DF2188F9A12/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_1-1758221121289.png" alt="radhika_javvaji_1-1758221121289.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Select the SAP Process Integration system in the Name dropdown and click on connect. On successful Connection, the Service Interface artifacts present in the ES Repository of the connected SAP PI/PO system are listed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_2-1758221479327.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316676i9687315945D1A86D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_2-1758221479327.png" alt="radhika_javvaji_2-1758221479327.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. Select a Service Interface and proceed with Next Step. This step displays the details (Name, Namespace) of the Service Interface that is selected for import along with the dependent Resources used in the definition of Service Interface.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_3-1758221994362.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316677i48BE3C45449327D9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_3-1758221994362.png" alt="radhika_javvaji_3-1758221994362.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;7. On Proceeding to Next step, the Summary of the import along with the dependant resources is displayed.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_4-1758222434769.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316681i04DD8BB52225167B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_4-1758222434769.png" alt="radhika_javvaji_4-1758222434769.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;8. On Click of Add, the selected Service Interface artifact gets created and listed in the Artifacts page.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_6-1758222771956.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316684i347F97BFBC9D0276/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_6-1758222771956.png" alt="radhika_javvaji_6-1758222771956.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Editor for Service Interface&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;9. &amp;nbsp; On click of the Service Interface artifact from the Artifacts list page, the artifact gets opened and displayed as follows:&lt;/P&gt;&lt;P&gt;Overview tab :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_0-1758224261723.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316685i4614DD9086411528/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_0-1758224261723.png" alt="radhika_javvaji_0-1758224261723.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;References tab :&amp;nbsp;&lt;/P&gt;&lt;P&gt;1)Local &amp;nbsp;: Lists the External Messages/RFCs/IDOCs used in the definition of the Operation(s) of the Service Interface artifact as shown as WSDLs&lt;/P&gt;&lt;P&gt;2)Global : Lists the MessageTypes/Fault Message types used in the definition&amp;nbsp;of the Operation(s) of the Service Interface artifact&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_1-1758224320079.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316686iF94691C7144B1904/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_1-1758224320079.png" alt="radhika_javvaji_1-1758224320079.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Definition Tab :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_2-1758224750778.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316687i1F10C11C03063090/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_2-1758224750778.png" alt="radhika_javvaji_2-1758224750778.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;WSDL :&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="radhika_javvaji_3-1758224818079.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316688iD8DBB68486FC21C6/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="radhika_javvaji_3-1758224818079.png" alt="radhika_javvaji_3-1758224818079.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Next Steps:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the upcoming releases, the Edit of existing Service Interface and also Creation of Service Interface artifact in Cloud Integration capability of SAP Integration Suite would be available.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/service-interfaces-and-abap-proxy-generation-support-in-sap-integration/ba-p/14221742"/>
    <published>2025-09-18T21:59:40.280000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/opensource-cpi-edifact-lt-gt-xml-converter/ba-p/14222029</id>
    <title>OpenSource: CPI Edifact &lt;-&gt; XML converter</title>
    <updated>2025-09-19T08:58:55.893000+02:00</updated>
    <author>
      <name>AntonDelitsch</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/169942</uri>
    </author>
    <content>&lt;P&gt;Inspired by the work of of&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/166843"&gt;@engswee&lt;/a&gt;&amp;nbsp;(&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/formatconversionbean-arrives-in-cpi/ba-p/13367540" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/formatconversionbean-arrives-in-cpi/ba-p/13367540&lt;/A&gt;) I decided to create a basic edifact to xml converter for use in CPI.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;CPI EDIFACT C&lt;/SPAN&gt;&lt;SPAN&gt;onverter is a tiny wrapper based on the work by&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/234510"&gt;@MatthiasFricke&lt;/a&gt;&amp;nbsp;on sapstern/edifactconverter, it provides capabillities to convert edifact to xml and back.&amp;nbsp;&lt;/SPAN&gt;Since it is based on the work of sapstern it out-of-the-box supports around 70 edifact versions and around 10 000 edifact message types and whenever new edifact standards are released support for them will be added.&lt;/P&gt;&lt;P&gt;The setup is quite basic and requires minimal configuration:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AntonDelitsch_0-1758263126886.png" style="width: 635px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316798i1B0BF87B13FB99A4/image-dimensions/635x378/is-moderation-mode/true?v=v2" width="635" height="378" role="button" title="AntonDelitsch_0-1758263126886.png" alt="AntonDelitsch_0-1758263126886.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;To use this package&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Download JAR file&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Download the JAR files from github.&lt;/LI&gt;&lt;LI&gt;Open the xsd.jar file in 7 Zip and add all the xsd files that you need for your project&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Deploy to CPI&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Upload the both JAR file to your CPI integration flow as an Archive&lt;/LI&gt;&lt;LI&gt;Add a groovy script step in your iflow.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Groovy Script Example&lt;/STRONG&gt;:&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.cpitoedifact.converter.EdifactConverterFactory

def Message processData(Message message) {

def converter = EdifactConverterFactory.getDefaultConverter()

// Get the message payload
def messageBody = message.getBody(String.class)

// Convert based on message direction
if (message.getHeaders().get("MessageDirection") == "EDIFACT_TO_XML") {
    def xmlResult = converter.convertEdifactToXml(messageBody)
    message.setBody(xmlResult)
} else if (message.getHeaders().get("MessageDirection") == "XML_TO_EDIFACT") {
    def edifactResult = converter.convertXmlToEdifact(messageBody)
    message.setBody(edifactResult)
}

return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This makes it supereasy to have simple edifact conversions.&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/tester22/cpi-edifact-converter" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/tester22/cpi-edifact-converter&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/opensource-cpi-edifact-lt-gt-xml-converter/ba-p/14222029"/>
    <published>2025-09-19T08:58:55.893000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/migrating-from-sap-po-to-sap-integration-suite-cpi-a-practical-guide/ba-p/14219938</id>
    <title>Migrating from SAP PO to SAP Integration Suite (CPI): A Practical Guide</title>
    <updated>2025-09-19T12:54:09.309000+02:00</updated>
    <author>
      <name>Praveen_Kumar_Beera</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1401210</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;As organizations move towards cloud-based integration platforms, migrating from &lt;STRONG&gt;SAP Process Orchestration (PO)&lt;/STRONG&gt; to &lt;STRONG&gt;SAP Integration Suite (CPI)&lt;/STRONG&gt; becomes essential. This blog will walk you through the key steps of this migration, focusing on:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Connecting SAP PO to SAP Cloud Connector And adding SAP PO in SAP Integration Suite (CPI)&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Importing Message Mappings from SAP PO&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Importing dependent objects of the Message Mapping,&amp;nbsp; such as Imported Archives and Function Libraries&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;‌‌&amp;nbsp;Step 1&lt;/STRONG&gt;&lt;/FONT&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;: Connecting SAP PO to Cloud Connector&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Since SAP PO is an on-premise system, we use SAP Cloud Connector to securely connect SAP CPI (cloud) to the SAP PO environment. The Cloud Connector acts as a secure tunnel between cloud applications and on-premise systems without exposing them directly to the internet.&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Install&amp;nbsp;&lt;A title="SAP Cloud Connector" href="https://tools.hana.ondemand.com/#cloud" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Cloud Connector&lt;/A&gt;&amp;nbsp; on the same network as SAP PO&amp;nbsp;(for testing install on your system).&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Connect Cloud Connector to your SAP BTP subaccount (SAP CPI tenant).&lt;BR /&gt;&lt;A title="Establishing a Connection Between Cloud Connector and Subaccount" href="https://help.sap.com/docs/SAP_LANDSCAPE_MANAGEMENT_CLOUD/e89209f1566d4a7aaf0631e1a1755653/d95510b2ff774b6eb84a5ff7ffb5e3d7.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Establishing a Connection Between Cloud Connector and Subaccount&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Login to the SAP Cloud Connector and select the subaccount and click on Cloud to On-Premises.&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315775i91FC9F2923DD25E7/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Add the SAP PO System in Cloud Connector.&lt;/P&gt;&lt;P&gt;Back-end Type: ABAP System&lt;BR /&gt;Protocol: HTTP&lt;BR /&gt;Internal Host: *PO Sytem Host Name without http://*&lt;BR /&gt;Internal Port: *PO Sytem port*&lt;BR /&gt;Virtual Host: *Enter a desired virtual hostname. This will be used when connecting from Integration suite.*&lt;BR /&gt;Virtual Port: *Enter a desired port*&lt;BR /&gt;Allow Principal Propagation: check&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;&lt;BR /&gt;Principal Type:Kerberos&lt;BR /&gt;Host in Request Header: Use Virtual Host&lt;BR /&gt;Next ==&amp;gt; Next==&amp;gt;&lt;BR /&gt;Check Internal Host: check&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;&lt;BR /&gt;Finish&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315812i1CF38A790FBBDD0C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Add resources path by clicking on the &lt;STRONG&gt;+&amp;nbsp;&lt;/STRONG&gt;icon and enter &lt;STRONG&gt;/&amp;nbsp;&lt;/STRONG&gt;select Path and all Sub-Paths ==&amp;gt; Save.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 861px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315793iC5CDCB95A1DE406C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Check whether the added SAP PO system is reachable.&lt;/P&gt;If it's not, cross-check the host and port. Ensure that both the SAP PO system and the Cloud Connector are accessible through the same network.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315816i6CD540A2186414A1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Now we have successfully connected to SAP PO system from SAP Cloud Connector.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Step 2: Connecting SAP PO&amp;nbsp; to SAP Integration Suite(CPI) Through SAP Cloud Connector&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login to the Integration suite, Go &lt;FONT size="3"&gt;to&lt;/FONT&gt; settings ==&amp;gt; Integrations==&amp;gt; select System Tab==&amp;gt; click on &lt;STRONG&gt;+&amp;nbsp;&lt;/STRONG&gt; to add the SAP PO Sytem.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315822i3154762F19A1B6FB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;Enter the details of System Overview and&amp;nbsp;Integration Directory.&lt;/P&gt;In the Address box, enter the Virtual Host and Port with http://, as maintained in the Cloud Connector.&lt;BR /&gt;If your PO System uses the same address for both the Integration Directory and the ES Repository, check the corresponding checkbox&lt;span class="lia-unicode-emoji" title=":heavy_check_mark:"&gt;✔️&lt;/span&gt;. Otherwise, specify them separately.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315827iBDE465A63894333B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;Test the connectivity between Integration suite and SAP PO system.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315829i7959C8356D097D6B/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Now we have successfully connected to SAP PO system from Integration suite.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Step 3: Importing Message Mappings from SAP PO to SAP CPI&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;FONT size="4"&gt;&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="3"&gt;Login&amp;nbsp;to the Integration suite and go to your package and click on Add message mapping. Selcet ES Repository and select the added SAP PO System and connect.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315860i39BC59617D05D4CF/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;P&gt;&amp;nbsp;Select the required message mapping and click on next.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT size="3"&gt;&lt;FONT size="3"&gt;&lt;FONT size="3"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315870iC4DF97180E120C56/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;/FONT&gt;&lt;P&gt;&amp;nbsp;&lt;SPAN&gt;&amp;nbsp;To import Message mappings there are some prerequisites:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Based on your message mapping, you may have dependent resources such as a Function Library, Imported Archive, WSDL, or XSD&lt;/SPAN&gt;&lt;SPAN&gt;.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;WSDL and XSD files are imported automatically along with the message mapping. However, Function Libraries and Imported Archives must be imported separately.&lt;BR /&gt;&lt;BR /&gt;After selecting the message mapping, you will be able to see the list of dependent resources. You must import the required resources (Function Library and Imported Archive) first; otherwise, the message mapping cannot be imported successfully.&lt;/SPAN&gt;&lt;/FONT&gt;&lt;FONT size="3"&gt;&lt;SPAN&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/FONT&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/315877i53A9206CA311BCCA/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL class="lia-list-style-type-upper-roman"&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;STRONG&gt;Import&lt;/STRONG&gt;&lt;/STRONG&gt;&lt;STRONG&gt;ing Dependent Objects: Function Libraries&lt;/STRONG&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Create a function library artifact, click on "Upload," connect to the SAP PO system, select your function libraries, save, and then deploy.&lt;/LI&gt;&lt;LI&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316348i5137462BD33C4408/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;Create a Imported Archives artifact, click on "Upload," connect to the SAP PO system, select your Imported Archives, save, and then deploy.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316355i9EA0499ACA7D8C07/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4.&amp;nbsp;Since the dependent objects have been imported, we can now import the message mapping. Add the message&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;mapping artifact, select the ES Repository, choose the added SAP PO system, connect, select the message mapping,&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;click "Next," and then select the dependent objects that were imported as separate artifacts.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316362i9BEA0AD59756C53E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;5. Click on "Select" and choose the required function library artifact.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316363i57DC9C698EA9451C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;6. If the status shows "Already Existing," click on it and select "Reuse Existing Resource.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316364iBCDE7BB7E0CF4E66/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="image.png" style="width: 901px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316365i952872ED0742CACC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;7. Next, click on "Select" and choose the required imported archive artifact. Then, click "Submit" to import the message&amp;nbsp; &amp;nbsp; &amp;nbsp; mapping.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316368i74FE437804016483/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp;8.&amp;nbsp; Now the Message Mapping is successfully imported to Integration suite from SAP PO system.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="image.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316375iFCD9A9C31A2B1923/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="image.png" alt="image.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-1760184839"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;Migrating from SAP PO to SAP CPI goes beyond a simple technical shift—it’s an opportunity to modernize integration landscapes, adopt cloud-first patterns, and leverage the flexibility of SAP BTP. By carefully setting up connectivity through the Cloud Connector, systematically migrating message mappings, and addressing dependencies like archives and function libraries, you can ensure a smooth and reliable transition.&lt;/P&gt;&lt;P&gt;A phased migration approach, combined with thorough testing and best practices, will help minimize risk and maximize value. This journey not only preserves existing investments but also sets the stage for future-ready integrations.&lt;/P&gt;&lt;P&gt;Stay tuned for my upcoming blogs, where I’ll deep dive into adapter migration strategies and lessons learned from real project experiences. &lt;span class="lia-unicode-emoji" title=":rocket:"&gt;🚀&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/migrating-from-sap-po-to-sap-integration-suite-cpi-a-practical-guide/ba-p/14219938"/>
    <published>2025-09-19T12:54:09.309000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-complex-mapping-code-for-dimension-conversion-in-sap/ba-p/14222344</id>
    <title>Integration Advisor: complex mapping code for dimension conversion in SAP B2B</title>
    <updated>2025-09-19T14:05:02.342000+02:00</updated>
    <author>
      <name>qi_liu05</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/804584</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In many B2B integration scenarios, it’s common to encounter values that must be converted depending on a specific dimension—such as weight, length, volume, or even currency. Each of these dimensions can have multiple possible units, and the integration process must ensure that the target payload uses the correct unit and precision.&lt;/P&gt;&lt;P&gt;For instance, this article uses a weight conversion example involving &lt;STRONG&gt;kilograms (KGM)&lt;/STRONG&gt;, &lt;STRONG&gt;grams (GRM)&lt;/STRONG&gt;, and &lt;STRONG&gt;decigrams (DG)&lt;/STRONG&gt;. However, similar challenges arise with other measurements, eg. centimeters vs. meters, liters vs. milliliters, or different currency codes with varying decimal rules. Without proper handling, these mismatches can cause data errors, disrupt downstream processes, and lead to costly corrections.&lt;/P&gt;&lt;P&gt;At present, the Integration Advisor’s Mapping Guideline (MAG) does not include built-in functions for this type of unit-based calculation with dynamic precision control. However such functionality can be implemented by applying an XSLT transformation MAGs.&lt;/P&gt;&lt;P&gt;In this blog, we will explore an XSLT-based approach using the KGM/GRM/DG case as an example and the same pattern can be adapted to many other dimensions in B2B integration scenarios.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Example: Mapping Quantity with UnitCode from EDIFACT to SAP SOAP&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let´s assume that a trading partner X sends an UN/EDIFACT D.10B Purchase orders to my company, and we want to receive OrderRequest as an SOAP message.&lt;/P&gt;&lt;P&gt;In the source message, the data element “6060” quantity and “6411” measurement unit code in the segment “QTY”. And the data element “unitCode” unitCode and “CONTENT” quantity in the segment “RequestedQuantity” of the target message.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="qi_liu05_0-1758280767331.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316892i87DE18E0B3F0636A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="qi_liu05_0-1758280767331.png" alt="qi_liu05_0-1758280767331.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;We assume that my company expects the quantity with the unit KGM, therefore in order to handle a mapping from source path /ORDERS/SG29/QTY where the data element 6063 equals KGM/GRM/DG, to target path /OrderRequest/Order/OrderItem/RequestedQuantity with the attribute unitCode="KGM", we will need the following steps.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the target MIG(Message Implementation Guidelines), select and assign Codelist to the unitCode. Then qualifer the segment “RequestedQuantity” with KGM.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="qi_liu05_1-1758280767353.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/316893i60445E8611C72F9D/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="qi_liu05_1-1758280767353.png" alt="qi_liu05_1-1758280767353.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;In the Shared Code of MAG(Mapping Guidelines), input the following xslt code with the name fx_sumOfDimensionValues_in_KGM. Then it is possible to assign this shared code into mapping function for the quantity mapping.&lt;/LI&gt;&lt;/UL&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;xsl:variable name="vFraction" select="'4'" /&amp;gt;
&amp;lt;xsl:variable name="vFraString"
    select="string-join(for $i in 1 to xs:integer($vFraction) return '0', '')" /&amp;gt;
&amp;lt;xsl:variable name="vSum" select="
  if (upper-case($nodes_in[1]/D_6411) = 'GRM') then 
    xs:decimal(sum($nodes_in[1]/D_6060) div 1000)
  else if (upper-case($nodes_in[1]/D_6411) = 'DG') then 
    xs:decimal(sum($nodes_in[1]/D_6060) div 100)
  else if (upper-case($nodes_in[1]/D_6411) = 'KGM') then xs:decimal(sum($nodes_in[1]/D_6060))
  else sum($nodes_in[1]/D_6060)
"/&amp;gt;
&amp;lt;xsl:value-of select="format-number($vSum, concat('#0.', $vFraString))" /&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This snippet first defines a variable $vFraction to control the decimal precision dynamically. In this case, the value is set to 4, meaning that the final output will always display up to four decimal places. The second variable, $vFraString, creates a string of zeros corresponding to the precision length, which is later used by the format-number() function to ensure consistent formatting.&lt;/P&gt;&lt;P&gt;The heart of the logic is in the $vSum variable. Here, we inspect the unit code from the source element D_6411 and apply the appropriate conversion:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;GRM → KGM:&lt;/STRONG&gt; Divide by 1,000 (grams to kilograms)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;DG → KGM:&lt;/STRONG&gt; Divide by 100 (decigrams to kilograms)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;KGM → KGM:&lt;/STRONG&gt; No conversion needed, the value is used as-is&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Fallback:&lt;/STRONG&gt; If the unit code does not match any of the above, the raw value is used without conversion&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Finally, format-number() applies the desired precision formatting by combining #0. with the zero string generated earlier. This ensures that regardless of the original format, the resulting value in the target XML will adhere to a consistent numeric pattern—essential for downstream systems that rely on strict schema validation.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Adapting the Pattern for Other Dimensions&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Although this example focuses on weight conversion, the same approach can be applied to other measurable dimensions. For example:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Length:&lt;/STRONG&gt; mm ↔ cm ↔ m&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Volume:&lt;/STRONG&gt; ml ↔ L ↔ m³&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Currency:&lt;/STRONG&gt; adjusting for minor units (e.g., cents vs. yen)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Custom Units:&lt;/STRONG&gt; industry-specific codes with defined conversion ratios&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The main changes involve:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Adjusting the if/else if logic to account for the specific unit codes you expect in the source.&lt;/LI&gt;&lt;LI&gt;Modifying the conversion factor according to the required unit transformation.&lt;/LI&gt;&lt;LI&gt;Setting $vFraction to match the level of precision required by your target system.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;By embedding this logic directly into the MAG’s XSLT, you gain:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic Unit Handling:&lt;/STRONG&gt; No need to pre-normalize values outside the integration flow.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Precision Control:&lt;/STRONG&gt; Flexible decimal formatting without post-processing.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Reusability:&lt;/STRONG&gt; The pattern can be packaged as a reusable function and applied across multiple mappings.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach ensures your integration not only transforms the data structure but also intelligently adapts values, reducing manual intervention and preventing costly data mismatches.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/integration-advisor-complex-mapping-code-for-dimension-conversion-in-sap/ba-p/14222344"/>
    <published>2025-09-19T14:05:02.342000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/migrating-integration-flows-with-jdbc-on-cloud-foundry-while-using-sap-hana/ba-p/14223891</id>
    <title>Migrating Integration Flows with JDBC on Cloud Foundry While Using SAP HANA on Neo</title>
    <updated>2025-09-22T10:58:47.053000+02:00</updated>
    <author>
      <name>hs_7</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1913085</uri>
    </author>
    <content>&lt;P&gt;Migrating integration flows from SAP's Neo environment to Cloud Foundry (CF) can be a complex process, especially when dealing with extensive JDBC requirements. This blog post outlines a practical example of how to manage such a migration while keeping the backend database in Neo.&lt;/P&gt;&lt;P&gt;#Use-case&lt;/P&gt;&lt;P&gt;In scenarios where the backend database is hosted on Neo, you may prefer to migrate it at the very end of the transition process. The outlined approach allows all migrated integration flows in Cloud Foundry and existing flows in Neo to continue interacting with the Neo database seamlessly.&lt;/P&gt;&lt;P&gt;To begin, ensure your HANA service is properly set up in your Neo account. This setup is crucial for maintaining database connectivity during the migration process.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="(Sample) Active HANA service on Neo" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317766iE9836E220A281919/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_24-1758530925452.png" alt="(Sample) Active HANA service on Neo" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;(Sample) Active HANA service on Neo&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;# Migration Procedure&lt;/P&gt;&lt;P&gt;1. Exposing HANA Service via SCC&lt;BR /&gt;Utilize the Service Channel Concept (SCC) to expose your HANA service. This method ensures that both migrated and existing integration flows can access the Neo database without interruption. See&amp;nbsp; &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-neo/configure-service-channel-for-sap-hana-database" target="_blank" rel="noopener noreferrer"&gt;Configure a Service Channel for an SAP HANA Database.&lt;/A&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hs_7_0-1758531515932.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317787i3B2463216A4D04C9/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_0-1758531515932.png" alt="hs_7_0-1758531515932.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;P&gt;3. Configuring JDBC Data Source in Cloud Integration&lt;/P&gt;&lt;P&gt;Next, configure the JDBC data source within the Cloud Integration capability environment. This step is essential for establishing a reliable connection to the &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/jdbc-for-sap-hana-service-neo?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Neo&lt;/A&gt; database. To add a JDBC data source, see &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/managing-jdbc-data-sources?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Manage JDBC&amp;nbsp; Data Source&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hs_7_27-1758531149256.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317775i48E8C900AAB89452/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_27-1758531149256.png" alt="hs_7_27-1758531149256.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;#Sample Integration Flow&lt;/P&gt;&lt;P&gt;Here's a sample integration flow designed to read data from an employee table in the Neo database. This example demonstrates how integration flows can be executed successfully, ensuring data consistency and accessibility.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hs_7_28-1758531187408.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317776i1F4CDC19A715B36C/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_28-1758531187408.png" alt="hs_7_28-1758531187408.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hs_7_29-1758531187411.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317777i3C202460C3F5FB7F/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_29-1758531187411.png" alt="hs_7_29-1758531187411.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Execution Results&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The execution results confirm that the integration flow can consume the HANA database on Neo via the SCC service channel.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hs_7_30-1758531187415.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317778i34CA2B959CB78131/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_30-1758531187415.png" alt="hs_7_30-1758531187415.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="hs_7_31-1758531187417.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/317780i9E868A0E61580643/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="hs_7_31-1758531187417.png" alt="hs_7_31-1758531187417.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In summary, this approach allows organizations to maintain database connectivity during the migration of integration flows from Neo to Cloud Foundry, ensuring a smooth transition without immediate database migration.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/migrating-integration-flows-with-jdbc-on-cloud-foundry-while-using-sap-hana/ba-p/14223891"/>
    <published>2025-09-22T10:58:47.053000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-integraci%C3%B3n-inteligente-control-financiero-y-sostenibilidad/ba-p/14224279</id>
    <title>🚀 SAP BTP: integración inteligente, control financiero y sostenibilidad</title>
    <updated>2025-09-22T15:45:22.446000+02:00</updated>
    <author>
      <name>FedericoTokman</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/150724</uri>
    </author>
    <content>&lt;H3 id="ember4681" id="toc-hId-1890035522"&gt;Expansión de SAP BTP hacia los marketplaces de hyperscalers (AWS, Azure, Google Cloud)&lt;/H3&gt;&lt;P class=""&gt;SAP ha anunciado que algunos servicios de SAP BTP estarán disponibles en los &lt;EM&gt;hyperscaler marketplaces&lt;/EM&gt; en la segunda mitad de 2025. Esto permite que clientes compren y consuman servicios de BTP directamente desde AWS Marketplace, Azure Marketplace, etc., lo que puede simplificar licenciamiento y despliegue. Mejora la flexibilidad en dónde ejecutar servicios, y posiblemente reduzca latencias si se usan infraestructuras cercanas. También implica que los equipos de finanzas deberán adaptarse a nuevos modelos de facturación. Los clientes podrán elegir entre usar BTP desde SAP directamente o vía Marketplace.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas&lt;/STRONG&gt;: más agilidad al aprovisionar servicios, posiblemente mejores acuerdos comerciales locales, menor fricción operativa, alineación con estrategias multicloud/híbridas.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://aws.amazon.com/marketplace/pp/prodview-k5lexy6il2mfq" target="_self" rel="nofollow noopener noreferrer"&gt;Mas&amp;nbsp;información &lt;/A&gt;/ &lt;A class="" href="https://azuremarketplace.microsoft.com/es-es/marketplace/apps/sapus.btp_us?tab=overview" target="_self" rel="nofollow noopener noreferrer"&gt;https://azuremarketplace.microsoft.com/es-es/marketplace/apps/sapus.btp_us?tab=overview&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Nuevas capacidades en SAP HANA Cloud: migración selectiva de objetos, gobernanza de costos y monitoreo granular&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;Se han anunciado mejoras de HANA Cloud que permiten migrar objetos específicos de base de datos de un HANA on-premise o clásico hacia HANA Cloud de forma selectiva (no toda la base). También habrá mayor visibilidad del consumo, gobernanza financiera y monitoreo más granular del uso de recursos. Esto facilita planes de modernización (‘&lt;EM&gt;clean core&lt;/EM&gt;’) al permitir mover por piezas. Mejora del control de costos operacionales, menor riesgo de sobredimensionamiento. Ideal para empresas que quieren innovar poco a poco.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas&lt;/STRONG&gt;: menos riesgo al migrar; se puede hacer roll-out gradual; permite optimizar qué partes de datos o sistemas conviene mover al cloud; optimización del gasto.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://www.sap.com/spain/products/data-cloud/hana/cloud-migration.html" target="_self" rel="noopener noreferrer"&gt;Mas información&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;SAP Customer Identity and Access Management (CIAM) disponible en SAP BTP bajo el Enterprise Agreement&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;CIAM (Customer Identity &amp;amp; Access Management) ahora está incluido como parte de SAP BTP bajo el contrato Enterprise Agreement. Esto aporta una solución multitenant, cloud-nativa para manejar identidades de clientes o socios, cumplimiento, privacidad y personalización. Reduce la necesidad de soluciones externas de identidad. Mejora la seguridad de datos de clientes y la experiencia de usuario. Puede alinearse con regulaciones europeas, latinoamericanas, etc., para gestión de consentimiento y protección de datos.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas&lt;/STRONG&gt;: menos componentes externos, integración más directa con otras herramientas de SAP, potencial reducción de coste de licenciamiento externo, mayor coherencia en políticas de identidad, visibilidad y auditoría centralizadas.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://www.sap.com/spain/products/technology-platform/customer-identity.html" target="_self" rel="noopener noreferrer"&gt;Mas información&lt;/A&gt;&lt;/P&gt;&lt;H3 id="ember4693" id="toc-hId-1693522017"&gt;Extensibility Wizard” para SAP Build y extensiones guiadas desde SAP Business Suite / SAP S/4HANA&lt;/H3&gt;&lt;P class=""&gt;SAP ha introducido un Extensibility Wizard&amp;nbsp;(asistente de extensibilidad) que guía el desarrollo de extensiones tanto para SAP Business Suite como para SAP S/4HANA Cloud. Esto ayuda a estandarizar la forma de extender aplicaciones, asegurando que las extensiones sean compatibles con futuras actualizaciones. Facilita que equipos menos experimentados con ABAP o con extension-points sigan buenas prácticas. Reduce el riesgo de “&lt;EM&gt;custom code spaghetti&lt;/EM&gt;”. Puede acelerar entregas menores/incrementales sin comprometer el core.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas&lt;/STRONG&gt;: menor tiempo de desarrollo, menos errores, mayor mantenibilidad, mejor preparación para upgrades, posibilidad de que las extensiones sean menos costosas de mantener.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/what-s-new-in-sap-btp-q2-2025/ba-p/14145899" target="_self"&gt;Mas información&lt;/A&gt;&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Integraciones nuevas-predefinidas / adapters adicionales en SAP Integration Suite&lt;/STRONG&gt;&lt;/P&gt;&lt;P class=""&gt;SAP Integration Suite está incorporando nuevos adapters (conectores) para tecnologías como IBM MQ, Google Cloud Storage, Salesforce PubSub, Anaplan, Snowflake, etc. Esto amplía la capacidad out-of-the-box de conectar SAP con sistemas modernos de datos, aplicaciones SaaS, servicios de mensajería. Se suma la mejora de experiencia de usuario para descubrir contenido preconstruido, recomendaciones, etc. Facilita integraciones híbridas o entre SAP y no-SAP con menor customización.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas&lt;/STRONG&gt;: ahorro de tiempo, mayor estandarización, menor probabilidad de errores en adaptadores hechos a medida, mantenimiento más sencillo. También reduce la barrera para integrar nuevos partners o servicios externos.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/connect-amp-go-integration-updates-for-2025-1/ba-p/14164407" target="_self"&gt;Mas información&lt;/A&gt;&lt;/P&gt;&lt;H3 id="ember4701" id="toc-hId-1497008512"&gt;Mejoras de visibilidad y gobernanza financiera / monitoreo de consumo en los servicios de BTP&lt;/H3&gt;&lt;P class=""&gt;SAP está reforzando las herramientas de monitoreo del consumo, visibilidad de costos y gobernanza financiera en SAP BTP, especialmente para HANA Cloud, integración, servicios que consumen recursos. Esto permite a las empresas anticipar gastos (“forecast”) y evitar sorpresas en uso excesivo. Mejores dashboards, alertas, métricas más finas de uso, consumo por objeto o servicio, etc. También se alinea con políticas internas de presupuestos, auditorías y optimización de costos.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas&lt;/STRONG&gt;: mayor previsibilidad financiera, identificación temprana de cuellos de botella o servicios sub-utilizados, optimización del gasto, facilitar decisiones de cierre vs extensión del servicio.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/enhanced-finops-capabilities-for-sap-btp/ba-p/14113797" target="_self"&gt;Mas información&lt;/A&gt;&lt;/P&gt;&lt;H3 id="ember4705" id="toc-hId-1300495007"&gt;Estrategia de sostenibilidad con SAP BTP: Control Tower, Footprint Management y Green Ledger&lt;/H3&gt;&lt;P class=""&gt;SAP está reforzando su portafolio de sostenibilidad, con herramientas como SAP Sustainability Control Tower, Sustainability Footprint Management&amp;nbsp;y SAP Green Ledger, integradas con SAP BTP y SAP S/4HANA Cloud. Estas soluciones permiten capturar datos ESG (ambientales, sociales y de gobierno), automatizar reportes, calcular huella de carbono por producto, y llevar métricas de sostenibilidad al mismo nivel que los reportes financieros. Para organizaciones con regulación creciente en estándares ESG, estas capacidades ayudan a cumplir normativas como CSRD y similares, además de mejorar reputación.&lt;/P&gt;&lt;P class=""&gt;&lt;STRONG&gt;Ventajas:&lt;/STRONG&gt; visibilidad centralizada de datos ESG, capacidad de reacción ante exigencias regulatorias, posibilidad de incorporar responsabilidades ambientales en decisiones operativas, vínculo más claro entre sostenibilidad y estrategia de negocio, potencial ahorro a mediano plazo si se optimizan procesos, menos riesgos legales o reputacionales.&lt;/P&gt;&lt;P class=""&gt;&lt;span class="lia-unicode-emoji" title=":link:"&gt;🔗&lt;/span&gt; &lt;A class="" href="https://www.sap.com/products/scm/sustainability-control-tower.html" target="_self" rel="noopener noreferrer"&gt;Mas información&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-btp-integraci%C3%B3n-inteligente-control-financiero-y-sostenibilidad/ba-p/14224279"/>
    <published>2025-09-22T15:45:22.446000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/idocs-are-still-safe-for-sap-s-4hana-sap-clean-core-extensibility-level-b/ba-p/14225439</id>
    <title>IDOCs are Still Safe for SAP S/4HANA - SAP Clean Core Extensibility Level B</title>
    <updated>2025-09-23T11:35:28.820000+02:00</updated>
    <author>
      <name>MichalKrawczyk</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45785</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1760984392"&gt;Intro&amp;nbsp;&lt;/H2&gt;&lt;P&gt;IDOCs are safe to use in SAP S/4HANA programs—and if anyone tells you otherwise, point them to this blog to learn more. IDOCs are now officially part of &lt;STRONG&gt;SAP Clean Core Extensibility!&lt;/STRONG&gt; That’s the big news from updated SAP Guidelines (OSS Note &lt;STRONG&gt;3578329 – Frameworks, Technologies and Development Patterns in Context of Clean Core Extensibility&lt;/STRONG&gt;).&lt;/P&gt;&lt;P&gt;This ends the myth that IDOCs are “dead.” They are not. They’re preserved as &lt;STRONG&gt;SAP Clean Core Level B&amp;nbsp;Extensibility&lt;/STRONG&gt;, which means your existing IDOC investments are safe.&amp;nbsp;Let’s explore four perspectives—&lt;STRONG&gt;integration, monitoring and error handling, performance, and testing&lt;/STRONG&gt;—to see where APIs are recommended first, and where IDOCs still bring value.&lt;/P&gt;&lt;H2 id="toc-hId-1564470887"&gt;1. Integration Perspective&lt;/H2&gt;&lt;P&gt;SAP’s recommendation for new development in S/4HANA is clear: use &lt;STRONG&gt;modern integration technologies&lt;/STRONG&gt; such as APIs, events, or OData services. They are the strategic direction and best fit for greenfield or transformation projects. That said, not all projects require reinvention. If your business processes remain largely the same as in ECC, and the goal is to &lt;STRONG&gt;reduce cost and risk&lt;/STRONG&gt;, IDOCs can still be used. They are &lt;STRONG&gt;not prohibited&lt;/STRONG&gt;, and as long as an IDOC type is not listed as deprecated in the &lt;STRONG&gt;SAP Simplification List&lt;/STRONG&gt;, it is safe:&lt;BR /&gt;&lt;A href="https://help.sap.com/docs/btc/lean-sdt-best-practices/sap-s-4hana-simplification-analysis?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/btc/lean-sdt-best-practices/sap-s-4hana-simplification-analysis?locale=en-US&amp;nbsp;&lt;/A&gt;Because IDOCs are now Clean Core Level B&amp;nbsp;Extensibility, continuing with them is fully supported in &lt;STRONG&gt;SAP S/4HANA on-premise&lt;/STRONG&gt; and &lt;STRONG&gt;SAP S/4HANA Private Cloud&lt;/STRONG&gt;. They offer a pragmatic path to de-risk projects and leverage existing know-how. &lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="integration.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318770i4D4EF460ACC92791/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="integration.png" alt="integration.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1367957382"&gt;2. Monitoring and Error Handling Perspective&lt;/H2&gt;&lt;P&gt;For new interfaces, SAP recommends using &lt;STRONG&gt;AIF (Application Interface Framework)&lt;/STRONG&gt; to handle monitoring, error management, and business validations. AIF provides a powerful, unified monitoring layer, and in many cases it comes &lt;STRONG&gt;license-free&lt;/STRONG&gt; (for standard SAP interfaces delivered in namespaces like /SDSLS or /LEEDI, or in CFIN, Document Compliance, or S/4HANA Public Cloud). Where APIs are deployed, AIF bridges the gap between technical payloads and business-friendly monitoring.&lt;/P&gt;&lt;P&gt;IDOCs still have a strong card here: their monitoring capabilities are mature, well-known, and integrated into standard SAP transactions. Functional users know how to work with WE02, BD87, and standard reprocessing flows. This means less training, less overhead, and faster resolution in day-to-day operations.&lt;/P&gt;&lt;P&gt;In other words: &lt;STRONG&gt;AIF is recommended&lt;/STRONG&gt;, but IDOCs deliver proven stability in monitoring and error handling.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="monitoring.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318761i46911CE9A0AC3FD9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="monitoring.png" alt="monitoring.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1171443877"&gt;3. Performance Perspective&lt;/H2&gt;&lt;P&gt;APIs are the recommended way forward, but they come with a structural tradeoff: their payloads are larger and typically handle transactions individually. This makes them more verbose and sometimes less efficient for high-volume use cases.&amp;nbsp;IDOCs, in contrast, have long supported &lt;STRONG&gt;bundling, batching, and parallel processing&lt;/STRONG&gt; at scale. They’ve been the backbone of high-volume EDI and SAP-to-SAP integrations for decades, and their ability to handle millions of documents daily is field-proven. So while APIs are the strategic choice for new designs, &lt;STRONG&gt;IDOCs remain a safe performance option for scenarios with heavy data throughput&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="performance.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318764i5B1281FABD0691EC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="performance.png" alt="performance.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-974930372"&gt;4. Testing Perspective&lt;/H2&gt;&lt;P&gt;Testing support for APIs exists (for example, with &lt;STRONG&gt;SXI_MONITOR&lt;/STRONG&gt;), but it is more technical and often requires additional training for functional teams. For IDOCs, simulation and reprocessing are familiar to almost every SAP functional consultant. Tools like WE19 and BD87 make IDOC testing and troubleshooting accessible, reducing dependency on specialist skills.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="testing.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/318765i9A532F171BFD6DE4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="testing.png" alt="testing.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For projects that need to &lt;STRONG&gt;standardize and automate testing across both APIs and IDOCs&lt;/STRONG&gt;, solutions like &lt;STRONG&gt;Int4 Suite&lt;/STRONG&gt; provide simulation and test automation capabilities that unify all SAP integration scenarios. You can learn more on how to test and simulate SAP integrations in this SAP learning Course: &lt;A href="https://learning.sap.com/courses/avoid-sap-s-4hana-project-delays-with-third-party-systems-service-virtualization?url_id=text-former-openSAP-course" target="_self" rel="noopener noreferrer"&gt;Avoid SAP S/4HANA Project Delays with Third-Party Systems Service Virtualization&lt;/A&gt;&amp;nbsp;So while &lt;STRONG&gt;APIs are recommended for new developments&lt;/STRONG&gt;, IDOCs still offer &lt;STRONG&gt;ease of testing and proven tooling&lt;/STRONG&gt;, especially in brownfield projects.&lt;/P&gt;&lt;H2 id="toc-hId-778416867"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;The strategic path forward in SAP S/4HANA is built on APIs, events, and frameworks like AIF. That’s &lt;STRONG&gt;the official recommendation&lt;/STRONG&gt;, and it should guide greenfield and transformation projects. But IDOCs are far from obsolete. They are &lt;STRONG&gt;officially part of Clean Core extensibility&lt;/STRONG&gt;, safe to use in both on-premise and private cloud, and carry unique advantages in performance, monitoring, and ease of testing. That makes them not only supported, but still a pragmatic and safe choice when the situation calls for stability, cost reduction, and risk mitigation.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-members/idocs-are-still-safe-for-sap-s-4hana-sap-clean-core-extensibility-level-b/ba-p/14225439"/>
    <published>2025-09-23T11:35:28.820000+02:00</published>
  </entry>
</feed>
