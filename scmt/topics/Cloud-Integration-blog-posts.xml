<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/Cloud-Integration-blog-posts.xml</id>
  <title>SAP Community - Cloud Integration</title>
  <updated>2025-08-26T17:00:09.655643+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/Cloud Integration/pd-p/67837800100800006801" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>Cloud Integration blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-cpi-dynamic-router-with-external-rule-set-using-camel-simple/ba-p/14172873</id>
    <title>SAP CPI Dynamic Router with External Rule Set using Camel Simple Expressions</title>
    <updated>2025-08-06T06:40:26.867000+02:00</updated>
    <author>
      <name>yeeloon-khoo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/184407</uri>
    </author>
    <content>&lt;H2 id="ember1061" id="toc-hId-1736887435"&gt;Intro&lt;/H2&gt;&lt;P class=""&gt;Routing in CPI can get messy. As more routing branches are added, maintaining them becomes a headache, especially when conditions get complex or frequently change.&lt;/P&gt;&lt;H2 id="toc-hId-1540373930"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="ember1063" id="toc-hId-1343860425"&gt;Background / Problem&lt;/H2&gt;&lt;P class=""&gt;I've explored a few ways to reduce this pain.&lt;/P&gt;&lt;P class=""&gt;One is &lt;STRONG&gt;convention-based processDirect routing&lt;/STRONG&gt;, e.g. building endpoint dynamically from headers like: /PD_${header.mestyp}_${header.rcvprn}. It’s simple and router-free, but can’t handle complex routing conditions.&lt;/P&gt;&lt;P class=""&gt;Another is using &lt;STRONG&gt;value mapping&lt;/STRONG&gt; for routing, lookup a field to get the processDirect path. See link at [Ref 1] &amp;amp; [Ref 2]. But VM has serious limits:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Only supports &lt;STRONG&gt;single &lt;/STRONG&gt;field matching&lt;/LI&gt;&lt;LI&gt;No clean way to do &lt;STRONG&gt;AND&lt;/STRONG&gt; logic without messy field concatenation&lt;/LI&gt;&lt;LI&gt;Can’t return &lt;STRONG&gt;multiple &lt;/STRONG&gt;matching rows&lt;/LI&gt;&lt;LI&gt;No support for &lt;STRONG&gt;rich conditions&lt;/STRONG&gt; like contains, startsWith, greaterThan, etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;If you try to simulate those rich conditions in VM, it gets hacky, need to embed pseudo-logic in values, then decode with Groovy. That’s fragile and hard to maintain.&lt;/P&gt;&lt;P class=""&gt;You could build your own rule engine, but that becomes a long-term maintenance trap. You’ll keep adding custom operators, fixing your own rule evaluation engine, and it won’t be standard. I wouldn’t go that route.&lt;/P&gt;&lt;H2 id="toc-hId-1147346920"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="ember1070" id="toc-hId-950833415"&gt;Inspiration&lt;/H2&gt;&lt;P class=""&gt;While revisiting the &lt;STRONG&gt;Dynamic Router pattern&lt;/STRONG&gt; from Gregor Hohpe’s EIP book and Apache Camel, I realized: CPI &lt;EM&gt;should&lt;/EM&gt; be able to support dynamic, flexible routing, if the conditions are externalized and evaluated at runtime.&lt;/P&gt;&lt;P class=""&gt;The core idea of a true Dynamic Router:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Rules are externally maintained&lt;/LI&gt;&lt;LI&gt;Easy to add/remove/update&lt;/LI&gt;&lt;LI&gt;Supports rich conditions (not just equals)&lt;/LI&gt;&lt;LI&gt;Still simple to implement&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Camel is the backbone of CPI, so I turned to &lt;STRONG&gt;Camel’s Simple Expression&lt;/STRONG&gt; language.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1075" id="toc-hId-754319910"&gt;Research&lt;/H2&gt;&lt;P class=""&gt;After revisit a great blog [Ref 3] by Eng Swee, found out able to use evaluate() method to get value using Groovy, however, it doesn't return single true or false.&lt;/P&gt;&lt;P class=""&gt;Until at [Ref 4] Camel SimpleBuilder JavaDoc, found the method: matches()&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1078" id="toc-hId-557806405"&gt;&lt;FONT size="5"&gt;Discovery&lt;/FONT&gt;&lt;/H2&gt;&lt;P class=""&gt;With SimpleBuilder.matches(), I can evaluate conditions like below with headers/properties in Groovy to Boolean true/false. Please note that for matches() method, Both ("and", "or") is not working, have to use actual operator (&amp;amp;&amp;amp;, II). Need double equal sign. Below 2 examples:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;${header.type} == 'SO' &amp;amp;&amp;amp; ${header.class} == 'A'
${header.partNumber.startsWith('FG')}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;This opened up new possibilities and a clean path: I can store rules as just two fields:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;endpoint (processDirect path)&lt;/LI&gt;&lt;LI&gt;condition (simple expression)&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Evaluate them in Groovy using matches(). If it returns true, route to that endpoint.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1083" id="toc-hId-361292900"&gt;&lt;FONT size="5"&gt;How it work: Dynamic Simple Expression matches()&lt;/FONT&gt;&lt;/H2&gt;&lt;P class=""&gt;You can build "Simple Expression Tester" to test simple expression from Postman.&lt;/P&gt;&lt;P class=""&gt;Step 1: Build an iFlow like below. Allowed Header(s) must be *&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_1-1754452911299.png" style="width: 610px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296959iE1CC90D103F174B7/image-dimensions/610x314?v=v2" width="610" height="314" role="button" title="yeeloonkhoo_1-1754452911299.png" alt="yeeloonkhoo_1-1754452911299.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 2: Add the script testSimpleExpression.groovy that do evaluate() and matches() on some Simple Expression:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import org.apache.camel.Exchange
import org.apache.camel.builder.SimpleBuilder

def Message processData(Message message) {
    def headers = message.getHeaders()
  
    Exchange ex = message.exchange

    def evaluateSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).evaluate(ex, String)
    }

    def matchSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).matches(ex)
    }

    def condition = evaluateSimple('${header.condition}')
    def result = matchSimple(condition)

    def output = "condition: " + condition + "\r\n" + "result: " + result
    message.setBody(output)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 3: Positive Test Run. Header class &amp;amp; type matched the condition, result = true&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_19-1754453865709.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296978i331C476B9A50F332/image-dimensions/702x545?v=v2" width="702" height="545" role="button" title="yeeloonkhoo_19-1754453865709.png" alt="yeeloonkhoo_19-1754453865709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 4: Negative Test Run. Changed class from A to B, then result = false&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_20-1754453899438.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296979i3FA323F0B16A1409/image-dimensions/719x598?v=v2" width="719" height="598" role="button" title="yeeloonkhoo_20-1754453899438.png" alt="yeeloonkhoo_20-1754453899438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 5: Tried with some other method like startsWith() still work. I not tried all possible method, however believe as long as the method work in Camel Simple Expression, will work in this iFlow too.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_21-1754453959882.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296980i7CFDCD43BABBDEA7/image-dimensions/732x554?v=v2" width="732" height="554" role="button" title="yeeloonkhoo_21-1754453959882.png" alt="yeeloonkhoo_21-1754453959882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Dynamic Router with External Rule Set (Simple Expression)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;After testing and a few iterations, this worked well. So now ready to build a mini rule engine that is simple, dynamic, and avoids all the earlier pain points.&lt;/P&gt;&lt;P class=""&gt;Step 1: Below will be our rule set in JSON, telling the processDirect endpoint and condition. The name field is just as an identifier for the rule.&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
    {
        "name": "ReceiverA",
        "endpoint": "/PD_SO_A",
        "condition": "${header.type} == 'SO' &amp;amp;&amp;amp; ${header.class} == 'A'"
    },
    {
        "name": "ReceiverB",
        "endpoint": "/PD_PO_B",
        "condition": "${header.type} == 'PO' &amp;amp;&amp;amp; ${header.class} == 'B'"
    }
]&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Step 2: Build below 'Dynamic Router' iflow. For demo purpose, the sender is HTTP adapter. In actual you may change to processDirect. Allowed Header(s) must be *&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_5-1754453163834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296963i149FF94F674A7990/image-size/large?v=v2&amp;amp;px=999" role="button" title="yeeloonkhoo_5-1754453163834.png" alt="yeeloonkhoo_5-1754453163834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 3: That "getPDSimpleRule" script, for now you can just use content modifier set static JSON rule set to property "simpleRule". We going to change to Partner Directory later.&lt;/P&gt;&lt;P class=""&gt;Step 4: Script "doDynamicRouting". This script loop each rule, if condition matched, set the endpoint in property, also do logging in custom headers for traceability.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper
import org.apache.camel.Exchange
import org.apache.camel.builder.SimpleBuilder

def Message processData(Message message) {
    def messageLog = messageLogFactory.getMessageLog(message)
    def properties = message.getProperties()

    Exchange ex = message.exchange
    def matchSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).matches(ex)
    }
    def simpleRule = message.getProperty("simpleRule")
    def simpleRuleJSON = new JsonSlurper().parseText(simpleRule)

    properties.put("endpoint", "/not_found_from_rule")

    for(rule in simpleRuleJSON){
        def name = rule.name ?: ""
        def endpoint = rule.endpoint ?: ""
        def condition = rule.condition ?: ""

        def result = matchSimple(condition)

        if(result == true){
            messageLog.addCustomHeaderProperty("name", name)
            messageLog.addCustomHeaderProperty("condition", condition)
            messageLog.addCustomHeaderProperty("endpoint", endpoint)

            properties.put("endpoint", endpoint)
            break
        }
    }

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Step 5: For demo, build 2 different receivers with processDirect. Each with sender address: /PD_SO_A and /PD_PO_B.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_6-1754453294329.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296964i7957BD1352DE11D6/image-dimensions/722x276?v=v2" width="722" height="276" role="button" title="yeeloonkhoo_6-1754453294329.png" alt="yeeloonkhoo_6-1754453294329.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_7-1754453301245.png" style="width: 711px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296965i43FDDC73DEA99C0B/image-dimensions/711x245?v=v2" width="711" height="245" role="button" title="yeeloonkhoo_7-1754453301245.png" alt="yeeloonkhoo_7-1754453301245.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Positive Test Run (Go to ReceiverA)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_8-1754453332394.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296966i6866E31217303DD0/image-dimensions/722x353?v=v2" width="722" height="353" role="button" title="yeeloonkhoo_8-1754453332394.png" alt="yeeloonkhoo_8-1754453332394.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_9-1754453339676.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296967i8112BC8CDBF0E9C8/image-dimensions/721x226?v=v2" width="721" height="226" role="button" title="yeeloonkhoo_9-1754453339676.png" alt="yeeloonkhoo_9-1754453339676.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Positive Test Run (Go to ReceiverB)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_10-1754453363443.png" style="width: 729px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296968i3A1E7D6F8D33D8ED/image-dimensions/729x382?v=v2" width="729" height="382" role="button" title="yeeloonkhoo_10-1754453363443.png" alt="yeeloonkhoo_10-1754453363443.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_11-1754453370341.png" style="width: 731px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296969i698259A4BF161D58/image-dimensions/731x230?v=v2" width="731" height="230" role="button" title="yeeloonkhoo_11-1754453370341.png" alt="yeeloonkhoo_11-1754453370341.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Negative Test Run (When no rule matches)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_12-1754453411369.png" style="width: 723px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296970i8FF09AC86EE09D82/image-dimensions/723x350?v=v2" width="723" height="350" role="button" title="yeeloonkhoo_12-1754453411369.png" alt="yeeloonkhoo_12-1754453411369.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="6"&gt;&lt;STRONG&gt;Where To Store The Rule Set?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;One possible way is to store Json rule set in Partner Directory. SAP CPI do have UI to upload JSON to Partner Directory. Below are steps to upload JSON to Partner Directory:&lt;/P&gt;&lt;P&gt;Step 1: At CPI Monitor, go to 'Partner Directory'&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_13-1754453448667.png" style="width: 726px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296971i4FCA0935EEB344BF/image-dimensions/726x393?v=v2" width="726" height="393" role="button" title="yeeloonkhoo_13-1754453448667.png" alt="yeeloonkhoo_13-1754453448667.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 2: Click '+' to add:&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_14-1754453473223.png" style="width: 727px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296972iEC35698C02872843/image-dimensions/727x250?v=v2" width="727" height="250" role="button" title="yeeloonkhoo_14-1754453473223.png" alt="yeeloonkhoo_14-1754453473223.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 3: Maintain like below, browse to JSON rule set file, then 'Create'.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_15-1754453490322.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296973iF6E60BA3CCB0190E/image-dimensions/719x408?v=v2" width="719" height="408" role="button" title="yeeloonkhoo_15-1754453490322.png" alt="yeeloonkhoo_15-1754453490322.png" /&gt;&lt;/span&gt;&lt;P class=""&gt;Step 4: After maintain, you should see like below:&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_16-1754453515700.png" style="width: 725px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296974iE72E49A562C64EEC/image-dimensions/725x281?v=v2" width="725" height="281" role="button" title="yeeloonkhoo_16-1754453515700.png" alt="yeeloonkhoo_16-1754453515700.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 5: Replace the step 'getPDSimpleRule' with below script. This script get simpleRule JSON from Partner Directory.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.pd.PartnerDirectoryService
import com.sap.it.api.ITApiFactory
import com.sap.it.api.pd.BinaryData

def Message processData(Message message) {
    def service = ITApiFactory.getApi(PartnerDirectoryService.class, null);
    if(service == null){
        throw new IllegalStateException("Partner Directory Service not found");
    }

    def simpleRuleData = service.getParameter("SimpleRule", "DynamicRouter" , BinaryData.class)
    def simpleRule = new String(simpleRuleData.getData())

    message.setProperty("simpleRule", simpleRule)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Step 6: If future need to maintain the JSON rule set, come here, Edit..&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_17-1754453602659.png" style="width: 731px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296975i3E420371E824C31B/image-dimensions/731x463?v=v2" width="731" height="463" role="button" title="yeeloonkhoo_17-1754453602659.png" alt="yeeloonkhoo_17-1754453602659.png" /&gt;&lt;/span&gt;&lt;P&gt;then just Browse and upload updated JSON rule file. Filename doesn't matter, Partner Directory will auto rename.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_18-1754453622241.png" style="width: 714px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296976i102DE7669A18D00C/image-dimensions/714x369?v=v2" width="714" height="369" role="button" title="yeeloonkhoo_18-1754453622241.png" alt="yeeloonkhoo_18-1754453622241.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="6"&gt;&lt;STRONG&gt;Closing Summary&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This approach doesn’t aim to replace complex rule engines, but for many real-world routing needs, it strikes the right balance: flexible, simple, and maintainable. If you’ve struggled with hardcoded routers or limited value mappings in CPI, this might be a cleaner path forward.&lt;/P&gt;&lt;P&gt;What do you think about this approach?&lt;/P&gt;&lt;P&gt;If you’ve tackled similar routing challenges in CPI, I’d be curious how you approached it. Feel free to share your thoughts, improvements, or alternative ideas.&lt;/P&gt;&lt;P&gt;Disclaimer: This is a pattern I sparked from EIP pattern(Dynamic Router) and made workable in CPI, but it hasn’t been used in real production environments yet. Use it at your own discretion.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;References&lt;/FONT&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;[Ref 1] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/idoc-dispatching-use-case-for-the-processdirect-adapter/ba-p/13384618" target="_self"&gt;IDOC Dispatching - Use case for the ProcessDirect Adapter&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/98357"&gt;@ArielBravo&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 2] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-idoc-receiver-handler/ba-p/13514402" target="_self"&gt;SAP Cloud Integration IDoc Receiver Handler&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/218793"&gt;@aayushaggarwal&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 3] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/using-camel-s-simple-in-cpi-groovy-scripts/ba-p/13367923" target="_self"&gt;Using Camel's Simple in CPI Groovy scripts&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/166843"&gt;@engswee&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 4] &lt;A href="https://www.javadoc.io/doc/org.apache.camel/camel-core/2.15.0/org/apache/camel/builder/SimpleBuilder.html#matches(org.apache.camel.Exchange)" target="_self" rel="nofollow noopener noreferrer"&gt;Class SimpleBuilder JavaDoc&lt;/A&gt;&amp;nbsp;from Apache Camel&lt;/P&gt;&lt;P&gt;[Ref 5] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/eipincpi-dynamic-router/ba-p/13437056" target="_self"&gt;EIPinCPI - Dynamic Router&lt;/A&gt;&amp;nbsp;&amp;amp; &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/eipincpi-message-dispatcher/ba-p/13460165" target="_self"&gt;EIPinCPI - Message Dispatcher&lt;/A&gt;&amp;nbsp;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/169903"&gt;@bhalchandraswcg&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 6] &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/get-to-know-camel-s-simple-expression-language-in-sap-cloud-integration/ba-p/13292822" target="_self"&gt;Get to know Camel’s Simple expression language in SAP Cloud Integration&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/40"&gt;@MortenWittrock&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 7]&amp;nbsp;&lt;A href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/DynamicRouter.html" target="_self" rel="nofollow noopener noreferrer"&gt;DynamicRouter EIP&lt;/A&gt;&amp;nbsp;from Enterprise Integration Patterns (&lt;A href="https://www.enterpriseintegrationpatterns.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.enterpriseintegrationpatterns.com/&lt;/A&gt;)&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cpi-dynamic-router-with-external-rule-set-using-camel-simple/ba-p/14172873"/>
    <published>2025-08-06T06:40:26.867000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/optimized-idoc-routing-in-sap-ci-with-value-mapping-and-groovy-based/ba-p/14164335</id>
    <title>Optimized IDoc Routing in SAP CI with Value Mapping and Groovy-Based Receiver Determination</title>
    <updated>2025-08-08T10:07:51.299000+02:00</updated>
    <author>
      <name>ShreyasShenoy07</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1510706</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736018569"&gt;&lt;STRONG&gt;Target Audience&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This blog is primarily intended for the SAP Integration community seeking a strategy for &lt;STRONG&gt;routing outbound IDoc flows&lt;/STRONG&gt; from SAP ECC or S/4HANA systems—particularly for those migrating from &lt;STRONG&gt;SAP PI/PO to SAP Cloud Integration (Formerly known as SAP Cloud Platform Integration or SAP CPI)&lt;/STRONG&gt; and exploring effective alternatives to implement the same.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539505064"&gt;Motivation&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In traditional SAP PI/PO-based landscapes, routing outbound IDocs from SAP ECC or S/4HANA systems is straightforward. A &lt;STRONG&gt;single t-RFC destination&lt;/STRONG&gt; and &lt;STRONG&gt;IDoc port&lt;/STRONG&gt; are typically configured in the sender system to forward all IDocs to SAP PI. Within SAP PI, routing is managed efficiently using the &lt;STRONG&gt;Integration Directory&lt;/STRONG&gt; and &lt;STRONG&gt;centralized runtime (AEX)&lt;/STRONG&gt;, enabling reuse of a &lt;STRONG&gt;single IDoc destination&lt;/STRONG&gt; across multiple interfaces and message types (MATMAS, INVOIC, DEBMAS, etc).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_1-1753943278457.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294339i9CFB79236AC288C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_1-1753943278457.png" alt="ShreyasShenoy07_1-1753943278457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;However, when migrating to &lt;STRONG&gt;SAP Cloud Integration&lt;/STRONG&gt;, this simplicity is disrupted. Cloud Integration does not provide an equivalent mechanism for managing IDoc traffic using a central gateway or common destination. Instead, each interface often requires its own &lt;STRONG&gt;unique&lt;/STRONG&gt; &lt;STRONG&gt;endpoint, destination, and port&lt;/STRONG&gt;, making the configuration effort &lt;STRONG&gt;redundant and makes IDoc Routing complex&amp;nbsp; and operationally challenging, as part of this blog&lt;FONT color="#FF0000"&gt; I wanted to tackle these challenges and simplify this. &lt;FONT size="2" color="#000000"&gt;(* I wont go into the specific challenges of the different approches and rather focus on the problems I am trying to solve in the current approach)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_3-1753944514940.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294349iE1B2982CA7BAD14F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_3-1753944514940.png" alt="ShreyasShenoy07_3-1753944514940.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342991559"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1146478054"&gt;&lt;STRONG&gt;Solution Approach:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_4-1753944610345.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294350i031118EDBDC1D2FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_4-1753944610345.png" alt="ShreyasShenoy07_4-1753944610345.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As described in the flow above, we will implement the design using &lt;STRONG&gt;two iFlows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;IF_SAP_to_Generic_IDOCRouting&lt;/STRONG&gt;:&lt;BR /&gt;This iFlow receives IDoc XML messages from various SAP systems. It is responsible for &lt;STRONG&gt;receiver determination&lt;/STRONG&gt; and routes the message to the appropriate target iFlow based on routing logic.&lt;BR /&gt;In SAP PI/PO terminology, this iFlow handles the &lt;STRONG&gt;Inbound Processing&lt;/STRONG&gt; and &lt;STRONG&gt;Receiver Determination&lt;/STRONG&gt; steps of the integration pipeline.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt;&lt;/STRONG&gt;:&lt;BR /&gt;This iFlow is specific to the receiver system and handles &lt;STRONG&gt;transformation, mapping&lt;/STRONG&gt;, and other receiver-specific processing.&lt;BR /&gt;In SAP PI/PO terms, this iFlow corresponds to the &lt;STRONG&gt;Interface Determination&lt;/STRONG&gt; and &lt;STRONG&gt;Outbound Processing&lt;/STRONG&gt; steps of the integration pipeline.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1079047268"&gt;&lt;STRONG&gt;IF_SAP_to_Generic_IDOCRouting&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_3-1753938581456.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294314iB2D9605AB6E12964/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_3-1753938581456.png" alt="ShreyasShenoy07_3-1753938581456.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1011616482"&gt;&lt;U&gt;Step 1: Extract Details from&lt;STRONG&gt;&amp;nbsp;EDI_DC40&amp;nbsp;&lt;/STRONG&gt;of IDoc xml and create&lt;/U&gt;&lt;STRONG&gt;&lt;U&gt;&amp;nbsp;Exchange properties&lt;/U&gt;:&amp;nbsp;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The IDoc routing in this flow primarily relies on &lt;STRONG&gt;Value Mappings&lt;/STRONG&gt; and &lt;STRONG&gt;Groovy scripts&lt;/STRONG&gt;. In this step, the necessary inputs and variables are initialized—these are later used in Groovy script execution to extract routing details from the configured Value Mappings.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753752660293.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293039i38CD6DBBAEECEED4/image-dimensions/565x198?v=v2" width="565" height="198" role="button" title="ShreyasShenoy07_0-1753752660293.png" alt="ShreyasShenoy07_0-1753752660293.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;For example&lt;/STRONG&gt;, consider a sender system &lt;STRONG&gt;Q10&lt;/STRONG&gt; (the quality environment of the x10 SAP system with client number 001) sending an &lt;STRONG&gt;INVOIC IDoc with an extension type ZINVOIC01&lt;/STRONG&gt;. The properties are initialized as below.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_0-1753855230088.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293675i3ED23E572A630EFB/image-size/small?v=v2&amp;amp;px=200" role="button" title="ShreyasShenoy07_0-1753855230088.png" alt="ShreyasShenoy07_0-1753855230088.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShreyasShenoy07_1-1753855452674.png" style="width: 527px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293680iFA66E3B149753CFB/image-dimensions/527x151?v=v2" width="527" height="151" role="button" title="ShreyasShenoy07_1-1753855452674.png" alt="ShreyasShenoy07_1-1753855452674.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; variable is initialized to zero and is later used during processing when the same IDoc meets conditions for &lt;STRONG&gt;multiple receivers&lt;/STRONG&gt;, ensuring it is sent to each applicable receiver accordingly.&lt;/P&gt;&lt;H4 id="toc-hId-815102977"&gt;&lt;U&gt;Step 2: Fetch&amp;nbsp;&lt;STRONG&gt;Receiver List&amp;nbsp;&lt;/STRONG&gt;for the&amp;nbsp;&lt;STRONG&gt;IDOC&amp;nbsp;&lt;/STRONG&gt;from the Value Mapping tables using Exchange properties:&lt;BR /&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;SPAN&gt;For this we would need to maintain two value mappings&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H5 id="toc-hId-747672191"&gt;&lt;SPAN&gt;Value Mapping for&amp;nbsp;&lt;STRONG&gt;Sender Partner Number&lt;/STRONG&gt; to &lt;STRONG&gt;Sender Identifier Conversion&lt;/STRONG&gt;:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753857368060.png" style="width: 566px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293732i06106918904C2B47/image-dimensions/566x242?v=v2" width="566" height="242" role="button" title="ShreyasShenoy07_0-1753857368060.png" alt="ShreyasShenoy07_0-1753857368060.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-60px" style="text-align : justify; padding-left : 60px;"&gt;&lt;STRONG&gt;As an example&lt;/STRONG&gt;, I have maintained the details of SAP systems &lt;STRONG&gt;x10&lt;/STRONG&gt; and &lt;STRONG&gt;x20&lt;/STRONG&gt; across their &lt;STRONG&gt;Development&lt;/STRONG&gt;, &lt;STRONG&gt;Quality&lt;/STRONG&gt;, and &lt;STRONG&gt;Production&lt;/STRONG&gt; environments. You would similarly maintain all relevant SAP systems and their corresponding identifiers in the &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt; used for IDoc routing. This mapping typically requires updates only when &lt;STRONG&gt;new SAP systems are added&lt;/STRONG&gt; or &lt;STRONG&gt;existing systems are migrated (when SIDs change)&lt;/STRONG&gt;, which are relatively infrequent events.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H5 id="toc-hId-551158686"&gt;&lt;SPAN&gt;Value Mapping for ReceiverList, Receiver Determination and Receiver Target IFlow URls:&lt;/SPAN&gt;&lt;/H5&gt;&lt;P class="lia-align-justify lia-indent-padding-left-60px" style="text-align : justify; padding-left : 60px;"&gt;The second &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt; is maintained for each unique combination of &lt;STRONG&gt;SAP sender system&lt;/STRONG&gt; and &lt;STRONG&gt;IDoc type&lt;/STRONG&gt;.&lt;BR /&gt;For example, to define receiver determination conditions for the &lt;STRONG&gt;IDOC:&amp;nbsp;INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt; sent from the SAP system &lt;STRONG&gt;x10&lt;/STRONG&gt;, you would create a corresponding Value Mapping entry as shown below.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753869386606.png" style="width: 700px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293819iEB528661945AE51C/image-dimensions/700x290?v=v2" width="700" height="290" role="button" title="ShreyasShenoy07_0-1753869386606.png" alt="ShreyasShenoy07_0-1753869386606.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The ValueMapping will have 3 Mapping with agency as &lt;STRONG&gt;x10.INVOIC.INVOIC01.ZINVOIC01 (sender Identifier&lt;/STRONG&gt;.&lt;STRONG&gt;IDOC)&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;IDOCName to ReceiverList&lt;/STRONG&gt; : This mapping holds a list of all receivers applicable for a specific IDoc.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;ReceiverName to ReceiverCondition&lt;/STRONG&gt;: This defines the &lt;STRONG&gt;receiver determination condition&lt;/STRONG&gt; for each receiver. The conditions should be maintained using &lt;STRONG&gt;XPath expressions&lt;/STRONG&gt; to evaluate the IDoc content dynamically.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_1-1753869746094.png" style="width: 656px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293820i4EA51D75A75B461D/image-dimensions/656x155?v=v2" width="656" height="155" role="button" title="ShreyasShenoy07_1-1753869746094.png" alt="ShreyasShenoy07_1-1753869746094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;ReceiverName to ReceiverIFlowAddress:&lt;/STRONG&gt; This maps each receiver to the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt; of its corresponding integration flow (&lt;A href="#toc-hId-1146478054" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt;&lt;/STRONG&gt;&lt;/A&gt;) , as described earlier in the solution approach.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_2-1753869917703.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293821i51E043843F980362/image-dimensions/657x315?v=v2" width="657" height="315" role="button" title="ShreyasShenoy07_2-1753869917703.png" alt="ShreyasShenoy07_2-1753869917703.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Now that we've covered how the &lt;STRONG&gt;Value Mappings&lt;/STRONG&gt; are maintained, let’s look at how the &lt;STRONG&gt;Groovy script&lt;/STRONG&gt;&amp;nbsp;fetches the appropriate values:&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;U&gt;1. Fetch senderIdentifier&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;The &lt;STRONG&gt;senderIdentifier&lt;/STRONG&gt; is retrieved using the exchange property &lt;STRONG&gt;senderPartnerNumber&lt;/STRONG&gt; (set in &lt;A href="#toc-hId-1011616482" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;step 1&lt;/STRONG&gt;).&lt;/A&gt; This value is looked up from the&amp;nbsp;&lt;STRONG&gt;&lt;A href="#toc-hId-747672191" target="_self" rel="nofollow noopener noreferrer"&gt;first ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;:&lt;BR /&gt;If a message is sent from system &lt;STRONG&gt;Q10&lt;/STRONG&gt; with sender partner number &lt;STRONG&gt;Q10_001&lt;/STRONG&gt;, the senderIdentifier fetched from the Value Mapping would be &lt;STRONG&gt;x10&lt;/STRONG&gt;.&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;U&gt;2. Construct Agency Key&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;Using the &lt;STRONG&gt;senderIdentifier&lt;/STRONG&gt; and other exchange properties (set in &lt;STRONG&gt;&lt;A href="#toc-hId-1011616482" target="_self" rel="nofollow noopener noreferrer"&gt;step 1&lt;/A&gt;&lt;/STRONG&gt;), the &lt;STRONG&gt;agency key&lt;/STRONG&gt; is constructed. This key will be used to retrieve routing information from the &lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;U&gt;Agency Format:&lt;/U&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&amp;lt;senderIdentifier&amp;gt;.&amp;lt;messageType&amp;gt;.&amp;lt;IDocType&amp;gt;[.&amp;lt;extensionType&amp;gt;]&lt;/FONT&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;senderIdentifier&lt;/STRONG&gt; – from first Value Mapping&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;messageType &lt;/STRONG&gt;– from exchange property&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;IDocType &lt;/STRONG&gt;– from exchange property&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;extensionType&lt;/STRONG&gt; – from exchange property (optional)&lt;BR /&gt;&lt;STRONG&gt;Example:&lt;BR /&gt;For an INVOIC IDoc of type INVOIC01 with extension ZINVOIC01 sent from system x10, the agency would be: x10.INVOIC.INVOIC01.ZINVOIC01&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;U&gt;3. Fetch Receiver List&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;Using the constructed agency key, the receiver list is retrieved from the &lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;:&lt;BR /&gt;For the agency &lt;STRONG&gt;x10.INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt;, the receiver list will be:&lt;BR /&gt;&lt;STRONG&gt;Receiver1&lt;/STRONG&gt;, &lt;STRONG&gt;Receiver2&lt;/STRONG&gt;, &lt;STRONG&gt;Receiver3&lt;BR /&gt;&lt;/STRONG&gt;Value Mapping sample call:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01', 'IDOCName', 
  'INVOIC.INVOIC01.ZINVOIC01', 'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'ReceiverList')&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-225562462"&gt;&lt;U&gt;&lt;FONT&gt;Step3: Execute&lt;STRONG&gt;&amp;nbsp;Receiver Determination Conditions&amp;nbsp;&lt;/STRONG&gt;(Groovy Script) from&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="3"&gt;Value Mapping&lt;/FONT&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The Groovy script then iterates through the receiver list, fetching the corresponding receiver determination condition for each receiver and evaluating it against the IDoc content using XPath.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;// Fetch condition from Value Mapping
currentReceiverCondition = valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01',
  'ReceiverName',
  'Receiver1',
  'x10.INVOIC.INVOIC01.ZINVOIC01',
  'ReceiverCondition'
)
// Evaluate condition
def expr = xpath.compile(currentReceiverCondition as String)
def result = expr.evaluate(doc, XPathConstants.BOOLEAN)&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;If the condition evaluates to &lt;STRONG&gt;true&lt;/STRONG&gt;, the receiver is added to the exchange property &lt;STRONG&gt;determinedReceivers&lt;/STRONG&gt;. A counter variable &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt; is also maintained to track how many receivers matched successfully.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753885613367.png" style="width: 642px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294084i7BAA79E06D809669/image-dimensions/642x255?v=v2" width="642" height="255" role="button" title="ShreyasShenoy07_0-1753885613367.png" alt="ShreyasShenoy07_0-1753885613367.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;At the end of this step, three additional exchange properties will be available: &lt;STRONG&gt;determinedReceivers&lt;/STRONG&gt;, &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt;, and &lt;STRONG&gt;IDOCName&lt;/STRONG&gt; (which holds the constructed agency key).&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;In the example discussed, lets consider if the conditions are satisfied for &lt;STRONG&gt;Receiver2&lt;/STRONG&gt; and &lt;STRONG&gt;Receiver3&lt;/STRONG&gt;, then the &lt;STRONG&gt;determinedReceivers &lt;/STRONG&gt;list will contain both, and the &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt; will be set to &lt;STRONG&gt;2&lt;/STRONG&gt;.&lt;BR /&gt;The &lt;STRONG&gt;IDOCName &lt;/STRONG&gt;property (i.e., the &lt;STRONG&gt;agency key:&amp;nbsp;x10.INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt;) is also stored to be reused in subsequent steps of the flow.&lt;/P&gt;&lt;H4 id="toc-hId--468668138"&gt;&lt;U&gt;&lt;FONT&gt;Step 4:&amp;nbsp;&lt;/FONT&gt;Send Message to&amp;nbsp;&lt;STRONG&gt;Receiver Specific flow&lt;/STRONG&gt;&amp;nbsp;for the&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;Determined Receivers&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;In this step, a &lt;STRONG&gt;looping process call&lt;/STRONG&gt; is executed, which repeatedly invokes a &lt;STRONG&gt;local integration process&lt;/STRONG&gt; to send the message to each receiver identified in the previous step—&lt;STRONG&gt;one at a time&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The property &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; is incremented after each message is successfully sent to a determined receiver. The loop continues until &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; equals &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt;, at which point the process terminates.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753890299180.png" style="width: 627px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294105i207D033209104225/image-dimensions/627x279?v=v2" width="627" height="279" role="button" title="ShreyasShenoy07_0-1753890299180.png" alt="ShreyasShenoy07_0-1753890299180.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;To send the message to a specific receiver, a &lt;STRONG&gt;Groovy script&lt;/STRONG&gt; is used to retrieve the &lt;STRONG&gt;receiver name&lt;/STRONG&gt; from the &lt;STRONG&gt;determinedReceivers &lt;/STRONG&gt;list. Using this name, the script fetches the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt; of the corresponding receiver-specific iFlow from the&amp;nbsp;&lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping&lt;/A&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Value Mapping sample call:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'IDOCName', 
  'INVOIC.INVOIC01.ZINVOIC01', 
  'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'ReceiverIFlowAddress'
)&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The fetched endpoint URL is then assigned to the header property &lt;STRONG&gt;receiverProcessDirectURL&lt;/STRONG&gt;, which is used by the ProcessDirect adapter to route the message to the appropriate receiver-specific iFlow.&amp;nbsp;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt; &lt;/STRONG&gt;which would&amp;nbsp;handle&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;transformation, mapping&lt;/STRONG&gt;, and other receiver-specific processing.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_0-1753893349763.png" style="width: 544px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294110i08D285AD63C466EF/image-dimensions/544x232?v=v2" width="544" height="232" role="button" title="ShreyasShenoy07_0-1753893349763.png" alt="ShreyasShenoy07_0-1753893349763.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-left lia-indent-padding-left-30px" style="text-align : left; padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--371778636"&gt;Advantages of the Proposed IDoc Routing Strategy in SAP Cloud Integration&lt;/H3&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;The strategy outlined in this blog offers a &lt;STRONG&gt;scalable, modular, and maintainable alternative&lt;/STRONG&gt;&amp;nbsp;that aligns closely with enterprise integration requirements. Below are the key advantages of this design:&lt;/P&gt;&lt;H4 id="toc-hId--861695148"&gt;1. Reusability of Integration Flows&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Instead of creating a separate iFlow for each IDoc-to-receiver combination, this approach separates:&lt;BR /&gt;Generic routing logic&amp;nbsp;(IF_SAP_to_Generic_IDOCRouting)&lt;BR /&gt;Receiver-specific logic(IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface&amp;gt;)&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Reduces development effort and avoids duplication across iFlows, enabling a clean and modular architecture.&lt;/P&gt;&lt;H4 id="toc-hId--1058208653"&gt;2. Centralized Routing with Value Mappings&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Routing conditions and receiver lists are managed through &lt;STRONG&gt;Value Mapping artifacts.&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Updates to routing logic can be done without modifying or redeploying iFlows—just update the Value Mapping configuration.&lt;/P&gt;&lt;H4 id="toc-hId--1254722158"&gt;&lt;STRONG&gt;3. Scalable Across Systems and IDoc Variants&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Routing logic is built dynamically using:&lt;BR /&gt;- Sender system identifier&lt;BR /&gt;- Message type&lt;BR /&gt;- IDoc type&lt;BR /&gt;- (Optional) Extension type&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Supports complex multi-system, multi-IDoc scenarios without inflating the number of artifacts or flows.&lt;/P&gt;&lt;H4 id="toc-hId--1451235663"&gt;4. Native Support for Multi-Receiver Scenarios&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The use of Groovy logic and looping constructs enables routing to multiple receivers based on evaluated XPath conditions.&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Enables 1:n routing scenarios, ensuring the same IDoc can be routed to multiple receivers without message duplication logic.&lt;/P&gt;&lt;H4 id="toc-hId--1647749168"&gt;&lt;STRONG&gt;5. Low Maintenance and High Adaptability&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;This architecture requires &lt;STRONG&gt;Value Mapping updates&lt;/STRONG&gt; only when:&lt;BR /&gt;- New SAP systems are added&lt;BR /&gt;- Existing systems are migrated&lt;BR /&gt;- Additional receiver conditions are introduced&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Minimal maintenance effort over time; no need for frequent design or deployment changes.&lt;/P&gt;&lt;H4 id="toc-hId--1844262673"&gt;&lt;STRONG&gt;6. Aligned with SAP PI/PO Routing Model&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The flow structure mirrors familiar SAP PI/PO pipeline steps, such as:&lt;BR /&gt;- Receiver Determination&lt;BR /&gt;- Interface Determination&lt;BR /&gt;- Outbound Processing&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Simplifies migration for teams transitioning from SAP PI/PO to SAP CI, while preserving key routing concepts. Also there is a scope for automation where you could write a code to automate creation of Valuemapping. The existing&amp;nbsp; ports can be reused by updating the RFC destination pointing to the SAP CI&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This approach attempts to addresses the Technical limitations of SAP CI’s IDoc handling, and also supports sustainable growth and &lt;STRONG&gt;cleaner&lt;/STRONG&gt; and &lt;STRONG&gt;maintainable&lt;/STRONG&gt; integration landscapes.&lt;/P&gt;&lt;H3 id="toc-hId--1747373171"&gt;Additional Considerations for Retry and Reprocessing&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Retry and error handling&lt;/STRONG&gt; should be implemented within each receiver-specific flow to manage failures independently for every receiver.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;It is advisable to &lt;STRONG&gt;avoid broadcasting IDocs directly from SAP Cloud Integration&lt;/STRONG&gt;, especially in high-volume scenarios like master data distribution across multiple systems. This is due to potential limitations in storing failed messages within the SAP Cloud Integration tenant. Additionally, in broadcast cases, the retry mechanism should support resending only to the receivers where failures occurred, not all recipients.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Exceptions can be returned to the sender system&lt;/STRONG&gt; (e.g., via SOAP fault) so that errors are reflected in the originating SAP system(&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/define-error-configuration" target="_self" rel="noopener noreferrer"&gt;Return Exception to Sender&lt;/A&gt;&amp;nbsp;). This enables visibility in transaction logs like WE02/WE05, helping to identify and reprocess failed IDocs more effectively.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Batch jobs in the SAP backend&lt;/STRONG&gt; responsible for reprocessing IDocs should be adjusted based on the new failure status codes introduces by this setup&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1650483669"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This blog attempted to present a &lt;STRONG&gt;scalable&lt;/STRONG&gt;, &lt;STRONG&gt;maintainable&lt;/STRONG&gt;, &lt;STRONG&gt;modular&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;operationally efficient&lt;/STRONG&gt; strategy for receiver determination of outbound IDocs from SAP system by leveraging Groovy script and Value Mapping. Also by decoupling the routing and receiver-specific logic into two separate iFlows, the solution ensures better reusability, easier maintenance, and greater control over message processing.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/optimized-idoc-routing-in-sap-ci-with-value-mapping-and-groovy-based/ba-p/14164335"/>
    <published>2025-08-08T10:07:51.299000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843</id>
    <title>AI Adapter for SAP Integration Suite</title>
    <updated>2025-08-08T14:55:41.301000+02:00</updated>
    <author>
      <name>Shashank_K</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1555850</uri>
    </author>
    <content>&lt;P&gt;The AI Adapter for SAP Integration Suite is a Generative AI driven capability available exclusively on SAP Integration Suite. For the first time in SAP CI, leverage SAP AI Core’s GenAI Hub features that allow you to achieve smarter integration solutions for your business.&lt;/P&gt;&lt;P&gt;AICore-GenAIHub variant allows you to connect to orchestration services in SAP AI Core. This service enables the use of various generative AI models with a unified code, configuration, and deployment.&lt;/P&gt;&lt;P&gt;The Custom-OpenAI-REST variant of the AI adapter works with the APIs of OpenAI that allows developers to access and integrate with artificial intelligence models into their applications, enabling tasks like text generation, image creation, and more.&lt;/P&gt;&lt;H2 id="toc-hId-1736976715"&gt;AI Adapter Features&lt;/H2&gt;&lt;P&gt;The AI Adapter has the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;AI Adapter has two variants available:&amp;nbsp;&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;AI Adapter supports&amp;nbsp;&lt;STRONG&gt;OAuth2 Client Credential&lt;/STRONG&gt;&amp;nbsp;(&lt;EM&gt;User Credentials)&lt;/EM&gt;&amp;nbsp;and&lt;STRONG&gt;&amp;nbsp;API Key alias (&lt;/STRONG&gt;&lt;EM&gt;Secure Parameter&lt;/EM&gt;&lt;STRONG&gt;)&lt;/STRONG&gt;&amp;nbsp;authentication methods for the AICore-GenAIHub and Custom-OpenAI-REST variant respectively.&lt;/LI&gt;&lt;LI&gt;AICore-GenAIHub employs harmonized API to allow you to use different foundation models without changing the client code.&lt;/LI&gt;&lt;LI&gt;You can configure orchestration to enable consumption of&amp;nbsp;&lt;STRONG&gt;multiple GenAI models&lt;/STRONG&gt;&amp;nbsp;within a single workflow.&lt;/LI&gt;&lt;LI&gt;Custom-OpenAI-REST allows you to access a range of features using APIs like&amp;nbsp;&lt;STRONG&gt;Chat Completions&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;Platform&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Responses&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Custom-OpenAI-REST supports&amp;nbsp;&lt;STRONG&gt;Basic&lt;/STRONG&gt;&amp;nbsp;configuration type that provides a convenient processing capability for supported versions whereas&amp;nbsp;&lt;STRONG&gt;Advanced&lt;/STRONG&gt;&amp;nbsp;enables proficient users to perform calls with greater control while connecting to any API endpoint.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540463210"&gt;&lt;STRONG&gt;Example Scenario : Sentiment Analysis on&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Customer Feedback&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this blog post, we will demo a scenario to get you started with a basic AI Adapter operation. We query LLM to perform sentiment analysis on user feedback.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ashishkuvvarapu_0-1754423110247.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296900i4F81AE434ED561FB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_0-1754423110247.png" alt="ashishkuvvarapu_0-1754423110247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The following prerequisites are handy while getting started with GenAI Hub&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To get started with Gen AI Hub, see &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/generative-ai-hub-in-sap-ai-core?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Getting Started with GenAIHub&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;To consume GenAI models using Orchestration, see &lt;A href="https://developers.sap.com/tutorials/ai-core-orchestration-consumption.html" target="_blank" rel="noopener noreferrer"&gt;AI Core Orchestration Consumption&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1343949705"&gt;&lt;STRONG&gt;Prepare User feedback using Content Modifier&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;One of the first tasks we do after creating a new integration flow is to prepare contrasting user feedback to be analyzed. As you can notice, one of them speaks highly of the blog (we assume this to be a product) and other feedback is quite the opposite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_2-1754423266585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296902iC34F4417D64D4135/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_2-1754423266585.png" alt="ashishkuvvarapu_2-1754423266585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147436200"&gt;&lt;STRONG&gt;Connect to GenAI Hub using the AI Adapter&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab contains connection and authentication parameters to connect to AICore-GenAIHub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ashishkuvvarapu_3-1754423325248.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296903i98C9383F48955825/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_3-1754423325248.png" alt="ashishkuvvarapu_3-1754423325248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="99.88814317673378%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the GenAIHub address.&lt;/P&gt;&lt;P&gt;Example: &lt;A href="https://api.ai.{tenant_name}.{datacenter}.ml.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.ai.{tenant_name}.{datacenter}.ml.hana.ondemand.com&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the name of the OAuth2 Client Credentials security artifact.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Reuse Connection&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Enable to reuse the connection.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Connection Timeout(in ms)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the maximum waiting time (in milliseconds) for the connection to be established.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Response Timeout(in ms)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the maximum waiting time (in milliseconds) for a response message.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-950922695"&gt;&lt;STRONG&gt;Prompt an LLM using AI Adapter&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This example demonstrates how to prompt a large language model (LLM) to perform sentiment analysis on for user feedback text. The model is instructed to analyze the sentiment of the review and respond with just one word—either “positive” or “negative.” Triple backticks are used to clearly highlight the review text, ensuring there's no ambiguity about what should be analyzed. The structure is intended to produce straightforward and concise sentiment assessments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_4-1754423578445.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296904i3D4899B5867B7801/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_4-1754423578445.png" alt="ashishkuvvarapu_4-1754423578445.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Operation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select the operation from the dropdown.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the Deployment ID for this Orchestration.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the AI Resource Group configured for the specific orchestration deployment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select an option to specify the source for request payload:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Exchange Body&lt;/STRONG&gt; allows you to specify required structure and values.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UI Configurable&lt;/STRONG&gt;&lt;SPAN&gt; provides user friendly fields to create the payload automatically.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Model&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select the required AI model for your operation.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Role&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the role to be assumed:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;assistant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;system&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;user&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the content containing the instruction to be carried out.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-754409190"&gt;Run and Verify Output&lt;/H2&gt;&lt;P&gt;After saving the above configuration, deploy the flow and verify that the sentiment has been correctly analyzed.&lt;/P&gt;&lt;P&gt;You should be able to see some of them as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_5-1754423897849.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296906iEBFEDB3CD38A15F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_5-1754423897849.png" alt="ashishkuvvarapu_5-1754423897849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-555060832" id="toc-hId-557895685"&gt;&lt;SPAN&gt;Quick Links&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;For detailed information about AI configuration, see&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://api.sap.com/odata/1.0/catalog.svc/Files('6a7cc59b207e4eb384f3af502f8b503f')/$value" target="_blank" rel="noopener noreferrer"&gt;AI Adapter Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The AI adapter is available as part of your SAP Integration Suite license.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843"/>
    <published>2025-08-08T14:55:41.301000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/smb-adapter-feature-on-premise-connectivity-via-sap-cloud-connector/ba-p/14175856</id>
    <title>SMB Adapter Feature: On-Premise Connectivity via SAP Cloud Connector</title>
    <updated>2025-08-08T15:01:18.273000+02:00</updated>
    <author>
      <name>Shashank_K</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1555850</uri>
    </author>
    <content>&lt;P&gt;The Microsoft SMB (Server Message Block) Adapter now supports on-premise connectivity via the SAP Cloud Connector. SAP Integration Suite supports this using the proxy type ‘&lt;STRONG&gt;On-Premise’&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;You can securely integrate your SAP cloud applications with your &lt;STRONG&gt;on-premise&lt;/STRONG&gt; SMB server. It offers reliable authentication and authorization mechanisms to ensure that only authorized users and systems can access on-premises resources.&lt;/P&gt;&lt;P&gt;Following the &lt;A href="https://help.sap.com/whats-new/5793247a5d5741beb0decc5b7dee1160?q=SMB+Adapter" target="_blank" rel="noopener noreferrer"&gt;July What's New release&lt;/A&gt; announcement, SMB Adapter for SAP Integration Suite ships with this Cloud Connector capability.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753966385459.png" style="width: 581px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294571i574063AC48B66D97/image-dimensions/581x215?v=v2" width="581" height="215" role="button" title="Divij_Balguri09_0-1753966385459.png" alt="Divij_Balguri09_0-1753966385459.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To achieve this setup, you need to perform the following steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Configure a new &lt;STRONG&gt;Cloud to On-Premise&lt;/STRONG&gt; system mapping in your Cloud Connector.&lt;/LI&gt;&lt;LI&gt;Configure the SMB Adapter to &lt;STRONG&gt;Create&lt;/STRONG&gt;, &lt;STRONG&gt;Read&lt;/STRONG&gt;, and &lt;STRONG&gt;Write&lt;/STRONG&gt; on your On-Premise File Server.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1736976749"&gt;&lt;SPAN&gt;Configure Cloud to On-Premise system mapping in your Cloud Connector&lt;/SPAN&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your Cloud connector login page and enter your credentials.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753969403153.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294626i0E08D4CF43301621/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divij_Balguri09_0-1753969403153.png" alt="Divij_Balguri09_0-1753969403153.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Now, you must define a subaccount for&amp;nbsp;Cloud Connector. Select &lt;STRONG&gt;Define Subaccount&lt;/STRONG&gt;&lt;SPAN&gt;, enter the necessary details, and click &lt;/SPAN&gt;&lt;STRONG&gt;Save&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_12-1753966517372.png" style="width: 473px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294584i196436B4A2E1096A/image-dimensions/473x342?v=v2" width="473" height="342" role="button" title="Divij_Balguri09_12-1753966517372.png" alt="Divij_Balguri09_12-1753966517372.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Cloud To On-Premises&lt;/STRONG&gt; option from the menu and click&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_2-1754466763114.png" style="width: 675px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297061iBF98EA06040A49CA/image-dimensions/675x209?v=v2" width="675" height="209" role="button" title="Divij_Balguri09_2-1754466763114.png" alt="Divij_Balguri09_2-1754466763114.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select Back-end Type as &lt;STRONG&gt;Non-SAP System&lt;/STRONG&gt; and click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_15-1753966839160.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294588i2514502FAC67CB80/image-dimensions/540x243?v=v2" width="540" height="243" role="button" title="Divij_Balguri09_15-1753966839160.png" alt="Divij_Balguri09_15-1753966839160.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select Protocol as &lt;STRONG&gt;TCP&lt;/STRONG&gt; and click&lt;STRONG&gt; Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_16-1753966872615.png" style="width: 535px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294589i196C9537A4636510/image-dimensions/535x241?v=v2" width="535" height="241" role="button" title="Divij_Balguri09_16-1753966872615.png" alt="Divij_Balguri09_16-1753966872615.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Here you can specify your On-Premise&amp;nbsp;SMB server &amp;amp; port that needs to be set up for connectivity. Populate &lt;STRONG&gt;Internal Host&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Port or Port Range&lt;/STRONG&gt; to proceed.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_17-1753966953415.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294590i477F7B74BE2C6E74/image-dimensions/538x242?v=v2" width="538" height="242" role="button" title="Divij_Balguri09_17-1753966953415.png" alt="Divij_Balguri09_17-1753966953415.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Specify the &lt;STRONG&gt;Virtual Host&lt;/STRONG&gt; and &lt;STRONG&gt;Virtual Port &lt;/STRONG&gt;that is exposed for connectivity with the SMB Adapter.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_18-1753967011756.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294591i165C603BD07E85F9/image-dimensions/536x242?v=v2" width="536" height="242" role="button" title="Divij_Balguri09_18-1753967011756.png" alt="Divij_Balguri09_18-1753967011756.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Enter the &lt;STRONG&gt;Description&lt;/STRONG&gt; as required and click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_19-1753967036668.png" style="width: 537px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294592i5F0B451AB4B1428E/image-dimensions/537x243?v=v2" width="537" height="243" role="button" title="Divij_Balguri09_19-1753967036668.png" alt="Divij_Balguri09_19-1753967036668.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Verify the details and click &lt;STRONG&gt;Finish&lt;/STRONG&gt;.&lt;BR /&gt;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: Ensure to enable the &lt;STRONG&gt;Check Internal Host&lt;/STRONG&gt;).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_20-1753967069867.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294593iB46FEFDB069CA627/image-dimensions/538x243?v=v2" width="538" height="243" role="button" title="Divij_Balguri09_20-1753967069867.png" alt="Divij_Balguri09_20-1753967069867.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Now, you can view your details in your &lt;STRONG&gt;Cloud To On-Premise.&lt;/STRONG&gt;&lt;BR /&gt;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: Once deployed, &lt;STRONG&gt;Check Result&lt;/STRONG&gt; should be &lt;STRONG&gt;Reachable&lt;/STRONG&gt;).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753969683819.png" style="width: 693px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294627iA69BC8305E368A72/image-dimensions/693x208?v=v2" width="693" height="208" role="button" title="Divij_Balguri09_0-1753969683819.png" alt="Divij_Balguri09_0-1753969683819.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1540463244"&gt;&lt;SPAN&gt;Configure SMB Adapter to connect to SMB File Share&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;SMB adapter simplifies integration with on-premise file systems, making it easier to read, write, and manage files across network shares. In our scenario, we will demo &lt;STRONG&gt;creation&lt;/STRONG&gt; of a directory and file, followed by subsequent &lt;STRONG&gt;read&lt;/STRONG&gt; and &lt;STRONG&gt;write&lt;/STRONG&gt; operations on the same file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_27-1753967479849.png" style="width: 525px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294601i62B5721CDD633ED4/image-dimensions/525x227?v=v2" width="525" height="227" role="button" title="Divij_Balguri09_27-1753967479849.png" alt="Divij_Balguri09_27-1753967479849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configure Connection tab for SMB Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SMB receiver adapter supports basic authentication, enabling users to configure and use the adapter with ease.&lt;BR /&gt;&lt;BR /&gt;To connect to the SMB server, you need to specify the &lt;STRONG&gt;Host&lt;/STRONG&gt; and &lt;STRONG&gt;port&lt;/STRONG&gt; of SMB, select the Proxy type as &lt;STRONG&gt;On-Premise, &lt;/STRONG&gt;and specify the location ID to identify the&amp;nbsp;&lt;STRONG&gt;location&lt;/STRONG&gt;&amp;nbsp;of a Cloud Connector instance for a specific subaccount, which&amp;nbsp;&lt;STRONG&gt;is&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;used&lt;/STRONG&gt;&amp;nbsp;as routing information.&lt;/P&gt;&lt;P&gt;Now, select the &lt;STRONG&gt;Version&lt;/STRONG&gt; and &lt;STRONG&gt;Drive&lt;/STRONG&gt; on which you need to perform the operation and specify the Credentials stored in the SAP Security materials. For more information, refer image below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_28-1753967503409.png" style="width: 871px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294602iAF5B62E692CB0392/image-dimensions/871x347?v=v2" width="871" height="347" role="button" title="Divij_Balguri09_28-1753967503409.png" alt="Divij_Balguri09_28-1753967503409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343949739"&gt;&lt;SPAN&gt;Create, Read and Write using SMB Server &lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;The SMB Adapter supports all CRUD operations. We will first create a directory and a file to read data from the file. Firstly, you need to perform the &lt;STRONG&gt;Create Directory&lt;/STRONG&gt; operation in the SMB local server using the SMB receiver adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_35-1753967656120.png" style="width: 429px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294609i949FC310B7AF156F/image-dimensions/429x205?v=v2" width="429" height="205" role="button" title="Divij_Balguri09_35-1753967656120.png" alt="Divij_Balguri09_35-1753967656120.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;Response in Local SMB Drive&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_36-1753967691475.png" style="width: 674px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294610i96951B1D67F9D11C/image-dimensions/674x118?v=v2" width="674" height="118" role="button" title="Divij_Balguri09_36-1753967691475.png" alt="Divij_Balguri09_36-1753967691475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the directory is successfully created, the next step is to create a file within that directory. This file will serve as the container for your data. You should then write or insert all the required records into this file using a &lt;STRONG&gt;content modifier&lt;/STRONG&gt;, ensuring the content is structured and stored correctly for further processing or retrieval.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_37-1753967710086.png" style="width: 354px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294611i739025EF02DFA756/image-dimensions/354x346?v=v2" width="354" height="346" role="button" title="Divij_Balguri09_37-1753967710086.png" alt="Divij_Balguri09_37-1753967710086.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response in Local SMB Drive&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_38-1753967741810.png" style="width: 645px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294612iF6BCB9200915C417/image-dimensions/645x137?v=v2" width="645" height="137" role="button" title="Divij_Balguri09_38-1753967741810.png" alt="Divij_Balguri09_38-1753967741810.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After the file has been created, you can use the &lt;STRONG&gt;Read File&lt;/STRONG&gt; operation provided by the SMB adapter to access and retrieve the data from it in the future.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_39-1753967765975.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294613i82783E5E4254C206/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divij_Balguri09_39-1753967765975.png" alt="Divij_Balguri09_39-1753967765975.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_40-1753967859540.png" style="width: 617px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294614i04A995C2A6B9CEF1/image-dimensions/617x276?v=v2" width="617" height="276" role="button" title="Divij_Balguri09_40-1753967859540.png" alt="Divij_Balguri09_40-1753967859540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;SMB adapter allows users to connect to an On-Premise server using SAP Cloud Connector.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/smb-adapter-feature-on-premise-connectivity-via-sap-cloud-connector/ba-p/14175856"/>
    <published>2025-08-08T15:01:18.273000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339</id>
    <title>New integration packages for the Pipeline for Cloud Integration</title>
    <updated>2025-08-08T15:08:45.923000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;I would like to share with you an important change for the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;Pipeline for Cloud Integration&lt;/A&gt; that we did based on feedback we received from customers running the Pipeline. As a result, &lt;STRONG&gt;new integration packages for supporting the Pipeline for Cloud Integration has been recently shipped&lt;/STRONG&gt; on the&amp;nbsp;&lt;A href="https://hub.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;. Those packages replace the so far provided package&amp;nbsp;&lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_blank" rel="noopener noreferrer"&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/A&gt; &lt;STRONG&gt;which will be deprecated soon&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To be more flexible in setting up your different pipelines, different sender-specific IDoc and XI inbound flows, and receiver-specific outbound flows if required, we decided to split up the&amp;nbsp;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates into four packages. For the same reason, the script collection has been replaced by local scripts.&lt;/P&gt;&lt;P&gt;Customers like to run different pipelines, e.g., for distributing their critical and non-critical scenarios across different pipelines, or setting up different pipelines in a shared tenant environment. Also, it makes sense to define an own IDoc or XI inbound flow for each sender system to be able for instance to define a sender-specific user role or to stop incoming messages for a specific sender system. For those uses cases, so far you had to copy the package with the complete number of integration flows from the Discovery to the Design adding a suffix. This ensured that the copied packages were not cut off from future updates. However, downside was that this resulted in a large number of stale artifacts, so integration flows which were not used at all.&lt;/P&gt;&lt;P&gt;With the new package setup, we now better support those use cases without creating all those stale integration artifacts. The approach is still to copy a new package from the Discovery, but depending on the use case, you would only copy the integration flows which are required for the respective use case.&lt;/P&gt;&lt;P&gt;You can now find the generic integration flows and a set of templates for the scenario-specific integration flows and custom exits spread across the following integration packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericInbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Inbound&lt;/A&gt;: Contains the generic IDoc and XI inbound flows.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericPipelines/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Pipelines&lt;/A&gt;: Contains the main generic pipeline steps.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericOutbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Outbound&lt;/A&gt;: Contains the generic outbound processing flow.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineTemplates/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Templates&lt;/A&gt;: Contains all templates for the scenario-specific flows and custom extensions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: As said, &lt;STRONG&gt;the so far provided integration package will be deprecated soon&lt;/STRONG&gt;. All new feature increments will only be shipped with the new integration packages. So, If you have used the previously provided package, you need to switch to the new packages. To do so, &lt;STRONG&gt;proceed as follows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Undeploy all generic flows from the soon to be deprecated package.&lt;/LI&gt;&lt;LI&gt;Configure and deploy the required generic flows provided by the new Cloud Integration Pipeline packages. You can either deploy all generic flows or just the ones that you need depending on which pipeline you use, see below.&lt;/LI&gt;&lt;LI&gt;If you have used scripts from the script collection in your scenario-specific flows, replace the scripts with local scripts. You find the local scripts in either the generic flows or the new templates. As long as you haven't replaced all scripts, recommendation is to still run the script collection. Once done, you can then also undeploy the script collection.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: In the newly shipped Cloud Integration packages, the name and IDs of the integration flows have version v2 added. It's important that the old integration flows and the new integration flows must not be deployed together because they compete on reading from the same JMS queues.&lt;/P&gt;&lt;P&gt;The templates package doesn't contain any artifact which needs to be deployed nor does it need to be transported to the production tenant. It only contains templates that you can copy to create your scenario-specific flows and custom flows. For this reason, we kept those integration flows in a separate package.&lt;/P&gt;&lt;P&gt;For setting up the integrated messaging runtime for asynchronous communication (recommended option for asynchronous communication), you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for IDoc messages) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for XI messages) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the integrated messaging runtime for synchronous content-based-router scenarios, you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Sync&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the fully decoupled pipeline for asynchronous communication, you need to deploy the following integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Inbound Processing&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step04 - Receiver Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step05 - Interface Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All integration flows within the new Cloud Integration packages have been copied from the old package. Besides this, some new features have been added which I will soon describe in a bit more detail in a separate blog post. You also find this information in the change logs of the packages. Upfront, here some of the new features that we have shipped with the new packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For IDoc inbound scenarios where you exchange IDoc bulk messages, you have the option to keep the bulk, i.e., not to split the bulk message into individual messages.&lt;/LI&gt;&lt;LI&gt;You can now call a custom exit integration flow for custom pre-processing without the need to alter the standard generic flows of the pipeline. This can be configured globally or scenario-specific.&amp;nbsp;Potential use cases could be to implement additional external or internal logging capabilities or to stop certain messages from sending to the receiver systems based on some conditions, e.g. maintained in the Partner Directory.&lt;/LI&gt;&lt;LI&gt;A new template has been added that allows you to implement&amp;nbsp;custom receiver and interface determination by maintaining exchange properties. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the standard migration approach for the Recipient List and Content-Based-Router patterns.&lt;/LI&gt;&lt;LI&gt;A new template has been added for an option to implement custom receiver determination based on a message mapping and by maintaining exchange properties for the interface determination. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the Pipeline migration approach.&lt;/LI&gt;&lt;LI&gt;For the Outbound Processing templates, an option to call custom post-processing has been added.&lt;/LI&gt;&lt;LI&gt;We fixed an issue in the duplication check caused by a wrong usage of the escalation end event for the IDoc and XI inbound processing flow.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For more details, check out the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipelines" target="_blank" rel="noopener noreferrer"&gt;standard documentation&lt;/A&gt;.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339"/>
    <published>2025-08-08T15:08:45.923000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-rise-six-integration-patterns-you-ll-face/ba-p/14176610</id>
    <title>SAP RISE - Six Integration Patterns You’ll Face</title>
    <updated>2025-08-09T21:41:59.821000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;In one of my previous blogs &lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/why-sap-isa-m-still-matters-a-strategic-foundation-for-modern-integration/ba-p/14162231" target="_blank"&gt;Why SAP ISA-M Still Matters – A Strategic Foundation for Modern Integration&lt;/A&gt;&lt;/STRONG&gt; I have given some insights in which projects &amp;amp; situations I am currently using ISA-M to define my Integration patterns.&amp;nbsp; What should be more strategic then RISE nowadays? &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧭&lt;/STRONG&gt;&lt;STRONG&gt; The Integration Architect’s Dilemma in RISE Projects&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;It usually starts with excitement — &lt;EM&gt;“We’re moving to RISE!”&lt;/EM&gt;. But as the Integration Architect, you feel a shift in the room once you ask:&lt;/P&gt;&lt;P&gt;“How will your business-critical integrations survive the move?”&lt;/P&gt;&lt;P&gt;“How will our Integration Patterns change in a Private Cloud Environment?”&lt;/P&gt;&lt;P&gt;“Do we have to an option to be part of this modernization?”&lt;/P&gt;&lt;P&gt;In too many RISE conversations, &lt;STRONG&gt;integration is not part of initial phases&amp;nbsp;&lt;/STRONG&gt;, but everything depends on it. Whether you’re facing direct system-to-system integrations, legacy SAP PO platforms, or the modernization path toward Integration Suite and AEM: you need clarity.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let’s talk about the &lt;STRONG&gt;6 most common integration scenarios&lt;/STRONG&gt; I encounter in RISE projects — and let’s do a deep dive into one of them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Context: What Makes RISE Integration Different?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;ISA-M allows us to talk in Integration &lt;STRONG&gt;patterns&lt;/STRONG&gt; — proven, repeatable ways to connect cloud, on-prem, and hybrid landscapes.&lt;/P&gt;&lt;P&gt;Draw your Integration landscape abstract as below and repeat the same for all Integration Domains and Integration Patterns, maybe Integration Styles. We focus on the common Process Integration patterns which often are.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bild 09.08.25 um 9.37 PM.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298908iBCF14F5F4B523C7E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bild 09.08.25 um 9.37 PM.jpeg" alt="Bild 09.08.25 um 9.37 PM.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 1: On-Premise to On-Premise (e.g., existing ECC system → S/4, within same on-prem datacenter)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is often the existing baseline. When the customers still host their systems locally. No RISE adaption in this case&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 2: Private Cloud to Private Cloud (e.g., S/4 to S/4 Integration, within same RISE datacenter)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bild 11.08.25 um 1.03 PM.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299288i273E653C69BBFFAE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bild 11.08.25 um 1.03 PM.jpeg" alt="Bild 11.08.25 um 1.03 PM.jpeg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Technology in use:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Integration Suite, Edge Cell on a Private Cloud hyperscaler, such as Azure or AWS&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;VPN or direct peering within same hyperscaler&lt;/LI&gt;&lt;LI&gt;Azure VNet Peering, AWS VPC Peering, or similar as secure tunnel&lt;/LI&gt;&lt;LI&gt;*SAP Integration Suite, Edge Cell on On-Premise landscape ( e.g. on SUSE or Red Hat) is also a valid option&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Differentiators&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Usage of Application Interface Framework for S/4HANA Monitoring&lt;/LI&gt;&lt;LI&gt;Usage of transactions and APIM Management operations&lt;/LI&gt;&lt;LI&gt;Usage of SAP CALM for overall central&amp;nbsp;Monitoring ( if applicable)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 3: Private Cloud to Public Cloud (RISE workload connects to SaaS like SuccessFactors)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Comment:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For hybrid Integration &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; could be used as natural entry point&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 4: Public Cloud to Public Cloud (e.g., SuccessFactors ↔ Ariba or Salesforce ↔ S/4 in RISE)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is a modernization sweet spot. Cloud-native to cloud-native with no concrete RISE touchpoints.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Scenario 5: On-Premise to Public Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is often the existing baseline. When the customers still host their backend systems locally but use SaaS applications for certain LoBs. No RISE adaption in this case&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 6: On-Premise to Private Cloud (e.g., ECC → RISE in Azure, hybrid operation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This hybrid pattern is very common in &lt;STRONG&gt;staged RISE transitions&lt;/STRONG&gt;. Customers keep some systems on-prem while moving others (“early adaptors) into RISE.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Modernization Reality Check&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Most customers do one of three things:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Move PO Interfaces to SAP Integration Suite, Cloud Integration &amp;nbsp;and SAP Integration Suite, Edge Cell &amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Modernize to SAP Advanced Event Mesh&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Use more featreus of the &lt;STRONG&gt;SAP Integration Suite, such as API Managmenet&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;So here’s what I recommend to every architect:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Audit&lt;/STRONG&gt; your interface and integration technologies before RISE.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Classify&lt;/STRONG&gt; interfaces using along the patterns in this blog.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Decide&lt;/STRONG&gt; per pattern: Keep, Modernize, or Sunset.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Actively design&lt;/STRONG&gt; your new integration landscape — don’t wait for someone else to.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":telephone_receiver:"&gt;📞&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Let’s Build Smarter RISE Integrations&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I’ve worked on numerous RISE integration journeys and built a reference architecture library covering each scenario. If you want to see the diagrams, dig into patterns, or compare your setup — &lt;STRONG&gt;I’m happy to help&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Ping us on SAP Integration Modernization &amp;lt;integration.modernization@sap.com&amp;gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-rise-six-integration-patterns-you-ll-face/ba-p/14176610"/>
    <published>2025-08-09T21:41:59.821000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914</id>
    <title>Cloud Integration with Document AI</title>
    <updated>2025-08-10T19:19:42.064000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607924656"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will demonstrate how to connect Cloud Integration with Document AI. As a use case, let’s consider a scenario where a hospital registers a new patient, and the patient submits their previous prescription records. Using Document AI, we can extract relevant details such as past illnesses, allergies, and the patient’s blood group.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1411411151"&gt;&lt;SPAN&gt;Document AI:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;. As a pre-requisite, run a booster to activate Document AI in a trial account.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Reference link: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/cp-aibus-dox-booster-key.html" target="_blank" rel="noopener noreferrer"&gt;Use Trial to Set Up Account for SAP Document AI and Get Service Key&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;. Create a custom schema as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299078i876DDC7000A272CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;. Upload sample prescriptions. Here, I have uploaded two prescriptions of a&amp;nbsp;patient (merged into a single PDF). &lt;EM&gt;Please note that all the data is fictitious.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299079i67D96ABDEC86A48D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299080i9F613DA1CF5B38C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;. Verify the extraction results, if required edit and then confirm.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299083iB54A73D12B3B235B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this example we get confidence percentage is 51%-80%. Please note, &lt;EM&gt;i&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;nstant learning&lt;/EM&gt; based on feedback is available on premium edition.&amp;nbsp;Reference link: &lt;A href="https://help.sap.com/docs/document-information-extraction/document-information-extraction/instant-learning-premium-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Instant Learning (Premium Edition)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1214897646"&gt;&lt;SPAN&gt;Cloud Integration:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For the demo, I will send the PDF to Cloud Integration using an API testing tool. Cloud Integration will then forward it to Document AI, extract the results.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299114i70FE2EAC2873B982/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The list of Document AI's APIs can be viewed using Swagger UI. The URL for swagger can be constructed from the Service key in the format:&amp;nbsp;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299085iCA62300FF3294F7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To call the Document AI API to post documents, use the below API.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299088iFF950F7BE5A548C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The content modifier is used to set the options as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299089iC8157A3A91CDBB18/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to create the multipart/form-data format.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The endpoint for the 1st call is &lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The response structure of the 1st call is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299090i0142138ADE6AAD44/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Retrieve the &lt;EM&gt;&lt;FONT color="#000000"&gt;id&lt;/FONT&gt;&lt;/EM&gt; and use the &lt;EM&gt;looping processing call&lt;/EM&gt; option to get the extraction result once the job is completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299092i6F16E82CDB06D189/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use the endpoint for 2nd call to get the extraction result:&lt;/SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs/&amp;lt;id&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to retrieve the field values where the confidence level is more than 60%, and format the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Test the iFlow endpoint using API testing tool (as shown below).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299093i9A20B029F3FB9E55/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note that all the data are fictitious.&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1018384141"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;This blog post demonstrates a prototype that integrates Document AI for real life use cases along with Cloud Integration.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Reference Link: &lt;A href="https://help.sap.com/docs/document-ai/sap-document-ai/what-is-sap-document-ai?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Document AI&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914"/>
    <published>2025-08-10T19:19:42.064000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222</id>
    <title>Invoking LLM from Cloud Integration Responsibly – Made Easy with Generative AI Hub in SAP AI Core</title>
    <updated>2025-08-11T09:53:30.525000+02:00</updated>
    <author>
      <name>Daniil_Bolobono</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/80755</uri>
    </author>
    <content>&lt;P&gt;In this blog post, I’ll walk you through how to seamlessly invoke large language models (LLMs) from Cloud Integration using the Generative AI Hub and the Orchestration Workflow API in SAP AI Core. We’ll focus on building a &lt;STRONG&gt;GDPR-compliant&lt;/STRONG&gt; automation flow that leverages &lt;STRONG&gt;data masking and pseudonymisation&lt;/STRONG&gt; to ensure privacy while still delivering value from generative AI.&lt;/P&gt;&lt;P&gt;The scenario we'll explore simulates a real-world use case: when a Business Partner record is updated in SAP S/4HANA Cloud, a personalized email notification is generated by an LLM and automatically sent out via Cloud Integration.&lt;/P&gt;&lt;P&gt;Thanks to prebuilt &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;orchestration&lt;/A&gt; capabilities of Generative AI Hub in SAP AI Core, such as &lt;STRONG&gt;templating&lt;/STRONG&gt;, &lt;STRONG&gt;I/O filtering&lt;/STRONG&gt;, and &lt;STRONG&gt;data masking&lt;/STRONG&gt;, the process of generating compliant LLM responses can be achieved with just a single API call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="email-generator.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298780i724952800A21D134/image-size/large?v=v2&amp;amp;px=999" role="button" title="email-generator.png" alt="email-generator.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;Before diving into the implementation steps, let’s take a closer look at the process flow behind this sample scenario.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow (Steps)&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Business Partner Update in SAP S/4HANA Cloud&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;A user creates or edits a Business Partner record in&amp;nbsp;SAP S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Event Triggered and Message Sent to SAP AEM&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The system triggers an event and sends a message to&amp;nbsp;SAP Advanced Event Mesh (AEM).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Cloud Integration iFlow Subscribes and Starts Processing&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The CPI iFlow&amp;nbsp;subscribes to the AEM queue and begins processing as soon as a new message is published.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Retrieve Old Payload from CAP Application&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;queries the&amp;nbsp;CAP application&amp;nbsp;to retrieve the&amp;nbsp;previous version (old payload)&amp;nbsp;of the Business Partner record from&amp;nbsp;SAP HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Call the Orchestration Workflow API of SAP AI Core for AI-Based Email Generation&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;With both the old and new payloads in hand, the iFlow invokes the Generative AI Hub using the Orchestration Workflow API of SAP AI Core to generate a personalized email body in HTML format. Here, a predefined orchestration pipeline applies data masking, prompt templating, and foundation model invocation to generate a compliant, personalised email body – without exposing any sensitive data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Send Email to Business Partner&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;sends the generated email to the Business Partner’s email address via a standard mail adapter in Cloud Integration, completing the end-to-end notification process.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;As part of this blog, I will not focus on connectivity between SAP S/4HANA Cloud and SAP Advanced Event Mesh (steps 1 and 2). For a live step-by-step demonstration of the setup, please review this video: &lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&lt;A href="https://youtu.be/6hb9l0ss5ec?si=xubXNtx_7YXFm-11" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Tech Bytes: Configuring SAP S/4HANA Cloud and SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737000677"&gt;Configuring Orchestration Workflow in SAP AI Core&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Orchestration in SAP AI Core&lt;/A&gt; is a managed service that enables unified access, control, and execution of generative AI models through standardized APIs, templating, and configurable AI workflow components.&lt;/P&gt;&lt;P&gt;In our scenario, we will utilize it to chain together prebuilt steps, such as data masking and foundation model invocation, to generate a personalized email body in HTML format via a single API call.&lt;/P&gt;&lt;P&gt;To access the Orchestration service in SAP AI Core, you need to set up Generative AI Hub in &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/1f756a52-8968-4ec4-92d0-f9bddf552ea3" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Core&lt;/A&gt; and &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/20fa1fda-1871-413d-becc-5a58884d8827" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Launchpad&lt;/A&gt;. Please refer to either of the following resources for setup instructions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Discovery Mission: &lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4403/4689/?tab=overview" target="_blank" rel="noopener nofollow noreferrer"&gt;Set Up SAP AI Core Generative AI Hub&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP Developer Center Tutorial: &lt;A href="https://developers.sap.com/group.setup-ai-core.html" target="_blank" rel="noopener noreferrer"&gt;Generative AI with SAP AI Core - Setup&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298739i3731D66CDAD62166/image-size/large?v=v2&amp;amp;px=999" role="button" title="prereq1.png" alt="prereq1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Before moving to the next step, please ensure that your orchestration configuration is deployed and is in the &lt;EM&gt;&lt;STRONG&gt;RUNNING&lt;/STRONG&gt;&lt;/EM&gt; status.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298741iF81DAFEA5A834382/image-size/large?v=v2&amp;amp;px=999" role="button" title="prereq2.png" alt="prereq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669569891"&gt;Building the Orchestration Workflow&lt;/H3&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;In this example, we will build the orchestration workflow for the event of &lt;/SPAN&gt;&lt;STRONG&gt;Business Partner change&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Within SAP AI Launchpad, navigate to Generative AI Hub -&amp;gt; Orchestration and click Edit Workflow to select the workflow steps you require.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore0.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298781i9AAF94C8C7612E6C/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore0.png" alt="aicore0.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For our scenario, deselect the Input Translation and Output Translation steps, as they are not needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298752i38CE9D49203FDC22/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore1.png" alt="aicore1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://community.sap.com/Templating" target="_blank" rel="noopener nofollow noreferrer"&gt;Templating&lt;/A&gt; step, we define prompts that guide LLM on how to perform its task.&lt;/P&gt;&lt;P&gt;We configure two types of messages for our scenario:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;System Prompt&lt;/LI&gt;&lt;LI&gt;User Prompt&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The system prompt defines the overall &lt;STRONG&gt;behavior, tone, and role&lt;/STRONG&gt; of the LLM. It sets global instructions that remain consistent across requests, ensuring predictable formatting and response style.&lt;/P&gt;&lt;P&gt;For our use case, the system prompt will instruct the LLM to act as a multilingual assistant that compares old and new Business Partner profiles and generates a compliant email.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".
Instructions:
- Detect all relevant changes (ignore changes in fields named change_time or change_date).
- Summarize the changes clearly and concisely.
- Keep it concise and clear.
- Format the response as HTML (do not use code blocks).
- Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
- Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
- Address the Business Partner by full name if available.
- End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
- Keep the tone friendly, clear, and professional.
- Do not generate the email subject line, only the body.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The user prompt provides the &lt;STRONG&gt;dynamic, task-specific input&lt;/STRONG&gt; for each request. Here, we pass actual data: the &lt;STRONG&gt;old profile payload&lt;/STRONG&gt;, &lt;STRONG&gt;new profile payload&lt;/STRONG&gt;, and &lt;STRONG&gt;target language&lt;/STRONG&gt;. These placeholders will be replaced at runtime to generate personalized content.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Write the email in the language: {{?language_name}}
Here is the OLD profile payload: {{?old_payload}}
Here is the NEW profile payload: {{?new_payload}}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298782i2DBF6A163EA56CA1/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore3.png" alt="aicore3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/data-masking-d9a54d9ca54b40beacbd24e1663ec3b4?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Data Masking&lt;/A&gt; step, we can anonymize or pseudonymize personally identifiable information from the input for selected entities. For our scenario, we will select the &lt;STRONG&gt;Pseudonymization&lt;/STRONG&gt; option. This will substitute personally identifiable information in selected categories with a MASKED_ENTITY_ID placeholder and allow us to unmask the LLM response before returning it to the Sender.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298746i05827E1812528552/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore4.png" alt="aicore4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-input-filtering" target="_blank" rel="noopener noreferrer"&gt;Input Filtering&lt;/A&gt; step allows you to apply content safety filters to the incoming data before invoking the foundation model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298753i18CF0C0B34DF85B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore5.png" alt="aicore5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Model Configuration step, we can select the desired model (e.g., GPT-4.1) and configure relevant parameters such as temperature, token limits, etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298749iBBA647EDEB107980/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore6.png" alt="aicore6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-output-filtering" target="_blank" rel="noopener noreferrer"&gt;Output Filtering&lt;/A&gt; step enables content safety filtering on the LLM-generated response to ensure compliance and prevent undesired content.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298750i175484FBD4CDFD81/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore7.png" alt="aicore7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the orchestration workflow is configured, you can inspect its JSON definition and download it locally. This definition will be used later when invoking the orchestration workflow via API from Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298754iE2EFEB37A5D08970/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore8.png" alt="aicore8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Additionally, you can test the orchestration inference directly within SAP AI Launchpad by providing sample input variables. The testing tool allows you to view and trace the LLM response and fine-tune the workflow configuration as needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298756i55B46CC7E693776E/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore9.png" alt="aicore9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When inspecting the output payload, you can clearly trace the results of each orchestration step – such as Input Masking, Output Unmasking, Input Filtering, and Output Filtering.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298758i53EBA0EAD81C5D10/image-size/large?v=v2&amp;amp;px=999" role="button" title="aicore10.png" alt="aicore10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To learn more about Orchestration in SAP AI Core, refer to the &lt;A href="https://developers.sap.com/group.sap-ai-core-generative.html" target="_blank" rel="noopener noreferrer"&gt;SAP Developer Center Tutorials: Generative AI with SAP AI Core - orchestration&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1343973667"&gt;Configure SAP Cloud Integration Business Partner Notification iFlow&lt;/H2&gt;&lt;P&gt;Now that we have our SAP S/4HANA Cloud, SAP Advanced Event Mesh, and the Orchestration Workflow in SAP AI Core configured, we can proceed with the Cloud Integration iFlow configuration.&lt;/P&gt;&lt;P&gt;This iFlow ensures that Business Partner changes trigger compliant AI-generated email notifications, while maintaining data consistency in HANA Cloud. It leverages SAP Advanced Event Mesh, CAP, and Generative AI Hub for an automated end-to-end process.&lt;/P&gt;&lt;H3 id="toc-hId-1276542881"&gt;High-Level iFlow Overview&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Triggered by AEM Queue&amp;nbsp;when a new event is published.&lt;/LI&gt;&lt;LI&gt;Retrieves BP details from S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;(&lt;EM&gt;If event is BP update&lt;/EM&gt;)&amp;nbsp;Fetches old BP payload&amp;nbsp;from HANA Cloud (via CAP service).&lt;/LI&gt;&lt;LI&gt;Invokes the &lt;STRONG&gt;Orchestration Workflow API&lt;/STRONG&gt; to compare old vs. new payloads and generate an HTML email content while ensuring that no sensitive information is passed to LLM.&lt;/LI&gt;&lt;LI&gt;Upserts updated BP details into SAP HANA Cloud&amp;nbsp;via CAP service.&lt;/LI&gt;&lt;LI&gt;Sends an email to the Business Partner.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080029376"&gt;Step-by-Step Process Breakdown&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Event Trigger&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow subscribes to the&amp;nbsp;AEM queue&amp;nbsp;and processes incoming events.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Business Partner Details&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;An&amp;nbsp;OData request&amp;nbsp;is sent to&amp;nbsp;SAP S/4HANA Cloud&amp;nbsp;to fetch the latest BP details.&lt;/LI&gt;&lt;LI&gt;Key parameters (e.g., &lt;STRONG&gt;BP ID&lt;/STRONG&gt;&lt;STRONG&gt;, &lt;/STRONG&gt;&lt;STRONG&gt;BP email&lt;/STRONG&gt;) are extracted and saved into the properties for further processing.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Map to CAP Format&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;BP details are&amp;nbsp;transformed&amp;nbsp;into the &lt;STRONG&gt;CAP service&lt;/STRONG&gt; data model.&lt;/LI&gt;&lt;LI&gt;The&amp;nbsp;new payload is stored&amp;nbsp;in XML and JSON format for further use.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Conditional Logic&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BP creation&lt;/STRONG&gt; → No old payload is retrieved.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BP update&lt;/STRONG&gt; → Old payload is retrieved for comparison.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Old Payload from HANA Cloud (&lt;EM&gt;BP update only&lt;/EM&gt;)&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow calls&amp;nbsp;the &lt;STRONG&gt;CAP service &lt;/STRONG&gt;to fetch the previous BP record. Please refer to the GitHub repository &lt;A href="https://github.com/bolodania/businesspartner_srv" target="_blank" rel="noopener nofollow noreferrer"&gt;businesspartner_srv&lt;/A&gt; for more information on the CAP service. In our scenario, the CAP service acts as an intermediary that retrieves old Business Partner data from SAP HANA Cloud, provides an OData service for data access, and enables the upsert of updated details.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;AI-Based Email Generation&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;A subprocess calls the Orchestration Workflow API via the AI adapter to create a personalized HTML email body in a GDPR-compliant way.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Upsert BP Details in HANA Cloud&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The updated BP details are upserted into SAP HANA Cloud via the CAP service.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Send Email&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow sends an email using the&amp;nbsp;Mail Adapter.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298762i0CE2AE68A87967FB/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi1.png" alt="cpi1.png" /&gt;&lt;/span&gt;You can find this iFlow as a ZIP archive here: &lt;A href="https://github.com/bolodania/cpi_gen_ai_hub_blog/blob/main/AEM_GenAI_BPMailGenerator_blog.zip" target="_blank" rel="noopener nofollow noreferrer"&gt;AEM_GenAI_BPMailGenerator_blog.zip&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For this blog, we’ll take a closer look at &lt;STRONG&gt;Step #6&lt;/STRONG&gt;, where the &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Receiver Adapter&lt;/A&gt; &lt;/STRONG&gt;is used to invoke the Orchestration Workflow API configured in the previous section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298765i406A07F5364686D9/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi2.png" alt="cpi2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1) In our case, the easiest way to prepare a payload for the AI Receiver Adapter is by using a small Groovy script.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonOutput

Message processData(Message message) {
    def map = message.getProperties()

    def createBP = map.get("EventType").toString() == "sap.s4.beh.businesspartner.v1.BusinessPartner.Created.v1" ? true : false

    // Dynamic user template
    def userText = createBP
        ? "Write the email in the language: {{?language_name}}\nHere is the NEW profile payload: {{?new_payload}}"
        : "Write the email in the language: {{?language_name}}\nHere is the OLD profile payload: {{?old_payload}}\nHere is the NEW profile payload: {{?new_payload}}"

    def userTemplate = [
        role: "user",
        content: [
            [
                type : "text",
                text : userText
            ]
        ]
    ]

    def systemText = createBP
        ? """You are a multilingual assistant. Your task is to generate a warm, professional welcome email for a newly created Business Partner profile based on the provided NEW profile payload.

        Instructions:
        - Welcome the Business Partner.
        - Address the Business Partner by full name if available.
        - Mention that their profile has been successfully created.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Keep it concise and clear.
        - Keep the tone friendly, professional, and approachable.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Do not generate the email subject line, only the body."""
        
        : """You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".

        Instructions:
        - Detect all relevant changes (ignore changes in fields named change_time or change_date).
        - Summarize the changes clearly and concisely.
        - Keep it concise and clear.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
        - Address the Business Partner by full name if available.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Keep the tone friendly, clear, and professional.
        - Do not generate the email subject line, only the body."""

    def systemTemplate = [
        role: "system",
        content: [
            [
                type : "text",
                text : systemText
            ]
        ]
    ]
    
    def language = map.get("language")
    def newPayload = map.get("new_payload_json")
    
    def inputParams = [
        language_name: language,
        new_payload: newPayload instanceof String ? newPayload : JsonOutput.toJson(newPayload)
    ]
    
    if (!createBP) {
        def oldPayload = map.get("old_payload_json")
        inputParams.old_payload = oldPayload instanceof String ? oldPayload : JsonOutput.toJson(oldPayload)
    }


    // Build the JSON structure
    def payload = [
        orchestration_config: [
            module_configurations: [
                llm_module_config: [
                    model_name: "gpt-4.1",
                    model_params: [
                        frequency_penalty: 0,
                        presence_penalty: 0,
                        max_completion_tokens: 24576,
                        temperature: 1
                    ],
                    model_version: "2025-04-14"
                ],
                templating_module_config: [
                    template: [
                        userTemplate,
                        systemTemplate
                    ],
                    defaults: [:]
                ],
                filtering_module_config: [
                    input : [
                        filters: [
                            [
                                type: "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2,
                                    PromptShield: true
                                ]
                            ]
                        ]
                    ],
                    output: [
                        filters: [
                            [
                                type  : "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2
                                ]
                            ]
                        ]
                    ]
                ],
                masking_module_config: [
                    masking_providers: [
                        [
                            type: "sap_data_privacy_integration",
                            method: "pseudonymization",
                            entities: [
                                [type: "profile-credit-card-number"],
                                [type: "profile-driverlicense"],
                                [type: "profile-email"],
                                [type: "profile-sensitive-data"],
                                [type: "profile-ethnicity"],
                                [type: "profile-gender"],
                                [type: "profile-pronouns-gender"],
                                [type: "profile-iban"],
                                [type: "profile-location"],
                                [type: "profile-nationalid"],
                                [type: "profile-nationality"],
                                [type: "profile-org"],
                                [type: "profile-passport"],
                                [type: "profile-person"],
                                [type: "profile-phone"],
                                [type: "profile-political-group"],
                                [type: "profile-sapids-public"],
                                [type: "profile-religious-group"],
                                [type: "profile-sapids-internal"],
                                [type: "profile-ssn"],
                                [type: "profile-sexual-orientation"],
                                [type: "profile-trade-union"],
                                [type: "profile-address"],
                                [type: "profile-url"],
                                [type: "profile-university"],
                                [type: "profile-username-password"]
                            ],
                            mask_grounding_input: [enabled: false],
                            allowlist: []
                        ]
                    ]
                ]
            ]
        ],
        input_params: inputParams
    ]

    // Serialize to JSON string
    def jsonString = JsonOutput.toJson(payload)
    message.setBody(jsonString)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This script constructs the payload expected by the Orchestration API of SAP AI Core.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298764i8D609145087017D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi3.png" alt="cpi3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that the settings within the &lt;EM&gt;module_configurations&lt;/EM&gt; block match the configuration that you downloaded from SAP AI Launchpad.&lt;/P&gt;&lt;P&gt;2) To set up a Connection to our AI Core Orchestration deployment, we first need to configure a Security Material.&lt;BR /&gt;In your SAP BTP Cockpit and access the service key of the SAP AI Core (extended plan) service instance created earlier.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298766i96E718E06DB8F818/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi4.png" alt="cpi4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create an &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; Security Material with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Token Service URL: &lt;STRONG&gt;url &lt;/STRONG&gt;from the service key + “/oauth/token”&lt;/LI&gt;&lt;LI&gt;Client ID: &lt;STRONG&gt;clientid&lt;/STRONG&gt; from the service key&lt;/LI&gt;&lt;LI&gt;Client Secret: &lt;STRONG&gt;clientsecret &lt;/STRONG&gt;from the service key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298767i7783529BF8B7EC89/image-size/medium?v=v2&amp;amp;px=400" role="button" title="cpi5.png" alt="cpi5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab of the AI Receiver Adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set the &lt;STRONG&gt;Address&lt;/STRONG&gt; to the AI_API_URL from the service key.&lt;/LI&gt;&lt;LI&gt;Reference the Security Material in the &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298768iD149FF2BEA8E8894/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi6.png" alt="cpi6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Processing&lt;/STRONG&gt; tab:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set &lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt; to “Exchange Body”.&lt;/LI&gt;&lt;LI&gt;Provide the &lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt; and &lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt; from SAP AI Launchpad.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298771i84B4983238E49650/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi8.png" alt="cpi8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298769i66B867762AFDDF1A/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi7.png" alt="cpi7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3) JSON output is converted into XML for further processing.&lt;/P&gt;&lt;P&gt;4) Content Modifier step is used to extract the &lt;STRONG&gt;&lt;EM&gt;email_body&lt;/EM&gt;&lt;/STRONG&gt; from the Orchestration API response via the XPath expression: &lt;STRONG&gt;&lt;EM&gt;/root/orchestration_result/choices/message/content&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298772i757F3C22FD3B7557/image-size/large?v=v2&amp;amp;px=999" role="button" title="cpi9.png" alt="cpi9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754433152"&gt;Testing the Scenario End-to-End&lt;/H2&gt;&lt;P&gt;With all components configured, it’s time to put the setup to the test.&lt;/P&gt;&lt;P&gt;&lt;A href="https://dam.sap.com/mac/u/a/jSB7LiM?rc=10&amp;amp;doi=SAP1229099 " target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":film_projector:"&gt;📽&lt;/span&gt;️ Watch Event-Driven Business Partner Email Notification Demo&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The video walks through the entire process – showing the change in SAP S/4HANA Cloud, the processing inside Cloud Integration, and the final email received by the Business Partner.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557919647"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This scenario highlights how &lt;STRONG&gt;simple and seamless it is to invoke SAP AI Core from Cloud Integration&lt;/STRONG&gt; to generate compliant, human-sounding content.&lt;/P&gt;&lt;P&gt;With just a small Groovy script to prepare the payload, CPI can call an &lt;STRONG&gt;SAP AI Core Orchestration Workflow&lt;/STRONG&gt; directly via the AI Receiver Adapter – without complex custom coding or middleware. All compliance safeguards, such as data masking and filtering, are handled by the orchestration workflow, ensuring that &lt;STRONG&gt;no sensitive information is ever sent to the LLM&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;The result is an &lt;STRONG&gt;automated, end-to-end process&lt;/STRONG&gt; where a Business Partner update in SAP S/4HANA Cloud triggers an event, CPI processes it, SAP AI Core generates the compliant email body, and the recipient is informed – all with minimal configuration effort.&lt;/P&gt;&lt;P&gt;This pattern can be applied to other master data objects and backend systems, as well as to any scenario where Cloud Integration must securely generate AI-based content — making it &lt;STRONG&gt;a powerful blueprint for scaling compliant AI adoption across the enterprise.&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222"/>
    <published>2025-08-11T09:53:30.525000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/%EF%B8%8F-real-time-weather-display-on-sap-btp-with-openweathermap-api-step-by-step/ba-p/14172919</id>
    <title>☁️ Real-time Weather Display on SAP BTP with OpenWeatherMap API — Step-by-Step Fiori Application</title>
    <updated>2025-08-11T12:01:26.753000+02:00</updated>
    <author>
      <name>ilkertkn25</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/154635</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&amp;nbsp;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;This article I will show you step by step how to display real-time weather data in a Fiori application using the OpenWeatherMap API on SAP BTP. The application will request city information from the user and display information such as current temperature, humidity, and wind speed in a table format.&lt;/P&gt;&lt;P&gt;Output:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ilkertkn25_0-1754457909087.png" style="width: 834px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297009iFCC529E3D17D615D/image-dimensions/834x144?v=v2" width="834" height="144" role="button" title="ilkertkn25_0-1754457909087.png" alt="ilkertkn25_0-1754457909087.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ilkertkn25_1-1754457934109.png" style="width: 809px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297010iE41B2AB2AA702B91/image-dimensions/809x421?v=v2" width="809" height="421" role="button" title="ilkertkn25_1-1754457934109.png" alt="ilkertkn25_1-1754457934109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ 1. Obtaining an OpenWeatherMap API Key&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Go to &lt;A href="https://openweathermap.org/api" target="_blank" rel="noopener nofollow noreferrer"&gt;https://openweathermap.org/api&lt;/A&gt;.&lt;BR /&gt;Sign up and then create a new API key from the API keys tab.&lt;BR /&gt;Alternatively, an example request would look like this:&lt;BR /&gt;&lt;A href="https://api.openweathermap.org/data/2.5/forecast?lat=44.34&amp;amp;lon=10.99&amp;amp;appid=e21c9996e2801f22e2bd0f7d11d1b367" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openweathermap.org/data/2.5/forecast?lat=44.34&amp;amp;lon=10.99&amp;amp;appid=e21c9996e2801f22e2bd0f7d11d1b367&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;This API key: e21c9996e2801f22e2bd0f7d11d1b367 can be used for testing. If it doesn't work, you can create a free one.&lt;/P&gt;&lt;P&gt;When we send a request with the link, it returns a JSON list like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ilkertkn25_2-1754457981499.png" style="width: 577px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297012i036F9E9D32DFB518/image-dimensions/577x704?v=v2" width="577" height="704" role="button" title="ilkertkn25_2-1754457981499.png" alt="ilkertkn25_2-1754457981499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧱 2. Creating a UI5 Project in SAP Business Application Studio&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;A. Start a new Fiori application&lt;BR /&gt;SAP Business Application Studio &amp;gt; “Create Project from Template”&lt;BR /&gt;Template: SAP Fiori Application&lt;BR /&gt;Data Source: “None”&lt;BR /&gt;Project Name: weather-app&lt;BR /&gt;B. Project folder structure:&lt;BR /&gt;weather-app/&lt;BR /&gt;├── webapp/&lt;BR /&gt;│ ├── controller/&lt;BR /&gt;│ │ └── View1.controller.js&lt;BR /&gt;│ ├── model/&lt;BR /&gt;│ │ └── cityData.json&lt;BR /&gt;│ ├── util/&lt;BR /&gt;│ │ └── formatter.js&lt;BR /&gt;│ ├── view/&lt;BR /&gt;│ │ └── View1.view.xml&lt;BR /&gt;│ └── index.html&lt;BR /&gt;└── manifest.json&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_showing_europe_africa:"&gt;🌍&lt;/span&gt;3. Defining City Data as JSON&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;webapp/model/cityData.json:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;{
    "cities": [
    { "name": "İstanbul", "lat": 41.0082, "lon": 28.9784 },
    { "name": "Ankara", "lat": 39.9208, "lon": 32.8541 },
    { "name": "İzmir", "lat": 38.4192, "lon": 27.1287 },
    { "name": "Bursa", "lat": 40.195, "lon": 29.06 },
    { "name": "Antalya", "lat": 36.8969, "lon": 30.7133 },
    { "name": "Trabzon", "lat": 41.0014, "lon": 39.7178 },
    { "name": "Gaziantep", "lat": 37.0662, "lon": 37.3833 },
    { "name": "Samsun", "lat": 41.2867, "lon": 36.33 },
    { "name": "Kayseri", "lat": 38.7348, "lon": 35.4676 },
    { "name": "Eskişehir", "lat": 39.7667, "lon": 30.5256 }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;4. View1.view.xml — UI Development&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View
  controllerName="weatherapp.controller.View1"
  xmlns:mvc="sap.ui.core.mvc"
  xmlns:core="sap.ui.core"
  xmlns="sap.m"
  displayBlock="true"&amp;gt;

  &amp;lt;VBox id="IDVBoxMain" class="sapUiMediumMargin sapUiResponsiveContentPadding" alignItems="Center"&amp;gt;

    &amp;lt;!-- Şehir Seçimi --&amp;gt;
    &amp;lt;HBox id="IDHBoxCitySelect" class="sapUiSmallMarginBottom" alignItems="Center"&amp;gt;
      &amp;lt;Label id="IDLabelCity" text="Şehir Seçin:" labelFor="IDComboCitySelect" class="sapUiSmallMarginEnd"/&amp;gt;
      &amp;lt;ComboBox id="IDComboCitySelect"
                items="{/cities}"
                selectionChange=".onCityChange"
                placeholder="Şehir seçin"
                width="220px"
                editable="true"&amp;gt;
        &amp;lt;items&amp;gt;
          &amp;lt;core:Item id="IDComboItemCity" key="{lat},{lon}" text="{name}" /&amp;gt;
        &amp;lt;/items&amp;gt;
      &amp;lt;/ComboBox&amp;gt;
    &amp;lt;/HBox&amp;gt;

    &amp;lt;!-- Anlık Hava Durumu Tablosu --&amp;gt;
    &amp;lt;Table id="IDTableCurrentWeather"
           items="{weatherModel&amp;gt;/Forecast}"
           inset="false"
           width="100%"
           class="sapUiResponsiveTable"
           growing="true"
           growingScrollToLoad="true"&amp;gt;

      &amp;lt;headerToolbar&amp;gt;
        &amp;lt;Toolbar id="IDToolbarWeather"&amp;gt;
          &amp;lt;Title id="IDTitleWeather" text="📡 Hava Durumu Tahmini" level="H2"/&amp;gt;
        &amp;lt;/Toolbar&amp;gt;
      &amp;lt;/headerToolbar&amp;gt;

      &amp;lt;columns&amp;gt;
        &amp;lt;Column id="IDColDate"&amp;gt;&amp;lt;Text id="IDColTextDate" text="📅 Tarih Saat"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColTemp"&amp;gt;&amp;lt;Text id="IDColTextTemp" text="🌡 Sıcaklık (°C)"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColFeels"&amp;gt;&amp;lt;Text id="IDColTextFeels" text="🤒 Hissedilen (°C)"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColDesc"&amp;gt;&amp;lt;Text id="IDColTextDesc" text="🌤 Hava Durumu"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColHumidity"&amp;gt;&amp;lt;Text id="IDColTextHumidity" text="💧 Nem (%)"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColWind"&amp;gt;&amp;lt;Text id="IDColTextWind" text="🌬 Rüzgar (m/s)"/&amp;gt;&amp;lt;/Column&amp;gt;
      &amp;lt;/columns&amp;gt;

      &amp;lt;items&amp;gt;
        &amp;lt;ColumnListItem id="IDRowWeatherItem" type="Active"&amp;gt;
          &amp;lt;cells&amp;gt;
            &amp;lt;Text id="IDCellDate" text="{weatherModel&amp;gt;dt_txt}" class="sapMTextStrong"/&amp;gt;
            &amp;lt;ObjectNumber id="IDCellTemp"
                          number="{path: 'weatherModel&amp;gt;temp', formatter: '.formatter.formatKelvinToCelsius'}"
                          unit="°C"
                          state="Success"/&amp;gt;
            &amp;lt;ObjectNumber id="IDCellFeels"
                          number="{path: 'weatherModel&amp;gt;feels_like', formatter: '.formatter.formatKelvinToCelsius'}"
                          unit="°C"
                          state="Warning"/&amp;gt;
            &amp;lt;Text id="IDCellDesc" text="{weatherModel&amp;gt;weather_desc}"/&amp;gt;
            &amp;lt;Text id="IDCellHumidity" text="{weatherModel&amp;gt;humidity}"/&amp;gt;
            &amp;lt;Text id="IDCellWind" text="{weatherModel&amp;gt;wind_speed}"/&amp;gt;
          &amp;lt;/cells&amp;gt;
        &amp;lt;/ColumnListItem&amp;gt;
      &amp;lt;/items&amp;gt;
    &amp;lt;/Table&amp;gt;

  &amp;lt;/VBox&amp;gt;
&amp;lt;/mvc:View&amp;gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;5. View1.controller.js — API Consumption&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
  "sap/ui/core/mvc/Controller",
  "sap/ui/model/json/JSONModel",
  "weatherapp/util/formatter"
], function (Controller, JSONModel, formatter) {
  "use strict";

  return Controller.extend("weatherapp.controller.View1", {
    formatter: formatter,

    onInit: function () {
      const oCityModel = new JSONModel();
      oCityModel.loadData("model/cityData.json");
      this.getView().setModel(oCityModel);

      oCityModel.attachRequestCompleted(() =&amp;gt; {
        const aCities = oCityModel.getData();
        if (aCities?.length &amp;gt; 0) {
          const firstCity = aCities[0];
          this.loadCurrentWeather(firstCity.lat, firstCity.lon);
        }
      });
    },

    onCityChange: function (oEvent) {
      const sKey = oEvent.getParameter("selectedItem").getKey();
      const [lat, lon] = sKey.split(",");
      this.loadCurrentWeather(lat, lon);
    },

    loadCurrentWeather: async function (lat, lon) {
      const apiKey = "e21c9996e2801f22e2bd0f7d11d1b367";
      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&amp;amp;lon=${lon}&amp;amp;appid=${apiKey}&amp;amp;lang=tr`;

      try {
        const response = await fetch(url);
        const data = await response.json();

        const row = {
          dt_txt: new Date(data.dt * 1000).toLocaleString("tr-TR"),
          temp: data.main.temp,
          feels_like: data.main.feels_like,
          humidity: data.main.humidity,
          wind_speed: data.wind.speed,
          weather_desc: data.weather?.[0]?.description || ""
        };

        const oWeatherModel = new JSONModel({ Forecast: [row] });
        this.getView().setModel(oWeatherModel, "weatherModel");
      } catch (err) {
        console.error("Anlık hava durumu alınamadı:", err);
      }
    }
  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt;6. formatter.js&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([], function () {
  "use strict";

  return {
    formatKelvinToCelsius: function (kelvin) {
      const k = parseFloat(kelvin);
      return isNaN(k) ? "N/A" : (k - 273.15).toFixed(1);
    }
  };
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, with this UI5-based Fiori application developed on SAP BTP, users can instantly view real-time weather data for their selected city. By developing projects like this using the OpenWeatherMap API, you can integrate external data sources into your system.&lt;/P&gt;&lt;P&gt;For more content, you can also find me on Medium (username: tekin.ilker24).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/%EF%B8%8F-real-time-weather-display-on-sap-btp-with-openweathermap-api-step-by-step/ba-p/14172919"/>
    <published>2025-08-11T12:01:26.753000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660</id>
    <title>Bridging EDI and SAP S/4HANA Cloud: Seamless EDI-to-SOAP Integration</title>
    <updated>2025-08-11T12:03:16.570000+02:00</updated>
    <author>
      <name>ManaswiniPuli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940178</uri>
    </author>
    <content>&lt;P&gt;In the fast-paced world of business today, it's crucial to connect traditional EDI systems with modern cloud ERP systems for streamlined operations. This blog takes a closer look at an integration fllow that handles inbound EDI messages, transforms them into SOAP format and facilitate effortless communication with SAP S/4HANA Cloud. Let's explore how this approach changes data formats and guarantees a reliable,standards-complaint integration between legacy and cloud systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;For detailed steps on creating and exporting the required MIG and MAG files used in this integration, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Guide: EDI to SOAP Inbound Integration Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here’s a detailed look at the entire integration flow (iFlow) for processing EDI to SOAP inbound messages. This iFlow covers all the essential steps and components needed to receive, validate, transform, and route EDI messages into SOAP format, ensuring a smooth connection to the SAP S/4HANA Cloud system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_7-1752053017520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284453iE6513532D02A320B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_7-1752053017520.png" alt="ManaswiniPuli_7-1752053017520.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Receive EDI Data via AS2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To initiate the integration, configure the AS2 adapter to receive inbound EDI messages. This configuration supports secure and reliable data transfer in B2B scenarios involving EDI communication.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; For detailed steps on setting up the AS2 adapter, refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695" target="_blank"&gt;Step-by-Step Guide: Secure File Exchange with AS2 Adapter in SAP Cloud Integration – SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Add Start Message&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add a Start Message event to initiate the integration flow when EDI data is received through AS2.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Add EDI Splitter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an EDI Splitter for handling incoming EDI messages. It breaks them down into individual transactions, checks their structure for validity, and can also generate acknowledgments if necessary.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important:&lt;/STRONG&gt;All the XSD and mapping files mentioned in this flow( ASC-X12 XSD, preproc.xsl, and others)—are created and exported during the MIG and MAG setup process in SAP Integration Advisor.&lt;BR /&gt;For a step-by-step guide on generating and exporting these files, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;To upload ASC-X12 XSD file, navigate to the X12 tab in the EDI Splitter configuration. You’ll find the file in the Source folder that was extracted during the MAG export.&lt;/LI&gt;&lt;LI&gt;This file outlines the structure of the incoming EDI message, allowing the splitter to accurately parse and process the X12 message.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_1-1752060193831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284489iA95C1002B00BA32F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_1-1752060193831.png" alt="ManaswiniPuli_1-1752060193831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Add Router&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;Now, let’s add a Router following the EDI Splitter. This step is crucial for separating EDI messages from acknowledgement messages, especially if you’ve enabled the generation of acknowledgements in the splitter.&lt;/P&gt;&lt;P&gt;Let's define two routing paths:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Acknowledgement Route&lt;/STRONG&gt;: This route deals with acknowledgement messages independently.&lt;/P&gt;&lt;P&gt;In the Processing tab, you’ll see:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Expression Type Options:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;XML: This is used when the message is formatted in XML.&lt;/LI&gt;&lt;LI&gt;NON_XML: This is for messages that aren’t in XML format, where routing is based on the message headers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We opt for NON_XML since the acknowledgement message isn’t in XML, so the router checks the message headers instead of the XML content.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Condition&lt;/STRONG&gt;: ${header.EDI_ACKNOWLEDGEMENT} = 'true'&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_5-1752052893931.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284451i666327ED704A7D00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_5-1752052893931.png" alt="ManaswiniPuli_5-1752052893931.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Default Route:&lt;/STRONG&gt; Responsible for processing standard EDI messages.&lt;/P&gt;&lt;P&gt;No condition needed (processes all other messages)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_2-1752060272463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284490i648A4A92543BC05E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_2-1752060272463.png" alt="ManaswiniPuli_2-1752060272463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Integrate EDI to XML Converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, let’s add an EDI to XML Converter to convert the EDI message into XML format.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the X12 tab and upload the ASC-X12.xsd file from the Source folder that you got from the MAG export.&lt;/LI&gt;&lt;LI&gt;The ASC-X12 XSD file defines the structure of the incoming EDI message, enabling the EDI to XML Converter to accurately interpret and transform the EDI data into XML format.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_8-1752053118395.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284454i89136E273FF328CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_8-1752053118395.png" alt="ManaswiniPuli_8-1752053118395.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Include&amp;nbsp;XSLT Mapping (Pre-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Next up, we’ll add XSLT Mapping to handle data preprocessing and transformation.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload preproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the&amp;nbsp;&lt;STRONG&gt;Processing&lt;/STRONG&gt;&amp;nbsp;tab, upload the preproc.xsl File from the&amp;nbsp;&lt;STRONG&gt;Source&lt;/STRONG&gt;&amp;nbsp;folder extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;This step modifies the XML structure created from the EDI message, ensuring it aligns with the expected input format for message mapping.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_9-1752053218929.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284455iF1E52121053479B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_9-1752053218929.png" alt="ManaswiniPuli_9-1752053218929.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: Add XML Validator (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XML Validator to validate the pre-processed XML.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload X12_850_PurchaseOrder_MIG_RD.xsd File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the Validation tab and upload the X12_850_PurchaseOrder_MIG_RD.xsd file from the Source folder you extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;This step makes sure that the transformed XML adheres to the expected schema before you proceed to message mapping, helping you identify any structural issues early on.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_10-1752053254168.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284456i159845643F5EF3D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_10-1752053254168.png" alt="ManaswiniPuli_10-1752053254168.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: Implement XSLT Mapping (Main Mapping)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s add an XSLT Mapping to transform the validated EDI XML into the target SOAP message structure.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the Processing tab, you’ll need to upload the Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl file from the root folder of the exported MAG zip file.&lt;/LI&gt;&lt;LI&gt;This main mapping file, which was generated by SAP Integration Advisor (IA), is crucial for transforming the data into the right format for SAP S/4HANA Cloud.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_11-1752053302564.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284457iB3B5CA68F2D45C00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_11-1752053302564.png" alt="ManaswiniPuli_11-1752053302564.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9: Apply XSLT Mapping (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XSLT Mapping to adjust the mapped XML output to the final structure required by the target system.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload SOAP_SalesOrder_MIG_postproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Head over to the Processing tab and upload the SOAP_SalesOrder_MIG_postproc.xsl file from the Target MIG folder.&lt;/LI&gt;&lt;LI&gt;This ensures the transformed XML matches the exact format expected by the target system for successful processing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_12-1752053341290.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284458i72CD3F449717F994/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_12-1752053341290.png" alt="ManaswiniPuli_12-1752053341290.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10: Add SOAP Receiver Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the SOAP Receiver Adapter to connect to SAP S/4HANA and transmit the transformed XML payload over a SOAP-based web service. This adapter ensures that the data is encapsulated in a SOAP envelope and sent to the appropriate endpoint.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;:Enter the SOAP service endpoint URL provided by your target system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;URL to WSDL&lt;/STRONG&gt;:Click on Browse and upload the .wsdl file that corresponds to your target SOAP service. CPI will automatically fill in the Service, Endpoint, and Operation Name fields based on the WSDL information.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&amp;nbsp;Basic&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Credential Name:&amp;nbsp;&lt;/STRONG&gt;Enter the Credential Name of the User Credentials you set up in Security Material.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_14-1752056043811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284461i14CDBF398602D2F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_14-1752056043811.png" alt="ManaswiniPuli_14-1752056043811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This marks the end of the configuration for the EDI-to-SOAP inbound integration flow. With this iFlow in action, incoming EDI messages are handled efficiently and routed to the S/4HANA target system in the required SOAP format.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;BR /&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660"/>
    <published>2025-08-11T12:03:16.570000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/csv-download-in-rap-via-segw/ba-p/14171031</id>
    <title>CSV Download in RAP via SEGW</title>
    <updated>2025-08-13T10:45:07.040000+02:00</updated>
    <author>
      <name>Nandhana_Murugan</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1662285</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction :&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This blog walks you through the step-by-step approach to enable CSV&amp;nbsp;downloads in a RAP application using SEGW,&amp;nbsp;making data export simple and user‑friendly for end users.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Steps to Enable CSV Download in a RAP Application Using SEGW:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1:&amp;nbsp; Create a Basic View – &lt;/STRONG&gt;Define a basic CDS view based on the source table or view.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Basic View for SO - CSV File'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@VDM.viewType: #BASIC
define view entity z6na_cds_bv_so_csv as select from I_SalesOrder
{
    key SalesOrder,
    key _Item.SalesOrderItem,
        _Item.Material,
        _Item._MaterialText.MaterialName,
        @Semantics.quantity.unitOfMeasure: 'OrderQuantityUnit'
        _Item.OrderQuantity,
        _Item.OrderQuantityUnit
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 2:&amp;nbsp; Create a Root View Entity&lt;/STRONG&gt; – Build a root view entity on top of the basic view and apply the required metadata extension annotation.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Root View Entity for SO- CSV'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define root view entity z6na_cds_rv_so_csv as select from z6na_cds_bv_so_csv
{
    key SalesOrder,
    key SalesOrderItem,
         Material,
         MaterialName,
         @Semantics.quantity.unitOfMeasure: 'OrderQuantityUnit'
         OrderQuantity,
         OrderQuantityUnit
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Step 3:&lt;/STRONG&gt;&amp;nbsp;Define a Metadata Extension and apply the required UI annotations.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity z6na_cds_rv_so_csv
  with  
{
@UI.lineItem: [{ position: 10,label: 'SalesOrder' }]
@UI.selectionField: [{ position: 10  }]
@Consumption.filter: { mandatory: true ,multipleSelections: true }
SalesOrder;
@UI.lineItem: [{ position: 20,label: 'SalesOrderItem' }]
@UI.selectionField: [{ position: 20  }]
SalesOrderItem;
@UI.lineItem: [{ position: 30,label: 'Material' }]
Material;
@UI.lineItem: [{ position: 40,label: 'MaterialName' }]
MaterialName;
@UI.lineItem: [{ position: 50,label: 'OrderQuantity' }]
OrderQuantity ;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 4:&amp;nbsp;Implement a Global Class – &lt;/STRONG&gt;Develop a global class to retrieve data from the source view and convert it into XSTRING format for CSV output.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Class.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296002i598A0A4D11F9B6A4/image-size/large?v=v2&amp;amp;px=999" role="button" title="Class.png" alt="Class.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  METHOD get_sales_order.

    DATA : lt_data    TYPE z6na_tt_so_af,
           lv_xstring TYPE xstring.

    SELECT * FROM z6na_cds_bv_so_csv
      INTO CORRESPONDING FIELDS OF TABLE _data
    WHERE salesorder = @i_vbeln.

    DATA(lv_csv) = |SalesOrder,SalesOrderItem,Material,MaterialName,OrderQuantity,OrderQuantityUnit{ cl_abap_char_utilities=&amp;gt;cr_lf }| &amp;amp;&amp;amp;
                    REDUCE string(
                    INIT lv_acc = ``
                    FOR &amp;lt;ls_out&amp;gt; IN lt_data
          NEXT lv_acc &amp;amp;&amp;amp;= |{ &amp;lt;ls_out&amp;gt;-salesorder },{ &amp;lt;ls_out&amp;gt;-salesorderitem },{ &amp;lt;ls_out&amp;gt;-material },{ &amp;lt;ls_out&amp;gt;-materialname },{ &amp;lt;ls_out&amp;gt;-orderquantity },{ &amp;lt;ls_out&amp;gt;-orderquantityunit }{ cl_abap_char_utilities=&amp;gt;cr_lf }|
 ).
    CALL FUNCTION 'SCMS_STRING_TO_XSTRING'
      EXPORTING
        text     = lv_csv
        mimetype = 'text/csv'
*       ENCODING =
      IMPORTING
        buffer   = lv_xstring
      EXCEPTIONS
        failed   = 1
        OTHERS   = 2.
    IF sy-subrc &amp;lt;&amp;gt; 0.
* Implement suitable error handling here
    ENDIF.

    r_form_content = lv_xstring.

  ENDMETHOD.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 5:&amp;nbsp;Set Up an OData Project in SEGW – &lt;/STRONG&gt;Create an OData project in SEGW to provide the download option for the CSV file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Odata.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296016i72E157ADEFD69450/image-size/large?v=v2&amp;amp;px=999" role="button" title="Odata.png" alt="Odata.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Redefine the GET_STREAM method and write the logic there.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;  method /IWBEP/IF_MGW_APPL_SRV_RUNTIME~GET_STREAM.

    DATA(lv_salesorder) = VALUE char10( it_key_tab[ name = 'salesdoc' ]-value OPTIONAL ).
    DATA(lv_csv_content) = new z6na_cl_so_csv( )-&amp;gt;get_sales_order(
                                                 i_vbeln = conv #( lv_salesorder ) ).

    set_header( is_header = VALUE #( name = 'Content-Disposition'
                                     value = |attachment; filename={ lv_salesorder }.csv| ) ).

    copy_data_to_ref(
      EXPORTING
        is_data = VALUE /IWFND/IF_MGW_CORE_RUNTIME=&amp;gt;ty_s_media_resource(
        mime_type = 'text/csv'
        value     = lv_csv_content
    )
      CHANGING
        cr_data = er_stream
    ).
  endmethod.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 6 : Add Attachment Link Fields&lt;/STRONG&gt; – Include the attachment/download link fields in the basic view, root view, and metadata extension.&lt;/P&gt;&lt;P&gt;Here, we need to attach the service name which we created in SEGW.&lt;/P&gt;&lt;P&gt;In Basic view,&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AbapCatalog.viewEnhancementCategory: [#NONE]
@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Basic View for SO - CSV File'
@Metadata.ignorePropagatedAnnotations: true
@ObjectModel.usageType:{
    serviceQuality: #X,
    sizeCategory: #S,
    dataClass: #MIXED
}
@VDM.viewType: #BASIC
define view entity z6na_cds_bv_so_csv as select from I_SalesOrder
{
    key SalesOrder,
    key _Item.SalesOrderItem,
        _Item.Material,
        _Item._MaterialText.MaterialName,
        @Semantics.quantity.unitOfMeasure: 'OrderQuantityUnit'
        _Item.OrderQuantity,
        _Item.OrderQuantityUnit,
        'PreviewFile' as ShowCSV,
        cast(concat('/sap/opu/odata/SAP/Z6NA_ODATA_CSV_SRV/e_salesdocSet(''', concat( lpad(SalesOrder, 10, '0'), ''')/$value') ) 
        as abap.sstring(1300)) as LinkToCSV
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In Root View , add the preview and link field.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@AccessControl.authorizationCheck: #NOT_REQUIRED
@EndUserText.label: 'Root View Entity for SO- CSV'
@Metadata.ignorePropagatedAnnotations: true
@Metadata.allowExtensions: true
define root view entity z6na_cds_rv_so_csv as select from z6na_cds_bv_so_csv
{
    key SalesOrder,
    key SalesOrderItem,
         Material,
         MaterialName,
         @Semantics.quantity.unitOfMeasure: 'OrderQuantityUnit'
         OrderQuantity,
         OrderQuantityUnit,
         ShowCSV,
         LinkToCSV
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;In metadata extension , add the URL(&lt;STRONG&gt;LinkToCSV&lt;/STRONG&gt; &lt;STRONG&gt;field&lt;/STRONG&gt;) in the UI annotation.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@Metadata.layer: #CORE
annotate entity z6na_cds_rv_so_csv
  with  
{
@UI.lineItem: [{ position: 10,label: 'SalesOrder' }]
@UI.selectionField: [{ position: 10  }]
@Consumption.filter: { mandatory: true ,multipleSelections: true }
SalesOrder;
@UI.lineItem: [{ position: 20,label: 'SalesOrderItem' }]
@UI.selectionField: [{ position: 20  }]
SalesOrderItem;
@UI.lineItem: [{ position: 30,label: 'Material' }]
Material;
@UI.lineItem: [{ position: 40,label: 'MaterialName' }]
MaterialName;
@UI.lineItem: [{ position: 50,label: 'OrderQuantity' }]
OrderQuantity ;
@UI.lineItem: [{ position: 60,label: 'CSV' },{ type:#WITH_URL ,url: 'LinkToCSV' }]
ShowCSV;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Step 7:&amp;nbsp;Expose the Service&lt;/STRONG&gt; – Create a service definition and service binding to make the functionality available for consumption.&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;@EndUserText.label: 'Service Definition for SO - CSV'
define service Z6na_cds_sd_so_csv {
  expose z6na_cds_rv_so_csv;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SD and SB.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296030i87F92BF7ED58F518/image-size/large?v=v2&amp;amp;px=999" role="button" title="SD and SB.png" alt="SD and SB.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: Preview the application.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Preview.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296033i0829333E90802B6E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Preview.png" alt="Preview.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="result.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296038iA51220392B3EF0A9/image-size/large?v=v2&amp;amp;px=999" role="button" title="result.png" alt="result.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;By following these steps, we successfully enabled &lt;STRONG&gt;CSV file download in a RAP application using SEGW&lt;/STRONG&gt;. This approach not only simplifies data export for end users but also demonstrates how RAP and SEGW can work together to deliver practical business functionality.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/csv-download-in-rap-via-segw/ba-p/14171031"/>
    <published>2025-08-13T10:45:07.040000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181709</id>
    <title>Seamless Multi-Company Data Replication in SAP Field Service Management – Part 2</title>
    <updated>2025-08-15T15:13:05.143000+02:00</updated>
    <author>
      <name>sureshmusham</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/643123</uri>
    </author>
    <content>&lt;H3 id="toc-hId-1866862712"&gt;Configurations in CPI and Special handling of Business objects in Multiple Company integration&lt;/H3&gt;&lt;P&gt;In this part, I’ll walk through the SAP Cloud Integration configurations needed to enable the multiple FSM company integration feature. I’ll also highlight some special handling considerations for specific business object types in this setup.&lt;/P&gt;&lt;P&gt;Blog Series links:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181685" target="_self"&gt;Part 1&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Multiple Company integration overview and preparing S/4HANA systems for Multi-Company Integration&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181685" target="_self"&gt;Part 2&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Configurations in CPI and Special handling of Business objects in Multiple Company integration&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181727" target="_self"&gt;Part 3&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;-&amp;nbsp;Achieving Multiple Company integration through custom logic implementation and enhanced error logging&lt;/P&gt;&lt;P&gt;Once the &lt;STRONG&gt;multi-company mapping configuration&lt;/STRONG&gt; is completed in the S/4HANA system (as described in &lt;STRONG&gt;Part 1&lt;/STRONG&gt; of this blog series), the next step is to &lt;STRONG&gt;synchronize&lt;/STRONG&gt; this mapping data into SAP Cloud Integration as a &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To achieve this:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Configure the &lt;STRONG&gt;Synchronize Multiple Company Mapping Configuration&lt;/STRONG&gt; interface according to the standard configuration guide.&lt;/LI&gt;&lt;LI&gt;Deploy the interface.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;When deployed, this process automatically creates a new value mapping artifact:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;“Value Mapping for Multiple Company determination in SAP Field Service Management from SAP S/4HANA”&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;This artifact is stored in the &lt;STRONG&gt;same integration package&lt;/STRONG&gt; and is deployed automatically.&lt;BR /&gt;It contains all the mapping configuration details in the following format:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_0-1755261669432.png" style="width: 485px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301384i57A4328A6AF75DC8/image-dimensions/485x240?v=v2" width="485" height="240" role="button" title="sureshmusham_0-1755261669432.png" alt="sureshmusham_0-1755261669432.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The code list values are automatically created by the synchronization interface. For different rule type, the code list values are defined as per below logic:&lt;/P&gt;&lt;TABLE width="931px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;&lt;STRONG&gt;Category&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&lt;STRONG&gt;Value on S4HANA Access Sequence&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;&lt;STRONG&gt;Value on&amp;nbsp;SAP Field Service Management&amp;nbsp;Account and Company&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;Standard rule type mapping&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&amp;lt;Replication Object&amp;gt;|&amp;lt;Object Attribute type&amp;gt;|&amp;lt;Object Attribute type Value&amp;gt;|&amp;lt;Standard RuleType&amp;gt;|&amp;lt;Rule Value&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;BP|BPROLE|FLCU00|COMPANYCODE|0001&lt;BR /&gt;PR|MATERIALTYPE|ERSA|PLANT|1000&lt;BR /&gt;PS|||PLANT|1000&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;&amp;lt;Account ID&amp;gt;|&amp;lt;Company ID&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Note: if more than one SAP Field Service Management company is mapped for the specific access sequence, it will be populated with comma separation.&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;132132|465465,879497,879846&lt;BR /&gt;132132|465465&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;All Companies configuration&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;Object Code (such as BP)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;ALLCOMPANIES&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;Custom Rule Type (Set at replication object level)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&amp;lt;Replication Object&amp;gt;&lt;BR /&gt;(such as BP)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;CUSTOM&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;Custom Rule Type (Set at replication object attribute level)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&amp;lt;Replication Object&amp;gt;|&amp;lt;Object Attribute type&amp;gt;|&amp;lt;Object Attribute type Value&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;BP|BPROLE|FLCU00&lt;BR /&gt;PR|MATERIALTYPE|ERSA&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;CUSTOM&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;Specific Field rule type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&amp;lt;Replication Object&amp;gt;|&amp;lt;Object Attribute type&amp;gt;|&amp;lt;Object Attribute type Value&amp;gt;|&amp;lt;SpecificFieldNumber&amp;gt;|&amp;lt;Specific Field Value&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;BP|BPROLE|FLCU00|BPFIELD1|IN&lt;BR /&gt;PR|MATERIALTYPE|ERSA|PRFIELD1|MG&lt;BR /&gt;SO|||PSFIELD1|4987&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;&amp;lt;Account ID&amp;gt;|&amp;lt;Company ID&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Note: if more than one SAP Field Service Management company is mapped for the specific access sequence, it will be populated with comma separation.&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;132132|465465,879497,879846&lt;BR /&gt;132132|465465&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&amp;lt;SpecificFieldNumber&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;BPFIELD1&lt;BR /&gt;BPFIELD2&lt;BR /&gt;PRFIELD1&lt;BR /&gt;SOFIELD1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;SOAP|&amp;lt;specific field path&amp;gt;,&lt;BR /&gt;&lt;BR /&gt;ODATA|&amp;lt;specific field path&amp;gt; (only for Business Partner object)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="155px"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="404px"&gt;&lt;P&gt;&amp;lt;ObjectSpecificFieldSize&amp;gt;&lt;BR /&gt;&lt;BR /&gt;Examples:&lt;BR /&gt;&lt;BR /&gt;BPSPECSIZE&lt;BR /&gt;PRSPECSIZE&lt;/P&gt;&lt;/TD&gt;&lt;TD width="372px"&gt;&lt;P&gt;Number of specific fields mapped&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;In addition to this multiple company value mapping, the synchronization interface will also create a datastore object in SAP Cloud Integration named “&lt;STRONG&gt;FSMCompanyList&lt;/STRONG&gt;”, this data store holds the full list of accountId and companyId pairs configured in the multiple company configuration in S4HANA system. This datastore will be utilized in the cases when the business object type is set to replicate all FSM companies using “ALLCOMPANIES” configuration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_1-1755261669433.png" style="width: 474px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301382iCB419B49CC63AEC3/image-dimensions/474x135?v=v2" width="474" height="135" role="button" title="sureshmusham_1-1755261669433.png" alt="sureshmusham_1-1755261669433.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After the successful deployment of the multiple company value mapping in the SAP CPI, you need to update the below interfaces to enable multiple company functionality by setting the “&lt;STRONG&gt;EnableMultiCompanyReplication&lt;/STRONG&gt;” parameter to true.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SAP S/4HANA Cloud Integration package&lt;/STRONG&gt; (&lt;A href="https://api.sap.com/package/SAPS4HANACloudIntegrationwithSAPFieldServiceManagement/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Integration of Service in SAP S/4HANA Cloud with SAP Field Service Management&lt;/A&gt;)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SAP S/4HANA On premise Integration package&lt;/STRONG&gt; (&lt;A href="https://api.sap.com/package/SAPS4HANAIntegrationwithSAPFieldServiceManagement/integrationflow" target="_blank" rel="noopener noreferrer"&gt;SAP S/4HANA Integration with SAP Field Service Management&lt;/A&gt;)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Create Business Partner Relationship,&lt;/P&gt;&lt;P&gt;Replicate Business Partner Address,&lt;/P&gt;&lt;P&gt;Replicate Business Partner Contact,&lt;/P&gt;&lt;P&gt;Replicate Business Partner Employee,&lt;/P&gt;&lt;P&gt;Replicate Business Partners,&lt;/P&gt;&lt;P&gt;Replicate Item Group,&lt;/P&gt;&lt;P&gt;Replicate Product Price,&lt;/P&gt;&lt;P&gt;Replicate Product Stock,&lt;/P&gt;&lt;P&gt;Replicate Products,&lt;/P&gt;&lt;P&gt;Replicate Service Order from SAP S4HANA to SAP Field Service Management SOAP,&lt;/P&gt;&lt;P&gt;Assign Service Employee from SAP S4HANA as Warehouse Owner in SAP S4HANA&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Create Business Partner Relationship,&lt;/P&gt;&lt;P&gt;Replicate Business Partner Address,&lt;/P&gt;&lt;P&gt;Replicate Business Partner Contact,&lt;/P&gt;&lt;P&gt;Replicate Business Partners,&lt;/P&gt;&lt;P&gt;Replicate Product Price,&lt;/P&gt;&lt;P&gt;Replicate Product Stock,&lt;/P&gt;&lt;P&gt;Replicate Products,&lt;/P&gt;&lt;P&gt;Replicate Service Order from SAP S4HANA Cloud to SAP Field Service Management&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Enabling this parameter will make the standard interfaces to invoke the Multiple Company integration logic. The interfaces will call the multiple company value mapping to fetch to identify the relevant SAP FSM company id and account id to which the business data to be replicated. This logic is identified in the “&lt;STRONG&gt;Fetch FSM Company&lt;/STRONG&gt;” in each interface. Once the FSM company and account id’s are fetched, they are appended to the same incoming message as &amp;lt;FSMAccountID&amp;gt;|&amp;lt;FSMCompanyID&amp;gt; shown below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_2-1755261669435.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301383i331D2937DA40076C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_2-1755261669435.png" alt="sureshmusham_2-1755261669435.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Also, the data will be grouped for each FSM account ID and company ID pair for processing into FSM. Each grouped xml message will have the MultiCompanyGroup attribute with corresponding accountId|companyId value. For reference:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_3-1755261669439.png" style="width: 486px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301386i99E027FAD01A206F/image-dimensions/486x90?v=v2" width="486" height="90" role="button" title="sureshmusham_3-1755261669439.png" alt="sureshmusham_3-1755261669439.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;If no company Id is found from value mapping for the incoming data, then the account and company IDs are maintained as “NA|NA” and the respective data will be filtered out for replication into FSM. Such data will not be replicated to any SAP FSM company.&lt;/P&gt;&lt;H3 id="toc-hId-1670349207"&gt;&lt;SPAN&gt;Special cases in Multiple FSM company data replication&lt;/SPAN&gt;:&lt;/H3&gt;&lt;P&gt;When working with multiple company integration between SAP S/4HANA and SAP Field Service Management (FSM), there are a few special cases to be aware of:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;No Matching FSM Company ID: If no FSM Company ID is found in the multiple company value mapping, the related data is &lt;STRONG&gt;filtered out&lt;/STRONG&gt; and &lt;STRONG&gt;not replicated&lt;/STRONG&gt; to any FSM company.&lt;/LI&gt;&lt;LI&gt;In the integration between &lt;STRONG&gt;SAP S/4HANA Public cloud &lt;/STRONG&gt;to&lt;STRONG&gt; SAP FSM&lt;/STRONG&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Contact Data Handling:&lt;UL&gt;&lt;LI&gt;Contact data is stored in the SAP CPI Data Store named BPContacts.&lt;/LI&gt;&lt;LI&gt;A contact is replicated only if it is assigned to a Business Partner.&lt;/LI&gt;&lt;LI&gt;The FSM Company ID is determined from the associated Business Partner using the multiple company mapping rules in the S/4HANA configuration for the Business Partner object.&lt;/LI&gt;&lt;LI&gt;Contacts are loaded into FSM together with their relationship replication.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Data Retention:&lt;UL&gt;&lt;LI&gt;By default, contact data remains in the CPI Data Store for 30 days.&lt;/LI&gt;&lt;LI&gt;Retention can be extended up to 180 days by adjusting the DS-ExpirationPeriod parameter.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Business Partner Address:&lt;UL&gt;&lt;LI&gt;FSM Company identification for Business Partner Address data is derived by the parent Business Partner interface, based on the Business Partner object itself.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;In the integration between &lt;STRONG&gt;SAP S/4HANA Private cloud&lt;/STRONG&gt; and &lt;STRONG&gt;SAP FSM&lt;/STRONG&gt;&lt;/P&gt;&lt;OL class="lia-list-style-type-lower-alpha"&gt;&lt;LI&gt;Employee Data:&lt;UL&gt;&lt;LI&gt;Employees are replicated to all FSM companies configured in S/4HANA mapping.&lt;/LI&gt;&lt;LI&gt;Assignment to a Service Organization is done later using the Assign Service Employee interface.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Deactivating Unassigned Employees:&lt;UL&gt;&lt;LI&gt;Employees not linked to any Service Organization can be deactivated using the Delete Business Partner Employee interface, run on an ad-hoc basis.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Contact Data:&lt;UL&gt;&lt;LI&gt;Contacts are replicated to all FSM companies as inactive.&lt;/LI&gt;&lt;LI&gt;They are activated only when linked to a Business Partner in S/4HANA, together with the relationship replication.&lt;/LI&gt;&lt;LI&gt;Company identification for contacts is based on the associated Business Partner.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;LI&gt;Item Group Data:&lt;UL&gt;&lt;LI&gt;Item groups are replicated to all FSM companies configured in the S/4HANA multiple company mapping.&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;4. The Service Orders can only to replicated to any one FSM company based on the Sales Area or based on any specific field or using custom logic rule type as defined in the multiple company mapping configuration in S/4HANA. Replicating a single Service Order to multiple FSM companies is &lt;STRONG&gt;not recommended&lt;/STRONG&gt; due to conflicts in &lt;STRONG&gt;Service Call ID acknowledgment&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This completes the configuration required in the SAP Cloud Integration to enable the multiple company integration functionality. Further, I will share the details on implementing the custom logic functionality to fetch the FSM Company&lt;/P&gt;&lt;P&gt;To be continued…&lt;/P&gt;&lt;P&gt;Click on the below blog link for the third part: &lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181727" target="_self"&gt;Part 3&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181709"/>
    <published>2025-08-15T15:13:05.143000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181685</id>
    <title>Seamless Multi-Company Data Replication in SAP Field Service Management - Blog Series</title>
    <updated>2025-08-15T15:13:35.217000+02:00</updated>
    <author>
      <name>sureshmusham</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/643123</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737779276"&gt;Seamless Multi-Company Data Replication in SAP Field Service Management - Part 1&lt;/H2&gt;&lt;P&gt;The SAP Field Service Management (FSM) landscape is built on two key components: the &lt;STRONG&gt;Account&lt;/STRONG&gt; and the &lt;STRONG&gt;Company&lt;/STRONG&gt;. While the &lt;STRONG&gt;Account&lt;/STRONG&gt; acts as the highest organizational level, a &lt;STRONG&gt;Company&lt;/STRONG&gt; represents a specific legal entity, department, or business unit. This structure allows customers to manage multiple companies within a single FSM system to align with their business units. However, this creates a common challenge—&lt;STRONG&gt;replicating data from SAP S/4HANA to multiple FSM Companies&lt;/STRONG&gt;. Data replication rules often vary depending on factors like Sales Area, Plant, Company Code, or Purchasing Group.&lt;/P&gt;&lt;P&gt;The standard integration content previously had a limitation, allowing data to be sent to only one FSM company at a time from S/4HANA Public or Private Cloud systems. With the 2023 FPS03 release, this limitation has been addressed—&lt;STRONG&gt;enabling standard integration from S/4HANA to multiple FSM Companies&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_0-1755262758189.png" style="width: 458px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301392i42ABA8D00F55F86C/image-dimensions/458x458?v=v2" width="458" height="458" role="button" title="sureshmusham_0-1755262758189.png" alt="sureshmusham_0-1755262758189.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In this blog series, I’ll explore this new multi-company integration capability for both from S/4HANA public and private cloud system perspective. I’ll also share edge cases where implementing &lt;STRONG&gt;custom logic&lt;/STRONG&gt; can help determine the correct FSM Company based on incoming S/4HANA data.&lt;/P&gt;&lt;P&gt;Blog Series links:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181685" target="_self"&gt;Part 1&lt;/A&gt; - Multiple Company integration overview and preparing S/4HANA systems for Multi-Company Integration&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181709" target="_self"&gt;Part 2&lt;/A&gt; - Configurations in CPI and Special handling of Business objects in Multiple Company integration&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181727" target="_self"&gt;Part 3&lt;/A&gt; -&amp;nbsp;Achieving Multiple Company integration through custom logic implementation and enhanced error logging&lt;/P&gt;&lt;P&gt;These multiple company data integration features are available in the latest version of standard integration content:&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/package/SAPS4HANAIntegrationwithSAPFieldServiceManagement/integrationflow" target="_blank" rel="noopener noreferrer"&gt;SAP S/4HANA Integration with SAP Field Service Management&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://api.sap.com/package/SAPS4HANACloudIntegrationwithSAPFieldServiceManagement/integrationflow" target="_blank" rel="noopener noreferrer"&gt;Integration of Service in SAP S/4HANA Cloud with SAP Field Service Management&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_0-1755259309917.png" style="width: 496px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301372i11576780A3D794D8/image-dimensions/496x243?v=v2" width="496" height="243" role="button" title="sureshmusham_0-1755259309917.png" alt="sureshmusham_0-1755259309917.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Supported Data objects for multiple FSM company integration from S/4HANA systems:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Object Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;S/4HANA Public Cloud System&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;S/4HANA Private Cloud System&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Business Partner, Address, Contact and Relationship&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Product, Product Price and Stock&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Material Group, Employee, Service Employee Assignment to warehouse&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;No&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Service Order&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (via SAP CPI)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Service Contract&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (Point to Point integration)&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (Point to Point integration)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Equipment&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;No&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (Point to Point integration)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Functional Location&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;No&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (Point to Point integration)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Equipment and Functional location Classification&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;No&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Yes (Point to Point integration)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1670348490"&gt;&lt;SPAN&gt;Maintain Mapping rules&lt;/SPAN&gt;:&lt;/H3&gt;&lt;P&gt;As a first step, we need to configure the mapping rules to identify the FSM company id based for the incoming business data. These multiple company mapping rules should be maintained in S/4HANA system.&lt;/P&gt;&lt;H4 id="toc-hId-1602917704"&gt;S/4HANA Public Cloud setup:&lt;/H4&gt;&lt;P&gt;In S/4HANA public cloud, open “&lt;STRONG&gt;Manage Your Solution&lt;/STRONG&gt;” app, then click on Configure Your Solution. Search for “&lt;STRONG&gt;Integration with SAP Field Service Management&lt;/STRONG&gt;” item to configure Multiple Company Replication. If this item is not visible in your solution management, then set the local version to USA.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_1-1755259309930.png" style="width: 437px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301374i8382811A5CC9A998/image-dimensions/437x298?v=v2" width="437" height="298" role="button" title="sureshmusham_1-1755259309930.png" alt="sureshmusham_1-1755259309930.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here you can define the Rule type for each Business object, there are multiple rule type options available for you to choose like below:&lt;/P&gt;&lt;TABLE width="633"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;&lt;STRONG&gt;Rule Type Code&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;&lt;STRONG&gt;Rule Type Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;0&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;All Companies&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated to all defined FSM companies in the configuration&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;Plant&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated based on the plant data in the source data&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated based on the Sales Area data in the source data&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;3&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;Company Code&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated based on the Company Code data in the source data&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;4&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;Purchasing Code&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated based on the Purchasing Code data in the source data&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;5&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;Purchasing Org&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated based on the Purchasing Group data in the source data&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="129"&gt;&lt;P&gt;6&lt;/P&gt;&lt;/TD&gt;&lt;TD width="129"&gt;&lt;P&gt;Specific Field&lt;/P&gt;&lt;/TD&gt;&lt;TD width="374"&gt;&lt;P&gt;Object will be replicated based on any field from the source data as defined in the rule mapping. To be used when rule is defined based on non-standard rules like plant, sales area, etc as above.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_2-1755259309942.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301373iABA2B337C48A1BF8/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_2-1755259309942.png" alt="sureshmusham_2-1755259309942.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure full list of FSM company Id along with their account id to which the data to be replicated in “Define S/4HANA FSM Company” and Assign FSM Company Details.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_3-1755259309944.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301375iC98757983EF44169/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_3-1755259309944.png" alt="sureshmusham_3-1755259309944.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Now, assign Replication object detail for each FSM Company and relevant rule type filters like Sales Area or Plants or Company Codes, etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_4-1755259309951.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301376iCF8C3D7C3FE28D5C/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_4-1755259309951.png" alt="sureshmusham_4-1755259309951.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Recommended mapping configuration for standard rule types is shown as below. But this can be extended for custom rule types as per the business need.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="589"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;&lt;STRONG&gt;Replication object&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&lt;STRONG&gt;Replication Object Attribute&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&lt;STRONG&gt;Attribute Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;&lt;STRONG&gt;Rule Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Business Partner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;BP Role&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Customer - FI (FLCU00)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Company Code&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Business Partner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;BP Role&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Customer – Sales (FLCU01)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Business Partner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;BP Role&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Supplier - FI (FLVN00)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Company Code&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Business Partner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;BP Role&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Supplier - Purchasing (FLVN01)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Purchasing Org&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Classification&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Company-Specific&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Equipment&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Plant&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Functional Location&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Plant&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Product Price&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Product&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;Material Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Spare Parts (ERSA)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Product&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;Material Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Trading Goods (HAWA)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Product&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;Material Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Non-Stock Material (NLAG)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Product&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;Material Type&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;Service (SERV)&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Product Stock&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Plant&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Service Contract&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="121"&gt;&lt;P&gt;Service Order&lt;/P&gt;&lt;/TD&gt;&lt;TD width="167"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="188"&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="113"&gt;&lt;P&gt;Sales Area&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;If you configure rule type as specific field, then the relevant fields must be assign with the path of the field and its value for each company in the mapping configuration. Note: for Business Partner you must configure field path of both SOAP and Odata structure. Refer to the standard Odata and Web service structure of the business object object from &lt;A href="https://api.sap.com" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator hub&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_5-1755259309958.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301377i6ADB72F60B989D43/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_5-1755259309958.png" alt="sureshmusham_5-1755259309958.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note to exclude the root elements from the field path. For reference, follow the below table for specific field path configuration on different object types:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;&lt;STRONG&gt;Object Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;&lt;STRONG&gt;API&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;&lt;STRONG&gt;Excluded Root Elements&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;&lt;STRONG&gt;Example Specific Path&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;Business Partner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;SOAP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;/n0:BusinessPartnerSUITEBulkReplicateRequest/BusinessPartnerSUITEReplicateRequestMessage/BusinessPartner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;SOAP|/Common/BusinessPartnerAuthorisationGroupCode&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;Business Partner&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;ODATA&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;/A_BusinessPartnerType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;ODATA|/to_BusinessPartnerAddress/A_BusinessPartnerAddressType/Country&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;Product&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;SOAP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;/n0:ProductMDMBulkReplicateRequestMessage/ProductMDMReplicateRequestMessage/Product&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;/Plant/ProfitCenterID&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;Product Price&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;SOAP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;/n0:SalesPricingConditionRecordReplicationBundleRequest/SalesPricingConditionRecord&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;/ConditionScale/ConditionScaleLine&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;Product Stock&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;SOAP&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;/n0:MaterialStockReplicateMsg/MaterialStock&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;/InventorySpecialStockType&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="73.5625px"&gt;&lt;P&gt;Service Order&lt;/P&gt;&lt;/TD&gt;&lt;TD width="60.2188px"&gt;&lt;P&gt;ODATA&lt;/P&gt;&lt;/TD&gt;&lt;TD width="824.297px"&gt;&lt;P&gt;/A_ServiceOrder/A_ServiceOrderType&lt;/P&gt;&lt;/TD&gt;&lt;TD width="561.547px"&gt;&lt;P&gt;/to_Item/A_ServiceOrderItemType/ServiceOrderItemCategory&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H3 id="toc-hId-1277321480"&gt;&amp;nbsp;&lt;/H3&gt;&lt;H4 id="toc-hId-1209890694"&gt;S/4HANA Private Cloud or On premise S/4HANA setup:&lt;/H4&gt;&lt;P&gt;In On premise S/4HANA (SAP S/4HANA Private Cloud) system, the multiple company mapping configure remains almost the same but with some additional business objects for replication. Also, in addition available rule types in S/4HANA Public cloud, here you can set up the rule type as Custom Logic. When Custom logic rule type is set for any object, the FSM Company identification happens based on custom code written (requires BAPI) in S/4HANA system.&lt;/P&gt;&lt;P&gt;Execute the below SPRO path for the multiple company configuration.&lt;/P&gt;&lt;PRE&gt;SAP Customizing Implementation Guide -&amp;gt; Service -&amp;gt; Integration with Other SAP Solutions -&amp;gt; SAP Field Service Management -&amp;gt; Configure Multiple Company Replication&lt;/PRE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_6-1755259309964.png" style="width: 532px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301378i39C1C8D9A978098F/image-dimensions/532x177?v=v2" width="532" height="177" role="button" title="sureshmusham_6-1755259309964.png" alt="sureshmusham_6-1755259309964.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below is the required configuration detail for each rule type.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Rule Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Required Configuration Item&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Custom Logic&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;No Configuration Required&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;All Companies&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Define S/4HANA FSM Company,&lt;BR /&gt;Assign FSM Company Details&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Plant / Sales Area / Purchasing Group / Company Code / Purchasing Org / Service Org&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Define S/4HANA FSM Company,&lt;BR /&gt;Assign FSM Company Details,&lt;BR /&gt;Assign Relevant &amp;lt;Rule Type&amp;gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Specific Field&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Define S/4HANA FSM Company,&lt;BR /&gt;Assign FSM Company Details,&lt;BR /&gt;Assign Relevant Fields&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;This completes the configuration required in the S/4HANA systems for the multiple company integration. Now, the mapping information should be synchronized to SAP Cloud Integration and few configurations should be enabled in the standard interfaces to make the multiple FSM company integration work.&lt;/P&gt;&lt;P&gt;To be continued…&lt;/P&gt;&lt;P&gt;Click on the below blog link for the second part: &lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181709" target="_self"&gt;Part 2&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181685"/>
    <published>2025-08-15T15:13:35.217000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181727</id>
    <title>Seamless Multi-Company Data Replication in SAP Field Service Management – Part 3</title>
    <updated>2025-08-15T15:14:22.665000+02:00</updated>
    <author>
      <name>sureshmusham</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/643123</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737780053"&gt;Custom Logic in Pre exits and Error Handling in Multiple FSM Company Replication in SAP Cloud Integration&lt;/H2&gt;&lt;P&gt;In this blog part, I’ll explain how to use &lt;STRONG&gt;custom exits&lt;/STRONG&gt; within the &lt;STRONG&gt;multiple company fetch&lt;/STRONG&gt; functionality of standard interfaces to determine the relevant FSM company. I’ll also highlight the &lt;STRONG&gt;enhanced error handling&lt;/STRONG&gt; introduced in SAP Cloud Integration as part of the multiple company integration feature.&lt;/P&gt;&lt;P&gt;Blog Series links:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181685" target="_self"&gt;Part 1&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Multiple Company integration overview and preparing S/4HANA systems for Multi-Company Integration&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181709" target="_self"&gt;Part 2&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;- Configurations in CPI and Special handling of Business objects in Multiple Company integration&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181727" target="_self"&gt;Part 3&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;-&amp;nbsp;Achieving Multiple Company integration through custom logic implementation and enhanced error logging&lt;/P&gt;&lt;P&gt;Sometimes, the &lt;STRONG&gt;standard rule types&lt;/STRONG&gt; provided by SAP—such as Sales Area, Company Code, etc—may not fit your business requirements for identifying the FSM company. In such cases, you can implement &lt;STRONG&gt;your own custom logic&lt;/STRONG&gt; to determine the FSM &lt;STRONG&gt;Company IDs&lt;/STRONG&gt; and &lt;STRONG&gt;Account IDs&lt;/STRONG&gt; for incoming data. This custom logic can be implemented in multiple ways, depending on your integration scenario and business needs.&lt;/P&gt;&lt;P&gt;.&lt;/P&gt;&lt;H3 id="toc-hId-1670349267"&gt;Custom Logic Using Pre-Exits for Multiple Company in Standard Interfaces:&lt;/H3&gt;&lt;P&gt;In the S/4HANA Public Cloud to SAP FSM integration, you can leverage a &lt;STRONG&gt;pre-exit&lt;/STRONG&gt; to determine FSM company details dynamically.&lt;/P&gt;&lt;P&gt;To enable this:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;In the &lt;STRONG&gt;standard interface&lt;/STRONG&gt; where you want to apply custom logic, set the parameter &lt;STRONG&gt;Enable Pre-Exit MultiCompany&lt;/STRONG&gt; to &lt;STRONG&gt;true&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Create a &lt;STRONG&gt;Process Direct&lt;/STRONG&gt; interface to implement your custom logic for setting FSM &lt;STRONG&gt;Account IDs&lt;/STRONG&gt; and &lt;STRONG&gt;Company IDs&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Apply your business rules to assign &lt;STRONG&gt;one or multiple companies&lt;/STRONG&gt; as required.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;This approach gives you flexibility to map FSM companies based on &lt;STRONG&gt;your specific business criteria&lt;/STRONG&gt; before the data is sent to FSM.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_0-1755262943908.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301393iBAD0D467D6CF4D28/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_0-1755262943908.png" alt="sureshmusham_0-1755262943908.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Sample custom interface with custom logic to identify the FSM company and account id for the business partner object.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_1-1755262943910.png" style="width: 495px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301395iD9D32A54B7006ED4/image-dimensions/495x192?v=v2" width="495" height="192" role="button" title="sureshmusham_1-1755262943910.png" alt="sureshmusham_1-1755262943910.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Groovy step “Set FSM Company details”, I have logic to different FSM account and company based on country code and for the FLCU01 role code. The identified FSM account and company details are appended to the same Business Partner message as in below format.&lt;/P&gt;&lt;P&gt;Similarly, this logic can be extended to any extent as per your requirement.&lt;/P&gt;&lt;PRE&gt;&amp;lt;FSMMultiCompany&amp;gt;&lt;BR /&gt;  &amp;lt;FSMCompany&amp;gt;accountid1|companyidA&amp;lt;/FSMCompany&amp;gt;&lt;BR /&gt;  &amp;lt;FSMCompany&amp;gt;accountid1|companyidB&amp;lt;/FSMCompany&amp;gt;&lt;BR /&gt;  .&lt;BR /&gt;  .&lt;BR /&gt;&amp;lt;/FSMMultiCompany&amp;gt;&lt;/PRE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_2-1755262943912.png" style="width: 443px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301394i5C6818D25DEA698B/image-dimensions/443x330?v=v2" width="443" height="330" role="button" title="sureshmusham_2-1755262943912.png" alt="sureshmusham_2-1755262943912.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Later in the XSLT step “XSLT Group by FSM Company”, the message is grouped per FSM account and company Id pair using xml attribute “MultiCompanyGroup” as accountid|companyid. This group of data per each FSM account and company pair is required for the further processing of the data into each FSM company by the standard interface. More detail on how to group the message is provided in the following link &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/SAP_S4HANA_CLOUD/6ef7f849fed34f95adfc449f29835255/d501c4582aaf43ff89a39de9ddf8495a.html#multiple-company-pre-exits" target="_self" rel="noopener noreferrer"&gt;Multiple Company Pre-Exits&lt;/A&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Final payload which sent back to standard Replicate Business Partner interface is as below. The standard interface will take care of posting the BP data to each FMS company in sequential batches.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_3-1755262943913.png" style="width: 561px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301396i3134C4F0BE434A00/image-dimensions/561x108?v=v2" width="561" height="108" role="button" title="sureshmusham_3-1755262943913.png" alt="sureshmusham_3-1755262943913.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In scenario of S/4HANA Private Cloud to SAP FSM integration scenario, you can either use the similar approach of using the pre exits provided for the multiple company fetch in the standard interfaces as shown above OR you can set the rule type as “Custom” in the S/4HANA multiple company configuration for the business object and implement a BADI to identify the FSM company ID in S4HANA.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1473835762"&gt;Custom Logic Using Custom rule type in Multiple Company config in S/4HANA:&lt;/H3&gt;&lt;P&gt;The Custom Logic rule type is available only for integration between SAP S/4HANA Private Cloud and SAP Field Service Management (FSM).&lt;/P&gt;&lt;P&gt;This option allows you to determine the relevant FSM companies using your own code or logic instead of predefined rules. To use it:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create an implementation for the &lt;STRONG&gt;BAdI&lt;/STRONG&gt; CRMS4_FSM_RELV_COMP_DETERM.&lt;/LI&gt;&lt;LI&gt;Assign the Custom Logic rule type to the desired &lt;STRONG&gt;Replication Object&lt;/STRONG&gt;, &lt;STRONG&gt;Attribute&lt;/STRONG&gt;, and &lt;STRONG&gt;Attribute Value&lt;/STRONG&gt; in the multiple company configuration.&lt;/LI&gt;&lt;LI&gt;Use the same combination as a filter in your BAdI implementation.&lt;/LI&gt;&lt;LI&gt;If Custom Logic is required for multiple replication objects, create a &lt;STRONG&gt;separate BAdI implementation&lt;/STRONG&gt; for each.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Example:&lt;/STRONG&gt;&amp;nbsp;To configure custom logic for Sales Customers:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Assign Custom Logic Rule Type&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Replication Object:&lt;/STRONG&gt; Business Partner (BP)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Replication Object Attribute:&lt;/STRONG&gt; BP Role (02)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Replication Object Attribute Value:&lt;/STRONG&gt; BP Customer – Sales (FLCU01)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Create BAdI Implementation with Filters&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Replication Object (REPL_OBJECT):&lt;/STRONG&gt; Business Partner (BP)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Replication Object Attribute (OBJ_ATR):&lt;/STRONG&gt; BP Role (02)&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Replication Object Attribute Value (OBJ_ATR_VAL):&lt;/STRONG&gt; BP Customer – Sales (FLCU01)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This approach gives you full flexibility to define custom company determination logic that fits your organization’s business rules, while keeping it aligned with the multiple company integration framework.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1277322257"&gt;&lt;SPAN&gt;Enhanced Error Logging in Multi-Company integrations&lt;/SPAN&gt;:&lt;/H3&gt;&lt;P&gt;In multi-company integration scenarios, SAP Cloud Integration now provides enhanced error logging to simplify troubleshooting and root cause analysis.&lt;/P&gt;&lt;P&gt;When data errors occur during replication to SAP Field Service Management (FSM) companies, the system:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Creates &lt;STRONG&gt;attachments&lt;/STRONG&gt; in the &lt;STRONG&gt;Message Processing Log (MPL)&lt;/STRONG&gt; with detailed error information.&lt;/LI&gt;&lt;LI&gt;Records &lt;STRONG&gt;custom MPL headers&lt;/STRONG&gt; indicating the FSM company for which the data failed to load.&lt;/LI&gt;&lt;LI&gt;Generates &lt;STRONG&gt;separate attachments for each FSM company&lt;/STRONG&gt;, ensuring issue tracking is company-specific.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If an error is &lt;STRONG&gt;generic&lt;/STRONG&gt; (not linked to a specific FSM company), it is still logged in a custom MPL header containing the company and account ID, along with relevant attachments.&lt;/P&gt;&lt;H4 id="toc-hId-1209891471"&gt;Handling Missing Company Assignments&lt;/H4&gt;&lt;P&gt;When no FSM company can be determined for an incoming replication object, the object is &lt;STRONG&gt;filtered out&lt;/STRONG&gt; and not sent to any FSM company.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;These filtered object IDs are recorded in a dedicated custom MPL header.&lt;/LI&gt;&lt;LI&gt;All attachment file names are &lt;STRONG&gt;suffixed&lt;/STRONG&gt; with the corresponding FSM company ID.&lt;/LI&gt;&lt;LI&gt;If multiple companies are determined for one replication object, &lt;STRONG&gt;separate attachments&lt;/STRONG&gt; are created for each.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId-1013377966"&gt;Custom MPL Headers in Multi-Company Error Handling&lt;/H4&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Custom Header&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Purpose&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;FSMCompanyNotFoundForBusinessPartner&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Business Partner ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs BP ID filtered out due to no matching FSM company&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;FSMCompanyNotFoundForBusinessPartnerRelationWithContact&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Business Partner ID | Contact ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs BP &amp;amp; Contact IDs filtered out due to no matching FSM company&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;FSMCompanyNotFoundForProduct&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Product ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Product ID filtered out due to no matching FSM company&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;FSMCompanyNotFoundForWarehouse&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Product ID | Plant | Storage Location&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Product, Plant &amp;amp; Storage Location filtered out&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;FSMCompanyNotFoundForConditionRecord&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Condition Record ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Condition Record ID filtered out&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;FSMCompanyNotFoundForServiceOrder&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Service Order ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Service Order ID filtered out&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;BusinessPartnerFailedToLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Business Partner ID | FSM Company ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs BP ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ContactFailedToLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Contact ID | FSM Company ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Contact ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;BusinessPartnerRelationFailedToLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Contact ID | FSM Company ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Contact ID &amp;amp; company ID for relationship replication errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ProductFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Product ID | FSM Company ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Product ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;WarehouseFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Warehouse External ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Warehouse external ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ItemWarehouseFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Item Warehouse External ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Item Warehouse external ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;PriceListFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Price List External ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Price List external ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ItemPriceListFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Item | Price List ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Item &amp;amp; Price List external ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;ServiceOrderFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Service Order ID | FSM Company ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs Service Order ID &amp;amp; company ID for FSM load errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;DataFailedtoLoad&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;FSM Account ID | FSM Company ID&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Logs FSM account &amp;amp; company ID for non-FSM specific errors&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;This improved logging framework ensures that &lt;STRONG&gt;every failure—whether company-specific or generic—is captured with context&lt;/STRONG&gt;, allowing for faster resolution in complex multi-company setups.&lt;/P&gt;&lt;P&gt;Sample error logging snapshots:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_4-1755262943915.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301398iF9C168E7FF73CF07/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_4-1755262943915.png" alt="sureshmusham_4-1755262943915.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sureshmusham_5-1755262943916.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301397i6A40F652F73B328B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sureshmusham_5-1755262943916.png" alt="sureshmusham_5-1755262943916.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/crm-and-cx-blog-posts-by-sap/seamless-multi-company-data-replication-in-sap-field-service-management/ba-p/14181727"/>
    <published>2025-08-15T15:14:22.665000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932</id>
    <title>SAP Integration SuiteのAI Adapterの使い方 Vol1.基本編</title>
    <updated>2025-08-15T18:57:25.995000+02:00</updated>
    <author>
      <name>yasuyukiuno</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/557133</uri>
    </author>
    <content>&lt;P&gt;SAP IntegrationのAIアダプタがようやくリリースされたので試してみました。&lt;BR /&gt;この記事ではIntegration Suite AIアダプターの利用方法をステップバイステップで解説します。&lt;BR /&gt;AIアダプタの基本的な利用方法と、ChatGPTとの接続方法の解説、Content ModifierからテキストメッセージをAIアダプタに渡してレスポンスを取得します。&lt;/P&gt;&lt;H2 id="toc-hId-964073342" id="toc-hId-1737782001"&gt;AI Adapterについて&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;はその名の通り、対話型AIとやり取りをするために利用するアダプタです。&lt;BR /&gt;2025年2Qにリリースされたばかりの新アダプタとなります。&lt;/P&gt;&lt;P&gt;・AI アダプタでは、 SAP AI Coreを利用した&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;と、Chat GPT APIを利用した&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;の2 つのAI利用方法があります。&lt;/P&gt;&lt;P&gt;この記事では、後者の&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;を利用しAIアダプタを試してみます。&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Chat GPT APIの準備&lt;/LI&gt;&lt;LI&gt;Integration Flow(iFlow)の作成&lt;/LI&gt;&lt;LI&gt;動作確認&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1541268496"&gt;1.Open AI API(Chat GPT API)の準備&lt;/H2&gt;&lt;P&gt;1. Open AI API管理画面へのログイン&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;下記URLにアクセスしログインします&lt;BR /&gt;&lt;A href="https://platform.openai.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com/&lt;/A&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_0-1755271974766.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301462i967EFA0C5E3731E7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_0-1755271974766.png" alt="yasuyukiuno_0-1755271974766.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.ウィザードに従って組織(Organization)とプロジェクト(Project)を作成します&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;私の場合、組織:：MyDevTest、プロジェクト：SAPBTPと設定しました。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_1-1755272478438.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301472i2B8260B6EA1AB65F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_1-1755272478438.png" alt="yasuyukiuno_1-1755272478438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3.API Keyの作成&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;API Keyを作成します。後でBTPからAPIを呼び出すときにKeyを利用しますので、控えておいてください。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_2-1755272892790.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301477i767FDFD5BAF54F8F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_2-1755272892790.png" alt="yasuyukiuno_2-1755272892790.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_3-1755273064263.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301480i02C327D8C762B200/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_3-1755273064263.png" alt="yasuyukiuno_3-1755273064263.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_4-1755273195061.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301486i85CF02C8CA582697/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_4-1755273195061.png" alt="yasuyukiuno_4-1755273195061.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4.Open AI APIへの課金&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Open AI APIをコールするには課金が必要です。課金しないと、APIをコールしても失敗してしまいます。&lt;BR /&gt;APIを1回コールするには大体0.01USDかかります。&lt;BR /&gt;クレジットカードを登録し、クレジットをチャージ(最低 5USD以上)します。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_5-1755273986203.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301495i9C1E20AB98D52AA3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_5-1755273986203.png" alt="yasuyukiuno_5-1755273986203.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;以上でOpen AI API側の準備は完了です。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1344754991"&gt;2.Integration Flowの作成&lt;/H2&gt;&lt;P&gt;1. API Keyの設定&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Monitor -&amp;gt; Security Materials -&amp;gt; Create Secure Parameter&lt;BR /&gt;より、APIキーをセキュアパラメータとして設定します。&lt;BR /&gt;Name：OpenAI_APIKey&lt;BR /&gt;Secure Parameter：Bearer +API Key&amp;nbsp; &amp;nbsp;例)Bearer sk-proj-MOuoJ8jxj.......&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_7-1755274542456.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301497i68161F90FA1894FD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_7-1755274542456.png" alt="yasuyukiuno_7-1755274542456.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.Integration Flowの作成&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Integration Suiteのアップデートにより、Request ReplayコンポーネントからReceiverに線を引いたときに、『AI』アダプタが選択できるようになっています。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_8-1755274932455.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301498iED048F0927E83E01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_8-1755274932455.png" alt="yasuyukiuno_8-1755274932455.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;今回は下図のような簡単なiFlowを作成しました。それぞれのコンポーネントの設定値を解説していきます。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_9-1755275296005.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301533i72D75196C0C23276/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_9-1755275296005.png" alt="yasuyukiuno_9-1755275296005.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Start Timer：On Deploy (デプロイ時にトリガ)&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Content Modifier：下図のように固定の文字列(AIへの質問)を設定しています。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_10-1755275442676.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301534i1471B0C3AFD6B141/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_10-1755275442676.png" alt="yasuyukiuno_10-1755275442676.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;AI Adapter(Connection)：API Key Aliasに先ほど作成したSecurity Materialsの『OpenAI_APIKey』を設定しています。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_11-1755275605832.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301535i1B6497AB64930349/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_11-1755275605832.png" alt="yasuyukiuno_11-1755275605832.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;AI Adapter(Processing)：前のステップ(Content Modifier)で設定したメッセージボディをそのままAIに渡すため、プロンプトに${in.body}を設定します。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_12-1755275777601.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301536i6652E84945426157/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_12-1755275777601.png" alt="yasuyukiuno_12-1755275777601.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;以上でIntegration Flowの作成は完了です。デプロイし動作確認してみます。&lt;/P&gt;&lt;H2 id="toc-hId-767559837" id="toc-hId-1148241486"&gt;3.動作確認&lt;/H2&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;実行したところ、下図のような応答が返ってきました。日本語での質問には日本語で返してくれます。&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yasuyukiuno_13-1755276086935.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301538i8245E1243AB3D37F/image-size/medium?v=v2&amp;amp;px=400" role="button" title="yasuyukiuno_13-1755276086935.png" alt="yasuyukiuno_13-1755276086935.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;AIアダプタの基本的な使い方は以上となります。&lt;BR /&gt;本記事のようにメッセージボディをAIに流し込むことによって、データの要約をさせたり、システム連携時のエラーレスポンスをAIに分析させたりと、色々な応用ができそうではないでしょうか。&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-integration-suite%E3%81%AEai-adapter%E3%81%AE%E4%BD%BF%E3%81%84%E6%96%B9-vol1-%E5%9F%BA%E6%9C%AC%E7%B7%A8/ba-p/14181932"/>
    <published>2025-08-15T18:57:25.995000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/evolving-security-in-sap-btp-goodbye-apiaccess-plan-hello-btp-cli/ba-p/14182956</id>
    <title>🔒 Evolving Security in SAP BTP – Goodbye APIAccess Plan, Hello BTP CLI</title>
    <updated>2025-08-18T22:10:52.716000+02:00</updated>
    <author>
      <name>sushilgupta857</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/720925</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608729139"&gt;&lt;span class="lia-unicode-emoji" title=":locked_with_key:"&gt;🔐&lt;/span&gt;SAP BTP Security Shift: From APIAccess Plan to BTP CLI Credentials&lt;/H1&gt;&lt;H2 id="toc-hId-1541298353"&gt;🙋‍ About Me&lt;/H2&gt;&lt;P&gt;Hare Krishna &lt;span class="lia-unicode-emoji" title=":folded_hands:"&gt;🙏&lt;/span&gt; I am an SAP BTP Cloud Architect sharing practical insights, solutions, and real-world experiences from the SAP ecosystem.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1344784848"&gt;&lt;span class="lia-unicode-emoji" title=":glowing_star:"&gt;🌟&lt;/span&gt;Introduction&lt;/H2&gt;&lt;P&gt;SAP is continuously evolving its security and authorization capabilities on the Business Technology Platform (BTP). One major shift is the move away from the &lt;STRONG&gt;APIAccess plan for Authorization and Trust Management Service&lt;/STRONG&gt; towards &lt;STRONG&gt;BTP CLI Security API Credentials&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;This transition brings more centralized control, enhanced governance, and future-ready security management.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-1148271343"&gt;&lt;span class="lia-unicode-emoji" title=":question_mark:"&gt;❓&lt;/span&gt;Why the Shift?&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;The &lt;STRONG&gt;APIAccess plan&lt;/STRONG&gt; was primarily used for developers to generate OAuth credentials via the cockpit.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;SAP has marked it &lt;STRONG&gt;obsolete&lt;/STRONG&gt;, pushing customers to adopt the more powerful &lt;STRONG&gt;BTP CLI Security API credential management&lt;/STRONG&gt;.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;This aligns with SAP’s strategy of delivering &lt;STRONG&gt;CLI-first, automation-ready&lt;/STRONG&gt; tooling.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-951757838"&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Benefits of Using BTP CLI&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Centralized credential management at the subaccount level&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Fine-grained, role-based access (requires &lt;STRONG&gt;Security Administrator role&lt;/STRONG&gt;)&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Automation-friendly (ideal for CI/CD pipelines)&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Better lifecycle management (create, rotate, revoke credentials via CLI)&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Future-proof – new features/enhancements will come only in BTP CLI&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-755244333"&gt;&lt;span class="lia-unicode-emoji" title=":balance_scale:"&gt;⚖️&lt;/span&gt;Key Differences: APIAccess vs BTP CLI Security API Credentials&lt;/H2&gt;&lt;DIV class=""&gt;&lt;DIV class=""&gt;Aspect APIAccess Plan BTP CLI Security API Credentials &lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Scope&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Bound to a specific service instance&lt;/TD&gt;&lt;TD&gt;Managed at subaccount level&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Access Role&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Typically developer role (CF)&lt;/TD&gt;&lt;TD&gt;Requires &lt;STRONG&gt;Security Administrator&lt;/STRONG&gt; role&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Management&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Created via cockpit UI&lt;/TD&gt;&lt;TD&gt;Managed via &lt;STRONG&gt;BTP CLI commands&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Automation&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Limited&lt;/TD&gt;&lt;TD&gt;Fully automation-ready (CI/CD, scripts)&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Future Support&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Deprecated / Obsolete&lt;/TD&gt;&lt;TD&gt;Actively supported &amp;amp; enhanced&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Governance&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;Minimal&lt;/TD&gt;&lt;TD&gt;Strong audit &amp;amp; lifecycle management&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;HR /&gt;&lt;H2 id="toc-hId-558730828"&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;Steps to Manage Security API Credentials via BTP CLI&lt;/H2&gt;&lt;H3 id="toc-hId-491300042"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_1:"&gt;1️⃣&lt;/span&gt;Login to BTP CLI&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp login --url https://cpcli.cf.eu10.hana.ondemand.com --subdomain &amp;lt;your-subdomain&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-294786537"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_2:"&gt;2️⃣&lt;/span&gt;Create Security API Credential&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp create security/api-credential --subaccount &amp;lt;subaccount-guid&amp;gt; --name &amp;lt;credential-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId-98273032"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_3:"&gt;3️⃣&lt;/span&gt;List Security API Credentials&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp list security/api-credential --subaccount &amp;lt;subaccount-guid&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--173471842"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_4:"&gt;4️⃣&lt;/span&gt;Get Details of a Credential&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp get security/api-credential --subaccount &amp;lt;subaccount-guid&amp;gt; --name &amp;lt;credential-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;H3 id="toc-hId--369985347"&gt;&lt;span class="lia-unicode-emoji" title=":keycap_5:"&gt;5️⃣&lt;/span&gt;Delete Security API Credential&lt;/H3&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp delete security/api-credential --subaccount &amp;lt;subaccount-guid&amp;gt; --name &amp;lt;credential-name&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--273095845"&gt;&lt;span class="lia-unicode-emoji" title=":camera_with_flash:"&gt;📸&lt;/span&gt;Real-Life Example (POC)&lt;/H2&gt;&lt;P&gt;Login to BTP CLI&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp login --sso&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 12.56.09 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302078iB9AB4BDD794E2F9A/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 12.56.09 AM.png" alt="Screenshot 2025-08-19 at 12.56.09 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;It will open browser to enter userid and password. Once authenticated successfully in browser user will be logged in the BTPCLI&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 12.56.54 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302079i8EAD377073C13072/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 12.56.54 AM.png" alt="Screenshot 2025-08-19 at 12.56.54 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;User should have security admin privileges to perform this task using BTPCLI as highlighted below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 12.57.11 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302080i0C73C9ED4F0CAE39/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 12.57.11 AM.png" alt="Screenshot 2025-08-19 at 12.57.11 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Command to create BTP Security api credentials&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp create security/api-credential --name APIConnectivitySecurityCred&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.18.25 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302081iA779AC2F2A62D9C5/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.18.25 AM.png" alt="Screenshot 2025-08-19 at 1.18.25 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Command to list the security api credentials&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp list security/api-credential&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.19.46 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302082i13728050DE9097B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.19.46 AM.png" alt="Screenshot 2025-08-19 at 1.19.46 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Command to get the security api credentials:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt; btp get security/api-credential APIConnectivitySecurityCred &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.22.26 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302083iE376E9D469BFA8AF/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.22.26 AM.png" alt="Screenshot 2025-08-19 at 1.22.26 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Command to delete the security api credentials:&lt;/P&gt;&lt;pre class="lia-code-sample language-abap"&gt;&lt;code&gt;btp delete security/api-credential APIConnectivitySecurityCred&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.22.44 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302084i484C8926240A2268/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.22.44 AM.png" alt="Screenshot 2025-08-19 at 1.22.44 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--469609350"&gt;&lt;span class="lia-unicode-emoji" title=":counterclockwise_arrows_button:"&gt;🔄&lt;/span&gt;Migration Guidance: Moving from APIAccess Plan to BTP CLI Security API Credentials&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;STRONG&gt;Why migrate?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;APIAccess plan is deprecated/obsolete.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;BTP CLI provides a centralized, secure, and role-based way to manage credentials.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;Future enhancements will be delivered only for the BTP CLI approach.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&lt;STRONG&gt;Suggested migration approach:&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Identify all applications, integrations, or scripts currently using credentials generated via APIAccess plan.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Recreate credentials using BTP CLI with the required &lt;STRONG&gt;Security Administrator role&lt;/STRONG&gt; at the subaccount level.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Update configurations (destination services, API clients, pipelines, etc.) to consume the new credentials.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Decommission old credentials to avoid accidental usage.&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;&lt;STRONG&gt;Tip:&lt;/STRONG&gt; Run this migration in a &lt;STRONG&gt;test subaccount&lt;/STRONG&gt; first to validate all dependencies before rolling out in production.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--666122855"&gt;🙋‍&lt;span class="lia-unicode-emoji" title=":male_sign:"&gt;♂️&lt;/span&gt; FAQs&lt;/H2&gt;&lt;P&gt;&lt;STRONG&gt;Q1: Do I still need the Space Developer role for managing credentials?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;No. Managing Security API Credentials requires the &lt;STRONG&gt;Security Administrator role at subaccount level&lt;/STRONG&gt;, not CF space roles.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q2: What happens if I continue using APIAccess plan?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;APIAccess is &lt;STRONG&gt;obsolete&lt;/STRONG&gt;. Existing instances may continue temporarily, but no future support or enhancements will be provided.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Q3: Can I automate credential rotation with BTP CLI?&lt;/STRONG&gt;&lt;BR /&gt;&lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;Yes &lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;. You can script credential creation/deletion via BTP CLI and integrate into CI/CD pipelines for automated rotations.&lt;/P&gt;&lt;HR /&gt;&lt;H2 id="toc-hId--862636360"&gt;&lt;span class="lia-unicode-emoji" title=":books:"&gt;📚&lt;/span&gt;References&lt;/H2&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://help.sap.com/whats-new/cf0cb2cb149647329b5d02aa96303f56?Component=Authorization+and+Trust+Management+Service&amp;amp;Valid_as_Of=2024-05-15:2024-05-17&amp;amp;locale=en-US" target="_new" rel="noopener noreferrer"&gt;SAP Help: What’s New – Authorization and Trust Management Service&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;A class="" href="https://help.sap.com/docs/btp/sap-business-technology-platform/managing-api-credentials-for-calling-rest-apis-of-sap-authorization-and-trust-management-service?locale=en-US" target="_new" rel="noopener noreferrer"&gt;SAP Help: Managing API Credentials for Authorization and Trust Management Service&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/evolving-security-in-sap-btp-goodbye-apiaccess-plan-hello-btp-cli/ba-p/14182956"/>
    <published>2025-08-18T22:10:52.716000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/custom-search-attributes-in-sap-b2b/ba-p/14185605</id>
    <title>Custom Search Attributes in SAP B2B</title>
    <updated>2025-08-20T20:21:52.573000+02:00</updated>
    <author>
      <name>vishakha_deshmukh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/839055</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Custom search attributes feature in SAP B2B scenarios can be used to enhance the search experience for users and help them find exactly what they are looking for. These attributes can be tailored to the specific needs of B2B buyers and sellers, such as industry-specific product features, technical specifications, pricing options, and more. By allowing users to filter search results based on these custom attributes, businesses can provide a more personalized and efficient search experience. Additionally, custom search attributes can also be used to gather valuable data on customer preferences and behavior, which can be leveraged to further optimize the B2B buying and selling process.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_0-1755711431845.png" style="width: 655px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303183i4B0C14ECFC71FDC6/image-dimensions/655x249/is-moderation-mode/true?v=v2" width="655" height="249" role="button" title="vishakha_deshmukh_0-1755711431845.png" alt="vishakha_deshmukh_0-1755711431845.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;FONT size="1 2 3 4 5 6 7"&gt;High level Diagram for Custom Search in B2B Monitoring&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note that you can configure maximum of 10 custom search attributes for your B2B Messages per tenant&lt;/STRONG&gt;. &lt;STRONG&gt;Also, Custom Search Attributes with multiple values is supported now and the maximum length is 1000 characters.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s try to understand this with a use case for Outbound Transaction. Let’s say your Company sends IDOC Invoice D.01B message to Trading Partner. There are standard search attributes such as Sender Interchange Control Number, Sender Message Number, Receiver Interchange Control Number, Receiver Message Number etc. &amp;nbsp;With the configuration of Custom Search Attribute Invoice Number, you can easily find all the Invoice B2B Interchanges that you want by providing the Invoice Number in the filter in B2B Monitoring.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to configure?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Custom Search Attributes can be maintained for both Inbound as well as Outbound Transactions.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configure Custom Search Attributes in Configuration Manager in Trading Partner Management (TPM)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Login into the SAP Integration Suite and navigate to &lt;STRONG&gt;Design &amp;gt; B2B Scenarios.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. Select the &lt;STRONG&gt;Configuration Manager&lt;/STRONG&gt; tab and choose &lt;STRONG&gt;Create &lt;/STRONG&gt;to create custom search attribute.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: &lt;STRONG&gt;Maximum of 10 custom search attributes can be created&lt;/STRONG&gt;)&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. Enter a meaningful name in the &lt;STRONG&gt;Name&lt;/STRONG&gt; field and provide a description in the &lt;STRONG&gt;Description&lt;/STRONG&gt; field.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;4. Choose &lt;STRONG&gt;Save&lt;/STRONG&gt;. The custom search attribute has been created successfully.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;5. After creating custom search attributes, these attributes need to be assigned to the transactions for them to&amp;nbsp; reflect in B2B Monitor.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_1-1755711431856.png" style="width: 587px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303185i6A092F4F144DEC88/image-dimensions/587x317/is-moderation-mode/true?v=v2" width="587" height="317" role="button" title="vishakha_deshmukh_1-1755711431856.png" alt="vishakha_deshmukh_1-1755711431856.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Add Custom Search Attributes to Inbound/Outbound Transactions in Trading Partner Agreement (TPA)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Navigate to &lt;STRONG&gt;Design &amp;gt; B2B Scenarios.&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;2. Select&lt;STRONG&gt; Agreements &amp;gt; B2B Scenarios&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;3. Select the transaction, navigate to &lt;STRONG&gt;Custom Search Attribute &lt;/STRONG&gt;tab and choose &lt;STRONG&gt;Add&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;In the resulting Dialog, maintain the following fields:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;Field&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Description&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Name&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Select a value from the list of attributes that are created via Configuration Manager&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Source Type&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Select whether the source type is &lt;STRONG&gt;Parameter&lt;/STRONG&gt; or &lt;STRONG&gt;XPATH&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Source Value&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Enter the source value for the name. If &lt;STRONG&gt;Source type&lt;/STRONG&gt; is &lt;STRONG&gt;Parameter&lt;/STRONG&gt;, then enter the parameter here. If the &lt;STRONG&gt;Source type&lt;/STRONG&gt; is &lt;STRONG&gt;XPath&lt;/STRONG&gt;, then enter the XPath of the source value.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="148"&gt;&lt;P&gt;&lt;STRONG&gt;Data Source&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="330"&gt;&lt;P&gt;Select whether the data source should be &lt;STRONG&gt;Sender Interchange&lt;/STRONG&gt; or &lt;STRONG&gt;receiver Interchange&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_2-1755711431859.png" style="width: 720px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303184i24F92D2CB39B0BE6/image-dimensions/720x241/is-moderation-mode/true?v=v2" width="720" height="241" role="button" title="vishakha_deshmukh_2-1755711431859.png" alt="vishakha_deshmukh_2-1755711431859.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_3-1755711431867.png" style="width: 766px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303187i19210A95F375C11C/image-dimensions/766x310/is-moderation-mode/true?v=v2" width="766" height="310" role="button" title="vishakha_deshmukh_3-1755711431867.png" alt="vishakha_deshmukh_3-1755711431867.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In an IDOC message, the Custom Search Attribute &lt;STRONG&gt;Invoice Number&lt;/STRONG&gt; is taken from &lt;STRONG&gt;BELNR &lt;/STRONG&gt;segment which is&amp;nbsp;&lt;STRONG&gt;IDOC Document Number&lt;/STRONG&gt;. Custom Search Attribute for Invoice Number is taken from the XPath //E1EDK01/BELNR.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Just for reference, as depicted below in the highlighted area, you can see how the XPath is configured for fields with Qualifier.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_4-1755711431873.png" style="width: 670px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303188i248C9FB8906C2991/image-dimensions/670x295/is-moderation-mode/true?v=v2" width="670" height="295" role="button" title="vishakha_deshmukh_4-1755711431873.png" alt="vishakha_deshmukh_4-1755711431873.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;If the &lt;STRONG&gt;Source Type&lt;/STRONG&gt; is &lt;STRONG&gt;Parameter&lt;/STRONG&gt;, the custom search attribute should be maintained in the Trading Partner Agreement (TPA) under &lt;STRONG&gt;Activity Parameters&lt;/STRONG&gt; tab in B2B Scenarios.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_5-1755711431875.png" style="width: 749px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303186iEE698C5AF512F4B5/image-dimensions/749x60/is-moderation-mode/true?v=v2" width="749" height="60" role="button" title="vishakha_deshmukh_5-1755711431875.png" alt="vishakha_deshmukh_5-1755711431875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Header and properties would be resolved during runtime&lt;STRONG&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Once the Custom Search Attributes are created and defined, they should be used in the necessary B2B transactions in an agreement. These attributes are then pushed into Partner directory once the Trading Partner Agreement (TPA) is activated.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;B2B Monitor&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The incoming payload consists of the search values in XPath format and when the payload is parsed, the values are read and displayed in the B2B monitor.&lt;/P&gt;&lt;P&gt;In B2B Monitoring, navigate to &lt;STRONG&gt;Monitor &amp;gt; B2B Scenarios &amp;gt; Adapt Filters &lt;/STRONG&gt;and select your Custom Search Attribute e.g., Invoice Number.&lt;/P&gt;&lt;P&gt;Enter the Invoice Number for which you want to see the B2B Messages and you can see only those messages.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="vishakha_deshmukh_6-1755711431884.png" style="width: 627px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303189iF4E20DF9E4ABEF56/image-dimensions/627x364/is-moderation-mode/true?v=v2" width="627" height="364" role="button" title="vishakha_deshmukh_6-1755711431884.png" alt="vishakha_deshmukh_6-1755711431884.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Summary&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Custom Search Attributes is one of the important features in SAP B2B which allows you to search for interchanges based on the user-defined filters in the B2B Monitor section.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/custom-search-attributes-in-sap-b2b/ba-p/14185605"/>
    <published>2025-08-20T20:21:52.573000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/ensuring-exactly-once-in-order-quality-of-service-in-cloud-integration/ba-p/14180026</id>
    <title>Ensuring Exactly Once In Order Quality of Service in Cloud Integration</title>
    <updated>2025-08-21T11:49:19.706000+02:00</updated>
    <author>
      <name>sunny_kapoor</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/42889</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608660815"&gt;Introduction&lt;/H1&gt;&lt;P&gt;As businesses expand digitally, the need for reliable and consistent data transfer increases. Ensuring "Exactly Once In Order" (EOIO) quality of service (QoS) delivery is critical in this context, as it guarantees data messages are delivered without duplication and in their original sequence. SAP Integration Suite provides capabilities to achieve EOIO in cloud integration scenarios, ensuring high reliability, data integrity, and operational efficiency.&lt;/P&gt;&lt;H1 id="toc-hId-1412147310"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1215633805"&gt;What Is Exactly Once In Order Quality of Service (EOIO QoS)?&lt;/H1&gt;&lt;P&gt;Exactly &lt;SPAN&gt;O&lt;/SPAN&gt;nce &lt;SPAN&gt;I&lt;/SPAN&gt;n &lt;SPAN&gt;O&lt;/SPAN&gt;rder (EOIO) quality of service (QoS) is crucial in &lt;STRONG&gt;business process integration&lt;SPAN&gt;,&lt;/SPAN&gt;&lt;/STRONG&gt; where the sequence and uniqueness of message delivery are essential to prevent issues like double processing, missing data, or disordered information that can lead to operational errors and inconsistencies.&lt;/P&gt;&lt;P&gt;This QoS guarantees that:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A message is delivered &lt;STRONG&gt;only once&lt;/STRONG&gt; (no duplication).&lt;/LI&gt;&lt;LI&gt;Messages are delivered &lt;STRONG&gt;in the exact order&lt;/STRONG&gt; they were sent.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This is particularly important in &lt;STRONG&gt;enterprise systems&lt;/STRONG&gt;, &lt;STRONG&gt;supply chains&lt;/STRONG&gt;, &lt;STRONG&gt;finance&lt;/STRONG&gt;, and other mission-critical processes. Below are some &lt;STRONG&gt;use cases&lt;/STRONG&gt; where EOIO is required or highly beneficial&lt;/P&gt;&lt;H1 id="toc-hId-1019120300"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-822606795"&gt;Use Cases of EOIO in Business Process Integration&lt;/H1&gt;&lt;P&gt;EOIO has diverse applications across industries,&amp;nbsp;&lt;SPAN&gt;some of which are listed below:&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-884258728"&gt;1. Financial Transactions Processing&lt;/H3&gt;&lt;H5 id="toc-hId-945910661"&gt;Scenario:&lt;/H5&gt;&lt;P&gt;A banking system processes a sequence of fund transfers (e.g., debit from account A, then credit to account B).&lt;/P&gt;&lt;H5 id="toc-hId-749397156"&gt;Why EOIO Matters:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Duplicate or out-of-order messages can lead to account imbalance, fraudulent triggers, or failed reconciliations.&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;It &lt;/SPAN&gt;&lt;SPAN&gt;g&lt;/SPAN&gt;uarantees consistency in multi-step or interdependent transactions.&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-552883651"&gt;Example:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;SAP ERP system integrating with SWIFT messaging via Cloud Integration must maintain EOIO to prevent double-posting.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-98204708"&gt;2. Supply Chain and Logistics Integration&lt;/H3&gt;&lt;H5 id="toc-hId--760346180"&gt;Scenario:&lt;/H5&gt;&lt;P&gt;Logistics updates from multiple carriers (e.g., shipment picked → in transit → delivered) are sent to the ERP system.&lt;/P&gt;&lt;H5 id="toc-hId--956859685"&gt;Why EOIO Matters:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Maintaining the chronological order is critical for real-time tracking, customer notifications, and process triggers.&lt;/LI&gt;&lt;LI&gt;Duplicate status updates may mislead warehouse or customer service operations.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--566567176"&gt;3. Inventory Management and Replenishment&lt;/H3&gt;&lt;H5 id="toc-hId--1349886695"&gt;Scenario:&lt;/H5&gt;&lt;P&gt;Automated replenishment orders triggered by real-time stock levels across distributed warehouses.&lt;/P&gt;&lt;H5 id="toc-hId--1546400200"&gt;Why EOIO Matters:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Duplicate or unordered stock updates can lead to overstocking or missed replenishments.&lt;/LI&gt;&lt;LI&gt;EOIO ensures real-time stock adjustments are accurate and sequential.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId--1156107691"&gt;4. Customer Journey and CRM Integration&lt;/H3&gt;&lt;H5 id="toc-hId--1939427210"&gt;Scenario:&lt;/H5&gt;&lt;P&gt;CRM events like "lead created", "email sent", "customer responded", and "sales call made" are integrated from various channels.&lt;/P&gt;&lt;H5 id="toc-hId--2135940715"&gt;Why EOIO Matters:&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;Accurate customer profiling and scoring depend on the correct sequence.&lt;/LI&gt;&lt;LI&gt;Duplicate activities could skew analytics and automation.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId--1158842192"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--1355355697"&gt;Configuring EOIO in SAP Integration Suite&lt;/H1&gt;&lt;P&gt;SAP Integration Suite offers tools and functionalities to implement EOIO, enabling businesses to ensure reliability and data consistency.&lt;/P&gt;&lt;P&gt;On a high level, there are two ways to implement EOIO QoS in &lt;SPAN&gt;the &lt;/SPAN&gt;&lt;SPAN&gt;C&lt;/SPAN&gt;loud &lt;SPAN&gt;I&lt;/SPAN&gt;ntegration capability of SAP Integration Suite:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;With the support for &lt;STRONG&gt;exclusive JMS queues in the Cloud Integration capability of SAP Integration Suite&lt;/STRONG&gt;, you are now able to run scenarios supporting Exactly Once In Order delivery, given that you ensure Exactly Once delivery, as described in&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/quality-of-service-exactly-once" target="_blank" rel="noopener noreferrer"&gt;Quality of Service Exactly Once&lt;/A&gt;. See&amp;nbsp;also &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configure-jms-sender-adapter" target="_blank" rel="noopener noreferrer"&gt;Configure the JMS Sender Adapter&lt;/A&gt;&amp;nbsp;and&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/configure-jms-receiver-adapter" target="_blank" rel="noopener noreferrer"&gt;Configure the JMS Receiver Adapter&lt;/A&gt;. This blog post focuses on this option, and the configuration details and best practices for using JMS exclusive queues will be discussed later in the post.&lt;/LI&gt;&lt;LI&gt;Alternatively, you can &lt;STRONG&gt;use&amp;nbsp;SAP Integration Suite, advanced event mesh&lt;/STRONG&gt; for implementing Exactly Once In Order delivery. Here, you can either use exclusive queues or partitioned queues. To connect to&amp;nbsp;SAP Integration Suite, advanced event mesh you can leverage the Advanced Event Mesh adapter, see&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/decoupling-using-sap-integration-suite-advanced-event-mesh" target="_blank" rel="noopener noreferrer"&gt;Decoupling using SAP integration Suite, advanced event mesh&lt;/A&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;The prerequisite for end-to-end Exactly Once In Order delivery is that the sender ensures that a message is only sent when the predecessor message has been acknowledged by a technical success response, such as an HTTP return code 200 or 202.&lt;/P&gt;&lt;P&gt;If you&lt;SPAN&gt;’d&lt;/SPAN&gt; like to learn how to setup&amp;nbsp;Exactly Once In Order in Cloud Integration, check out the new integration flow design guidelines at&amp;nbsp;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/quality-of-service-exactly-once-in-order" target="_blank" rel="noopener noreferrer"&gt;Quality of Service Exactly Once In Order&lt;/A&gt;. The following table helps you to understand the step-by-step workflow of EOIO&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;DIV&gt;&lt;TABLE border="1" cellspacing="0" cellpadding="0"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="47px"&gt;&lt;P&gt;&lt;STRONG&gt;Step&amp;nbsp;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="427px"&gt;&lt;P&gt;&lt;STRONG&gt;Process&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="47px"&gt;&lt;P&gt;1&lt;/P&gt;&lt;/TD&gt;&lt;TD width="427px"&gt;&lt;P&gt;Sender prepares message&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="47px"&gt;&lt;P&gt;2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="427px"&gt;&lt;P&gt;Message sent to exclusive/partitioned queue&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="47px"&gt;&lt;P&gt;3&lt;/P&gt;&lt;/TD&gt;&lt;TD width="427px"&gt;&lt;P&gt;Queue ensures ordered delivery&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="47px"&gt;&lt;P&gt;4&lt;/P&gt;&lt;/TD&gt;&lt;TD width="427px"&gt;&lt;P&gt;Receiver acknowledges each message (e.g., HTTP 200/202)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="47px"&gt;&lt;P&gt;5&lt;/P&gt;&lt;/TD&gt;&lt;TD width="427px"&gt;&lt;P&gt;&lt;SPAN&gt;Next message sent after acknowledgment&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;The usage of SAP Integration Suite, advanced event mesh and the Advanced Event Mesh adapter depends on your SAP Integration Suite service plan, see SAP note&amp;nbsp;&lt;A href="https://me.sap.com/notes/2903776" target="_blank" rel="noopener noreferrer"&gt;2903776&lt;/A&gt;.&lt;/P&gt;&lt;H1 id="toc-hId--1383685511"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId--1580199016"&gt;JMS Exclusive Queues&lt;/H1&gt;&lt;H3 id="toc-hId-1931448761"&gt;Implementation&lt;/H3&gt;&lt;P&gt;To implement Exactly Once in Order with JMS queues, we have introduced an access type field in the JMS queue configuration. This feature is available starting with the JMS Sender adapter version 1.4 and the JMS Receiver adapter version 1.6.&lt;/P&gt;&lt;P&gt;In an already existing integration flow, if you want to switch to exclusive queues (replacing earlier default non-exclusive queues), you need to edit the integration flow, delete the JMS sender/receiver adapter and add it again to get latest version supporting exclusive queues.&lt;/P&gt;&lt;P&gt;Here are the configuration details:&lt;/P&gt;&lt;H5 id="toc-hId-1148129242"&gt;JMS Sender Adapter&lt;/H5&gt;&lt;P&gt;For the JMS Sender adapter version 1.4 and up, refer to following link for configuration:&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/configure-jms-sender-adapter" target="_blank" rel="noopener noreferrer"&gt;Configure JMS Sender Adapter&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sunny_kapoor_0-1755117488958.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300563i501F3B3676897CC4/image-dimensions/536x321?v=v2" width="536" height="321" role="button" title="sunny_kapoor_0-1755117488958.png" alt="sunny_kapoor_0-1755117488958.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H5 id="toc-hId-951615737"&gt;JMS Receiver Adapter&lt;/H5&gt;&lt;P&gt;For the JMS Receiver adapter version 1.6 and up, refer to following link for configuration:&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/configure-jms-receiver-adapter?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Configure JMS Receiver Adapter&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sunny_kapoor_1-1755117488960.png" style="width: 530px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/300562iBE7B07D27D322752/image-dimensions/530x313?v=v2" width="530" height="313" role="button" title="sunny_kapoor_1-1755117488960.png" alt="sunny_kapoor_1-1755117488960.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1341908246"&gt;Limitations&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;The access type of a queue cannot be changed, unless you undeploy the integration flows it is being used in and delete the queue. Only then you can edit the integration flow to use a different queue type. After making these changes, you can deploy it again to have the same queue with the new access type.&lt;/LI&gt;&lt;LI&gt;Exclusive queues should have only one consumer. If there is another integration flow which is consuming from same exclusive queue, the order is not guaranteed. So, this should be explicitly taken care while designing the integration flow.&lt;/LI&gt;&lt;LI&gt;As of now (upcoming feature though), the checks for lower and upper limits for retry interval (1-60 mins) and Max retry interval (1-180 mins) are not performed in the integration flow design UI. However, integration flow deployment will fail if the values are out of range, so please keep them within these limits. Please note that these range values differ from non-exclusive queues&lt;SPAN&gt;,&lt;/SPAN&gt; as the retry mechanism for exclusive queues is managed by the broker, and these limits come from the broker itself.&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-558588727"&gt;Points to be noted&lt;/H5&gt;&lt;UL&gt;&lt;LI&gt;If you move messages from an exclusive queue to another exclusive or non-exclusive queue, the order of these messages will not be guaranteed.&lt;/LI&gt;&lt;LI&gt;If a message processing is stuck in an exclusive queue, all messages following it in the queue will have to wait to be processed. There is no error queue for exclusive queues (unlike non-exclusive queues), so those messages cannot be moved unless moved out manually.&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-362075222"&gt;Downsides&lt;/H5&gt;&lt;P&gt;Customers should choose exclusive queues only, if really required to implement EOIO QoS in their business scenario. If EOIO QoS is not needed or desired, non-exclusive queues should be preferred. Here are some downsides of using exclusive queues over non-exclusive queues&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;The message processing will be slow as the default value for ‘Number of Concurrent Processes’ in sender adapter set to 1 (not even shown in UI). Hence it is serialized.&lt;/LI&gt;&lt;LI&gt;If the top most message is stuck, then all other messages will be stuck because there is no error queue corresponding to an exclusive queue to implement in-order processing. The stuck message needs to be moved out of the queue manually.&lt;/LI&gt;&lt;/UL&gt;&lt;H5 id="toc-hId-165561717"&gt;Error Cases&lt;/H5&gt;&lt;P&gt;The integration flow deployment consuming from or producing to an exclusive queue fails if:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;It is trying to create or access a queue which already exists with different access type.&lt;/LI&gt;&lt;LI&gt;The mentioned retry interval and max retry interval values are out of range.&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1142660240"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1114330426"&gt;Conclusion&lt;/H1&gt;&lt;P&gt;EOIO is essential for reliable cloud integration, and SAP Integration Suite provides the necessary tools and methodologies to implement i effectively. By ensuring data integrity, sequence preservation, and operational reliability, businesses can enhance their service delivery across industries. With SAP Integration Suite, achieving EOIO is a pathway to operational excellence and future-proof business processes.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/ensuring-exactly-once-in-order-quality-of-service-in-cloud-integration/ba-p/14180026"/>
    <published>2025-08-21T11:49:19.706000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/pipeline-integrated-messaging-runtime-asyc-example/ba-p/14187818</id>
    <title>Pipeline - Integrated Messaging Runtime Asyc Example</title>
    <updated>2025-08-22T16:08:20.488000+02:00</updated>
    <author>
      <name>lm_allen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/536714</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1608877011"&gt;Introduction&lt;/H1&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The pipeline concept was introduced by SAP to mirror the way messages are processed in SAP PO/PI - in a pipeline.&amp;nbsp; Using this concept in cloud integration offers one potential route for migrating a large number of integrations from SAP PO/PI.&amp;nbsp; The pipeline concept also reduces the number of JMS queues needed for managing migrated or new asynchronous integration scenarios.&lt;/P&gt;&lt;P&gt;There are a great series of blogs that can be found at &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-new-pipeline-concept-in-cloud-integration/ba-p/13639651" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/introducing-the-new-pipeline-concept-in-cloud-integration/ba-p/13639651&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Please note that the original SAP Package for the pipeline concept 'Process Integration Pipeline - Generic Integration Flows and Templates' will soon be deprecated and the new integration packages should be used, see blog: &lt;A href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339" target="_blank"&gt;https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The aim of this blog is to show an example of manually setting up a simple asynchronous integration using the new pipeline packages.&lt;/P&gt;&lt;P&gt;For reference I have mocked up an example iflow in SAP PO that we will replicate in cloud integration using the pipeline.&amp;nbsp; The flow starts with a json message being sent from Postman over https, converted to xml in the adapter and then sent via email to 2 recipients each with a single interface.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_0-1755870611380.png" style="width: 849px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303952iF3941AD1AB8F66A3/image-dimensions/849x266/is-moderation-mode/true?v=v2" width="849" height="266" role="button" title="lm_allen_0-1755870611380.png" alt="lm_allen_0-1755870611380.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-1412363506"&gt;Setting Up The Cloud Integration Pipeline - Overview&lt;/H1&gt;&lt;P&gt;From Discovery Tab download following packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericInbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Inbound&lt;/A&gt;: Contains the generic IDoc and XI inbound flows.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericPipelines/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Pipelines&lt;/A&gt;: Contains the main generic pipeline steps.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericOutbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Outbound&lt;/A&gt;: Contains the generic outbound processing flow.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineTemplates/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Templates&lt;/A&gt;: Contains all templates for the scenario-specific flows and custom extensions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Although the complete pipeline (shown below with flow steps numbered) is still supported for Asynchronous messages:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_1-1755870611381.png" style="width: 978px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303954i90FC7BBCAE814FF8/image-dimensions/978x292/is-moderation-mode/true?v=v2" width="978" height="292" role="button" title="lm_allen_1-1755870611381.png" alt="lm_allen_1-1755870611381.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The recommendation is to use the Integrated pipeline (flow steps numbered for reference in diagram below):&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_2-1755870611382.png" style="width: 931px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303953iADE75F7948536E2D/image-dimensions/931x378/is-moderation-mode/true?v=v2" width="931" height="378" role="button" title="lm_allen_2-1755870611382.png" alt="lm_allen_2-1755870611382.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For setting up the integrated messaging runtime for asynchronous communication (recommended option for asynchronous communication), you need to deploy the following generic integration flows:&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for IDoc messages) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for XI messages) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;H1 id="toc-hId-1215850001"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-1019336496"&gt;Configure Flow Step2&lt;/H1&gt;&lt;P&gt;Configure 'Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async' and deploy&lt;/P&gt;&lt;P&gt;Note - JMS queues are created automatically when you deploy&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_3-1755870611383.png" style="width: 665px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303956i46F0208FCB98BBCF/image-dimensions/665x246/is-moderation-mode/true?v=v2" width="665" height="246" role="button" title="lm_allen_3-1755870611383.png" alt="lm_allen_3-1755870611383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;CustomXPid_SwitchOffTilde is set to true - this ensures the alternative Partner (setup in next step) is read from partner directory.&lt;/P&gt;&lt;P&gt;PipelineJMSQueuePrefix - enter custom Queue Prefix&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-822822991"&gt;Configure Flow Step 6&lt;/H1&gt;&lt;P&gt;Configure 'Pipeline v2 Generic Step06 - Outbound Processing' and deploy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_4-1755870611383.png" style="width: 695px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303955i3CB85294EA191886/image-dimensions/695x219/is-moderation-mode/true?v=v2" width="695" height="219" role="button" title="lm_allen_4-1755870611383.png" alt="lm_allen_4-1755870611383.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;PipelineJMSQueuePrefix - enter custom Queue Prefix&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-626309486"&gt;Initial Partner Directory Setup&lt;/H1&gt;&lt;P&gt;In &lt;STRONG&gt;Monitor|Integration and APIs|Manage Partner Directory&lt;/STRONG&gt; - create a new Partner entry of type 'Alternative Partners'.&amp;nbsp; This information is used by the generic flow steps to identify the interface being processed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_5-1755870611384.png" style="width: 607px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303957i3C95848C98463417/image-dimensions/607x309/is-moderation-mode/true?v=v2" width="607" height="309" role="button" title="lm_allen_5-1755870611384.png" alt="lm_allen_5-1755870611384.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-429795981"&gt;Setup Flow Step 1&lt;/H1&gt;&lt;P&gt;For Step 1 of the process you can either create your own iflow of copy a template from the Package 'Cloud Integration Pipeline - Templates'.&amp;nbsp; In this example I copied the following iflow 'Pipeline v2 Template Step01 - Inbound Processing At Least Once'&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_6-1755870611384.png" style="width: 814px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303958i885B645368CAE4C3/image-dimensions/814x45/is-moderation-mode/true?v=v2" width="814" height="45" role="button" title="lm_allen_6-1755870611384.png" alt="lm_allen_6-1755870611384.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Configure Flow and set name of Receiver Queue to match Sender Queue name setup in 'Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async'&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_7-1755870611384.png" style="width: 716px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303960i442920610E56143B/image-dimensions/716x240/is-moderation-mode/true?v=v2" width="716" height="240" role="button" title="lm_allen_7-1755870611384.png" alt="lm_allen_7-1755870611384.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For this example set Sender Adapter as HTTPS&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_8-1755870611385.png" style="width: 613px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303959i487CCE11AB5D2399/image-dimensions/613x291/is-moderation-mode/true?v=v2" width="613" height="291" role="button" title="lm_allen_8-1755870611385.png" alt="lm_allen_8-1755870611385.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In 'Set SAP headers' Content Modifier set values below to match ones set in Alternative Partner&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_9-1755870611385.png" style="width: 861px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303963i06207729654ADF0C/image-dimensions/861x493/is-moderation-mode/true?v=v2" width="861" height="493" role="button" title="lm_allen_9-1755870611385.png" alt="lm_allen_9-1755870611385.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Nb: Optionally could pass header 'partnerID' with value in this case of 'INT_0006_Test_Pipeline' rather than using SAP_Sender &amp;amp; SAP_SenderInterface&lt;/P&gt;&lt;P&gt;The 'Parse incoming XML' and 'Set custom header attributes' steps are used for setting customer headers on MPL Logs if required.&amp;nbsp; Can delete if not needed.&amp;nbsp; See blog for more details &lt;A href="https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-custom-header-properties-and/ba-p/13894048" target="_blank"&gt;https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-custom-header-properties-and/ba-p/13894048&lt;/A&gt;&lt;/P&gt;&lt;P&gt;The 'Define Service Interface Operations' and 'Map Message Type to Operation' steps are used to replicate the SAP PO functionality of having different operations based on the Message Root Node.&amp;nbsp; Can delete if not needed. See blog for more details &lt;A href="https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-service-interface-operations-and/ba-p/14049909" target="_blank"&gt;https://community.sap.com/t5/integration-blog-posts/new-pipeline-concept-features-supporting-service-interface-operations-and/ba-p/14049909&lt;/A&gt;&lt;/P&gt;&lt;H1 id="toc-hId-233282476"&gt;&amp;nbsp;&lt;/H1&gt;&lt;H1 id="toc-hId-36768971"&gt;Optional - Flow Step 3&lt;/H1&gt;&lt;P&gt;If want to call a scenario specific inbound conversion then can create an entry in the Partner directory&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_10-1755870611386.png" style="width: 668px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303961iB8A1F492CA11C915/image-dimensions/668x262/is-moderation-mode/true?v=v2" width="668" height="262" role="button" title="lm_allen_10-1755870611386.png" alt="lm_allen_10-1755870611386.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Again can create your own iflow or Copy template iflow 'Pipeline v2 Template Step03 - Inbound Conversion'&lt;/P&gt;&lt;P&gt;Set Process Direct Address to match above setting&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_11-1755870611386.png" style="width: 697px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303962iE91B306D8137B895/image-dimensions/697x394/is-moderation-mode/true?v=v2" width="697" height="394" role="button" title="lm_allen_11-1755870611386.png" alt="lm_allen_11-1755870611386.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This template also contains steps for custom headers and handling service interface operations - again delete steps if not required.&lt;/P&gt;&lt;P&gt;For this simple example I have added the JSON to XML step.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId--159744534"&gt;Receiver Determination - Partner Directory Setup&lt;/H1&gt;&lt;P&gt;&lt;STRONG&gt;Point-to-Point Scenario (not used for this example build since we have 2 receivers)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For Point-to-Point scenarios, that is, scenarios with only one receiver and one receiver interface, you can bypass the two flow steps receiver determination and interface determination.&lt;/P&gt;&lt;P&gt;In this case, you don't have to upload XSLT mappings to determine the list of receivers and receiver interfaces, but instead you need to create corresponding string parameters in the Partner Directory.&lt;/P&gt;&lt;P&gt;1.&amp;nbsp; Define a Partner Directory string parameter with ID receiverDetermination as follows:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_12-1755870611386.png" style="width: 653px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303964iF774002D85846946/image-dimensions/653x173/is-moderation-mode/true?v=v2" width="653" height="173" role="button" title="lm_allen_12-1755870611386.png" alt="lm_allen_12-1755870611386.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2.&amp;nbsp; define a Partner Directory string parameter with the ID as combination of the constant identifier interfaceDetermination and the receiver system name, separated with an underscore "_". As value, enter the ProcessDirect endpoint of the scenario-specific integration flow for outbound processing&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_13-1755870611386.png" style="width: 685px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303967i12BD6D7B214E840F/image-dimensions/685x170/is-moderation-mode/true?v=v2" width="685" height="170" role="button" title="lm_allen_13-1755870611386.png" alt="lm_allen_13-1755870611386.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Receiver And Interface Determination&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For scenarios with more multiple receivers and or multiple receiver interfaces an xslt file can be created listing these.&amp;nbsp; This is saved to the Partner Directory and then used by the Generic integration flow.&lt;/P&gt;&lt;P&gt;ReceiverNotDetermined can be set to Default,Ignore or Error&lt;/P&gt;&lt;P&gt;These option replicate those found on the SAP PO IFlow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_14-1755870611387.png" style="width: 377px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303965iA3C2EADC9C6719CA/image-dimensions/377x148/is-moderation-mode/true?v=v2" width="377" height="148" role="button" title="lm_allen_14-1755870611387.png" alt="lm_allen_14-1755870611387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_15-1755870611387.png" style="width: 661px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303969i8A9EEB2FA0B4C8FB/image-dimensions/661x488/is-moderation-mode/true?v=v2" width="661" height="488" role="button" title="lm_allen_15-1755870611387.png" alt="lm_allen_15-1755870611387.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Save as a xsl file&lt;/P&gt;&lt;P&gt;Load as a Binary Parameter in Partner Directory - Note the user interface encodes the file as base64 as it loads (if using the API need to manually convert to base64 before loading)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_16-1755870611388.png" style="width: 582px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303968iACC4E04262EC8409/image-dimensions/582x293/is-moderation-mode/true?v=v2" width="582" height="293" role="button" title="lm_allen_16-1755870611388.png" alt="lm_allen_16-1755870611388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-413482044"&gt;Flow Step 7 - Outbound Message&lt;/H1&gt;&lt;P&gt;For the final outbound flow you can either create your own iflow or copy one of the 'Step07' ones from the 'Cloud Integration Pipeline - Templates' package as a starting point.&amp;nbsp; To keep things simple I created my own - one for each receiver.&amp;nbsp; It is also at this point you could add any message transformation logic if required ie: mappings.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_17-1755870611388.png" style="width: 911px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303970i46A9332D0DA8CF9E/image-dimensions/911x573/is-moderation-mode/true?v=v2" width="911" height="573" role="button" title="lm_allen_17-1755870611388.png" alt="lm_allen_17-1755870611388.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_18-1755870611389.png" style="width: 928px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303971i42D25F8ACA1B278D/image-dimensions/928x516/is-moderation-mode/true?v=v2" width="928" height="516" role="button" title="lm_allen_18-1755870611389.png" alt="lm_allen_18-1755870611389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-216968539"&gt;Testing&lt;/H1&gt;&lt;P&gt;Send Message from postman&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_19-1755870611389.png" style="width: 712px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303972iE8A6A3B5CD39F998/image-dimensions/712x216/is-moderation-mode/true?v=v2" width="712" height="216" role="button" title="lm_allen_19-1755870611389.png" alt="lm_allen_19-1755870611389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;2 emails receiver with different subjects to differentiate the receivers&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_20-1755870611389.png" style="width: 608px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303973i8BD5589F33301271/image-dimensions/608x146/is-moderation-mode/true?v=v2" width="608" height="146" role="button" title="lm_allen_20-1755870611389.png" alt="lm_allen_20-1755870611389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_21-1755870611389.png" style="width: 645px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303974i69B3323B8D5C95D3/image-dimensions/645x160/is-moderation-mode/true?v=v2" width="645" height="160" role="button" title="lm_allen_21-1755870611389.png" alt="lm_allen_21-1755870611389.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H1 id="toc-hId-20455034"&gt;Notes On Retries&lt;/H1&gt;&lt;P&gt;By default the send from the respective JMS queues will retry 5 times&lt;/P&gt;&lt;P&gt;After the max retries the message will go to the DLQ&lt;/P&gt;&lt;P&gt;Once cause of fail is corrected message can be moved from the DLQ back to the normal queue to process again&lt;/P&gt;&lt;P&gt;Can specify scenario specific retries in partner directory if required&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_22-1755870611390.png" style="width: 673px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303975i6705B661DA55D638/image-dimensions/673x271/is-moderation-mode/true?v=v2" width="673" height="271" role="button" title="lm_allen_22-1755870611390.png" alt="lm_allen_22-1755870611390.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/pipeline-integrated-messaging-runtime-asyc-example/ba-p/14187818"/>
    <published>2025-08-22T16:08:20.488000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016</id>
    <title>Unravelling the ‘technical user’ propagation scenarios in SAP Integration Suite</title>
    <updated>2025-08-25T05:55:48.613000+02:00</updated>
    <author>
      <name>vinayak_adkoli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/216068</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1737803085"&gt;1. Introduction:&lt;/H2&gt;&lt;P&gt;When it comes to securely connecting to SAP on-premise systems, &lt;STRONG&gt;API Management&lt;/STRONG&gt; and &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt; stand as two key pillars of the &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;. While API Management is often aligned with &lt;STRONG&gt;user-centric&lt;/STRONG&gt; flows — where the focus is on authenticating and authorizing the end user — Cloud Integration has traditionally dealt with &lt;STRONG&gt;system-to-system&lt;/STRONG&gt; communication, which involves backend calls without direct end-user context.&lt;/P&gt;&lt;P&gt;Having said that, across both these capabilities, the ability to connect to backend systems using a &lt;STRONG&gt;fixed technical credential&lt;/STRONG&gt; is a widely desired&amp;nbsp;&lt;STRONG&gt;&lt;FONT color="#008000"&gt;*&lt;/FONT&gt;&lt;/STRONG&gt; approach. However, in many SAP Cloud Integration (CPI) scenarios, the term &lt;STRONG&gt;technical user&lt;/STRONG&gt; is often equated with “Basic Authentication” — a method increasingly viewed by organizations as less secure. A stronger and more trusted approach for connecting applications and services running in SAP BTP to SAP on-premise systems is &lt;STRONG&gt;principal propagation&lt;/STRONG&gt;, where the SAP Cloud Connector generates a short-lived X.509 certificate containing a &lt;STRONG&gt;Common Name (CN)&lt;/STRONG&gt; dynamically retrieved from the calling system.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&amp;nbsp;&lt;FONT color="#008000"&gt;&lt;STRONG&gt;*&lt;/STRONG&gt; &lt;/FONT&gt;&lt;EM&gt;CPI customers on the BTP &lt;STRONG&gt;Neo&lt;/STRONG&gt; environment are familiar with a feature called &lt;STRONG&gt;certificate-to-user mapping&lt;/STRONG&gt;, which allows an incoming client certificate to be directly mapped to a backend user identity. This made technical user propagation both straightforward and widely adopted.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;In &lt;STRONG&gt;Cloud Foundry&lt;/STRONG&gt;, the incoming certificate is typically mapped to an access token associated with the&amp;nbsp;&lt;STRONG&gt;service key credential&amp;nbsp;&lt;/STRONG&gt;rather than being directly mapped to a backend user's security context, as in Neo. As a result, customers often struggle to replicate their established Neo patterns, especially for &lt;STRONG&gt;fixed technical identities&lt;/STRONG&gt; — this is the exact problem that has now been solved!&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;As a side note, if you’d like to dive deeper into certificate-to-user mapping and certificate-based authentication in SAP Cloud Integration, you can refer to Mandy Krimmel’s insightful blog posts covering both &lt;A href="https://community.sap.com/t5/integration-blog-posts/cloud-integration-how-to-setup-secure-http-inbound-connection-with-client/bc-p/13336246" target="_self"&gt;Neo&lt;/A&gt; and &lt;A href="https://community.sap.com/t5/integration-blog-posts/cloud-integration-on-cf-how-to-setup-secure-http-inbound-connection-with/ba-p/13393777" target="_self"&gt;Cloud Foundry&lt;/A&gt;.&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Here's where things start to get interesting. With &lt;STRONG&gt;Cloud Connector version 2.15&lt;/STRONG&gt;, SAP introduced the ability to perform &lt;STRONG&gt;technical user propagation&lt;/STRONG&gt; using the &lt;U&gt;SAP-Connectivity-Technical-Authentication&lt;/U&gt; HTTP header. This allows a cloud application to send a signed JWT representing the fixed technical identity, which the Cloud Connector uses to generate a short-lived X.509 certificate — all without relying on static passwords. You can read more about this feature in the official SAP Help Portal &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/authentication-to-on-premise-system" target="_blank" rel="noopener noreferrer"&gt;documentation&lt;/A&gt; and the SAP Community &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/technical-user-propagation-sap-btp-to-s4-on-premise/bc-p/13555634" target="_blank"&gt;blog post&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;Traditionally, principal propagation has been used to propagate an &lt;STRONG&gt;end-user identity&lt;/STRONG&gt;, but here’s the beauty: it can just as easily propagate a &lt;STRONG&gt;fixed (technical) identity&lt;/STRONG&gt; as a short-lived X.509 certificate. This means you can retain all the advantages of principal propagation — dynamic credentials, reduced exposure, and assured identity mapping — without falling back to basic authentication.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a35bsx.jpg" style="width: 500px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301589i40213A0D9133A351/image-size/large?v=v2&amp;amp;px=999" role="button" title="a35bsx.jpg" alt="a35bsx.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This blog post, co-authored by &lt;U&gt;Vinayak Adkoli&lt;/U&gt; and &lt;U&gt;Sunny Kapoor,&lt;/U&gt; focuses on &lt;STRONG&gt;technical user propagation&lt;/STRONG&gt; within &lt;STRONG&gt;Cloud Integration&lt;/STRONG&gt;, exploring how such credentials can be securely propagated across three common Receiver Adapters — &lt;STRONG&gt;SOAP&lt;/STRONG&gt;, &lt;STRONG&gt;HTTP&lt;/STRONG&gt;, and &lt;STRONG&gt;OData V2&lt;/STRONG&gt;. In a follow-up post, we will examine similar patterns from the perspective of &lt;STRONG&gt;API Management’s OnPremise connectivity&lt;/STRONG&gt; flows.&lt;/P&gt;&lt;H2 id="toc-hId-1541289580"&gt;2. Cloud Connector and backend prerequisites to support Technical user propagation&lt;/H2&gt;&lt;P&gt;Before you can configure an IFlow in &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; to propagate a fixed technical user via a short-lived X.509 certificate, both the &lt;STRONG&gt;SAP Cloud Connector&lt;/STRONG&gt; and the &lt;STRONG&gt;backend system&lt;/STRONG&gt; must be prepared to handle this scenario.&lt;/P&gt;&lt;P&gt;This section outlines the key steps and underlying rationale, but it is not a complete how-to guide. For detailed, step-by-step instructions, please refer to the resources listed below.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Product &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configuring-principal-propagation" target="_self" rel="noopener noreferrer"&gt;documentation&lt;/A&gt; - always up-to-date with the latest enhancements.&lt;/LI&gt;&lt;LI&gt;Michael's &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/how-to-guide-principal-propagation-in-an-https-scenario/ba-p/13325048" target="_self"&gt;blog&lt;/A&gt;. A little old, but still relevant.&lt;/LI&gt;&lt;LI&gt;Martin Raepple's &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/principal-propagation-in-a-multi-cloud-solution-between-microsoft-azure-and/ba-p/13491407" target="_self"&gt;blog&lt;/A&gt;&amp;nbsp;is an excellent resource for a step-by-step procedure.&lt;/LI&gt;&lt;/UL&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":loudspeaker:"&gt;📢&lt;/span&gt;&amp;nbsp;&amp;nbsp;&lt;EM&gt;(tip) Because the screenshots are embedded within a table, they may appear small even when opened in a new window. To view them in a larger size, simply change the image URL from '.../medium' to '.../large'&lt;/EM&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10.239885427855357%"&gt;&lt;H4 id="toc-hId-1602941513"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.01539563193699%"&gt;&lt;H4 id="toc-hId-1406428008"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="40.74471894020766%"&gt;&lt;H4 id="toc-hId-1209914503"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855357%"&gt;1.&lt;/TD&gt;&lt;TD width="49.01539563193699%"&gt;&lt;P&gt;Let's begin the setup by reviewing the SAP Cloud Connector Configuration page.&lt;/P&gt;&lt;P&gt;In the Configuration -&amp;gt; On-Premise section of the Cloud Connector, make sure you have a &lt;STRONG&gt;System Certificate&lt;/STRONG&gt; populated with an intermediate CA certificate.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.74471894020766%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.28.06 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301592i5848F4C1D65EE603/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.28.06 PM.png" alt="Screenshot 2025-08-15 at 4.28.06 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855357%"&gt;2.&lt;/TD&gt;&lt;TD width="49.01539563193699%"&gt;&lt;P&gt;Likewise,&lt;SPAN&gt;&amp;nbsp;the same certificate is also included in the&amp;nbsp;&lt;STRONG&gt;CA Certificate&lt;/STRONG&gt;&amp;nbsp;section&lt;/SPAN&gt;.&lt;/P&gt;&lt;P&gt;IMP: Note that within the &lt;STRONG&gt;Principal Propagation&lt;/STRONG&gt; section, the subject pattern has been specified as &lt;U&gt;CN={$name}&lt;/U&gt;.&amp;nbsp;&lt;/P&gt;&lt;P&gt;It is also possible to create multiple rules that resolve based on a condition. For example, if the system sees an 'email' claim in the token, it will use the email attribute to construct the subject pattern.&lt;/P&gt;&lt;P&gt;You can read more about the order of resolution of subject patterns &lt;A href="https://help.sap.com/docs/connectivity/sap-btp-connectivity-cf/configure-subject-patterns-for-principal-propagation" target="_self" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.74471894020766%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.32.59 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301593iFA96E392BC38A36D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.32.59 PM.png" alt="Screenshot 2025-08-15 at 4.32.59 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-22 at 9.03.12 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304318i1DE6CECDF444A8BB/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-22 at 9.03.12 PM.png" alt="Screenshot 2025-08-22 at 9.03.12 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;3.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;In the &lt;STRONG&gt;Access Control&lt;/STRONG&gt; section of the Connector settings, be sure to set the Protocol to ‘HTTPS’ and the Principal Type to ‘X.509’.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Note that I've unchecked the option to use '&lt;U&gt;System Certificate for Logon&lt;/U&gt;'. This is a nuance that we will call out separately in section 6&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.34.00 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302093iCE58CD9F8D8F9088/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.34.00 PM.png" alt="Screenshot 2025-08-15 at 4.34.00 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;4.&lt;/TD&gt;&lt;TD&gt;Let's look at our &lt;STRONG&gt;backend&lt;/STRONG&gt; configurations now. Txn &lt;U&gt;STRUST&lt;/U&gt; leads us to the Trust Manager. I have the CA certificate and the Root Certificate that signed this CA certificate in the Trust Store&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.42.54 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301594iBBEA818C78CE1787/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.42.54 PM.png" alt="Screenshot 2025-08-15 at 4.42.54 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;5.&lt;/TD&gt;&lt;TD&gt;Note that there are 3 key configuration parameters defined in Txn &lt;U&gt;RZ10&lt;/U&gt;. The ICM node will need to be restarted after this.&lt;/TD&gt;&lt;TD&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.36.26 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301596i36C2A586C5682CFD/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.36.26 PM.png" alt="Screenshot 2025-08-15 at 4.36.26 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;6.&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;This is one of the most important steps. Transaction &lt;U&gt;&lt;EM&gt;CERTRULE&lt;/EM&gt;&lt;/U&gt; opens the rule-based certificate mapping screen. If you've previously set up principal propagation, you likely already have a rule using the '&lt;STRONG&gt;CN=*&lt;/STRONG&gt;' filter, where the wildcard typically resolves to an email address or user name. This approach works well for user-based principal propagation. However, since our objective here is to propagate a technical user, we'll instead make use of the Explicit Mapping tab.&amp;nbsp;We’ll go into more detail on this in section 5.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;You will notice that I’ve taken a slightly different approach here compared to Munish Suri’s helpful &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/technical-user-propagation-sap-btp-to-s4-on-premise/ba-p/13555630" target="_self"&gt;blog&lt;/A&gt;, where he creates a &lt;STRONG&gt;service user&lt;/STRONG&gt; in transaction SU01. The reason that step won’t work in our case is that the ‘alias’ field is limited to 40 characters, while the client ID from BTP XSUAA exceeds that limit.&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-15 at 4.37.06 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/301597iB5507D995059914E/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-15 at 4.37.06 PM.png" alt="Screenshot 2025-08-15 at 4.37.06 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 11.21.03 AM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302649i758FD4E639DB6E74/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 11.21.03 AM.png" alt="Screenshot 2025-08-19 at 11.21.03 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-755235560"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-558722055"&gt;3. SAP Integration Suite / Cloud Integration settings to support Technical user propagation&lt;/H2&gt;&lt;P&gt;The table below highlights the key settings we’ll be using on the SAP Integration Suite side.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;&lt;H4 id="toc-hId-620373988"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;H4 id="toc-hId-423860483"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;H4 id="toc-hId-227346978"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;1.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;P&gt;&lt;SPAN&gt;Since we’ve touched on the ‘&lt;STRONG&gt;&lt;EM&gt;certificate-to-user&lt;/EM&gt;&lt;/STRONG&gt;’ mapping functionality in Neo, let’s align our setup in the Integration Suite tenant with that behavior.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Make sure you have generated a service key for the 'Integration-Flow' service plan of the Process Integration Runtime service instance. Select either the 'Certificate' or 'External Certificate' option from the drop-down while doing so.&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-18 at 1.54.27 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302086iF83BBA4ACE81A98B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-18 at 1.54.27 PM.png" alt="Screenshot 2025-08-18 at 1.54.27 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;2.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;P&gt;If you select ‘&lt;U&gt;Certificate&lt;/U&gt;’, the BTP platform will generate the certificate and key in PEM format, which will be displayed on the next screen for you to copy.&lt;/P&gt;&lt;P&gt;Make a note of the client_id to be used at a later step.&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-18 at 1.57.43 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302087iD2C311DC6397678D/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-18 at 1.57.43 PM.png" alt="Screenshot 2025-08-18 at 1.57.43 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;3.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;Pro Tip: Since the certificate attribute contains a newline character (\n), you will need to remove it before attempting to generate a PFX file or any other format that can encode the key and certificate together, using tools like OpenSSL. Here is a quick video demonstration that can eliminate all newline characters in one go from Sublime Text. (Do a 'Find All' of \n and hit 'enter' to remove them)&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="sublimetext-certificate-small2.gif" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302722i7B28A680A6A06AB2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="sublimetext-certificate-small2.gif" alt="sublimetext-certificate-small2.gif" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.13247404224848%"&gt;4.&lt;/TD&gt;&lt;TD width="48.69316147511637%"&gt;&lt;P&gt;In addition to a service key corresponding to 'Certificate', make sure you have one with '&lt;U&gt;client credentials&lt;/U&gt;' as well. This will be used to demonstrate the scenario where just the 'client credential' will be propagated as a 'technical principal. Impressive, huh&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_sunglasses:"&gt;😎&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Make a note of the client_id to be used at a later step.&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="41.17436448263516%"&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-18 at 2.51.34 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302090i2CC00B0E3CCF0CA7/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-18 at 2.51.34 PM.png" alt="Screenshot 2025-08-18 at 2.51.34 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-119922392"&gt;&lt;STRONG&gt;4. Setting up a simple IFlow for Technical user propagation&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;To illustrate how &lt;STRONG&gt;technical user propagation&lt;/STRONG&gt; works in practice, we’ll walk through the setup of three simple integration flows (iFlows) in SAP Cloud Integration — each using a different &lt;STRONG&gt;Receiver Adapter&lt;/STRONG&gt;: &lt;STRONG&gt;SOAP&lt;/STRONG&gt;, &lt;STRONG&gt;HTTP&lt;/STRONG&gt;, and &lt;STRONG&gt;OData V2&lt;/STRONG&gt;. These examples are deliberately kept minimal so you can focus on the &lt;STRONG&gt;adapter configuration&lt;/STRONG&gt; and &lt;STRONG&gt;principal propagation&lt;/STRONG&gt; setup, without getting lost in unrelated processing logic.&amp;nbsp;&lt;/P&gt;&lt;div class="lia-spoiler-container"&gt;&lt;a class="lia-spoiler-link" href="#" rel="nofollow noopener noreferrer"&gt;Spoiler&lt;/a&gt;&lt;noscript&gt; (Highlight to read)&lt;/noscript&gt;&lt;div class="lia-spoiler-border"&gt;&lt;div class="lia-spoiler-content"&gt;Technical user propagation for HTTP and OData V2 Adapters works out of the box.&amp;nbsp; A small adjustment is needed only for the SOAP Adapter.&lt;/div&gt;&lt;noscript&gt;&lt;div class="lia-spoiler-noscript-container"&gt;&lt;div class="lia-spoiler-noscript-content"&gt;Technical user propagation for HTTP and OData V2 Adapters works out of the box.&amp;nbsp; A small adjustment is needed only for the SOAP Adapter.&lt;/div&gt;&lt;/div&gt;&lt;/noscript&gt;&lt;/div&gt;&lt;/div&gt;&lt;P&gt;As mentioned before, each scenario we present can be executed in either of the two ways as listed below to inject the fixed technical identity :&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;With a client certificate presented by the sending system (i.e. mTLS)&lt;/LI&gt;&lt;LI&gt;Following 'client credential' grant type, i.e., client_id and client_secret&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId--663397127"&gt;4.1.&amp;nbsp;OData V2 Receiver Adapter – Technical user propagation setup&lt;/H4&gt;&lt;P&gt;Let’s start with a common integration scenario: consuming an &lt;STRONG&gt;OData V2&lt;/STRONG&gt; service from an on-premise SAP backend system. In this setup, technical user propagation enables Cloud Integration to connect to the backend using a short-lived X.509 certificate that represents a fixed technical identity.&lt;/P&gt;&lt;P&gt;With the 2506 &lt;A href="https://help.sap.com/whats-new/5793247a5d5741beb0decc5b7dee1160" target="_self" rel="noopener noreferrer"&gt;update&lt;/A&gt;, SAP Integration Suite now supports technical user propagation &lt;STRONG&gt;out of the box&lt;/STRONG&gt;. Just choose ‘&lt;U&gt;principal propagation&lt;/U&gt;’ in the Authentication drop-down, and the system will automatically pass along either the end-user or technical-user context to the cloud connector and eventually to the backend.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="2506 product increment" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302707i02303C76CD243C4D/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.40.43 PM.png" alt="2506 product increment" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;2506 product increment&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Below is an illustration of a simple IFlow that leverages the OData V2 receiver adapter&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="a simplified example of an OData V2 Receiver Adapter" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302709iC1CB1E0F674A96FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 12.59.39 PM.png" alt="a simplified example of an OData V2 Receiver Adapter" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;a simplified example of an OData V2 Receiver Adapter&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's review the 'Connection' settings on the Adapter's property sheet. You will notice that I've set the 'Authentication' to &lt;U&gt;&lt;EM&gt;Principal Propagation&lt;/EM&gt;&lt;/U&gt;.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="property sheet of the OData Receiver" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/302708i2A6D349E87AA4B44/image-size/large?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.39.34 PM.png" alt="property sheet of the OData Receiver" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;property sheet of the OData Receiver&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;So far, everything looks good. The next step is to map the technical client identifier to a backend user—a process we’ll walk through in detail in &lt;STRONG&gt;section 5&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;Make sure you refer to that section before continuing further.&amp;nbsp;&lt;/EM&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;Invoking a curl command by injecting a client certificate (note that the private key and certificate were available during step 3.2):&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --cert mycertificate.pem --key pvtkey.key  --header 'target: odata' https://&amp;lt;cpi-instance&amp;gt;.cfapps.&amp;lt;landscape&amp;gt;.hana.ondemand.com/http/&amp;lt;pathsuffix&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;If you’d rather use a tool like Postman or Bruno instead of curl, ensure you have the client certificate in PFX format so it can be attached to your requests.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Client Certificate available in Postman" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304422iC3DBCB4B90FDCB07/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 5.38.59 PM.png" alt="Client Certificate available in Postman" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Client Certificate available in Postman&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Client Certificate available in Bruno" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304423iE3D08D3A889895C4/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 5.40.41 PM.png" alt="Client Certificate available in Bruno" /&gt;&lt;span class="lia-inline-image-caption" onclick="event.preventDefault();"&gt;Client Certificate available in Bruno&lt;/span&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;A successful execution should retrieve the needed results from the backend.&lt;/P&gt;&lt;P&gt;Let’s review key log entries from both SAP Cloud Connector and the backend system to illustrate how technical user propagation was performed.&lt;/P&gt;&lt;P&gt;In the screenshot below from the ljs_trace file in SAP Cloud Connector, the first highlighted entry shows the claims extracted from the decoded JWT received from Cloud Integration. The second entry confirms that the principal was resolved to type &lt;EM&gt;Technical&lt;/EM&gt;, as outlined in step 5.1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.19.30 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304320iF1E45537A3200D9A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.19.30 PM.png" alt="Screenshot 2025-08-19 at 1.19.30 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Next, you can see that an X.509 certificate was generated with the Common Name (CN) set to the technical identifier.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.16.19 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304321i508AEB517D2A423A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.16.19 PM.png" alt="Screenshot 2025-08-19 at 1.16.19 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the ‘Monitor’ perspective, you can see the technical identifier listed under the ‘User’ section, confirming that it was successfully propagated to the backend.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 11.22.30 AM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304418i59C19B4980D49352/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 11.22.30 AM.png" alt="Screenshot 2025-08-24 at 11.22.30 AM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here is a log entry from the ICM node in the backend confirming that the certificate subject for the said technical identifier was received.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.25.15 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304322i83D7F14962C8E3AE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.25.15 PM.png" alt="Screenshot 2025-08-19 at 1.25.15 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, based on the rule set in the CERTRULE, you can verify that the subject. from the certificate resolves to the backend user (uname) called 'SUITEUSER'.&amp;nbsp; This concludes one end-to-end cycle.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.29.31 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304323iD9A57063D18C166F/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.29.31 PM.png" alt="Screenshot 2025-08-19 at 1.29.31 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId--859910632"&gt;4.2.&amp;nbsp;HTTP Receiver Adapter – Technical user propagation setup&lt;/H4&gt;&lt;P&gt;After exploring the OData V2 adapter, let’s look at the &lt;STRONG&gt;HTTP Receiver Adapter &lt;/STRONG&gt;scenario, which is used when connecting to custom REST APIs / generically available HTTP endpoints in the backend system.&lt;/P&gt;&lt;P&gt;The good news here is that this scenario also works in a manner very similar to the one described above. Here is a snippet of the &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/http-receiver-adapter" target="_self" rel="noopener noreferrer"&gt;documentation&lt;/A&gt; page that describes the support for technical user propagation.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Screenshot 2025-08-23 at 8.52.56 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304326i36E7124144E4D302/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-23 at 8.52.56 PM.png" alt="Screenshot 2025-08-23 at 8.52.56 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's extend our sample IFlow with a sequence of steps that leverages this functionality.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.01.18 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304327iF9ADF05694461FFB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.01.18 PM.png" alt="Screenshot 2025-08-19 at 1.01.18 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;I've marked the HTTP Receiver Adapter attached to a new 'Request-Reply' step. The adapter’s property sheet closely resembles that of the OData V2 Adapter, with the authentication type configured as &lt;EM&gt;Principal Propagation.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-23 at 6.12.57 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304328i42F3E99C81A4FDF7/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-23 at 6.12.57 PM.png" alt="Screenshot 2025-08-23 at 6.12.57 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let’s trigger the IFlow using a curl command. Unlike the OData V2 Adapter example, where we used a certificate, this time we’ll authenticate with the client_credentials grant type by providing a Bearer token.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;curl --header 'Authorization: Bearer eyJhbGciO&amp;lt;truncated&amp;gt;' https://&amp;lt;cpi-instance&amp;gt;.cfapps.&amp;lt;landscape&amp;gt;.hana.ondemand.com/http/&amp;lt;pathsuffix&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;You should see a successful execution, and the Cloud Connector and backend logs should align with the explanation in the OData V2 Adapter scenario.&amp;nbsp;&lt;/P&gt;&lt;H4 id="toc-hId--1056424137"&gt;4.3. SOAP Receiver Adapter – Technical user propagation setup&lt;/H4&gt;&lt;P&gt;Next, let’s set up the same scenario for the SOAP Receiver Adapter. Unlike the HTTP and OData V2 adapters, which worked almost seamlessly by simply enabling ‘&lt;EM&gt;principal propagation&lt;/EM&gt;,’ the SOAP approach requires a bit more configuration effort.&amp;nbsp; (Note that this may change in one of our future releases.)&lt;/P&gt;&lt;P&gt;Here is my updated sample IFlow with a local integration process step added to handle the SOAP Adapter as well.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.09.28 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304411i88201994F95EE1CC/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-19 at 1.09.28 PM.png" alt="Screenshot 2025-08-19 at 1.09.28 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The first step in my Local Integration Process is a Content Modifier that creates the 'SAP-Connectivity-Technical-Authentication' header and assigns it the value of the incoming 'Authorization' header.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 12.52.31 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304419i9CA9586B4C92F2C2/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 12.52.31 PM.png" alt="Screenshot 2025-08-24 at 12.52.31 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Here is a simple illustration of my SOAP Adapter that invokes a SOAP Service from my S/4HANA system. Carefully note that I have set the 'Authentication' to &lt;STRONG&gt;&lt;EM&gt;none&lt;/EM&gt;&lt;/STRONG&gt; (instead of &lt;EM&gt;principal propagation&lt;/EM&gt;).&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 12.53.06 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304420iD9AF3171E61BF7A3/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 12.53.06 PM.png" alt="Screenshot 2025-08-24 at 12.53.06 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Also, do not forget to include the 'Authorization' as an allowed header within the Runtime Configuration section block, as we are reading this attribute. You may need to tailor the Namespace Mapping based on your backend's WSDL settings.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-24 at 12.53.25 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304421iB1C1502108C1FB69/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Screenshot 2025-08-24 at 12.53.25 PM.png" alt="Screenshot 2025-08-24 at 12.53.25 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Let's go ahead and issue a POST call to our Integration Flow to invoke the&amp;nbsp;'CreditManagementAccountByIDQuery' Operation from the SOAP Service.&lt;/P&gt;&lt;P&gt;Here is the (request.xml) XML payload I've used:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;?xml version="1.0" encoding="UTF-8"?&amp;gt;
&amp;lt;glob:CreditManagementAccountByIDQuery xmlns:glob="http://sap.com/xi/SAPGlobal/Global"&amp;gt;
  &amp;lt;Selection&amp;gt;
    &amp;lt;DebtorPartyInternalID&amp;gt;MDG_CU01&amp;lt;/DebtorPartyInternalID&amp;gt;
    &amp;lt;CreditsegmentInternalID&amp;gt;0002&amp;lt;/CreditsegmentInternalID&amp;gt;
  &amp;lt;/Selection&amp;gt;
  &amp;lt;LanguageCode&amp;gt;en&amp;lt;/LanguageCode&amp;gt;
&amp;lt;/glob:CreditManagementAccountByIDQuery&amp;gt;&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Here are my CURL commands:&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;echo "eyJhbGciOiJSUzI1NiIsImprd...full_token_here...JJQog" &amp;gt; token.txt
TOKEN=$(cat token.txt)
curl 'https://&amp;lt;cpi-instance&amp;gt;.cfapps.&amp;lt;landscape&amp;gt;.hana.ondemand.com/http/&amp;lt;pathsuffix&amp;gt;' \
  --header 'target: soap' \
  --header 'Content-Type: text/xml; charset=utf-8' \
  --header "Authorization: Bearer $TOKEN" \
  --data .xml&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This concludes our testing of invoking the SOAP Adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;&lt;STRONG&gt;A Note on Transparency in Technical User Propagation&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;In the three scenarios we laid out above (OData V2, SOAP, and HTTP), the &lt;STRONG&gt;client or sender system&lt;/STRONG&gt; was responsible for presenting the &lt;EM&gt;technical client ID&lt;/EM&gt; that ultimately got propagated downstream. While this approach works well, there are situations where it may be desirable to keep this entire process &lt;STRONG&gt;transparent to the end user&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;In such cases, the integration developer can insert a &lt;STRONG&gt;Request Reply step&lt;/STRONG&gt; in the iFlow to first call the &lt;STRONG&gt;OAuth token endpoint&lt;/STRONG&gt; using a different set of credentials — not necessarily exposed or known to the consuming client. The resulting access token can then be injected into the SAP-Connectivity-Technical-Authentication header, ensuring that the technical user propagation still takes place, but without burdening the client with the responsibility of handling technical credentials directly. Here is a sample Groovy script snippet that can be placed after retrieving the access token&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;
import groovy.json.JsonSlurper;

def Message processData(Message message) {
    // Get the response body as a string
    def body = message.getBody(String);
    
    // Parse the JSON response
    def jsonSlurper = new JsonSlurper();
    def jsonResponse = jsonSlurper.parseText(body);
    
    // Extract the access token (assuming the token is in a field called "access_token")
    def accessToken = jsonResponse.access_token;
    def bearerToken = "Bearer "+ accessToken;
    
    // Set the access token as a message header for technical authentication
    message.setHeader("SAP-Connectivity-Technical-Authentication", bearerToken);
    
    return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This pattern is particularly useful when you want to &lt;STRONG&gt;decouple client-facing authentication&lt;/STRONG&gt; from &lt;STRONG&gt;backend technical connectivity&lt;/STRONG&gt;, giving you more flexibility and control over how identities are managed across the landscape.&lt;/P&gt;&lt;H2 id="toc-hId--666131628"&gt;5. Mapping technical users to ABAP users in the backend&lt;/H2&gt;&lt;P&gt;Now we will connect the dots between the &lt;U&gt;technical user&lt;/U&gt;&amp;nbsp;and an ABAP &lt;U&gt;backend user&lt;/U&gt;. This ensures that when Cloud Integration presents the technical identity, the backend system knows exactly which user account to log on with.&lt;/P&gt;&lt;P&gt;We’ll achieve this by generating a &lt;STRONG&gt;sample X.509 certificate&lt;/STRONG&gt; that represents the technical client identifier, and then explicitly mapping it to an ABAP user via transaction &lt;STRONG&gt;CERTRULE&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;Here is a step-by-step instruction to perform this mapping.&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;&lt;H4 id="toc-hId--1449451147"&gt;Step No.&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;H4 id="toc-hId--1645964652"&gt;Description&lt;/H4&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;H4 id="toc-hId--1842478157"&gt;Screenshot&lt;/H4&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;1.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;Get back to the SAP Cloud Connector -&amp;gt; Configuration -&amp;gt; On Premise setting page and click on the button at the bottom of the screen labelled '&lt;U&gt;Generate a Sample Certificate&lt;/U&gt;'.&amp;nbsp;&lt;/P&gt;&lt;P&gt;We need this dummy short-lived X.509 certificate to perform the mapping step.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Notice that I'm demonstrating setting the ${user_type} to 'Technical' as indicated in point 2.2&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-23 at 5.08.51 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/304319iC931BD17A01531E7/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-23 at 5.08.51 PM.png" alt="Screenshot 2025-08-23 at 5.08.51 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;2.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;Paste the client_id retrieved from step 3.2 / 3.4 in the CN field and click '&lt;U&gt;Generate&lt;/U&gt;'. This will export a certificate file to your local hard drive.&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.30.55 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303208i2D56072ABE86AFBD/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.30.55 PM.png" alt="Screenshot 2025-08-19 at 1.30.55 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;3.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;In your SAP Logon, head to txn&amp;nbsp; CERTRULE -&amp;gt; &lt;U&gt;Explicit Mappings&lt;/U&gt; and import this short-lived certificate from the previous step.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;Refer back to step 1.6 for an explanation of why this step is needed.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.32.51 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303209i03BD2C9FCF4FA090/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.32.51 PM.png" alt="Screenshot 2025-08-19 at 1.32.51 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;4.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;Once the certificate is loaded, click on '&lt;U&gt;Explicit Mapping&lt;/U&gt;' to map the certificate subject to an actual ABAP user / technical alias.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.33.15 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303210i05EDB204B19BABD9/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.33.15 PM.png" alt="Screenshot 2025-08-19 at 1.33.15 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;5.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;&lt;P&gt;In my screenshot, I'll be mapping the certificate subject to a 'dialog' user. Instead, you can also choose a technical alias.&lt;/P&gt;&lt;P&gt;Your backend service call will be executed in this user's context.&amp;nbsp;&lt;/P&gt;&lt;P&gt;In ABAP terminology, this corresponds to the &lt;U&gt;sy-uname&lt;/U&gt; attribute.&lt;/P&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.33.48 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303211iE1797E7CDAB1C2D3/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.33.48 PM.png" alt="Screenshot 2025-08-19 at 1.33.48 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="10.239885427855354%"&gt;6.&lt;/TD&gt;&lt;TD width="49.12280701754387%"&gt;If you managed to get this far, you should see an entry created in the mapping table&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":grinning_face:"&gt;😀&lt;/span&gt;&lt;/TD&gt;&lt;TD width="40.63730755460078%"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Screenshot 2025-08-19 at 1.34.36 PM.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/303212iD09E15A2FEE3EA01/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Screenshot 2025-08-19 at 1.34.36 PM.png" alt="Screenshot 2025-08-19 at 1.34.36 PM.png" /&gt;&lt;/span&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId--1452185648"&gt;6. &lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt; A note of caution on the Cloud Connector "system certificate" default&lt;/H2&gt;&lt;P&gt;Let’s take a moment to discuss a nuanced behavior we briefly touched on above in &lt;STRONG&gt;point 2.3&lt;/STRONG&gt;. In the Cloud Connector configuration, there is an option called &lt;EM&gt;“System Certificate for Logon”&lt;/EM&gt;. When this option is enabled, the Cloud Connector will use its own system certificate to authenticate in cases where &lt;STRONG&gt;no principal information&lt;/STRONG&gt; is available in the request.&lt;/P&gt;&lt;P&gt;While this might sound convenient, it introduces an important caveat: a &lt;STRONG&gt;fixed technical user&lt;/STRONG&gt; will always be propagated — even in scenarios where your design expected to rely on true end-user principal propagation. Instead of failing due to missing identity information, the Cloud Connector silently falls back to the system certificate and logs on with the mapped technical user. Another common case that results in “no principal information” is when the &lt;STRONG&gt;authentication&lt;/STRONG&gt; section of the Cloud Integration adapter is set to &lt;EM&gt;None&lt;/EM&gt; — either deliberately for testing, or accidentally left that way during configuration.&lt;/P&gt;&lt;P&gt;This can be problematic in security-sensitive landscapes, because it may unintentionally bypass your intended identity propagation setup. It’s therefore crucial to carefully review whether this setting should be &lt;STRONG&gt;enabled&lt;/STRONG&gt; in your environment and confirm that it aligns with your authentication and compliance requirements.&lt;/P&gt;&lt;H2 id="toc-hId--1648699153"&gt;7. Final thoughts&lt;/H2&gt;&lt;P&gt;As we’ve seen across the &lt;STRONG&gt;OData V2&lt;/STRONG&gt;, &lt;STRONG&gt;SOAP&lt;/STRONG&gt;, and &lt;STRONG&gt;HTTP&lt;/STRONG&gt; receiver adapters, SAP Integration Suite offers a flexible yet secure way to propagate a &lt;EM&gt;technical user&lt;/EM&gt; without falling back on basic authentication. By leveraging the &lt;STRONG&gt;short-lived X.509 certificates&lt;/STRONG&gt; issued through Cloud Connector and carefully configuring the adapter authentication settings, customers can ensure consistent, policy-compliant access to their on-premise systems.&lt;/P&gt;&lt;P&gt;This approach not only modernizes the classic “certificate-to-user mapping” patterns familiar from the Neo environment but also aligns with Cloud Foundry’s service key–based model, giving you the best of both worlds: the security of principal propagation and the practicality of fixed user connectivity where required. With these patterns in hand, you can design integrations that are both &lt;STRONG&gt;secure&lt;/STRONG&gt; and &lt;STRONG&gt;operationally simple&lt;/STRONG&gt;, while avoiding common pitfalls such as unintended fallbacks or misconfigured authentication.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;In the next installment of this series, we’ll extend the same concept to &lt;STRONG&gt;API Management&lt;/STRONG&gt;, focusing on how technical user propagation works through the On-Premise Proxy component — so stay tuned if you’re interested in applying these patterns beyond Cloud Integration.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/unravelling-the-technical-user-propagation-scenarios-in-sap-integration/ba-p/14182016"/>
    <published>2025-08-25T05:55:48.613000+02:00</published>
  </entry>
</feed>
