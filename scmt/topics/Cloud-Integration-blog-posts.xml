<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/topics/Cloud-Integration-blog-posts.xml</id>
  <title>SAP Community - Cloud Integration</title>
  <updated>2025-08-11T23:00:07.328391+00:00</updated>
  <link href="https://community.sap.com/t5/c-khhcw49343/Cloud Integration/pd-p/67837800100800006801" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>Cloud Integration blog posts in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/intelligent-orchestration-in-iflows-business-aware-routing-with-sap-btp-s/ba-p/14162148</id>
    <title>Intelligent Orchestration in Iflows: Business-Aware Routing with SAP BTP’s AI Services</title>
    <updated>2025-07-25T08:30:59.592000+02:00</updated>
    <author>
      <name>arunmaarirajha_kv</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/2033343</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Reimagining flow decisions in Integration Suite&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For the longest time, SAP’s integration platforms — from &lt;STRONG&gt;SAP PI/PO&lt;/STRONG&gt; to &lt;STRONG&gt;Integration Suite&lt;/STRONG&gt; — have empowered developers to model decisions in integration flows (Iflows) using deterministic, rule-based logic.&amp;nbsp;These decisions often control how an Iflow behaves: which mapping logic to apply, which receiver system to call, or which transformation branch to follow.&lt;BR /&gt;The common approaches include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Static routing&lt;/STRONG&gt; via Routers based on payload elements or fields&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Dynamic configurations&lt;/STRONG&gt;, such as externalized parameters passed at runtime&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Lookups to external systems&lt;/STRONG&gt; (e.g., JDBC or SOAP) to evaluate conditions at runtime — achieved in Integration Suite via patterns like &lt;EM&gt;Request-Reply&lt;/EM&gt; or &lt;EM&gt;Content Enricher&lt;/EM&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;These mechanisms work — but they come with growing challenges:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Rules get &lt;STRONG&gt;combinatorially complex&lt;/STRONG&gt; with more conditions&lt;/LI&gt;&lt;LI&gt;Lookup tables become &lt;STRONG&gt;burdensome to maintain&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Decisions become &lt;STRONG&gt;rigid and hard to evolve&lt;/STRONG&gt; over time&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;What if Iflows could use a &lt;STRONG&gt;machine learning model&lt;/STRONG&gt; trained on past outcomes to make decisions — not through rigid logic, but through inferred patterns?&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;BTP AI Services: Letting Iflows Tap into ML-Driven Decisioning&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP’s &lt;STRONG&gt;BTP AI services&lt;/STRONG&gt; offer a comprehensive suite of capabilities for embedding intelligence across applications, extensions, and integrations.&lt;/P&gt;&lt;P&gt;Key components include:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Data Attribute Recommendation (DAR) – a low-code ML service for classification &amp;amp; regression problems&lt;/LI&gt;&lt;LI&gt;AI Core – for custom ML model lifecycle management&lt;/LI&gt;&lt;LI&gt;AI Launchpad – for model deployment and lifecycle governance&lt;/LI&gt;&lt;LI&gt;Document Information Extraction (DOX) – for intelligent document processing&lt;/LI&gt;&lt;LI&gt;Personalized recommendations&amp;nbsp;– &lt;SPAN&gt;to deliver tailored content and product suggestions to users&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Translation Hub&amp;nbsp;–&amp;nbsp;&lt;SPAN&gt;enables you to efficiently translate content into multiple languages&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Among these, DAR is particularly compelling for Iflow-based routing logic. It allows developers to train a classification model — and call it at runtime — without deep ML or data science expertise.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;A Concrete Example: Intelligent Sales Order fulfilment routing&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let us walk through a realistic sales order routing scenario — where &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; collaborates with &lt;STRONG&gt;BTP’s Data Attribute Recommendation (DAR)&lt;/STRONG&gt; to make machine learning-driven decisions, rather than relying on static rules or lookup tables.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Business Scenario:&amp;nbsp;&lt;/STRONG&gt;When a new Sales Order (SO) is received in SAP S/4HANA, an Iflow must determine the appropriate fulfilment path — such as:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Domestic delivery team&lt;/LI&gt;&lt;LI&gt;Export logistics provider&lt;/LI&gt;&lt;LI&gt;Specialized handling team (e.g., for hazardous or fragile goods)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Traditionally, this might involve:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Hardcoded logic like:&lt;BR /&gt;IF LAND1 = 'DE' AND MATKL = 'X' THEN ROUTE = 'Domestic'&lt;/LI&gt;&lt;LI&gt;Maintaining large lookup tables&lt;/LI&gt;&lt;LI&gt;Database queries that are difficult to scale or evolve&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;But this approach quickly becomes brittle as the business grows — especially with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;New customer segments&lt;/LI&gt;&lt;LI&gt;Emerging market combinations&lt;/LI&gt;&lt;LI&gt;Expanding SKU diversity&lt;/LI&gt;&lt;LI&gt;Frequent business exceptions&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;ML-Driven Approach with DAR&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Instead of rule-based routing, we use DAR to learn from historical sales orders:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;What fulfillment team handled similar orders in the past?&lt;/LI&gt;&lt;LI&gt;What patterns exist in routing decisions based on order attributes?&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;This lets the Iflow become intelligent — delegating routing logic to an ML model trained on past behaviour.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="Untitled Diagram.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/291270iA095DF619549FEAC/image-size/large?v=v2&amp;amp;px=999" role="button" title="Untitled Diagram.png" alt="Untitled Diagram.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Flow: From Sales Order to fulfilment&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;1. Incoming Sales Order Fields (Features)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Iflow extracts relevant attributes from the sales order.&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Field&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;VKORG&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales organization&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;VTWEG&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Distribution channel&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SPART&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Division&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;KUNNR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Customer number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;LAND1&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Country of destination&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MATNR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material number&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;MATKL&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Material group&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;AUART&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Sales document type (e.g., OR, RE)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;NETWR&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Net value of the order&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;WAERK&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Currency&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;2. Label to Predict&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The ML model (via DAR) predicts the fulfillment team:&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Label&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Meaning&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;DOMESTIC&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Domestic delivery team&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;EXPORT&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Export logistics team&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;SPECIAL_PRODUCTS&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Specialized handling (e.g., fragile items)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;ESCALATE&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;Manual assignment required (e.g., exception)&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;3. Runtime Intelligence in the Iflow&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Iflow receives the incoming Sales Order from SAP S/4HANA&lt;/LI&gt;&lt;LI&gt;It extracts key features (as above)&lt;/LI&gt;&lt;LI&gt;Sends them via API to DAR&lt;/LI&gt;&lt;LI&gt;DAR returns a prediction (e.g., EXPORT)&lt;/LI&gt;&lt;LI&gt;Iflow routes the order to the correct 3PL provider or internal team&lt;/LI&gt;&lt;LI&gt;Decision and outcome are logged for traceability&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;STRONG&gt;4. Training the Model: From Logs to Intelligence&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To train DAR:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Historical sales orders are extracted from SAP S/4HANA&lt;/LI&gt;&lt;LI&gt;Actual fulfilment team assignments (from workflow logs or processing systems) are used as ground truth&lt;/LI&gt;&lt;LI&gt;A dataset is formed with order features (inputs) and assigned team (label)&lt;/LI&gt;&lt;LI&gt;No need for manual feature engineering — DAR handles sampling, validation, and training automatically&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;5. Closing the Loop: Human-in-the-Loop &amp;amp; Retraining&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To ensure explainability and continuous learning:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;All DAR predictions + actual outcomes are logged in HANA Cloud&lt;/LI&gt;&lt;LI&gt;A CAP application provides a UI for humans to review and validate predictions&lt;/LI&gt;&lt;LI&gt;Only validated cases are used for periodic retraining, ensuring the model evolves with the business&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;FAQs – &lt;SPAN&gt;Key Questions and Considerations&lt;BR /&gt;&lt;BR /&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;1.&amp;nbsp;When does this truly add value?&lt;BR /&gt;When routing errors or sub-optimal routing could lead to real business impact — e.g., SLA violations, shipment delays, customer churn — not just minor inconvenience. Conversely, when ML helps route to the most suitable receiver — say Team B instead of A — it can improve fulfillment speed, reduce costs, or ensure better customer handling, translating into real business advantage.&lt;/P&gt;&lt;P&gt;2. How complex is adopting DAR in terms of learning curve?&lt;BR /&gt;DAR is low-code and API-driven plug and play service — you don’t need to tune algorithms or handle model lifecycle related heavy lifting. Even integration developers can use it by defining schemas and calling APIs for training, deploying, inferencing and re-training.&lt;/P&gt;&lt;P&gt;3. Why is model re-training important?&lt;BR /&gt;Because business context evolves. As your product mix, customer base, or regional distribution changes, the patterns shift (called data drift or concept drift). Retraining ensures your model stays accurate and doesn’t stale out.&lt;/P&gt;&lt;P&gt;4. Isn’t GenAI the next big thing? Does ML still matter?&lt;BR /&gt;Absolutely. GenAI excels at natural language tasks — like document generation or summarization. But for structured data decisions like classification or regression, ML models like DAR are more reliable, interpretable, and consistent. They are trained on enterprise-labeled history, not general-purpose text.&lt;/P&gt;&lt;P&gt;5. Isn’t this just another API call, which we do all the time to enrich our payload?&lt;BR /&gt;Technically yes — but functionally, it’s transformational. It lets you embed intelligence directly into your Iflow’s runtime logic. It’s not just wiring systems — it’s wiring business decisions.&lt;/P&gt;&lt;P&gt;6. Isn’t putting ML in middleware against “separation of concerns”, particularly when it is supposed to act as a pass-through layer?&lt;BR /&gt;&lt;SPAN&gt;No. The &lt;/SPAN&gt;ML model and its lifecycle&lt;SPAN&gt; are maintained outside Integration Suite (e.g., in DAR or AI Core). The Iflow just consumes the result — maintaining clean separation but gaining powerful synergy.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Final Thoughts&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Infusing AI into Integration Suite isn’t about over-engineering — it’s about &lt;STRONG&gt;elevating Integration Suite’s behaviour from rule-based mechanics to context-aware intelligence&lt;/STRONG&gt;.&amp;nbsp;With BTP AI services like DAR, integration developers can go beyond static routing and hardcoded decisions. They can orchestrate intelligent flows that learn from business history — and adapt as the world changes.&amp;nbsp;As integration professionals, we’re not just moving data. We’re moving contextual, intelligent decisions.&lt;/P&gt;&lt;P&gt;Here are some essential links for you to get started and apply AI in meeting your business requirements:&lt;BR /&gt;&lt;A href="https://discovery-center.cloud.sap/serviceCatalog/data-attribute-recommendation?region=all" target="_blank" rel="noopener nofollow noreferrer"&gt;Explore SAP Data Attribute Recommendation service&lt;/A&gt;&lt;BR /&gt;&lt;A href="https://developers.sap.com/tutorial-navigator.html?tag=software-product%3Atechnology-platform%2Fsap-ai-services%2Fdata-attribute-recommendation" target="_blank" rel="noopener noreferrer"&gt;SAP Tutorials: Implement your ML service&lt;/A&gt;&lt;/P&gt;&lt;P&gt;This blog focused solely on intelligent routing within iFlows. But the potential of infusing AI into Integration Suite goes far beyond — limited only by the developer’s creativity. With the upcoming &lt;A href="https://roadmaps.sap.com/board?q=ai%2520adapter&amp;amp;range=CURRENT-LAST#;INNO=6DF54C88F6211EEFBE81C4731A722137" target="_self" rel="noopener noreferrer"&gt;AI Adapter (planned for Q3)&lt;/A&gt;, things are bound to get even more exciting.&lt;/P&gt;&lt;P&gt;&lt;EM&gt;“Stay hungry, stay foolish.”&lt;/EM&gt; — Steve Jobs&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Perhaps that same spirit can guide us as we collectively navigate the future of intelligent integration.&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/intelligent-orchestration-in-iflows-business-aware-routing-with-sap-btp-s/ba-p/14162148"/>
    <published>2025-07-25T08:30:59.592000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-master-data-integration-mdi-meets-sap-advanced-event-mesh-aem/ba-p/14166195</id>
    <title>SAP Master Data Integration (MDI) meets SAP Advanced Event Mesh (AEM)</title>
    <updated>2025-07-31T09:21:15.559000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In the ever-growing landscape of SAP BTP and modular cloud architecture, seamless integration between services is more important than ever. One powerful combination that's gaining traction is &lt;STRONG&gt;SAP Master Data Integration (MDI)&lt;/STRONG&gt; working in tandem with &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt;. The foundation for MDI is the One Domain Model (ODM) – a standardized data model. In this blog post, we’ll walk you through the setup to connect MDI with AEM and enable &lt;STRONG&gt;real-time event-driven integration for your master data.&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s dive into what makes this integration so valuable — and how you can get started.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_with_meridians:"&gt;🌐&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Why Combine MDI and AEM?&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;SAP MDI&lt;/STRONG&gt; ensures consistent and harmonized master data across SAP applications and services, based on Data Replication Framework Technology (DRF).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP ODM &lt;/STRONG&gt;It is a standardized domain model to unify and harmonize business objects like Customer, Product, Supplier, etc.) across SAP’s cloud solutions&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;SAP AEM&lt;/STRONG&gt; provides a high-performance event broker that allows for reliable and scalable event distribution across systems.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Bringing these together enables:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Configure only&lt;/LI&gt;&lt;LI&gt;Real-time data propagation of master data via events&lt;/LI&gt;&lt;LI&gt;Decoupled and scalable architecture&lt;/LI&gt;&lt;LI&gt;Simplified integration for consuming systems in SAP but also NON-SAP applications&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;MDI Content: &lt;SPAN&gt;&lt;A href="https://api.sap.com/package/sap-mdi-masterDataIntegration/rest" target="_blank" rel="noopener noreferrer"&gt;https://api.sap.com/package/sap-mdi-masterDataIntegration/rest&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️&lt;/STRONG&gt;&lt;STRONG&gt; Prerequisites&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Before we get into the setup, make sure you have the following:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;An instance of &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt; created and available, I do not show this in this blog&lt;/LI&gt;&lt;LI&gt;An instance of &lt;STRONG&gt;SAP Master Data Integration (MDI)&lt;/STRONG&gt;, which is one focus of this blog&lt;/LI&gt;&lt;LI&gt;An instance of &lt;STRONG&gt;SAP Integration Suite, Cloud Integration,&lt;/STRONG&gt; which is one focus of this blog&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Connectivity setup&lt;/STRONG&gt; between MDI and the involved SAP components, which is one focus of this blog&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Setup Steps&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Create Master Data Integration (MDI) service&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Assign &lt;SPAN&gt;s4hana-onpremise&lt;/SPAN&gt;&amp;nbsp;service plan. &lt;SPAN&gt;For our setup we are using a S/4HANA OnPremise system, in case you have a S/4HANA Cloud system choose another service Plan &lt;/SPAN&gt;Create an Instance&lt;SPAN&gt; for Master Data Integration and create a ServiceKey for connection setup,&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MDI_Instance.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293611iCBC714EA4E991706/image-size/large?v=v2&amp;amp;px=999" role="button" title="MDI_Instance.png" alt="MDI_Instance.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Create Distribution Model &lt;/STRONG&gt;&lt;SPAN&gt;&lt;A href="https://help.sap.com/docs/master-data-integration/sap-business-data-orchestration-8ce78b673ef04cc1bcfeb01c93ef7885/manage-distribution-models" target="_blank" rel="noopener noreferrer"&gt;(sap.help.com)&lt;/A&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Select the Provide and Consumer fro your scenario and the ODM object you would like to replicate, for this blog we have used the latest version of CostCenter. Save nad active the Distribution Model.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="DistributionMOdelDetails.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293612i36CA00FEF7E9D569/image-size/large?v=v2&amp;amp;px=999" role="button" title="DistributionMOdelDetails.png" alt="DistributionMOdelDetails.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The MDI setup has been completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Enable your SAP Backend for MDI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Establishing oAuth Profile for Outbound Connection &lt;/STRONG&gt;to SAP Master Data Integration via SAP transaction oa2c_config&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Creating Destination to MDI &amp;nbsp;&lt;/STRONG&gt;via SAP transaction SM59 while using the oAuth profile&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Configuring to Destination&lt;/STRONG&gt; for Connecting to SAP Master Data Integration via SAP transaction S_SAL_71000052&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Defining BGRFC Destinations&lt;/STRONG&gt; via SAP transaction sbgrfcconf&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Extracting AIF Content&lt;/STRONG&gt; via SAP transcation /AIF/CONTENT_EXTRACT&lt;/P&gt;&lt;P&gt;·&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;STRONG&gt;Publishing ODATA V4 Service Groups&lt;/STRONG&gt; via /IWFND/V4_ADMIN&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AIF_Monitor.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293614i56CABFF8C42227E7/image-size/large?v=v2&amp;amp;px=999" role="button" title="AIF_Monitor.png" alt="AIF_Monitor.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The SAP S/4HANA setup and underlying connection setup between SAP and MDI has been completed. The screenshot above shows the AIF Monitor to the master data exchange between both components.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;3. Enable your SAP Integration Suite&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For the setup we will combine two adapters of the Integration Suite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="IFLOW.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293622i19C932FB8D849C03/image-size/large?v=v2&amp;amp;px=999" role="button" title="IFLOW.png" alt="IFLOW.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To read the master data from MDI we have used&amp;nbsp;S&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/sap-master-data-integration-receiver-adapter?locale=en-US" target="_self" rel="noopener noreferrer"&gt;AP Master Data Integration Receiver Adapter&lt;/A&gt; which will be trigged via scheduler.&amp;nbsp;&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="MDI Adapter.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293625iDBFFDC5507FDB6B5/image-size/large?v=v2&amp;amp;px=999" role="button" title="MDI Adapter.png" alt="MDI Adapter.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;To provide the master data event to SAP AEM we have use the SAP AEM adapter and connected it to a queue. Another valid approach could be to throw a topic.&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AEMAdapter.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293626iE377F2D8C83288D6/image-size/large?v=v2&amp;amp;px=999" role="button" title="AEMAdapter.png" alt="AEMAdapter.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;The Cloud Integration setup has been completed.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;P&gt;&lt;STRONG&gt;4. Test the End-to-End Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Create or update a master data record (e.g., Cost Center) in the source system connected to MDI ( e.g. transaction KS02)&lt;/LI&gt;&lt;LI&gt;Cost Center should be available in MDI (check e.g. in CALM)&lt;/LI&gt;&lt;LI&gt;MDI publishes the dataset to the Integration Suite&lt;/LI&gt;&lt;LI&gt;AEM broker receives in the defined queue and processes the master data event according to the subscription setup&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;Check logs or dashboards to confirm message delivery.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For this blog I simply checked the queue insights view of my used broker and the SAP AEM TryMe feature. The master data event has been received and is ready for distribution/subscription.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="QueueInsights.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293627iD19225390DB37AC9/image-size/large?v=v2&amp;amp;px=999" role="button" title="QueueInsights.png" alt="QueueInsights.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bildschirmfoto 2025-07-30 um 1.26.37 PM.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293897i82CAC544D7988F1E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bildschirmfoto 2025-07-30 um 1.26.37 PM.png" alt="Bildschirmfoto 2025-07-30 um 1.26.37 PM.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Can MDI Directly Publish to AEM?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP Master Data Integration currently emits events not directly to &lt;STRONG&gt;SAP Advanced Event Mesh (AEM)&lt;/STRONG&gt;. MDI uses &lt;STRONG&gt;could use Integration Suite, Cloud Integration&lt;/STRONG&gt; through BTP’s managed messaging infrastructure.&lt;/P&gt;&lt;P&gt;As of mid-2025, there’s:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;No native support&lt;/STRONG&gt; to configure MDI to push events directly to AEM&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;No configuration options in the MDI UI to define AEM as the event target&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":white_heavy_check_mark:"&gt;✅&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrating &lt;STRONG&gt;SAP Master Data Integration&lt;/STRONG&gt; with &lt;STRONG&gt;SAP Advanced Event Mesh&lt;/STRONG&gt; is a powerful way to enable real-time, event-driven architectures across your SAP landscape. It decouples systems, ensures scalability, and improves responsiveness in your integrations.&lt;/P&gt;&lt;P&gt;Whether you're syncing business partner data across applications or building modular apps that respond to master data changes, this combo of MDI + AEM provides the reliability and flexibility you need.&lt;/P&gt;&lt;P&gt;Be aware that we are currently preparing some more technical blogs explaing the setup of DRF+AIF and DRF+RAP without using MDI&lt;/P&gt;&lt;P&gt;Have you tried integrating MDI with AEM? Share your use cases and challenges in the comments!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-master-data-integration-mdi-meets-sap-advanced-event-mesh-aem/ba-p/14166195"/>
    <published>2025-07-31T09:21:15.559000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/decoupling-strategies-for-http-based-integrations-in-sap-cloud-integration/ba-p/14167141</id>
    <title>Decoupling Strategies for HTTP-Based Integrations in SAP Cloud Integration</title>
    <updated>2025-07-31T10:35:42.233000+02:00</updated>
    <author>
      <name>jirifridrich</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/146600</uri>
    </author>
    <content>&lt;P&gt;In many integration scenarios, your sender communicates over HTTP and expects a synchronous response within a strict timeout window. Meanwhile, your integration flow may involve asynchronous processing that takes significantly longer.&lt;/P&gt;&lt;P&gt;Recently our integration partner expressed a concern that their timeout cannot exceed 3 seconds, but processing at our side took over a minute. In such case you have a few options how to decouple the integration flow, respond to your sender and continue processing the request:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;JMS queue&lt;/LI&gt;&lt;LI&gt;Event-based platform&lt;/LI&gt;&lt;LI&gt;SOAP adapter&lt;/LI&gt;&lt;LI&gt;DataStore&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1865188766"&gt;JMS queue&lt;/H3&gt;&lt;P&gt;Recommended and most common option&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Use case:&lt;/STRONG&gt; Ideal when you want to immediately acknowledge the HTTP request and process it asynchronously&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;How it helps:&lt;/STRONG&gt; You can push the message to a JMS queue quickly, send an HTTP 200/202 response back to the sender within their timeout, and continue processing in a separate flow that consumes from the queue&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt; Reliable, durable, retry mechanisms, and native to CPI&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Limitation&lt;/STRONG&gt;: Certain number of JMS queues. Especially if you have AS2 integration partners, you can quickly run out of your available JMS queues&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1668675261"&gt;Event-Based Platform&lt;/H3&gt;&lt;P&gt;Stand-alone software products like&amp;nbsp;SAP Event Mesh or Kafka&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Use case:&lt;/STRONG&gt; When you're operating in an event-driven architecture and want to loosely couple components&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;How it helps:&lt;/STRONG&gt; You can publish an event to a broker, respond quickly to the sender, and let a separate consumer handle the processing&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt; Scales well, decouples systems further, fits microservice/event-driven design&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Limitation:&lt;/STRONG&gt;&amp;nbsp;May be a little of overkill for a single-use scenario, complex setup and requires integration with Event Mesh or external brokers&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1472161756"&gt;SOAP adapter&lt;/H3&gt;&lt;P&gt;You create a small helper iflow with HTTP Sender, where you just provide answer to the Sender and call your processing iflow via SOAP adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_1-1753883237967.png" style="width: 829px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294074i94BF7950D4F8074F/image-dimensions/829x423?v=v2" width="829" height="423" role="button" title="jirifridrich_1-1753883237967.png" alt="jirifridrich_1-1753883237967.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This approach requires modifying the sender configuration of your processing iFlow to accept SOAP requests. You’ll also need to configure the SOAP adapter to allow asynchronous behavior.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="jirifridrich_0-1753882877185.png" style="width: 769px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294068iD6A7AA08AA77701D/image-dimensions/769x563?v=v2" width="769" height="563" role="button" title="jirifridrich_0-1753882877185.png" alt="jirifridrich_0-1753882877185.png" /&gt;&lt;/span&gt;&lt;BR /&gt;This settings ensures that the caller receives immediate response and processing continues further in more of an asynchronous way.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Use case:&lt;/STRONG&gt; Simple calls, where we can easily transform the HTTP call into a SOAP call. That also requires converting any incoming payload into XML&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;How it helps:&lt;/STRONG&gt; SOAP can work in both sync and async behavior, based on the SOAP Sender adapter setting&amp;nbsp;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt; Quick-win solution for simple calls, doesn't require queues, persistence or dedicated software&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Limitation:&lt;/STRONG&gt; Large payloads in non-XML format will be complicated to handle&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1275648251"&gt;DataStore&lt;/H3&gt;&lt;P&gt;A fall-back option, not really recommended, but still usable if above options are not for you&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Use case&lt;/STRONG&gt;:&amp;nbsp;When you don't have access to JMS queues or Event Mesh, and you're dealing with low-to-medium volume messages that can tolerate delayed, batch-style processing.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;How it helps:&amp;nbsp;&lt;/STRONG&gt;You persist the incoming message to the CPI Datastore, respond immediately to the HTTP sender (e.g., with HTTP 202 Accepted), and then use a separate, scheduled iFlow to retrieve the message from the Datastore and continue processing asynchronously.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Benefits&lt;/STRONG&gt;:&amp;nbsp;Provides basic persistence and decoupling, useful for non-critical or internal scenarios.&lt;BR /&gt;&lt;BR /&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Limitation:&lt;/STRONG&gt;&amp;nbsp;No built-in retry mechanism, requires manual polling logic via scheduler, not suited for high-throughput or time-sensitive processing.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;As we can see, all above solutions have their pros and cons. Ideally, the best option would be to achieve this at the HTTP adapter itself. Nevertheless, HTTP adapter is synchronous by design and there is no configuration which could change this.&lt;/P&gt;&lt;P&gt;We also explored workarounds such as routing the HTTP request through a parallel or sequential multicast before forwarding it to the processing iFlow. However, this approach did not reliably solve the issue.&lt;/P&gt;&lt;P&gt;I will be grateful for any tip or insight on this topic, solving the issue with HTTP adapter or in any other way.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/decoupling-strategies-for-http-based-integrations-in-sap-cloud-integration/ba-p/14167141"/>
    <published>2025-07-31T10:35:42.233000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666</id>
    <title>Event-driven Architecture:  Creating Fullstate Events in SAP S/4HANA for SAP EMIS</title>
    <updated>2025-07-31T12:41:30.451000+02:00</updated>
    <author>
      <name>vanessadayanc</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/126506</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In modern SAP S/4HANA landscapes, Event-driven architecture (EDA) enables decoupled, and scalable integrations across systems. SAP business events are often represented as &lt;STRONG&gt;n&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;otification events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; especially in context master data events, such as&amp;nbsp; business partner creation or changes. Notification events merely signal that something happened (e.g., "Business Partner Created"), where as &lt;STRONG&gt;f&lt;/STRONG&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;ull state events&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; deliver the &lt;/SPAN&gt;&lt;I&gt;&lt;SPAN&gt;complete state of business object &lt;/SPAN&gt;&lt;/I&gt;&lt;SPAN&gt;in real time.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Key Benefits of Full State Events:&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Decoupled Consumers&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: No need for consumers to call back to S/4HANA — all relevant data is included in the event.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Higher Resilience&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Event consumers remain functional even if source systems are temporarily unavailable.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Faster Integration&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Downstream applications and services can act immediatly, without additional round trips.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;Simplified Architectures&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;: Reduces dependency on S/4HANA APIs, lowering system coupling and load.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;Full state events are a powerful enabler for real-time, loosely coupled digital processes — especially in complex, hybrid SAP environments. However, since f&lt;/SPAN&gt;&lt;SPAN&gt;ull state events are not available for many business objects in SAP S/4HANA feature scope, this blog series outlines some approaches to fullfill the requirements of a specific event-driven use case in context of business partner events:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (1/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) – Intro &amp;amp; SAP Standard Business Events&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (2/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - RAP Edition&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Blog Series (3/3): Event-driven Architecture: Creating Fullstate Events in SAP S/4HANA for SAP Event Mesh on Integration Suite (EMIS) - Event-enablement Addon Edition &lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H3 id="toc-hId-1864150953"&gt;&lt;STRONG&gt;&lt;SPAN&gt;Intro&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;Event-driven architecture (EDA) is a software architecture paradigm in which system components interact through the production, detection, and consumption of events. Instead of relying on a synchronous request/response model, EDA uses asynchronous communication, enabling components to react to state changes or occurrences in real time. This approach increas flexibility, scalability, and responsiveness, particularly in complex, distributed systems. In the context of SAP S/4HANA this paradigm shift is reflected in concept of so called “business events”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;An overview of released business events, for example&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;for the SAP S/4HANA Private Cloud, can be found in the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;A class="" href="https://api.sap.com/products/SAPS4HANACloudPrivateEdition/events/events" target="_blank" rel="noreferrer noopener"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP Business Accelorator Hub.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Example: If you want to be notified about the creation or modification of business partner master data, you can use the SAP business event for business partners.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752651776823.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287152i146D264070AF4D32/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752651776823.png" alt="vanessadayanc_0-1752651776823.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Many of SAP &lt;/SPAN&gt;&lt;SPAN class=""&gt;standard&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;events&lt;/SPAN&gt; &lt;SPAN class=""&gt;are&lt;/SPAN&gt;&amp;nbsp;n&lt;SPAN class=""&gt;otification&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;events. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;No&lt;/SPAN&gt;&lt;SPAN class=""&gt;tification events i&lt;/SPAN&gt;&lt;SPAN class=""&gt;nform s&lt;/SPAN&gt;&lt;SPAN class=""&gt;ubscribers about the occurrence of an event, triggering actions or workflows without providing detailed context. They typically&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;SPAN class=""&gt;ontain&lt;/SPAN&gt;&lt;SPAN class=""&gt; minimal informations, like an event ID or type, sufficient for consumers to decide whether further data retrieval is necessary. &lt;/SPAN&gt;&lt;SPAN class=""&gt;In case of our business partner e&lt;/SPAN&gt;&lt;SPAN class=""&gt;xample,&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;only includes&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the &lt;/SPAN&gt;&lt;SPAN class=""&gt;Busin&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;ssPartner&lt;/SPAN&gt;&lt;SPAN class=""&gt; ID. Additionally SAP standard events&lt;/SPAN&gt; &lt;SPAN class=""&gt;can’&lt;/SPAN&gt;&lt;SPAN class=""&gt;t&lt;/SPAN&gt;&lt;SPAN class=""&gt; be &lt;/SPAN&gt;&lt;SPAN class=""&gt;filter&lt;/SPAN&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;SPAN class=""&gt; in SAP S/4HANA&lt;/SPAN&gt;&amp;nbsp;out of the box, meaning s&lt;SPAN class=""&gt;ubscribers receive notifications for all creation or change events of every business partner even if only a dedicated type or group is relevant for them.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;Depending on the specific use case, it is advisable to evaluate whether notification events or full state events are more suitable. A comparison can be found below.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE width="693px"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Criterion&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Notification Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Full State Event&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Definition&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Announces that &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN&gt;something happened&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;with&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; minor &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;context&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Announces&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;something&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;happened&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;and&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;i&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ncludes&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;entire&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;current&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt;&lt;SPAN class=""&gt; an &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;business&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Content&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Minimal &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;info&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;event&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; type, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;affected&lt;/SPAN&gt; &lt;SPAN class=""&gt;entity&lt;/SPAN&gt;&lt;SPAN class=""&gt; (e.g., &lt;/SPAN&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt; &lt;SPAN class=""&gt;business&lt;/SPAN&gt; &lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;u&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pdated)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Typical Example&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Created.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 (&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;partner&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; ID)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BusinessPartner.Updated.v&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;1 &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;payload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;)&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Use Case&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;triggering&lt;/SPAN&gt; &lt;SPAN class=""&gt;workflows&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;alerts&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;initiates&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;or&lt;/SPAN&gt;&lt;SPAN class=""&gt; simple &lt;/SPAN&gt;&lt;SPAN class=""&gt;notifications&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For&lt;/SPAN&gt; &lt;SPAN class=""&gt;replication&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;synchronization&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;or&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;direct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;downstream&lt;/SPAN&gt; &lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Data Dependency&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;fetch&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; additional &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Self-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;contained&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; — &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Coupling&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Tightly coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – consumers&amp;nbsp;de&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;pend&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; on &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; APIs&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Loosely coupled&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt; – events are self-contained&lt;/SPAN&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;no&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;need&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; follow-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;up&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;calls&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Failure Tolerance&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Lower – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; down, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;retrieval&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;may&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; fail&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher –&amp;nbsp;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;consumers&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;act&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;without&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;producer&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;availability&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Payload Size&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Small&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Larger&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Producer Complexity&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;Low – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;only&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;basic&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;metadata&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;required&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;Higher – &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;must&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;serialize&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;include&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;full&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;object&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;state&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="139.858px"&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;Example Payload&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="260.668px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerCreated", "partnerId": "BP12345" }&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="291.562px"&gt;&lt;P&gt;&lt;SPAN&gt;{ "event": "BusinessPartnerUpdated", "partner": { ...full partner data... } &lt;/SPAN&gt;&lt;SPAN&gt;}&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1753097963462.png" style="width: 621px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/289310i2B29551E66A0EE15/image-dimensions/621x210?v=v2" width="621" height="210" role="button" title="vanessadayanc_0-1753097963462.png" alt="vanessadayanc_0-1753097963462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Check: &lt;A href="https://learning.sap.com/learning-journeys/discovering-event-driven-integration-with-sap-integration-suite-advanced-event-mesh/presenting-event-sources_e4194f4f-a986-418d-9c3b-ee71bb4ed101" target="_self" rel="noopener noreferrer"&gt;Presenting Event Sources&lt;/A&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1796720167"&gt;&lt;SPAN&gt;The Use Case&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The use case aims &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;enable&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; automatic validation of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; country-&lt;/SPAN&gt;&lt;SPAN class=""&gt;specific&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;for&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness partners&lt;/SPAN&gt; &lt;SPAN class=""&gt;with&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&lt;SPAN class=""&gt; code 'CH'. Whenever a b&lt;/SPAN&gt;&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number is provided, it&lt;/SPAN&gt; &lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;SPAN class=""&gt;automatically&lt;/SPAN&gt; &lt;SPAN class=""&gt;checked&lt;/SPAN&gt; &lt;SPAN class=""&gt;against&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT IDs service&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;published&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;SPAN class=""&gt;Each&lt;/SPAN&gt; &lt;SPAN class=""&gt;country&lt;/SPAN&gt;&amp;nbsp;maintains&amp;nbsp;&lt;SPAN class=""&gt;its&lt;/SPAN&gt;&lt;SPAN class=""&gt; own &lt;/SPAN&gt;&lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;administration, e.g. Switzerland offers a public SOAP API&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;validating&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; Swiss VAT ID. This&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;automated&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number check&lt;/SPAN&gt;&amp;nbsp;&lt;SPAN class=""&gt;ensures&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;complete&lt;/SPAN&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;management&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;b&lt;SPAN class=""&gt;usiness&lt;/SPAN&gt;&amp;nbsp;p&lt;SPAN class=""&gt;artner&lt;/SPAN&gt; &lt;SPAN class=""&gt;master&lt;/SPAN&gt; &lt;SPAN class=""&gt;data&lt;/SPAN&gt;&lt;SPAN class=""&gt;. In this specific case,&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt; &lt;SPAN class=""&gt;use&lt;/SPAN&gt; &lt;SPAN class=""&gt;of&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; VAT &lt;/SPAN&gt;&lt;SPAN class=""&gt;number&lt;/SPAN&gt; &lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;SPAN class=""&gt; also important&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;audits conducted&lt;/SPAN&gt; &lt;SPAN class=""&gt;by&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt; &lt;SPAN class=""&gt;tax&lt;/SPAN&gt; &lt;SPAN class=""&gt;authorities&lt;/SPAN&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1600206662"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;Expected&amp;nbsp;features/functionalities&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;If a business partner is created or changed and has the country value 'CH' in any of its addresses, the VAT ID with the BPTaxNumberType = 'CH1' should be validated using the public SOAP API. If the VAT validation was successful, no further action is required. However if no VAT is maintained or the validation fails, both an email and a message to a webhook should be generated.&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1403693157"&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Environment&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The event is produced in the SAP S/4HANA Private Cloud. The requirement is implemented using the SAP Integration Suite and its components: SAP Event Mesh Integration Suite (EMIS) and Cloud Integration. A mail adapter and a webhook are used as consumers of the event. Alternatively, instead of SAP EMIS you can also use the SAP Advanced Event Mesh (AEM). &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Schaubild.jpg" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293441i38896C0AEFEA7A73/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Schaubild.jpg" alt="Schaubild.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Simplified presentation of the use case with a full state event in a high level architecture.&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set-Up-Connectivity:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To set up connectivity for SAP S/4HANA Private Cloud and SAP EMIS (or SAP AEM) you can refer to the following blog posts:&lt;/SPAN&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-circle"&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-s-4hana-direct-connectivity-with-event-mesh-in-integration-suite/ba-p/13752534" target="_blank"&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;SAP S/4HANA direct connectivity &lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt;ith Event Mesh in Integration Suite&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/A&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;A class="" href="https://community.sap.com/t5/integration-blog-posts/rap-business-events-with-sap-integration-suite-advanced-event-mesh-and-sap/ba-p/13913393" target="_self"&gt;RAP Business Events with SAP Integration Suite, Advanced Event Mesh and SAP S/4HANA On Premise 2023&lt;/A&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H4 id="toc-hId-1207179652"&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;Variante&lt;/SPAN&gt;&lt;SPAN class=""&gt; 1 &lt;/SPAN&gt;&lt;SPAN class=""&gt;– &lt;/SPAN&gt;&lt;SPAN class=""&gt;Using &lt;/SPAN&gt;&lt;SPAN class=""&gt;SAP Business Event&lt;/SPAN&gt;&lt;SPAN class=""&gt; for &lt;/SPAN&gt;&lt;SPAN class=""&gt;Business&lt;/SPAN&gt; &lt;SPAN class=""&gt;Partner&lt;/SPAN&gt;&lt;SPAN class=""&gt; Create/Change&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/H4&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752652200462.png" style="width: 504px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287155iB46B37412A89FDAA/image-dimensions/504x87?v=v2" width="504" height="87" role="button" title="vanessadayanc_1-1752652200462.png" alt="vanessadayanc_1-1752652200462.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;For the standard event, which is used first, a simple structure (notification event) is applied: the message contains only the ID field and the data in JSON format. A connection to EMIS/AEM is used, which requires an additional API call to retrieve the full data &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;before&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;further&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;processing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;take&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;place&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;.&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;This&lt;/SPAN&gt; &lt;SPAN class=""&gt;iFlo&lt;/SPAN&gt;&lt;SPAN class=""&gt;w&lt;/SPAN&gt;&lt;SPAN class=""&gt; becomes more complex due to the&lt;/SPAN&gt;&amp;nbsp;extra&amp;nbsp;&lt;SPAN class=""&gt;API Call.&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the HTTPS sender adapter &lt;/SPAN&gt;&lt;SPAN class=""&gt;only &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;JSON-&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;formatted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;body&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;sent&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
"BusinessPartner":"1000540" 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN&gt;Using the received BusinessPartnerNumber a query is made to SAP S/4HANA to retrieve additional data (such as name, address, country, BPTaxNumber, etc.).&amp;nbsp;&lt;/SPAN&gt;There are two options for the receiver adapter to obtain this data:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN class=""&gt;You can use an HTTP receiver adapter to receive the payload in JSON format or&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN class=""&gt;an OData receiver adapter to receive the payload in XML format.&amp;nbsp;&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN class=""&gt;In this interface there is no option to select the country directly. Therefore it was decided to use OData to retrieve the data in XML format and apply filtering during processing.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;With the OData receiver a&lt;/SPAN&gt;&lt;SPAN class=""&gt;dapter&lt;/SPAN&gt;&lt;SPAN class=""&gt; the following settings are required&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_0-1752664672097.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287266iC0978C19948709C5/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_0-1752664672097.png" alt="vanessadayanc_0-1752664672097.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_1-1752664721215.png" style="width: 449px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287267i327E8AAD2CAE12CD/image-dimensions/449x137?v=v2" width="449" height="137" role="button" title="vanessadayanc_1-1752664721215.png" alt="vanessadayanc_1-1752664721215.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;After &lt;/SPAN&gt;&lt;SPAN class=""&gt;receivíng&lt;/SPAN&gt;&lt;SPAN class=""&gt; the data, the next step is t&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;o&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; route &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;messages&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;where&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;country is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;'CH' (S&lt;/SPAN&gt;&lt;SPAN class=""&gt;witzerland&lt;/SPAN&gt;&lt;SPAN class=""&gt;). &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;A &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;message&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;mapping&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;then&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; performend &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; check &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;if&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxType&lt;/SPAN&gt;&lt;SPAN class=""&gt; = 'CH1'. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_4-1752652296718.png" style="width: 475px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287158iE20A8D9AF81111C7/image-dimensions/475x202?v=v2" width="475" height="202" role="button" title="vanessadayanc_4-1752652296718.png" alt="vanessadayanc_4-1752652296718.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;We&lt;/SPAN&gt; &lt;SPAN class=""&gt;us&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;g&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roovy &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;s&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;cript&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt; &lt;SPAN class=""&gt;set&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;roperties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, so &lt;/SPAN&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt; &lt;SPAN class=""&gt;we&lt;/SPAN&gt; &lt;SPAN class=""&gt;can&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;later&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; send &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;emails&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;containing&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;important&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. The &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;p&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ayload&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;properties&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;are&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;extracted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; and &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;which&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;has&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;now&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;been&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;converted&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;from&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; XML &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; JSON, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;{ 
  "A_BusinessPartner": { 
    "A_BusinessPartnerType": { 
      "BusinessPartner": "1000540", 
      "BusinessPartnerUUID": "6045bd9c-ea28-1fe0-8df5-064c8dfd4727", 
      "BusinessPartnerName": "Test RealCore Schweiz GmbH", 
      "to_BusinessPartnerAddress": { 
        "A_BusinessPartnerAddressType": [ 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "1", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29648" 
          }, 
          { 
            "BusinessPartner": "1000540", 
            "Country": "CH", 
            "FullName": "Test RealCore Schweiz GmbH", 
            "HouseNumber": "2", 
            "Language": "DE", 
            "StreetName": "Müligässli", 
            "PostalCode": "8598", 
            "AddressID": "29663" 
          }, 
        ] 
      }, 
      "to_BusinessPartnerTax": { 
        "A_BusinessPartnerTaxNumberType": { 
          "BusinessPartner": "1000540", 
          "BPTaxType": "CH1", 
          "BPTaxNumber": "CHE359123374", 
          "BPTaxLongNumber": "", 
          "AuthorizationGroup": "" 
        } 
      } 
    } 
  } 
} &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; perform &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;correct&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;SPAN class=""&gt;action&lt;/SPAN&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;SPAN class=""&gt;you&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ne&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;e&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;d&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;SPAN class=""&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;set&lt;/SPAN&gt;&lt;SPAN class=""&gt; and send a &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;h&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;eader&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;in &lt;/SPAN&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;SPAN class=""&gt; API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;c&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;all&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. In &lt;/SPAN&gt;&lt;SPAN class=""&gt;our&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;use&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;case&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;header&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;should&lt;/SPAN&gt; &lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;indicate&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&amp;nbsp; &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;that&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requires&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;validation&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;. &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;(&lt;A href="https://www.uid-wse.admin.ch/V5.0/PublicServices.svc" target="_self" rel="nofollow noopener noreferrer"&gt;Link&lt;/A&gt; to webservice and actions)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;The HTTP receiver adapter &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;used&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;to&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;make&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;API call to &lt;/SPAN&gt;&lt;SPAN class=""&gt;validate&lt;/SPAN&gt;&lt;SPAN class=""&gt; the &lt;/SPAN&gt;&lt;SPAN class=""&gt;BPTaxNumber&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_6-1752652391710.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287161iD64CA3DF9A0186BF/image-size/medium?v=v2&amp;amp;px=400" role="button" title="vanessadayanc_6-1752652391710.png" alt="vanessadayanc_6-1752652391710.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;T&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;he API &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;call&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;returns&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; a simple &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;response&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;s:Envelope xmlns:s="http://schemas.xmlsoap.org/soap/envelope/"&amp;gt; 
  &amp;lt;s:Body xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"&amp;gt; 
    &amp;lt;ValidateVatNumberResponse xmlns="http://www.uid.admin.ch/xmlns/uid-wse"&amp;gt; 
      &amp;lt;ValidateVatNumberResult&amp;gt;true&amp;lt;/ValidateVatNumberResult&amp;gt; 
    &amp;lt;/ValidateVatNumberResponse&amp;gt; 
  &amp;lt;/s:Body&amp;gt; 
&amp;lt;/s:Envelope&amp;gt; &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;All &lt;/SPAN&gt;&lt;SPAN class=""&gt;together&lt;/SPAN&gt; &lt;SPAN class=""&gt;the&lt;/SPAN&gt;&amp;nbsp;complete&amp;nbsp;&lt;SPAN class=""&gt;iFlow&lt;/SPAN&gt; &lt;SPAN class=""&gt;looks&lt;/SPAN&gt;&lt;SPAN class=""&gt; like &lt;/SPAN&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="vanessadayanc_7-1752652431621.png" style="width: 690px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/287162i17A282525BFB8203/image-dimensions/690x231?v=v2" width="690" height="231" role="button" title="vanessadayanc_7-1752652431621.png" alt="vanessadayanc_7-1752652431621.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the teaser one benefit of full state events was &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;highlighted&lt;/SPAN&gt;&lt;/SPAN&gt;: &lt;EM&gt;&lt;STRONG&gt;Simplified Architectures&lt;/STRONG&gt;&lt;/EM&gt;&lt;SPAN&gt;&lt;EM&gt;: Reduceing dependency on S/4HANA APIs, and lowering system coupling and load.&lt;/EM&gt;&amp;nbsp;However, with the interface described above, the simplified architecture is not archieved. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;To&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;address&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;, &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;another&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;solution&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;is&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;requir&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;ed&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;:&lt;/SPAN&gt;&lt;/SPAN&gt;&amp;nbsp;&lt;STRONG&gt;RAP event &lt;/STRONG&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;A RAP event can be used to archieve simpler architecture, providing pre-selected and filtered events.&amp;nbsp;Therefore, the solution chosen is to implement a custom RAP event.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;You&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;can&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; find &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;more&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;information&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt; in &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;the&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&amp;nbsp;&lt;SPAN class=""&gt;next&lt;/SPAN&gt;&amp;nbsp;blog of&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;this&lt;/SPAN&gt; &lt;SPAN class=""&gt;serie&lt;/SPAN&gt;&lt;SPAN class=""&gt;: Event-&lt;/SPAN&gt;&lt;SPAN class=""&gt;driven&lt;/SPAN&gt;&lt;SPAN class=""&gt; Architecture: &lt;/SPAN&gt;&lt;SPAN class=""&gt;Creating&lt;/SPAN&gt; &lt;SPAN class=""&gt;Fullstate&lt;/SPAN&gt;&lt;SPAN class=""&gt; Events in SAP S/4HANA &lt;/SPAN&gt;&lt;SPAN class=""&gt;for&lt;/SPAN&gt;&lt;SPAN class=""&gt; SAP Event Mesh on Integration Suite (EMIS) - &lt;/SPAN&gt;&lt;/SPAN&gt;&lt;STRONG&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;RAP Edition&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/STRONG&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;(&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;coming&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt; &lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;soon&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;&lt;SPAN class=""&gt;…).&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/event-driven-architecture-creating-fullstate-events-in-sap-s-4hana-for-sap/ba-p/14153666"/>
    <published>2025-07-31T12:41:30.451000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/sap-community-leaders-finder/pedro-vieira/ba-p/14168519</id>
    <title>Pedro Vieira</title>
    <updated>2025-07-31T18:52:22.133000+02:00</updated>
    <author>
      <name>KatherineKenneally</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/328</uri>
    </author>
    <content>&lt;P&gt;&lt;A href="https://community.sap.com/t5/user/viewprofilepage/user-id/51954" target="_blank"&gt;More about Pedro Vieira in SAP Community&lt;/A&gt;&lt;STRONG&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Pedro Vieira circular.png" style="width: 198px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294706i47327E7DAC0FDA37/image-size/small?v=v2&amp;amp;px=200" role="button" title="Pedro Vieira circular.png" alt="Pedro Vieira circular.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;BR /&gt;First Name, Last Name: &lt;/STRONG&gt;Pedro Vieira&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Location (City, Country): &lt;/STRONG&gt;Penafiel, Portugal&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Occupation: &lt;/STRONG&gt;Consultant&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="People_pictogram.png" style="width: 87px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/51216i6B6C3041A74CC074/image-dimensions/87x87?v=v2" width="87" height="87" role="button" title="People_pictogram.png" alt="People_pictogram.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&lt;BR /&gt;Pedro, tell us about yourself.&lt;BR /&gt;Who are you, what do you like to do, what is important to you?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I’m passionate about technology and I really enjoy to tinker around with new technologies and to learn new programming languages. This applies to my professional occupation but also to my personal life where, whenever possible, I use some of my free time to grow my knowledge on different technologies.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Desktop_pictogram.png" style="width: 87px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/51217iF7FFD39907D24E76/image-dimensions/87x87?v=v2" width="87" height="87" role="button" title="Desktop_pictogram.png" alt="Desktop_pictogram.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&lt;BR /&gt;What is your area of expertise?&lt;BR /&gt;What does a usual day at work look like for you?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The majority of my years of experience were dedicated to integration projects – between SAP systems and also external systems in and out of SAP. My daily activities can vary widely from supporting and actively working on the technical aspects of an integration project (coding) as well as a close advisor to the customer on how to design such a solution and tackle any challenges along the way.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="inspiration_pictogram.png" style="width: 87px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/51218i2605363EFF68DD34/image-dimensions/87x87?v=v2" width="87" height="87" role="button" title="inspiration_pictogram.png" alt="inspiration_pictogram.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&lt;BR /&gt;What inspired you to become an SAP Champion in SAP Community?&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I was challenged by Manuel Robalinho if I would be interested to join the SAP Champions group and I obviously could not decline such an offer. It is a true honor to have been accepted!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="bullet_list_pictogram.png" style="width: 87px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/51219i2905480F1FCC6AE2/image-dimensions/87x87?v=v2" width="87" height="87" role="button" title="bullet_list_pictogram.png" alt="bullet_list_pictogram.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;&lt;BR /&gt;How do you learn in SAP Community?&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;What is your daily/weekly routine in SAP Community?&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;It is one of my go-to resources online every time I have a doubt or hit a roadblock in my projects. It has proven useful in the past several times and I’m sure it’ll continue to be! I also keep an eye on some blog posts/tutorials on topics I follow to keep me up to date on that.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="circles_pictogram.png" style="width: 87px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/51220i73C820D745D17725/image-dimensions/87x87?v=v2" width="87" height="87" role="button" title="circles_pictogram.png" alt="circles_pictogram.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;What is your suggestion to get the most out of SAP Community?&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Be sure to subscribe to topics and tags related with your areas of your interest so you can receive communications when there’s new activity like blogs, news, events, or Questions/Answers. You can also keep an eye on location groups closeby to eventually discover and attend any SAP Community event, be it online or in person – this is one of the best things the community has to offer for you to learn and build new connections!&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="Arrow_pictogramm_new.png" style="width: 87px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/51221i1EA57128883E9979/image-dimensions/87x87?v=v2" width="87" height="87" role="button" title="Arrow_pictogramm_new.png" alt="Arrow_pictogramm_new.png" /&gt;&lt;/span&gt;&lt;STRONG&gt;Pedro's question to you:&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;What would you recommend as hot topics (or areas of interest) in the SAP community for me to follow? I’m always willing to learn &lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/sap-community-leaders-finder/pedro-vieira/ba-p/14168519"/>
    <published>2025-07-31T18:52:22.133000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-access-policies-in-sap-cloud-integration-ci-cpi-for-multi-team/ba-p/14168567</id>
    <title>Streamlining Access Policies in SAP Cloud Integration(CI/CPI)  for Multi-Team Tenant</title>
    <updated>2025-07-31T22:23:14.032000+02:00</updated>
    <author>
      <name>adarshrao_rao</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/882299</uri>
    </author>
    <content>&lt;P&gt;Access policies within SAP Cloud Integration (CI/CPI) are crucial for managing and organizing resources effectively when multiple teams are working within the same tenant. While there is an excellent blog available which covers the basics on access policies (&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-integration-suite-access-policies-for-integration-packages/ba-p/13648901" target="_self"&gt;blog&lt;/A&gt;), this blog aims to address the unique challenges that arise when multiple teams need tailored access and wish to avoid clutter caused by unnecessary package creation.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Understanding the Requirements:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;If your tenant is bustling with unwanted or empty packages, think names like "PoC Package" or "Test123"—then it’s likely time to optimize your access policies. This blog offers practical solutions for the following requirements:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Dedicated Access for Teams:&lt;/STRONG&gt; Ensure that different teams within your organization do not have unauthorized access to each other’s integration packages.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Targeted Permissions:&lt;/STRONG&gt; Assign package access exclusively to the designated teams.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Artifact Creation Control:&lt;/STRONG&gt; Prevent teams from creating integration artifacts like iFlows, Value Mappings, and Message Mappings in unassigned packages.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Prevent Package Clutter:&lt;/STRONG&gt; Implement a strategy to avoid the creation of unnecessary packages within the tenant.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Example Scenario:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Consider three teams: Team 1, Team 2, and Team 3.&lt;/P&gt;&lt;P&gt;Two users are part of this setup—User 1 belongs to Team 1, and User 2&amp;nbsp; belongs to Team 2.&lt;/P&gt;&lt;P&gt;Users should have access to packages as depicted below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="tablepic.png" style="width: 963px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294752iAD0FD261C9141802/image-size/large?v=v2&amp;amp;px=999" role="button" title="tablepic.png" alt="tablepic.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 849px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294749iE77707C5A89FA39F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;For Requirements #1 and #2:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 1&lt;/STRONG&gt; should have access to Team 1 Package and Housekeeping Package. Here’s how:&lt;/P&gt;&lt;P&gt;Create a new role within Access Policy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 495px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294787iE9C69D9F10E1CA88/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Assign the required packages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 773px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294789i1F76B852CF0F2A3D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define a custom role in BTP Cockpit.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294796i43A24CA4E2D66EA4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Associate this role with a custom Role Collection.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 839px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294798i0C41347DF437B133/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Link this Role Collection to User 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 880px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294800i7F2029EDF99BA8FE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 2&lt;/STRONG&gt; is to be granted Team 2 Package access following similar steps.&lt;/P&gt;&lt;P&gt;Create a new role within Access Policy&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 495px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294794i164AE78284D78758/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Assign the required packages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic5.png" style="width: 775px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294795i3CC566639DFE2D6A/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic5.png" alt="pic5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Define a custom role in BTP Cockpit.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294797i0C8F110DC0CF4569/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic7.png" alt="pic7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Associate this role with a custom Role Collection.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 838px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294799i9F5AEC75E7E670B6/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Link this Role Collection to User 1.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 880px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294801i41E857BD59617A12/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Testing User Access:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 1:&lt;/STRONG&gt; Can edit and incorporate integration artifacts within the Housekeeping Package and Team 1 Package, but not Team 2 Package.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic14.png" style="width: 665px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294813i8B660B5046999FDE/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic14.png" alt="pic14.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;User 2:&lt;/STRONG&gt; Can modify and add integration artifacts in Team 2 Package but lacks the same permissions for Team 1 Package.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic15.png" style="width: 664px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294814iC80122C732FD29D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic15.png" alt="pic15.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;For more, please refer &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/managing-access-policies?locale=en-US" target="_self" rel="noopener noreferrer"&gt;here&lt;/A&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="100%"&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Kindly Note:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="3"&gt;Both User 1 and User 2 can edit &lt;STRONG&gt;Team 3 Package&lt;/STRONG&gt; and &lt;STRONG&gt;create integration artifacts&lt;/STRONG&gt; which should not be the case as per our &lt;STRONG&gt;requirement #3&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Solution for Requirement #3:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;To prevent integration artifact creation in unassigned packages, create a new role in Access Policy that permits artifact creation. Importantly, do &lt;STRONG&gt;NOT&lt;/STRONG&gt; assign this role or its collection to User 1 and User 2. Consequently, neither user will be able to create integration artifacts in unauthorized packages.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 491px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294802i7279436BECE2B6F3/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 757px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294803i34D1F8B6A08000C4/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;More Integration Artifacts can be added to this list.&lt;/P&gt;&lt;P&gt;Whenever user tries to access Integration Suite, following is checked in sequence.&lt;/P&gt;&lt;P&gt;1. Whether standard Role Collection is assigned to view the artifact&lt;/P&gt;&lt;P&gt;2. Whether Access Policy is applied on the content accessed&lt;/P&gt;&lt;P&gt;3. Whether User is provided access in Access Policy to edit the content&lt;/P&gt;&lt;P&gt;Now, User 1 and 2 can create integration artifacts only in their assigned packages and they can't create integration artifacts in any other packages.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Handling Unnecessary Package Creation:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;User 1 &amp;amp; 2 can still create new packages but because of &lt;STRONG&gt;Solution #3&lt;/STRONG&gt;&amp;nbsp;they cannot create any integration artifacts inside them, thereby minimizing clutter. Now, lets check how to automatically remove these empty packages from the tenant.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="5"&gt;Solution Overview:&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I have created an iFlow which connects to Integration Content APIs to detect empty packages without integration artifacts and automatically delete them.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;iFlow Design :&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="iflowpic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294817iA3D3BEF5F8E6BF31/image-size/large?v=v2&amp;amp;px=999" role="button" title="iflowpic2.png" alt="iflowpic2.png" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;For Integration Content API Reference, please refer this &lt;A href="https://api.sap.com/api/IntegrationContent/resource/Integration_Package_Discover" target="_self" rel="noopener noreferrer"&gt;link&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Following steps involved in this iflow:&lt;/P&gt;&lt;P&gt;1. Call GetAccess Token : This will call the Local Integration Process :&amp;nbsp;Get Access Token (1)&lt;/P&gt;&lt;P&gt;2. In Get Access Token, we are calling the token URL from Service key of SAP Process Integration Runtime service which has api plan&lt;/P&gt;&lt;P&gt;3.&amp;nbsp;captureAccessToken - Groovy Script: we parse json response, capture the access token and set it to a access token property&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper

def Message processData(Message message) {
    // Step 1: Get the JSON string from the message body
    def body = message.getBody(String)
    
    // Step 2: Parse the JSON input using JsonSlurper
    def jsonSlurper = new JsonSlurper()
    def jsonObject = jsonSlurper.parseText(body)
    
    // Step 3: Capture the access_token value
    def accessToken = jsonObject.access_token
    
    // Step 4: Set this value to the property accessToken
    message.setProperty("accessToken", accessToken)
    
    // Return the modified message
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;4.&amp;nbsp;Set Authorization Header - Content Modifier: We set Accept and Authorization Headers&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic16.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294820i7232D3259DDCDF51/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic16.png" alt="pic16.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;5. Request Reply : To call the API and get the list of all the Integration Packages in the tenant&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic17.png" style="width: 963px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294822i89F0895D002E94A2/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic17.png" alt="pic17.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. JSON to XML Converter : This is used to convert JSON to XML structure&lt;/P&gt;&lt;P&gt;7. General Splitter - Since the response contains all the packages in a single response, we can split it based on the XPATH //results&lt;/P&gt;&lt;P&gt;8.&amp;nbsp;Call - Empty Package Check : To call the Local Integration Process-&amp;nbsp;Empty Package Check(2)&lt;/P&gt;&lt;P&gt;9. Set Package id - Content Modifier : to set the packageid property&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic18.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294825iC44ECDC04182A51C/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic18.png" alt="pic18.png" /&gt;&lt;/span&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;10. Request - Reply : To check if Integration Design Time Artifacts are available inside each package&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_0-1753989628720.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294826iDC6C753EC32BC7F0/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_0-1753989628720.png" alt="adarshrao_rao_0-1753989628720.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;11.&amp;nbsp;Call - Delete Empty Packages: To call the Local Integration Process&amp;nbsp;Delete Empty Packages(3)&lt;/P&gt;&lt;P&gt;12.&amp;nbsp;deleteEmptyPackages - Groovy Script: To parse the response and check if the response is empty (which indicates Package is empty), set the property deletePackage as true. If not, set it as false&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper

def Message processData(Message message) {
    // Retrieve the body of the message
    String body = message.getBody(String)
    
    // Parse the JSON input using JsonSlurper
    def jsonSlurper = new JsonSlurper()
    def jsonObject = jsonSlurper.parseText(body)
    
    // Check if the JSON structure matches {"d":{"results":[]}}
    def isEmptyResults = jsonObject?.d?.results?.isEmpty()
    
    // Set the property deletePackage based on the check
    if (isEmptyResults) {
        message.setProperty("deletePackage", true)
    } else {
        message.setProperty("deletePackage", false)
    }

    // Return the modified message
    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;13. Router: To route the messages based on the deletePackage value&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic19.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294827iAA9ED41AB5354008/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic19.png" alt="pic19.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;14. Request - Reply: To call the API for Package deletion&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_1-1753990125834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294828iD42A5AB313E9230F/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_1-1753990125834.png" alt="adarshrao_rao_1-1753990125834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;15. Exception Handling: If the package is locked then the message fails. Hence, setting a custom header with likely cause. This can be extended as per your requirement.&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Testing:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Empty packages are created by User 1 &amp;amp; 2 because they can't create Integration Artifacts inside it because of &lt;STRONG&gt;Solution#3&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_2-1753990548526.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294832i2972294738FF07D8/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_2-1753990548526.png" alt="adarshrao_rao_2-1753990548526.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Run the flow&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_3-1753990634966.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294833iDD69EDE66FA028D4/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_3-1753990634966.png" alt="adarshrao_rao_3-1753990634966.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;All the empty packages are deleted now&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_4-1753990702403.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294834iB403E1EF4587F698/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_4-1753990702403.png" alt="adarshrao_rao_4-1753990702403.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Now, if one of the empty package is locked under a user then the flow will fail and likely cause is set as custom header which is set in exception subprocess&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_5-1753990915543.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294836iCEC626C0516D5B8A/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_5-1753990915543.png" alt="adarshrao_rao_5-1753990915543.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="adarshrao_rao_6-1753990983815.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294838i2942CA2DEC22F2CD/image-size/large?v=v2&amp;amp;px=999" role="button" title="adarshrao_rao_6-1753990983815.png" alt="adarshrao_rao_6-1753990983815.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;Efficient management of access policies within SAP Cloud Integration is essential for organizations utilizing shared environments among multiple teams. By implementing tailored access controls, you can ensure that each team has exclusive access to their designated packages. This approach optimizes collaborative workflows by preventing unauthorized modifications to integration packages.&lt;BR /&gt;Furthermore,&amp;nbsp; restriction on the creation of integration artifacts in unassigned packages helps in maintaining a structured and clutter-free tenant. Introducing automated solutions, like the iFlow for detecting and deleting empty packages, further streamlines operations by eliminating unnecessary resource allocation.&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I invite you to share your thoughts in the comments below. Whether you have questions about Access Policies, experiences to share, or suggestions for improvement, your feedback is invaluable. It helps others who are navigating similar journeys and contributes to a community of shared knowledge. I look forward to hearing from you!&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/streamlining-access-policies-in-sap-cloud-integration-ci-cpi-for-multi-team/ba-p/14168567"/>
    <published>2025-07-31T22:23:14.032000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/sap-ibp-new-integration-option-introducing-sap-cloud-integration-from-btp-s/ba-p/14169516</id>
    <title>SAP IBP new Integration Option : Introducing SAP Cloud Integration from BTP's Integration Suite</title>
    <updated>2025-08-01T15:58:10.401000+02:00</updated>
    <author>
      <name>SofianePebre</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1476236</uri>
    </author>
    <content>&lt;P&gt;&lt;FONT color="#000000"&gt;Hello SAP Community,&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Recently,&amp;nbsp;changes in the integration layer for SAP Integrated Business Planning (IBP) were announced as you can read in the following blog entry :&amp;nbsp;&lt;A href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/enhancing-sap-ibp-integration-evolution-and-innovation/ba-p/14042395" target="_blank"&gt;Enhancing SAP IBP integration - Evolution and Innovation&lt;/A&gt; or see in the latest IBP What’s New webinar for 2508 with regards to Integration.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":megaphone:"&gt;📣&lt;/span&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;&lt;U&gt;Key message&lt;/U&gt;&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":warning:"&gt;⚠️&lt;/span&gt;&lt;span class="lia-unicode-emoji" title=":megaphone:"&gt;📣&lt;/span&gt;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;While SAP Cloud Integration for Data Services (CI-DS) will remain the main ETL solution for a 1000+ existing IBP customers, especially when it comes to integrating time series data, innovations in the IBP model structure (The new harmonized planning area allowing to support both time series and order based planning) have led us to rethink and improve the integration layer for a more scalable and efficient offering.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Rest assured: &lt;STRONG&gt;there is currently no plan to sunset CI-DS&lt;/STRONG&gt;, it will continue to be supported by SAP in the future.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;For new IBP customers post release 2508, we encourage making use of the new harmonized planning area (sample PA called SAPIBP2) whose main integration method is SAP Real Time Integration (RTI) for master data as well as orders &amp;amp; stock. Anything else, especially time series data, can be covered with &lt;STRONG&gt;SAP Cloud Integration (CI)&lt;/STRONG&gt;—part of SAP Business Technology Platform (BTP) Integration Suite.&lt;/FONT&gt;&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;&lt;STRONG&gt;So what is SAP CI and how can we use it to integrate data between SAP IBP and SAP S/4HANA (private cloud / on premise) ?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#0000FF"&gt;This is what we will cover in this blog series.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Overview: What is SAP Cloud Integration?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;SAP Cloud Integration is the central, cloud‑native iPaaS offering within &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt;, enabling seamless connection of &lt;STRONG&gt;cloud and on‑premise applications&lt;/STRONG&gt;, both SAP and non‑SAP.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Core capabilities include:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Integration flow design &amp;amp; monitoring via web‑based tooling,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Support for synchronous and asynchronous patterns, event‑based, batch, messaging, content‑based routing, IDoc/RFC flows,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Built‑in security, governance, and stateful processing with error handling and restart capabilities.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Key Capabilities &amp;amp; Integration Patterns&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Prepacked integration content, accelerators and templates supported,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Full lifecycle support: orchestration, transformation, routing, monitoring,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Protocol &amp;amp; messaging flexibility: HTTP/HTTPS, SOAP, REST/OData, RFC/IDoc, SFTP, JMS, AS2, mail, LDAP, JDBC, plus a custom Adapter SDK,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Custom adapter framework: build your own adapters to any protocol or legacy system.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Integration Options: Adapters, APIs, Open Connectors&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;SAP‑standard adapters: e.g. SuccessFactors, Ariba, S/4HANA, Concur, SAP CRM, SAP Cloud for Customer (C4C) and now IBP,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Open Connectors: simplified connectivity to third‑party SaaS such as Salesforce, AWS, Dynamics CRM,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;APIs / web services: support for REST/OData or SOAP interfaces,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;File‑based and database integration: via SFTP, JDBC adapters,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Messaging-based integration: JMS, AS2 to handle enterprise messaging.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Let’s now focus on the initial configuration needed in the various systems to secure this IBP to S/4HANA (private/on prem) integration via CI.&amp;nbsp;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1754053539935.png" style="width: 791px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295267iD136AAB2043F565A/image-dimensions/791x365?v=v2" width="791" height="365" role="button" title="SofianePebre_0-1754053539935.png" alt="SofianePebre_0-1754053539935.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Initial Setup in BTP &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;To be able to use CI for integration purposes with IBP, you first need the following:&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;A license to SAP BTP (Purchase at&amp;nbsp;&lt;A href="https://store.sap.com/dcp/en/product/display-9999951781_live_v1/sap-business-technology-platform" target="_blank" rel="noopener noreferrer"&gt;SAP Store&lt;/A&gt;),&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;A global account must have been setup for your company, check with your IT team as it is possible you already have one for other purposes if you have a BTP license. In that case, you can use the same.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;You need to create a BTP subaccount to consume the Integration Suite service via your BTP global account administrator.&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Make sure&amp;nbsp;Cloud Foundry Environment is enabled for your subaccount&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Note that Integration Suite&amp;nbsp;service runs only on the SAP BTP, Cloud Foundry environment.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;To consume this application, you need to create a subscription to the Integration Suite. In the navigation bar of the&amp;nbsp;SAP BTP&amp;nbsp;cockpit, select&amp;nbsp;Services→Service Marketplace. All resources your subaccount is entitled to consume are shown as tiles.&amp;nbsp;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on&amp;nbsp;...&amp;nbsp;(Create)&amp;nbsp;in the top-right corner of the Integration Suite tile. An intuitive wizard opens to guide you in a step-by-step procedure.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Check your subscription from your subaccount via the Services→Instances and Subscriptions section&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1754053925947.png" style="width: 767px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295277iDF287DF085C3B6CA/image-dimensions/767x447?v=v2" width="767" height="447" role="button" title="SofianePebre_0-1754053925947.png" alt="SofianePebre_0-1754053925947.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Now, to provision the Cloud Integration tenant from the Integration Suite in the next steps, you need to add additional role.&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;User Name &lt;/EM&gt;which should be the email address,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Identity Provider &lt;/EM&gt;choose for example Default Identity Provider,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Email.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the Security→Users section of BTP cockpit, select Create&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Fill in the following on the new user dialog:&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Choose Assign Role Collection and select “Integration_Provisioner”,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_3-1754042901842.png" style="width: 756px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295135i7DB7A762D5DB4041/image-dimensions/756x325?v=v2" width="756" height="325" role="button" title="SofianePebre_3-1754042901842.png" alt="SofianePebre_3-1754042901842.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;You can access your Integration Suite subscription as shown below with the above credentials.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_4-1754042901846.png" style="width: 706px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295136i80DA8B9E42F19AD4/image-dimensions/706x203?v=v2" width="706" height="203" role="button" title="SofianePebre_4-1754042901846.png" alt="SofianePebre_4-1754042901846.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Initial Setup in Integration Suite &lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Now that you can access the Integration Suite application, you need to activate its capabilities to provision the Cloud Integration tenant.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_5-1754042901848.png" style="width: 640px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295134i882ACD4D276D18E8/image-dimensions/640x392?v=v2" width="640" height="392" role="button" title="SofianePebre_5-1754042901848.png" alt="SofianePebre_5-1754042901848.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;From the Integration Suite, choose Home from the left side navigation bar.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Add Capabilities (or Manage Capabilities if this step was already executed for other purposes),&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the first step of the new dialog, select Build Integration Scenarios and choose Next,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_6-1754042901850.png" style="width: 734px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295138iF6A32B4C1E074B53/image-dimensions/734x345?v=v2" width="734" height="345" role="button" title="SofianePebre_6-1754042901850.png" alt="SofianePebre_6-1754042901850.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the second step, select your environment between Production and Non Production and choose Next,&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Finally in the third step, choose Activate.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Once the activation is finished, you should be able to see the added features from the newly provisioned CI tenant on the navigation bar to the left:&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_7-1754042901852.png" style="width: 701px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295139i7E6E097EAD83EC79/image-dimensions/701x284?v=v2" width="701" height="284" role="button" title="SofianePebre_7-1754042901852.png" alt="SofianePebre_7-1754042901852.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Initial Setup in IBP&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Now you can lay the groundwork on the IBP application side by setting up your communication arrangement based on the communication scenario "&lt;EM&gt;Planning – Integration Suite – Cloud Integration Integration (SAP_COM_0931)"&lt;/EM&gt;.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;First, create your &lt;STRONG&gt;Communication User&lt;/STRONG&gt; that will be called during the integration. Use the Maintain Communication Users application for this purpose.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_8-1754042901853.png" style="width: 153px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295137iA55D871812D5BA11/image-dimensions/153x153?v=v2" width="153" height="153" role="button" title="SofianePebre_8-1754042901853.png" alt="SofianePebre_8-1754042901853.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Maintain Communication Users screen, choose New.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Create Communication User screen, enter the following data:&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;username,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;description,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;password&lt;/EM&gt; (this will be used in the BTP application to conclude the setup).&lt;/FONT&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Alternatively, you can create a certificate-based authentication method.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_9-1754042901855.png" style="width: 787px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295141iA702483F1C38B782/image-dimensions/787x418?v=v2" width="787" height="418" role="button" title="SofianePebre_9-1754042901855.png" alt="SofianePebre_9-1754042901855.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Note: above names are set as examples only.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on create.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Next, access the Communication System application to define IBP as the partner for inbound communication from CI.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_10-1754042901856.png" style="width: 154px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295140i29A2CA46E52EE6DB/image-dimensions/154x153?v=v2" width="154" height="153" role="button" title="SofianePebre_10-1754042901856.png" alt="SofianePebre_10-1754042901856.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication Systems screen, choose New.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the New Communication System dialog box, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;System ID,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;System Name.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Create from said dialog box&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication System screen, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Select the checkbox for&lt;EM&gt; Inbound Only,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Add the communication user created in the previous step : &lt;EM&gt;User Name/Client ID&lt;/EM&gt;,&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_11-1754042901858.png" style="width: 763px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295142i4E125B063B2CD284/image-dimensions/763x416?v=v2" width="763" height="416" role="button" title="SofianePebre_11-1754042901858.png" alt="SofianePebre_11-1754042901858.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_12-1754042901859.png" style="width: 770px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295144i8C8CB23408469E8A/image-dimensions/770x77?v=v2" width="770" height="77" role="button" title="SofianePebre_12-1754042901859.png" alt="SofianePebre_12-1754042901859.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Note: above names are set as examples only.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Save.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;Finally, access the Communication Arrangement application to expose inbound and outbound services that enable the communication between IBP and CI.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_13-1754042901859.png" style="width: 132px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295143iF72B1D9CFE19398D/image-dimensions/132x131?v=v2" width="132" height="131" role="button" title="SofianePebre_13-1754042901859.png" alt="SofianePebre_13-1754042901859.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication Arrangement screen, choose New.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;In the New Communication Arrangement dialog box, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Scenario,&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Arrangement Name.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Create from said dialog box&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;On the Communication Arrangement screen, enter the following data:&lt;/FONT&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Select the communication system created in the previous step : &lt;EM&gt;Communication System.&lt;/EM&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="SofianePebre_0-1754057029902.png" style="width: 854px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295290i6735CBBEA5D741C3/image-dimensions/854x239?v=v2" width="854" height="239" role="button" title="SofianePebre_0-1754057029902.png" alt="SofianePebre_0-1754057029902.png" /&gt;&lt;/span&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;EM&gt;Note: above names are set as examples only.&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Click on Save.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;The configuration for integration on the IBP side is finished.&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Next blog entries will cover the following:&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;start working in the Integration Suite by defining destinations representing the systems (IBP and S/4HANA) the integration flows (i-flows) will connect to via RFC connections.&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;start configuring i-flows, leveraging standard prebuilt CI packages and the ERP (or S/4HANA) integration addon for SAP IBP as a starting point.&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT color="#000000"&gt;&lt;STRONG&gt;Sources&amp;nbsp;&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Overview of &lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/what-is-sap-integration-suite?utm_source=chatgpt.com" target="_blank" rel="noopener noreferrer"&gt;SAP Integration Suite&lt;/A&gt; and &lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/sap-cloud-integration?version=Cloud" target="_blank" rel="noopener noreferrer"&gt;SAP Cloud Integration&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;LI&gt;&lt;FONT color="#000000"&gt;Additional information on &lt;A href="https://community.sap.com/Activating%20and%20Managing%20Capabilities" target="_blank" rel="noopener nofollow noreferrer"&gt;Integrating capabilities in Integration Suite&lt;/A&gt;&lt;/FONT&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/supply-chain-management-blog-posts-by-sap/sap-ibp-new-integration-option-introducing-sap-cloud-integration-from-btp-s/ba-p/14169516"/>
    <published>2025-08-01T15:58:10.401000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cpi-integration-with-bw-4hana/ba-p/14170026</id>
    <title>CPI Integration with BW/4HANA</title>
    <updated>2025-08-02T10:00:58.796000+02:00</updated>
    <author>
      <name>lm_allen</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/536714</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The below blog provides an overview of setting up a simple CPI integration to post data to a SAP BW/4HANA on-premise instance.&amp;nbsp; I have included an explanation of how to achieve this in both postman and SAP Cloud Integration.&amp;nbsp; I have also included references to helpful blogs you can refer to for additional details.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Set up in BW&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Create DSO in BW&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_0-1754121199342.png" style="width: 402px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295508iEC47BF3A1CD6EC03/image-dimensions/402x522?v=v2" width="402" height="522" role="button" title="lm_allen_0-1754121199342.png" alt="lm_allen_0-1754121199342.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Ensure 'Write Interface Enabled' attribute is set.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_1-1754121199344.png" style="width: 596px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295507iF2A422E85F44FAE3/image-dimensions/596x258?v=v2" width="596" height="258" role="button" title="lm_allen_1-1754121199344.png" alt="lm_allen_1-1754121199344.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Add fields to DSO&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_2-1754121199345.png" style="width: 626px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295509i5F01E306748B6326/image-dimensions/626x219?v=v2" width="626" height="219" role="button" title="lm_allen_2-1754121199345.png" alt="lm_allen_2-1754121199345.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Download URL's shown on DSO&lt;/P&gt;&lt;TABLE&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Get Structure&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://server:port/sap/bw4/v1/push/dataStores/da_maze" target="_blank" rel="noopener nofollow noreferrer"&gt;https://server:port/sap/bw4/v1/push/dataStores/da_maze&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Get Sample Data&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://server:port" target="_blank" rel="noopener nofollow noreferrer"&gt;https://server:port&lt;/A&gt;&lt;A href="https://nobb4d20.nobianet.global:8021/sap/bw4/v1/push/dataStores/da_maze/sampleData%7B?records,seed%7D" target="_blank" rel="noopener nofollow noreferrer"&gt;/sap/bw4/v1/push/dataStores/da_maze/sampleData{?records,seed}&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Send Data&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://server:port" target="_blank" rel="noopener nofollow noreferrer"&gt;https://server:port&lt;/A&gt;&lt;A href="https://nobb4d20.nobianet.global:8021/sap/bw4/v1/push/dataStores/da_maze/dataSend%7B?request,datapid%7D" target="_blank" rel="noopener nofollow noreferrer"&gt;/sap/bw4/v1/push/dataStores/da_maze/dataSend{?request,datapid}&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Open Request&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://server:port/sap/bw4/v1/push/dataStores/da_maze/requests" target="_blank" rel="noopener nofollow noreferrer"&gt;https://server:port/sap/bw4/v1/push/dataStores/da_maze/requests&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD&gt;&lt;P&gt;Close Request&lt;/P&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;A href="https://server:port" target="_blank" rel="noopener nofollow noreferrer"&gt;https://server:port&lt;/A&gt;&lt;A href="https://nobb4d20.nobianet.global:8021/sap/bw4/v1/push/dataStores/da_maze/requests/%7Brequest%7D/close%7B?error%7D" target="_blank" rel="noopener nofollow noreferrer"&gt;/sap/bw4/v1/push/dataStores/da_maze/requests/{request}/close{?error}&lt;/A&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Using DSO in Postman&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For Info can query DSO structure&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_3-1754121199347.png" style="width: 545px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295511i31A1BDA8FE652A04/image-dimensions/545x432?v=v2" width="545" height="432" role="button" title="lm_allen_3-1754121199347.png" alt="lm_allen_3-1754121199347.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Or see an example json payload&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_4-1754121199348.png" style="width: 520px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295512i4D7007EAB84BEF87/image-dimensions/520x432?v=v2" width="520" height="432" role="button" title="lm_allen_4-1754121199348.png" alt="lm_allen_4-1754121199348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Post data in postman:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Fetch CSRF token&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add header for x-csrf-token = fetch, set Authorization to basic Auth&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_5-1754121199349.png" style="width: 548px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295510iD1F21F300AE5F480/image-dimensions/548x233?v=v2" width="548" height="233" role="button" title="lm_allen_5-1754121199349.png" alt="lm_allen_5-1754121199349.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Response header will contain the csrf token&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_6-1754121199350.png" style="width: 545px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295513iDD0B49EA1DEE2758/image-dimensions/545x128?v=v2" width="545" height="128" role="button" title="lm_allen_6-1754121199350.png" alt="lm_allen_6-1754121199350.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Send Data to BW&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add header x-csrf-token and set value returned by call in Step 1 (found in the response header)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_7-1754121199351.png" style="width: 556px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295514i1A192205D0442EEF/image-dimensions/556x231?v=v2" width="556" height="231" role="button" title="lm_allen_7-1754121199351.png" alt="lm_allen_7-1754121199351.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Set body to message to post to BW (xml in this example)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_8-1754121199352.png" style="width: 559px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295515i573740441EA3AA2C/image-dimensions/559x243?v=v2" width="559" height="243" role="button" title="lm_allen_8-1754121199352.png" alt="lm_allen_8-1754121199352.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Response back&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_9-1754121199353.png" style="width: 558px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295516i73A21F67275536B1/image-dimensions/558x123?v=v2" width="558" height="123" role="button" title="lm_allen_9-1754121199353.png" alt="lm_allen_9-1754121199353.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Example JSON POST&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_10-1754121199353.png" style="width: 552px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295518i452E030BC8EA5FDF/image-dimensions/552x272?v=v2" width="552" height="272" role="button" title="lm_allen_10-1754121199353.png" alt="lm_allen_10-1754121199353.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Data Post example in CPI&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The process below mirrors the process done previously in postman to post data to BW&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_11-1754121199354.png" style="width: 629px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295517i4EB6111FA980F1C4/image-dimensions/629x257?v=v2" width="629" height="257" role="button" title="lm_allen_11-1754121199354.png" alt="lm_allen_11-1754121199354.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Against the Integration flow set HTTP session&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_12-1754121199354.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295520i68A7F81BA4C76426/image-size/medium?v=v2&amp;amp;px=400" role="button" title="lm_allen_12-1754121199354.png" alt="lm_allen_12-1754121199354.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Start Timer - Schedule set to Run Once&lt;/LI&gt;&lt;LI&gt;Set Csrf token header&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_13-1754121199355.png" style="width: 553px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295521i3B70993EF4A273E8/image-dimensions/553x145?v=v2" width="553" height="145" role="button" title="lm_allen_13-1754121199355.png" alt="lm_allen_13-1754121199355.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. Make http call to get csrf token returned (note that in this example an on-premise BW is being called so virtual host/port have been set in cloud connector)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_14-1754121199356.png" style="width: 550px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295519i961E470B3CA760F7/image-dimensions/550x382?v=v2" width="550" height="382" role="button" title="lm_allen_14-1754121199356.png" alt="lm_allen_14-1754121199356.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Make sure Headers are both passed to the call and returned&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_15-1754121199356.png" style="width: 469px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295523i363DD0B7A9E7E914/image-dimensions/469x109?v=v2" width="469" height="109" role="button" title="lm_allen_15-1754121199356.png" alt="lm_allen_15-1754121199356.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;4. Handle Cookies - The initial csrf call returns an header called 'set-cookie', unfortunately the call to post the data requires an header called 'cookie'.&amp;nbsp; The groovy script converts the format and name.&amp;nbsp; More details can be found in &lt;A href="https://help.sap.com/docs/SUPPORT_CONTENT/sci/3361897820.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SUPPORT_CONTENT/sci/3361897820.html?locale=en-US&lt;/A&gt;&lt;/P&gt;&lt;P&gt;import com.sap.gateway.ip.core.customdev.util.Message;&lt;/P&gt;&lt;P&gt;def Message processData(Message message) {&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; def headers = message.getHeaders();&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; def cookies = headers.get("set-cookie");&lt;/P&gt;&lt;P&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp; message.setHeader("cookie", String.join("; ", cookies));&lt;/P&gt;&lt;P&gt;return message;&lt;/P&gt;&lt;P&gt;}&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Set content type and payload of data post&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_16-1754121199357.png" style="width: 549px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295522i79B8D8504C72C96F/image-dimensions/549x121?v=v2" width="549" height="121" role="button" title="lm_allen_16-1754121199357.png" alt="lm_allen_16-1754121199357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_17-1754121199357.png" style="width: 551px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295524i8A8793E6277D37F4/image-dimensions/551x269?v=v2" width="551" height="269" role="button" title="lm_allen_17-1754121199357.png" alt="lm_allen_17-1754121199357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;6. HTTP call to post data to BW&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="lm_allen_18-1754121199358.png" style="width: 557px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295525i4512668F4102144F/image-dimensions/557x381?v=v2" width="557" height="381" role="button" title="lm_allen_18-1754121199358.png" alt="lm_allen_18-1754121199358.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Referenced Blogs:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Integrating with BW&lt;/P&gt;&lt;P&gt;From &amp;lt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-bw-4hana-write-interface-enabled-adso-connected-to-a-3rd-party-tool/ba-p/13482277" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-bw-4hana-write-interface-enabled-adso-connected-to-a-3rd-party-tool/ba-p/13482277&lt;/A&gt;&amp;gt;&lt;/P&gt;&lt;P&gt;Example CPI to BW&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-platform-integration-cpi-to-push-data-into-sap-bw-4hana/ba-p/13418310" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-sap/sap-cloud-platform-integration-cpi-to-push-data-into-sap-bw-4hana/ba-p/13418310&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Issues with x-csrf not working see below:&lt;/P&gt;&lt;P&gt;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/x-csrf-token-with-on-premises-sap-system-using-http-receiver-adapter/ba-p/13533518" target="_blank"&gt;https://community.sap.com/t5/technology-blog-posts-by-members/x-csrf-token-with-on-premises-sap-system-using-http-receiver-adapter/ba-p/13533518&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/SUPPORT_CONTENT/sci/3361897820.html?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;https://help.sap.com/docs/SUPPORT_CONTENT/sci/3361897820.html?locale=en-US&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cpi-integration-with-bw-4hana/ba-p/14170026"/>
    <published>2025-08-02T10:00:58.796000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-ci-just-started-talking-to-ai-introducing-the-new-ai-adapter-for-sap/ba-p/14170748</id>
    <title>SAP CI Just Started Talking to AI : Introducing the new AI Adapter for SAP Integration Suite</title>
    <updated>2025-08-05T10:22:05.345000+02:00</updated>
    <author>
      <name>Punith_Oswal</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/148179</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Ever wished your iFlow could talk to ChatGPT?&lt;/STRONG&gt;&lt;BR /&gt;Now it can! With SAP’s new &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;, your integrations can tap into the power of Large Language Models like OpenAI's GPT, making your processes smarter and more self-sufficient.&lt;/P&gt;&lt;P&gt;SAP has introduced a game-changing capability in its Integration Suite—the &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;. Whether you're connecting to &lt;STRONG&gt;SAP AI Core&lt;/STRONG&gt; via the GenAI Hub or tapping into &lt;STRONG&gt;OpenAI&lt;/STRONG&gt; through REST APIs, this adapter allows your integration flows to &lt;STRONG&gt;think&lt;/STRONG&gt;, &lt;STRONG&gt;respond&lt;/STRONG&gt;, and &lt;STRONG&gt;act&lt;/STRONG&gt; using the power of generative AI.&lt;/P&gt;&lt;P&gt;With the AI Adapter, integration is no longer just about connectivity—it’s about &lt;STRONG&gt;cognitive capability&lt;/STRONG&gt;. You’re not simply passing data; you’re enabling your iFlows to understand, reason, and generate intelligent output in real-time.&lt;/P&gt;&lt;DIV&gt;It unlocks a new era of integration where:&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;Decisions are dynamic&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;Responses are contextual&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;Workflows are augmented with AI-driven intelligence&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Your iFlow is no longer silent. It can now &lt;STRONG&gt;ask, interpret, and respond&lt;/STRONG&gt;—like a real assistant embedded within your process.&lt;/P&gt;&lt;P&gt;From streamlining operations to enriching business workflows with human-like intelligence, the AI Adapter is a leap toward &lt;STRONG&gt;next-gen, AI-powered integration landscapes&lt;/STRONG&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1736826804"&gt;Key Features of the AI Adapter in SAP Integration Suite&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt; extends the power of SAP Integration Suite by enabling seamless integration with generative AI providers. It comes in two flexible variants and supports a wide range of intelligent capabilities:&lt;/P&gt;&lt;DIV&gt;&lt;STRONG&gt;Two Powerful Variants&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;&lt;U&gt;AICore-GenAIHub:&lt;/U&gt; Connects directly to SAP AI Core’s orchestration services to consume multiple GenAI models using a unified configuration and deployment setup.&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;&lt;U&gt;Custom-OpenAI-REST&lt;/U&gt;: Connects to OpenAI’s public APIs, enabling integration with advanced LLMs (like ChatGPT) for tasks like text generation, classification, and more.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Secure Authentication Options&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;OAuth2 Client Credentials for the AICore-GenAIHub variant.&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;API Key Alias (Secure Parameter) support for the Custom-OpenAI-REST variant.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Unified API Design&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;The AICore-GenAIHub variant uses a harmonized API, allowing you to switch between different foundational models without changing client code.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Custom-OpenAI-REST Capabilities&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;Full access to OpenAI’s powerful endpoints including Chat Completions, Platform metadata, Rich AI-generated responses and more&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;DIV&gt;&lt;STRONG&gt;Dual Configuration Modes&lt;/STRONG&gt;&lt;/DIV&gt;&lt;UL&gt;&lt;LI&gt;&lt;DIV&gt;Basic Mode: Simplified setup for common use cases and supported endpoints.&lt;/DIV&gt;&lt;/LI&gt;&lt;LI&gt;&lt;DIV&gt;Advanced Mode: Full control for experienced developers to call any API endpoint with custom headers, payloads, and processing logic.&lt;/DIV&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;There are countless possibilities when it comes to leveraging the AI Adapter in SAP Integration Suite—whether it’s intelligent document processing, language translation, content generation, or decision support. But in this blog, we’re focusing on a simple yet powerful scenario that highlights intelligent automation in action.&lt;/P&gt;&lt;H3 id="toc-hId-1669396018"&gt;Scenario: Generative AI-Augmented Error Handling&lt;/H3&gt;&lt;P&gt;In this walkthrough, we’ll use the &lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt; variant of the AI Adapter to build an iFlow that:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Detects a failed message&lt;/STRONG&gt; in your integration flow&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Sends the error details&lt;/STRONG&gt; to OpenAI’s GPT model via the AI Adapter&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Receives a context-aware resolution&lt;/STRONG&gt; from the AI model&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Creates a Jira ticket&lt;/STRONG&gt; automatically with the AI-suggested resolution&lt;/P&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: This is a foundational PoC that showcases how the capability can support exception handling. I hope it serves as a starting point for building more advanced and tailored solutions on top of it.&lt;/P&gt;&lt;H4 id="toc-hId-1601965232"&gt;Setting Up Your OpenAI Account and creation of API Key&lt;/H4&gt;&lt;P&gt;To integrate OpenAI with SAP Integration Suite using the &lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt; variant of the AI Adapter, you'll need an OpenAI account and an API key. Here's how to get started:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Create/Open Your OpenAI Account&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;Go to &lt;A class="" href="https://platform.openai.com" target="_new" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;Click Sign up / Log in&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AI 1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295905iBE33F006603D06A3/image-size/large?v=v2&amp;amp;px=999" role="button" title="AI 1.png" alt="AI 1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3. Setup your account / Create Organization&lt;/P&gt;&lt;P&gt;4. Set a API key name and Project name&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_1-1754300477444.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295924i2883233822B53AE2/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Punith_Oswal_1-1754300477444.png" alt="Punith_Oswal_1-1754300477444.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;5. Copy and securely store the API key (Caution:&lt;SPAN&gt;&amp;nbsp;This key is &lt;/SPAN&gt;shown only once&lt;SPAN&gt;—make sure to save it)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_3-1754300588455.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295926i5317FC94D57C3A9B/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Punith_Oswal_3-1754300588455.png" alt="Punith_Oswal_3-1754300588455.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;You can check all the configurations by clicking on your profile at the Top right.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_4-1754300926975.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/295928iF19084E007557996/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_4-1754300926975.png" alt="Punith_Oswal_4-1754300926975.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Activate Billing on Your OpenAI Account (Mandatory for API Access)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Having an OpenAI account and API key is not enough. You must have an active billing setup.&amp;nbsp; Earlier, OpenAI offered free trial credits ($5 to $18) to new accounts.&lt;BR /&gt;But as of 2024, trial credits are no longer guaranteed, especially for accounts from certain regions (like India).&lt;/P&gt;&lt;P&gt;So unless you’re explicitly granted trial usage, the default quota is $0 — and any API call will fail unless billing is enabled.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;How to Set Up Billing for OpenAI API Access&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;Go to:&amp;nbsp;&lt;A href="https://platform.openai.com/account/billing/payment-methods" target="_blank" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com/account/billing/payment-methods&lt;/A&gt;&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Click "Add payment method", and enter your debit/credit card details.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;Once the card is added, you are automatically enrolled into a pay-as-you-go plan.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;If your account has no active quota, you’ll see errors like:&lt;/P&gt;&lt;P&gt;Reason: Invoke api failed, urlPath:&lt;A href="https://api.openai.com/v1/chat/completions" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openai.com/v1/chat/completions&lt;/A&gt; status:429 response: Too Many Requests&lt;BR /&gt;errorEntity:{&lt;BR /&gt;"error": {&lt;BR /&gt;"message": "You exceeded your current quota, please check your plan and billing details. For more information on this error, read the docs: &lt;A href="https://platform.openai.com/docs/guides/error-codes/api-errors" target="_blank" rel="noopener nofollow noreferrer"&gt;https://platform.openai.com/docs/guides/error-codes/api-errors&lt;/A&gt;.",&lt;BR /&gt;"type": "insufficient_quota",&lt;BR /&gt;"param": null,&lt;BR /&gt;"code": "insufficient_quota"&lt;BR /&gt;}&lt;BR /&gt;}&lt;/P&gt;&lt;P&gt;All set on OpenAI end, Now lets hop on to our very own SAP Cloud Integration.&lt;/P&gt;&lt;P&gt;----------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/P&gt;&lt;H3 id="toc-hId-1276369008"&gt;SAP Cloud Integration:&lt;/H3&gt;&lt;P&gt;&lt;SPAN&gt;For this demonstration, I’ve created an iFlow that uses the &lt;/SPAN&gt;Google Pub/Sub Adapter&lt;SPAN&gt; with &lt;/SPAN&gt;intentionally incorrect KeyPair/Certificate&lt;SPAN&gt;, triggering a failure during message processing. This failure is caught by the &lt;/SPAN&gt;Exception Subprocess&lt;SPAN&gt;, where we harness the power of the &lt;/SPAN&gt;AI Adapter&lt;SPAN&gt; to analyze the error and fetch a resolution using AI.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The returned resolution is then added as an attachment to the MPL (Message Processing Log) for traceability. Additionally, based on an external parameter, we can optionally trigger the creation of a Jira ticket containing the AI-suggested fix.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_1-1754376173660.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296406i04DC89FDB991CF06/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_1-1754376173660.png" alt="Punith_Oswal_1-1754376173660.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This blog will cover only the Exception Sub Process, keeping the spotlight on error handling within integration flows.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;AI Adapter :&lt;/STRONG&gt; Use a Request-Reply and pick AI adapter of variant&amp;nbsp;Custom-OpenAI-REST from the dropdown.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_0-1754376083578.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296405iC1297752AAB9D390/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_0-1754376083578.png" alt="Punith_Oswal_0-1754376083578.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_2-1754314360359.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296091iEE27BFF1EED43075/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_2-1754314360359.png" alt="Punith_Oswal_2-1754314360359.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Connection Tab:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_3-1754314463739.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296102iB958233D9662ADB8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_3-1754314463739.png" alt="Punith_Oswal_3-1754314463739.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="57px"&gt;Address&lt;/TD&gt;&lt;TD width="50%" height="57px"&gt;Specify the OpenAI Address.&lt;BR /&gt;Example: &lt;A href="https://api.openai.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openai.com&lt;/A&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;API Key Alias&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;&lt;P&gt;Specify the API Key alias. Create a Secure Parameter in the security artifact to store the API Key that we created in OpenAI Account.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Caution:&amp;nbsp;The value of API Key Alias must be a combination of&lt;BR /&gt;&amp;lt;Bearer &amp;gt; and {API Key provided by OpenAPI}.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Reuse Connection&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Enable to reuse the connection.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Connection Timeout (in&lt;BR /&gt;ms)&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the maximum waiting time (in milliseconds) for the connection to be established.&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%" height="30px"&gt;Response Timeout (in ms)&lt;/TD&gt;&lt;TD width="50%" height="30px"&gt;Specify the maximum waiting time (in milliseconds) for a response message.&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;Processing Tab:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_4-1754314932195.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296120i7FE14358B3E36194/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_4-1754314932195.png" alt="Punith_Oswal_4-1754314932195.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE border="1" width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Configuration Type&lt;/TD&gt;&lt;TD width="50%"&gt;Select the required configuration type:&lt;BR /&gt;• Basic to use the dropdowns and parameter text fields&lt;BR /&gt;• Advanced to specify the relative URL&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Category&lt;/TD&gt;&lt;TD width="50%"&gt;"Chat Completions" : The use case is about sending a prompt to the model and get the response&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Entity&lt;/TD&gt;&lt;TD width="50%"&gt;"Chat Completion"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Operation&lt;/TD&gt;&lt;TD width="50%"&gt;"Create a model response for the given chat conversation"&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Request Payload&lt;BR /&gt;Source&lt;/TD&gt;&lt;TD width="50%"&gt;- "UI Configurable" provides user friendly fields to create the payload&lt;BR /&gt;automatically.&lt;BR /&gt;- "Exchange Body" allows you to specify required structure and&lt;BR /&gt;values&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Model&lt;/TD&gt;&lt;TD width="50%"&gt;You can select the model which is available to use for your openAI account. Make a GET call to this endpoint&amp;nbsp;&lt;SPAN&gt;&lt;A href="https://api.openai.com/v1/models" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openai.com/v1/models&lt;/A&gt;&amp;nbsp;to know the available models for your account&lt;/SPAN&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Prompt&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Using&amp;nbsp;UI Configurable in this use case, this field gets visible where we need to enter the prompt that goes as a request to the AI model.&lt;/P&gt;&lt;P&gt;Prompt :&amp;nbsp;Suggest a possible solutions for the error : "${property.CamelExceptionCaught}" in 200 words plain text format. Do not include any special characters, double quotes and line breaks.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Request Headers&lt;/TD&gt;&lt;TD width="50%"&gt;Enter a list of custom headers, separated by a pipe (|), to be sent to the target system&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;Response Headers&lt;/TD&gt;&lt;TD width="50%"&gt;Enter a list of headers, separated by a pipe (|), coming from the target system's response to be received in the message&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;P&gt;&lt;STRONG&gt;JSON to XML Converter :&lt;/STRONG&gt; AI model returns the response in JSON format, it contains various fields, but our focus is on the "content" field which has the result. Its easier to extract the field from a XML file rather than a JSON. Hence there is a usage of&amp;nbsp;JSON to XML Converter.&lt;/P&gt;&lt;P&gt;Response from AI model:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AI 7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296167i4EF67D7BE8DEDD5C/image-size/large?v=v2&amp;amp;px=999" role="button" title="AI 7.png" alt="AI 7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_5-1754315940204.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296128iFF88ED63A636A773/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_5-1754315940204.png" alt="Punith_Oswal_5-1754315940204.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Content Modifier :&lt;/STRONG&gt; "Extract Resolution" is used to extract "content" field from the XML.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_6-1754315974729.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296129i50A39AD112037692/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_6-1754315974729.png" alt="Punith_Oswal_6-1754315974729.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Groovy Script&lt;/STRONG&gt; : LogAttachment We will log the resolution that we received from AI model as an attachment in the Message processing logs:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message;

def Message processData(Message message) 
{
    def body = message.getBody(String)
    def messageLog = messageLogFactory.getMessageLog(message);
    def resolution = message.getProperty("resolution") as String
    if(messageLog != null)
    {
    messageLog.addAttachmentAsString("Resolution", resolution, "text/plain");
    }
    return message;
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;STRONG&gt;Process Call :&lt;/STRONG&gt; "Call Jira", this process call executes the Call Jira local integration process. This is an optional configuration based on the External Parameter "CreateJiraCard", this is execute only when its value is "YES".&lt;/P&gt;&lt;P&gt;Jira Integration configuration is NOT covered in this blog, Check out the below blog for details related to Jira Integration.&lt;/P&gt;&lt;P&gt;&lt;A title="Jira Adapter for SAP Integration Suite" href="https://community.sap.com/t5/technology-blog-posts-by-members/jira-adapter-for-sap-integration-suite/ba-p/13930290" target="_self"&gt;Jira Adapter for SAP Integration Suite&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId-1079855503"&gt;Demo:&lt;/H3&gt;&lt;P&gt;Misconfiguration in GooglePubSub Adapter:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_7-1754316644348.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296133iFFB04E5EF5D39C8B/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_7-1754316644348.png" alt="Punith_Oswal_7-1754316644348.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Keystore&lt;/STRONG&gt; : No keypair found for alias "googlekey123"&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_8-1754316728207.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296134i2860C6F1A9B353F7/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_8-1754316728207.png" alt="Punith_Oswal_8-1754316728207.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Deploying the flow:&lt;/STRONG&gt; Lets see how AI helps us with the resolution here.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_1-1754317588656.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296147i84DA42C8736F2F9F/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_1-1754317588656.png" alt="Punith_Oswal_1-1754317588656.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;MPL logs:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_10-1754317029904.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296140i41B862AC7776A01C/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_10-1754317029904.png" alt="Punith_Oswal_10-1754317029904.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Attachment "Resolution": &lt;/STRONG&gt;Response from AI model can be seen in this attachment&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_12-1754317180686.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296142iCDE428ADCC5BECD8/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_12-1754317180686.png" alt="Punith_Oswal_12-1754317180686.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response from AI:&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;One possible solution for the error "org.apache.camel.CamelException: No key pair found for Private Key Alias: googlekey123" is to ensure that the private key with the specified alias "googlekey123" is correctly added to the keystore or key repository being used by the application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;First, you should confirm that the private key with the alias "googlekey123" exists in the keystore or key repository. If it does not exist, you may need to generate a new key pair with the correct alias and add it to the keystore.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Next, verify that the keystore or key repository configuration in the application matches the location and password of the keystore where the private key is stored. Make sure that the application has the necessary permissions to access the keystore.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;You may also need to restart the application to ensure that the changes in the keystore or key repository configuration take effect.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;If the issue persists, double-check the spelling of the alias "googlekey123" and verify that it is being referenced correctly in the application code.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;By following these steps, you should be able to resolve the error and successfully retrieve the private key with the alias "googlekey123" in your application.&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;The Integration also created a &lt;STRONG&gt;JIRA ticket&lt;/STRONG&gt; as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="AI 6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296143i185C56756F90ED50/image-size/large?v=v2&amp;amp;px=999" role="button" title="AI 6.png" alt="AI 6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Punith_Oswal_13-1754317344794.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296145iCCB6E10C2C65FAD9/image-size/large?v=v2&amp;amp;px=999" role="button" title="Punith_Oswal_13-1754317344794.png" alt="Punith_Oswal_13-1754317344794.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Pretty cool, right? The AI instantly analyzed the error and answered with remarkably accurate resolution—&lt;/SPAN&gt;&lt;STRONG&gt;all within seconds&lt;/STRONG&gt;&lt;SPAN&gt;. No manual debugging, no digging through logs—just a smart, contextual answer delivered right when you need it.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;This is where traditional error handling ends and &lt;STRONG&gt;intelligent integration&lt;/STRONG&gt; begins.&lt;/P&gt;&lt;P&gt;--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------&lt;/P&gt;&lt;H2 id="toc-hId-754259279"&gt;Conclusion: From Automation to Intelligence—This Is Just the Start&lt;/H2&gt;&lt;P&gt;With the &lt;STRONG&gt;AI Adapter&lt;/STRONG&gt;, your iFlows are no longer static pipelines—they become &lt;STRONG&gt;intelligent systems&lt;/STRONG&gt; that can analyze, respond, and act with precision. From generating real-time resolutions to automatically logging tickets in Jira, and even notifying teams via email or chat platforms like Microsoft Teams—the potential is endless.&lt;/P&gt;&lt;P&gt;It’s a a blueprint for building truly smart integration scenarios that adapt, learn, and evolve with your business needs.&lt;/P&gt;&lt;P&gt;We now stand at the edge of next-generation integration design, where AI is not a bolt-on, but a native capability within your flow logic.&lt;/P&gt;&lt;P&gt;The question is no longer &lt;EM&gt;what can you automate?&lt;/EM&gt;&lt;BR /&gt;It’s how far can you let your integrations think for you?&lt;/P&gt;&lt;P&gt;The future of integration is here—&lt;STRONG&gt;and it’s intelligent!!&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;References&lt;/STRONG&gt;:&amp;nbsp;&lt;A title="AI Adapter for SAP Integration Suite" href="https://api.sap.com/package/AIAdapterforSAPIntegrationSuite/integrationadapter" target="_self" rel="noopener noreferrer"&gt;AI Adapter for SAP Integration Suite&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Up next&lt;/STRONG&gt; :&amp;nbsp;Curious about how the &lt;STRONG&gt;GenAI Hub variant of SAP AI Core&lt;/STRONG&gt; fits into enterprise scenarios? The next blog has you covered — with an exciting new use case!&lt;/P&gt;&lt;P&gt;Hope this helps!&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;Punith Oswal&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-ci-just-started-talking-to-ai-introducing-the-new-ai-adapter-for-sap/ba-p/14170748"/>
    <published>2025-08-05T10:22:05.345000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/why-event-enabling-mdg-with-sap-btp-advanced-event-mesh-is-a-game-changer/ba-p/14172759</id>
    <title>Why Event-Enabling MDG with SAP BTP Advanced Event Mesh is a Game Changer</title>
    <updated>2025-08-06T02:17:10.995000+02:00</updated>
    <author>
      <name>cooperwalsh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1505347</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;Why Event-Enabling MDG with SAP BTP Advanced Event Mesh is a Game Changer&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Introduction&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;It is rare today to see a large enterprise with a monolithic system landscape; enterprises today target best of class solutions to meet the requirements of their business users, suppliers and customers.&amp;nbsp; This ever-growing landscape of heterogenous solutions increases the burden placed on integration tooling to keep their records and transactions in sync.&amp;nbsp; Lack of a true enterprise mesh to connect these applications will lead:&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Missing or duplicate records&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Data silos&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Out of Sync Records&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;A fragmented view of business&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All of this will create a disjointed view of the business. Master data management is a critical function for any enterprise and requires strong coordination between business stakeholders and the IT teams that own and manage the solutions for master data.&amp;nbsp;&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;In today’s rapidly evolving digital landscape, data is only as powerful as its timeliness and accuracy. For organizations relying on SAP Master Data Governance (MDG) to manage core business objects like Business Partners, Materials, and Cost Centers, the need for real-time data propagation across systems is more critical than ever. Traditional integration approaches often rely on batch jobs or synchronous APIs that are fragile, tightly coupled, and reactive.&amp;nbsp;&lt;/P&gt;&lt;P&gt;This is where event-enabling MDG—using SAP BTP Advanced Event Mesh (AEM) with the Event Enablement Add-On—changes the game. By embracing Event-Driven Architecture (EDA), organizations can deliver real-time, loosely coupled, and scalable master data integration across the entire business landscape.&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;P&gt;A study by Aberdeen research showed that &lt;STRONG&gt;66% of organizations&lt;/STRONG&gt; do not have an IT environment that is cutting edge and built to support their needs around master data integration.&amp;nbsp; What held these organizations back was:&amp;nbsp;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Data growing at a faster rate than they could manage and analyze it&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;There was strong difficulty sharing and accessing data across business areas&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Lack of IT resources to support the growing integration needs around master data integration&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;However, enterprises that operate in a best-in-class strategy for master data management and integration see across the board improvement in &lt;STRONG&gt;operating profit, total customer base, revenue and employee retention&lt;/STRONG&gt;.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Why Event-Enable MDG System?&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;SAP MDG is the single source of truth for enterprise master data, but its ability to share validated changes quickly and reliably across consuming systems is key to maximizing its value.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Challenges with traditional MDG integration:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;A complex spider of point-to-point synchronous integrations that require a high level of development effort for any update or change&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Data is out sync due to legacy methods of integration such as batch file transfer&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Rapidly growing system landscape new systems being onboarded all with their own methodologies for sending and receiving data&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Lack of a centralized view to find catalogs of master data events within the enterprise&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Event-enabling MDG solves this by:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;New systems can rapidly be onboarded to consume master data events without disrupting the existing integrations&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Organizations can easily create an event catalogue to find and filter master data events relevant to their system&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Point to point connections can be eliminated by adopting an event driven asynchronous architecture allowing for decoupling of all downstream systems&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Events can be filtered allowing downstream systems to be notified only of events they care about&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Updates are pushed in real time to all downstream systems when an object is created or modified&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;Key Use Cases &amp;amp; Benefiting Systems&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Real-world scenarios where event-enabling MDG unlocks high business value&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Material Master Synchronization&lt;/STRONG&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Updates to Material data in MDG can trigger:&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Automatic replication to production planning systems&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Real-time updates to supplier catalogs or inventory platforms&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Notifications to product lifecycle or quality teams&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Sync updated UPCs/EANs to all subscribing systems in real time to eliminate product returns resulting from inaccurate product data or goods not being sold at check-out due to missed scans&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Business Partner Integration&lt;/STRONG&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;When a Business Partner is created or updated in MDG, an event can trigger updates in:&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;S/4HANA core and satellite systems&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Customer portals and CRMs (e.g., Salesforce)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Identity &amp;amp; Access Management tools (e.g., Azure AD, Okta)&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Global trade systems or compliance platforms&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Sync updates to Business Partner information to all subscribing systems in real time to eliminate issues with wrong, outdated or missing sold to and ship to information causing delays in orders, extra shipping costs and low customer satisfaction&amp;nbsp;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Cost Center &amp;amp; Financial Master Data Distribution&lt;/STRONG&gt;&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Replicate Cost Center changes to subscribing systems in real time such as third-party HR, External Talent Management, Manufacturing Execution Systems, Travel and Expense systems to keep accounting data current and accurate&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;UL&gt;&lt;LI&gt;Ease the pain during mergers and acquisitions in distributing changes to chart of account information to all subscribing systems enabling consistent financial reporting&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cooperwalsh_0-1754439537572.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296929i61A4A02DA0FD7386/image-size/medium?v=v2&amp;amp;px=400" role="button" title="cooperwalsh_0-1754439537572.png" alt="cooperwalsh_0-1754439537572.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Benefits of Using &lt;/STRONG&gt;SAP Integration Suite&lt;STRONG&gt;, Advanced Event Mesh with Event Add-On for MDG Integration&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The Event Enablement Add-On for MDG simplifies the process of turning master data changes into standardized events that are automatically published to SAP BTP Advanced Event Mesh.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Benefits:&lt;/STRONG&gt;&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Automatic Event Generation&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The add-on captures and publishes master data changes as events without requiring custom coding.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Seamless integration with AEM&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Events are routed through Advanced Event Mesh for real-time, reliable distribution across subscribing systems.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Reduced Development Effort&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Accelerates event-driven master data integration projects by handling event creation and metadata management out of the box.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Loosely Couple Architecture&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Consumers subscribe to relevant event topics without impacting MDG logic.&amp;nbsp;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Scalable &amp;amp; Resilient&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Built-in guaranteed delivery, replay, and fault tolerance via AEM.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Extending Event-Driven Integration with SAP Integration Suite&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;While SAP BTP Advanced Event Mesh excels at delivering real-time events from SAP MDG &amp;amp; MDI, some integration scenarios require additional processing—such as data transformation, enrichment, or bridging to legacy systems that cannot consume events directly.&amp;nbsp;&lt;/P&gt;&lt;P&gt;SAP Integration Suite provides the ideal complement through lightweight micro-integrations (iFlows) that can handle these needs efficiently. This combined approach ensures enterprises benefit from the agility and scalability of event-driven architectures, while still addressing practical system integration requirements.&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Event-enabling SAP MDG with SAP BTP Advanced Event Mesh represents a significant leap toward &lt;STRONG&gt;real-time, intelligent master data distribution&lt;/STRONG&gt;. It enables enterprises to &lt;STRONG&gt;respond faster, integrate smarter, &lt;/STRONG&gt;and&lt;STRONG&gt; govern better&lt;/STRONG&gt;, all while reducing integration maintenance costs.&amp;nbsp;&lt;/P&gt;&lt;P&gt;If you're looking to modernize how your organization distributes critical master data, &lt;STRONG&gt;it's time to move from point-to-point to event-driven&lt;/STRONG&gt;. Let’s start the conversation!&amp;nbsp;&lt;/P&gt;&lt;P&gt;Blog Authors: &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cooperwalsh_1-1754439537579.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296930i8A444D2EF559C5B0/image-size/medium?v=v2&amp;amp;px=400" role="button" title="cooperwalsh_1-1754439537579.png" alt="cooperwalsh_1-1754439537579.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Sumeet Koshal - Solace &amp;nbsp;&lt;/P&gt;&lt;P&gt;Director of EDA Solutions North America &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.linkedin.com/in/sumeetkoshal/" target="_blank" rel="nofollow noopener noreferrer"&gt;connect on linked in&lt;/A&gt; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cooperwalsh_2-1754439537585.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296931i6E83BDF29B5A57CE/image-size/medium?v=v2&amp;amp;px=400" role="button" title="cooperwalsh_2-1754439537585.png" alt="cooperwalsh_2-1754439537585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Cooper Walsh - SAP&amp;nbsp;&lt;/P&gt;&lt;P&gt;Sr. Solutions Advisor - SAP BTP&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;A href="https://www.linkedin.com/in/cooper-walsh-46438079/" target="_blank" rel="nofollow noopener noreferrer"&gt;connect on linked in&lt;/A&gt; &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/why-event-enabling-mdg-with-sap-btp-advanced-event-mesh-is-a-game-changer/ba-p/14172759"/>
    <published>2025-08-06T02:17:10.995000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-cpi-dynamic-router-with-external-rule-set-using-camel-simple/ba-p/14172873</id>
    <title>SAP CPI Dynamic Router with External Rule Set using Camel Simple Expressions</title>
    <updated>2025-08-06T06:40:26.867000+02:00</updated>
    <author>
      <name>yeeloon-khoo</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/184407</uri>
    </author>
    <content>&lt;H2 id="ember1061" id="toc-hId-1736887435"&gt;Intro&lt;/H2&gt;&lt;P class=""&gt;Routing in CPI can get messy. As more routing branches are added, maintaining them becomes a headache, especially when conditions get complex or frequently change.&lt;/P&gt;&lt;H2 id="toc-hId-1540373930"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="ember1063" id="toc-hId-1343860425"&gt;Background / Problem&lt;/H2&gt;&lt;P class=""&gt;I've explored a few ways to reduce this pain.&lt;/P&gt;&lt;P class=""&gt;One is &lt;STRONG&gt;convention-based processDirect routing&lt;/STRONG&gt;, e.g. building endpoint dynamically from headers like: /PD_${header.mestyp}_${header.rcvprn}. It’s simple and router-free, but can’t handle complex routing conditions.&lt;/P&gt;&lt;P class=""&gt;Another is using &lt;STRONG&gt;value mapping&lt;/STRONG&gt; for routing, lookup a field to get the processDirect path. See link at [Ref 1] &amp;amp; [Ref 2]. But VM has serious limits:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Only supports &lt;STRONG&gt;single &lt;/STRONG&gt;field matching&lt;/LI&gt;&lt;LI&gt;No clean way to do &lt;STRONG&gt;AND&lt;/STRONG&gt; logic without messy field concatenation&lt;/LI&gt;&lt;LI&gt;Can’t return &lt;STRONG&gt;multiple &lt;/STRONG&gt;matching rows&lt;/LI&gt;&lt;LI&gt;No support for &lt;STRONG&gt;rich conditions&lt;/STRONG&gt; like contains, startsWith, greaterThan, etc.&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;If you try to simulate those rich conditions in VM, it gets hacky, need to embed pseudo-logic in values, then decode with Groovy. That’s fragile and hard to maintain.&lt;/P&gt;&lt;P class=""&gt;You could build your own rule engine, but that becomes a long-term maintenance trap. You’ll keep adding custom operators, fixing your own rule evaluation engine, and it won’t be standard. I wouldn’t go that route.&lt;/P&gt;&lt;H2 id="toc-hId-1147346920"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="ember1070" id="toc-hId-950833415"&gt;Inspiration&lt;/H2&gt;&lt;P class=""&gt;While revisiting the &lt;STRONG&gt;Dynamic Router pattern&lt;/STRONG&gt; from Gregor Hohpe’s EIP book and Apache Camel, I realized: CPI &lt;EM&gt;should&lt;/EM&gt; be able to support dynamic, flexible routing, if the conditions are externalized and evaluated at runtime.&lt;/P&gt;&lt;P class=""&gt;The core idea of a true Dynamic Router:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Rules are externally maintained&lt;/LI&gt;&lt;LI&gt;Easy to add/remove/update&lt;/LI&gt;&lt;LI&gt;Supports rich conditions (not just equals)&lt;/LI&gt;&lt;LI&gt;Still simple to implement&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Camel is the backbone of CPI, so I turned to &lt;STRONG&gt;Camel’s Simple Expression&lt;/STRONG&gt; language.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1075" id="toc-hId-754319910"&gt;Research&lt;/H2&gt;&lt;P class=""&gt;After revisit a great blog [Ref 3] by Eng Swee, found out able to use evaluate() method to get value using Groovy, however, it doesn't return single true or false.&lt;/P&gt;&lt;P class=""&gt;Until at [Ref 4] Camel SimpleBuilder JavaDoc, found the method: matches()&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1078" id="toc-hId-557806405"&gt;&lt;FONT size="5"&gt;Discovery&lt;/FONT&gt;&lt;/H2&gt;&lt;P class=""&gt;With SimpleBuilder.matches(), I can evaluate conditions like below with headers/properties in Groovy to Boolean true/false. Please note that for matches() method, Both ("and", "or") is not working, have to use actual operator (&amp;amp;&amp;amp;, II). Need double equal sign. Below 2 examples:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;${header.type} == 'SO' &amp;amp;&amp;amp; ${header.class} == 'A'
${header.partNumber.startsWith('FG')}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;This opened up new possibilities and a clean path: I can store rules as just two fields:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;endpoint (processDirect path)&lt;/LI&gt;&lt;LI&gt;condition (simple expression)&lt;/LI&gt;&lt;/UL&gt;&lt;P class=""&gt;Evaluate them in Groovy using matches(). If it returns true, route to that endpoint.&lt;/P&gt;&lt;P class=""&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="ember1083" id="toc-hId-361292900"&gt;&lt;FONT size="5"&gt;How it work: Dynamic Simple Expression matches()&lt;/FONT&gt;&lt;/H2&gt;&lt;P class=""&gt;You can build "Simple Expression Tester" to test simple expression from Postman.&lt;/P&gt;&lt;P class=""&gt;Step 1: Build an iFlow like below. Allowed Header(s) must be *&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_1-1754452911299.png" style="width: 610px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296959iE1CC90D103F174B7/image-dimensions/610x314?v=v2" width="610" height="314" role="button" title="yeeloonkhoo_1-1754452911299.png" alt="yeeloonkhoo_1-1754452911299.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Step 2: Add the script testSimpleExpression.groovy that do evaluate() and matches() on some Simple Expression:&lt;/SPAN&gt;&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import org.apache.camel.Exchange
import org.apache.camel.builder.SimpleBuilder

def Message processData(Message message) {
    def headers = message.getHeaders()
  
    Exchange ex = message.exchange

    def evaluateSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).evaluate(ex, String)
    }

    def matchSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).matches(ex)
    }

    def condition = evaluateSimple('${header.condition}')
    def result = matchSimple(condition)

    def output = "condition: " + condition + "\r\n" + "result: " + result
    message.setBody(output)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;SPAN&gt;Step 3: Positive Test Run. Header class &amp;amp; type matched the condition, result = true&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_19-1754453865709.png" style="width: 702px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296978i331C476B9A50F332/image-dimensions/702x545?v=v2" width="702" height="545" role="button" title="yeeloonkhoo_19-1754453865709.png" alt="yeeloonkhoo_19-1754453865709.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 4: Negative Test Run. Changed class from A to B, then result = false&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_20-1754453899438.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296979i3FA323F0B16A1409/image-dimensions/719x598?v=v2" width="719" height="598" role="button" title="yeeloonkhoo_20-1754453899438.png" alt="yeeloonkhoo_20-1754453899438.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 5: Tried with some other method like startsWith() still work. I not tried all possible method, however believe as long as the method work in Camel Simple Expression, will work in this iFlow too.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_21-1754453959882.png" style="width: 732px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296980i7CFDCD43BABBDEA7/image-dimensions/732x554?v=v2" width="732" height="554" role="button" title="yeeloonkhoo_21-1754453959882.png" alt="yeeloonkhoo_21-1754453959882.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="5"&gt;&lt;STRONG&gt;Dynamic Router with External Rule Set (Simple Expression)&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;After testing and a few iterations, this worked well. So now ready to build a mini rule engine that is simple, dynamic, and avoids all the earlier pain points.&lt;/P&gt;&lt;P class=""&gt;Step 1: Below will be our rule set in JSON, telling the processDirect endpoint and condition. The name field is just as an identifier for the rule.&lt;/P&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-json"&gt;&lt;code&gt;[
    {
        "name": "ReceiverA",
        "endpoint": "/PD_SO_A",
        "condition": "${header.type} == 'SO' &amp;amp;&amp;amp; ${header.class} == 'A'"
    },
    {
        "name": "ReceiverB",
        "endpoint": "/PD_PO_B",
        "condition": "${header.type} == 'PO' &amp;amp;&amp;amp; ${header.class} == 'B'"
    }
]&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Step 2: Build below 'Dynamic Router' iflow. For demo purpose, the sender is HTTP adapter. In actual you may change to processDirect. Allowed Header(s) must be *&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_5-1754453163834.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296963i149FF94F674A7990/image-size/large?v=v2&amp;amp;px=999" role="button" title="yeeloonkhoo_5-1754453163834.png" alt="yeeloonkhoo_5-1754453163834.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class=""&gt;Step 3: That "getPDSimpleRule" script, for now you can just use content modifier set static JSON rule set to property "simpleRule". We going to change to Partner Directory later.&lt;/P&gt;&lt;P class=""&gt;Step 4: Script "doDynamicRouting". This script loop each rule, if condition matched, set the endpoint in property, also do logging in custom headers for traceability.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonSlurper
import org.apache.camel.Exchange
import org.apache.camel.builder.SimpleBuilder

def Message processData(Message message) {
    def messageLog = messageLogFactory.getMessageLog(message)
    def properties = message.getProperties()

    Exchange ex = message.exchange
    def matchSimple = { simpleExpression -&amp;gt;
        SimpleBuilder.simple(simpleExpression).matches(ex)
    }
    def simpleRule = message.getProperty("simpleRule")
    def simpleRuleJSON = new JsonSlurper().parseText(simpleRule)

    properties.put("endpoint", "/not_found_from_rule")

    for(rule in simpleRuleJSON){
        def name = rule.name ?: ""
        def endpoint = rule.endpoint ?: ""
        def condition = rule.condition ?: ""

        def result = matchSimple(condition)

        if(result == true){
            messageLog.addCustomHeaderProperty("name", name)
            messageLog.addCustomHeaderProperty("condition", condition)
            messageLog.addCustomHeaderProperty("endpoint", endpoint)

            properties.put("endpoint", endpoint)
            break
        }
    }

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;SPAN&gt;Step 5: For demo, build 2 different receivers with processDirect. Each with sender address: /PD_SO_A and /PD_PO_B.&lt;/SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_6-1754453294329.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296964i7957BD1352DE11D6/image-dimensions/722x276?v=v2" width="722" height="276" role="button" title="yeeloonkhoo_6-1754453294329.png" alt="yeeloonkhoo_6-1754453294329.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_7-1754453301245.png" style="width: 711px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296965i43FDDC73DEA99C0B/image-dimensions/711x245?v=v2" width="711" height="245" role="button" title="yeeloonkhoo_7-1754453301245.png" alt="yeeloonkhoo_7-1754453301245.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Positive Test Run (Go to ReceiverA)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_8-1754453332394.png" style="width: 722px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296966i6866E31217303DD0/image-dimensions/722x353?v=v2" width="722" height="353" role="button" title="yeeloonkhoo_8-1754453332394.png" alt="yeeloonkhoo_8-1754453332394.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_9-1754453339676.png" style="width: 721px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296967i8112BC8CDBF0E9C8/image-dimensions/721x226?v=v2" width="721" height="226" role="button" title="yeeloonkhoo_9-1754453339676.png" alt="yeeloonkhoo_9-1754453339676.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Positive Test Run (Go to ReceiverB)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_10-1754453363443.png" style="width: 729px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296968i3A1E7D6F8D33D8ED/image-dimensions/729x382?v=v2" width="729" height="382" role="button" title="yeeloonkhoo_10-1754453363443.png" alt="yeeloonkhoo_10-1754453363443.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_11-1754453370341.png" style="width: 731px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296969i698259A4BF161D58/image-dimensions/731x230?v=v2" width="731" height="230" role="button" title="yeeloonkhoo_11-1754453370341.png" alt="yeeloonkhoo_11-1754453370341.png" /&gt;&lt;/span&gt;&lt;/DIV&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;DIV class=""&gt;&lt;P&gt;&lt;STRONG&gt;Negative Test Run (When no rule matches)&lt;/STRONG&gt;&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_12-1754453411369.png" style="width: 723px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296970i8FF09AC86EE09D82/image-dimensions/723x350?v=v2" width="723" height="350" role="button" title="yeeloonkhoo_12-1754453411369.png" alt="yeeloonkhoo_12-1754453411369.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="6"&gt;&lt;STRONG&gt;Where To Store The Rule Set?&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;One possible way is to store Json rule set in Partner Directory. SAP CPI do have UI to upload JSON to Partner Directory. Below are steps to upload JSON to Partner Directory:&lt;/P&gt;&lt;P&gt;Step 1: At CPI Monitor, go to 'Partner Directory'&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_13-1754453448667.png" style="width: 726px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296971i4FCA0935EEB344BF/image-dimensions/726x393?v=v2" width="726" height="393" role="button" title="yeeloonkhoo_13-1754453448667.png" alt="yeeloonkhoo_13-1754453448667.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 2: Click '+' to add:&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_14-1754453473223.png" style="width: 727px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296972iEC35698C02872843/image-dimensions/727x250?v=v2" width="727" height="250" role="button" title="yeeloonkhoo_14-1754453473223.png" alt="yeeloonkhoo_14-1754453473223.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 3: Maintain like below, browse to JSON rule set file, then 'Create'.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_15-1754453490322.png" style="width: 719px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296973iF6E60BA3CCB0190E/image-dimensions/719x408?v=v2" width="719" height="408" role="button" title="yeeloonkhoo_15-1754453490322.png" alt="yeeloonkhoo_15-1754453490322.png" /&gt;&lt;/span&gt;&lt;P class=""&gt;Step 4: After maintain, you should see like below:&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_16-1754453515700.png" style="width: 725px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296974iE72E49A562C64EEC/image-dimensions/725x281?v=v2" width="725" height="281" role="button" title="yeeloonkhoo_16-1754453515700.png" alt="yeeloonkhoo_16-1754453515700.png" /&gt;&lt;/span&gt;&lt;P&gt;Step 5: Replace the step 'getPDSimpleRule' with below script. This script get simpleRule JSON from Partner Directory.&lt;/P&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import com.sap.it.api.pd.PartnerDirectoryService
import com.sap.it.api.ITApiFactory
import com.sap.it.api.pd.BinaryData

def Message processData(Message message) {
    def service = ITApiFactory.getApi(PartnerDirectoryService.class, null);
    if(service == null){
        throw new IllegalStateException("Partner Directory Service not found");
    }

    def simpleRuleData = service.getParameter("SimpleRule", "DynamicRouter" , BinaryData.class)
    def simpleRule = new String(simpleRuleData.getData())

    message.setProperty("simpleRule", simpleRule)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P class=""&gt;Step 6: If future need to maintain the JSON rule set, come here, Edit..&lt;/P&gt;&lt;DIV class=""&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_17-1754453602659.png" style="width: 731px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296975i3E420371E824C31B/image-dimensions/731x463?v=v2" width="731" height="463" role="button" title="yeeloonkhoo_17-1754453602659.png" alt="yeeloonkhoo_17-1754453602659.png" /&gt;&lt;/span&gt;&lt;P&gt;then just Browse and upload updated JSON rule file. Filename doesn't matter, Partner Directory will auto rename.&lt;/P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="yeeloonkhoo_18-1754453622241.png" style="width: 714px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296976i102DE7669A18D00C/image-dimensions/714x369?v=v2" width="714" height="369" role="button" title="yeeloonkhoo_18-1754453622241.png" alt="yeeloonkhoo_18-1754453622241.png" /&gt;&lt;/span&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;FONT size="6"&gt;&lt;STRONG&gt;Closing Summary&lt;/STRONG&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;This approach doesn’t aim to replace complex rule engines, but for many real-world routing needs, it strikes the right balance: flexible, simple, and maintainable. If you’ve struggled with hardcoded routers or limited value mappings in CPI, this might be a cleaner path forward.&lt;/P&gt;&lt;P&gt;What do you think about this approach?&lt;/P&gt;&lt;P&gt;If you’ve tackled similar routing challenges in CPI, I’d be curious how you approached it. Feel free to share your thoughts, improvements, or alternative ideas.&lt;/P&gt;&lt;P&gt;Disclaimer: This is a pattern I sparked from EIP pattern(Dynamic Router) and made workable in CPI, but it hasn’t been used in real production environments yet. Use it at your own discretion.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;FONT size="6"&gt;References&lt;/FONT&gt;:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;[Ref 1] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/idoc-dispatching-use-case-for-the-processdirect-adapter/ba-p/13384618" target="_self"&gt;IDOC Dispatching - Use case for the ProcessDirect Adapter&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/98357"&gt;@ArielBravo&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 2] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cloud-integration-idoc-receiver-handler/ba-p/13514402" target="_self"&gt;SAP Cloud Integration IDoc Receiver Handler&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/218793"&gt;@aayushaggarwal&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 3] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/using-camel-s-simple-in-cpi-groovy-scripts/ba-p/13367923" target="_self"&gt;Using Camel's Simple in CPI Groovy scripts&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/166843"&gt;@engswee&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 4] &lt;A href="https://www.javadoc.io/doc/org.apache.camel/camel-core/2.15.0/org/apache/camel/builder/SimpleBuilder.html#matches(org.apache.camel.Exchange)" target="_self" rel="nofollow noopener noreferrer"&gt;Class SimpleBuilder JavaDoc&lt;/A&gt;&amp;nbsp;from Apache Camel&lt;/P&gt;&lt;P&gt;[Ref 5] &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/eipincpi-dynamic-router/ba-p/13437056" target="_self"&gt;EIPinCPI - Dynamic Router&lt;/A&gt;&amp;nbsp;&amp;amp; &lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/eipincpi-message-dispatcher/ba-p/13460165" target="_self"&gt;EIPinCPI - Message Dispatcher&lt;/A&gt;&amp;nbsp;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/169903"&gt;@bhalchandraswcg&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 6] &lt;A class="" href="https://community.sap.com/t5/technology-blog-posts-by-members/get-to-know-camel-s-simple-expression-language-in-sap-cloud-integration/ba-p/13292822" target="_self"&gt;Get to know Camel’s Simple expression language in SAP Cloud Integration&lt;/A&gt;&amp;nbsp;from&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/40"&gt;@MortenWittrock&lt;/a&gt;&lt;/P&gt;&lt;P&gt;[Ref 7]&amp;nbsp;&lt;A href="https://www.enterpriseintegrationpatterns.com/patterns/messaging/DynamicRouter.html" target="_self" rel="nofollow noopener noreferrer"&gt;DynamicRouter EIP&lt;/A&gt;&amp;nbsp;from Enterprise Integration Patterns (&lt;A href="https://www.enterpriseintegrationpatterns.com/" target="_blank" rel="noopener nofollow noreferrer"&gt;https://www.enterpriseintegrationpatterns.com/&lt;/A&gt;)&lt;/P&gt;&lt;/DIV&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-cpi-dynamic-router-with-external-rule-set-using-camel-simple/ba-p/14172873"/>
    <published>2025-08-06T06:40:26.867000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/optimized-idoc-routing-in-sap-ci-with-value-mapping-and-groovy-based/ba-p/14164335</id>
    <title>Optimized IDoc Routing in SAP CI with Value Mapping and Groovy-Based Receiver Determination</title>
    <updated>2025-08-08T10:07:51.299000+02:00</updated>
    <author>
      <name>ShreyasShenoy07</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1510706</uri>
    </author>
    <content>&lt;H2 id="toc-hId-1736018569"&gt;&lt;STRONG&gt;Target Audience&lt;/STRONG&gt;&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;This blog is primarily intended for the SAP Integration community seeking a strategy for &lt;STRONG&gt;routing outbound IDoc flows&lt;/STRONG&gt; from SAP ECC or S/4HANA systems—particularly for those migrating from &lt;STRONG&gt;SAP PI/PO to SAP Cloud Integration (Formerly known as SAP Cloud Platform Integration or SAP CPI)&lt;/STRONG&gt; and exploring effective alternatives to implement the same.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1539505064"&gt;Motivation&lt;/H2&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;In traditional SAP PI/PO-based landscapes, routing outbound IDocs from SAP ECC or S/4HANA systems is straightforward. A &lt;STRONG&gt;single t-RFC destination&lt;/STRONG&gt; and &lt;STRONG&gt;IDoc port&lt;/STRONG&gt; are typically configured in the sender system to forward all IDocs to SAP PI. Within SAP PI, routing is managed efficiently using the &lt;STRONG&gt;Integration Directory&lt;/STRONG&gt; and &lt;STRONG&gt;centralized runtime (AEX)&lt;/STRONG&gt;, enabling reuse of a &lt;STRONG&gt;single IDoc destination&lt;/STRONG&gt; across multiple interfaces and message types (MATMAS, INVOIC, DEBMAS, etc).&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_1-1753943278457.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294339i9CFB79236AC288C6/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_1-1753943278457.png" alt="ShreyasShenoy07_1-1753943278457.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify" style="text-align : justify;"&gt;However, when migrating to &lt;STRONG&gt;SAP Cloud Integration&lt;/STRONG&gt;, this simplicity is disrupted. Cloud Integration does not provide an equivalent mechanism for managing IDoc traffic using a central gateway or common destination. Instead, each interface often requires its own &lt;STRONG&gt;unique&lt;/STRONG&gt; &lt;STRONG&gt;endpoint, destination, and port&lt;/STRONG&gt;, making the configuration effort &lt;STRONG&gt;redundant and makes IDoc Routing complex&amp;nbsp; and operationally challenging, as part of this blog&lt;FONT color="#FF0000"&gt; I wanted to tackle these challenges and simplify this. &lt;FONT size="2" color="#000000"&gt;(* I wont go into the specific challenges of the different approches and rather focus on the problems I am trying to solve in the current approach)&lt;/FONT&gt;&lt;/FONT&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_3-1753944514940.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294349iE1B2982CA7BAD14F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_3-1753944514940.png" alt="ShreyasShenoy07_3-1753944514940.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1342991559"&gt;&amp;nbsp;&lt;/H2&gt;&lt;H2 id="toc-hId-1146478054"&gt;&lt;STRONG&gt;Solution Approach:&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_4-1753944610345.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294350i031118EDBDC1D2FC/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_4-1753944610345.png" alt="ShreyasShenoy07_4-1753944610345.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;As described in the flow above, we will implement the design using &lt;STRONG&gt;two iFlows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;IF_SAP_to_Generic_IDOCRouting&lt;/STRONG&gt;:&lt;BR /&gt;This iFlow receives IDoc XML messages from various SAP systems. It is responsible for &lt;STRONG&gt;receiver determination&lt;/STRONG&gt; and routes the message to the appropriate target iFlow based on routing logic.&lt;BR /&gt;In SAP PI/PO terminology, this iFlow handles the &lt;STRONG&gt;Inbound Processing&lt;/STRONG&gt; and &lt;STRONG&gt;Receiver Determination&lt;/STRONG&gt; steps of the integration pipeline.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt;&lt;/STRONG&gt;:&lt;BR /&gt;This iFlow is specific to the receiver system and handles &lt;STRONG&gt;transformation, mapping&lt;/STRONG&gt;, and other receiver-specific processing.&lt;BR /&gt;In SAP PI/PO terms, this iFlow corresponds to the &lt;STRONG&gt;Interface Determination&lt;/STRONG&gt; and &lt;STRONG&gt;Outbound Processing&lt;/STRONG&gt; steps of the integration pipeline.&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1079047268"&gt;&lt;STRONG&gt;IF_SAP_to_Generic_IDOCRouting&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/H3&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_3-1753938581456.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294314iB2D9605AB6E12964/image-size/large?v=v2&amp;amp;px=999" role="button" title="ShreyasShenoy07_3-1753938581456.png" alt="ShreyasShenoy07_3-1753938581456.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H4 id="toc-hId-1011616482"&gt;&lt;U&gt;Step 1: Extract Details from&lt;STRONG&gt;&amp;nbsp;EDI_DC40&amp;nbsp;&lt;/STRONG&gt;of IDoc xml and create&lt;/U&gt;&lt;STRONG&gt;&lt;U&gt;&amp;nbsp;Exchange properties&lt;/U&gt;:&amp;nbsp;&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The IDoc routing in this flow primarily relies on &lt;STRONG&gt;Value Mappings&lt;/STRONG&gt; and &lt;STRONG&gt;Groovy scripts&lt;/STRONG&gt;. In this step, the necessary inputs and variables are initialized—these are later used in Groovy script execution to extract routing details from the configured Value Mappings.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753752660293.png" style="width: 565px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293039i38CD6DBBAEECEED4/image-dimensions/565x198?v=v2" width="565" height="198" role="button" title="ShreyasShenoy07_0-1753752660293.png" alt="ShreyasShenoy07_0-1753752660293.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;For example&lt;/STRONG&gt;, consider a sender system &lt;STRONG&gt;Q10&lt;/STRONG&gt; (the quality environment of the x10 SAP system with client number 001) sending an &lt;STRONG&gt;INVOIC IDoc with an extension type ZINVOIC01&lt;/STRONG&gt;. The properties are initialized as below.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_0-1753855230088.png" style="width: 200px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293675i3ED23E572A630EFB/image-size/small?v=v2&amp;amp;px=200" role="button" title="ShreyasShenoy07_0-1753855230088.png" alt="ShreyasShenoy07_0-1753855230088.png" /&gt;&lt;/span&gt;&amp;nbsp; &amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ShreyasShenoy07_1-1753855452674.png" style="width: 527px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293680iFA66E3B149753CFB/image-dimensions/527x151?v=v2" width="527" height="151" role="button" title="ShreyasShenoy07_1-1753855452674.png" alt="ShreyasShenoy07_1-1753855452674.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; variable is initialized to zero and is later used during processing when the same IDoc meets conditions for &lt;STRONG&gt;multiple receivers&lt;/STRONG&gt;, ensuring it is sent to each applicable receiver accordingly.&lt;/P&gt;&lt;H4 id="toc-hId-815102977"&gt;&lt;U&gt;Step 2: Fetch&amp;nbsp;&lt;STRONG&gt;Receiver List&amp;nbsp;&lt;/STRONG&gt;for the&amp;nbsp;&lt;STRONG&gt;IDOC&amp;nbsp;&lt;/STRONG&gt;from the Value Mapping tables using Exchange properties:&lt;BR /&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;SPAN&gt;For this we would need to maintain two value mappings&lt;BR /&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H5 id="toc-hId-747672191"&gt;&lt;SPAN&gt;Value Mapping for&amp;nbsp;&lt;STRONG&gt;Sender Partner Number&lt;/STRONG&gt; to &lt;STRONG&gt;Sender Identifier Conversion&lt;/STRONG&gt;:&lt;BR /&gt;&lt;/SPAN&gt;&lt;/H5&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753857368060.png" style="width: 566px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293732i06106918904C2B47/image-dimensions/566x242?v=v2" width="566" height="242" role="button" title="ShreyasShenoy07_0-1753857368060.png" alt="ShreyasShenoy07_0-1753857368060.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-justify lia-indent-padding-left-60px" style="text-align : justify; padding-left : 60px;"&gt;&lt;STRONG&gt;As an example&lt;/STRONG&gt;, I have maintained the details of SAP systems &lt;STRONG&gt;x10&lt;/STRONG&gt; and &lt;STRONG&gt;x20&lt;/STRONG&gt; across their &lt;STRONG&gt;Development&lt;/STRONG&gt;, &lt;STRONG&gt;Quality&lt;/STRONG&gt;, and &lt;STRONG&gt;Production&lt;/STRONG&gt; environments. You would similarly maintain all relevant SAP systems and their corresponding identifiers in the &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt; used for IDoc routing. This mapping typically requires updates only when &lt;STRONG&gt;new SAP systems are added&lt;/STRONG&gt; or &lt;STRONG&gt;existing systems are migrated (when SIDs change)&lt;/STRONG&gt;, which are relatively infrequent events.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;&lt;H5 id="toc-hId-551158686"&gt;&lt;SPAN&gt;Value Mapping for ReceiverList, Receiver Determination and Receiver Target IFlow URls:&lt;/SPAN&gt;&lt;/H5&gt;&lt;P class="lia-align-justify lia-indent-padding-left-60px" style="text-align : justify; padding-left : 60px;"&gt;The second &lt;STRONG&gt;Value Mapping&lt;/STRONG&gt; is maintained for each unique combination of &lt;STRONG&gt;SAP sender system&lt;/STRONG&gt; and &lt;STRONG&gt;IDoc type&lt;/STRONG&gt;.&lt;BR /&gt;For example, to define receiver determination conditions for the &lt;STRONG&gt;IDOC:&amp;nbsp;INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt; sent from the SAP system &lt;STRONG&gt;x10&lt;/STRONG&gt;, you would create a corresponding Value Mapping entry as shown below.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753869386606.png" style="width: 700px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293819iEB528661945AE51C/image-dimensions/700x290?v=v2" width="700" height="290" role="button" title="ShreyasShenoy07_0-1753869386606.png" alt="ShreyasShenoy07_0-1753869386606.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The ValueMapping will have 3 Mapping with agency as &lt;STRONG&gt;x10.INVOIC.INVOIC01.ZINVOIC01 (sender Identifier&lt;/STRONG&gt;.&lt;STRONG&gt;IDOC)&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;IDOCName to ReceiverList&lt;/STRONG&gt; : This mapping holds a list of all receivers applicable for a specific IDoc.&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;ReceiverName to ReceiverCondition&lt;/STRONG&gt;: This defines the &lt;STRONG&gt;receiver determination condition&lt;/STRONG&gt; for each receiver. The conditions should be maintained using &lt;STRONG&gt;XPath expressions&lt;/STRONG&gt; to evaluate the IDoc content dynamically.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_1-1753869746094.png" style="width: 656px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293820i4EA51D75A75B461D/image-dimensions/656x155?v=v2" width="656" height="155" role="button" title="ShreyasShenoy07_1-1753869746094.png" alt="ShreyasShenoy07_1-1753869746094.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;ReceiverName to ReceiverIFlowAddress:&lt;/STRONG&gt; This maps each receiver to the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt; of its corresponding integration flow (&lt;A href="#toc-hId-1146478054" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt;&lt;/STRONG&gt;&lt;/A&gt;) , as described earlier in the solution approach.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_2-1753869917703.png" style="width: 657px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/293821i51E043843F980362/image-dimensions/657x315?v=v2" width="657" height="315" role="button" title="ShreyasShenoy07_2-1753869917703.png" alt="ShreyasShenoy07_2-1753869917703.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Now that we've covered how the &lt;STRONG&gt;Value Mappings&lt;/STRONG&gt; are maintained, let’s look at how the &lt;STRONG&gt;Groovy script&lt;/STRONG&gt;&amp;nbsp;fetches the appropriate values:&lt;BR /&gt;&lt;BR /&gt;&lt;STRONG&gt;&lt;U&gt;1. Fetch senderIdentifier&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;The &lt;STRONG&gt;senderIdentifier&lt;/STRONG&gt; is retrieved using the exchange property &lt;STRONG&gt;senderPartnerNumber&lt;/STRONG&gt; (set in &lt;A href="#toc-hId-1011616482" target="_self" rel="nofollow noopener noreferrer"&gt;&lt;STRONG&gt;step 1&lt;/STRONG&gt;).&lt;/A&gt; This value is looked up from the&amp;nbsp;&lt;STRONG&gt;&lt;A href="#toc-hId-747672191" target="_self" rel="nofollow noopener noreferrer"&gt;first ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;:&lt;BR /&gt;If a message is sent from system &lt;STRONG&gt;Q10&lt;/STRONG&gt; with sender partner number &lt;STRONG&gt;Q10_001&lt;/STRONG&gt;, the senderIdentifier fetched from the Value Mapping would be &lt;STRONG&gt;x10&lt;/STRONG&gt;.&lt;STRONG&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;U&gt;2. Construct Agency Key&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;Using the &lt;STRONG&gt;senderIdentifier&lt;/STRONG&gt; and other exchange properties (set in &lt;STRONG&gt;&lt;A href="#toc-hId-1011616482" target="_self" rel="nofollow noopener noreferrer"&gt;step 1&lt;/A&gt;&lt;/STRONG&gt;), the &lt;STRONG&gt;agency key&lt;/STRONG&gt; is constructed. This key will be used to retrieve routing information from the &lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&lt;U&gt;Agency Format:&lt;/U&gt;&lt;BR /&gt;&lt;FONT color="#FF0000"&gt;&amp;lt;senderIdentifier&amp;gt;.&amp;lt;messageType&amp;gt;.&amp;lt;IDocType&amp;gt;[.&amp;lt;extensionType&amp;gt;]&lt;/FONT&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;senderIdentifier&lt;/STRONG&gt; – from first Value Mapping&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;messageType &lt;/STRONG&gt;– from exchange property&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;IDocType &lt;/STRONG&gt;– from exchange property&lt;STRONG&gt;&lt;BR /&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;extensionType&lt;/STRONG&gt; – from exchange property (optional)&lt;BR /&gt;&lt;STRONG&gt;Example:&lt;BR /&gt;For an INVOIC IDoc of type INVOIC01 with extension ZINVOIC01 sent from system x10, the agency would be: x10.INVOIC.INVOIC01.ZINVOIC01&lt;BR /&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;&lt;STRONG&gt;&lt;U&gt;3. Fetch Receiver List&lt;/U&gt;&lt;BR /&gt;&lt;/STRONG&gt;Using the constructed agency key, the receiver list is retrieved from the &lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping.&lt;/A&gt;&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Example&lt;/STRONG&gt;:&lt;BR /&gt;For the agency &lt;STRONG&gt;x10.INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt;, the receiver list will be:&lt;BR /&gt;&lt;STRONG&gt;Receiver1&lt;/STRONG&gt;, &lt;STRONG&gt;Receiver2&lt;/STRONG&gt;, &lt;STRONG&gt;Receiver3&lt;BR /&gt;&lt;/STRONG&gt;Value Mapping sample call:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01', 'IDOCName', 
  'INVOIC.INVOIC01.ZINVOIC01', 'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'ReceiverList')&lt;/code&gt;&lt;/pre&gt;&lt;H4 id="toc-hId-225562462"&gt;&lt;U&gt;&lt;FONT&gt;Step3: Execute&lt;STRONG&gt;&amp;nbsp;Receiver Determination Conditions&amp;nbsp;&lt;/STRONG&gt;(Groovy Script) from&amp;nbsp;&lt;/FONT&gt;&lt;FONT size="3"&gt;Value Mapping&lt;/FONT&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The Groovy script then iterates through the receiver list, fetching the corresponding receiver determination condition for each receiver and evaluating it against the IDoc content using XPath.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;// Fetch condition from Value Mapping
currentReceiverCondition = valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01',
  'ReceiverName',
  'Receiver1',
  'x10.INVOIC.INVOIC01.ZINVOIC01',
  'ReceiverCondition'
)
// Evaluate condition
def expr = xpath.compile(currentReceiverCondition as String)
def result = expr.evaluate(doc, XPathConstants.BOOLEAN)&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;If the condition evaluates to &lt;STRONG&gt;true&lt;/STRONG&gt;, the receiver is added to the exchange property &lt;STRONG&gt;determinedReceivers&lt;/STRONG&gt;. A counter variable &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt; is also maintained to track how many receivers matched successfully.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753885613367.png" style="width: 642px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294084i7BAA79E06D809669/image-dimensions/642x255?v=v2" width="642" height="255" role="button" title="ShreyasShenoy07_0-1753885613367.png" alt="ShreyasShenoy07_0-1753885613367.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;At the end of this step, three additional exchange properties will be available: &lt;STRONG&gt;determinedReceivers&lt;/STRONG&gt;, &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt;, and &lt;STRONG&gt;IDOCName&lt;/STRONG&gt; (which holds the constructed agency key).&lt;/P&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;In the example discussed, lets consider if the conditions are satisfied for &lt;STRONG&gt;Receiver2&lt;/STRONG&gt; and &lt;STRONG&gt;Receiver3&lt;/STRONG&gt;, then the &lt;STRONG&gt;determinedReceivers &lt;/STRONG&gt;list will contain both, and the &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt; will be set to &lt;STRONG&gt;2&lt;/STRONG&gt;.&lt;BR /&gt;The &lt;STRONG&gt;IDOCName &lt;/STRONG&gt;property (i.e., the &lt;STRONG&gt;agency key:&amp;nbsp;x10.INVOIC.INVOIC01.ZINVOIC01&lt;/STRONG&gt;) is also stored to be reused in subsequent steps of the flow.&lt;/P&gt;&lt;H4 id="toc-hId--468668138"&gt;&lt;U&gt;&lt;FONT&gt;Step 4:&amp;nbsp;&lt;/FONT&gt;Send Message to&amp;nbsp;&lt;STRONG&gt;Receiver Specific flow&lt;/STRONG&gt;&amp;nbsp;for the&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;Determined Receivers&amp;nbsp;&lt;/STRONG&gt;&lt;/U&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;In this step, a &lt;STRONG&gt;looping process call&lt;/STRONG&gt; is executed, which repeatedly invokes a &lt;STRONG&gt;local integration process&lt;/STRONG&gt; to send the message to each receiver identified in the previous step—&lt;STRONG&gt;one at a time&lt;/STRONG&gt;.&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The property &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; is incremented after each message is successfully sent to a determined receiver. The loop continues until &lt;STRONG&gt;sentReceiverCount&lt;/STRONG&gt; equals &lt;STRONG&gt;determinedReceiverCount&lt;/STRONG&gt;, at which point the process terminates.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ShreyasShenoy07_0-1753890299180.png" style="width: 627px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294105i207D033209104225/image-dimensions/627x279?v=v2" width="627" height="279" role="button" title="ShreyasShenoy07_0-1753890299180.png" alt="ShreyasShenoy07_0-1753890299180.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;To send the message to a specific receiver, a &lt;STRONG&gt;Groovy script&lt;/STRONG&gt; is used to retrieve the &lt;STRONG&gt;receiver name&lt;/STRONG&gt; from the &lt;STRONG&gt;determinedReceivers &lt;/STRONG&gt;list. Using this name, the script fetches the &lt;STRONG&gt;endpoint URL&lt;/STRONG&gt; of the corresponding receiver-specific iFlow from the&amp;nbsp;&lt;STRONG&gt;&lt;A href="#toc-hId-551158686" target="_self" rel="nofollow noopener noreferrer"&gt;second ValueMapping&lt;/A&gt;.&lt;/STRONG&gt;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;Value Mapping sample call:&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;valueMapApi.getMappedValue(
  'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'IDOCName', 
  'INVOIC.INVOIC01.ZINVOIC01', 
  'x10.INVOIC.INVOIC01.ZINVOIC01', 
  'ReceiverIFlowAddress'
)&lt;/code&gt;&lt;/pre&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;The fetched endpoint URL is then assigned to the header property &lt;STRONG&gt;receiverProcessDirectURL&lt;/STRONG&gt;, which is used by the ProcessDirect adapter to route the message to the appropriate receiver-specific iFlow.&amp;nbsp;&lt;STRONG&gt;IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface Description&amp;gt; &lt;/STRONG&gt;which would&amp;nbsp;handle&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;transformation, mapping&lt;/STRONG&gt;, and other receiver-specific processing.&lt;/P&gt;&lt;P class="lia-align-center" style="text-align: center;"&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ShreyasShenoy07_0-1753893349763.png" style="width: 544px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294110i08D285AD63C466EF/image-dimensions/544x232?v=v2" width="544" height="232" role="button" title="ShreyasShenoy07_0-1753893349763.png" alt="ShreyasShenoy07_0-1753893349763.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P class="lia-align-left lia-indent-padding-left-30px" style="text-align : left; padding-left : 30px;"&gt;&amp;nbsp;&lt;/P&gt;&lt;H3 id="toc-hId--371778636"&gt;Advantages of the Proposed IDoc Routing Strategy in SAP Cloud Integration&lt;/H3&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;&amp;nbsp;The strategy outlined in this blog offers a &lt;STRONG&gt;scalable, modular, and maintainable alternative&lt;/STRONG&gt;&amp;nbsp;that aligns closely with enterprise integration requirements. Below are the key advantages of this design:&lt;/P&gt;&lt;H4 id="toc-hId--861695148"&gt;1. Reusability of Integration Flows&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Instead of creating a separate iFlow for each IDoc-to-receiver combination, this approach separates:&lt;BR /&gt;Generic routing logic&amp;nbsp;(IF_SAP_to_Generic_IDOCRouting)&lt;BR /&gt;Receiver-specific logic(IF_SAP_to_&amp;lt;Receiver&amp;gt;_&amp;lt;Interface&amp;gt;)&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Reduces development effort and avoids duplication across iFlows, enabling a clean and modular architecture.&lt;/P&gt;&lt;H4 id="toc-hId--1058208653"&gt;2. Centralized Routing with Value Mappings&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Routing conditions and receiver lists are managed through &lt;STRONG&gt;Value Mapping artifacts.&lt;BR /&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Updates to routing logic can be done without modifying or redeploying iFlows—just update the Value Mapping configuration.&lt;/P&gt;&lt;H4 id="toc-hId--1254722158"&gt;&lt;STRONG&gt;3. Scalable Across Systems and IDoc Variants&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;Routing logic is built dynamically using:&lt;BR /&gt;- Sender system identifier&lt;BR /&gt;- Message type&lt;BR /&gt;- IDoc type&lt;BR /&gt;- (Optional) Extension type&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Supports complex multi-system, multi-IDoc scenarios without inflating the number of artifacts or flows.&lt;/P&gt;&lt;H4 id="toc-hId--1451235663"&gt;4. Native Support for Multi-Receiver Scenarios&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The use of Groovy logic and looping constructs enables routing to multiple receivers based on evaluated XPath conditions.&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Enables 1:n routing scenarios, ensuring the same IDoc can be routed to multiple receivers without message duplication logic.&lt;/P&gt;&lt;H4 id="toc-hId--1647749168"&gt;&lt;STRONG&gt;5. Low Maintenance and High Adaptability&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;This architecture requires &lt;STRONG&gt;Value Mapping updates&lt;/STRONG&gt; only when:&lt;BR /&gt;- New SAP systems are added&lt;BR /&gt;- Existing systems are migrated&lt;BR /&gt;- Additional receiver conditions are introduced&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Minimal maintenance effort over time; no need for frequent design or deployment changes.&lt;/P&gt;&lt;H4 id="toc-hId--1844262673"&gt;&lt;STRONG&gt;6. Aligned with SAP PI/PO Routing Model&lt;/STRONG&gt;&lt;/H4&gt;&lt;P class="lia-indent-padding-left-60px" style="padding-left : 60px;"&gt;The flow structure mirrors familiar SAP PI/PO pipeline steps, such as:&lt;BR /&gt;- Receiver Determination&lt;BR /&gt;- Interface Determination&lt;BR /&gt;- Outbound Processing&lt;BR /&gt;&lt;STRONG&gt;Benefit:&lt;/STRONG&gt; Simplifies migration for teams transitioning from SAP PI/PO to SAP CI, while preserving key routing concepts. Also there is a scope for automation where you could write a code to automate creation of Valuemapping. The existing&amp;nbsp; ports can be reused by updating the RFC destination pointing to the SAP CI&amp;nbsp;&lt;/P&gt;&lt;P class="lia-indent-padding-left-30px" style="padding-left : 30px;"&gt;This approach attempts to addresses the Technical limitations of SAP CI’s IDoc handling, and also supports sustainable growth and &lt;STRONG&gt;cleaner&lt;/STRONG&gt; and &lt;STRONG&gt;maintainable&lt;/STRONG&gt; integration landscapes.&lt;/P&gt;&lt;H3 id="toc-hId--1747373171"&gt;Additional Considerations for Retry and Reprocessing&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Retry and error handling&lt;/STRONG&gt; should be implemented within each receiver-specific flow to manage failures independently for every receiver.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;It is advisable to &lt;STRONG&gt;avoid broadcasting IDocs directly from SAP Cloud Integration&lt;/STRONG&gt;, especially in high-volume scenarios like master data distribution across multiple systems. This is due to potential limitations in storing failed messages within the SAP Cloud Integration tenant. Additionally, in broadcast cases, the retry mechanism should support resending only to the receivers where failures occurred, not all recipients.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Exceptions can be returned to the sender system&lt;/STRONG&gt; (e.g., via SOAP fault) so that errors are reflected in the originating SAP system(&lt;A href="https://help.sap.com/docs/cloud-integration/sap-cloud-integration/define-error-configuration" target="_self" rel="noopener noreferrer"&gt;Return Exception to Sender&lt;/A&gt;&amp;nbsp;). This enables visibility in transaction logs like WE02/WE05, helping to identify and reprocess failed IDocs more effectively.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Batch jobs in the SAP backend&lt;/STRONG&gt; responsible for reprocessing IDocs should be adjusted based on the new failure status codes introduces by this setup&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId--1650483669"&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This blog attempted to present a &lt;STRONG&gt;scalable&lt;/STRONG&gt;, &lt;STRONG&gt;maintainable&lt;/STRONG&gt;, &lt;STRONG&gt;modular&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&amp;nbsp;&lt;STRONG&gt;operationally efficient&lt;/STRONG&gt; strategy for receiver determination of outbound IDocs from SAP system by leveraging Groovy script and Value Mapping. Also by decoupling the routing and receiver-specific logic into two separate iFlows, the solution ensures better reusability, easier maintenance, and greater control over message processing.&lt;BR /&gt;&lt;BR /&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/optimized-idoc-routing-in-sap-ci-with-value-mapping-and-groovy-based/ba-p/14164335"/>
    <published>2025-08-08T10:07:51.299000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843</id>
    <title>AI Adapter for SAP Integration Suite</title>
    <updated>2025-08-08T14:55:41.301000+02:00</updated>
    <author>
      <name>Shashank_K</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1555850</uri>
    </author>
    <content>&lt;P&gt;The AI Adapter for SAP Integration Suite is a Generative AI driven capability available exclusively on SAP Integration Suite. For the first time in SAP CI, leverage SAP AI Core’s GenAI Hub features that allow you to achieve smarter integration solutions for your business.&lt;/P&gt;&lt;P&gt;AICore-GenAIHub variant allows you to connect to orchestration services in SAP AI Core. This service enables the use of various generative AI models with a unified code, configuration, and deployment.&lt;/P&gt;&lt;P&gt;The Custom-OpenAI-REST variant of the AI adapter works with the APIs of OpenAI that allows developers to access and integrate with artificial intelligence models into their applications, enabling tasks like text generation, image creation, and more.&lt;/P&gt;&lt;H2 id="toc-hId-1736976715"&gt;AI Adapter Features&lt;/H2&gt;&lt;P&gt;The AI Adapter has the following features:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;AI Adapter has two variants available:&amp;nbsp;&lt;STRONG&gt;AICore-GenAIHub&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Custom-OpenAI-REST&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;AI Adapter supports&amp;nbsp;&lt;STRONG&gt;OAuth2 Client Credential&lt;/STRONG&gt;&amp;nbsp;(&lt;EM&gt;User Credentials)&lt;/EM&gt;&amp;nbsp;and&lt;STRONG&gt;&amp;nbsp;API Key alias (&lt;/STRONG&gt;&lt;EM&gt;Secure Parameter&lt;/EM&gt;&lt;STRONG&gt;)&lt;/STRONG&gt;&amp;nbsp;authentication methods for the AICore-GenAIHub and Custom-OpenAI-REST variant respectively.&lt;/LI&gt;&lt;LI&gt;AICore-GenAIHub employs harmonized API to allow you to use different foundation models without changing the client code.&lt;/LI&gt;&lt;LI&gt;You can configure orchestration to enable consumption of&amp;nbsp;&lt;STRONG&gt;multiple GenAI models&lt;/STRONG&gt;&amp;nbsp;within a single workflow.&lt;/LI&gt;&lt;LI&gt;Custom-OpenAI-REST allows you to access a range of features using APIs like&amp;nbsp;&lt;STRONG&gt;Chat Completions&lt;/STRONG&gt;,&amp;nbsp;&lt;STRONG&gt;Platform&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Responses&lt;/STRONG&gt;.&lt;/LI&gt;&lt;LI&gt;Custom-OpenAI-REST supports&amp;nbsp;&lt;STRONG&gt;Basic&lt;/STRONG&gt;&amp;nbsp;configuration type that provides a convenient processing capability for supported versions whereas&amp;nbsp;&lt;STRONG&gt;Advanced&lt;/STRONG&gt;&amp;nbsp;enables proficient users to perform calls with greater control while connecting to any API endpoint.&amp;nbsp;&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1540463210"&gt;&lt;STRONG&gt;Example Scenario : Sentiment Analysis on&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Customer Feedback&amp;nbsp;&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;In this blog post, we will demo a scenario to get you started with a basic AI Adapter operation. We query LLM to perform sentiment analysis on user feedback.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ashishkuvvarapu_0-1754423110247.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296900i4F81AE434ED561FB/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_0-1754423110247.png" alt="ashishkuvvarapu_0-1754423110247.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;The following prerequisites are handy while getting started with GenAI Hub&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;To get started with Gen AI Hub, see &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/generative-ai-hub-in-sap-ai-core?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Getting Started with GenAIHub&lt;/A&gt;.&lt;/LI&gt;&lt;LI&gt;To consume GenAI models using Orchestration, see &lt;A href="https://developers.sap.com/tutorials/ai-core-orchestration-consumption.html" target="_blank" rel="noopener noreferrer"&gt;AI Core Orchestration Consumption&lt;/A&gt;.&lt;/LI&gt;&lt;/UL&gt;&lt;H2 id="toc-hId-1343949705"&gt;&lt;STRONG&gt;Prepare User feedback using Content Modifier&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;One of the first tasks we do after creating a new integration flow is to prepare contrasting user feedback to be analyzed. As you can notice, one of them speaks highly of the blog (we assume this to be a product) and other feedback is quite the opposite.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_2-1754423266585.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296902iC34F4417D64D4135/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_2-1754423266585.png" alt="ashishkuvvarapu_2-1754423266585.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1147436200"&gt;&lt;STRONG&gt;Connect to GenAI Hub using the AI Adapter&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;The &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab contains connection and authentication parameters to connect to AICore-GenAIHub.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-left" image-alt="ashishkuvvarapu_3-1754423325248.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296903i98C9383F48955825/image-size/medium?v=v2&amp;amp;px=400" role="button" title="ashishkuvvarapu_3-1754423325248.png" alt="ashishkuvvarapu_3-1754423325248.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;TABLE border="1" width="99.88814317673378%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the GenAIHub address.&lt;/P&gt;&lt;P&gt;Example: &lt;A href="https://api.ai.{tenant_name}.{datacenter}.ml.hana.ondemand.com" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.ai.{tenant_name}.{datacenter}.ml.hana.ondemand.com&lt;/A&gt;.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the name of the OAuth2 Client Credentials security artifact.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Reuse Connection&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Enable to reuse the connection.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Connection Timeout(in ms)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the maximum waiting time (in milliseconds) for the connection to be established.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="33.1096196868009%"&gt;&lt;P&gt;&lt;STRONG&gt;Response Timeout(in ms)&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="66.77852348993288%"&gt;&lt;P&gt;Specify the maximum waiting time (in milliseconds) for a response message.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-950922695"&gt;&lt;STRONG&gt;Prompt an LLM using AI Adapter&lt;/STRONG&gt;&lt;/H2&gt;&lt;P&gt;This example demonstrates how to prompt a large language model (LLM) to perform sentiment analysis on for user feedback text. The model is instructed to analyze the sentiment of the review and respond with just one word—either “positive” or “negative.” Triple backticks are used to clearly highlight the review text, ensuring there's no ambiguity about what should be analyzed. The structure is intended to produce straightforward and concise sentiment assessments.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_4-1754423578445.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296904i3D4899B5867B7801/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_4-1754423578445.png" alt="ashishkuvvarapu_4-1754423578445.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;TABLE width="100%"&gt;&lt;TBODY&gt;&lt;TR&gt;&lt;TD&gt;&lt;STRONG&gt;Parameter&lt;/STRONG&gt;&lt;/TD&gt;&lt;TD&gt;&lt;P&gt;&lt;STRONG&gt;Description&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Operation&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select the operation from the dropdown.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the Deployment ID for this Orchestration.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the AI Resource Group configured for the specific orchestration deployment.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select an option to specify the source for request payload:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Exchange Body&lt;/STRONG&gt; allows you to specify required structure and values.&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;UI Configurable&lt;/STRONG&gt;&lt;SPAN&gt; provides user friendly fields to create the payload automatically.&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Model&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Select the required AI model for your operation.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Role&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the role to be assumed:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;assistant&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;system&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;user&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;TR&gt;&lt;TD width="50%"&gt;&lt;P&gt;&lt;STRONG&gt;Input&lt;/STRONG&gt;&lt;/P&gt;&lt;/TD&gt;&lt;TD width="50%"&gt;&lt;P&gt;Specify the content containing the instruction to be carried out.&lt;/P&gt;&lt;/TD&gt;&lt;/TR&gt;&lt;/TBODY&gt;&lt;/TABLE&gt;&lt;H2 id="toc-hId-754409190"&gt;Run and Verify Output&lt;/H2&gt;&lt;P&gt;After saving the above configuration, deploy the flow and verify that the sentiment has been correctly analyzed.&lt;/P&gt;&lt;P&gt;You should be able to see some of them as shown below:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="ashishkuvvarapu_5-1754423897849.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/296906iEBFEDB3CD38A15F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ashishkuvvarapu_5-1754423897849.png" alt="ashishkuvvarapu_5-1754423897849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;H2 id="toc-hId-555060832" id="toc-hId-557895685"&gt;&lt;SPAN&gt;Quick Links&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;For detailed information about AI configuration, see&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Adapter&lt;/A&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;and&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;A href="https://api.sap.com/odata/1.0/catalog.svc/Files('6a7cc59b207e4eb384f3af502f8b503f')/$value" target="_blank" rel="noopener noreferrer"&gt;AI Adapter Guide&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note&lt;/STRONG&gt;: The AI adapter is available as part of your SAP Integration Suite license.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/ai-adapter-for-sap-integration-suite/ba-p/14175843"/>
    <published>2025-08-08T14:55:41.301000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/smb-adapter-feature-on-premise-connectivity-via-sap-cloud-connector/ba-p/14175856</id>
    <title>SMB Adapter Feature: On-Premise Connectivity via SAP Cloud Connector</title>
    <updated>2025-08-08T15:01:18.273000+02:00</updated>
    <author>
      <name>Shashank_K</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1555850</uri>
    </author>
    <content>&lt;P&gt;The Microsoft SMB (Server Message Block) Adapter now supports on-premise connectivity via the SAP Cloud Connector. SAP Integration Suite supports this using the proxy type ‘&lt;STRONG&gt;On-Premise’&lt;/STRONG&gt;.&lt;BR /&gt;&lt;BR /&gt;You can securely integrate your SAP cloud applications with your &lt;STRONG&gt;on-premise&lt;/STRONG&gt; SMB server. It offers reliable authentication and authorization mechanisms to ensure that only authorized users and systems can access on-premises resources.&lt;/P&gt;&lt;P&gt;Following the &lt;A href="https://help.sap.com/whats-new/5793247a5d5741beb0decc5b7dee1160?q=SMB+Adapter" target="_blank" rel="noopener noreferrer"&gt;July What's New release&lt;/A&gt; announcement, SMB Adapter for SAP Integration Suite ships with this Cloud Connector capability.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753966385459.png" style="width: 581px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294571i574063AC48B66D97/image-dimensions/581x215?v=v2" width="581" height="215" role="button" title="Divij_Balguri09_0-1753966385459.png" alt="Divij_Balguri09_0-1753966385459.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To achieve this setup, you need to perform the following steps:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;Configure a new &lt;STRONG&gt;Cloud to On-Premise&lt;/STRONG&gt; system mapping in your Cloud Connector.&lt;/LI&gt;&lt;LI&gt;Configure the SMB Adapter to &lt;STRONG&gt;Create&lt;/STRONG&gt;, &lt;STRONG&gt;Read&lt;/STRONG&gt;, and &lt;STRONG&gt;Write&lt;/STRONG&gt; on your On-Premise File Server.&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1736976749"&gt;&lt;SPAN&gt;Configure Cloud to On-Premise system mapping in your Cloud Connector&lt;/SPAN&gt;&lt;/H2&gt;&lt;OL&gt;&lt;LI&gt;Navigate to your Cloud connector login page and enter your credentials.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753969403153.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294626i0E08D4CF43301621/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divij_Balguri09_0-1753969403153.png" alt="Divij_Balguri09_0-1753969403153.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Now, you must define a subaccount for&amp;nbsp;Cloud Connector. Select &lt;STRONG&gt;Define Subaccount&lt;/STRONG&gt;&lt;SPAN&gt;, enter the necessary details, and click &lt;/SPAN&gt;&lt;STRONG&gt;Save&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_12-1753966517372.png" style="width: 473px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294584i196436B4A2E1096A/image-dimensions/473x342?v=v2" width="473" height="342" role="button" title="Divij_Balguri09_12-1753966517372.png" alt="Divij_Balguri09_12-1753966517372.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;Choose the &lt;STRONG&gt;Cloud To On-Premises&lt;/STRONG&gt; option from the menu and click&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_2-1754466763114.png" style="width: 675px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297061iBF98EA06040A49CA/image-dimensions/675x209?v=v2" width="675" height="209" role="button" title="Divij_Balguri09_2-1754466763114.png" alt="Divij_Balguri09_2-1754466763114.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select Back-end Type as &lt;STRONG&gt;Non-SAP System&lt;/STRONG&gt; and click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_15-1753966839160.png" style="width: 540px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294588i2514502FAC67CB80/image-dimensions/540x243?v=v2" width="540" height="243" role="button" title="Divij_Balguri09_15-1753966839160.png" alt="Divij_Balguri09_15-1753966839160.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Select Protocol as &lt;STRONG&gt;TCP&lt;/STRONG&gt; and click&lt;STRONG&gt; Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_16-1753966872615.png" style="width: 535px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294589i196C9537A4636510/image-dimensions/535x241?v=v2" width="535" height="241" role="button" title="Divij_Balguri09_16-1753966872615.png" alt="Divij_Balguri09_16-1753966872615.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Here you can specify your On-Premise&amp;nbsp;SMB server &amp;amp; port that needs to be set up for connectivity. Populate &lt;STRONG&gt;Internal Host&lt;/STRONG&gt;&amp;nbsp;and&amp;nbsp;&lt;STRONG&gt;Port or Port Range&lt;/STRONG&gt; to proceed.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_17-1753966953415.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294590i477F7B74BE2C6E74/image-dimensions/538x242?v=v2" width="538" height="242" role="button" title="Divij_Balguri09_17-1753966953415.png" alt="Divij_Balguri09_17-1753966953415.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Specify the &lt;STRONG&gt;Virtual Host&lt;/STRONG&gt; and &lt;STRONG&gt;Virtual Port &lt;/STRONG&gt;that is exposed for connectivity with the SMB Adapter.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_18-1753967011756.png" style="width: 536px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294591i165C603BD07E85F9/image-dimensions/536x242?v=v2" width="536" height="242" role="button" title="Divij_Balguri09_18-1753967011756.png" alt="Divij_Balguri09_18-1753967011756.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Enter the &lt;STRONG&gt;Description&lt;/STRONG&gt; as required and click &lt;STRONG&gt;Next&lt;/STRONG&gt;.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_19-1753967036668.png" style="width: 537px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294592i5F0B451AB4B1428E/image-dimensions/537x243?v=v2" width="537" height="243" role="button" title="Divij_Balguri09_19-1753967036668.png" alt="Divij_Balguri09_19-1753967036668.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Verify the details and click &lt;STRONG&gt;Finish&lt;/STRONG&gt;.&lt;BR /&gt;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: Ensure to enable the &lt;STRONG&gt;Check Internal Host&lt;/STRONG&gt;).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_20-1753967069867.png" style="width: 538px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294593iB46FEFDB069CA627/image-dimensions/538x243?v=v2" width="538" height="243" role="button" title="Divij_Balguri09_20-1753967069867.png" alt="Divij_Balguri09_20-1753967069867.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;LI&gt;Now, you can view your details in your &lt;STRONG&gt;Cloud To On-Premise.&lt;/STRONG&gt;&lt;BR /&gt;(&lt;STRONG&gt;Note&lt;/STRONG&gt;: Once deployed, &lt;STRONG&gt;Check Result&lt;/STRONG&gt; should be &lt;STRONG&gt;Reachable&lt;/STRONG&gt;).&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_0-1753969683819.png" style="width: 693px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294627iA69BC8305E368A72/image-dimensions/693x208?v=v2" width="693" height="208" role="button" title="Divij_Balguri09_0-1753969683819.png" alt="Divij_Balguri09_0-1753969683819.png" /&gt;&lt;/span&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;H2 id="toc-hId-1540463244"&gt;&lt;SPAN&gt;Configure SMB Adapter to connect to SMB File Share&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;SMB adapter simplifies integration with on-premise file systems, making it easier to read, write, and manage files across network shares. In our scenario, we will demo &lt;STRONG&gt;creation&lt;/STRONG&gt; of a directory and file, followed by subsequent &lt;STRONG&gt;read&lt;/STRONG&gt; and &lt;STRONG&gt;write&lt;/STRONG&gt; operations on the same file.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_27-1753967479849.png" style="width: 525px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294601i62B5721CDD633ED4/image-dimensions/525x227?v=v2" width="525" height="227" role="button" title="Divij_Balguri09_27-1753967479849.png" alt="Divij_Balguri09_27-1753967479849.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Configure Connection tab for SMB Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;The SMB receiver adapter supports basic authentication, enabling users to configure and use the adapter with ease.&lt;BR /&gt;&lt;BR /&gt;To connect to the SMB server, you need to specify the &lt;STRONG&gt;Host&lt;/STRONG&gt; and &lt;STRONG&gt;port&lt;/STRONG&gt; of SMB, select the Proxy type as &lt;STRONG&gt;On-Premise, &lt;/STRONG&gt;and specify the location ID to identify the&amp;nbsp;&lt;STRONG&gt;location&lt;/STRONG&gt;&amp;nbsp;of a Cloud Connector instance for a specific subaccount, which&amp;nbsp;&lt;STRONG&gt;is&lt;/STRONG&gt;&amp;nbsp;&lt;STRONG&gt;used&lt;/STRONG&gt;&amp;nbsp;as routing information.&lt;/P&gt;&lt;P&gt;Now, select the &lt;STRONG&gt;Version&lt;/STRONG&gt; and &lt;STRONG&gt;Drive&lt;/STRONG&gt; on which you need to perform the operation and specify the Credentials stored in the SAP Security materials. For more information, refer image below.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_28-1753967503409.png" style="width: 871px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294602iAF5B62E692CB0392/image-dimensions/871x347?v=v2" width="871" height="347" role="button" title="Divij_Balguri09_28-1753967503409.png" alt="Divij_Balguri09_28-1753967503409.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1343949739"&gt;&lt;SPAN&gt;Create, Read and Write using SMB Server &lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;The SMB Adapter supports all CRUD operations. We will first create a directory and a file to read data from the file. Firstly, you need to perform the &lt;STRONG&gt;Create Directory&lt;/STRONG&gt; operation in the SMB local server using the SMB receiver adapter.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_35-1753967656120.png" style="width: 429px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294609i949FC310B7AF156F/image-dimensions/429x205?v=v2" width="429" height="205" role="button" title="Divij_Balguri09_35-1753967656120.png" alt="Divij_Balguri09_35-1753967656120.png" /&gt;&lt;/span&gt;&lt;BR /&gt;&lt;STRONG&gt;Response in Local SMB Drive&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_36-1753967691475.png" style="width: 674px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294610i96951B1D67F9D11C/image-dimensions/674x118?v=v2" width="674" height="118" role="button" title="Divij_Balguri09_36-1753967691475.png" alt="Divij_Balguri09_36-1753967691475.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the directory is successfully created, the next step is to create a file within that directory. This file will serve as the container for your data. You should then write or insert all the required records into this file using a &lt;STRONG&gt;content modifier&lt;/STRONG&gt;, ensuring the content is structured and stored correctly for further processing or retrieval.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_37-1753967710086.png" style="width: 354px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294611i739025EF02DFA756/image-dimensions/354x346?v=v2" width="354" height="346" role="button" title="Divij_Balguri09_37-1753967710086.png" alt="Divij_Balguri09_37-1753967710086.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response in Local SMB Drive&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_38-1753967741810.png" style="width: 645px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294612iF6BCB9200915C417/image-dimensions/645x137?v=v2" width="645" height="137" role="button" title="Divij_Balguri09_38-1753967741810.png" alt="Divij_Balguri09_38-1753967741810.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;After the file has been created, you can use the &lt;STRONG&gt;Read File&lt;/STRONG&gt; operation provided by the SMB adapter to access and retrieve the data from it in the future.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_39-1753967765975.png" style="width: 400px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294613i82783E5E4254C206/image-size/medium?v=v2&amp;amp;px=400" role="button" title="Divij_Balguri09_39-1753967765975.png" alt="Divij_Balguri09_39-1753967765975.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Response&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Divij_Balguri09_40-1753967859540.png" style="width: 617px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/294614i04A995C2A6B9CEF1/image-dimensions/617x276?v=v2" width="617" height="276" role="button" title="Divij_Balguri09_40-1753967859540.png" alt="Divij_Balguri09_40-1753967859540.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Conclusion&lt;/STRONG&gt;:&lt;/P&gt;&lt;P&gt;SMB adapter allows users to connect to an On-Premise server using SAP Cloud Connector.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/smb-adapter-feature-on-premise-connectivity-via-sap-cloud-connector/ba-p/14175856"/>
    <published>2025-08-08T15:01:18.273000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339</id>
    <title>New integration packages for the Pipeline for Cloud Integration</title>
    <updated>2025-08-08T15:08:45.923000+02:00</updated>
    <author>
      <name>alex_bundschuh</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/45178</uri>
    </author>
    <content>&lt;P&gt;I would like to share with you an important change for the &lt;A href="https://help.sap.com/docs/migration-guide-po/migration-guide-for-sap-process-orchestration/pipeline-concept" target="_blank" rel="noopener noreferrer"&gt;Pipeline for Cloud Integration&lt;/A&gt; that we did based on feedback we received from customers running the Pipeline. As a result, &lt;STRONG&gt;new integration packages for supporting the Pipeline for Cloud Integration has been recently shipped&lt;/STRONG&gt; on the&amp;nbsp;&lt;A href="https://hub.sap.com/" target="_blank" rel="noopener noreferrer"&gt;SAP Business Accelerator Hub&lt;/A&gt;. Those packages replace the so far provided package&amp;nbsp;&lt;A href="https://hub.sap.com/package/PIPipelineGenericIntegrationFlows/overview" target="_blank" rel="noopener noreferrer"&gt;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates&lt;/A&gt; &lt;STRONG&gt;which will be deprecated soon&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;To be more flexible in setting up your different pipelines, different sender-specific IDoc and XI inbound flows, and receiver-specific outbound flows if required, we decided to split up the&amp;nbsp;Process Integration Pipeline - Generic Integration Flows &amp;amp; Templates into four packages. For the same reason, the script collection has been replaced by local scripts.&lt;/P&gt;&lt;P&gt;Customers like to run different pipelines, e.g., for distributing their critical and non-critical scenarios across different pipelines, or setting up different pipelines in a shared tenant environment. Also, it makes sense to define an own IDoc or XI inbound flow for each sender system to be able for instance to define a sender-specific user role or to stop incoming messages for a specific sender system. For those uses cases, so far you had to copy the package with the complete number of integration flows from the Discovery to the Design adding a suffix. This ensured that the copied packages were not cut off from future updates. However, downside was that this resulted in a large number of stale artifacts, so integration flows which were not used at all.&lt;/P&gt;&lt;P&gt;With the new package setup, we now better support those use cases without creating all those stale integration artifacts. The approach is still to copy a new package from the Discovery, but depending on the use case, you would only copy the integration flows which are required for the respective use case.&lt;/P&gt;&lt;P&gt;You can now find the generic integration flows and a set of templates for the scenario-specific integration flows and custom exits spread across the following integration packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericInbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Inbound&lt;/A&gt;: Contains the generic IDoc and XI inbound flows.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericPipelines/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Pipelines&lt;/A&gt;: Contains the main generic pipeline steps.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineGenericOutbound/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Generic Outbound&lt;/A&gt;: Contains the generic outbound processing flow.&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://hub.sap.com/package/CloudIntegrationPipelineTemplates/overview" target="_blank" rel="noopener noreferrer"&gt;Cloud Integration Pipeline - Templates&lt;/A&gt;: Contains all templates for the scenario-specific flows and custom extensions.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: As said, &lt;STRONG&gt;the so far provided integration package will be deprecated soon&lt;/STRONG&gt;. All new feature increments will only be shipped with the new integration packages. So, If you have used the previously provided package, you need to switch to the new packages. To do so, &lt;STRONG&gt;proceed as follows&lt;/STRONG&gt;:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Undeploy all generic flows from the soon to be deprecated package.&lt;/LI&gt;&lt;LI&gt;Configure and deploy the required generic flows provided by the new Cloud Integration Pipeline packages. You can either deploy all generic flows or just the ones that you need depending on which pipeline you use, see below.&lt;/LI&gt;&lt;LI&gt;If you have used scripts from the script collection in your scenario-specific flows, replace the scripts with local scripts. You find the local scripts in either the generic flows or the new templates. As long as you haven't replaced all scripts, recommendation is to still run the script collection. Once done, you can then also undeploy the script collection.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;U&gt;Note&lt;/U&gt;: In the newly shipped Cloud Integration packages, the name and IDs of the integration flows have version v2 added. It's important that the old integration flows and the new integration flows must not be deployed together because they compete on reading from the same JMS queues.&lt;/P&gt;&lt;P&gt;The templates package doesn't contain any artifact which needs to be deployed nor does it need to be transported to the production tenant. It only contains templates that you can copy to create your scenario-specific flows and custom flows. For this reason, we kept those integration flows in a separate package.&lt;/P&gt;&lt;P&gt;For setting up the integrated messaging runtime for asynchronous communication (recommended option for asynchronous communication), you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for IDoc messages) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally, if you like to use a single entry point for XI messages) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Async&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the integrated messaging runtime for synchronous content-based-router scenarios, you need to deploy the following generic integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Integrated Messaging Runtime Sync&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;For setting up the fully decoupled pipeline for asynchronous communication, you need to deploy the following integration flows:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for Idoc&lt;/LI&gt;&lt;LI&gt;(Optionally) Pipeline v2 Generic Step01 - Inbound Processing for XI&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step02 - Inbound Processing&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step04 - Receiver Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step05 - Interface Determination&lt;/LI&gt;&lt;LI&gt;Pipeline v2 Generic Step06 - Outbound Processing&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;All integration flows within the new Cloud Integration packages have been copied from the old package. Besides this, some new features have been added which I will soon describe in a bit more detail in a separate blog post. You also find this information in the change logs of the packages. Upfront, here some of the new features that we have shipped with the new packages:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;For IDoc inbound scenarios where you exchange IDoc bulk messages, you have the option to keep the bulk, i.e., not to split the bulk message into individual messages.&lt;/LI&gt;&lt;LI&gt;You can now call a custom exit integration flow for custom pre-processing without the need to alter the standard generic flows of the pipeline. This can be configured globally or scenario-specific.&amp;nbsp;Potential use cases could be to implement additional external or internal logging capabilities or to stop certain messages from sending to the receiver systems based on some conditions, e.g. maintained in the Partner Directory.&lt;/LI&gt;&lt;LI&gt;A new template has been added that allows you to implement&amp;nbsp;custom receiver and interface determination by maintaining exchange properties. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the standard migration approach for the Recipient List and Content-Based-Router patterns.&lt;/LI&gt;&lt;LI&gt;A new template has been added for an option to implement custom receiver determination based on a message mapping and by maintaining exchange properties for the interface determination. A similar approach is applied in the SAP Process Orchestration to Cloud Integration migration tool when selecting the Pipeline migration approach.&lt;/LI&gt;&lt;LI&gt;For the Outbound Processing templates, an option to call custom post-processing has been added.&lt;/LI&gt;&lt;LI&gt;We fixed an issue in the duplication check caused by a wrong usage of the escalation end event for the IDoc and XI inbound processing flow.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We are currently updating the standard documentation, so stay tuned.&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/integration-blog-posts/new-integration-packages-for-the-pipeline-for-cloud-integration/ba-p/14175339"/>
    <published>2025-08-08T15:08:45.923000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-rise-six-integration-patterns-you-ll-face/ba-p/14176610</id>
    <title>SAP RISE - Six Integration Patterns You’ll Face</title>
    <updated>2025-08-09T21:41:59.821000+02:00</updated>
    <author>
      <name>FlorianOkos</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/5536</uri>
    </author>
    <content>&lt;P&gt;In one of my previous blogs &lt;STRONG&gt;&lt;A href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/why-sap-isa-m-still-matters-a-strategic-foundation-for-modern-integration/ba-p/14162231" target="_blank"&gt;Why SAP ISA-M Still Matters – A Strategic Foundation for Modern Integration&lt;/A&gt;&lt;/STRONG&gt; I have given some insights in which projects &amp;amp; situations I am currently using ISA-M to define my Integration patterns.&amp;nbsp; What should be more strategic then RISE nowadays? &amp;nbsp;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧭&lt;/STRONG&gt;&lt;STRONG&gt; The Integration Architect’s Dilemma in RISE Projects&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;It usually starts with excitement — &lt;EM&gt;“We’re moving to RISE!”&lt;/EM&gt;. But as the Integration Architect, you feel a shift in the room once you ask:&lt;/P&gt;&lt;P&gt;“How will your business-critical integrations survive the move?”&lt;/P&gt;&lt;P&gt;“How will our Integration Patterns change in a Private Cloud Environment?”&lt;/P&gt;&lt;P&gt;“Do we have to an option to be part of this modernization?”&lt;/P&gt;&lt;P&gt;In too many RISE conversations, &lt;STRONG&gt;integration is not part of initial phases&amp;nbsp;&lt;/STRONG&gt;, but everything depends on it. Whether you’re facing direct system-to-system integrations, legacy SAP PO platforms, or the modernization path toward Integration Suite and AEM: you need clarity.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;Let’s talk about the &lt;STRONG&gt;6 most common integration scenarios&lt;/STRONG&gt; I encounter in RISE projects — and let’s do a deep dive into one of them.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":pushpin:"&gt;📌&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Context: What Makes RISE Integration Different?&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;ISA-M allows us to talk in Integration &lt;STRONG&gt;patterns&lt;/STRONG&gt; — proven, repeatable ways to connect cloud, on-prem, and hybrid landscapes.&lt;/P&gt;&lt;P&gt;Draw your Integration landscape abstract as below and repeat the same for all Integration Domains and Integration Patterns, maybe Integration Styles. We focus on the common Process Integration patterns which often are.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bild 09.08.25 um 9.37 PM.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298908iBCF14F5F4B523C7E/image-size/large?v=v2&amp;amp;px=999" role="button" title="Bild 09.08.25 um 9.37 PM.jpeg" alt="Bild 09.08.25 um 9.37 PM.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 1: On-Premise to On-Premise (e.g., existing ECC system → S/4, within same on-prem datacenter)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is often the existing baseline. When the customers still host their systems locally. No RISE adaption in this case&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 2: Private Cloud to Private Cloud (e.g., S/4 to S/4 Integration, within same RISE datacenter)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&amp;nbsp;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="Bild 11.08.25 um 1.03 PM.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299288i273E653C69BBFFAE/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="Bild 11.08.25 um 1.03 PM.jpeg" alt="Bild 11.08.25 um 1.03 PM.jpeg" /&gt;&lt;/span&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Technology in use:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Integration Suite, Edge Cell on a Private Cloud hyperscaler, such as Azure or AWS&amp;nbsp;&lt;/LI&gt;&lt;LI&gt;VPN or direct peering within same hyperscaler&lt;/LI&gt;&lt;LI&gt;Azure VNet Peering, AWS VPC Peering, or similar as secure tunnel&lt;/LI&gt;&lt;LI&gt;*SAP Integration Suite, Edge Cell on On-Premise landscape ( e.g. on SUSE or Red Hat) is also a valid option&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;Differentiators&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Usage of Application Interface Framework for S/4HANA Monitoring&lt;/LI&gt;&lt;LI&gt;Usage of transactions and APIM Management operations&lt;/LI&gt;&lt;LI&gt;Usage of SAP CALM for overall central&amp;nbsp;Monitoring ( if applicable)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 3: Private Cloud to Public Cloud (RISE workload connects to SaaS like SuccessFactors)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Comment:&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;For hybrid Integration &lt;STRONG&gt;SAP Integration Suite&lt;/STRONG&gt; could be used as natural entry point&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 4: Public Cloud to Public Cloud (e.g., SuccessFactors ↔ Ariba or Salesforce ↔ S/4 in RISE)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is a modernization sweet spot. Cloud-native to cloud-native with no concrete RISE touchpoints.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Scenario 5: On-Premise to Public Cloud&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This is often the existing baseline. When the customers still host their backend systems locally but use SaaS applications for certain LoBs. No RISE adaption in this case&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Scenario 6: On-Premise to Private Cloud (e.g., ECC → RISE in Azure, hybrid operation)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":speech_balloon:"&gt;💬&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;&amp;nbsp;Comment:&lt;/STRONG&gt;&lt;BR /&gt;This hybrid pattern is very common in &lt;STRONG&gt;staged RISE transitions&lt;/STRONG&gt;. Customers keep some systems on-prem while moving others (“early adaptors) into RISE.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":wrench:"&gt;🔧&lt;/span&gt;&lt;/STRONG&gt;&lt;STRONG&gt;Modernization Reality Check&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Most customers do one of three things:&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Move PO Interfaces to SAP Integration Suite, Cloud Integration &amp;nbsp;and SAP Integration Suite, Edge Cell &amp;nbsp;&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Modernize to SAP Advanced Event Mesh&lt;/STRONG&gt;&lt;/LI&gt;&lt;LI&gt;Use more featreus of the &lt;STRONG&gt;SAP Integration Suite, such as API Managmenet&lt;/STRONG&gt;&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;So here’s what I recommend to every architect:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;Audit&lt;/STRONG&gt; your interface and integration technologies before RISE.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Classify&lt;/STRONG&gt; interfaces using along the patterns in this blog.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Decide&lt;/STRONG&gt; per pattern: Keep, Modernize, or Sunset.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Actively design&lt;/STRONG&gt; your new integration landscape — don’t wait for someone else to.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":telephone_receiver:"&gt;📞&lt;/span&gt;&amp;nbsp;&lt;/STRONG&gt;&lt;STRONG&gt;Let’s Build Smarter RISE Integrations&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;I’ve worked on numerous RISE integration journeys and built a reference architecture library covering each scenario. If you want to see the diagrams, dig into patterns, or compare your setup — &lt;STRONG&gt;I’m happy to help&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Ping us on SAP Integration Modernization &amp;lt;integration.modernization@sap.com&amp;gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/enterprise-resource-planning-blog-posts-by-sap/sap-rise-six-integration-patterns-you-ll-face/ba-p/14176610"/>
    <published>2025-08-09T21:41:59.821000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914</id>
    <title>Cloud Integration with Document AI</title>
    <updated>2025-08-10T19:19:42.064000+02:00</updated>
    <author>
      <name>PriyankaChak</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/3763</uri>
    </author>
    <content>&lt;H1 id="toc-hId-1607924656"&gt;&lt;STRONG&gt;Introduction:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post, I will demonstrate how to connect Cloud Integration with Document AI. As a use case, let’s consider a scenario where a hospital registers a new patient, and the patient submits their previous prescription records. Using Document AI, we can extract relevant details such as past illnesses, allergies, and the patient’s blood group.&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1411411151"&gt;&lt;SPAN&gt;Document AI:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 1&lt;/STRONG&gt;. As a pre-requisite, run a booster to activate Document AI in a trial account.&amp;nbsp;&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;Reference link: &lt;/SPAN&gt;&lt;A href="https://developers.sap.com/tutorials/cp-aibus-dox-booster-key.html" target="_blank" rel="noopener noreferrer"&gt;Use Trial to Set Up Account for SAP Document AI and Get Service Key&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 2&lt;/STRONG&gt;. Create a custom schema as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299078i876DDC7000A272CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic1.png" alt="pic1.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 3&lt;/STRONG&gt;. Upload sample prescriptions. Here, I have uploaded two prescriptions of a&amp;nbsp;patient (merged into a single PDF). &lt;EM&gt;Please note that all the data is fictitious.&lt;/EM&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299079i67D96ABDEC86A48D/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic2.png" alt="pic2.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299080i9F613DA1CF5B38C0/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic3.png" alt="pic3.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;STRONG&gt;Step 4&lt;/STRONG&gt;. Verify the extraction results, if required edit and then confirm.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299083iB54A73D12B3B235B/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic4.png" alt="pic4.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For this example we get confidence percentage is 51%-80%. Please note, &lt;EM&gt;i&lt;/EM&gt;&lt;/SPAN&gt;&lt;SPAN&gt;&lt;EM&gt;nstant learning&lt;/EM&gt; based on feedback is available on premium edition.&amp;nbsp;Reference link: &lt;A href="https://help.sap.com/docs/document-information-extraction/document-information-extraction/instant-learning-premium-edition?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;Instant Learning (Premium Edition)&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1214897646"&gt;&lt;SPAN&gt;Cloud Integration:&lt;/SPAN&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;For the demo, I will send the PDF to Cloud Integration using an API testing tool. Cloud Integration will then forward it to Document AI, extract the results.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299114i70FE2EAC2873B982/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic8.png" alt="pic8.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The list of Document AI's APIs can be viewed using Swagger UI. The URL for swagger can be constructed from the Service key in the format:&amp;nbsp;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299085iCA62300FF3294F7F/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic6.png" alt="pic6.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To call the Document AI API to post documents, use the below API.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299088iFF950F7BE5A548C1/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic9.png" alt="pic9.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The content modifier is used to set the options as below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299089iC8157A3A91CDBB18/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic10.png" alt="pic10.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to create the multipart/form-data format.&amp;nbsp;&lt;/SPAN&gt;&lt;SPAN&gt;The endpoint for the 1st call is &lt;/SPAN&gt;&lt;SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs&lt;/EM&gt;&lt;/FONT&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The response structure of the 1st call is shown below:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic11.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299090i0142138ADE6AAD44/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic11.png" alt="pic11.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Retrieve the &lt;EM&gt;&lt;FONT color="#000000"&gt;id&lt;/FONT&gt;&lt;/EM&gt; and use the &lt;EM&gt;looping processing call&lt;/EM&gt; option to get the extraction result once the job is completed.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic12.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299092i6F16E82CDB06D189/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic12.png" alt="pic12.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Use the endpoint for 2nd call to get the extraction result:&lt;/SPAN&gt;&lt;FONT color="#0000FF"&gt;&lt;EM&gt;&amp;lt;tenantuiurl&amp;gt;&amp;lt;swagger&amp;gt;document/jobs/&amp;lt;id&amp;gt;&lt;/EM&gt;&lt;/FONT&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;The groovy script is used to retrieve the field values where the confidence level is more than 60%, and format the response.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Test the iFlow endpoint using API testing tool (as shown below).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="pic13.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/299093i9A20B029F3FB9E55/image-size/large?v=v2&amp;amp;px=999" role="button" title="pic13.png" alt="pic13.png" /&gt;&lt;/span&gt;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;Please note that all the data are fictitious.&lt;/EM&gt;&lt;/P&gt;&lt;H1 id="toc-hId-1018384141"&gt;&lt;STRONG&gt;Conclusion:&lt;/STRONG&gt;&lt;/H1&gt;&lt;P&gt;&lt;SPAN&gt;This blog post demonstrates a prototype that integrates Document AI for real life use cases along with Cloud Integration.&amp;nbsp;&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Reference Link: &lt;A href="https://help.sap.com/docs/document-ai/sap-document-ai/what-is-sap-document-ai?locale=en-US" target="_blank" rel="noopener noreferrer"&gt;SAP Document AI&lt;/A&gt;&lt;/SPAN&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cloud-integration-with-document-ai/ba-p/14176914"/>
    <published>2025-08-10T19:19:42.064000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222</id>
    <title>Invoking LLM from Cloud Integration Responsibly – Made Easy with Generative AI Hub in SAP AI Core</title>
    <updated>2025-08-11T09:53:30.525000+02:00</updated>
    <author>
      <name>Daniil_Bolobono</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/80755</uri>
    </author>
    <content>&lt;P&gt;In this blog post, I’ll walk you through how to seamlessly invoke large language models (LLMs) from Cloud Integration using the Generative AI Hub and the Orchestration Workflow API in SAP AI Core. We’ll focus on building a &lt;STRONG&gt;GDPR-compliant&lt;/STRONG&gt; automation flow that leverages &lt;STRONG&gt;data masking and pseudonymisation&lt;/STRONG&gt; to ensure privacy while still delivering value from generative AI.&lt;/P&gt;&lt;P&gt;The scenario we'll explore simulates a real-world use case: when a Business Partner record is updated in SAP S/4HANA Cloud, a personalized email notification is generated by an LLM and automatically sent out via Cloud Integration.&lt;/P&gt;&lt;P&gt;Thanks to prebuilt &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;orchestration&lt;/A&gt; capabilities of Generative AI Hub in SAP AI Core, such as &lt;STRONG&gt;templating&lt;/STRONG&gt;, &lt;STRONG&gt;I/O filtering&lt;/STRONG&gt;, and &lt;STRONG&gt;data masking&lt;/STRONG&gt;, the process of generating compliant LLM responses can be achieved with just a single API call.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="email-generator.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298780i724952800A21D134/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="email-generator.png" alt="email-generator.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt; &lt;/P&gt;&lt;P&gt;Before diving into the implementation steps, let’s take a closer look at the process flow behind this sample scenario.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Process Flow (Steps)&lt;/STRONG&gt;&lt;/P&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Business Partner Update in SAP S/4HANA Cloud&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;A user creates or edits a Business Partner record in&amp;nbsp;SAP S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Event Triggered and Message Sent to SAP AEM&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The system triggers an event and sends a message to&amp;nbsp;SAP Advanced Event Mesh (AEM).&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Cloud Integration iFlow Subscribes and Starts Processing&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The CPI iFlow&amp;nbsp;subscribes to the AEM queue and begins processing as soon as a new message is published.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Retrieve Old Payload from CAP Application&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;queries the&amp;nbsp;CAP application&amp;nbsp;to retrieve the&amp;nbsp;previous version (old payload)&amp;nbsp;of the Business Partner record from&amp;nbsp;SAP HANA Cloud.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Call the Orchestration Workflow API of SAP AI Core for AI-Based Email Generation&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;With both the old and new payloads in hand, the iFlow invokes the Generative AI Hub using the Orchestration Workflow API of SAP AI Core to generate a personalized email body in HTML format. Here, a predefined orchestration pipeline applies data masking, prompt templating, and foundation model invocation to generate a compliant, personalised email body – without exposing any sensitive data.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;&lt;EM&gt;Send Email to Business Partner&lt;/EM&gt;&lt;/STRONG&gt;&lt;BR /&gt;The&amp;nbsp;iFlow&amp;nbsp;sends the generated email to the Business Partner’s email address via a standard mail adapter in Cloud Integration, completing the end-to-end notification process.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;As part of this blog, I will not focus on connectivity between SAP S/4HANA Cloud and SAP Advanced Event Mesh (steps 1 and 2). For a live step-by-step demonstration of the setup, please review this video: &lt;span class="lia-unicode-emoji" title=":backhand_index_pointing_right:"&gt;👉&lt;/span&gt;&amp;nbsp;&lt;A href="https://youtu.be/6hb9l0ss5ec?si=xubXNtx_7YXFm-11" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP Tech Bytes: Configuring SAP S/4HANA Cloud and SAP Integration Suite, advanced event mesh&lt;/A&gt;&lt;/P&gt;&lt;H2 id="toc-hId-1737000677"&gt;Configuring Orchestration Workflow in SAP AI Core&lt;/H2&gt;&lt;P&gt;&lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/orchestration-8d022355037643cebf775cd3bf662cc5?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Orchestration in SAP AI Core&lt;/A&gt; is a managed service that enables unified access, control, and execution of generative AI models through standardized APIs, templating, and configurable AI workflow components.&lt;/P&gt;&lt;P&gt;In our scenario, we will utilize it to chain together prebuilt steps, such as data masking and foundation model invocation, to generate a personalized email body in HTML format via a single API call.&lt;/P&gt;&lt;P&gt;To access the Orchestration service in SAP AI Core, you need to set up Generative AI Hub in &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/1f756a52-8968-4ec4-92d0-f9bddf552ea3" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Core&lt;/A&gt; and &lt;A href="https://discovery-center.cloud.sap/serviceCatalog/20fa1fda-1871-413d-becc-5a58884d8827" target="_blank" rel="noopener nofollow noreferrer"&gt;SAP AI Launchpad&lt;/A&gt;. Please refer to either of the following resources for setup instructions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;SAP Discovery Mission: &lt;A href="https://discovery-center.cloud.sap/protected/index.html#/missiondetail/4403/4689/?tab=overview" target="_blank" rel="noopener nofollow noreferrer"&gt;Set Up SAP AI Core Generative AI Hub&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;SAP Developer Center Tutorial: &lt;A href="https://developers.sap.com/group.setup-ai-core.html" target="_blank" rel="noopener noreferrer"&gt;Generative AI with SAP AI Core - Setup&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298739i3731D66CDAD62166/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="prereq1.png" alt="prereq1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Before moving to the next step, please ensure that your orchestration configuration is deployed and is in the &lt;EM&gt;&lt;STRONG&gt;RUNNING&lt;/STRONG&gt;&lt;/EM&gt; status.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="prereq2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298741iF81DAFEA5A834382/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="prereq2.png" alt="prereq2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H3 id="toc-hId-1669569891"&gt;Building the Orchestration Workflow&lt;/H3&gt;&lt;DIV&gt;&lt;DIV&gt;&lt;SPAN&gt;In this example, we will build the orchestration workflow for the event of &lt;/SPAN&gt;&lt;STRONG&gt;Business Partner change&lt;/STRONG&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/DIV&gt;&lt;/DIV&gt;&lt;P&gt;Within SAP AI Launchpad, navigate to Generative AI Hub -&amp;gt; Orchestration and click Edit Workflow to select the workflow steps you require.&lt;BR /&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore0.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298781i9AAF94C8C7612E6C/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore0.png" alt="aicore0.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;For our scenario, deselect the Input Translation and Output Translation steps, as they are not needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298752i38CE9D49203FDC22/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore1.png" alt="aicore1.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://community.sap.com/Templating" target="_blank" rel="noopener nofollow noreferrer"&gt;Templating&lt;/A&gt; step, we define prompts that guide LLM on how to perform its task.&lt;/P&gt;&lt;P&gt;We configure two types of messages for our scenario:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;System Prompt&lt;/LI&gt;&lt;LI&gt;User Prompt&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;The system prompt defines the overall &lt;STRONG&gt;behavior, tone, and role&lt;/STRONG&gt; of the LLM. It sets global instructions that remain consistent across requests, ensuring predictable formatting and response style.&lt;/P&gt;&lt;P&gt;For our use case, the system prompt will instruct the LLM to act as a multilingual assistant that compares old and new Business Partner profiles and generates a compliant email.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".
Instructions:
- Detect all relevant changes (ignore changes in fields named change_time or change_date).
- Summarize the changes clearly and concisely.
- Keep it concise and clear.
- Format the response as HTML (do not use code blocks).
- Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
- Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
- Address the Business Partner by full name if available.
- End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
- Keep the tone friendly, clear, and professional.
- Do not generate the email subject line, only the body.&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;The user prompt provides the &lt;STRONG&gt;dynamic, task-specific input&lt;/STRONG&gt; for each request. Here, we pass actual data: the &lt;STRONG&gt;old profile payload&lt;/STRONG&gt;, &lt;STRONG&gt;new profile payload&lt;/STRONG&gt;, and &lt;STRONG&gt;target language&lt;/STRONG&gt;. These placeholders will be replaced at runtime to generate personalized content.&lt;/P&gt;&lt;pre class="lia-code-sample language-bash"&gt;&lt;code&gt;Write the email in the language: {{?language_name}}
Here is the OLD profile payload: {{?old_payload}}
Here is the NEW profile payload: {{?new_payload}}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&lt;EM&gt;&amp;nbsp;&lt;/EM&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298782i2DBF6A163EA56CA1/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore3.png" alt="aicore3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/data-masking-d9a54d9ca54b40beacbd24e1663ec3b4?locale=en-US&amp;amp;version=CLOUD" target="_blank" rel="noopener noreferrer"&gt;Data Masking&lt;/A&gt; step, we can anonymize or pseudonymize personally identifiable information from the input for selected entities. For our scenario, we will select the &lt;STRONG&gt;Pseudonymization&lt;/STRONG&gt; option. This will substitute personally identifiable information in selected categories with a MASKED_ENTITY_ID placeholder and allow us to unmask the LLM response before returning it to the Sender.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298746i05827E1812528552/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore4.png" alt="aicore4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;The &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-input-filtering" target="_blank" rel="noopener noreferrer"&gt;Input Filtering&lt;/A&gt; step allows you to apply content safety filters to the incoming data before invoking the foundation model.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore5.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298753i18CF0C0B34DF85B0/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore5.png" alt="aicore5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;In the Model Configuration step, we can select the desired model (e.g., GPT-4.1) and configure relevant parameters such as temperature, token limits, etc.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298749iBBA647EDEB107980/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore6.png" alt="aicore6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Finally, the &lt;A href="https://help.sap.com/docs/sap-ai-core/sap-ai-core-service-guide/enhancing-model-consumption-with-output-filtering" target="_blank" rel="noopener noreferrer"&gt;Output Filtering&lt;/A&gt; step enables content safety filtering on the LLM-generated response to ensure compliance and prevent undesired content.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298750i175484FBD4CDFD81/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore7.png" alt="aicore7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Once the orchestration workflow is configured, you can inspect its JSON definition and download it locally. This definition will be used later when invoking the orchestration workflow via API from Cloud Integration.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298754iE2EFEB37A5D08970/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore8.png" alt="aicore8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Additionally, you can test the orchestration inference directly within SAP AI Launchpad by providing sample input variables. The testing tool allows you to view and trace the LLM response and fine-tune the workflow configuration as needed.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298756i55B46CC7E693776E/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore9.png" alt="aicore9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;When inspecting the output payload, you can clearly trace the results of each orchestration step – such as Input Masking, Output Unmasking, Input Filtering, and Output Filtering.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="aicore10.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298758i53EBA0EAD81C5D10/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="aicore10.png" alt="aicore10.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;To learn more about Orchestration in SAP AI Core, refer to the &lt;A href="https://developers.sap.com/group.sap-ai-core-generative.html" target="_blank" rel="noopener noreferrer"&gt;SAP Developer Center Tutorials: Generative AI with SAP AI Core - orchestration&lt;/A&gt;.&lt;/P&gt;&lt;H2 id="toc-hId-1343973667"&gt;Configure SAP Cloud Integration Business Partner Notification iFlow&lt;/H2&gt;&lt;P&gt;Now that we have our SAP S/4HANA Cloud, SAP Advanced Event Mesh, and the Orchestration Workflow in SAP AI Core configured, we can proceed with the Cloud Integration iFlow configuration.&lt;/P&gt;&lt;P&gt;This iFlow ensures that Business Partner changes trigger compliant AI-generated email notifications, while maintaining data consistency in HANA Cloud. It leverages SAP Advanced Event Mesh, CAP, and Generative AI Hub for an automated end-to-end process.&lt;/P&gt;&lt;H3 id="toc-hId-1276542881"&gt;High-Level iFlow Overview&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;Triggered by AEM Queue&amp;nbsp;when a new event is published.&lt;/LI&gt;&lt;LI&gt;Retrieves BP details from S/4HANA Cloud.&lt;/LI&gt;&lt;LI&gt;(&lt;EM&gt;If event is BP update&lt;/EM&gt;)&amp;nbsp;Fetches old BP payload&amp;nbsp;from HANA Cloud (via CAP service).&lt;/LI&gt;&lt;LI&gt;Invokes the &lt;STRONG&gt;Orchestration Workflow API&lt;/STRONG&gt; to compare old vs. new payloads and generate an HTML email content while ensuring that no sensitive information is passed to LLM.&lt;/LI&gt;&lt;LI&gt;Upserts updated BP details into SAP HANA Cloud&amp;nbsp;via CAP service.&lt;/LI&gt;&lt;LI&gt;Sends an email to the Business Partner.&lt;/LI&gt;&lt;/UL&gt;&lt;H3 id="toc-hId-1080029376"&gt;Step-by-Step Process Breakdown&lt;/H3&gt;&lt;OL&gt;&lt;LI&gt;&lt;STRONG&gt;Event Trigger&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow subscribes to the&amp;nbsp;AEM queue&amp;nbsp;and processes incoming events.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Business Partner Details&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;An&amp;nbsp;OData request&amp;nbsp;is sent to&amp;nbsp;SAP S/4HANA Cloud&amp;nbsp;to fetch the latest BP details.&lt;/LI&gt;&lt;LI&gt;Key parameters (e.g., &lt;STRONG&gt;BP ID&lt;/STRONG&gt;&lt;STRONG&gt;, &lt;/STRONG&gt;&lt;STRONG&gt;BP email&lt;/STRONG&gt;) are extracted and saved into the properties for further processing.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Map to CAP Format&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;BP details are&amp;nbsp;transformed&amp;nbsp;into the &lt;STRONG&gt;CAP service&lt;/STRONG&gt; data model.&lt;/LI&gt;&lt;LI&gt;The&amp;nbsp;new payload is stored&amp;nbsp;in XML and JSON format for further use.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Conditional Logic&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;&lt;STRONG&gt;BP creation&lt;/STRONG&gt; → No old payload is retrieved.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;BP update&lt;/STRONG&gt; → Old payload is retrieved for comparison.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Retrieve Old Payload from HANA Cloud (&lt;EM&gt;BP update only&lt;/EM&gt;)&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow calls&amp;nbsp;the &lt;STRONG&gt;CAP service &lt;/STRONG&gt;to fetch the previous BP record. Please refer to the GitHub repository &lt;A href="https://github.com/bolodania/businesspartner_srv" target="_blank" rel="noopener nofollow noreferrer"&gt;businesspartner_srv&lt;/A&gt; for more information on the CAP service. In our scenario, the CAP service acts as an intermediary that retrieves old Business Partner data from SAP HANA Cloud, provides an OData service for data access, and enables the upsert of updated details.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;AI-Based Email Generation&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;A subprocess calls the Orchestration Workflow API via the AI adapter to create a personalized HTML email body in a GDPR-compliant way.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Upsert BP Details in HANA Cloud&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The updated BP details are upserted into SAP HANA Cloud via the CAP service.&lt;/LI&gt;&lt;/UL&gt;&lt;LI&gt;&lt;STRONG&gt;Send Email&lt;/STRONG&gt;&lt;/LI&gt;&lt;UL&gt;&lt;LI&gt;The iFlow sends an email using the&amp;nbsp;Mail Adapter.&lt;/LI&gt;&lt;/UL&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi1.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298762i0CE2AE68A87967FB/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi1.png" alt="cpi1.png" /&gt;&lt;/span&gt;You can find this iFlow as a ZIP archive here: &lt;A href="https://github.com/bolodania/cpi_gen_ai_hub_blog/blob/main/AEM_GenAI_BPMailGenerator_blog.zip" target="_blank" rel="noopener nofollow noreferrer"&gt;AEM_GenAI_BPMailGenerator_blog.zip&lt;/A&gt;&lt;/P&gt;&lt;P&gt;For this blog, we’ll take a closer look at &lt;STRONG&gt;Step #6&lt;/STRONG&gt;, where the &lt;STRONG&gt;&lt;A href="https://help.sap.com/docs/integration-suite/sap-integration-suite/ai-adapter" target="_blank" rel="noopener noreferrer"&gt;AI Receiver Adapter&lt;/A&gt; &lt;/STRONG&gt;is used to invoke the Orchestration Workflow API configured in the previous section.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi2.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298765i406A07F5364686D9/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi2.png" alt="cpi2.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;1) In our case, the easiest way to prepare a payload for the AI Receiver Adapter is by using a small Groovy script.&lt;/P&gt;&lt;pre class="lia-code-sample language-java"&gt;&lt;code&gt;import com.sap.gateway.ip.core.customdev.util.Message
import groovy.json.JsonOutput

Message processData(Message message) {
    def map = message.getProperties()

    def createBP = map.get("EventType").toString() == "sap.s4.beh.businesspartner.v1.BusinessPartner.Created.v1" ? true : false

    // Dynamic user template
    def userText = createBP
        ? "Write the email in the language: {{?language_name}}\nHere is the NEW profile payload: {{?new_payload}}"
        : "Write the email in the language: {{?language_name}}\nHere is the OLD profile payload: {{?old_payload}}\nHere is the NEW profile payload: {{?new_payload}}"

    def userTemplate = [
        role: "user",
        content: [
            [
                type : "text",
                text : userText
            ]
        ]
    ]

    def systemText = createBP
        ? """You are a multilingual assistant. Your task is to generate a warm, professional welcome email for a newly created Business Partner profile based on the provided NEW profile payload.

        Instructions:
        - Welcome the Business Partner.
        - Address the Business Partner by full name if available.
        - Mention that their profile has been successfully created.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Keep it concise and clear.
        - Keep the tone friendly, professional, and approachable.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Do not generate the email subject line, only the body."""
        
        : """You are a multilingual assistant. Your task is to compare the old and new payloads of a Business Partner profile and generate a personalized, polite, and human-sounding email to inform the Business Partner about the changes made to their profile. If no changes are found, reply "NO_CHANGES".

        Instructions:
        - Detect all relevant changes (ignore changes in fields named change_time or change_date).
        - Summarize the changes clearly and concisely.
        - Keep it concise and clear.
        - Format the response as HTML (do not use code blocks).
        - Use paragraphs (&amp;lt;p&amp;gt;) for separate blocks of text.
        - Use an unordered list (&amp;lt;ul&amp;gt;) with list items (&amp;lt;li&amp;gt;) to list the changes.
        - Address the Business Partner by full name if available.
        - End the email with the following closing, exactly as shown: Best regards,&amp;lt;br&amp;gt;SAP BTP Adoption &amp;amp; Consumption Center.
        - Keep the tone friendly, clear, and professional.
        - Do not generate the email subject line, only the body."""

    def systemTemplate = [
        role: "system",
        content: [
            [
                type : "text",
                text : systemText
            ]
        ]
    ]
    
    def language = map.get("language")
    def newPayload = map.get("new_payload_json")
    
    def inputParams = [
        language_name: language,
        new_payload: newPayload instanceof String ? newPayload : JsonOutput.toJson(newPayload)
    ]
    
    if (!createBP) {
        def oldPayload = map.get("old_payload_json")
        inputParams.old_payload = oldPayload instanceof String ? oldPayload : JsonOutput.toJson(oldPayload)
    }


    // Build the JSON structure
    def payload = [
        orchestration_config: [
            module_configurations: [
                llm_module_config: [
                    model_name: "gpt-4.1",
                    model_params: [
                        frequency_penalty: 0,
                        presence_penalty: 0,
                        max_completion_tokens: 24576,
                        temperature: 1
                    ],
                    model_version: "2025-04-14"
                ],
                templating_module_config: [
                    template: [
                        userTemplate,
                        systemTemplate
                    ],
                    defaults: [:]
                ],
                filtering_module_config: [
                    input : [
                        filters: [
                            [
                                type: "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2,
                                    PromptShield: true
                                ]
                            ]
                        ]
                    ],
                    output: [
                        filters: [
                            [
                                type  : "azure_content_safety",
                                config: [
                                    Hate: 2,
                                    SelfHarm: 2,
                                    Sexual: 2,
                                    Violence: 2
                                ]
                            ]
                        ]
                    ]
                ],
                masking_module_config: [
                    masking_providers: [
                        [
                            type: "sap_data_privacy_integration",
                            method: "pseudonymization",
                            entities: [
                                [type: "profile-credit-card-number"],
                                [type: "profile-driverlicense"],
                                [type: "profile-email"],
                                [type: "profile-sensitive-data"],
                                [type: "profile-ethnicity"],
                                [type: "profile-gender"],
                                [type: "profile-pronouns-gender"],
                                [type: "profile-iban"],
                                [type: "profile-location"],
                                [type: "profile-nationalid"],
                                [type: "profile-nationality"],
                                [type: "profile-org"],
                                [type: "profile-passport"],
                                [type: "profile-person"],
                                [type: "profile-phone"],
                                [type: "profile-political-group"],
                                [type: "profile-sapids-public"],
                                [type: "profile-religious-group"],
                                [type: "profile-sapids-internal"],
                                [type: "profile-ssn"],
                                [type: "profile-sexual-orientation"],
                                [type: "profile-trade-union"],
                                [type: "profile-address"],
                                [type: "profile-url"],
                                [type: "profile-university"],
                                [type: "profile-username-password"]
                            ],
                            mask_grounding_input: [enabled: false],
                            allowlist: []
                        ]
                    ]
                ]
            ]
        ],
        input_params: inputParams
    ]

    // Serialize to JSON string
    def jsonString = JsonOutput.toJson(payload)
    message.setBody(jsonString)

    return message
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;This script constructs the payload expected by the Orchestration API of SAP AI Core.&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi3.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298764i8D609145087017D7/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi3.png" alt="cpi3.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Note that the settings within the &lt;EM&gt;module_configurations&lt;/EM&gt; block match the configuration that you downloaded from SAP AI Launchpad.&lt;/P&gt;&lt;P&gt;2) To set up a Connection to our AI Core Orchestration deployment, we first need to configure a Security Material.&lt;BR /&gt;In your SAP BTP Cockpit and access the service key of the SAP AI Core (extended plan) service instance created earlier.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi4.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298766i96E718E06DB8F818/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi4.png" alt="cpi4.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Create an &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; Security Material with:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Token Service URL: &lt;STRONG&gt;url &lt;/STRONG&gt;from the service key + “/oauth/token”&lt;/LI&gt;&lt;LI&gt;Client ID: &lt;STRONG&gt;clientid&lt;/STRONG&gt; from the service key&lt;/LI&gt;&lt;LI&gt;Client Secret: &lt;STRONG&gt;clientsecret &lt;/STRONG&gt;from the service key&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi5.png" style="width: 364px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298767i7783529BF8B7EC89/image-size/medium/is-moderation-mode/true?v=v2&amp;amp;px=400" role="button" title="cpi5.png" alt="cpi5.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Connection&lt;/STRONG&gt; tab of the AI Receiver Adapter:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set the &lt;STRONG&gt;Address&lt;/STRONG&gt; to the AI_API_URL from the service key.&lt;/LI&gt;&lt;LI&gt;Reference the Security Material in the &lt;STRONG&gt;OAuth2 Client Credentials&lt;/STRONG&gt; field.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi6.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298768iD149FF2BEA8E8894/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi6.png" alt="cpi6.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;On the &lt;STRONG&gt;Processing&lt;/STRONG&gt; tab:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;Set &lt;STRONG&gt;Request Payload Source&lt;/STRONG&gt; to “Exchange Body”.&lt;/LI&gt;&lt;LI&gt;Provide the &lt;STRONG&gt;Orchestration Deployment ID&lt;/STRONG&gt; and &lt;STRONG&gt;AI Resource Group&lt;/STRONG&gt; from SAP AI Launchpad.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi8.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298771i84B4983238E49650/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi8.png" alt="cpi8.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi7.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298769i66B867762AFDDF1A/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi7.png" alt="cpi7.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;3) JSON output is converted into XML for further processing.&lt;/P&gt;&lt;P&gt;4) Content Modifier step is used to extract the &lt;STRONG&gt;&lt;EM&gt;email_body&lt;/EM&gt;&lt;/STRONG&gt; from the Orchestration API response via the XPath expression: &lt;STRONG&gt;&lt;EM&gt;/root/orchestration_result/choices/message/content&lt;/EM&gt;&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="cpi9.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/298772i757F3C22FD3B7557/image-size/large/is-moderation-mode/true?v=v2&amp;amp;px=999" role="button" title="cpi9.png" alt="cpi9.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-754433152"&gt;Testing the Scenario End-to-End&lt;/H2&gt;&lt;P&gt;With all components configured, it’s time to put the setup to the test.&lt;/P&gt;&lt;P&gt;&lt;A href="https://dam.sap.com/mac/u/a/jSB7LiM?rc=10&amp;amp;doi=SAP1229099 " target="_blank" rel="noopener noreferrer"&gt;&lt;span class="lia-unicode-emoji" title=":film_projector:"&gt;📽&lt;/span&gt;️ Watch Event-Driven Business Partner Email Notification Demo&lt;/A&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;EM&gt;The video walks through the entire process – showing the change in SAP S/4HANA Cloud, the processing inside Cloud Integration, and the final email received by the Business Partner.&lt;/EM&gt;&lt;/P&gt;&lt;H2 id="toc-hId-557919647"&gt;Conclusion&lt;/H2&gt;&lt;P&gt;This scenario highlights how &lt;STRONG&gt;simple and seamless it is to invoke SAP AI Core from Cloud Integration&lt;/STRONG&gt; to generate compliant, human-sounding content.&lt;/P&gt;&lt;P&gt;With just a small Groovy script to prepare the payload, CPI can call an &lt;STRONG&gt;SAP AI Core Orchestration Workflow&lt;/STRONG&gt; directly via the AI Receiver Adapter – without complex custom coding or middleware. All compliance safeguards, such as data masking and filtering, are handled by the orchestration workflow, ensuring that &lt;STRONG&gt;no sensitive information is ever sent to the LLM&lt;/STRONG&gt;.&lt;/P&gt;&lt;P&gt;The result is an &lt;STRONG&gt;automated, end-to-end process&lt;/STRONG&gt; where a Business Partner update in SAP S/4HANA Cloud triggers an event, CPI processes it, SAP AI Core generates the compliant email body, and the recipient is informed – all with minimal configuration effort.&lt;/P&gt;&lt;P&gt;This pattern can be applied to other master data objects and backend systems, as well as to any scenario where Cloud Integration must securely generate AI-based content — making it &lt;STRONG&gt;a powerful blueprint for scaling compliant AI adoption across the enterprise.&lt;/STRONG&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-sap/invoking-llm-from-cloud-integration-responsibly-made-easy-with-generative/ba-p/14176222"/>
    <published>2025-08-11T09:53:30.525000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/%EF%B8%8F-real-time-weather-display-on-sap-btp-with-openweathermap-api-step-by-step/ba-p/14172919</id>
    <title>☁️ Real-time Weather Display on SAP BTP with OpenWeatherMap API — Step-by-Step Fiori Application</title>
    <updated>2025-08-11T12:01:26.753000+02:00</updated>
    <author>
      <name>ilkertkn25</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/154635</uri>
    </author>
    <content>&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":magnifying_glass_tilted_left:"&gt;🔍&lt;/span&gt;&amp;nbsp;Introduction&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;This article I will show you step by step how to display real-time weather data in a Fiori application using the OpenWeatherMap API on SAP BTP. The application will request city information from the user and display information such as current temperature, humidity, and wind speed in a table format.&lt;/P&gt;&lt;P&gt;Output:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ilkertkn25_0-1754457909087.png" style="width: 834px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297009iFCC529E3D17D615D/image-dimensions/834x144?v=v2" width="834" height="144" role="button" title="ilkertkn25_0-1754457909087.png" alt="ilkertkn25_0-1754457909087.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ilkertkn25_1-1754457934109.png" style="width: 809px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297010iE41B2AB2AA702B91/image-dimensions/809x421?v=v2" width="809" height="421" role="button" title="ilkertkn25_1-1754457934109.png" alt="ilkertkn25_1-1754457934109.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":hammer_and_wrench:"&gt;🛠&lt;/span&gt;️ 1. Obtaining an OpenWeatherMap API Key&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;Go to &lt;A href="https://openweathermap.org/api" target="_blank" rel="noopener nofollow noreferrer"&gt;https://openweathermap.org/api&lt;/A&gt;.&lt;BR /&gt;Sign up and then create a new API key from the API keys tab.&lt;BR /&gt;Alternatively, an example request would look like this:&lt;BR /&gt;&lt;A href="https://api.openweathermap.org/data/2.5/forecast?lat=44.34&amp;amp;lon=10.99&amp;amp;appid=e21c9996e2801f22e2bd0f7d11d1b367" target="_blank" rel="noopener nofollow noreferrer"&gt;https://api.openweathermap.org/data/2.5/forecast?lat=44.34&amp;amp;lon=10.99&amp;amp;appid=e21c9996e2801f22e2bd0f7d11d1b367&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-unicode-emoji" title=":light_bulb:"&gt;💡&lt;/span&gt;This API key: e21c9996e2801f22e2bd0f7d11d1b367 can be used for testing. If it doesn't work, you can create a free one.&lt;/P&gt;&lt;P&gt;When we send a request with the link, it returns a JSON list like this:&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ilkertkn25_2-1754457981499.png" style="width: 577px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/297012i036F9E9D32DFB518/image-dimensions/577x704?v=v2" width="577" height="704" role="button" title="ilkertkn25_2-1754457981499.png" alt="ilkertkn25_2-1754457981499.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;🧱 2. Creating a UI5 Project in SAP Business Application Studio&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;A. Start a new Fiori application&lt;BR /&gt;SAP Business Application Studio &amp;gt; “Create Project from Template”&lt;BR /&gt;Template: SAP Fiori Application&lt;BR /&gt;Data Source: “None”&lt;BR /&gt;Project Name: weather-app&lt;BR /&gt;B. Project folder structure:&lt;BR /&gt;weather-app/&lt;BR /&gt;├── webapp/&lt;BR /&gt;│ ├── controller/&lt;BR /&gt;│ │ └── View1.controller.js&lt;BR /&gt;│ ├── model/&lt;BR /&gt;│ │ └── cityData.json&lt;BR /&gt;│ ├── util/&lt;BR /&gt;│ │ └── formatter.js&lt;BR /&gt;│ ├── view/&lt;BR /&gt;│ │ └── View1.view.xml&lt;BR /&gt;│ └── index.html&lt;BR /&gt;└── manifest.json&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":globe_showing_europe_africa:"&gt;🌍&lt;/span&gt;3. Defining City Data as JSON&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&lt;BR /&gt;webapp/model/cityData.json:&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;{
    "cities": [
    { "name": "İstanbul", "lat": 41.0082, "lon": 28.9784 },
    { "name": "Ankara", "lat": 39.9208, "lon": 32.8541 },
    { "name": "İzmir", "lat": 38.4192, "lon": 27.1287 },
    { "name": "Bursa", "lat": 40.195, "lon": 29.06 },
    { "name": "Antalya", "lat": 36.8969, "lon": 30.7133 },
    { "name": "Trabzon", "lat": 41.0014, "lon": 39.7178 },
    { "name": "Gaziantep", "lat": 37.0662, "lon": 37.3833 },
    { "name": "Samsun", "lat": 41.2867, "lon": 36.33 },
    { "name": "Kayseri", "lat": 38.7348, "lon": 35.4676 },
    { "name": "Eskişehir", "lat": 39.7667, "lon": 30.5256 }
  ]
}&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":direct_hit:"&gt;🎯&lt;/span&gt;4. View1.view.xml — UI Development&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-markup"&gt;&lt;code&gt;&amp;lt;mvc:View
  controllerName="weatherapp.controller.View1"
  xmlns:mvc="sap.ui.core.mvc"
  xmlns:core="sap.ui.core"
  xmlns="sap.m"
  displayBlock="true"&amp;gt;

  &amp;lt;VBox id="IDVBoxMain" class="sapUiMediumMargin sapUiResponsiveContentPadding" alignItems="Center"&amp;gt;

    &amp;lt;!-- Şehir Seçimi --&amp;gt;
    &amp;lt;HBox id="IDHBoxCitySelect" class="sapUiSmallMarginBottom" alignItems="Center"&amp;gt;
      &amp;lt;Label id="IDLabelCity" text="Şehir Seçin:" labelFor="IDComboCitySelect" class="sapUiSmallMarginEnd"/&amp;gt;
      &amp;lt;ComboBox id="IDComboCitySelect"
                items="{/cities}"
                selectionChange=".onCityChange"
                placeholder="Şehir seçin"
                width="220px"
                editable="true"&amp;gt;
        &amp;lt;items&amp;gt;
          &amp;lt;core:Item id="IDComboItemCity" key="{lat},{lon}" text="{name}" /&amp;gt;
        &amp;lt;/items&amp;gt;
      &amp;lt;/ComboBox&amp;gt;
    &amp;lt;/HBox&amp;gt;

    &amp;lt;!-- Anlık Hava Durumu Tablosu --&amp;gt;
    &amp;lt;Table id="IDTableCurrentWeather"
           items="{weatherModel&amp;gt;/Forecast}"
           inset="false"
           width="100%"
           class="sapUiResponsiveTable"
           growing="true"
           growingScrollToLoad="true"&amp;gt;

      &amp;lt;headerToolbar&amp;gt;
        &amp;lt;Toolbar id="IDToolbarWeather"&amp;gt;
          &amp;lt;Title id="IDTitleWeather" text="📡 Hava Durumu Tahmini" level="H2"/&amp;gt;
        &amp;lt;/Toolbar&amp;gt;
      &amp;lt;/headerToolbar&amp;gt;

      &amp;lt;columns&amp;gt;
        &amp;lt;Column id="IDColDate"&amp;gt;&amp;lt;Text id="IDColTextDate" text="📅 Tarih Saat"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColTemp"&amp;gt;&amp;lt;Text id="IDColTextTemp" text="🌡 Sıcaklık (°C)"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColFeels"&amp;gt;&amp;lt;Text id="IDColTextFeels" text="🤒 Hissedilen (°C)"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColDesc"&amp;gt;&amp;lt;Text id="IDColTextDesc" text="🌤 Hava Durumu"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColHumidity"&amp;gt;&amp;lt;Text id="IDColTextHumidity" text="💧 Nem (%)"/&amp;gt;&amp;lt;/Column&amp;gt;
        &amp;lt;Column id="IDColWind"&amp;gt;&amp;lt;Text id="IDColTextWind" text="🌬 Rüzgar (m/s)"/&amp;gt;&amp;lt;/Column&amp;gt;
      &amp;lt;/columns&amp;gt;

      &amp;lt;items&amp;gt;
        &amp;lt;ColumnListItem id="IDRowWeatherItem" type="Active"&amp;gt;
          &amp;lt;cells&amp;gt;
            &amp;lt;Text id="IDCellDate" text="{weatherModel&amp;gt;dt_txt}" class="sapMTextStrong"/&amp;gt;
            &amp;lt;ObjectNumber id="IDCellTemp"
                          number="{path: 'weatherModel&amp;gt;temp', formatter: '.formatter.formatKelvinToCelsius'}"
                          unit="°C"
                          state="Success"/&amp;gt;
            &amp;lt;ObjectNumber id="IDCellFeels"
                          number="{path: 'weatherModel&amp;gt;feels_like', formatter: '.formatter.formatKelvinToCelsius'}"
                          unit="°C"
                          state="Warning"/&amp;gt;
            &amp;lt;Text id="IDCellDesc" text="{weatherModel&amp;gt;weather_desc}"/&amp;gt;
            &amp;lt;Text id="IDCellHumidity" text="{weatherModel&amp;gt;humidity}"/&amp;gt;
            &amp;lt;Text id="IDCellWind" text="{weatherModel&amp;gt;wind_speed}"/&amp;gt;
          &amp;lt;/cells&amp;gt;
        &amp;lt;/ColumnListItem&amp;gt;
      &amp;lt;/items&amp;gt;
    &amp;lt;/Table&amp;gt;

  &amp;lt;/VBox&amp;gt;
&amp;lt;/mvc:View&amp;gt;
  &lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":video_game:"&gt;🎮&lt;/span&gt;5. View1.controller.js — API Consumption&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([
  "sap/ui/core/mvc/Controller",
  "sap/ui/model/json/JSONModel",
  "weatherapp/util/formatter"
], function (Controller, JSONModel, formatter) {
  "use strict";

  return Controller.extend("weatherapp.controller.View1", {
    formatter: formatter,

    onInit: function () {
      const oCityModel = new JSONModel();
      oCityModel.loadData("model/cityData.json");
      this.getView().setModel(oCityModel);

      oCityModel.attachRequestCompleted(() =&amp;gt; {
        const aCities = oCityModel.getData();
        if (aCities?.length &amp;gt; 0) {
          const firstCity = aCities[0];
          this.loadCurrentWeather(firstCity.lat, firstCity.lon);
        }
      });
    },

    onCityChange: function (oEvent) {
      const sKey = oEvent.getParameter("selectedItem").getKey();
      const [lat, lon] = sKey.split(",");
      this.loadCurrentWeather(lat, lon);
    },

    loadCurrentWeather: async function (lat, lon) {
      const apiKey = "e21c9996e2801f22e2bd0f7d11d1b367";
      const url = `https://api.openweathermap.org/data/2.5/weather?lat=${lat}&amp;amp;lon=${lon}&amp;amp;appid=${apiKey}&amp;amp;lang=tr`;

      try {
        const response = await fetch(url);
        const data = await response.json();

        const row = {
          dt_txt: new Date(data.dt * 1000).toLocaleString("tr-TR"),
          temp: data.main.temp,
          feels_like: data.main.feels_like,
          humidity: data.main.humidity,
          wind_speed: data.wind.speed,
          weather_desc: data.weather?.[0]?.description || ""
        };

        const oWeatherModel = new JSONModel({ Forecast: [row] });
        this.getView().setModel(oWeatherModel, "weatherModel");
      } catch (err) {
        console.error("Anlık hava durumu alınamadı:", err);
      }
    }
  });
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;&lt;span class="lia-unicode-emoji" title=":page_facing_up:"&gt;📄&lt;/span&gt;6. formatter.js&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;pre class="lia-code-sample language-javascript"&gt;&lt;code&gt;sap.ui.define([], function () {
  "use strict";

  return {
    formatKelvinToCelsius: function (kelvin) {
      const k = parseFloat(kelvin);
      return isNaN(k) ? "N/A" : (k - 273.15).toFixed(1);
    }
  };
});&lt;/code&gt;&lt;/pre&gt;&lt;P&gt;Now, with this UI5-based Fiori application developed on SAP BTP, users can instantly view real-time weather data for their selected city. By developing projects like this using the OpenWeatherMap API, you can integrate external data sources into your system.&lt;/P&gt;&lt;P&gt;For more content, you can also find me on Medium (username: tekin.ilker24).&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/%EF%B8%8F-real-time-weather-display-on-sap-btp-with-openweathermap-api-step-by-step/ba-p/14172919"/>
    <published>2025-08-11T12:01:26.753000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660</id>
    <title>Bridging EDI and SAP S/4HANA Cloud: Seamless EDI-to-SOAP Integration</title>
    <updated>2025-08-11T12:03:16.570000+02:00</updated>
    <author>
      <name>ManaswiniPuli</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/1940178</uri>
    </author>
    <content>&lt;P&gt;In the fast-paced world of business today, it's crucial to connect traditional EDI systems with modern cloud ERP systems for streamlined operations. This blog takes a closer look at an integration fllow that handles inbound EDI messages, transforms them into SOAP format and facilitate effortless communication with SAP S/4HANA Cloud. Let's explore how this approach changes data formats and guarantees a reliable,standards-complaint integration between legacy and cloud systems.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt;&amp;nbsp;&amp;nbsp;For detailed steps on creating and exporting the required MIG and MAG files used in this integration, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step-by-Step Guide: EDI to SOAP Inbound Integration Flow&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Here’s a detailed look at the entire integration flow (iFlow) for processing EDI to SOAP inbound messages. This iFlow covers all the essential steps and components needed to receive, validate, transform, and route EDI messages into SOAP format, ensuring a smooth connection to the SAP S/4HANA Cloud system.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_7-1752053017520.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284453iE6513532D02A320B/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_7-1752053017520.png" alt="ManaswiniPuli_7-1752053017520.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 1: Receive EDI Data via AS2&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;To initiate the integration, configure the AS2 adapter to receive inbound EDI messages. This configuration supports secure and reliable data transfer in B2B scenarios involving EDI communication.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Note:&lt;/STRONG&gt; For detailed steps on setting up the AS2 adapter, refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/step-by-step-guide-secure-file-exchange-with-as2-adapter-in-sap-cloud/ba-p/14143695" target="_blank"&gt;Step-by-Step Guide: Secure File Exchange with AS2 Adapter in SAP Cloud Integration – SAP Community&lt;/A&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 2: Add Start Message&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add a Start Message event to initiate the integration flow when EDI data is received through AS2.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 3: Add EDI Splitter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an EDI Splitter for handling incoming EDI messages. It breaks them down into individual transactions, checks their structure for validity, and can also generate acknowledgments if necessary.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Important:&lt;/STRONG&gt;All the XSD and mapping files mentioned in this flow( ASC-X12 XSD, preproc.xsl, and others)—are created and exported during the MIG and MAG setup process in SAP Integration Advisor.&lt;BR /&gt;For a step-by-step guide on generating and exporting these files, please refer to the blog:&amp;nbsp;&lt;A href="https://community.sap.com/t5/technology-blog-posts-by-members/creating-migs-and-mags-using-integration-advisor-in-sap-btp-cockpit/ba-p/14143413" target="_blank"&gt;Creating MIGs and MAGs Using Integration Advisor i... - SAP Community&lt;/A&gt;.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;To upload ASC-X12 XSD file, navigate to the X12 tab in the EDI Splitter configuration. You’ll find the file in the Source folder that was extracted during the MAG export.&lt;/LI&gt;&lt;LI&gt;This file outlines the structure of the incoming EDI message, allowing the splitter to accurately parse and process the X12 message.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_1-1752060193831.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284489iA95C1002B00BA32F/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_1-1752060193831.png" alt="ManaswiniPuli_1-1752060193831.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 4: Add Router&lt;BR /&gt;&lt;BR /&gt;&lt;/STRONG&gt;Now, let’s add a Router following the EDI Splitter. This step is crucial for separating EDI messages from acknowledgement messages, especially if you’ve enabled the generation of acknowledgements in the splitter.&lt;/P&gt;&lt;P&gt;Let's define two routing paths:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;1. Acknowledgement Route&lt;/STRONG&gt;: This route deals with acknowledgement messages independently.&lt;/P&gt;&lt;P&gt;In the Processing tab, you’ll see:&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Expression Type Options:&lt;/STRONG&gt;&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;XML: This is used when the message is formatted in XML.&lt;/LI&gt;&lt;LI&gt;NON_XML: This is for messages that aren’t in XML format, where routing is based on the message headers.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;We opt for NON_XML since the acknowledgement message isn’t in XML, so the router checks the message headers instead of the XML content.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;STRONG&gt;Condition&lt;/STRONG&gt;: ${header.EDI_ACKNOWLEDGEMENT} = 'true'&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_5-1752052893931.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284451i666327ED704A7D00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_5-1752052893931.png" alt="ManaswiniPuli_5-1752052893931.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;2. Default Route:&lt;/STRONG&gt; Responsible for processing standard EDI messages.&lt;/P&gt;&lt;P&gt;No condition needed (processes all other messages)&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_2-1752060272463.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284490i648A4A92543BC05E/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_2-1752060272463.png" alt="ManaswiniPuli_2-1752060272463.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 5: Integrate EDI to XML Converter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Now, let’s add an EDI to XML Converter to convert the EDI message into XML format.&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload ASC-X12 XSD File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the X12 tab and upload the ASC-X12.xsd file from the Source folder that you got from the MAG export.&lt;/LI&gt;&lt;LI&gt;The ASC-X12 XSD file defines the structure of the incoming EDI message, enabling the EDI to XML Converter to accurately interpret and transform the EDI data into XML format.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_8-1752053118395.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284454i89136E273FF328CA/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_8-1752053118395.png" alt="ManaswiniPuli_8-1752053118395.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 6: Include&amp;nbsp;XSLT Mapping (Pre-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Next up, we’ll add XSLT Mapping to handle data preprocessing and transformation.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload preproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the&amp;nbsp;&lt;STRONG&gt;Processing&lt;/STRONG&gt;&amp;nbsp;tab, upload the preproc.xsl File from the&amp;nbsp;&lt;STRONG&gt;Source&lt;/STRONG&gt;&amp;nbsp;folder extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;&amp;nbsp;This step modifies the XML structure created from the EDI message, ensuring it aligns with the expected input format for message mapping.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_9-1752053218929.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284455iF1E52121053479B4/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_9-1752053218929.png" alt="ManaswiniPuli_9-1752053218929.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 7: Add XML Validator (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XML Validator to validate the pre-processed XML.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload X12_850_PurchaseOrder_MIG_RD.xsd File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Navigate to the Validation tab and upload the X12_850_PurchaseOrder_MIG_RD.xsd file from the Source folder you extracted from the MAG export.&lt;/LI&gt;&lt;LI&gt;This step makes sure that the transformed XML adheres to the expected schema before you proceed to message mapping, helping you identify any structural issues early on.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_10-1752053254168.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284456i159845643F5EF3D0/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_10-1752053254168.png" alt="ManaswiniPuli_10-1752053254168.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 8: Implement XSLT Mapping (Main Mapping)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Let’s add an XSLT Mapping to transform the validated EDI XML into the target SOAP message structure.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Upload Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl File&lt;/STRONG&gt;&lt;/P&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Under the Processing tab, you’ll need to upload the Mapping_X12_850_PurchaseOrder_MIG_to_SOAP_SalesOrder_MIG.xsl file from the root folder of the exported MAG zip file.&lt;/LI&gt;&lt;LI&gt;This main mapping file, which was generated by SAP Integration Advisor (IA), is crucial for transforming the data into the right format for SAP S/4HANA Cloud.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_11-1752053302564.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284457iB3B5CA68F2D45C00/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_11-1752053302564.png" alt="ManaswiniPuli_11-1752053302564.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 9: Apply XSLT Mapping (Post-processing)&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Add an XSLT Mapping to adjust the mapped XML output to the final structure required by the target system.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;STRONG&gt;Upload SOAP_SalesOrder_MIG_postproc.xsl File&lt;/STRONG&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;OL&gt;&lt;LI&gt;Head over to the Processing tab and upload the SOAP_SalesOrder_MIG_postproc.xsl file from the Target MIG folder.&lt;/LI&gt;&lt;LI&gt;This ensures the transformed XML matches the exact format expected by the target system for successful processing.&lt;/LI&gt;&lt;/OL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_12-1752053341290.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284458i72CD3F449717F994/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_12-1752053341290.png" alt="ManaswiniPuli_12-1752053341290.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Step 10: Add SOAP Receiver Adapter&lt;/STRONG&gt;&lt;/P&gt;&lt;P&gt;Use the SOAP Receiver Adapter to connect to SAP S/4HANA and transmit the transformed XML payload over a SOAP-based web service. This adapter ensures that the data is encapsulated in a SOAP envelope and sent to the appropriate endpoint.&lt;/P&gt;&lt;UL class="lia-list-style-type-disc"&gt;&lt;LI&gt;&lt;P&gt;&lt;STRONG&gt;Address&lt;/STRONG&gt;:Enter the SOAP service endpoint URL provided by your target system.&lt;/P&gt;&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;URL to WSDL&lt;/STRONG&gt;:Click on Browse and upload the .wsdl file that corresponds to your target SOAP service. CPI will automatically fill in the Service, Endpoint, and Operation Name fields based on the WSDL information.&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Authentication:&lt;/STRONG&gt;&amp;nbsp;Basic&lt;/LI&gt;&lt;LI&gt;&lt;STRONG&gt;Credential Name:&amp;nbsp;&lt;/STRONG&gt;Enter the Credential Name of the User Credentials you set up in Security Material.&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-center" image-alt="ManaswiniPuli_14-1752056043811.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/284461i14CDBF398602D2F2/image-size/large?v=v2&amp;amp;px=999" role="button" title="ManaswiniPuli_14-1752056043811.png" alt="ManaswiniPuli_14-1752056043811.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;This marks the end of the configuration for the EDI-to-SOAP inbound integration flow. With this iFlow in action, incoming EDI messages are handled efficiently and routed to the S/4HANA target system in the required SOAP format.&lt;/P&gt;&lt;P&gt;&lt;STRONG&gt;Disclaimer:&lt;/STRONG&gt;&lt;BR /&gt;All the views and opinions in this blog are my own and are made in my personal capacity. SAP shall not be responsible or liable for any of the contents published in this blog.&lt;/P&gt;&lt;P&gt;&amp;nbsp;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/bridging-edi-and-sap-s-4hana-cloud-seamless-edi-to-soap-integration/ba-p/14144660"/>
    <published>2025-08-11T12:03:16.570000+02:00</published>
  </entry>
</feed>
