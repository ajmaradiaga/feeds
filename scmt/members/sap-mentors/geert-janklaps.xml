<?xml version='1.0' encoding='UTF-8'?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <id>https://raw.githubusercontent.com/ajmaradiaga/feeds/main/scmt/members/sap-mentors/geert-janklaps.xml</id>
  <title>SAP Community - Geert-Jan Klaps</title>
  <updated>2025-07-24T00:10:00.738551+00:00</updated>
  <link href="https://community.sap.com/t5/user/viewprofilepage/user-id/868" rel="alternate"/>
  <generator uri="https://lkiesow.github.io/python-feedgen" version="1.0.0">python-feedgen</generator>
  <subtitle>Geert-Jan Klaps in SAP Community</subtitle>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/cap-7-transaction-already-closed-error-on-sap-hana-cloud/qaa-p/12808945#M4809990</id>
    <title>Re: CAP 7 - Transaction Already Closed error on SAP HANA Cloud</title>
    <updated>2023-07-10T11:19:09+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi &lt;SPAN class="mention-scrubbed"&gt;willem.pardaens&lt;/SPAN&gt;,&lt;/P&gt;&lt;P&gt;This is really small volume testing, in this case one header record and one item record. Updates are not really in parallel due to the await statements I guess.&lt;/P&gt;&lt;P&gt;Anyway, as I suspected, it's really the second update statement that causes the crash of the server, but when going through the debug log of the database, I noticed a strange thing in the generated SQL statement. So I compared it to the sqlite SQL statement.&lt;/P&gt;&lt;P&gt;On HANA it looks like:&lt;/P&gt;&lt;P&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/attachments/storage/7/attachments/2181300-hana-sql-statement.png" /&gt;&lt;/P&gt;&lt;P&gt;On sqlite it looks like:&lt;/P&gt;&lt;P&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/attachments/storage/7/attachments/2181301-sqlite-sql-statement.png" /&gt;&lt;/P&gt;&lt;P&gt;Might seem like a bug in the generation of the SQL statements in the HANA DB driver?&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/cap-7-transaction-already-closed-error-on-sap-hana-cloud/qaa-p/12808945#M4809990"/>
    <published>2023-07-10T11:19:09+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/cap-7-transaction-already-closed-error-on-sap-hana-cloud/qaa-p/12808947#M4809992</id>
    <title>Re: CAP 7 - Transaction Already Closed error on SAP HANA Cloud</title>
    <updated>2023-07-10T18:52:50+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi Florin,&lt;/P&gt;&lt;P&gt;Moving all the updates into an array was one of the improvements I was going to implement tomorrow. I'll let you know if this solves anything. (but I'm afraid the end result will be the same, in the end the current implementation worked before the upgrade to CDS 7 and is working fine on sqlite)&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/cap-7-transaction-already-closed-error-on-sap-hana-cloud/qaa-p/12808947#M4809992"/>
    <published>2023-07-10T18:52:50+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/issue-on-cap-deploy-after-updating-cds-cds-dk-with-latest-version-7-0-2/qaa-p/12748173#M4784951</id>
    <title>Re: Issue on CAP deploy after updating cds/cds-dk with latest version (7.0.2)</title>
    <updated>2023-07-10T19:15:46+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi Alessio,&lt;/P&gt;&lt;P&gt;Did you also update the  @sap/cds library and added all the necessary dependencies? As of cds 7, the library became more modular. (e.g. separate libraries for databases, fiori, ...)&lt;/P&gt;&lt;P&gt;If you haven't already, I suggest you go through the release notes of the release and implement all the necessary changes. (there are some breaking changes in major releases)&lt;/P&gt;&lt;P&gt;&lt;A href="https://cap.cloud.sap/docs/releases/jun23" rel="nofollow noopener noreferrer"&gt;June 2023 | CAPire (cloud.sap)&lt;/A&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/issue-on-cap-deploy-after-updating-cds-cds-dk-with-latest-version-7-0-2/qaa-p/12748173#M4784951"/>
    <published>2023-07-10T19:15:46+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/cap-7-transaction-already-closed-error-on-sap-hana-cloud/qaa-p/12808952#M4809997</id>
    <title>Re: CAP 7 - Transaction Already Closed error on SAP HANA Cloud</title>
    <updated>2023-07-12T14:52:52+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi Sebastian,&lt;/P&gt;&lt;P&gt;Thank you for clarifying, reworked the whole logic to perform all database updates without using promises. Strange thing is that this issue doesn't occur on sqlite, so from a development perspective it's hard to determine what the root cause is. (I'm expecting the same issue to occur when running this locally in BAS)&lt;/P&gt;&lt;P&gt;I do think this definitely is in improvement, but I don't seem to find the warning about the new protection mechanism in the release notes. Maybe it would be good to mention it in the release notes as well?&lt;/P&gt;&lt;P&gt;Best regards,&lt;/P&gt;&lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/cap-7-transaction-already-closed-error-on-sap-hana-cloud/qaa-p/12808952#M4809997"/>
    <published>2023-07-12T14:52:52+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/cap-typescript-cap-js-typer-namespace-missing/qaq-p/12745436</id>
    <title>CAP Typescript - @cap-js/typer namespace missing</title>
    <updated>2023-07-31T13:49:09+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;
  &lt;P&gt;I'm currently working on switching a project to the new typescript approach using @cap-js/typer. Unfortunately, when using the newly generated types it looks like the namespace is missing when performing CQL queries.&lt;/P&gt;
  &lt;P&gt;I'm using the same approach as described &lt;A href="https://cap.cloud.sap/docs/tools/cds-typer#cql" target="_blank" rel="nofollow noopener noreferrer"&gt;here&lt;/A&gt; in the documentation.&lt;/P&gt;
  &lt;P&gt;Code sample:&lt;/P&gt;
  &lt;P&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/attachments/storage/7/attachments/2193509-code.png" /&gt;&lt;/P&gt;
  &lt;P&gt;When the query get executed, it fails to due to the namespace not being present in the SQL query:&lt;/P&gt;
  &lt;P&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/attachments/storage/7/attachments/2193510-error.png" /&gt;&lt;/P&gt;
  &lt;P&gt;I'm using following package versions:&lt;/P&gt;
  &lt;PRE&gt;&lt;CODE&gt;@cap-js/cds-typer: 0.5.0
@cap-js/sqlite: 1.0.1
@sap/cds: 7.1.0
@sap/cds-compiler: 4.0.2
@sap/cds-dk: 7.0.3
@sap/cds-dk (global): 7.0.3
@sap/cds-fiori: 1.0.0
@sap/cds-foss: 4.0.2
@sap/cds-mtxs: 1.9.2
@sap/eslint-plugin-cds: 2.6.3
@thevaluechain/cap-number-range: 1.1.5
Node.js: v16.19.0
home: /home/user/projects/icm-reuse-numberrange/node_modules/@sap/cds&lt;BR /&gt;&lt;/CODE&gt;&lt;/PRE&gt;
  &lt;P&gt;Am I missing something here? Any pointers on how to get this resolved?&lt;/P&gt;
  &lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/cap-typescript-cap-js-typer-namespace-missing/qaq-p/12745436"/>
    <published>2023-07-31T13:49:09+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/cap-typescript-cap-js-typer-namespace-missing/qaa-p/12745438#M4783784</id>
    <title>Re: CAP Typescript - @cap-js/typer namespace missing</title>
    <updated>2023-07-31T14:31:33+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi &lt;SPAN class="mention-scrubbed"&gt;20eed143c19f4b82bc4cf049916102cb&lt;/SPAN&gt;,&lt;/P&gt;&lt;P&gt;I'm going to that right away, completely looked over the fact that there's a public repo available &lt;span class="lia-unicode-emoji" title=":slightly_smiling_face:"&gt;🙂&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/cap-typescript-cap-js-typer-namespace-missing/qaa-p/12745438#M4783784"/>
    <published>2023-07-31T14:31:33+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/brussels-discussions/event-sap-community-watch-and-code-party-3rd-of-november-kontich/td-p/290927</id>
    <title>Event: SAP Community watch-and-code party (3rd of November, Kontich)</title>
    <updated>2023-09-29T08:25:11.723000+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_0-1695967112023.jpg" style="width: 656px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/45732i355BCFAF027D52DF/image-dimensions/656x274?v=v2" width="656" height="274" role="button" title="geertjanklaps_0-1695967112023.jpg" alt="geertjanklaps_0-1695967112023.jpg" /&gt;&lt;/span&gt;&lt;/P&gt;
&lt;P&gt;With SAP Inside Track Belgium in our rear view mirror, we're already looking forward to our next SAP Community Event: SAP Community watch-and-code party in Friday 3rd of November. The concept is quite straight forward and serves as a local alternative to SAP TechEd which is hosted only in Bangalore this year. You can read more on the concept &lt;A href="https://groups.community.sap.com/t5/sap-teched-blog-posts/sap-community-quot-watch-and-code-quot-parties/ba-p/277006" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;
&lt;P&gt;We hope to welcome you all again for a day full of content, hands-on sessions and networking opportunities!&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;What to expect?&lt;/STRONG&gt;&lt;/P&gt;
&lt;TABLE border="1" width="100%" cellspacing="0" cellpadding="1"&gt;
&lt;TBODY&gt;
&lt;TR&gt;
&lt;TD&gt;Time&lt;/TD&gt;
&lt;TD&gt;Topic&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;10:00 - 10:30 a.m.&lt;/TD&gt;
&lt;TD&gt;Welcome and Introduction&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;10:30 - 12:30 p.m.&lt;/TD&gt;
&lt;TD&gt;Keynote SAP TechEd &amp;amp; Expert Q&amp;amp;A Session&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;12:30 p.m.&lt;/TD&gt;
&lt;TD&gt;Lunch &amp;amp; Drinks&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;1:45 - 3:45 p.m.&lt;/TD&gt;
&lt;TD&gt;Mini Code Jam Session&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;4:00 - 5:30 p.m.&lt;/TD&gt;
&lt;TD&gt;Learnings&lt;/TD&gt;
&lt;/TR&gt;
&lt;TR&gt;
&lt;TD&gt;5:30 p.m. - ...&lt;/TD&gt;
&lt;TD&gt;Afterwork Snacks &amp;amp; Drinks&lt;/TD&gt;
&lt;/TR&gt;
&lt;/TBODY&gt;
&lt;/TABLE&gt;
&lt;P&gt;&lt;STRONG&gt;Location&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Satenrozen 10, 2550 Kontich (Belgium).&lt;/P&gt;
&lt;P&gt;&lt;STRONG&gt;Registration&lt;/STRONG&gt;&lt;/P&gt;
&lt;P&gt;Want to attend? Great! You can register &lt;A href="https://events.sap.com/be/watch-and-code-party-kontich/en/registration.aspx" target="_blank" rel="noopener noreferrer"&gt;here&lt;/A&gt;.&lt;/P&gt;
&lt;P&gt;Hope to see you there!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/brussels-discussions/event-sap-community-watch-and-code-party-3rd-of-november-kontich/td-p/290927"/>
    <published>2023-09-29T08:25:11.723000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/cds-launchpad-plugin-supercharged-ready-for-the-future-cap-plugin-ui5/ba-p/13578282</id>
    <title>cds-launchpad-plugin supercharged &amp; ready for the future - CAP Plugin, UI5 Tooling support &amp; Async Launchpad</title>
    <updated>2023-12-11T08:43:46+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>If you're developing SAP CAP-based applications in combination SAPUI5 apps, you might already be familiar with the &lt;A href="https://www.npmjs.com/package/cds-launchpad-plugin" target="_blank" rel="nofollow noopener noreferrer"&gt;cds-launchpad-plugin&lt;/A&gt;. The plugin allows you to easily test all your apps in a single launchpad by automatically indexing all SAPUI5 projects in your workspace and providing the necessary configuration to a sandbox launchpad.&lt;BR /&gt;
&lt;BR /&gt;
Recently the plugin has undergone some major changes, in this blog I'll guide you through the most important changes, how you can enable them &amp;amp; why they are beneficial to enable.&lt;BR /&gt;
&lt;H2 id="toc-hId-964073368"&gt;SAPUI5 strategy &amp;amp; direction&lt;/H2&gt;&lt;BR /&gt;
SAPUI5 is evolving fast and since recently there's official support for TypeScript (as of SAPUI5 1.116) using the UI5 Tooling. The future is even more bright with the release of SAPUI5 v2.0 which introduces the removal of deprecated API's (slimming down the library dramatically and thus improving the performance) and the move to Async API's only.&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/ui5-2.0.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Future strategy of SAPUI5 announced at UI5con 2023 (credits &lt;SPAN class="mention-scrubbed"&gt;stefan.beck&lt;/SPAN&gt; &amp;amp; &lt;SPAN class="mention-scrubbed"&gt;peter.muessig&lt;/SPAN&gt;)&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-767559863"&gt;CAP Plugin technique&lt;/H2&gt;&lt;BR /&gt;
With the release of CAP 6.7.0 the &lt;A href="https://cap.cloud.sap/docs/releases/march23#new-cds-plugin-technique" target="_blank" rel="nofollow noopener noreferrer"&gt;new plugin technique&lt;/A&gt; was introduced. Up until a few weeks ago, the cds-launchpad-plugin still needed a custom server.js file to be activated. Luckily, &lt;SPAN class="mention-scrubbed"&gt;smarten&lt;/SPAN&gt; was kind enough to introduce the CAP plugin technique in the cds-launchpad-plugin.&lt;BR /&gt;
&lt;BR /&gt;
This means you can now just install the plugin as a dev dependency and it get activated automatically. If you want to configure custom plugin settings, you can still do so in the package.json file.&lt;BR /&gt;
&lt;BR /&gt;
Installation&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;npm install --save-dev cds-launchpad-plugin&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
Custom configuration:&lt;BR /&gt;
&lt;PRE class="language-javascript"&gt;&lt;CODE&gt;"cds": {&lt;BR /&gt;
  "launchpad": {&lt;BR /&gt;
    theme:'sap_horizon', // SAPUI5 Theme&lt;BR /&gt;
    version: '1.120.1', // SAPUI5 Version&lt;BR /&gt;
    basePath: '', // Path under which you want the sandbox to be served&lt;BR /&gt;
    appConfigPath: '', // External sandbox appconfig json file to be merged with generated appconfig&lt;BR /&gt;
    locale: '', // Language to be used for the sandbox environment&lt;BR /&gt;
    template: '' // 'legacy' (non-async launchpad, default) or 'async' (async launchpad)&lt;BR /&gt;
  }&lt;BR /&gt;
}&lt;/CODE&gt;&lt;/PRE&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-571046358"&gt;UI5 Tooling support&lt;/H2&gt;&lt;BR /&gt;
A few weeks back, thanks to the efforts of &lt;SPAN class="mention-scrubbed"&gt;peter.muessig&lt;/SPAN&gt;,&amp;nbsp;the &lt;A href="https://www.npmjs.com/package/cds-plugin-ui5" target="_blank" rel="nofollow noopener noreferrer"&gt;cds-plugin-ui5&lt;/A&gt; was &lt;A href="https://blogs.sap.com/2023/10/13/sap-tech-bytes-using-the-sap-approuter-at-dev-time-a-full-stack-journey-with-ui5-and-sap-cap-cloud-foundry-basics-6/" target="_blank" rel="noopener noreferrer"&gt;introduced&lt;/A&gt; to bridge the gap between CAP &amp;amp; SAPUI5 development.&lt;BR /&gt;
&lt;BR /&gt;
The library integrates the UI5 Tooling into the default CAP server, which means you're now able to use a single server to perform both CAP &amp;amp; SAPUI5 developments, leveraging the power of both development tools in one.&lt;BR /&gt;
&lt;BR /&gt;
&lt;SPAN style="font-size: 1rem"&gt;The &lt;/SPAN&gt;&lt;A style="font-size: 1rem" href="https://www.npmjs.com/package/cds-launchpad-plugin" target="_blank" rel="nofollow noopener noreferrer"&gt;cds-launchpad-plugin&lt;/A&gt;&lt;SPAN style="font-size: 1rem"&gt; now automatically detects the &lt;/SPAN&gt;&lt;A style="font-size: 1rem" href="https://www.npmjs.com/package/cds-plugin-ui5" target="_blank" rel="nofollow noopener noreferrer"&gt;cds-plugin-ui5&lt;/A&gt;&lt;SPAN style="font-size: 1rem"&gt; presence and changes the way the application descriptors are generated for the launchpad. (side-note, the plugin currently only supports the default routes used by cds-plugin-ui5, customized routes are not supported yet)&lt;/SPAN&gt;&lt;BR /&gt;
&lt;BR /&gt;
This means you're now able to use TypeScript for both CAP &amp;amp; SAPUI5 in combination with the cds-launchpad-plugin!&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/ui5-tooling-integration.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;cds-launchpad-plugin combined with cds-plugin-ui5&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-374532853"&gt;Async launchpad&lt;/H2&gt;&lt;BR /&gt;
An additional configuration option "template" was introduced, to allow changing the template used to generate the launchpad. You can either leave the template untouched, set it to "legacy" or "async". For now the default setting is still legacy, in the next major release this will probably be switched to async as this is the best-practice and more future-proof.&lt;BR /&gt;
&lt;BR /&gt;
Good to know, the way the legacy launchpad template is loaded (using the &lt;A href="https://ui5.sap.com/#/api/sap.ushell.Container%23methods/createRenderer" target="_blank" rel="noopener noreferrer"&gt;createRenderer&lt;/A&gt; method of class sap.ushell.Container) is deprecated as of SAPUI5 1.120.&lt;BR /&gt;
&lt;BR /&gt;
Why should you use the async template, next to the fact that you'll have to in the future? Performance! In below screenshots you can see the difference when loading a launchpad with the same configuration using both the legacy &amp;amp; async template.&lt;BR /&gt;
&lt;BR /&gt;
&lt;STRONG&gt;Results: legacy - 9,5 seconds vs async - 2,2 seconds!!&lt;/STRONG&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/legacy-launchpad.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Legacy launchpad performance&lt;/P&gt;&lt;BR /&gt;
&lt;P style="overflow: hidden;margin-bottom: 0px"&gt;&lt;IMG class="migrated-image" src="https://community.sap.com/legacyfs/online/storage/blog_attachments/2023/12/async-launchpad.png" /&gt;&lt;/P&gt;&lt;BR /&gt;
&lt;P class="image_caption" style="text-align: center;font-style: italic"&gt;Async launchpad performance&lt;/P&gt;&lt;BR /&gt;
&amp;nbsp;&lt;BR /&gt;
&lt;H2 id="toc-hId-178019348"&gt;Wrap-up&lt;/H2&gt;&lt;BR /&gt;
As you can see, quite some changes in only a few weeks, improving the useability &amp;amp; future-proofness of the plugin. Be sure to try them out!&lt;BR /&gt;
&lt;BR /&gt;
Having troubles or ideas for new features? please use GitHub to &lt;A href="https://github.com/geert-janklaps/cds-launchpad-plugin/issues" target="_blank" rel="nofollow noopener noreferrer"&gt;report&lt;/A&gt; any issues / ideas.&lt;BR /&gt;
&lt;BR /&gt;
Are you already using the cds-launchpad-plugin? Be sure to leave a comment!&lt;BR /&gt;
&lt;BR /&gt;
Happy coding!</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/cds-launchpad-plugin-supercharged-ready-for-the-future-cap-plugin-ui5/ba-p/13578282"/>
    <published>2023-12-11T08:43:46+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/usage-metrics-per-tenant-subscription-in-a-multitenant-solution/qaq-p/12771657</id>
    <title>Usage metrics per tenant / subscription in a multitenant solution</title>
    <updated>2023-12-11T14:24:48+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;
  &lt;P&gt;I'm looking for a solution to easily monitor the consumption of a multitenant solution built on SAP BTP. We have the out-of-the-box global metrics in the provider subaccount but want to be able to monitor certain metrics on the level of the subscription.&lt;/P&gt;
  &lt;P&gt;Some of the things that pop up in my mind at first sight:&lt;/P&gt;
  &lt;UL&gt;
   &lt;LI&gt;Number of unique logins&lt;/LI&gt;
   &lt;LI&gt;HDI container size&lt;/LI&gt;
   &lt;LI&gt;SAP Document Management Service Consumption&lt;/LI&gt;
   &lt;LI&gt;Number of API calls&lt;/LI&gt;
   &lt;LI&gt;...&lt;/LI&gt;
  &lt;/UL&gt;
  &lt;P&gt;Is there any re-use service we can implement to get these kind of metrics per subscription? Or is this something we have to build from scratch ourselves?&lt;/P&gt;
  &lt;P&gt;Best regards,&lt;/P&gt;
  &lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/usage-metrics-per-tenant-subscription-in-a-multitenant-solution/qaq-p/12771657"/>
    <published>2023-12-11T14:24:48+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/usage-metrics-per-tenant-subscription-in-a-multitenant-solution/qaa-p/12771659#M4794648</id>
    <title>Re: Usage metrics per tenant / subscription in a multitenant solution</title>
    <updated>2023-12-12T08:19:39+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Thanks for the tip  &lt;SPAN class="mention-scrubbed"&gt;gregorw&lt;/SPAN&gt;, I'll log a ticket to see if I can get some more information about it. Will post an update here when I get feedback!&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/usage-metrics-per-tenant-subscription-in-a-multitenant-solution/qaa-p/12771659#M4794648"/>
    <published>2023-12-12T08:19:39+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093</id>
    <title>SAP Build Code blog series: 1 - Welcome to the lobby</title>
    <updated>2024-03-27T09:00:00.033000+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;As announced during SAP TechEd in November 2023: SAP has been working on SAP Build Code, a new developer experience to ease pro-code development efforts on SAP Business Technology Platform. Enriching existing solutions and adding a touch of Generative AI, SAP Build Code streamlines development and promotes fusion development (combining low-code / no-code developments with pro-code development).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;During the pilot phase, I was one of the lucky ones to be able to test-drive this new developer experience. In this blog series, I’ll give you some insights based on my experience.&lt;/P&gt;&lt;H2 id="toc-hId-989870484"&gt;&lt;SPAN&gt;(Re)-introducing The Lobby&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;If you’re familiar with SAP Build Process Automation, SAP Build Apps or SAP Build Work Zone, you’ll already know “The Lobby”. As a pro-code developer using SAP Business Application Studio might have missed this central development experience. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Up until now, “The Lobby” was a central library of all your existing low-code / no-code development projects and allowed you to start new developments based on SAP Build Apps &amp;amp; SAP Build Process Automation. With SAP Build Code, pro-code developments now are also stored and started from within that same user experience. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Let’s have a look at how starting a new project with SAP Build Code looks like! (We’ll use this development project throughout the rest of the blog series, to give you a clear view on the end-to-end development process using SAP Build Code)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Start by clicking the "Create" button on the central right corner of the screen:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_0-1711461852629.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86748i59EE9201A42191E9/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_0-1711461852629.png" alt="geertjanklaps_0-1711461852629.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;You’ll immediately be greeted by a popup to guide through the rest of the process. Based on the enabled services in the subaccount, you’ll see more functionality enabled in this guided experience&lt;/SPAN&gt;&lt;SPAN&gt;.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_8-1711048122200.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/84666i2005338F8482AA38/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_8-1711048122200.png" alt="geertjanklaps_8-1711048122200.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Since we’re here to explore pro-code development using SAP Build Code, this is obviously going to be our choice for today. But as you can see if you have SAP Build Apps enabled, you’ll be able to start your low-code / no-code app development journey from here as well.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_9-1711048230014.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/84667i1927A63AF899D049/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_9-1711048230014.png" alt="geertjanklaps_9-1711048230014.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next step is to choose the right type of application you’d like to start. Since I’ll be showing a full end to end development, building both backend &amp;amp; frontend applications, we’ll choose for Full-Stack application here.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_10-1711048244019.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/84668iFEB1C32285B7FA33/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_10-1711048244019.png" alt="geertjanklaps_10-1711048244019.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As a last step, we’ll need to enter some data to identify our project. As a pro-code developer these settings are already common knowledge. By entering these details here already, SAP Build Code will generate the project with the right project name, namespace and default service name.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_11-1711048260011.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/84670iB1CE4EAF1FEED25B/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_11-1711048260011.png" alt="geertjanklaps_11-1711048260011.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SAP Build Code will generate the project and corresponding dev space. Once generation is finished, you can open the dev space by clicking the project name.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_12-1711048280483.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/84671i6533A5824F4F0163/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_12-1711048280483.png" alt="geertjanklaps_12-1711048280483.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To end this part of the blog series, let’s open the dev space. You’ll see the storyboard of the new project with all the necessary elements in place as defined through the guided experience.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_13-1711048303496.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/84672iC1F0B6E7EFEFBF76/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_13-1711048303496.png" alt="geertjanklaps_13-1711048303496.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;This concludes the first part in the blog series, you’ve now learned about the lobby and have setup your first project with SAP Build Code. In the next blog posts we’ll enrich the generated application by using SAP Joule and configure deployment.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-922439698"&gt;&lt;SPAN&gt;Blog series navigation&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 1 - Welcome to the lobby&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 2 – Kickstarting your project with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 3 – Adding application logic and unit tests with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 4 – Adding a SAPUI5 application and deploying to SAP BTP&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 5 – My personal experience and final thoughts&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093"/>
    <published>2024-03-27T09:00:00.033000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023</id>
    <title>SAP Build Code blog series: 2 – Kickstarting your project with SAP Joule</title>
    <updated>2024-03-27T09:01:00.034000+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;SAP Build Code comes with SAP Joule as your personal pair developer. If you have never heard of SAP Joule, I recommend you to read &lt;A href="https://news.sap.com/2023/09/joule-new-generative-ai-assistant/" target="_blank" rel="noopener noreferrer"&gt;this&lt;/A&gt; article. To summarize in short, Joule is SAP’s generative AI copilot which will be embedded throughout their product portfolio. You can already activate SAP Joule in SAP SuccessFactors &amp;amp; SAP S/4HANA Cloud (early adopter program) for example.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog we’ll use SAP Joule to generate a data model &amp;amp; some test data for our custom logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;To open SAP Joule in your dev space, you can use the Joule plugin in the left side of your screen.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_6-1711461437328.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86741iBD077B2A06241C79/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_6-1711461437328.png" alt="geertjanklaps_6-1711461437328.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-990615042"&gt;&lt;SPAN&gt;Generating a new data model &amp;amp; service for our project&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;After opening up SAP Joule, the guided experience will show up which allows you to start the SAP Joule experience based on what you want to achieve. In this case we’ll go for “Data Model and Service Creation”. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once you open Joule with the button in the central of the screen, you’ll be able to provide the input you want to give Joule to generate a new data model and service.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I used following input: &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;“Create an app to manage sales orders with entities salesorders and salesorderitems where each salesorderitem is linked to its salesorder.”&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_7-1711461479461.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86742i0672BB9D6D92086A/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_7-1711461479461.png" alt="geertjanklaps_7-1711461479461.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’re happy with Joule’s proposed data model, you can easily accept these changes with the button in the top right corner of the proposal. After accepting the proposal, you’ll see the storyboard gets updated automatically to reflect the changes applied by SAP Joule.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We now have an updated data model and a service reflecting the data model in our project.&lt;/SPAN&gt;&lt;/P&gt;&lt;DIV class=""&gt;&amp;nbsp;&lt;/DIV&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_8-1711461523951.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86743i9A44C3D9203A37E5/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_8-1711461523951.png" alt="geertjanklaps_8-1711461523951.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-794101537"&gt;&lt;SPAN&gt;Generating test data for our project&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As a developer, the development as such is our main responsibility, but what would we be without doing at least some testing to verify that everything is working as expected?&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Instead of creating test data manually, we can use SAP Joule to do this for us! Let’s create some test data using SAP Joule! To do this, open up the SAP Joule experience again through the SAP Joule plugin in the left side of the screen.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the guided experience open the Sample Data topic and open SAP Joule. After opening SAP Joule, you can very easily ask Joule to generate some test data for you.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;I’ve used following input: “Generate sample data for entities salesorders and salesorderitems”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’re happy with the test data, you can easily accept the test data with the button in the top right corner of the proposal.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_9-1711461553319.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86744i8BF37604E5CFE8DA/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_9-1711461553319.png" alt="geertjanklaps_9-1711461553319.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After accepting the test data, you’ll be greeted by the sample data editor where you can very easily browse through the test data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you have a close look at the generated sample data, you’ll notice that SAP Joule even took into consideration that the totalAmount of the SalesOrders entity should be the sum of the totalPrice of the SalesOrderItems entity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;SalesOrders entity:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_10-1711461581959.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86745i2D88F27D8A2D4DBB/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_10-1711461581959.png" alt="geertjanklaps_10-1711461581959.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Sales Order Items entity:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_11-1711461611825.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86747i29F0A9E26015B80B/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_11-1711461611825.png" alt="geertjanklaps_11-1711461611825.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Isn’t this beautiful? With only a few simple interactions with SAP Joule, we already have a working backing service with some realistic sample data to test our development in SAP Build Code!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;While it is great SAP Joule took into consideration that the totalAmount of our SalesOrders entity should be the sum of our totalPrice of the SalesOrderItems entity, we’d like to see this logic reflected when actually creating / updating a new Sales Order. In the next blog post, we’ll use SAP Joule to add some application logic to this automatically and a unit test to validate the logic applied in our application logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-726670751"&gt;&lt;SPAN&gt;Blog series navigation&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 1 - Welcome to the lobby&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 2 – Kickstarting your project with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 3 – Adding application logic and unit tests with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 4 – Adding a SAPUI5 application and deploying to SAP BTP&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 5 – My personal experience and final thoughts&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023"/>
    <published>2024-03-27T09:01:00.034000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054</id>
    <title>SAP Build Code blog series: 3 – Adding application logic and unit tests with SAP Joule</title>
    <updated>2024-03-27T09:02:00.070000+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;Up until now, we’ve already covered creating a project through the lobby, we’ve added a basic data model and service to our project including some local testing data. We’ve seen that SAP Joule takes our data model into consideration when generating sample data, as the sum of our item prices is reflected in our sales order header entity as a total amount.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this blog post we’re going to extend our existing project with application logic to automatically calculate the total amount based on the item prices. And since application logic needs to be tested, we’ll also create a unit test to automatically test our new application logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-990615136"&gt;&lt;SPAN&gt;Adding application logic to our project&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Fire up the SAP Joule plugin again and choose the “Application Logic” step to get started. Adding application logic takes a few steps, as a first step we’ll need to open up the CDS Graphical Modeler and click the entity we’d like to extend with application logic. Once you’ve selected the entity you’ll notice a small menu appears next to the entity with some options. In this case be sure to click the “Add Logic” button as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_12-1711462247570.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86752i9A26C70096AA975D/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_12-1711462247570.png" alt="geertjanklaps_12-1711462247570.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the “add application logic” screen you’ll need to provide some details about the logic you’d like to implement. In this case we’re aiming to calculate the total value of the order when creating / updating an order, which means we’re going to apply our logic to the service entity. The service entity should already be preselected for you, if not please manually select the SalesOrders entity.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next to that you’ll need to provide a name for the logic you’d like to implement, in this case I’ve used “calculateTotalAmount”. You can also add an optional description to the logic. Creating the empty application logic handler is just a matter of clicking the “Add” button as shown below.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_13-1711462274713.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86758i33C57F9525927EF7/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_13-1711462274713.png" alt="geertjanklaps_13-1711462274713.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;As a next step define when the application logic should be executed, in this case we’ll use the “on” phase of the CAP handlers and choose the “UPDATE” and “CREATE” events to make sure our total amount is calculated on each update or create of a sales order.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once you’ve selected the phase and events, open up the code editor with the “Open Code Editor” button, so we can use SAP Joule to generate some logic for us.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_14-1711462298097.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86760iA5FAB84E1F3C620B/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_14-1711462298097.png" alt="geertjanklaps_14-1711462298097.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After opening the application logic code editor, open SAP Joule through the “Implement Application Logic” step and provide the requirement so SAP Joule can create a proposal implementation. In this case I used the following requirement: “Calculate the total amount based on the item total price”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’re happy with the proposed implementation, accept it through the button in the top right corner of the proposal to add it to the application logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_15-1711462325458.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86762iEBD73278619F580F/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_15-1711462325458.png" alt="geertjanklaps_15-1711462325458.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We’ve now successfully implemented our application logic to calculate the total amount of the order. In the next step we’ll create a unit test, to automatically validate the implementation during e.g. our build / deployment pipelines.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-794101631"&gt;&lt;SPAN&gt;Adding unit tests to our project&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;To add a unit test to our project, we have to follow a similar approach as we did to add application logic. In the application logic screen, select the previously created application logic and choose “Open Code Editor”. Now choose the option “Unit test” instead of “Application Logic”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_16-1711462371663.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86763i52468C1D4B8A4A60/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_16-1711462371663.png" alt="geertjanklaps_16-1711462371663.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Now you can use SAP Joule again to generate the unit test. In this case I’ve used following requirement: “Generate a unit test to validate if the total amount is equal to the sum of the total price of the order items”.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After SAP Joule generates a proposal, you’ll even see that you get an explanation of what the test should do below the proposal. If you’re fine with the proposal, you can accept the proposal again using the button in the top right of the proposal to add it to the unit test logic.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_17-1711462395188.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86764i1CE097E065B401B0/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_17-1711462395188.png" alt="geertjanklaps_17-1711462395188.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We can now test our application through the unit test, by opening a terminal (menu -&amp;gt; terminal -&amp;gt; new terminal) and executing command: “npm run test”. Below I’ve highlighted each step in the unit test and the corresponding result in the terminal.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_18-1711462415039.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86765i742570AC832D3806/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_18-1711462415039.png" alt="geertjanklaps_18-1711462415039.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-597588126"&gt;&lt;SPAN&gt;Running and previewing our backing service&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;To run the application, simply open the run configurations menu and open the generated run configuration. By clicking the run button, the application will be started with the test data we created earlier.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_19-1711462448512.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86766iAEA775BCD14FB5A0/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_19-1711462448512.png" alt="geertjanklaps_19-1711462448512.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When you open the running application, you’ll be greeted by a new beautiful overview screen listing both UI applications and backend services. In this case we only have a backend service for now. To preview the service you have two options, with the table view you’ll get a Fiori Elements (list report) preview with the code preview you’ll just see the resulting JSON data.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_20-1711462468126.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86768i4F83A8AA94369B77/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_20-1711462468126.png" alt="geertjanklaps_20-1711462468126.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When opening up the table preview, you’ll notice that when SAP Joule generated our data model it already included the necessary list report annotations and labels.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_21-1711462489854.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86769iAED843349ABE329A/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_21-1711462489854.png" alt="geertjanklaps_21-1711462489854.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_22-1711462519002.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86770i3CD78A6D44598676/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_22-1711462519002.png" alt="geertjanklaps_22-1711462519002.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Opening up the code preview just gives a JSON response with our test data:&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_23-1711462534357.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86771iDDE6C6E28A971779/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_23-1711462534357.png" alt="geertjanklaps_23-1711462534357.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;We’ve now successfully created a fully functional backend service with application logic, corresponding unit test and are able to run the application in preview mode. In the next blog we’ll see how we can add a SAP Fiori Elements template and deploy it to SAP Business Technology Platform.&lt;/P&gt;&lt;H3 id="toc-hId-530157340"&gt;&lt;SPAN&gt;Blog series navigation&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 1 - Welcome to the lobby&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 2 – Kickstarting your project with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 3 – Adding application logic and unit tests with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 4 – Adding a SAPUI5 application and deploying to SAP BTP&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 5 – My personal experience and final thoughts&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054"/>
    <published>2024-03-27T09:02:00.070000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078</id>
    <title>SAP Build Code blog series: 4 – Adding a SAPUI5 application and deploying to SAP BTP</title>
    <updated>2024-03-27T09:03:00.059000+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;In the previous blog posts, we’ve created a project in which we now have a fully functional CAP backend service, but what is a backend service without a user interface? In this blog post we will extend our project with an SAPUI5-based application and deploy it to SAP Business Technology Platform.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-990615202"&gt;&lt;SPAN&gt;Adding a SAPUI5 application to manage sales orders to our project&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;In the project story board, click the “+” button under the UI applications section to get started.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_13-1711462775828.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86773i7778E20B8F63588D/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_13-1711462775828.png" alt="geertjanklaps_13-1711462775828.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the first step, add a display name, application name and description for your application and click the “next” button.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_14-1711462797268.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86774i807ACF31D1BE0577/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_14-1711462797268.png" alt="geertjanklaps_14-1711462797268.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the next step, select the type of UI application you want to add to the project. There are two options here, either a Template-Based, Responsive Application (SAPUI5 application) or a Mobile-Centric, Freestyle Application (SAP Mobile Services-based application). &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;For the sake of simplicity in this blog series, we’ll use a Template-Based, Responsive Application. But now you can perfectly create a native mobile application from here as well leveraging SAP Mobile Services.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_15-1711462815875.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86775i2F60619184B64E97/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_15-1711462815875.png" alt="geertjanklaps_15-1711462815875.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Choose the right template you’d like to use; in the case of our project the most logical / recommended template would be the List Report Page. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_16-1711462837362.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86777iCB11EED0BAB951CB/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_16-1711462837362.png" alt="geertjanklaps_16-1711462837362.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After selecting the right template, configure the necessary data objects. In this case we’ll just select the SalesOrders entity and select none as the navigation entity. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_17-1711462859899.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86779i92AE8C37755BD2F4/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_17-1711462859899.png" alt="geertjanklaps_17-1711462859899.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;After finishing the guided experience, the SAPUI5 app will be generated, added to the story board and you’ll see the Fiori Tooling Page Map show up after clicking the UI Application.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_18-1711462880318.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86780i8FA69EF0AB7DCEA0/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_18-1711462880318.png" alt="geertjanklaps_18-1711462880318.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;There’s no need to do changes at this point, since we saw in the previous blog post that SAP Joule already generated the necessary annotations for our project. If you run the project again, you’ll now see that the project overview also contains an application. By clicking the tile, you can start the application.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_19-1711462900494.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86781iD712343D28FDE390/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_19-1711462900494.png" alt="geertjanklaps_19-1711462900494.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-794101697"&gt;&lt;SPAN&gt;Deploying our project to SAP Business Technology Platform&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;As a final step for our project, we’ll deploy our project to SAP Business Technology Platform. I’m not going to dive into the details on how to prepare your cloud foundry space here, since this is well documented. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Just make sure your cloud foundry organization has access to following services for this example:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Connectivity Service (lite plan)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;SAP HANA Schemas &amp;amp; HDI Containers (hdi-shared plan)&lt;/LI&gt;&lt;LI&gt;Destination Service (lite plan)&lt;/LI&gt;&lt;LI&gt;HTML5 Application Repository Service (app-host plan)&lt;/LI&gt;&lt;LI&gt;Application Logging Service (lite plan)&lt;/LI&gt;&lt;LI&gt;Authorization and Trust Management (application plan)&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;To deploy the full project to SAP Business Technology Platform, SAP Build Code has a task available. You’ll find the task in the Task Explorer. Open the task and click the “Deploy” button to start the deployment process.&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_20-1711462934189.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86783iDD52C0B8189A3556/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_20-1711462934189.png" alt="geertjanklaps_20-1711462934189.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’re not logged in to Cloud Foundry yet, you’ll be asked to login to Cloud Foundry and select the space you want to deploy to.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_21-1711462961408.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86784i9520FEF420919B7D/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_21-1711462961408.png" alt="geertjanklaps_21-1711462961408.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_22-1711462974593.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86785i41F170F7DC228D27/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_22-1711462974593.png" alt="geertjanklaps_22-1711462974593.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Once the deployment process is complete, you’ll see the overview URL displayed in the terminal.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_23-1711462995771.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86786i92DF7A746F642463/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_23-1711462995771.png" alt="geertjanklaps_23-1711462995771.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Going to the SAP Business Technology Platform cockpit you’ll find the HTML5 applications as usual.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_24-1711463013604.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86787iBC7AF08AA2608F43/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_24-1711463013604.png" alt="geertjanklaps_24-1711463013604.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Same applies for the backend services.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_25-1711463032473.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86788iAB6F5C8E69D260D7/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_25-1711463032473.png" alt="geertjanklaps_25-1711463032473.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;We’ve now manually deployed our application to SAP Business Technology Platform, which is great! We actually have a fully working application created through generative AI without changing anything manually. (disclaimer: for more complex cases, you’ll need to do manual implementations as well)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In the next blog post, I’ll give you some last insights, personal experience and final thoughts on using SAP Build Code.&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-726670911"&gt;&lt;SPAN&gt;Blog series navigation&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 1 - Welcome to the lobby&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 2 – Kickstarting your project with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 3 – Adding application logic and unit tests with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 4 – Adding a SAPUI5 application and deploying to SAP BTP&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 5 – My personal experience and final thoughts&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078"/>
    <published>2024-03-27T09:03:00.059000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082</id>
    <title>SAP Build Code blog series: 5 – My personal experience and final thoughts</title>
    <updated>2024-03-27T09:04:00.036000+01:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;&lt;SPAN&gt;We’ve now completed an end-to-end application development cycle using SAP Build Code. We have a minimal application running which we generated using generative AI offered to us by SAP Joule.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;In this last blog post, I’ll give you some last insights and my personal thoughts on SAP Build Code.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-990615227"&gt;&lt;SPAN&gt;Using SAP Build Code from VS Code&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Since SAP Build Code uses SAP Business Application Studio as a foundation it is possible to connect SAP Build Code to VS Code using the SAP Business Application Studio Toolkit plugin. I was very happy to see this was still working fine, including all the SAP Build Code plugins (which also includes SAP Joule).&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’ve never tried this out with Business Application Studio, I suggest you read my &lt;A href="https://community.sap.com/t5/technology-blogs-by-members/access-sap-business-application-studio-as-a-remote-from-visual-studio-code/ba-p/13565427" target="_blank"&gt;previous&lt;/A&gt; blog post. (the instructions are identical for SAP Build Code)&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="geertjanklaps_1-1711463313183.png" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/86790iD2BD830EEE82152F/image-size/large?v=v2&amp;amp;px=999" role="button" title="geertjanklaps_1-1711463313183.png" alt="geertjanklaps_1-1711463313183.png" /&gt;&lt;/span&gt;&lt;/P&gt;&lt;H2 id="toc-hId-794101722"&gt;&lt;SPAN&gt;My personal experience&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;It’s been fun to be able to play around with SAP Build Code during the pilot phase. I’m 100% convinced that SAP Build Code can make a difference in terms of development efficiency. The way of working through the lobby definitively feels like SAP is bridging the gap between pro-code developers and low-code / no-code developers, thus improving the so-called fusion development projects. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;If you’ve used SAP Business Application Studio before, you’ll definitely find your way through the development flow of SAP Build Code. I didn’t need any specific documentation to get started with SAP Build Code, so in my opinion the way of working in SAP Build Code definitely feels intuitive.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Next to being intuitive and the fact that I was able to generate the application, test data, application logic &amp;amp; unit test using SAP Joule, it really felt like my focus was now more on the pure development process compared to using Business Application Studio. SAP Build Code guided me through generating the right development artifacts and took away the complexity of creating deployment descriptors, so that’s definitely a big plus for me.&lt;/SPAN&gt;&lt;/P&gt;&lt;H2 id="toc-hId-597588217"&gt;&lt;SPAN&gt;My final thoughts&lt;/SPAN&gt;&lt;/H2&gt;&lt;P&gt;&lt;SPAN&gt;Generative AI has a huge potential and personally I think we’ve seen nothing yet, I’m very interested in seeing what the future holds for us as pro-code developers. However, even though generative AI is a great technology to assist us developers, a fair warning should be issued: never (ever!) blindly trust the results of generative AI! While the proposed solutions may look very promising, this is not always the case. It’s still up to us developers to:&lt;/SPAN&gt;&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;&lt;SPAN&gt;Verify the generated logic&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Check if the proposed logic is the most efficient implementation (if not, manually adapt!)&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;Ensure that the generated logic is not causing bugs with other existing logic&lt;/SPAN&gt;&lt;/LI&gt;&lt;LI&gt;&lt;SPAN&gt;…&lt;/SPAN&gt;&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;SPAN&gt;To put it in short: we as developers are still responsible for the final result!&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;When it comes to SAP Build Code, as an experienced developer, I personally hope to see some more advanced features in the future, like for example: TypeScript support, support for existing CAP projects not created with SAP Build Code and combining GitHub Co-pilot with SAP Build Code. As this is the first release of SAP Build Code, which already covers a lot, I’m not calling these a dealbreaker. I’m 100% convinced that we’ll see SAP Build Code’s feature set grow in the coming months and years.&lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;Apart from those more advanced features, I think this definitely is a major game changer for developers setting their first steps into the world of SAP Cloud development or to developers who are not that experienced in SAP Cloud development yet. &lt;/SPAN&gt;&lt;/P&gt;&lt;P&gt;&lt;SPAN&gt;All in all, I definitely recommend you to try out SAP Build Code yourself, regardless of the fact that you’re an experienced or a beginner in SAP Cloud Development! Happy (SAP Build) Coding!&lt;/SPAN&gt;&lt;/P&gt;&lt;H3 id="toc-hId-530157431"&gt;&lt;SPAN&gt;Blog series navigation&lt;/SPAN&gt;&lt;/H3&gt;&lt;UL&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-1-welcome-to-the-lobby/ba-p/13646093" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 1 - Welcome to the lobby&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-2-kickstarting-your-project-with-sap-joule/ba-p/13650023" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 2 – Kickstarting your project with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-3-adding-application-logic-and-unit-tests-with/ba-p/13650054" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 3 – Adding application logic and unit tests with SAP Joule&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-4-adding-a-sapui5-application-and-deploying-to/ba-p/13650078" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 4 – Adding a SAPUI5 application and deploying to SAP BTP&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;LI&gt;&lt;A href="https://community.sap.com/t5/technology-blogs-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082" target="_self"&gt;&lt;SPAN&gt;SAP Build Code blog series: 5 – My personal experience and final thoughts&lt;/SPAN&gt;&lt;/A&gt;&lt;/LI&gt;&lt;/UL&gt;</content>
    <link href="https://community.sap.com/t5/technology-blog-posts-by-members/sap-build-code-blog-series-5-my-personal-experience-and-final-thoughts/ba-p/13650082"/>
    <published>2024-03-27T09:04:00.036000+01:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/index-cds-not-automatically-honored-in-cap-node-js-plugins/qaa-p/13883390#M4886207</id>
    <title>Re: index.cds not automatically honored in CAP node.js pl...</title>
    <updated>2024-09-30T20:01:41.989000+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi&amp;nbsp;&lt;a href="https://community.sap.com/t5/user/viewprofilepage/user-id/268"&gt;@martinstenzig&lt;/a&gt;,&lt;/P&gt;&lt;P&gt;Did you try adding a requires section to your plugin referencing the model?&lt;/P&gt;&lt;P&gt;Haven't tested it myself, but for example the change-tracking plugin uses an index.cds and adds a reference to the model in the requires section of package.json of the plugin. (Which I assume will automatically load the contents of the index.cds file when the plugin configuration is merged with the root project's configuration)&lt;/P&gt;&lt;P&gt;&lt;A href="https://github.com/cap-js/change-tracking/blob/457a2a0cf9c95f3c4af75dc23dfcd68ce2aa30ee/package.json#L35" target="_blank" rel="noopener nofollow noreferrer"&gt;https://github.com/cap-js/change-tracking/blob/457a2a0cf9c95f3c4af75dc23dfcd68ce2aa30ee/package.json#L35&lt;/A&gt;&lt;/P&gt;&lt;P&gt;Worth a try I think&amp;nbsp;&lt;span class="lia-unicode-emoji" title=":smiling_face_with_smiling_eyes:"&gt;😊&lt;/span&gt;&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/index-cds-not-automatically-honored-in-cap-node-js-plugins/qaa-p/13883390#M4886207"/>
    <published>2024-09-30T20:01:41.989000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/devtoberfest-discussions/techtoberfest-2024/m-p/13889851#M1573</id>
    <title>Re: 🟡 Techtoberfest 2024</title>
    <updated>2024-10-06T19:55:29.075000+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt; &lt;BR /&gt;My dev-space. Ubuntu as main OS.&lt;/P&gt;&lt;P&gt;My favourite vs code extensions:&lt;/P&gt;&lt;UL&gt;&lt;LI&gt;GitHub (copilot, actions, pull requests)&lt;/LI&gt;&lt;LI&gt;todo tree&lt;/LI&gt;&lt;LI&gt;dev containers&lt;/LI&gt;&lt;LI&gt;sqlite viewer&lt;/LI&gt;&lt;/UL&gt;&lt;P&gt;&lt;span class="lia-inline-image-display-wrapper lia-image-align-inline" image-alt="IMG_4748.jpeg" style="width: 4032px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/175868i86AF1F526A1DD9C4/image-size/medium?v=v2&amp;amp;px=400" role="button" title="IMG_4748.jpeg" alt="IMG_4748.jpeg" /&gt;&lt;/span&gt;&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/devtoberfest-discussions/techtoberfest-2024/m-p/13889851#M1573"/>
    <published>2024-10-06T19:55:29.075000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/my-sap-teched-virtual-viewing-setup/enjoying-teched-virtual-while-developing-cap-solutions/cns-p/13893743</id>
    <title>Enjoying TechEd virtual while developing CAP solutions</title>
    <updated>2024-10-09T10:59:11.470000+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;span class="lia-inline-image-display-wrapper" image-alt="IMG_4760.jpeg" style="width: 999px;"&gt;&lt;img src="https://community.sap.com/t5/image/serverpage/image-id/177436i4908BF0B1BD54047/image-size/large?v=v2&amp;amp;px=999" role="button" title="IMG_4760.jpeg" alt="IMG_4760.jpeg" /&gt;&lt;/span&gt;</content>
    <link href="https://community.sap.com/t5/my-sap-teched-virtual-viewing-setup/enjoying-teched-virtual-while-developing-cap-solutions/cns-p/13893743"/>
    <published>2024-10-09T10:59:11.470000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/sap-cap-amp-ui5-fiori-elements-state-message-handling-recommendations/qaq-p/13896746</id>
    <title>SAP CAP &amp; UI5 / Fiori Elements - State message handling recommendations / approach</title>
    <updated>2024-10-11T15:50:16.155000+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;&lt;P&gt;I'm looking for a solution to handle state messages in SAP CAP, combined with SAP Fiori Elements.&lt;/P&gt;&lt;P&gt;According to the UI5 documentation, state messages should be part of the response payload.&amp;nbsp;&lt;A href="https://ui5.sap.com/#/topic/fbe1cb5613cf4a40a841750bf813238e.html#loiofbe1cb5613cf4a40a841750bf813238e/section_LMFSM" target="_blank" rel="noopener noreferrer"&gt;https://ui5.sap.com/#/topic/fbe1cb5613cf4a40a841750bf813238e.html#loiofbe1cb5613cf4a40a841750bf813238e/section_LMFSM&lt;/A&gt;&lt;/P&gt;&lt;P&gt;I'm in the situation where I have a business object modelled in CAP, which can contain multiple errors (background processing / jobs) where a user will finally need to make some manual changes to the object. Basically, clear case of state messages (messages don't change as long as the object doesn't change).&lt;/P&gt;&lt;P&gt;Currently it seems like CAP only supports transition messages out of the box with e.g. req.info, req.error...&lt;/P&gt;&lt;P&gt;I'd like to get to a situation where these messages are captured in the backend and provided as state messages to the frontend, so that when a user opens the object in change mode, the state messages are properly shown.&lt;/P&gt;&lt;P&gt;I couldn't find an example of this scenario and the CAP documentation doesn't seem to mention an approach&amp;nbsp; / recommendation for this scenario.&amp;nbsp;&lt;/P&gt;&lt;P&gt;Any pointers in the right direction are greatly appreciated!&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/sap-cap-amp-ui5-fiori-elements-state-message-handling-recommendations/qaq-p/13896746"/>
    <published>2024-10-11T15:50:16.155000+02:00</published>
  </entry>
  <entry>
    <id>https://community.sap.com/t5/technology-q-a/sap-cap-amp-ui5-fiori-elements-state-message-handling-recommendations/qaa-p/13896977#M4887962</id>
    <title>Re: SAP CAP &amp; UI5 / Fiori Elements - State message handli...</title>
    <updated>2024-10-11T20:50:48.206000+02:00</updated>
    <author>
      <name>geert-janklaps</name>
      <uri>https://community.sap.com/t5/user/viewprofilepage/user-id/868</uri>
    </author>
    <content>&lt;P&gt;Hi,&lt;/P&gt;&lt;P&gt;Unfortunately, the documentation also states that the messages get transported to the sap-messages header of the http response. Error messages go to the error response in the body of the response.&lt;/P&gt;&lt;P&gt;For state messages, the messages should be part of the object response.&lt;/P&gt;&lt;P&gt;Cheers,&lt;/P&gt;&lt;P&gt;Geert-Jan&lt;/P&gt;</content>
    <link href="https://community.sap.com/t5/technology-q-a/sap-cap-amp-ui5-fiori-elements-state-message-handling-recommendations/qaa-p/13896977#M4887962"/>
    <published>2024-10-11T20:50:48.206000+02:00</published>
  </entry>
</feed>
